{"file_name": "/home/qj213/afp-2021-10-22/thys/Floyd_Warshall/Floyd_Warshall.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Floyd_Warshall", "problem_names": ["lemma cnt_rev: \"cnt x (rev xs) = cnt x xs\"", "lemma remove_cycles_removes: \"cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys)\"", "lemma remove_cycles_id: \"x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x ys = rev ys @ xs\"", "lemma remove_cycles_cnt_id:\n  \"x \\<noteq> y \\<Longrightarrow> cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs\"", "lemma remove_cycles_ends_cycle: \"remove_cycles xs x ys \\<noteq> rev ys @ xs \\<Longrightarrow> x \\<in> set xs\"", "lemma remove_cycles_begins_with: \"x \\<in> set xs \\<Longrightarrow> \\<exists> zs. remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs\"", "lemma remove_cycles_self:\n  \"x \\<in> set xs \\<Longrightarrow> remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys\"", "lemma remove_cycles_one: \"remove_cycles (as @ x # xs) x ys = remove_cycles (x#xs) x ys\"", "lemma remove_cycles_cycles:\n  \"\\<exists> xxs as. as @ concat (map (\\<lambda> xs. x # xs) xxs) @ remove_cycles xs x ys = xs \\<and> x \\<notin> set as\"\n  if \"x \\<in> set xs\"", "lemma start_remove_decomp:\n  \"x \\<in> set xs \\<Longrightarrow> \\<exists> as bs. xs = as @ x # bs \\<and> start_remove xs x ys = rev ys @ as @ remove_cycles bs x [x]\"", "lemma start_remove_removes: \"cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys)\"", "lemma start_remove_id[simp]: \"x \\<notin> set xs \\<Longrightarrow> start_remove xs x ys = rev ys @ xs\"", "lemma start_remove_cnt_id:\n  \"x \\<noteq> y \\<Longrightarrow> cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs\"", "lemma cnt_remove_all_mono:\"cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys)\"", "lemma cnt_remove_all_cycles: \"x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ys) \\<le> 1\"", "lemma cnt_mono:\n  \"cnt a (b # xs) \\<le> cnt a (b # c # xs)\"", "lemma cnt_distinct_intro: \"\\<forall> x \\<in> set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\"", "lemma remove_cycles_subs:\n  \"set (remove_cycles xs x ys) \\<subseteq> set xs \\<union> set ys\"", "lemma start_remove_subs:\n  \"set (start_remove xs x ys) \\<subseteq> set xs \\<union> set ys\"", "lemma remove_all_cycles_subs:\n  \"set (remove_all_cycles xs ys) \\<subseteq> set ys\"", "lemma remove_all_cycles_distinct: \"set ys \\<subseteq> set xs \\<Longrightarrow> distinct (remove_all_cycles xs ys)\"", "lemma distinct_remove_cycles_inv: \"distinct (xs @ ys) \\<Longrightarrow> distinct (remove_cycles xs x ys)\"", "lemma remove_all_distinct:\n  \"distinct xs \\<Longrightarrow> distinct (x # remove_all x xs)\"", "lemma remove_all_removes:\n  \"x \\<notin> set (remove_all x xs)\"", "lemma remove_all_subs:\n  \"set (remove_all x xs) \\<subseteq> set xs\"", "lemma remove_all_rev_distinct: \"distinct xs \\<Longrightarrow> distinct (x # remove_all_rev x xs)\"", "lemma remove_all_rev_removes: \"x \\<notin> set (remove_all_rev x xs)\"", "lemma remove_all_rev_subs: \"set (remove_all_rev x xs) \\<subseteq> set xs\"", "lemma rem_cycles_distinct': \"i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)\"", "lemma rem_cycles_removes_last: \"j \\<notin> set (rem_cycles i j xs)\"", "lemma rem_cycles_distinct: \"distinct (rem_cycles i j xs)\"", "lemma rem_cycles_subs: \"set (rem_cycles i j xs) \\<subseteq> set xs\"", "lemma fw_upd_mono:\n  \"fw_upd m k i j i' j' \\<le> m i' j'\"", "lemma fw_upd_out_of_bounds1:\n  assumes \"i' > i\"\n  shows \"(fw_upd M k i j) i' j' = M i' j'\"", "lemma fw_upd_out_of_bounds2:\n  assumes \"j' > j\"\n  shows \"(fw_upd M k i j) i' j' = M i' j'\"", "lemma fwi_out_of_bounds1:\n  assumes \"i' > n\" \"i \\<le> n\"\n  shows \"(fwi M n k i j) i' j' = M i' j'\"", "lemma fw_out_of_bounds1:\n  assumes \"i' > n\"\n  shows \"(fw M n k) i' j' = M i' j'\"", "lemma fwi_out_of_bounds2:\n  assumes \"j' > n\" \"j \\<le> n\"\n  shows \"(fwi M n k i j) i' j' = M i' j'\"", "lemma fw_out_of_bounds2:\n  assumes \"j' > n\"\n  shows \"(fw M n k) i' j' = M i' j'\"", "lemma fwi_invariant_aux_1:\n  \"j'' \\<le> j \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j'\"", "lemma fwi_invariant:\n  \"j \\<le> n \\<Longrightarrow> i'' \\<le> i \\<Longrightarrow> j'' \\<le> j\n   \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'\"", "lemma single_row_inv:\n  \"j' < j \\<Longrightarrow> fwi m n k i' j i' j' = fwi m n k i' j' i' j'\"", "lemma single_iteration_inv':\n  \"i' < i \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j'\"", "lemma single_iteration_inv:\n  \"i' \\<le> i \\<Longrightarrow> j' \\<le> j \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j'\"", "lemma fwi_innermost_id:\n  \"i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j\"", "lemma fwi_middle_id:\n  \"j' < j \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> fwi m n k i' j' i j = m i j\"", "lemma fwi_outermost_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fwi m n k i j i j \\<le> m i j\"", "lemma fwi_mono:\n  \"fwi m n k i' j' i j \\<le> m i j\" if \"i \\<le> n\" \"j \\<le> n\"", "lemma Suc_innermost_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k i j\"", "lemma fw_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n k i j \\<le> m i j\"", "lemma fwi_step:\n  \"m k k \\<ge> 0 \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fwi m n k i j i j = min (m i j) (m i k + m k j)\"", "lemma len_decomp: \"xs = ys @ y # zs \\<Longrightarrow> len m x z xs = len m x y ys + len m y z zs\"", "lemma len_comp: \"len m a c (xs @ b # ys) = len m a b xs + len m b c ys\"", "lemma canonical_subs_len:\n  \"M i j \\<le> len M i j xs\" if \"canonical_subs n I M\" \"i \\<le> n\" \"j \\<le> n\" \"set xs \\<subseteq> I\" \"I \\<subseteq> {0..n}\"", "lemma fwi_step':\n  \"fwi m n k i' j' i j = min (m i j) (m i k + m k j)\" if\n  \"m k k \\<ge> 0\" \"i' \\<le> n\" \"j' \\<le> n\" \"k \\<le> n\" \"i \\<le> i'\" \"j \\<le> j'\"", "lemma fwi_canonical_extend:\n  \"canonical_subs n (I \\<union> {k}) (fwi m n k n n)\" if\n  \"canonical_subs n I m\" \"I \\<subseteq> {0..n}\" \"0 \\<le> m k k\" \"k \\<le> n\"", "lemma fwi_cyc_free_diag:\n  \"fwi m n k n n i i \\<ge> 0\" if\n  \"cyc_free_subs n I m\" \"0 \\<le> m k k\" \"k \\<le> n\" \"k \\<in> I\" \"i \\<le> n\"", "lemma cyc_free_subs_diag:\n  \"m i i \\<ge> 0\" if \"cyc_free_subs n I m\" \"i \\<le> n\"", "lemma fwi_cyc_free_subs':\n  \"cyc_free_subs n (I \\<union> {k}) (fwi m n k n n)\" if\n  \"cyc_free_subs n I m\" \"canonical_subs n I m\" \"I \\<subseteq> {0..n}\" \"k \\<le> n\"\n  \"\\<forall> i \\<le> n. fwi m n k n n i i \\<ge> 0\"", "lemma fwi_cyc_free_subs:\n  \"cyc_free_subs n (I \\<union> {k}) (fwi m n k n n)\" if\n  \"cyc_free_subs n (I \\<union> {k}) m\" \"canonical_subs n I m\" \"I \\<subseteq> {0..n}\" \"k \\<le> n\"", "lemma canonical_subs_empty [simp]:\n  \"canonical_subs n {} m\"", "lemma fwi_neg_diag_neg_cycle:\n  \"\\<exists> i \\<le> n. \\<exists> xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < 0\" if \"fwi m n k n n i i < 0\" \"i \\<le> n\" \"k \\<le> n\"", "lemma fwi_len:\n  \"\\<exists> ys. set ys \\<subseteq> set xs \\<union> {k} \\<and> len (fwi m n k n n) i j xs = len m i j ys\"\n  if \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\" \"m k k \\<ge> 0\" \"set xs \\<subseteq> {0..n}\"", "lemma fwi_neg_cycle_neg_cycle:\n  \"\\<exists> i \\<le> n. \\<exists> ys. set ys \\<subseteq> set xs \\<union> {k} \\<and> len m i i ys < 0\" if\n  \"len (fwi m n k n n) i i xs < 0\" \"i \\<le> n\" \"k \\<le> n\" \"set xs \\<subseteq> {0..n}\"", "lemma fw_neg_diag_neg_cycle:\n  \"\\<exists> i \\<le> n. \\<exists> ys. set ys \\<subseteq> set xs \\<union> {0..k} \\<and> len m i i ys < 0\" if\n  \"len (fw m n k) i i xs < 0\" \"i \\<le> n\" \"k \\<le> n\" \"set xs \\<subseteq> {0..n}\"", "theorem fw_correct:\n  \"canonical_subs n {0..k} (fw m n k) \\<and> cyc_free_subs n {0..k} (fw m n k)\"\n  if \"cyc_free_subs n {0..k} m\" \"k \\<le> n\"", "lemmas fw_canonical_subs = fw_correct[THEN conjunct1]", "lemmas fw_cyc_free_subs = fw_correct[THEN conjunct2]", "lemmas cyc_free_diag = cyc_free_subs_diag", "lemma distinct_length_le:\"finite s \\<Longrightarrow> set xs \\<subseteq> s \\<Longrightarrow> distinct xs \\<Longrightarrow> length xs \\<le> card s\"", "lemma finite_distinct: \"finite s \\<Longrightarrow> finite {xs . set xs \\<subseteq> s \\<and> distinct xs}\"", "lemma D_base_finite:\n  \"finite {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\"", "lemma D_base_finite':\n  \"finite {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\"", "lemma D_base_finite'':\n  \"finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"", "lemma D_eqI:\n  fixes m n i j k\n  defines \"A \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k}}\"\n  defines \"A_distinct \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"\n  assumes \"cycle_free m n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\" \"(\\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y)\" \"x \\<in> A\"\n  shows \"D m i j k = x\"", "lemma D_base_not_empty:\n   \"{len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq> {}\"", "lemma Min_elem_dest: \"finite A \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow> x = Min A \\<Longrightarrow> x \\<in> A\"", "lemma D_dest: \"x = D m i j k \\<Longrightarrow>\n  x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"", "lemma D_dest': \"x = D m i j k \\<Longrightarrow> x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k}}\"", "lemma D_dest'': \"x = D m i j k \\<Longrightarrow> x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\"", "lemma cycle_free_loop_dest: \"i \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> cycle_free m n \\<Longrightarrow> len m i i xs \\<ge> 0\"", "lemma cycle_free_dest:\n  \"cycle_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n}\n    \\<Longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs\"", "lemma cycle_free_up_to_loop_dest:\n  \"i \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..k} \\<Longrightarrow> cycle_free_up_to m k n \\<Longrightarrow> len m i i xs \\<ge> 0\"", "lemma cycle_free_up_to_diag:\n  assumes \"cycle_free_up_to m k n\" \"i \\<le> n\"\n  shows \"m i i \\<ge> 0\"", "lemma D_eqI2:\n  fixes m n i j k\n  defines \"A \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k}}\"\n  defines \"A_distinct \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"\n  assumes \"cycle_free_up_to m k n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"\n          \"(\\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y)\" \"x \\<in> A\"\n  shows \"D m i j k = x\"", "lemma canonical_D:\n  assumes\n    \"cycle_free_up_to m k n\" \"canonical_subs n {0..k} m\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"\n  shows \"D m i j k = m i j\"", "theorem fw_subs_len:\n  \"(fw m n k) i j \\<le> len m i j xs\" if\n  \"cyc_free_subs n {0..k} m\" \"k \\<le> n\" \"i \\<le> n\" \"j \\<le> n\" \"set xs \\<subseteq> I\" \"I \\<subseteq> {0..k}\"", "lemma fwi_len':\n  \"\\<exists> xs. set xs \\<subseteq> {k} \\<and> fwi m n k i' j' i j = len m i j xs\" if\n  \"m k k \\<ge> 0\" \"i' \\<le> n\" \"j' \\<le> n\" \"k \\<le> n\" \"i \\<le> i'\" \"j \\<le> j'\"", "lemma fw_len:\n  \"\\<exists> xs. set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs\" if\n  \"cyc_free_subs n {0..k} m\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"", "lemma remove_cycles_neg_cycles_aux:\n  fixes i xs ys\n  defines \"xs' \\<equiv> i # ys\"\n  assumes \"i \\<notin> set ys\"\n  assumes \"i \\<in> set xs\"\n  assumes \"xs = as @ concat (map ((#) i) xss) @ xs'\"\n  assumes \"len m i j ys > len m i j xs\"\n  shows \"\\<exists> ys. set ys \\<subseteq> set xs \\<and> len m i i ys < 0\"", "lemma add_lt_neutral: \"a + b < b \\<Longrightarrow> a < 0\"", "lemma remove_cycles_neg_cycles_aux':\n  fixes j xs ys\n  assumes \"j \\<notin> set ys\"\n  assumes \"j \\<in> set xs\"\n  assumes \"xs = ys @ j # concat (map (\\<lambda> xs. xs @ [j]) xss) @ as\"\n  assumes \"len m i j ys > len m i j xs\"\n  shows \"\\<exists> ys. set ys \\<subseteq> set xs \\<and> len m j j ys < 0\"", "lemma add_le_impl: \"a + b < a + c \\<Longrightarrow> b < c\"", "lemma start_remove_neg_cycles:\n  \"len m i j (start_remove xs k []) > len m i j xs \\<Longrightarrow> \\<exists> ys. set ys \\<subseteq> set xs \\<and> len m k k ys < 0\"", "lemma remove_all_cycles_neg_cycles:\n  \"len m i j (remove_all_cycles ys xs) > len m i j xs\n  \\<Longrightarrow> \\<exists> ys k. set ys \\<subseteq> set xs \\<and> k \\<in> set xs \\<and> len m k k ys < 0\"", "lemma concat_map_cons_rev:\n  \"rev (concat (map ((#) j) xss)) = concat (map (\\<lambda> xs. xs @ [j]) (rev (map rev xss)))\"", "lemma negative_cycle_dest: \"len m i j (rem_cycles i j xs) > len m i j xs\n       \\<Longrightarrow> \\<exists> i' ys. len m i' i' ys < 0 \\<and> set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\"", "lemma cycle_free_alt_def:\n  \"cycle_free M n \\<longleftrightarrow> cycle_free_up_to M n n\"", "lemma negative_cycle_dest_diag:\n  \"\\<not> cycle_free_up_to m k n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> \\<exists> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<and> len m i i xs < 0\"", "lemma negative_cycle_dest_diag':\n  \"\\<not> cycle_free m n \\<Longrightarrow> \\<exists> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<and> len m i i xs < 0\"", "lemma cycle_free_diag_intro:\n  \"cyc_free m n \\<Longrightarrow> cycle_free m n\"", "lemma cycle_free_diag_equiv:\n  \"cyc_free m n \\<longleftrightarrow> cycle_free m n\"", "lemma cycle_free_diag_dest:\n  \"cycle_free m n \\<Longrightarrow> cyc_free m n\"", "lemma cycle_free_upto_diag_equiv:\n  \"cycle_free_up_to m k n \\<longleftrightarrow> cyc_free_subs n {0..k} m\" if \"k \\<le> n\"", "theorem fw_shortest_path_up_to:\n  \"D m i j k = fw m n k i j\" if \"cyc_free_subs n {0..k} m\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"", "lemma\n  \"cyc_free m n \\<longleftrightarrow> cyc_free_subs n {0..n} m\"", "lemma cycle_free_cycle_free_up_to:\n  \"cycle_free m n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> cycle_free_up_to m k n\"", "lemma cycle_free_diag:\n  \"cycle_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> 0 \\<le> m i i\"", "lemma not_cylce_free_dest: \"\\<not> cycle_free m n \\<Longrightarrow> \\<exists> k \\<le> n. \\<not> cycle_free_up_to m k n\"", "lemma D_not_diag_le:\n  \"(x :: 'a) \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<Longrightarrow> D m i j k \\<le> x\"", "lemma D_not_diag_le': \"set xs \\<subseteq> {0..k} \\<Longrightarrow> i \\<notin> set xs \\<Longrightarrow> j \\<notin> set xs \\<Longrightarrow> distinct xs\n  \\<Longrightarrow> D m i j k \\<le> len m i j xs\"", "lemma nat_upto_subs_top_removal':\n  \"S \\<subseteq> {0..Suc n} \\<Longrightarrow> Suc n \\<notin> S \\<Longrightarrow> S \\<subseteq> {0..n}\"", "lemma nat_upto_subs_top_removal:\n  \"S \\<subseteq> {0..n::nat} \\<Longrightarrow> n \\<notin> S \\<Longrightarrow> S \\<subseteq> {0..n - 1}\"", "lemma fw_invariant:\n  \"k' \\<le> k \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j\"", "lemma negative_len_shortest:\n  \"length xs = n \\<Longrightarrow> len m i i xs < 0\n    \\<Longrightarrow> \\<exists> j ys. distinct (j # ys) \\<and> len m j j ys < 0 \\<and> j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\"", "lemma fw_upd_leI:\n  \"fw_upd m' k i j i j \\<le> fw_upd m k i j i j\" if\n  \"m' i k \\<le> m i k\" \"m' k j \\<le> m k j\" \"m' i j \\<le> m i j\"", "lemma fwi_fw_upd_mono:\n  \"fwi m n k i j i j \\<le> fw_upd m k i j i j\" if \"k \\<le> n\" \"i \\<le> n\" \"j \\<le> n\"", "theorem FW_neg_cycle_detect:\n  \"\\<not> cyc_free m n \\<Longrightarrow> \\<exists> i \\<le> n. fw m n n i i < 0\"", "lemma canonical_alt_def:\n  \"canonical M n \\<longleftrightarrow> canonical_subs n {0..n} M\"", "lemma fw_canonical:\n \"canonical (fw m n n) n\" if \"cyc_free m n\"", "lemma canonical_len:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> M i j \\<le> len M i j xs\"", "lemma D_cycle_free_len_dest:\n  \"cycle_free m n\n    \\<Longrightarrow> \\<forall> i \\<le> n. \\<forall> j \\<le> n. D m i j n = m' i j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n}\n    \\<Longrightarrow> \\<exists> ys. set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys\"", "lemma D_cyc_free_preservation:\n  \"cyc_free m n \\<Longrightarrow> \\<forall> i \\<le> n. \\<forall> j \\<le> n. D m i j n = m' i j \\<Longrightarrow> cyc_free m' n\"", "lemma FW_out_of_bounds1:\n  assumes \"i > n\"\n  shows \"(FW M n) i j = M i j\"", "lemma FW_out_of_bounds2:\n  assumes \"j > n\"\n  shows \"(FW M n) i j = M i j\"", "lemma FW_cyc_free_preservation:\n  \"cyc_free m n \\<Longrightarrow> cyc_free (FW m n) n\"", "lemma cyc_free_diag_dest':\n  \"cyc_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> m i i \\<ge> 0\"", "lemma FW_diag_neutral_preservation:\n  \"\\<forall> i \\<le> n. M i i = 0 \\<Longrightarrow> cyc_free M n \\<Longrightarrow> \\<forall> i\\<le>n. (FW M n) i i = 0\"", "lemma FW_fixed_preservation:\n  fixes M :: \"('a::linordered_ab_monoid_add) mat\"\n  assumes A: \"i \\<le> n\" \"M 0 i + M i 0 = 0\" \"canonical (FW M n) n\" \"cyc_free (FW M n) n\"\n  shows \"FW M n 0 i + FW M n i 0 = 0\"", "lemma diag_cyc_free_neutral:\n  \"cyc_free M n \\<Longrightarrow> \\<forall>k\\<le>n. M k k \\<le> 0 \\<Longrightarrow> \\<forall>i\\<le>n. M i i = 0\"", "lemma fw_upd_canonical_subs_id:\n  \"canonical_subs n {k} M \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw_upd M k i j = M\"", "lemma fw_upd_canonical_id:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw_upd M k i j = M\"", "lemma fwi_canonical_id:\n  \"fwi M n k i j = M\" if \"canonical_subs n {k} M\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"", "lemma fw_canonical_id:\n  \"fw M n k = M\" if \"canonical_subs n {0..k} M\" \"k \\<le> n\"", "lemmas FW_canonical_id = fw_canonical_id[OF _ order.refl, unfolded canonical_alt_def[symmetric]]", "theorem fwi_characteristic:\n  \"canonical_subs n (I \\<union> {k::nat}) (FWI M n k) \\<or> (\\<exists> i \\<le> n. FWI M n k i i < 0)\" if\n  \"canonical_subs n I M\" \"I \\<subseteq> {0..n}\" \"k \\<le> n\""], "translations": [["", "lemma cnt_rev: \"cnt x (rev xs) = cnt x xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (rev xs) = cnt x xs", "by (metis length_rev rev_filter)"], ["", "value \"as @ [x] @ bs @ [x] @ cs @ [x] @ ds\""], ["", "lemma remove_cycles_removes: \"cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys)", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys. cnt x (remove_cycles [] x ys) \\<le> max 1 (cnt x ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ys. cnt x (remove_cycles [] x ys) \\<le> max 1 (cnt x ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (remove_cycles [] x ys) \\<le> max 1 (cnt x ys)", "by (simp, cases \"x \\<in> set ys\", (auto simp: cnt_rev[of x ys]))"], ["proof (state)\nthis:\n  cnt x (remove_cycles [] x ys) \\<le> max 1 (cnt x ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "case (Cons y xs)"], ["proof (state)\nthis:\n  cnt x (remove_cycles xs x ?ys) \\<le> max 1 (cnt x ?ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (remove_cycles xs x ys)\n           \\<le> max 1 (cnt x ys)) \\<Longrightarrow>\n       cnt x (remove_cycles (a # xs) x ys) \\<le> max 1 (cnt x ys)", "thus ?case"], ["proof (prove)\nusing this:\n  cnt x (remove_cycles xs x ?ys) \\<le> max 1 (cnt x ?ys)\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)\n 2. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)\n 2. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "using Cons[of \"[y]\"] True"], ["proof (prove)\nusing this:\n  x = y\n  cnt x (remove_cycles xs x [y]) \\<le> max 1 (cnt x [y])\n  x = y\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (remove_cycles xs x ys) \\<le> max 1 (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (remove_cycles (y # xs) x ys)\n                      \\<le> max 1 (cnt x ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "using Cons[of \"y # ys\"]"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  cnt x (remove_cycles xs x (y # ys)) \\<le> max 1 (cnt x (y # ys))\n\ngoal (1 subgoal):\n 1. cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt x (remove_cycles (y # xs) x ys) \\<le> max 1 (cnt x ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_id: \"x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x ys = rev ys @ xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x ys = rev ys @ xs", "by (induction xs arbitrary: ys) auto"], ["", "lemma remove_cycles_cnt_id:\n  \"x \\<noteq> y \\<Longrightarrow> cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs", "proof (induction xs arbitrary: ys x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys x.\n       x \\<noteq> y \\<Longrightarrow>\n       cnt y (remove_cycles [] x ys) \\<le> cnt y ys + cnt y []\n 2. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "case Nil"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (2 subgoals):\n 1. \\<And>ys x.\n       x \\<noteq> y \\<Longrightarrow>\n       cnt y (remove_cycles [] x ys) \\<le> cnt y ys + cnt y []\n 2. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles [] x ys) \\<le> cnt y ys + cnt y []", "by (simp add: cnt_rev)"], ["proof (state)\nthis:\n  cnt y (remove_cycles [] x ys) \\<le> cnt y ys + cnt y []\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "case (Cons z xs)"], ["proof (state)\nthis:\n  ?x \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs ?x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys x.\n       \\<lbrakk>\\<And>ys x.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (remove_cycles (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  ?x \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs ?x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "proof (cases \"x = z\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x = z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)\n 2. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "case True"], ["proof (state)\nthis:\n  x = z\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x = z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)\n 2. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = z\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "using Cons.IH[of z \"[z]\"] Cons.prems"], ["proof (prove)\nusing this:\n  x = z\n  z \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs z [z]) \\<le> cnt y [z] + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (remove_cycles xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_cycles (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "using Cons.IH[of x \"z # ys\"] Cons.prems False"], ["proof (prove)\nusing this:\n  x \\<noteq> z\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs x (z # ys)) \\<le> cnt y (z # ys) + cnt y xs\n  x \\<noteq> y\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt y (remove_cycles (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_ends_cycle: \"remove_cycles xs x ys \\<noteq> rev ys @ xs \\<Longrightarrow> x \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. remove_cycles xs x ys \\<noteq> rev ys @ xs \\<Longrightarrow>\n    x \\<in> set xs", "using remove_cycles_id"], ["proof (prove)\nusing this:\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  remove_cycles ?xs ?x ?ys = rev ?ys @ ?xs\n\ngoal (1 subgoal):\n 1. remove_cycles xs x ys \\<noteq> rev ys @ xs \\<Longrightarrow>\n    x \\<in> set xs", "by fastforce"], ["", "lemma remove_cycles_begins_with: \"x \\<in> set xs \\<Longrightarrow> \\<exists> zs. remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    \\<exists>zs. remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>zs. remove_cycles [] x ys = x # zs \\<and> x \\<notin> set zs\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "case Nil"], ["proof (state)\nthis:\n  x \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>zs. remove_cycles [] x ys = x # zs \\<and> x \\<notin> set zs\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set []\n\ngoal (1 subgoal):\n 1. \\<exists>zs. remove_cycles [] x ys = x # zs \\<and> x \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles [] x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "case (Cons y xs)"], ["proof (state)\nthis:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>zs.\n                      remove_cycles xs x ys = x # zs \\<and>\n                      x \\<notin> set zs;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>zs.\n                            remove_cycles (a # xs) x ys = x # zs \\<and>\n                            x \\<notin> set zs", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs\n 2. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs\n 2. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "proof (cases \"x \\<in> set xs\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "case 1"], ["proof (state)\nthis:\n  x = y\n  x \\<in> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "with Cons"], ["proof (chain)\npicking this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n  x = y\n  x \\<in> set xs", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n  x = y\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "case 2"], ["proof (state)\nthis:\n  x = y\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "with remove_cycles_id[of x xs \"[y]\"]"], ["proof (chain)\npicking this:\n  x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x [y] = rev [y] @ xs\n  x = y\n  x \\<notin> set xs", "show ?case"], ["proof (prove)\nusing this:\n  x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x [y] = rev [y] @ xs\n  x = y\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>zs.\n                   remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>zs.\n                         remove_cycles (y # xs) x ys = x # zs \\<and>\n                         x \\<notin> set zs", "with Cons"], ["proof (chain)\npicking this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n  x \\<noteq> y", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>zs. remove_cycles xs x ?ys = x # zs \\<and> x \\<notin> set zs\n  x \\<in> set (y # xs)\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<exists>zs.\n       remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>zs. remove_cycles (y # xs) x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_self:\n  \"x \\<in> set xs \\<Longrightarrow> remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "assume x:\"x \\<in> set xs\""], ["proof (state)\nthis:\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "then"], ["proof (chain)\npicking this:\n  x \\<in> set xs", "obtain ws where ws: \"remove_cycles xs x ys = x # ws\" \"x \\<notin> set ws\""], ["proof (prove)\nusing this:\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>remove_cycles xs x ys = x # ws; x \\<notin> set ws\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using remove_cycles_begins_with[OF x, of ys]"], ["proof (prove)\nusing this:\n  x \\<in> set xs\n  \\<exists>zs. remove_cycles xs x ys = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>remove_cycles xs x ys = x # ws; x \\<notin> set ws\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  remove_cycles xs x ys = x # ws\n  x \\<notin> set ws\n\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "from remove_cycles_id[OF this(2)]"], ["proof (chain)\npicking this:\n  remove_cycles ws x ?ys = rev ?ys @ ws", "have \"remove_cycles ws x [x] = x # ws\""], ["proof (prove)\nusing this:\n  remove_cycles ws x ?ys = rev ?ys @ ws\n\ngoal (1 subgoal):\n 1. remove_cycles ws x [x] = x # ws", "by auto"], ["proof (state)\nthis:\n  remove_cycles ws x [x] = x # ws\n\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "with ws(1)"], ["proof (chain)\npicking this:\n  remove_cycles xs x ys = x # ws\n  remove_cycles ws x [x] = x # ws", "show \"remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys\""], ["proof (prove)\nusing this:\n  remove_cycles xs x ys = x # ws\n  remove_cycles ws x [x] = x # ws\n\ngoal (1 subgoal):\n 1. remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys", "by simp"], ["proof (state)\nthis:\n  remove_cycles (remove_cycles xs x ys) x zs = remove_cycles xs x ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_one: \"remove_cycles (as @ x # xs) x ys = remove_cycles (x#xs) x ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. remove_cycles (as @ x # xs) x ys = remove_cycles (x # xs) x ys", "by (induction as arbitrary: ys) auto"], ["", "lemma remove_cycles_cycles:\n  \"\\<exists> xxs as. as @ concat (map (\\<lambda> xs. x # xs) xxs) @ remove_cycles xs x ys = xs \\<and> x \\<notin> set as\"\n  if \"x \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys = xs \\<and>\n       x \\<notin> set as", "using that"], ["proof (prove)\nusing this:\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys = xs \\<and>\n       x \\<notin> set as", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>xxs as.\n          as @ concat (map ((#) x) xxs) @ remove_cycles [] x ys = [] \\<and>\n          x \\<notin> set as\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "case Nil"], ["proof (state)\nthis:\n  x \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>xxs as.\n          as @ concat (map ((#) x) xxs) @ remove_cycles [] x ys = [] \\<and>\n          x \\<notin> set as\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set []\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles [] x ys = [] \\<and>\n       x \\<notin> set as", "by auto"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles [] x ys = [] \\<and>\n     x \\<notin> set as\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "case (Cons y xs)"], ["proof (state)\nthis:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles xs x ?ys = xs \\<and>\n     x \\<notin> set as\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>xxs as.\n                      as @\n                      concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                      xs \\<and>\n                      x \\<notin> set as;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xxs as.\n                            as @\n                            concat (map ((#) x) xxs) @\n                            remove_cycles (a # xs) x ys =\n                            a # xs \\<and>\n                            x \\<notin> set as", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles xs x ?ys = xs \\<and>\n     x \\<notin> set as\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x = y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "proof (cases \"x \\<in> set xs\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "case 1"], ["proof (state)\nthis:\n  x = y\n  x \\<in> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "then"], ["proof (chain)\npicking this:\n  x = y\n  x \\<in> set xs", "obtain as xxs where \"as @ concat (map (\\<lambda>xs. y#xs) xxs) @ remove_cycles xs y [y] = xs\""], ["proof (prove)\nusing this:\n  x = y\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>as xxs.\n        as @ concat (map ((#) y) xxs) @ remove_cycles xs y [y] =\n        xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Cons.IH[of \"[y]\"]"], ["proof (prove)\nusing this:\n  x = y\n  x \\<in> set xs\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles xs x [y] = xs \\<and>\n     x \\<notin> set as\n\ngoal (1 subgoal):\n 1. (\\<And>as xxs.\n        as @ concat (map ((#) y) xxs) @ remove_cycles xs y [y] =\n        xs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  as @ concat (map ((#) y) xxs) @ remove_cycles xs y [y] = xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "hence \"[] @ concat (map (\\<lambda>xs. x#xs) (as#xxs)) @ remove_cycles (y#xs) x ys = y # xs\""], ["proof (prove)\nusing this:\n  as @ concat (map ((#) y) xxs) @ remove_cycles xs y [y] = xs\n\ngoal (1 subgoal):\n 1. [] @ concat (map ((#) x) (as # xxs)) @ remove_cycles (y # xs) x ys =\n    y # xs", "by (simp add: \\<open>x = y\\<close>)"], ["proof (state)\nthis:\n  [] @ concat (map ((#) x) (as # xxs)) @ remove_cycles (y # xs) x ys =\n  y # xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = y; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as\n 2. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "thus ?thesis"], ["proof (prove)\nusing this:\n  [] @ concat (map ((#) x) (as # xxs)) @ remove_cycles (y # xs) x ys =\n  y # xs\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "case 2"], ["proof (state)\nthis:\n  x = y\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "hence \"remove_cycles (y # xs) x ys = y # xs\""], ["proof (prove)\nusing this:\n  x = y\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. remove_cycles (y # xs) x ys = y # xs", "using remove_cycles_id[of x xs \"[y]\"]"], ["proof (prove)\nusing this:\n  x = y\n  x \\<notin> set xs\n  x \\<notin> set xs \\<Longrightarrow> remove_cycles xs x [y] = rev [y] @ xs\n\ngoal (1 subgoal):\n 1. remove_cycles (y # xs) x ys = y # xs", "by auto"], ["proof (state)\nthis:\n  remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "hence \"[] @ concat (map (\\<lambda>xs. x # xs) []) @ remove_cycles (y#xs) x ys = y # xs\""], ["proof (prove)\nusing this:\n  remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. [] @ concat (map ((#) x) []) @ remove_cycles (y # xs) x ys = y # xs", "by auto"], ["proof (state)\nthis:\n  [] @ concat (map ((#) x) []) @ remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = y; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "thus ?thesis"], ["proof (prove)\nusing this:\n  [] @ concat (map ((#) x) []) @ remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> y", "obtain as xxs where as:\n      \"as @ concat (map (\\<lambda>xs. x # xs) xxs) @ remove_cycles xs x (y#ys) = xs\" \"x \\<notin> set as\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (\\<And>as xxs.\n        \\<lbrakk>as @\n                 concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) =\n                 xs;\n         x \\<notin> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Cons.IH[of \"y # ys\"] Cons.prems"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) = xs \\<and>\n     x \\<notin> set as\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>as xxs.\n        \\<lbrakk>as @\n                 concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) =\n                 xs;\n         x \\<notin> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  as @ concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) = xs\n  x \\<notin> set as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "hence \"(y # as) @ concat (map (\\<lambda>xs. x # xs) xxs) @ remove_cycles (y#xs) x ys = y # xs\""], ["proof (prove)\nusing this:\n  as @ concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) = xs\n  x \\<notin> set as\n\ngoal (1 subgoal):\n 1. (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n    y # xs", "using \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  as @ concat (map ((#) x) xxs) @ remove_cycles xs x (y # ys) = xs\n  x \\<notin> set as\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n    y # xs", "by auto"], ["proof (state)\nthis:\n  (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<in> set xs \\<Longrightarrow>\n                \\<exists>xxs as.\n                   as @ concat (map ((#) x) xxs) @ remove_cycles xs x ys =\n                   xs \\<and>\n                   x \\<notin> set as;\n     x \\<in> set (y # xs); x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xxs as.\n                         as @\n                         concat (map ((#) x) xxs) @\n                         remove_cycles (y # xs) x ys =\n                         y # xs \\<and>\n                         x \\<notin> set as", "thus ?thesis"], ["proof (prove)\nusing this:\n  (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys = y # xs\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "using as(2) \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  (y # as) @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys = y # xs\n  x \\<notin> set as\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<exists>xxs as.\n       as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n       y # xs \\<and>\n       x \\<notin> set as", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>xxs as.\n     as @ concat (map ((#) x) xxs) @ remove_cycles (y # xs) x ys =\n     y # xs \\<and>\n     x \\<notin> set as\n\ngoal:\nNo subgoals!", "qed"], ["", "fun start_remove :: \"'a list \\<Rightarrow> 'a \\<Rightarrow> 'a list \\<Rightarrow> 'a list\"\nwhere\n  \"start_remove [] _ acc = rev acc\" |\n  \"start_remove (x#xs) y acc =\n    (if x = y then rev acc @ remove_cycles xs y [y] else start_remove xs y (x # acc))\""], ["", "lemma start_remove_decomp:\n  \"x \\<in> set xs \\<Longrightarrow> \\<exists> as bs. xs = as @ x # bs \\<and> start_remove xs x ys = rev ys @ as @ remove_cycles bs x [x]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow>\n    \\<exists>as bs.\n       xs = as @ x # bs \\<and>\n       start_remove xs x ys = rev ys @ as @ remove_cycles bs x [x]", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>as bs.\n          [] = as @ x # bs \\<and>\n          start_remove [] x ys = rev ys @ as @ remove_cycles bs x [x]\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "case Nil"], ["proof (state)\nthis:\n  x \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       \\<exists>as bs.\n          [] = as @ x # bs \\<and>\n          start_remove [] x ys = rev ys @ as @ remove_cycles bs x [x]\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set []\n\ngoal (1 subgoal):\n 1. \\<exists>as bs.\n       [] = as @ x # bs \\<and>\n       start_remove [] x ys = rev ys @ as @ remove_cycles bs x [x]", "by auto"], ["proof (state)\nthis:\n  \\<exists>as bs.\n     [] = as @ x # bs \\<and>\n     start_remove [] x ys = rev ys @ as @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "case (Cons y xs)"], ["proof (state)\nthis:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x ?ys = rev ?ys @ as @ remove_cycles bs x [x]\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   \\<exists>as bs.\n                      xs = as @ x # bs \\<and>\n                      start_remove xs x ys =\n                      rev ys @ as @ remove_cycles bs x [x];\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>as bs.\n                            a # xs = as @ x # bs \\<and>\n                            start_remove (a # xs) x ys =\n                            rev ys @ as @ remove_cycles bs x [x]", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow>\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x ?ys = rev ?ys @ as @ remove_cycles bs x [x]\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<exists>as bs.\n       y # xs = as @ x # bs \\<and>\n       start_remove (y # xs) x ys = rev ys @ as @ remove_cycles bs x [x]", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                \\<exists>as bs.\n                   xs = as @ x # bs \\<and>\n                   start_remove xs x ys =\n                   rev ys @ as @ remove_cycles bs x [x];\n     x \\<in> set xs; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>as bs.\n                         y # xs = as @ x # bs \\<and>\n                         start_remove xs x (y # ys) =\n                         rev ys @ as @ remove_cycles bs x [x]", "case 1"], ["proof (state)\nthis:\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x ?ys = rev ?ys @ as @ remove_cycles bs x [x]\n  x \\<in> set xs\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                \\<exists>as bs.\n                   xs = as @ x # bs \\<and>\n                   start_remove xs x ys =\n                   rev ys @ as @ remove_cycles bs x [x];\n     x \\<in> set xs; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>as bs.\n                         y # xs = as @ x # bs \\<and>\n                         start_remove xs x (y # ys) =\n                         rev ys @ as @ remove_cycles bs x [x]", "from 1(1)[of \"y # ys\"]"], ["proof (chain)\npicking this:\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]", "obtain as bs where\n      \"xs = as @ x # bs\" \"start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]\""], ["proof (prove)\nusing this:\n  \\<exists>as bs.\n     xs = as @ x # bs \\<and>\n     start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. (\\<And>as bs.\n        \\<lbrakk>xs = as @ x # bs;\n         start_remove xs x (y # ys) =\n         rev (y # ys) @ as @ remove_cycles bs x [x]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xs = as @ x # bs\n  start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                \\<exists>as bs.\n                   xs = as @ x # bs \\<and>\n                   start_remove xs x ys =\n                   rev ys @ as @ remove_cycles bs x [x];\n     x \\<in> set xs; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>as bs.\n                         y # xs = as @ x # bs \\<and>\n                         start_remove xs x (y # ys) =\n                         rev ys @ as @ remove_cycles bs x [x]", "hence \"y # xs = (y # as) @ x # bs\"\n          \"start_remove xs x (y # ys) = rev ys @ (y # as) @ remove_cycles bs x [x]\""], ["proof (prove)\nusing this:\n  xs = as @ x # bs\n  start_remove xs x (y # ys) = rev (y # ys) @ as @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. y # xs = (y # as) @ x # bs &&&\n    start_remove xs x (y # ys) = rev ys @ (y # as) @ remove_cycles bs x [x]", "by simp+"], ["proof (state)\nthis:\n  y # xs = (y # as) @ x # bs\n  start_remove xs x (y # ys) = rev ys @ (y # as) @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                \\<exists>as bs.\n                   xs = as @ x # bs \\<and>\n                   start_remove xs x ys =\n                   rev ys @ as @ remove_cycles bs x [x];\n     x \\<in> set xs; y \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>as bs.\n                         y # xs = as @ x # bs \\<and>\n                         start_remove xs x (y # ys) =\n                         rev ys @ as @ remove_cycles bs x [x]", "thus ?case"], ["proof (prove)\nusing this:\n  y # xs = (y # as) @ x # bs\n  start_remove xs x (y # ys) = rev ys @ (y # as) @ remove_cycles bs x [x]\n\ngoal (1 subgoal):\n 1. \\<exists>as bs.\n       y # xs = as @ x # bs \\<and>\n       start_remove xs x (y # ys) = rev ys @ as @ remove_cycles bs x [x]", "by blast"], ["proof (state)\nthis:\n  \\<exists>as bs.\n     y # xs = as @ x # bs \\<and>\n     start_remove xs x (y # ys) = rev ys @ as @ remove_cycles bs x [x]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>as bs.\n     y # xs = as @ x # bs \\<and>\n     start_remove (y # xs) x ys = rev ys @ as @ remove_cycles bs x [x]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma start_remove_removes: \"cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys)", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys. cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ys. cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)", "using cnt_rev[of x ys]"], ["proof (prove)\nusing this:\n  cnt x (rev ys) = cnt x ys\n\ngoal (1 subgoal):\n 1. cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (start_remove [] x ys) \\<le> Suc (cnt x ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "case (Cons y xs)"], ["proof (state)\nthis:\n  cnt x (start_remove xs x ?ys) \\<le> Suc (cnt x ?ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt x (start_remove xs x ys)\n           \\<le> Suc (cnt x ys)) \\<Longrightarrow>\n       cnt x (start_remove (a # xs) x ys) \\<le> Suc (cnt x ys)", "thus ?case"], ["proof (prove)\nusing this:\n  cnt x (start_remove xs x ?ys) \\<le> Suc (cnt x ?ys)\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)\n 2. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)\n 2. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "using remove_cycles_removes[of y xs \"[y]\"] cnt_rev[of y ys]"], ["proof (prove)\nusing this:\n  x = y\n  cnt y (remove_cycles xs y [y]) \\<le> max 1 (cnt y [y])\n  cnt y (rev ys) = cnt y ys\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys. cnt x (start_remove xs x ys) \\<le> Suc (cnt x ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt x (start_remove (y # xs) x ys)\n                      \\<le> Suc (cnt x ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "using Cons[of \"y # ys\"]"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  cnt x (start_remove xs x (y # ys)) \\<le> Suc (cnt x (y # ys))\n\ngoal (1 subgoal):\n 1. cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)", "by auto"], ["proof (state)\nthis:\n  cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt x (start_remove (y # xs) x ys) \\<le> Suc (cnt x ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma start_remove_id[simp]: \"x \\<notin> set xs \\<Longrightarrow> start_remove xs x ys = rev ys @ xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set xs \\<Longrightarrow> start_remove xs x ys = rev ys @ xs", "by (induction xs arbitrary: ys) auto"], ["", "lemma start_remove_cnt_id:\n  \"x \\<noteq> y \\<Longrightarrow> cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<noteq> y \\<Longrightarrow>\n       cnt y (start_remove [] x ys) \\<le> cnt y ys + cnt y []\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "case Nil"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<noteq> y \\<Longrightarrow>\n       cnt y (start_remove [] x ys) \\<le> cnt y ys + cnt y []\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (start_remove [] x ys) \\<le> cnt y ys + cnt y []", "by (simp add: cnt_rev)"], ["proof (state)\nthis:\n  cnt y (start_remove [] x ys) \\<le> cnt y ys + cnt y []\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "case (Cons z xs)"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<noteq> y \\<Longrightarrow>\n                   cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n        x \\<noteq> y\\<rbrakk>\n       \\<Longrightarrow> cnt y (start_remove (a # xs) x ys)\n                         \\<le> cnt y ys + cnt y (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "proof (cases \"x = z\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x = z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)\n 2. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "case 1"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n  x = z\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x = z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)\n 2. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n  x = z\n\ngoal (1 subgoal):\n 1. cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "using remove_cycles_cnt_id[of x y xs \"[x]\"]"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n  x = z\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (remove_cycles xs x [x]) \\<le> cnt y [x] + cnt y xs\n\ngoal (1 subgoal):\n 1. cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "by (simp add: cnt_rev)"], ["proof (state)\nthis:\n  cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "case 2"], ["proof (state)\nthis:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x ?ys) \\<le> cnt y ?ys + cnt y xs\n  x \\<noteq> y\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                x \\<noteq> y \\<Longrightarrow>\n                cnt y (start_remove xs x ys) \\<le> cnt y ys + cnt y xs;\n     x \\<noteq> y; x \\<noteq> z\\<rbrakk>\n    \\<Longrightarrow> cnt y (start_remove (z # xs) x ys)\n                      \\<le> cnt y ys + cnt y (z # xs)", "from this(1)[of \"(z # ys)\"] this(2,3)"], ["proof (chain)\npicking this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x (z # ys)) \\<le> cnt y (z # ys) + cnt y xs\n  x \\<noteq> y\n  x \\<noteq> z", "show ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove xs x (z # ys)) \\<le> cnt y (z # ys) + cnt y xs\n  x \\<noteq> y\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)", "by auto"], ["proof (state)\nthis:\n  cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt y (start_remove (z # xs) x ys) \\<le> cnt y ys + cnt y (z # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "fun remove_all_cycles :: \"'a list \\<Rightarrow> 'a list \\<Rightarrow> 'a list\"\nwhere\n  \"remove_all_cycles [] xs = xs\" |\n  \"remove_all_cycles (x # xs) ys = remove_all_cycles xs (start_remove ys x [])\""], ["", "lemma cnt_remove_all_mono:\"cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys)", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys. cnt y (remove_all_cycles [] ys) \\<le> max 1 (cnt y ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ys. cnt y (remove_all_cycles [] ys) \\<le> max 1 (cnt y ys)\n 2. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles [] ys) \\<le> max 1 (cnt y ys)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles [] ys) \\<le> max 1 (cnt y ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "case (Cons x xs)"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles xs ?ys) \\<le> max 1 (cnt y ?ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       (\\<And>ys.\n           cnt y (remove_all_cycles xs ys)\n           \\<le> max 1 (cnt y ys)) \\<Longrightarrow>\n       cnt y (remove_all_cycles (a # xs) ys) \\<le> max 1 (cnt y ys)", "thus ?case"], ["proof (prove)\nusing this:\n  cnt y (remove_all_cycles xs ?ys) \\<le> max 1 (cnt y ?ys)\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)\n 2. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x = y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)\n 2. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "using start_remove_removes[of y ys \"[]\"] Cons[of \"start_remove ys y []\"]"], ["proof (prove)\nusing this:\n  x = y\n  cnt y (start_remove ys y []) \\<le> Suc (cnt y [])\n  cnt y (remove_all_cycles xs (start_remove ys y []))\n  \\<le> max 1 (cnt y (start_remove ys y []))\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "hence \"cnt y (start_remove ys x []) \\<le> cnt y ys\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. cnt y (start_remove ys x []) \\<le> cnt y ys", "using start_remove_cnt_id[of x y ys \"[]\"]"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<noteq> y \\<Longrightarrow>\n  cnt y (start_remove ys x []) \\<le> cnt y [] + cnt y ys\n\ngoal (1 subgoal):\n 1. cnt y (start_remove ys x []) \\<le> cnt y ys", "by auto"], ["proof (state)\nthis:\n  cnt y (start_remove ys x []) \\<le> cnt y ys\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>ys.\n                cnt y (remove_all_cycles xs ys) \\<le> max 1 (cnt y ys);\n     x \\<noteq> y\\<rbrakk>\n    \\<Longrightarrow> cnt y (remove_all_cycles (x # xs) ys)\n                      \\<le> max 1 (cnt y ys)", "thus ?thesis"], ["proof (prove)\nusing this:\n  cnt y (start_remove ys x []) \\<le> cnt y ys\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "using Cons[of \"start_remove ys x []\"]"], ["proof (prove)\nusing this:\n  cnt y (start_remove ys x []) \\<le> cnt y ys\n  cnt y (remove_all_cycles xs (start_remove ys x []))\n  \\<le> max 1 (cnt y (start_remove ys x []))\n\ngoal (1 subgoal):\n 1. cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)", "by auto"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnt y (remove_all_cycles (x # xs) ys) \\<le> max 1 (cnt y ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnt_remove_all_cycles: \"x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ys) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ys) \\<le> 1", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       cnt x (remove_all_cycles [] ys) \\<le> 1\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "case Nil"], ["proof (state)\nthis:\n  x \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       x \\<in> set [] \\<Longrightarrow>\n       cnt x (remove_all_cycles [] ys) \\<le> 1\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set []\n\ngoal (1 subgoal):\n 1. cnt x (remove_all_cycles [] ys) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  cnt x (remove_all_cycles [] ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "case (Cons y xs)"], ["proof (state)\nthis:\n  x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ?ys) \\<le> 1\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   x \\<in> set xs \\<Longrightarrow>\n                   cnt x (remove_all_cycles xs ys) \\<le> 1;\n        x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt x (remove_all_cycles (a # xs) ys) \\<le> 1", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ?ys) \\<le> 1\n  x \\<in> set (y # xs)\n\ngoal (1 subgoal):\n 1. cnt x (remove_all_cycles (y # xs) ys) \\<le> 1", "using start_remove_removes[of x ys \"[]\"] cnt_remove_all_mono[of y xs \"start_remove ys y []\"]"], ["proof (prove)\nusing this:\n  x \\<in> set xs \\<Longrightarrow> cnt x (remove_all_cycles xs ?ys) \\<le> 1\n  x \\<in> set (y # xs)\n  cnt x (start_remove ys x []) \\<le> Suc (cnt x [])\n  cnt y (remove_all_cycles xs (start_remove ys y []))\n  \\<le> max 1 (cnt y (start_remove ys y []))\n\ngoal (1 subgoal):\n 1. cnt x (remove_all_cycles (y # xs) ys) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  cnt x (remove_all_cycles (y # xs) ys) \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnt_mono:\n  \"cnt a (b # xs) \\<le> cnt a (b # c # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnt a (b # xs) \\<le> cnt a (b # c # xs)", "by (induction xs) auto"], ["", "lemma cnt_distinct_intro: \"\\<forall> x \\<in> set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs", "proof (induction xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>set []. cnt x [] \\<le> 1 \\<Longrightarrow> distinct []\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "case Nil"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set []. cnt x [] \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>set []. cnt x [] \\<le> 1 \\<Longrightarrow> distinct []\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set []. cnt x [] \\<le> 1\n\ngoal (1 subgoal):\n 1. distinct []", "by auto"], ["proof (state)\nthis:\n  distinct []\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "from this(2)"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1", "have \"\\<forall> x \\<in> set xs. cnt x xs \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set xs. cnt x xs \\<le> 1", "by (metis filter.simps(2) impossible_Cons linorder_class.linear list.set_intros(2)\n      preorder_class.order_trans)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "with Cons.IH"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1", "have \"distinct xs\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow> distinct xs\n  \\<forall>x\\<in>set xs. cnt x xs \\<le> 1\n\ngoal (1 subgoal):\n 1. distinct xs", "by auto"], ["proof (state)\nthis:\n  distinct xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "moreover"], ["proof (state)\nthis:\n  distinct xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "have \"x \\<notin> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set xs", "using Cons.prems"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. x \\<notin> set xs", "proof (induction xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1 \\<Longrightarrow>\n    x \\<notin> set []\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "case Nil"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1 \\<Longrightarrow>\n    x \\<notin> set []\n 2. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "then"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set [x]. cnt xa [x] \\<le> 1\n\ngoal (1 subgoal):\n 1. x \\<notin> set []", "by auto"], ["proof (state)\nthis:\n  x \\<notin> set []\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "case (Cons a xs)"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n  x \\<notin> set xs\n  \\<forall>xa\\<in>set (x # a # xs). cnt xa (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "from this(2)"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # a # xs). cnt xa (x # a # xs) \\<le> 1", "have \"\\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # a # xs). cnt xa (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "then"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1", "have *: \"\\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1;\n        xa \\<in> set (x # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt xa (x # xs) \\<le> 1", "case (1 b)"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n  b \\<in> set (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1;\n        xa \\<in> set (x # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt xa (x # xs) \\<le> 1", "then"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n  b \\<in> set (x # xs)", "have \"cnt b (x # a # xs) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1\n  b \\<in> set (x # xs)\n\ngoal (1 subgoal):\n 1. cnt b (x # a # xs) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  cnt b (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs). cnt xa (x # a # xs) \\<le> 1;\n        xa \\<in> set (x # xs)\\<rbrakk>\n       \\<Longrightarrow> cnt xa (x # xs) \\<le> 1", "with cnt_mono[of b x xs a]"], ["proof (chain)\npicking this:\n  cnt b (x # xs) \\<le> cnt b (x # a # xs)\n  cnt b (x # a # xs) \\<le> 1", "show ?case"], ["proof (prove)\nusing this:\n  cnt b (x # xs) \\<le> cnt b (x # a # xs)\n  cnt b (x # a # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. cnt b (x # xs) \\<le> 1", "by fastforce"], ["proof (state)\nthis:\n  cnt b (x # xs) \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "with Cons(1)"], ["proof (chain)\npicking this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n  x \\<notin> set xs\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1", "have \"x \\<notin> set xs\""], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n  x \\<notin> set xs\n  \\<forall>xa\\<in>set (x # xs). cnt xa (x # xs) \\<le> 1\n\ngoal (1 subgoal):\n 1. x \\<notin> set xs", "by auto"], ["proof (state)\nthis:\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "moreover"], ["proof (state)\nthis:\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "have \"x \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> a", "by (metis (full_types) Cons.prems One_nat_def * empty_iff filter.simps(2) impossible_Cons\n                           le_0_eq le_Suc_eq length_0_conv list.set(1) list.set_intros(1))"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>xa\\<in>set (x # xs).\n                   cnt xa (x # xs) \\<le> 1 \\<Longrightarrow>\n                x \\<notin> set xs;\n        \\<forall>xa\\<in>set (x # a # xs).\n           cnt xa (x # a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> set (a # xs)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<notin> set xs\n  x \\<noteq> a", "show ?case"], ["proof (prove)\nusing this:\n  x \\<notin> set xs\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<notin> set (a # xs)", "by auto"], ["proof (state)\nthis:\n  x \\<notin> set (a # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       \\<lbrakk>\\<forall>x\\<in>set xs. cnt x xs \\<le> 1 \\<Longrightarrow>\n                distinct xs;\n        \\<forall>x\\<in>set (a # xs). cnt x (a # xs) \\<le> 1\\<rbrakk>\n       \\<Longrightarrow> distinct (a # xs)", "ultimately"], ["proof (chain)\npicking this:\n  distinct xs\n  x \\<notin> set xs", "show ?case"], ["proof (prove)\nusing this:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. distinct (x # xs)", "by auto"], ["proof (state)\nthis:\n  distinct (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_subs:\n  \"set (remove_cycles xs x ys) \\<subseteq> set xs \\<union> set ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (remove_cycles xs x ys) \\<subseteq> set xs \\<union> set ys", "by (induction xs arbitrary: ys; auto; fastforce)"], ["", "lemma start_remove_subs:\n  \"set (start_remove xs x ys) \\<subseteq> set xs \\<union> set ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (start_remove xs x ys) \\<subseteq> set xs \\<union> set ys", "using remove_cycles_subs"], ["proof (prove)\nusing this:\n  set (remove_cycles ?xs ?x ?ys) \\<subseteq> set ?xs \\<union> set ?ys\n\ngoal (1 subgoal):\n 1. set (start_remove xs x ys) \\<subseteq> set xs \\<union> set ys", "by (induction xs arbitrary: ys; auto; fastforce)"], ["", "lemma remove_all_cycles_subs:\n  \"set (remove_all_cycles xs ys) \\<subseteq> set ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (remove_all_cycles xs ys) \\<subseteq> set ys", "using start_remove_subs"], ["proof (prove)\nusing this:\n  set (start_remove ?xs ?x ?ys) \\<subseteq> set ?xs \\<union> set ?ys\n\ngoal (1 subgoal):\n 1. set (remove_all_cycles xs ys) \\<subseteq> set ys", "by (induction xs arbitrary: ys, auto) (fastforce+)"], ["", "lemma remove_all_cycles_distinct: \"set ys \\<subseteq> set xs \\<Longrightarrow> distinct (remove_all_cycles xs ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "assume \"set ys \\<subseteq> set xs\""], ["proof (state)\nthis:\n  set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "hence \"\\<forall> x \\<in> set ys. cnt x (remove_all_cycles xs ys) \\<le> 1\""], ["proof (prove)\nusing this:\n  set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1", "using cnt_remove_all_cycles"], ["proof (prove)\nusing this:\n  set ys \\<subseteq> set xs\n  ?x \\<in> set ?xs \\<Longrightarrow>\n  cnt ?x (remove_all_cycles ?xs ?ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "hence \"\\<forall> x \\<in> set (remove_all_cycles xs ys). cnt x (remove_all_cycles xs ys) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (remove_all_cycles xs ys).\n       cnt x (remove_all_cycles xs ys) \\<le> 1", "using remove_all_cycles_subs"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set ys. cnt x (remove_all_cycles xs ys) \\<le> 1\n  set (remove_all_cycles ?xs ?ys) \\<subseteq> set ?ys\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (remove_all_cycles xs ys).\n       cnt x (remove_all_cycles xs ys) \\<le> 1", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set (remove_all_cycles xs ys).\n     cnt x (remove_all_cycles xs ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> set xs \\<Longrightarrow>\n    distinct (remove_all_cycles xs ys)", "thus \"distinct (remove_all_cycles xs ys)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set (remove_all_cycles xs ys).\n     cnt x (remove_all_cycles xs ys) \\<le> 1\n\ngoal (1 subgoal):\n 1. distinct (remove_all_cycles xs ys)", "using cnt_distinct_intro"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set (remove_all_cycles xs ys).\n     cnt x (remove_all_cycles xs ys) \\<le> 1\n  \\<forall>x\\<in>set ?xs. cnt x ?xs \\<le> 1 \\<Longrightarrow> distinct ?xs\n\ngoal (1 subgoal):\n 1. distinct (remove_all_cycles xs ys)", "by auto"], ["proof (state)\nthis:\n  distinct (remove_all_cycles xs ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distinct_remove_cycles_inv: \"distinct (xs @ ys) \\<Longrightarrow> distinct (remove_cycles xs x ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (xs @ ys) \\<Longrightarrow> distinct (remove_cycles xs x ys)", "proof (induction xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       distinct ([] @ ys) \\<Longrightarrow> distinct (remove_cycles [] x ys)\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "case Nil"], ["proof (state)\nthis:\n  distinct ([] @ ys)\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       distinct ([] @ ys) \\<Longrightarrow> distinct (remove_cycles [] x ys)\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "thus ?case"], ["proof (prove)\nusing this:\n  distinct ([] @ ys)\n\ngoal (1 subgoal):\n 1. distinct (remove_cycles [] x ys)", "by auto"], ["proof (state)\nthis:\n  distinct (remove_cycles [] x ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "case (Cons y xs)"], ["proof (state)\nthis:\n  distinct (xs @ ?ys) \\<Longrightarrow> distinct (remove_cycles xs x ?ys)\n  distinct ((y # xs) @ ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   distinct (xs @ ys) \\<Longrightarrow>\n                   distinct (remove_cycles xs x ys);\n        distinct ((a # xs) @ ys)\\<rbrakk>\n       \\<Longrightarrow> distinct (remove_cycles (a # xs) x ys)", "thus ?case"], ["proof (prove)\nusing this:\n  distinct (xs @ ?ys) \\<Longrightarrow> distinct (remove_cycles xs x ?ys)\n  distinct ((y # xs) @ ys)\n\ngoal (1 subgoal):\n 1. distinct (remove_cycles (y # xs) x ys)", "by auto"], ["proof (state)\nthis:\n  distinct (remove_cycles (y # xs) x ys)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition\n  \"remove_all x xs = (if x \\<in> set xs then tl (remove_cycles xs x []) else xs)\""], ["", "definition\n  \"remove_all_rev x xs = (if x \\<in> set xs then rev (tl (remove_cycles (rev xs) x [])) else xs)\""], ["", "lemma remove_all_distinct:\n  \"distinct xs \\<Longrightarrow> distinct (x # remove_all x xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct xs \\<Longrightarrow> distinct (x # remove_all x xs)", "proof (cases \"x \\<in> set xs\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "case 1"], ["proof (state)\nthis:\n  distinct xs\n  x \\<in> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "from remove_cycles_begins_with[OF 1(2), of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>zs. remove_cycles xs x [] = x # zs \\<and> x \\<notin> set zs", "obtain zs\n  where \"remove_cycles xs x [] = x # zs\" \"x \\<notin> set zs\""], ["proof (prove)\nusing this:\n  \\<exists>zs. remove_cycles xs x [] = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>zs.\n        \\<lbrakk>remove_cycles xs x [] = x # zs; x \\<notin> set zs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  remove_cycles xs x [] = x # zs\n  x \\<notin> set zs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  remove_cycles xs x [] = x # zs\n  x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all x xs)", "using 1(1) distinct_remove_cycles_inv[of \"xs\" \"[]\" x]"], ["proof (prove)\nusing this:\n  remove_cycles xs x [] = x # zs\n  x \\<notin> set zs\n  distinct xs\n  distinct (xs @ []) \\<Longrightarrow> distinct (remove_cycles xs x [])\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all x xs)", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  distinct (x # remove_all x xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "case 2"], ["proof (state)\nthis:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all x xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all x xs)", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  distinct (x # remove_all x xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_all_removes:\n  \"x \\<notin> set (remove_all x xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set (remove_all x xs)", "by (metis list.sel(3) remove_all_def remove_cycles_begins_with)"], ["", "lemma remove_all_subs:\n  \"set (remove_all x xs) \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (remove_all x xs) \\<subseteq> set xs", "using remove_cycles_subs remove_all_def"], ["proof (prove)\nusing this:\n  set (remove_cycles ?xs ?x ?ys) \\<subseteq> set ?xs \\<union> set ?ys\n  remove_all ?x ?xs =\n  (if ?x \\<in> set ?xs then tl (remove_cycles ?xs ?x []) else ?xs)\n\ngoal (1 subgoal):\n 1. set (remove_all x xs) \\<subseteq> set xs", "by (metis (no_types, lifting) append_Nil2 list.sel(2) list.set_sel(2) set_append subsetCE subsetI)"], ["", "lemma remove_all_rev_distinct: \"distinct xs \\<Longrightarrow> distinct (x # remove_all_rev x xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct xs \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "proof (cases \"x \\<in> set xs\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "case 1"], ["proof (state)\nthis:\n  distinct xs\n  x \\<in> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "then"], ["proof (chain)\npicking this:\n  distinct xs\n  x \\<in> set xs", "have \"x \\<in> set (rev xs)\""], ["proof (prove)\nusing this:\n  distinct xs\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> set (rev xs)", "by auto"], ["proof (state)\nthis:\n  x \\<in> set (rev xs)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "from remove_cycles_begins_with[OF this, of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>zs. remove_cycles (rev xs) x [] = x # zs \\<and> x \\<notin> set zs", "obtain zs\n  where \"remove_cycles (rev xs) x [] = x # zs\" \"x \\<notin> set zs\""], ["proof (prove)\nusing this:\n  \\<exists>zs. remove_cycles (rev xs) x [] = x # zs \\<and> x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>zs.\n        \\<lbrakk>remove_cycles (rev xs) x [] = x # zs;\n         x \\<notin> set zs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  remove_cycles (rev xs) x [] = x # zs\n  x \\<notin> set zs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>distinct xs; x \\<in> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)\n 2. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  remove_cycles (rev xs) x [] = x # zs\n  x \\<notin> set zs\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all_rev x xs)", "using 1(1) distinct_remove_cycles_inv[of \"rev xs\" \"[]\" x]"], ["proof (prove)\nusing this:\n  remove_cycles (rev xs) x [] = x # zs\n  x \\<notin> set zs\n  distinct xs\n  distinct (rev xs @ []) \\<Longrightarrow>\n  distinct (remove_cycles (rev xs) x [])\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all_rev x xs)", "by (simp add: remove_all_rev_def)"], ["proof (state)\nthis:\n  distinct (x # remove_all_rev x xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "case 2"], ["proof (state)\nthis:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct xs; x \\<notin> set xs\\<rbrakk>\n    \\<Longrightarrow> distinct (x # remove_all_rev x xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  distinct xs\n  x \\<notin> set xs\n\ngoal (1 subgoal):\n 1. distinct (x # remove_all_rev x xs)", "by (simp add: remove_all_rev_def)"], ["proof (state)\nthis:\n  distinct (x # remove_all_rev x xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_all_rev_removes: \"x \\<notin> set (remove_all_rev x xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> set (remove_all_rev x xs)", "by (metis remove_all_def remove_all_removes remove_all_rev_def set_rev)"], ["", "lemma remove_all_rev_subs: \"set (remove_all_rev x xs) \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (remove_all_rev x xs) \\<subseteq> set xs", "by (metis remove_all_def remove_all_subs set_rev remove_all_rev_def)"], ["", "abbreviation \"rem_cycles i j xs \\<equiv> remove_all i (remove_all_rev j (remove_all_cycles xs xs))\""], ["", "lemma rem_cycles_distinct': \"i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "assume \"i \\<noteq> j\""], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "have \"distinct (remove_all_cycles xs xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (remove_all_cycles xs xs)", "by (simp add: remove_all_cycles_distinct)"], ["proof (state)\nthis:\n  distinct (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "from remove_all_rev_distinct[OF this]"], ["proof (chain)\npicking this:\n  distinct (?x # remove_all_rev ?x (remove_all_cycles xs xs))", "have\n    \"distinct (remove_all_rev j (remove_all_cycles xs xs))\""], ["proof (prove)\nusing this:\n  distinct (?x # remove_all_rev ?x (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. distinct (remove_all_rev j (remove_all_cycles xs xs))", "by simp"], ["proof (state)\nthis:\n  distinct (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "from remove_all_distinct[OF this]"], ["proof (chain)\npicking this:\n  distinct (?x # rem_cycles ?x j xs)", "have \"distinct (i # rem_cycles i j xs)\""], ["proof (prove)\nusing this:\n  distinct (?x # rem_cycles ?x j xs)\n\ngoal (1 subgoal):\n 1. distinct (i # rem_cycles i j xs)", "by simp"], ["proof (state)\nthis:\n  distinct (i # rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "moreover"], ["proof (state)\nthis:\n  distinct (i # rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "have\n    \"j \\<notin> set (rem_cycles i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<notin> set (rem_cycles i j xs)", "using remove_all_subs remove_all_rev_removes remove_all_removes"], ["proof (prove)\nusing this:\n  set (remove_all ?x ?xs) \\<subseteq> set ?xs\n  ?x \\<notin> set (remove_all_rev ?x ?xs)\n  ?x \\<notin> set (remove_all ?x ?xs)\n\ngoal (1 subgoal):\n 1. j \\<notin> set (rem_cycles i j xs)", "by fastforce"], ["proof (state)\nthis:\n  j \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> distinct (i # j # rem_cycles i j xs)", "ultimately"], ["proof (chain)\npicking this:\n  distinct (i # rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  distinct (i # rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. distinct (i # j # rem_cycles i j xs)", "by (simp add: \\<open>i \\<noteq> j\\<close>)"], ["proof (state)\nthis:\n  distinct (i # j # rem_cycles i j xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rem_cycles_removes_last: \"j \\<notin> set (rem_cycles i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<notin> set (rem_cycles i j xs)", "by (meson remove_all_rev_removes remove_all_subs rev_subsetD)"], ["", "lemma rem_cycles_distinct: \"distinct (rem_cycles i j xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (rem_cycles i j xs)", "by (meson distinct.simps(2) order_refl remove_all_cycles_distinct\n          remove_all_distinct remove_all_rev_distinct)"], ["", "lemma rem_cycles_subs: \"set (rem_cycles i j xs) \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (rem_cycles i j xs) \\<subseteq> set xs", "by (meson order_trans remove_all_cycles_subs remove_all_subs remove_all_rev_subs)"], ["", "section \\<open>Definition of the Algorithm\\<close>"], ["", "subsection \\<open>Definitions\\<close>"], ["", "text \\<open>\n  In our formalization of the \\fw, edge weights are from a linearly ordered abelian monoid.\n\\<close>"], ["", "class linordered_ab_monoid_add = linorder + ordered_comm_monoid_add\nbegin"], ["", "subclass linordered_ab_semigroup_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.linordered_ab_semigroup_add (+) (\\<le>) (<)", ".."], ["", "end"], ["", "subclass (in linordered_ab_group_add) linordered_ab_monoid_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.linordered_ab_monoid_add (+) (0::'a) (\\<le>) (<)", ".."], ["", "context linordered_ab_monoid_add\nbegin"], ["", "type_synonym 'c mat = \"nat \\<Rightarrow> nat \\<Rightarrow> 'c\""], ["", "definition upd :: \"'c mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 'c \\<Rightarrow> 'c mat\"\nwhere\n  \"upd m x y v = m (x := (m x) (y := v))\""], ["", "definition fw_upd :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 'a mat\" where\n  \"fw_upd m k i j \\<equiv> upd m i j (min (m i j) (m i k + m k j))\""], ["", "text \\<open>Recursive version of the two inner loops.\\<close>"], ["", "fun fwi :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 'a mat\" where\n  \"fwi m n k 0       0        = fw_upd m k 0 0\" |\n  \"fwi m n k (Suc i) 0        = fw_upd (fwi m n k i n) k (Suc i) 0\" |\n  \"fwi m n k i       (Suc j)  = fw_upd (fwi m n k i j) k i (Suc j)\""], ["", "text \\<open>Recursive version of the full algorithm.\\<close>"], ["", "fun fw :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 'a mat\" where\n  \"fw m n 0       = fwi m n 0 n n\" |\n  \"fw m n (Suc k) = fwi (fw m n k) n (Suc k) n n\""], ["", "subsection \\<open>Elementary Properties\\<close>"], ["", "lemma fw_upd_mono:\n  \"fw_upd m k i j i' j' \\<le> m i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd m k i j i' j' \\<le> m i' j'", "by (cases \"i = i'\", cases \"j = j'\") (auto simp: fw_upd_def upd_def)"], ["", "lemma fw_upd_out_of_bounds1:\n  assumes \"i' > i\"\n  shows \"(fw_upd M k i j) i' j' = M i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd M k i j i' j' = M i' j'", "using assms"], ["proof (prove)\nusing this:\n  i < i'\n\ngoal (1 subgoal):\n 1. fw_upd M k i j i' j' = M i' j'", "unfolding fw_upd_def upd_def"], ["proof (prove)\nusing this:\n  i < i'\n\ngoal (1 subgoal):\n 1. (M(i := (M i)(j := min (M i j) (M i k + M k j)))) i' j' = M i' j'", "by (auto split: split_min)"], ["", "lemma fw_upd_out_of_bounds2:\n  assumes \"j' > j\"\n  shows \"(fw_upd M k i j) i' j' = M i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd M k i j i' j' = M i' j'", "using assms"], ["proof (prove)\nusing this:\n  j < j'\n\ngoal (1 subgoal):\n 1. fw_upd M k i j i' j' = M i' j'", "unfolding fw_upd_def upd_def"], ["proof (prove)\nusing this:\n  j < j'\n\ngoal (1 subgoal):\n 1. (M(i := (M i)(j := min (M i j) (M i k + M k j)))) i' j' = M i' j'", "by (auto split: split_min)"], ["", "lemma fwi_out_of_bounds1:\n  assumes \"i' > n\" \"i \\<le> n\"\n  shows \"(fwi M n k i j) i' j' = M i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi M n k i j i' j' = M i' j'", "using assms"], ["proof (prove)\nusing this:\n  n < i'\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. fwi M n k i j i' j' = M i' j'", "apply (induction _ \"(i, j)\" arbitrary: i j rule: wf_induct[of \"less_than <*lex*> less_than\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. wf (less_than <*lex*> less_than)\n 2. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       n < i' \\<longrightarrow>\n                       x \\<le> n \\<longrightarrow>\n                       fwi M n k x xa i' j' = M i' j');\n        n < i'; i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k i j i' j' = M i' j'", "apply (auto; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       n < i' \\<longrightarrow>\n                       x \\<le> n \\<longrightarrow>\n                       fwi M n k x xa i' j' = M i' j');\n        n < i'; i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k i j i' j' = M i' j'", "subgoal for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>y.\n                (y, i, j)\n                \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = (x, xa) \\<longrightarrow>\n                    n < i' \\<longrightarrow>\n                    x \\<le> n \\<longrightarrow>\n                    fwi M n k x xa i' j' = M i' j');\n     n < i'; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi M n k i j i' j' = M i' j'", "by (cases i; cases j; auto simp add: fw_upd_out_of_bounds1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fw_out_of_bounds1:\n  assumes \"i' > n\"\n  shows \"(fw M n k) i' j' = M i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw M n k i' j' = M i' j'", "using assms"], ["proof (prove)\nusing this:\n  n < i'\n\ngoal (1 subgoal):\n 1. fw M n k i' j' = M i' j'", "by (induction k; simp add: fwi_out_of_bounds1)"], ["", "lemma fwi_out_of_bounds2:\n  assumes \"j' > n\" \"j \\<le> n\"\n  shows \"(fwi M n k i j) i' j' = M i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi M n k i j i' j' = M i' j'", "using assms"], ["proof (prove)\nusing this:\n  n < j'\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fwi M n k i j i' j' = M i' j'", "apply (induction _ \"(i, j)\" arbitrary: i j rule: wf_induct[of \"less_than <*lex*> less_than\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. wf (less_than <*lex*> less_than)\n 2. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       n < j' \\<longrightarrow>\n                       xa \\<le> n \\<longrightarrow>\n                       fwi M n k x xa i' j' = M i' j');\n        n < j'; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k i j i' j' = M i' j'", "apply (auto; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       n < j' \\<longrightarrow>\n                       xa \\<le> n \\<longrightarrow>\n                       fwi M n k x xa i' j' = M i' j');\n        n < j'; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k i j i' j' = M i' j'", "subgoal for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>y.\n                (y, i, j)\n                \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                (\\<forall>x xa.\n                    y = (x, xa) \\<longrightarrow>\n                    n < j' \\<longrightarrow>\n                    xa \\<le> n \\<longrightarrow>\n                    fwi M n k x xa i' j' = M i' j');\n     n < j'; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi M n k i j i' j' = M i' j'", "by (cases i; cases j; auto simp add: fw_upd_out_of_bounds2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma fw_out_of_bounds2:\n  assumes \"j' > n\"\n  shows \"(fw M n k) i' j' = M i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw M n k i' j' = M i' j'", "using assms"], ["proof (prove)\nusing this:\n  n < j'\n\ngoal (1 subgoal):\n 1. fw M n k i' j' = M i' j'", "by (induction k; simp add: fwi_out_of_bounds2)"], ["", "lemma fwi_invariant_aux_1:\n  \"j'' \\<le> j \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j'' \\<le> j \\<Longrightarrow>\n    fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j'' \\<le> 0 \\<Longrightarrow>\n    fwi m n k i 0 i' j' \\<le> fwi m n k i j'' i' j'\n 2. \\<And>j.\n       \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n                fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n        j'' \\<le> Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i (Suc j) i' j'\n                         \\<le> fwi m n k i j'' i' j'", "case 0"], ["proof (state)\nthis:\n  j'' \\<le> 0\n\ngoal (2 subgoals):\n 1. j'' \\<le> 0 \\<Longrightarrow>\n    fwi m n k i 0 i' j' \\<le> fwi m n k i j'' i' j'\n 2. \\<And>j.\n       \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n                fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n        j'' \\<le> Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i (Suc j) i' j'\n                         \\<le> fwi m n k i j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  j'' \\<le> 0\n\ngoal (1 subgoal):\n 1. fwi m n k i 0 i' j' \\<le> fwi m n k i j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k i 0 i' j' \\<le> fwi m n k i j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n                fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n        j'' \\<le> Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i (Suc j) i' j'\n                         \\<le> fwi m n k i j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n                fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n        j'' \\<le> Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i (Suc j) i' j'\n                         \\<le> fwi m n k i j'' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  j'' \\<le> j \\<Longrightarrow>\n  fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j'\n  j'' \\<le> Suc j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n                fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n        j'' \\<le> Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i (Suc j) i' j'\n                         \\<le> fwi m n k i j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  j'' \\<le> j \\<Longrightarrow>\n  fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j'\n  j'' \\<le> Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "proof (cases \"j'' = Suc j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n             fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n     j'' \\<le> Suc j; j'' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'\n 2. \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n             fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n     j'' \\<le> Suc j; j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "case True"], ["proof (state)\nthis:\n  j'' = Suc j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n             fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n     j'' \\<le> Suc j; j'' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'\n 2. \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n             fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n     j'' \\<le> Suc j; j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  j'' = Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n             fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n     j'' \\<le> Suc j; j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n             fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n     j'' \\<le> Suc j; j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "case False"], ["proof (state)\nthis:\n  j'' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n             fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n     j'' \\<le> Suc j; j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "have \"fw_upd (fwi m n k i j) k i (Suc j) i' j' \\<le> fwi m n k i j i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd (fwi m n k i j) k i (Suc j) i' j' \\<le> fwi m n k i j i' j'", "by (simp add: fw_upd_mono)"], ["proof (state)\nthis:\n  fw_upd (fwi m n k i j) k i (Suc j) i' j' \\<le> fwi m n k i j i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>j'' \\<le> j \\<Longrightarrow>\n             fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j';\n     j'' \\<le> Suc j; j'' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  fw_upd (fwi m n k i j) k i (Suc j) i' j' \\<le> fwi m n k i j i' j'\n\ngoal (1 subgoal):\n 1. fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "using Suc False"], ["proof (prove)\nusing this:\n  fw_upd (fwi m n k i j) k i (Suc j) i' j' \\<le> fwi m n k i j i' j'\n  j'' \\<le> j \\<Longrightarrow>\n  fwi m n k i j i' j' \\<le> fwi m n k i j'' i' j'\n  j'' \\<le> Suc j\n  j'' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k i (Suc j) i' j' \\<le> fwi m n k i j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fwi_invariant:\n  \"j \\<le> n \\<Longrightarrow> i'' \\<le> i \\<Longrightarrow> j'' \\<le> j\n   \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'", "proof (induction i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>j \\<le> n; i'' \\<le> 0; j'' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k 0 j i' j' \\<le> fwi m n k i'' j'' i' j'\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j'\n                                  \\<le> fwi m n k i'' j'' i' j';\n        j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                         \\<le> fwi m n k i'' j'' i' j'", "case 0"], ["proof (state)\nthis:\n  j \\<le> n\n  i'' \\<le> 0\n  j'' \\<le> j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>j \\<le> n; i'' \\<le> 0; j'' \\<le> j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k 0 j i' j' \\<le> fwi m n k i'' j'' i' j'\n 2. \\<And>i.\n       \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j'\n                                  \\<le> fwi m n k i'' j'' i' j';\n        j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                         \\<le> fwi m n k i'' j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  j \\<le> n\n  i'' \\<le> 0\n  j'' \\<le> j\n\ngoal (1 subgoal):\n 1. fwi m n k 0 j i' j' \\<le> fwi m n k i'' j'' i' j'", "using fwi_invariant_aux_1"], ["proof (prove)\nusing this:\n  j \\<le> n\n  i'' \\<le> 0\n  j'' \\<le> j\n  ?j'' \\<le> ?j \\<Longrightarrow>\n  fwi ?m ?n ?k ?i ?j ?i' ?j' \\<le> fwi ?m ?n ?k ?i ?j'' ?i' ?j'\n\ngoal (1 subgoal):\n 1. fwi m n k 0 j i' j' \\<le> fwi m n k i'' j'' i' j'", "by auto"], ["proof (state)\nthis:\n  fwi m n k 0 j i' j' \\<le> fwi m n k i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j'\n                                  \\<le> fwi m n k i'' j'' i' j';\n        j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                         \\<le> fwi m n k i'' j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j'\n                                  \\<le> fwi m n k i'' j'' i' j';\n        j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                         \\<le> fwi m n k i'' j'' i' j'", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'\n  j \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j'\n                                  \\<le> fwi m n k i'' j'' i' j';\n        j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                         \\<le> fwi m n k i'' j'' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'\n  j \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j i' j' \\<le> fwi m n k i'' j'' i' j'", "proof (cases \"i'' = Suc i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' = Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'\n 2. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "case True"], ["proof (state)\nthis:\n  i'' = Suc i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' = Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'\n 2. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "thus ?thesis"], ["proof (prove)\nusing this:\n  i'' = Suc i\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j i' j' \\<le> fwi m n k i'' j'' i' j'", "using Suc fwi_invariant_aux_1"], ["proof (prove)\nusing this:\n  i'' = Suc i\n  \\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'\n  j \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n  ?j'' \\<le> ?j \\<Longrightarrow>\n  fwi ?m ?n ?k ?i ?j ?i' ?j' \\<le> fwi ?m ?n ?k ?i ?j'' ?i' ?j'\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j i' j' \\<le> fwi m n k i'' j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j i' j' \\<le> fwi m n k i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "case False"], ["proof (state)\nthis:\n  i'' \\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "have \"fwi m n k (Suc i) j i' j' \\<le> fwi m n k (Suc i) 0 i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j i' j' \\<le> fwi m n k (Suc i) 0 i' j'", "by (rule fwi_invariant_aux_1[of 0]; simp)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j i' j' \\<le> fwi m n k (Suc i) 0 i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "also"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j i' j' \\<le> fwi m n k (Suc i) 0 i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "have \"\\<dots> \\<le> fwi m n k i n i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) 0 i' j' \\<le> fwi m n k i n i' j'", "by (simp add: fw_upd_mono)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) 0 i' j' \\<le> fwi m n k i n i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "also"], ["proof (state)\nthis:\n  fwi m n k (Suc i) 0 i' j' \\<le> fwi m n k i n i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "have \"\\<dots> \\<le> fwi m n k i j i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i n i' j' \\<le> fwi m n k i j i' j'", "using fwi_invariant_aux_1 False Suc"], ["proof (prove)\nusing this:\n  ?j'' \\<le> ?j \\<Longrightarrow>\n  fwi ?m ?n ?k ?i ?j ?i' ?j' \\<le> fwi ?m ?n ?k ?i ?j'' ?i' ?j'\n  i'' \\<noteq> Suc i\n  \\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'\n  j \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n\ngoal (1 subgoal):\n 1. fwi m n k i n i' j' \\<le> fwi m n k i j i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k i n i' j' \\<le> fwi m n k i j i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "also"], ["proof (state)\nthis:\n  fwi m n k i n i' j' \\<le> fwi m n k i j i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "have \"\\<dots> \\<le> fwi m n k i'' j'' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'", "using Suc False"], ["proof (prove)\nusing this:\n  \\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'\n  j \\<le> n\n  i'' \\<le> Suc i\n  j'' \\<le> j\n  i'' \\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k i j i' j' \\<le> fwi m n k i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>j \\<le> n; i'' \\<le> i; j'' \\<le> j\\<rbrakk>\n             \\<Longrightarrow> fwi m n k i j i' j'\n                               \\<le> fwi m n k i'' j'' i' j';\n     j \\<le> n; i'' \\<le> Suc i; j'' \\<le> j; i'' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) j i' j'\n                      \\<le> fwi m n k i'' j'' i' j'", "finally"], ["proof (chain)\npicking this:\n  fwi m n k (Suc i) j i' j' \\<le> fwi m n k i'' j'' i' j'", "show ?thesis"], ["proof (prove)\nusing this:\n  fwi m n k (Suc i) j i' j' \\<le> fwi m n k i'' j'' i' j'\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j i' j' \\<le> fwi m n k i'' j'' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j i' j' \\<le> fwi m n k i'' j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j i' j' \\<le> fwi m n k i'' j'' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma single_row_inv:\n  \"j' < j \\<Longrightarrow> fwi m n k i' j i' j' = fwi m n k i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j' < j \\<Longrightarrow> fwi m n k i' j i' j' = fwi m n k i' j' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. j' < 0 \\<Longrightarrow> fwi m n k i' 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>j' < j \\<Longrightarrow>\n                fwi m n k i' j i' j' = fwi m n k i' j' i' j';\n        j' < Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' (Suc j) i' j' = fwi m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  j' < 0\n\ngoal (2 subgoals):\n 1. j' < 0 \\<Longrightarrow> fwi m n k i' 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>j' < j \\<Longrightarrow>\n                fwi m n k i' j i' j' = fwi m n k i' j' i' j';\n        j' < Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' (Suc j) i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  j' < 0\n\ngoal (1 subgoal):\n 1. fwi m n k i' 0 i' j' = fwi m n k i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k i' 0 i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>j' < j \\<Longrightarrow>\n                fwi m n k i' j i' j' = fwi m n k i' j' i' j';\n        j' < Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' (Suc j) i' j' = fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>j' < j \\<Longrightarrow>\n                fwi m n k i' j i' j' = fwi m n k i' j' i' j';\n        j' < Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' (Suc j) i' j' = fwi m n k i' j' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  j' < j \\<Longrightarrow> fwi m n k i' j i' j' = fwi m n k i' j' i' j'\n  j' < Suc j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>j' < j \\<Longrightarrow>\n                fwi m n k i' j i' j' = fwi m n k i' j' i' j';\n        j' < Suc j\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' (Suc j) i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  j' < j \\<Longrightarrow> fwi m n k i' j i' j' = fwi m n k i' j' i' j'\n  j' < Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k i' (Suc j) i' j' = fwi m n k i' j' i' j'", "by (cases \"j' = j\") (simp add: fw_upd_def upd_def)+"], ["proof (state)\nthis:\n  fwi m n k i' (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma single_iteration_inv':\n  \"i' < i \\<Longrightarrow> j' \\<le> n \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j'", "proof (induction i arbitrary: j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>i' < 0; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 j i' j' = fwi m n k i' j' i' j'\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  i' < 0\n  j' \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>i' < 0; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 j i' j' = fwi m n k i' j' i' j'\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  i' < 0\n  j' \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k 0 j i' j' = fwi m n k i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k 0 j i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "proof (cases \"i = i'\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; i \\<noteq> i'\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  i \\<noteq> i'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; i \\<noteq> i'\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  i = i'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' < Suc i; j' \\<le> n; i = i'\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  i = i'\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "using single_row_inv[of j' n]"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n  i = i'\n  j' < n \\<Longrightarrow>\n  fwi ?m ?n ?k ?i' n ?i' j' = fwi ?m ?n ?k ?i' j' ?i' j'\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "by (cases \"j' = n\") (fastforce simp add: fw_upd_def upd_def)+"], ["proof (state)\nthis:\n  fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' < Suc i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' < Suc i; j' \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' < Suc i; j' \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' < Suc i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' < i; j' \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' < Suc i\n  j' \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma single_iteration_inv:\n  \"i' \\<le> i \\<Longrightarrow> j' \\<le> j \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j'", "proof (induction i arbitrary: j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 j i' j' = fwi m n k i' j' i' j'\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  i' \\<le> 0\n  j' \\<le> j\n  j \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 j i' j' = fwi m n k i' j' i' j'\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  i' \\<le> 0\n  j' \\<le> j\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k 0 j i' j' = fwi m n k i' j' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i' \\<le> 0; j' \\<le> 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k 0 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j i' j' =\n                                  fwi m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j) i' j' = fwi m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  i' \\<le> 0\n  j' \\<le> 0\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' \\<le> 0; j' \\<le> 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k 0 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j i' j' =\n                                  fwi m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j) i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  i' \\<le> 0\n  j' \\<le> 0\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k 0 0 i' j' = fwi m n k i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k 0 0 i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j i' j' =\n                                  fwi m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j) i' j' = fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j i' j' =\n                                  fwi m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j) i' j' = fwi m n k i' j' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k 0 j i' j' = fwi m n k i' j' i' j'\n  i' \\<le> 0\n  j' \\<le> Suc j\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j i' j' =\n                                  fwi m n k i' j' i' j';\n        i' \\<le> 0; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j) i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k 0 j i' j' = fwi m n k i' j' i' j'\n  i' \\<le> 0\n  j' \\<le> Suc j\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k 0 (Suc j) i' j' = fwi m n k i' j' i' j'", "using 0"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> 0; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k 0 j i' j' = fwi m n k i' j' i' j'\n  i' \\<le> 0\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' \\<le> 0\n  j' \\<le> ja__\n  ja__ \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k 0 (Suc j) i' j' = fwi m n k i' j' i' j'", "by (cases \"j' = Suc j\") (simp add: fw_upd_def upd_def)+"], ["proof (state)\nthis:\n  fwi m n k 0 (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k 0 j i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "case (Suc i)"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> j\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i j i' j' =\n                                     fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> j\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> 0\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j.\n                \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i j i' j' =\n                                  fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> 0; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n 2. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> 0\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'", "by (cases \"i' = Suc i\") (simp add: fw_upd_def upd_def)+"], ["proof (state)\nthis:\n  fwi m n k (Suc i) 0 i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<lbrakk>\\<And>j.\n                            \\<lbrakk>i' \\<le> i; j' \\<le> j;\n                             j \\<le> n\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i j i' j' =\n        fwi m n k i' j' i' j';\n                 i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                                  fwi m n k i' j' i' j';\n        \\<And>j.\n           \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n        i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                         fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'", "proof (cases \"i' = Suc i\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' = Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' = Suc i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' = Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' = Suc i\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'", "proof (cases \"j' = Suc j\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' = Suc i;\n     j' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' = Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' = Suc i\n  j' = Suc j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' = Suc i;\n     j' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' = Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' = Suc i\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'", "by simp"], ["proof (state)\nthis:\n  fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' = Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' = Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' = Suc i\n  j' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' = Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' = Suc i\n  j' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n;\n     i' \\<noteq> Suc i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'", "proof (cases \"j' = Suc j\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' \\<noteq> Suc i;\n     j' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' \\<noteq> Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n  j' = Suc j\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' \\<noteq> Suc i;\n     j' = Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'\n 2. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' \\<noteq> Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'", "by - (rule single_iteration_inv'; simp)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' \\<noteq> Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' \\<noteq> Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n  j' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<And>j.\n                         \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n                         \\<Longrightarrow> fwi m n k i j i' j' =\n     fwi m n k i' j' i' j';\n              i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n             \\<Longrightarrow> fwi m n k (Suc i) j i' j' =\n                               fwi m n k i' j' i' j';\n     \\<And>j.\n        \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n        \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n     i' \\<le> Suc i; j' \\<le> Suc j; Suc j \\<le> n; i' \\<noteq> Suc i;\n     j' \\<noteq> Suc j\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) (Suc j) i' j' =\n                      fwi m n k i' j' i' j'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j.\n              \\<lbrakk>i' \\<le> i; j' \\<le> j; j \\<le> n\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i j i' j' = fwi m n k i' j' i' j';\n   i' \\<le> Suc i; j' \\<le> j; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n  \\<lbrakk>i' \\<le> i; j' \\<le> ?j1; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i ?j1 i' j' = fwi m n k i' j' i' j'\n  i' \\<le> Suc i\n  j' \\<le> Suc j\n  Suc j \\<le> n\n  i' \\<noteq> Suc i\n  j' \\<noteq> Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i) (Suc j) i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j i' j' = fwi m n k i' j' i' j'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fwi_innermost_id:\n  \"i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j", "proof (induction i' arbitrary: j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j'. 0 < i \\<Longrightarrow> fwi m n k 0 j' i j = m i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "case 0"], ["proof (state)\nthis:\n  0 < i\n\ngoal (2 subgoals):\n 1. \\<And>j'. 0 < i \\<Longrightarrow> fwi m n k 0 j' i j = m i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  0 < i\n\ngoal (1 subgoal):\n 1. fwi m n k 0 j' i j = m i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < i \\<Longrightarrow> fwi m n k 0 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>0 < i \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        0 < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "case 0"], ["proof (state)\nthis:\n  0 < i\n\ngoal (2 subgoals):\n 1. 0 < i \\<Longrightarrow> fwi m n k 0 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>0 < i \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        0 < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  0 < i\n\ngoal (1 subgoal):\n 1. fwi m n k 0 0 i j = m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k 0 0 i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>0 < i \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        0 < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>0 < i \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        0 < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "case (Suc j')"], ["proof (state)\nthis:\n  0 < i \\<Longrightarrow> fwi m n k 0 j' i j = m i j\n  0 < i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>0 < i \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        0 < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  0 < i \\<Longrightarrow> fwi m n k 0 j' i j = m i j\n  0 < i\n\ngoal (1 subgoal):\n 1. fwi m n k 0 (Suc j') i j = m i j", "by (auto simp: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k 0 (Suc j') i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k 0 j' i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "case (Suc i')"], ["proof (state)\nthis:\n  i' < i \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  i' < i \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i') j' i j = m i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n     Suc i' < i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i') 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            i' < i \\<Longrightarrow>\n                            fwi m n k i' j' i j = m i j;\n                 Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "case 0"], ["proof (state)\nthis:\n  i' < i \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  Suc i' < i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n     Suc i' < i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i') 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            i' < i \\<Longrightarrow>\n                            fwi m n k i' j' i j = m i j;\n                 Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  i' < i \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i') 0 i j = m i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k (Suc i') 0 i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            i' < i \\<Longrightarrow>\n                            fwi m n k i' j' i j = m i j;\n                 Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            i' < i \\<Longrightarrow>\n                            fwi m n k i' j' i j = m i j;\n                 Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j'. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n   Suc i' < i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j\n  i' < i \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            i' < i \\<Longrightarrow>\n                            fwi m n k i' j' i j = m i j;\n                 Suc i' < i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc i' < i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j'. i' < i \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n   Suc i' < i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j\n  i' < i \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  Suc i' < i\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i') (Suc j') i j = m i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k (Suc i') (Suc j') i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i') j' i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fwi_middle_id:\n  \"j' < j \\<Longrightarrow> i' \\<le> i \\<Longrightarrow> fwi m n k i' j' i j = m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i' j' i j = m i j", "proof (induction i' arbitrary: j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 j' i j = m i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "case 0"], ["proof (state)\nthis:\n  j' < j\n  0 \\<le> i\n\ngoal (2 subgoals):\n 1. \\<And>j'.\n       \\<lbrakk>j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 j' i j = m i j\n 2. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  j' < j\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. fwi m n k 0 j' i j = m i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < j; 0 \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k 0 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "case 0"], ["proof (state)\nthis:\n  0 < j\n  0 \\<le> i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < j; 0 \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k 0 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  0 < j\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. fwi m n k 0 0 i j = m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k 0 0 i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>j' < j; 0 \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k 0 j' i j = m i j\n  Suc j' < j\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>j' < j; 0 \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k 0 j' i j = m i j;\n        Suc j' < j; 0 \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k 0 (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>j' < j; 0 \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k 0 j' i j = m i j\n  Suc j' < j\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. fwi m n k 0 (Suc j') i j = m i j", "by (auto simp: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k 0 (Suc j') i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k 0 j' i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "case (Suc i')"], ["proof (state)\nthis:\n  \\<lbrakk>?j'1 < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>i' j'.\n       \\<lbrakk>\\<And>j'.\n                   \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j'1 < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i') j' i j = m i j", "proof (induction j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n     0 < j; Suc i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i') 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n                 j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "case 0"], ["proof (state)\nthis:\n  \\<lbrakk>?j'1 < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  0 < j\n  Suc i' \\<le> i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j'.\n                \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n     0 < j; Suc i' \\<le> i\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i') 0 i j = m i j\n 2. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n                 j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j'1 < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  0 < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i') 0 i j = m i j", "using fwi_innermost_id"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j'1 < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  0 < j\n  Suc i' \\<le> i\n  ?i' < ?i \\<Longrightarrow> fwi ?m ?n ?k ?i' ?j' ?i ?j = ?m ?i ?j\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i') 0 i j = m i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k (Suc i') 0 i j = m i j\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n                 j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n                 j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "case (Suc j')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n   j' < j; Suc i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j\n  \\<lbrakk>?j'1 < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  Suc j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>j'.\n       \\<lbrakk>\\<lbrakk>\\<And>j'.\n                            \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n                            \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n                 j' < j; Suc i' \\<le> i\\<rbrakk>\n                \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j;\n        \\<And>j'.\n           \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n           \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n        Suc j' < j; Suc i' \\<le> i\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i') (Suc j') i j = m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>j'.\n              \\<lbrakk>j' < j; i' \\<le> i\\<rbrakk>\n              \\<Longrightarrow> fwi m n k i' j' i j = m i j;\n   j' < j; Suc i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k (Suc i') j' i j = m i j\n  \\<lbrakk>?j'1 < j; i' \\<le> i\\<rbrakk>\n  \\<Longrightarrow> fwi m n k i' ?j'1 i j = m i j\n  Suc j' < j\n  Suc i' \\<le> i\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i') (Suc j') i j = m i j", "by (auto simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k (Suc i') (Suc j') i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i') j' i j = m i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fwi_outermost_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fwi m n k i j i j \\<le> m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "proof (cases j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "case 0"], ["proof (state)\nthis:\n  j = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "assume \"i \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; j = 0\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k i j i j \\<le> m i j", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; i = 0\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "case 0"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; i = 0\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i j \\<le> m i j\n 2. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. fwi m n k i j i j \\<le> m i j", "using \\<open>j = 0\\<close>"], ["proof (prove)\nusing this:\n  i = 0\n  j = 0\n\ngoal (1 subgoal):\n 1. fwi m n k i j i j \\<le> m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k i j i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "case (Suc i')"], ["proof (state)\nthis:\n  i = Suc i'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "hence \"fwi m n k i' n (Suc i') 0 = m (Suc i') 0\""], ["proof (prove)\nusing this:\n  i = Suc i'\n\ngoal (1 subgoal):\n 1. fwi m n k i' n (Suc i') 0 = m (Suc i') 0", "using fwi_innermost_id \\<open>i \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  i = Suc i'\n  ?i' < ?i \\<Longrightarrow> fwi ?m ?n ?k ?i' ?j' ?i ?j = ?m ?i ?j\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k i' n (Suc i') 0 = m (Suc i') 0", "by simp"], ["proof (state)\nthis:\n  fwi m n k i' n (Suc i') 0 = m (Suc i') 0\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; i = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  fwi m n k i' n (Suc i') 0 = m (Suc i') 0\n\ngoal (1 subgoal):\n 1. fwi m n k i j i j \\<le> m i j", "using \\<open>j = 0\\<close> Suc"], ["proof (prove)\nusing this:\n  fwi m n k i' n (Suc i') 0 = m (Suc i') 0\n  j = 0\n  i = Suc i'\n\ngoal (1 subgoal):\n 1. fwi m n k i j i j \\<le> m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k i j i j \\<le> m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k i j i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "case (Suc j')"], ["proof (state)\nthis:\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "assume \"i \\<le> n\" \"j \\<le> n\""], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "hence \"fwi m n k i j' i (Suc j') = m i (Suc j')\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k i j' i (Suc j') = m i (Suc j')", "using fwi_middle_id Suc"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  \\<lbrakk>?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fwi ?m ?n ?k ?i' ?j' ?i ?j = ?m ?i ?j\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. fwi m n k i j' i (Suc j') = m i (Suc j')", "by simp"], ["proof (state)\nthis:\n  fwi m n k i j' i (Suc j') = m i (Suc j')\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i \\<le> n; j \\<le> n; j = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j \\<le> m i j", "thus ?thesis"], ["proof (prove)\nusing this:\n  fwi m n k i j' i (Suc j') = m i (Suc j')\n\ngoal (1 subgoal):\n 1. fwi m n k i j i j \\<le> m i j", "using Suc"], ["proof (prove)\nusing this:\n  fwi m n k i j' i (Suc j') = m i (Suc j')\n  j = Suc j'\n\ngoal (1 subgoal):\n 1. fwi m n k i j i j \\<le> m i j", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k i j i j \\<le> m i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fwi_mono:\n  \"fwi m n k i' j' i j \\<le> m i j\" if \"i \\<le> n\" \"j \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j \\<le> m i j", "proof (cases \"i' < i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i' < i \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j\n 2. \\<not> i' < i \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "case True"], ["proof (state)\nthis:\n  i' < i\n\ngoal (2 subgoals):\n 1. i' < i \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j\n 2. \\<not> i' < i \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "then"], ["proof (chain)\npicking this:\n  i' < i", "have \"fwi m n k i' j' i j = m i j\""], ["proof (prove)\nusing this:\n  i' < i\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j = m i j", "by (simp add: fwi_innermost_id)"], ["proof (state)\nthis:\n  fwi m n k i' j' i j = m i j\n\ngoal (2 subgoals):\n 1. i' < i \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j\n 2. \\<not> i' < i \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "then"], ["proof (chain)\npicking this:\n  fwi m n k i' j' i j = m i j", "show ?thesis"], ["proof (prove)\nusing this:\n  fwi m n k i' j' i j = m i j\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j \\<le> m i j", "by simp"], ["proof (state)\nthis:\n  fwi m n k i' j' i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. \\<not> i' < i \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i' < i \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "case False"], ["proof (state)\nthis:\n  \\<not> i' < i\n\ngoal (1 subgoal):\n 1. \\<not> i' < i \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j \\<le> m i j", "proof (cases \"i' > i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j\n 2. \\<not> i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "case True"], ["proof (state)\nthis:\n  i < i'\n\ngoal (2 subgoals):\n 1. i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j\n 2. \\<not> i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "then"], ["proof (chain)\npicking this:\n  i < i'", "have \"fwi m n k i' j' i j = fwi m n k i j i j\""], ["proof (prove)\nusing this:\n  i < i'\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j = fwi m n k i j i j", "by (simp add: single_iteration_inv' that(2))"], ["proof (state)\nthis:\n  fwi m n k i' j' i j = fwi m n k i j i j\n\ngoal (2 subgoals):\n 1. i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j\n 2. \\<not> i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "with fwi_outermost_mono[OF that]"], ["proof (chain)\npicking this:\n  fwi ?m n ?k i j i j \\<le> ?m i j\n  fwi m n k i' j' i j = fwi m n k i j i j", "show ?thesis"], ["proof (prove)\nusing this:\n  fwi ?m n ?k i j i j \\<le> ?m i j\n  fwi m n k i' j' i j = fwi m n k i j i j\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j \\<le> m i j", "by simp"], ["proof (state)\nthis:\n  fwi m n k i' j' i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. \\<not> i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "case False"], ["proof (state)\nthis:\n  \\<not> i < i'\n\ngoal (1 subgoal):\n 1. \\<not> i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "with \\<open>\\<not> i' < i\\<close>"], ["proof (chain)\npicking this:\n  \\<not> i' < i\n  \\<not> i < i'", "have [simp]: \"i' = i\""], ["proof (prove)\nusing this:\n  \\<not> i' < i\n  \\<not> i < i'\n\ngoal (1 subgoal):\n 1. i' = i", "by simp"], ["proof (state)\nthis:\n  i' = i\n\ngoal (1 subgoal):\n 1. \\<not> i < i' \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j \\<le> m i j", "proof (cases \"j' < j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j\n 2. \\<not> j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "case True"], ["proof (state)\nthis:\n  j' < j\n\ngoal (2 subgoals):\n 1. j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j\n 2. \\<not> j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "then"], ["proof (chain)\npicking this:\n  j' < j", "have \"fwi m n k i' j' i j = m i j\""], ["proof (prove)\nusing this:\n  j' < j\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j = m i j", "by (simp add: fwi_middle_id)"], ["proof (state)\nthis:\n  fwi m n k i' j' i j = m i j\n\ngoal (2 subgoals):\n 1. j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j\n 2. \\<not> j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "then"], ["proof (chain)\npicking this:\n  fwi m n k i' j' i j = m i j", "show ?thesis"], ["proof (prove)\nusing this:\n  fwi m n k i' j' i j = m i j\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j \\<le> m i j", "by simp"], ["proof (state)\nthis:\n  fwi m n k i' j' i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. \\<not> j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "case False"], ["proof (state)\nthis:\n  \\<not> j' < j\n\ngoal (1 subgoal):\n 1. \\<not> j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "then"], ["proof (chain)\npicking this:\n  \\<not> j' < j", "have \"fwi m n k i' j' i j = fwi m n k i j i j\""], ["proof (prove)\nusing this:\n  \\<not> j' < j\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j = fwi m n k i j i j", "by (cases \"j' = j\"; simp add: single_row_inv)"], ["proof (state)\nthis:\n  fwi m n k i' j' i j = fwi m n k i j i j\n\ngoal (1 subgoal):\n 1. \\<not> j' < j \\<Longrightarrow> fwi m n k i' j' i j \\<le> m i j", "with fwi_outermost_mono[OF that]"], ["proof (chain)\npicking this:\n  fwi ?m n ?k i j i j \\<le> ?m i j\n  fwi m n k i' j' i j = fwi m n k i j i j", "show ?thesis"], ["proof (prove)\nusing this:\n  fwi ?m n ?k i j i j \\<le> ?m i j\n  fwi m n k i' j' i j = fwi m n k i j i j\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j \\<le> m i j", "by simp"], ["proof (state)\nthis:\n  fwi m n k i' j' i j \\<le> m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k i' j' i j \\<le> m i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k i' j' i j \\<le> m i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Suc_innermost_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k i j", "by (simp add: fwi_mono)"], ["", "lemma fw_mono:\n  \"i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw m n k i j \\<le> m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j \\<le> m i j", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j \\<le> m i j\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> m i j", "case 0"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j \\<le> m i j\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> m i j", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i j \\<le> m i j", "using fwi_mono"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  \\<lbrakk>?i \\<le> ?n; ?j \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fwi ?m ?n ?k ?i' ?j' ?i ?j \\<le> ?m ?i ?j\n\ngoal (1 subgoal):\n 1. fw m n 0 i j \\<le> m i j", "by simp"], ["proof (state)\nthis:\n  fw m n 0 i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> m i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> m i j", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j \\<le> m i j\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> m i j;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> m i j", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j \\<le> m i j\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j \\<le> m i j", "using Suc_innermost_mono[OF Suc.prems, of m k]"], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j \\<le> m i j\n  i \\<le> n\n  j \\<le> n\n  fw m n (Suc k) i j \\<le> fw m n k i j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j \\<le> m i j", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j \\<le> m i j\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Justifies the use of destructive updates in the case that there is no negative cycle for \\<open>k\\<close>.\n\\<close>"], ["", "lemma fwi_step:\n  \"m k k \\<ge> 0 \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fwi m n k i j i j = min (m i j) (m i k + m k j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> m k k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i j i j = min (m i j) (m i k + m k j)", "proof (induction _ \"(i, j)\" arbitrary: i j rule: wf_induct[of \"less_than <*lex*> less_than\"],\n      (auto; fail), goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       (0::'a) \\<le> m k k \\<longrightarrow>\n                       x \\<le> n \\<longrightarrow>\n                       xa \\<le> n \\<longrightarrow>\n                       k \\<le> n \\<longrightarrow>\n                       fwi m n k x xa x xa = min (m x xa) (m x k + m k xa));\n        (0::'a) \\<le> m k k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j = min (m i j) (m i k + m k j)", "case (1 i' j')"], ["proof (state)\nthis:\n  \\<forall>y.\n     (y, i', j') \\<in> less_than <*lex*> less_than \\<longrightarrow>\n     (\\<forall>x xa.\n         y = (x, xa) \\<longrightarrow>\n         (0::'a) \\<le> m k k \\<longrightarrow>\n         x \\<le> n \\<longrightarrow>\n         xa \\<le> n \\<longrightarrow>\n         k \\<le> n \\<longrightarrow>\n         fwi m n k x xa x xa = min (m x xa) (m x k + m k xa))\n  (0::'a) \\<le> m k k\n  i' \\<le> n\n  j' \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       (0::'a) \\<le> m k k \\<longrightarrow>\n                       x \\<le> n \\<longrightarrow>\n                       xa \\<le> n \\<longrightarrow>\n                       k \\<le> n \\<longrightarrow>\n                       fwi m n k x xa x xa = min (m x xa) (m x k + m k xa));\n        (0::'a) \\<le> m k k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j = min (m i j) (m i k + m k j)", "note assms = 1(2-)"], ["proof (state)\nthis:\n  (0::'a) \\<le> m k k\n  i' \\<le> n\n  j' \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       (0::'a) \\<le> m k k \\<longrightarrow>\n                       x \\<le> n \\<longrightarrow>\n                       xa \\<le> n \\<longrightarrow>\n                       k \\<le> n \\<longrightarrow>\n                       fwi m n k x xa x xa = min (m x xa) (m x k + m k xa));\n        (0::'a) \\<le> m k k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j = min (m i j) (m i k + m k j)", "note IH = 1(1)"], ["proof (state)\nthis:\n  \\<forall>y.\n     (y, i', j') \\<in> less_than <*lex*> less_than \\<longrightarrow>\n     (\\<forall>x xa.\n         y = (x, xa) \\<longrightarrow>\n         (0::'a) \\<le> m k k \\<longrightarrow>\n         x \\<le> n \\<longrightarrow>\n         xa \\<le> n \\<longrightarrow>\n         k \\<le> n \\<longrightarrow>\n         fwi m n k x xa x xa = min (m x xa) (m x k + m k xa))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       (0::'a) \\<le> m k k \\<longrightarrow>\n                       x \\<le> n \\<longrightarrow>\n                       xa \\<le> n \\<longrightarrow>\n                       k \\<le> n \\<longrightarrow>\n                       fwi m n k x xa x xa = min (m x xa) (m x k + m k xa));\n        (0::'a) \\<le> m k k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j = min (m i j) (m i k + m k j)", "note [simp] = fwi_innermost_id fwi_middle_id"], ["proof (state)\nthis:\n  ?i' < ?i \\<Longrightarrow> fwi ?m ?n ?k ?i' ?j' ?i ?j = ?m ?i ?j\n  \\<lbrakk>?j' < ?j; ?i' \\<le> ?i\\<rbrakk>\n  \\<Longrightarrow> fwi ?m ?n ?k ?i' ?j' ?i ?j = ?m ?i ?j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       (0::'a) \\<le> m k k \\<longrightarrow>\n                       x \\<le> n \\<longrightarrow>\n                       xa \\<le> n \\<longrightarrow>\n                       k \\<le> n \\<longrightarrow>\n                       fwi m n k x xa x xa = min (m x xa) (m x k + m k xa));\n        (0::'a) \\<le> m k k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j = min (m i j) (m i k + m k j)", "note simps = add_increasing add_increasing2 ord.min_def fw_upd_def upd_def"], ["proof (state)\nthis:\n  \\<lbrakk>(0::'a) \\<le> ?a; ?b \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?b \\<le> ?a + ?c\n  \\<lbrakk>(0::'a) \\<le> ?c; ?b \\<le> ?a\\<rbrakk>\n  \\<Longrightarrow> ?b \\<le> ?a + ?c\n  ord.min ?less_eq ?a ?b = (if ?less_eq ?a ?b then ?a else ?b)\n  fw_upd ?m ?k ?i ?j \\<equiv>\n  upd ?m ?i ?j (min (?m ?i ?j) (?m ?i ?k + ?m ?k ?j))\n  upd ?m ?x ?y ?v = ?m(?x := (?m ?x)(?y := ?v))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>y.\n                   (y, i, j)\n                   \\<in> less_than <*lex*> less_than \\<longrightarrow>\n                   (\\<forall>x xa.\n                       y = (x, xa) \\<longrightarrow>\n                       (0::'a) \\<le> m k k \\<longrightarrow>\n                       x \\<le> n \\<longrightarrow>\n                       xa \\<le> n \\<longrightarrow>\n                       k \\<le> n \\<longrightarrow>\n                       fwi m n k x xa x xa = min (m x xa) (m x k + m k xa));\n        (0::'a) \\<le> m k k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i j i j = min (m i j) (m i k + m k j)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "proof (cases i')"], ["proof (state)\ngoal (2 subgoals):\n 1. i' = 0 \\<Longrightarrow>\n    fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "case [simp]: 0"], ["proof (state)\nthis:\n  i' = 0\n\ngoal (2 subgoals):\n 1. i' = 0 \\<Longrightarrow>\n    fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "thus ?thesis"], ["proof (prove)\nusing this:\n  i' = 0\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "proof (cases j')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = 0; j' = 0\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i' j' i' j' =\n                      min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "case 0"], ["proof (state)\nthis:\n  j' = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>i' = 0; j' = 0\\<rbrakk>\n    \\<Longrightarrow> fwi m n k i' j' i' j' =\n                      min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "thus ?thesis"], ["proof (prove)\nusing this:\n  j' = 0\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "case (Suc j)"], ["proof (state)\nthis:\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "hence \"fwi m n k 0 j 0 (Suc j) = m 0 (Suc j)\""], ["proof (prove)\nusing this:\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k 0 j 0 (Suc j) = m 0 (Suc j)", "by simp"], ["proof (state)\nthis:\n  fwi m n k 0 j 0 (Suc j) = m 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "moreover"], ["proof (state)\nthis:\n  fwi m n k 0 j 0 (Suc j) = m 0 (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "have \"fwi m n k 0 j k (Suc j) = m k (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k 0 j k (Suc j) = m k (Suc j)", "by simp"], ["proof (state)\nthis:\n  fwi m n k 0 j k (Suc j) = m k (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "moreover"], ["proof (state)\nthis:\n  fwi m n k 0 j k (Suc j) = m k (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "have \"fwi m n k 0 j 0 k = m 0 k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k 0 j 0 k = m 0 k", "proof (cases \"j < k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < k \\<Longrightarrow> fwi m n k 0 j 0 k = m 0 k\n 2. \\<not> j < k \\<Longrightarrow> fwi m n k 0 j 0 k = m 0 k", "case True"], ["proof (state)\nthis:\n  j < k\n\ngoal (2 subgoals):\n 1. j < k \\<Longrightarrow> fwi m n k 0 j 0 k = m 0 k\n 2. \\<not> j < k \\<Longrightarrow> fwi m n k 0 j 0 k = m 0 k", "then"], ["proof (chain)\npicking this:\n  j < k", "show ?thesis"], ["proof (prove)\nusing this:\n  j < k\n\ngoal (1 subgoal):\n 1. fwi m n k 0 j 0 k = m 0 k", "by simp"], ["proof (state)\nthis:\n  fwi m n k 0 j 0 k = m 0 k\n\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> fwi m n k 0 j 0 k = m 0 k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> fwi m n k 0 j 0 k = m 0 k", "case False"], ["proof (state)\nthis:\n  \\<not> j < k\n\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> fwi m n k 0 j 0 k = m 0 k", "then"], ["proof (chain)\npicking this:\n  \\<not> j < k", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> j < k\n\ngoal (1 subgoal):\n 1. fwi m n k 0 j 0 k = m 0 k", "apply (subst single_iteration_inv; simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<not> j < k \\<Longrightarrow> j \\<le> n\n 2. \\<not> j < k \\<Longrightarrow> fwi m n k 0 k 0 k = m 0 k", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> j \\<le> n", "using assms Suc"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> m k k\n  i' \\<le> n\n  j' \\<le> n\n  k \\<le> n\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> j \\<le> n", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> fwi m n k 0 k 0 k = m 0 k", "using assms"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> m k k\n  i' \\<le> n\n  j' \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> fwi m n k 0 k 0 k = m 0 k", "by (cases k; simp add: simps)"], ["proof (state)\nthis:\n  fwi m n k 0 j 0 k = m 0 k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k 0 j 0 k = m 0 k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>i' = 0; j' = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k i' j' i' j' =\n                         min (m i' j') (m i' k + m k j')", "ultimately"], ["proof (chain)\npicking this:\n  fwi m n k 0 j 0 (Suc j) = m 0 (Suc j)\n  fwi m n k 0 j k (Suc j) = m k (Suc j)\n  fwi m n k 0 j 0 k = m 0 k", "show ?thesis"], ["proof (prove)\nusing this:\n  fwi m n k 0 j 0 (Suc j) = m 0 (Suc j)\n  fwi m n k 0 j k (Suc j) = m k (Suc j)\n  fwi m n k 0 j 0 k = m 0 k\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "using Suc assms"], ["proof (prove)\nusing this:\n  fwi m n k 0 j 0 (Suc j) = m 0 (Suc j)\n  fwi m n k 0 j k (Suc j) = m k (Suc j)\n  fwi m n k 0 j 0 k = m 0 k\n  j' = Suc j\n  (0::'a) \\<le> m k k\n  i' \\<le> n\n  j' \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "case [simp]: (Suc i)"], ["proof (state)\nthis:\n  i' = Suc i\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       i' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "proof (cases j')"], ["proof (state)\ngoal (2 subgoals):\n 1. j' = 0 \\<Longrightarrow>\n    fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "case 0"], ["proof (state)\nthis:\n  j' = 0\n\ngoal (2 subgoals):\n 1. j' = 0 \\<Longrightarrow>\n    fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "have \"fwi m n k i n (Suc i) 0 = m (Suc i) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i n (Suc i) 0 = m (Suc i) 0", "by simp"], ["proof (state)\nthis:\n  fwi m n k i n (Suc i) 0 = m (Suc i) 0\n\ngoal (2 subgoals):\n 1. j' = 0 \\<Longrightarrow>\n    fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "moreover"], ["proof (state)\nthis:\n  fwi m n k i n (Suc i) 0 = m (Suc i) 0\n\ngoal (2 subgoals):\n 1. j' = 0 \\<Longrightarrow>\n    fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "have \"fwi m n k i n (Suc i) k = m (Suc i) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i n (Suc i) k = m (Suc i) k", "by simp"], ["proof (state)\nthis:\n  fwi m n k i n (Suc i) k = m (Suc i) k\n\ngoal (2 subgoals):\n 1. j' = 0 \\<Longrightarrow>\n    fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "moreover"], ["proof (state)\nthis:\n  fwi m n k i n (Suc i) k = m (Suc i) k\n\ngoal (2 subgoals):\n 1. j' = 0 \\<Longrightarrow>\n    fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "have \"fwi m n k i n k 0 = m k 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i n k 0 = m k 0", "proof (cases \"i < k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < k \\<Longrightarrow> fwi m n k i n k 0 = m k 0\n 2. \\<not> i < k \\<Longrightarrow> fwi m n k i n k 0 = m k 0", "case True"], ["proof (state)\nthis:\n  i < k\n\ngoal (2 subgoals):\n 1. i < k \\<Longrightarrow> fwi m n k i n k 0 = m k 0\n 2. \\<not> i < k \\<Longrightarrow> fwi m n k i n k 0 = m k 0", "then"], ["proof (chain)\npicking this:\n  i < k", "show ?thesis"], ["proof (prove)\nusing this:\n  i < k\n\ngoal (1 subgoal):\n 1. fwi m n k i n k 0 = m k 0", "by simp"], ["proof (state)\nthis:\n  fwi m n k i n k 0 = m k 0\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> fwi m n k i n k 0 = m k 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> fwi m n k i n k 0 = m k 0", "case False"], ["proof (state)\nthis:\n  \\<not> i < k\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> fwi m n k i n k 0 = m k 0", "then"], ["proof (chain)\npicking this:\n  \\<not> i < k", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i < k\n\ngoal (1 subgoal):\n 1. fwi m n k i n k 0 = m k 0", "apply (subst single_iteration_inv; simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> fwi m n k k 0 k 0 = m k 0", "using 0 \\<open>m k k \\<ge> _\\<close>"], ["proof (prove)\nusing this:\n  j' = 0\n  (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> fwi m n k k 0 k 0 = m k 0", "by (cases k; simp add: simps)"], ["proof (state)\nthis:\n  fwi m n k i n k 0 = m k 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k i n k 0 = m k 0\n\ngoal (2 subgoals):\n 1. j' = 0 \\<Longrightarrow>\n    fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n 2. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "ultimately"], ["proof (chain)\npicking this:\n  fwi m n k i n (Suc i) 0 = m (Suc i) 0\n  fwi m n k i n (Suc i) k = m (Suc i) k\n  fwi m n k i n k 0 = m k 0", "show ?thesis"], ["proof (prove)\nusing this:\n  fwi m n k i n (Suc i) 0 = m (Suc i) 0\n  fwi m n k i n (Suc i) k = m (Suc i) k\n  fwi m n k i n k 0 = m k 0\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "using 0"], ["proof (prove)\nusing this:\n  fwi m n k i n (Suc i) 0 = m (Suc i) 0\n  fwi m n k i n (Suc i) k = m (Suc i) k\n  fwi m n k i n k 0 = m k 0\n  j' = 0\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "by (simp add: fw_upd_def upd_def)"], ["proof (state)\nthis:\n  fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "case Suc_j: (Suc j)"], ["proof (state)\nthis:\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "from \\<open>j' \\<le> n\\<close> \\<open>j' = _\\<close>"], ["proof (chain)\npicking this:\n  j' \\<le> n\n  j' = Suc j", "have [simp]: \"j \\<le> n\" \"Suc j \\<le> n\""], ["proof (prove)\nusing this:\n  j' \\<le> n\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. j \\<le> n &&& Suc j \\<le> n", "by simp+"], ["proof (state)\nthis:\n  j \\<le> n\n  Suc j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "have diag: \"fwi m n k k k k k = m k k\" if \"k \\<le> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k k k k k = m k k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fwi m n k k k k k = m k k", "from that IH assms"], ["proof (chain)\npicking this:\n  k \\<le> i\n  \\<forall>y.\n     (y, i', j') \\<in> less_than <*lex*> less_than \\<longrightarrow>\n     (\\<forall>x xa.\n         y = (x, xa) \\<longrightarrow>\n         (0::'a) \\<le> m k k \\<longrightarrow>\n         x \\<le> n \\<longrightarrow>\n         xa \\<le> n \\<longrightarrow>\n         k \\<le> n \\<longrightarrow>\n         fwi m n k x xa x xa = min (m x xa) (m x k + m k xa))\n  (0::'a) \\<le> m k k\n  i' \\<le> n\n  j' \\<le> n\n  k \\<le> n", "have \"fwi m n k k k k k = min (m k k) (m k k + m k k)\""], ["proof (prove)\nusing this:\n  k \\<le> i\n  \\<forall>y.\n     (y, i', j') \\<in> less_than <*lex*> less_than \\<longrightarrow>\n     (\\<forall>x xa.\n         y = (x, xa) \\<longrightarrow>\n         (0::'a) \\<le> m k k \\<longrightarrow>\n         x \\<le> n \\<longrightarrow>\n         xa \\<le> n \\<longrightarrow>\n         k \\<le> n \\<longrightarrow>\n         fwi m n k x xa x xa = min (m x xa) (m x k + m k xa))\n  (0::'a) \\<le> m k k\n  i' \\<le> n\n  j' \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k k k k k = min (m k k) (m k k + m k k)", "by auto"], ["proof (state)\nthis:\n  fwi m n k k k k k = min (m k k) (m k k + m k k)\n\ngoal (1 subgoal):\n 1. fwi m n k k k k k = m k k", "with \\<open>m k k \\<ge> 0\\<close> \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  fwi m n k k k k k = min (m k k) (m k k + m k k)", "show ?thesis"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  fwi m n k k k k k = min (m k k) (m k k + m k k)\n\ngoal (1 subgoal):\n 1. fwi m n k k k k k = m k k", "by (simp add: simps)"], ["proof (state)\nthis:\n  fwi m n k k k k k = m k k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<le> i \\<Longrightarrow> fwi m n k k k k k = m k k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "have **: \"fwi m n k i n k k = m k k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i n k k = m k k", "proof (cases \"i < k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < k \\<Longrightarrow> fwi m n k i n k k = m k k\n 2. \\<not> i < k \\<Longrightarrow> fwi m n k i n k k = m k k", "case True"], ["proof (state)\nthis:\n  i < k\n\ngoal (2 subgoals):\n 1. i < k \\<Longrightarrow> fwi m n k i n k k = m k k\n 2. \\<not> i < k \\<Longrightarrow> fwi m n k i n k k = m k k", "then"], ["proof (chain)\npicking this:\n  i < k", "show ?thesis"], ["proof (prove)\nusing this:\n  i < k\n\ngoal (1 subgoal):\n 1. fwi m n k i n k k = m k k", "by simp"], ["proof (state)\nthis:\n  fwi m n k i n k k = m k k\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> fwi m n k i n k k = m k k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> fwi m n k i n k k = m k k", "case False"], ["proof (state)\nthis:\n  \\<not> i < k\n\ngoal (1 subgoal):\n 1. \\<not> i < k \\<Longrightarrow> fwi m n k i n k k = m k k", "then"], ["proof (chain)\npicking this:\n  \\<not> i < k", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i < k\n\ngoal (1 subgoal):\n 1. fwi m n k i n k k = m k k", "by (subst single_iteration_inv; simp add: diag \\<open>k \\<le> n\\<close>)"], ["proof (state)\nthis:\n  fwi m n k i n k k = m k k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k i n k k = m k k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "have diag2: \"fwi m n k k j k k = m k k\" if \"k \\<le> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k k j k k = m k k", "proof (cases \"j < k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < k \\<Longrightarrow> fwi m n k k j k k = m k k\n 2. \\<not> j < k \\<Longrightarrow> fwi m n k k j k k = m k k", "case True"], ["proof (state)\nthis:\n  j < k\n\ngoal (2 subgoals):\n 1. j < k \\<Longrightarrow> fwi m n k k j k k = m k k\n 2. \\<not> j < k \\<Longrightarrow> fwi m n k k j k k = m k k", "then"], ["proof (chain)\npicking this:\n  j < k", "show ?thesis"], ["proof (prove)\nusing this:\n  j < k\n\ngoal (1 subgoal):\n 1. fwi m n k k j k k = m k k", "by simp"], ["proof (state)\nthis:\n  fwi m n k k j k k = m k k\n\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> fwi m n k k j k k = m k k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> fwi m n k k j k k = m k k", "case False"], ["proof (state)\nthis:\n  \\<not> j < k\n\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow> fwi m n k k j k k = m k k", "with \\<open>k \\<le> i\\<close>"], ["proof (chain)\npicking this:\n  k \\<le> i\n  \\<not> j < k", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<le> i\n  \\<not> j < k\n\ngoal (1 subgoal):\n 1. fwi m n k k j k k = m k k", "by (subst single_iteration_inv; simp add: diag)"], ["proof (state)\nthis:\n  fwi m n k k j k k = m k k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<le> i \\<Longrightarrow> fwi m n k k j k k = m k k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "have ***: \"fwi m n k (Suc i) j k (Suc j) = m k (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j k (Suc j) = m k (Suc j)", "proof (cases \"Suc i \\<le> k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Suc i \\<le> k \\<Longrightarrow>\n    fwi m n k (Suc i) j k (Suc j) = m k (Suc j)\n 2. \\<not> Suc i \\<le> k \\<Longrightarrow>\n    fwi m n k (Suc i) j k (Suc j) = m k (Suc j)", "case True"], ["proof (state)\nthis:\n  Suc i \\<le> k\n\ngoal (2 subgoals):\n 1. Suc i \\<le> k \\<Longrightarrow>\n    fwi m n k (Suc i) j k (Suc j) = m k (Suc j)\n 2. \\<not> Suc i \\<le> k \\<Longrightarrow>\n    fwi m n k (Suc i) j k (Suc j) = m k (Suc j)", "then"], ["proof (chain)\npicking this:\n  Suc i \\<le> k", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc i \\<le> k\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j k (Suc j) = m k (Suc j)", "by simp"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j k (Suc j) = m k (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> k \\<Longrightarrow>\n    fwi m n k (Suc i) j k (Suc j) = m k (Suc j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> k \\<Longrightarrow>\n    fwi m n k (Suc i) j k (Suc j) = m k (Suc j)", "case False"], ["proof (state)\nthis:\n  \\<not> Suc i \\<le> k\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> k \\<Longrightarrow>\n    fwi m n k (Suc i) j k (Suc j) = m k (Suc j)", "then"], ["proof (chain)\npicking this:\n  \\<not> Suc i \\<le> k", "have \"fwi m n k k j k (Suc j) = m k (Suc j)\""], ["proof (prove)\nusing this:\n  \\<not> Suc i \\<le> k\n\ngoal (1 subgoal):\n 1. fwi m n k k j k (Suc j) = m k (Suc j)", "by simp"], ["proof (state)\nthis:\n  fwi m n k k j k (Suc j) = m k (Suc j)\n\ngoal (1 subgoal):\n 1. \\<not> Suc i \\<le> k \\<Longrightarrow>\n    fwi m n k (Suc i) j k (Suc j) = m k (Suc j)", "with False \\<open>m k k \\<ge> 0\\<close>"], ["proof (chain)\npicking this:\n  \\<not> Suc i \\<le> k\n  (0::'a) \\<le> m k k\n  fwi m n k k j k (Suc j) = m k (Suc j)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> Suc i \\<le> k\n  (0::'a) \\<le> m k k\n  fwi m n k k j k (Suc j) = m k (Suc j)\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j k (Suc j) = m k (Suc j)", "by (subst single_iteration_inv'; simp add: simps diag2)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j k (Suc j) = m k (Suc j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j k (Suc j) = m k (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "have \"fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j (Suc i) k = m (Suc i) k", "proof (cases \"j < k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < k \\<Longrightarrow> fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\n 2. \\<not> j < k \\<Longrightarrow>\n    fwi m n k (Suc i) j (Suc i) k = m (Suc i) k", "case True"], ["proof (state)\nthis:\n  j < k\n\ngoal (2 subgoals):\n 1. j < k \\<Longrightarrow> fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\n 2. \\<not> j < k \\<Longrightarrow>\n    fwi m n k (Suc i) j (Suc i) k = m (Suc i) k", "thus ?thesis"], ["proof (prove)\nusing this:\n  j < k\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j (Suc i) k = m (Suc i) k", "by simp"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\n\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow>\n    fwi m n k (Suc i) j (Suc i) k = m (Suc i) k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow>\n    fwi m n k (Suc i) j (Suc i) k = m (Suc i) k", "case False"], ["proof (state)\nthis:\n  \\<not> j < k\n\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow>\n    fwi m n k (Suc i) j (Suc i) k = m (Suc i) k", "then"], ["proof (chain)\npicking this:\n  \\<not> j < k", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> j < k\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j (Suc i) k = m (Suc i) k", "apply (subst single_iteration_inv; simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> j < k \\<Longrightarrow>\n    fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "apply (cases k)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> j < k; k = 0\\<rbrakk>\n    \\<Longrightarrow> fwi m n k (Suc i) k (Suc i) k = m (Suc i) k\n 2. \\<And>nat.\n       \\<lbrakk>\\<not> j < k; k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "subgoal premises prems"], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "have \"fwi m n 0 i n 0 0 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fwi m n 0 i n 0 0", "using ** assms(1) prems(2)"], ["proof (prove)\nusing this:\n  fwi m n k i n k k = m k k\n  (0::'a) \\<le> m k k\n  k = 0\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fwi m n 0 i n 0 0", "by force"], ["proof (state)\nthis:\n  (0::'a) \\<le> fwi m n 0 i n 0 0\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "moreover"], ["proof (state)\nthis:\n  (0::'a) \\<le> fwi m n 0 i n 0 0\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "have \"fwi m n 0 i n (Suc i) 0 = m (Suc i) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n 0 i n (Suc i) 0 = m (Suc i) 0", "by simp"], ["proof (state)\nthis:\n  fwi m n 0 i n (Suc i) 0 = m (Suc i) 0\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "ultimately"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> fwi m n 0 i n 0 0\n  fwi m n 0 i n (Suc i) 0 = m (Suc i) 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> fwi m n 0 i n 0 0\n  fwi m n 0 i n (Suc i) 0 = m (Suc i) 0\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "using prems"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> fwi m n 0 i n 0 0\n  fwi m n 0 i n (Suc i) 0 = m (Suc i) 0\n  \\<not> j < k\n  k = 0\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "by (simp add: simps)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) k (Suc i) k = m (Suc i) k\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       \\<lbrakk>\\<not> j < k; k = Suc nat\\<rbrakk>\n       \\<Longrightarrow> fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "subgoal premises prems for k'"], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "have \"fwi m n (Suc k') (Suc i) k' (Suc k') (Suc k') \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fwi m n (Suc k') (Suc i) k' (Suc k') (Suc k')", "by (metis ** assms(1,4) fwi_innermost_id fwi_middle_id le_SucE lessI\n                    linorder_class.not_le_imp_less prems(2) preorder_class.order_refl\n                    single_iteration_inv single_iteration_inv'\n                 )"], ["proof (state)\nthis:\n  (0::'a) \\<le> fwi m n (Suc k') (Suc i) k' (Suc k') (Suc k')\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "with prems"], ["proof (chain)\npicking this:\n  \\<not> j < k\n  k = Suc k'\n  (0::'a) \\<le> fwi m n (Suc k') (Suc i) k' (Suc k') (Suc k')", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> j < k\n  k = Suc k'\n  (0::'a) \\<le> fwi m n (Suc k') (Suc i) k' (Suc k') (Suc k')\n\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) k (Suc i) k = m (Suc i) k", "by (simp add: simps)"], ["proof (state)\nthis:\n  fwi m n k (Suc i) k (Suc i) k = m (Suc i) k\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "moreover"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "have \"fwi m n k (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)", "by simp"], ["proof (state)\nthis:\n  fwi m n k (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       j' = Suc nat \\<Longrightarrow>\n       fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "ultimately"], ["proof (chain)\npicking this:\n  fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\n  fwi m n k (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)", "show ?thesis"], ["proof (prove)\nusing this:\n  fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\n  fwi m n k (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "using \\<open>j' = _\\<close>"], ["proof (prove)\nusing this:\n  fwi m n k (Suc i) j (Suc i) k = m (Suc i) k\n  fwi m n k (Suc i) j (Suc i) (Suc j) = m (Suc i) (Suc j)\n  j' = Suc j\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')", "by (simp add: simps ***)"], ["proof (state)\nthis:\n  fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fwi m n k i' j' i' j' = min (m i' j') (m i' k + m k j')\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Result Under The Absence of Negative Cycles\\<close>"], ["", "text \\<open>\n  If the given input graph does not contain any negative cycles, the \\fw computes the\n  \\<^bold>\\<open>unique\\<close> shortest paths matrix corresponding to the graph. It contains the shortest path\n  between any two nodes \\<open>i, j \\<le> n\\<close>.\n\\<close>"], ["", "subsection \\<open>Length of Paths\\<close>"], ["", "fun len :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat list \\<Rightarrow> 'a\" where\n  \"len m u v [] = m u v\" |\n  \"len m u v (w#ws) = m u w + len m w v ws\""], ["", "lemma len_decomp: \"xs = ys @ y # zs \\<Longrightarrow> len m x z xs = len m x y ys + len m y z zs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs = ys @ y # zs \\<Longrightarrow>\n    len m x z xs = len m x y ys + len m y z zs", "by (induction ys arbitrary: x xs) (simp add: add.assoc)+"], ["", "lemma len_comp: \"len m a c (xs @ b # ys) = len m a b xs + len m b c ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m a c (xs @ b # ys) = len m a b xs + len m b c ys", "by (induction xs arbitrary: a) (auto simp: add.assoc)"], ["", "subsection \\<open>Canonicality\\<close>"], ["", "text \\<open>\n  The unique shortest path matrices are in a so-called \\<open>canonical form\\<close>.\n  We will say that a matrix \\<open>m\\<close> is in canonical form for a set of indices \\<open>I\\<close>\n  if the following holds:\n\\<close>"], ["", "definition canonical_subs :: \"nat \\<Rightarrow> nat set \\<Rightarrow> 'a mat \\<Rightarrow> bool\" where\n  \"canonical_subs n I m = (\\<forall> i j k. i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow> m i k \\<le> m i j + m j k)\""], ["", "text \\<open>\n  Similarly we express that \\<open>m\\<close> does not contain a negative cycle which only uses intermediate\n  vertices from the set \\<open>I\\<close> as follows:\n\\<close>"], ["", "abbreviation cyc_free_subs :: \"nat \\<Rightarrow> nat set \\<Rightarrow> 'a mat \\<Rightarrow> bool\" where\n  \"cyc_free_subs n I m \\<equiv> \\<forall> i xs. i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow> len m i i xs \\<ge> 0\""], ["", "text \\<open>\n  To prove the main result under \\<open>the absence of negative cycles\\<close>, we will proceed as follows:\n  \\<^item> we show that an invocation of \\<open>fwi m n k n n\\<close> extends canonicality to index \\<open>k\\<close>,\n  \\<^item> we show that an invocation of \\<open>fw m n n\\<close> computes a matrix in canonical form,\n  \\<^item> and finally we show that canonical forms specify the lengths of \\<open>shortest paths\\<close>,\n    provided that there are no negative cycles.\n\\<close>"], ["", "text \\<open>Canonical forms specify lower bounds for the length of any path.\\<close>"], ["", "lemma canonical_subs_len:\n  \"M i j \\<le> len M i j xs\" if \"canonical_subs n I M\" \"i \\<le> n\" \"j \\<le> n\" \"set xs \\<subseteq> I\" \"I \\<subseteq> {0..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M i j \\<le> len M i j xs", "using that"], ["proof (prove)\nusing this:\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set xs \\<subseteq> I\n  I \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. M i j \\<le> len M i j xs", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set [] \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j []\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "case Nil"], ["proof (state)\nthis:\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> I\n  I \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set [] \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j []\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> I\n  I \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. M i j \\<le> len M i j []", "by auto"], ["proof (state)\nthis:\n  M i j \\<le> len M i j []\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>canonical_subs n I M; ?i1 \\<le> n; j \\<le> n;\n   set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i1 j \\<le> len M ?i1 j xs\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical_subs n I M; ?i1 \\<le> n; j \\<le> n;\n   set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i1 j \\<le> len M ?i1 j xs\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..n}", "have \"M x j \\<le> len M x j xs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical_subs n I M; ?i1 \\<le> n; j \\<le> n;\n   set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i1 j \\<le> len M ?i1 j xs\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. M x j \\<le> len M x j xs", "by auto"], ["proof (state)\nthis:\n  M x j \\<le> len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "from Cons.prems \\<open>canonical_subs n I M\\<close>"], ["proof (chain)\npicking this:\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..n}\n  canonical_subs n I M", "have \"M i j \\<le> M i x + M x j\""], ["proof (prove)\nusing this:\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..n}\n  canonical_subs n I M\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i x + M x j", "unfolding canonical_subs_def"], ["proof (prove)\nusing this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     M i k \\<le> M i j + M j k\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..n}\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     M i k \\<le> M i j + M j k\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i x + M x j", "by auto"], ["proof (state)\nthis:\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "also"], ["proof (state)\nthis:\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical_subs n I M; ?i1 \\<le> n; j \\<le> n;\n   set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i1 j \\<le> len M ?i1 j xs\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..n}\n  M i j \\<le> M i x + M x j", "have \"\\<dots> \\<le> M i x + len M x j xs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical_subs n I M; ?i1 \\<le> n; j \\<le> n;\n   set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i1 j \\<le> len M ?i1 j xs\n  canonical_subs n I M\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..n}\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. M i x + M x j \\<le> M i x + len M x j xs", "by (auto simp add: add_mono)"], ["proof (state)\nthis:\n  M i x + M x j \\<le> M i x + len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical_subs n I M; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical_subs n I M; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> I; I \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "finally"], ["proof (chain)\npicking this:\n  M i j \\<le> M i x + len M x j xs", "show ?case"], ["proof (prove)\nusing this:\n  M i j \\<le> M i x + len M x j xs\n\ngoal (1 subgoal):\n 1. M i j \\<le> len M i j (x # xs)", "by simp"], ["proof (state)\nthis:\n  M i j \\<le> len M i j (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  This lemma justifies the use of destructive updates under the absence of negative cycles.\n\\<close>"], ["", "lemma fwi_step':\n  \"fwi m n k i' j' i j = min (m i j) (m i k + m k j)\" if\n  \"m k k \\<ge> 0\" \"i' \\<le> n\" \"j' \\<le> n\" \"k \\<le> n\" \"i \\<le> i'\" \"j \\<le> j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j = min (m i j) (m i k + m k j)", "using that"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> m k k\n  i' \\<le> n\n  j' \\<le> n\n  k \\<le> n\n  i \\<le> i'\n  j \\<le> j'\n\ngoal (1 subgoal):\n 1. fwi m n k i' j' i j = min (m i j) (m i k + m k j)", "by (subst single_iteration_inv; auto simp: fwi_step)"], ["", "text \\<open>An invocation of \\<open>fwi\\<close> extends canonical forms.\\<close>"], ["", "lemma fwi_canonical_extend:\n  \"canonical_subs n (I \\<union> {k}) (fwi m n k n n)\" if\n  \"canonical_subs n I m\" \"I \\<subseteq> {0..n}\" \"0 \\<le> m k k\" \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_subs n (I \\<union> {k}) (fwi m n k n n)", "using that"], ["proof (prove)\nusing this:\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. canonical_subs n (I \\<union> {k}) (fwi m n k n n)", "unfolding canonical_subs_def"], ["proof (prove)\nusing this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<forall>i j ka.\n       i \\<le> n \\<and>\n       ka \\<le> n \\<and> j \\<in> I \\<union> {k} \\<longrightarrow>\n       fwi m n k n n i ka \\<le> fwi m n k n n i j + fwi m n k n n j ka", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i j ka.\n       \\<lbrakk>\\<forall>i j k.\n                   i \\<le> n \\<and>\n                   k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                   m i k \\<le> m i j + m j k;\n        I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n        ka \\<le> n; j \\<in> I\\<rbrakk>\n       \\<Longrightarrow> fwi m n k n n i ka\n                         \\<le> fwi m n k n n i j + fwi m n k n n j ka\n 2. \\<And>i j ka.\n       \\<lbrakk>\\<forall>i j k.\n                   i \\<le> n \\<and>\n                   k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                   m i k \\<le> m i j + m j k;\n        I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n        ka \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k n n i ka\n                         \\<le> fwi m n k n n i k + fwi m n k n n k ka", "subgoal for i j k'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I\\<rbrakk>\n    \\<Longrightarrow> fwi m n k n n i k'\n                      \\<le> fwi m n k n n i j + fwi m n k n n j k'", "apply (subst fwi_step', (auto; fail)+)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I\\<rbrakk>\n    \\<Longrightarrow> min (m i k') (m i k + m k k')\n                      \\<le> min (m i j) (m i k + m k j) +\n                            min (m j k') (m j k + m k k')", "unfolding min_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I\\<rbrakk>\n    \\<Longrightarrow> (if m i k' \\<le> m i k + m k k' then m i k'\n                       else m i k + m k k')\n                      \\<le> (if m i j \\<le> m i k + m k j then m i j\n                             else m i k + m k j) +\n                            (if m j k' \\<le> m j k + m k k' then m j k'\n                             else m j k + m k k')", "proof (clarsimp, safe, goal_cases)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 6. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 7. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "case 1"], ["proof (state)\nthis:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  m i j \\<le> m i k + m k j\n  m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'\n\ngoal (7 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 6. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 7. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "then"], ["proof (chain)\npicking this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  m i j \\<le> m i k + m k j\n  m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  m i j \\<le> m i k + m k j\n  m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'\n\ngoal (1 subgoal):\n 1. m i k + m k k' \\<le> m i j + m j k'", "by force"], ["proof (state)\nthis:\n  m i k + m k k' \\<le> m i j + m j k'\n\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 6. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 6. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "case prems: 2"], ["proof (state)\nthis:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  m i k' \\<le> m i k + m k k'\n\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 6. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "from prems"], ["proof (chain)\npicking this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  m i k' \\<le> m i k + m k k'", "have \"m i k \\<le> m i j + m j k\""], ["proof (prove)\nusing this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  m i k' \\<le> m i k + m k k'\n\ngoal (1 subgoal):\n 1. m i k \\<le> m i j + m j k", "by auto"], ["proof (state)\nthis:\n  m i k \\<le> m i j + m j k\n\ngoal (6 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 6. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "with prems(10)"], ["proof (chain)\npicking this:\n  m i k' \\<le> m i k + m k k'\n  m i k \\<le> m i j + m j k", "show ?case"], ["proof (prove)\nusing this:\n  m i k' \\<le> m i k + m k k'\n  m i k \\<le> m i j + m j k\n\ngoal (1 subgoal):\n 1. m i k' \\<le> m i j + (m j k + m k k')", "by (auto simp: add.assoc[symmetric] add_mono intro: order.trans)"], ["proof (state)\nthis:\n  m i k' \\<le> m i j + (m j k + m k k')\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "case prems: 3"], ["proof (state)\nthis:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "from prems"], ["proof (chain)\npicking this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'", "have \"m i k \\<le> m i j + m j k\""], ["proof (prove)\nusing this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'\n\ngoal (1 subgoal):\n 1. m i k \\<le> m i j + m j k", "by auto"], ["proof (state)\nthis:\n  m i k \\<le> m i j + m j k\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 5. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "with prems(10)"], ["proof (chain)\npicking this:\n  \\<not> m i k' \\<le> m i k + m k k'\n  m i k \\<le> m i j + m j k", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> m i k' \\<le> m i k + m k k'\n  m i k \\<le> m i j + m j k\n\ngoal (1 subgoal):\n 1. m i k + m k k' \\<le> m i j + (m j k + m k k')", "by (auto simp: add.assoc[symmetric] add_mono intro: order.trans)"], ["proof (state)\nthis:\n  m i k + m k k' \\<le> m i j + (m j k + m k k')\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "case prems: 4"], ["proof (state)\nthis:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  m j k' \\<le> m j k + m k k'\n  m i k' \\<le> m i k + m k k'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "from prems"], ["proof (chain)\npicking this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  m j k' \\<le> m j k + m k k'\n  m i k' \\<le> m i k + m k k'", "have \"m k k' \\<le> m k j + m j k'\""], ["proof (prove)\nusing this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  m j k' \\<le> m j k + m k k'\n  m i k' \\<le> m i k + m k k'\n\ngoal (1 subgoal):\n 1. m k k' \\<le> m k j + m j k'", "by auto"], ["proof (state)\nthis:\n  m k k' \\<le> m k j + m j k'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k'; m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 4. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "with prems(10)"], ["proof (chain)\npicking this:\n  m i k' \\<le> m i k + m k k'\n  m k k' \\<le> m k j + m j k'", "show ?case"], ["proof (prove)\nusing this:\n  m i k' \\<le> m i k + m k k'\n  m k k' \\<le> m k j + m j k'\n\ngoal (1 subgoal):\n 1. m i k' \\<le> m i k + m k j + m j k'", "by (auto simp: add_mono add.assoc intro: order.trans)"], ["proof (state)\nthis:\n  m i k' \\<le> m i k + m k j + m j k'\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "case prems: 5"], ["proof (state)\nthis:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "from prems"], ["proof (chain)\npicking this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'", "have \"m k k' \\<le> m k j + m j k'\""], ["proof (prove)\nusing this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'\n\ngoal (1 subgoal):\n 1. m k k' \\<le> m k j + m j k'", "by auto"], ["proof (state)\nthis:\n  m k k' \\<le> m k j + m j k'\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k'\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 3. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "with prems(10)"], ["proof (chain)\npicking this:\n  \\<not> m i k' \\<le> m i k + m k k'\n  m k k' \\<le> m k j + m j k'", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> m i k' \\<le> m i k + m k k'\n  m k k' \\<le> m k j + m j k'\n\ngoal (1 subgoal):\n 1. m i k + m k k' \\<le> m i k + m k j + m j k'", "by (auto simp: add_mono add.assoc intro: order.trans)"], ["proof (state)\nthis:\n  m i k + m k k' \\<le> m i k + m k j + m j k'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "case prems: 6"], ["proof (state)\nthis:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  m i k' \\<le> m i k + m k k'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "from prems"], ["proof (chain)\npicking this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  m i k' \\<le> m i k + m k k'", "have \"0 \\<le> m k j + m j k\""], ["proof (prove)\nusing this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  m i k' \\<le> m i k + m k k'\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m k j + m j k", "by (auto intro: order.trans)"], ["proof (state)\nthis:\n  (0::'a) \\<le> m k j + m j k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')\n 2. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "with prems(10)"], ["proof (chain)\npicking this:\n  m i k' \\<le> m i k + m k k'\n  (0::'a) \\<le> m k j + m j k", "show ?case"], ["proof (prove)\nusing this:\n  m i k' \\<le> m i k + m k k'\n  (0::'a) \\<le> m k j + m j k\n\ngoal (1 subgoal):\n 1. m i k' \\<le> m i k + m k j + (m j k + m k k')", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m i k' \\<le> m i k + m k k';\n     (0::'a) \\<le> m k j + m j k\\<rbrakk>\n    \\<Longrightarrow> m i k' \\<le> m i k + m k j + (m j k + m k k')", "apply (rule order.trans, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m i k' \\<le> m i k + m k k';\n     (0::'a) \\<le> m k j + m j k\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "apply (simp add: add.assoc[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m i k' \\<le> m i k + m k k';\n     (0::'a) \\<le> m k j + m j k\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + m j k + m k k'", "by (rule add_mono, auto simp: add_increasing2 add.assoc intro: order.trans)"], ["proof (state)\nthis:\n  m i k' \\<le> m i k + m k j + (m j k + m k k')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "case prems: 7"], ["proof (state)\nthis:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "from prems"], ["proof (chain)\npicking this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'", "have \"0 \\<le> m k j + m j k\""], ["proof (prove)\nusing this:\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n     m i k \\<le> m i j + m j k\n  I \\<subseteq> {0..n}\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  i \\<le> n\n  k' \\<le> n\n  j \\<in> I\n  \\<not> m i j \\<le> m i k + m k j\n  \\<not> m j k' \\<le> m j k + m k k'\n  \\<not> m i k' \\<le> m i k + m k k'\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m k j + m j k", "by (auto intro: order.trans)"], ["proof (state)\nthis:\n  (0::'a) \\<le> m k j + m j k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n; j \\<in> I; \\<not> m i j \\<le> m i k + m k j;\n     \\<not> m j k' \\<le> m j k + m k k';\n     \\<not> m i k' \\<le> m i k + m k k'\\<rbrakk>\n    \\<Longrightarrow> m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "with prems(10)"], ["proof (chain)\npicking this:\n  \\<not> m i k' \\<le> m i k + m k k'\n  (0::'a) \\<le> m k j + m j k", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> m i k' \\<le> m i k + m k k'\n  (0::'a) \\<le> m k j + m j k\n\ngoal (1 subgoal):\n 1. m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')", "by (simp add: add.assoc[symmetric])\n        (rule add_mono, auto simp: add_increasing2 add.assoc intro: order.trans)"], ["proof (state)\nthis:\n  m i k + m k k' \\<le> m i k + m k j + (m j k + m k k')\n\ngoal:\nNo subgoals!", "qed"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j ka.\n       \\<lbrakk>\\<forall>i j k.\n                   i \\<le> n \\<and>\n                   k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                   m i k \\<le> m i j + m j k;\n        I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n        ka \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi m n k n n i ka\n                         \\<le> fwi m n k n n i k + fwi m n k n n k ka", "subgoal for i j k'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fwi m n k n n i k'\n                      \\<le> fwi m n k n n i k + fwi m n k n n k k'", "apply (subst fwi_step', (auto; fail)+)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> min (m i k') (m i k + m k k')\n                      \\<le> min (m i k) (m i k + m k k) +\n                            min (m k k') (m k k + m k k')", "unfolding min_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i j k.\n                i \\<le> n \\<and>\n                k \\<le> n \\<and> j \\<in> I \\<longrightarrow>\n                m i k \\<le> m i j + m j k;\n     I \\<subseteq> {0..n}; (0::'a) \\<le> m k k; k \\<le> n; i \\<le> n;\n     k' \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (if m i k' \\<le> m i k + m k k' then m i k'\n                       else m i k + m k k')\n                      \\<le> (if m i k \\<le> m i k + m k k then m i k\n                             else m i k + m k k) +\n                            (if m k k' \\<le> m k k + m k k' then m k k'\n                             else m k k + m k k')", "by (auto intro: add_increasing add_increasing2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>\n  An invocation of \\<open>fwi\\<close> will not produce a negative diagonal entry if there is no negative cycle.\n\\<close>"], ["", "lemma fwi_cyc_free_diag:\n  \"fwi m n k n n i i \\<ge> 0\" if\n  \"cyc_free_subs n I m\" \"0 \\<le> m k k\" \"k \\<le> n\" \"k \\<in> I\" \"i \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fwi m n k n n i i", "using that"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  k \\<in> I\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fwi m n k n n i i", "apply (subst fwi_step', (auto; fail)+)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> min (m i i) (m i k + m k i)", "unfolding min_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (0::'a)\n                      \\<le> (if m i i \\<le> m i k + m k i then m i i\n                             else m i k + m k i)", "proof (clarsimp; safe, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i i\n 2. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     \\<not> m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i k + m k i", "case 1"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  k \\<in> I\n  i \\<le> n\n  m i i \\<le> m i k + m k i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i i\n 2. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     \\<not> m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i k + m k i", "have \"set [] \\<subseteq> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set [] \\<subseteq> I", "by simp"], ["proof (state)\nthis:\n  set [] \\<subseteq> I\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i i\n 2. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     \\<not> m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i k + m k i", "with 1(1) \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  set [] \\<subseteq> I", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  set [] \\<subseteq> I\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m i i", "by fastforce"], ["proof (state)\nthis:\n  (0::'a) \\<le> m i i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     \\<not> m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i k + m k i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     \\<not> m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i k + m k i", "case 2"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  k \\<in> I\n  i \\<le> n\n  \\<not> m i i \\<le> m i k + m k i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     \\<not> m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i k + m k i", "then"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  k \\<in> I\n  i \\<le> n\n  \\<not> m i i \\<le> m i k + m k i", "have \"set [k] \\<subseteq> I\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  (0::'a) \\<le> m k k\n  k \\<le> n\n  k \\<in> I\n  i \\<le> n\n  \\<not> m i i \\<le> m i k + m k i\n\ngoal (1 subgoal):\n 1. set [k] \\<subseteq> I", "by simp"], ["proof (state)\nthis:\n  set [k] \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     (0::'a) \\<le> m k k; k \\<le> n; k \\<in> I; i \\<le> n;\n     \\<not> m i i \\<le> m i k + m k i\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i k + m k i", "with 2(1) \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  set [k] \\<subseteq> I", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  set [k] \\<subseteq> I\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m i k + m k i", "by fastforce"], ["proof (state)\nthis:\n  (0::'a) \\<le> m i k + m k i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cyc_free_subs_diag:\n  \"m i i \\<ge> 0\" if \"cyc_free_subs n I m\" \"i \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m i i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m i i", "have \"set [] \\<subseteq> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set [] \\<subseteq> I", "by auto"], ["proof (state)\nthis:\n  set [] \\<subseteq> I\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m i i", "with that"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  set [] \\<subseteq> I", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  set [] \\<subseteq> I\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m i i", "by fastforce"], ["proof (state)\nthis:\n  (0::'a) \\<le> m i i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fwi_cyc_free_subs':\n  \"cyc_free_subs n (I \\<union> {k}) (fwi m n k n n)\" if\n  \"cyc_free_subs n I m\" \"canonical_subs n I m\" \"I \\<subseteq> {0..n}\" \"k \\<le> n\"\n  \"\\<forall> i \\<le> n. fwi m n k n n i i \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n       (0::'a) \\<le> len (fwi m n k n n) i i xs", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "case prems: (1 i xs)"], ["proof (state)\nthis:\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "from that(1) \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  k \\<le> n", "have \"0 \\<le> m k k\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m k k", "by (rule cyc_free_subs_diag)"], ["proof (state)\nthis:\n  (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "from that \\<open>0 \\<le> m k k\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  \\<forall>i\\<le>n. (0::'a) \\<le> fwi m n k n n i i\n  (0::'a) \\<le> m k k", "have *: \"canonical_subs n (I \\<union> {k}) (fwi m n k n n)\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  \\<forall>i\\<le>n. (0::'a) \\<le> fwi m n k n n i i\n  (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. canonical_subs n (I \\<union> {k}) (fwi m n k n n)", "by - (rule fwi_canonical_extend; auto)"], ["proof (state)\nthis:\n  canonical_subs n (I \\<union> {k}) (fwi m n k n n)\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "from prems that"], ["proof (chain)\npicking this:\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  \\<forall>i\\<le>n. (0::'a) \\<le> fwi m n k n n i i", "have \"0 \\<le> fwi m n k n n i i\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  \\<forall>i\\<le>n. (0::'a) \\<le> fwi m n k n n i i\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fwi m n k n n i i", "by blast"], ["proof (state)\nthis:\n  (0::'a) \\<le> fwi m n k n n i i\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "also"], ["proof (state)\nthis:\n  (0::'a) \\<le> fwi m n k n n i i\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "from * prems that"], ["proof (chain)\npicking this:\n  canonical_subs n (I \\<union> {k}) (fwi m n k n n)\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  \\<forall>i\\<le>n. (0::'a) \\<le> fwi m n k n n i i", "have \"fwi m n k n n i i \\<le> len (fwi m n k n n) i i xs\""], ["proof (prove)\nusing this:\n  canonical_subs n (I \\<union> {k}) (fwi m n k n n)\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  \\<forall>i\\<le>n. (0::'a) \\<le> fwi m n k n n i i\n\ngoal (1 subgoal):\n 1. fwi m n k n n i i \\<le> len (fwi m n k n n) i i xs", "by (auto intro: canonical_subs_len)"], ["proof (state)\nthis:\n  fwi m n k n n i i \\<le> len (fwi m n k n n) i i xs\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "finally"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> len (fwi m n k n n) i i xs", "show ?case"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> len (fwi m n k n n) i i xs\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> len (fwi m n k n n) i i xs", "."], ["proof (state)\nthis:\n  (0::'a) \\<le> len (fwi m n k n n) i i xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fwi_cyc_free_subs:\n  \"cyc_free_subs n (I \\<union> {k}) (fwi m n k n n)\" if\n  \"cyc_free_subs n (I \\<union> {k}) m\" \"canonical_subs n I m\" \"I \\<subseteq> {0..n}\" \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n       (0::'a) \\<le> len (fwi m n k n n) i i xs", "proof (safe, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "case prems: (1 i xs)"], ["proof (state)\nthis:\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "from that(1) \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  k \\<le> n", "have \"0 \\<le> m k k\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m k k", "by (rule cyc_free_subs_diag)"], ["proof (state)\nthis:\n  (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "from that \\<open>0 \\<le> m k k\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  (0::'a) \\<le> m k k", "have *: \"canonical_subs n (I \\<union> {k}) (fwi m n k n n)\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. canonical_subs n (I \\<union> {k}) (fwi m n k n n)", "by - (rule fwi_canonical_extend; auto)"], ["proof (state)\nthis:\n  canonical_subs n (I \\<union> {k}) (fwi m n k n n)\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "from prems that \\<open>0 \\<le> m k k\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  (0::'a) \\<le> m k k", "have \"0 \\<le> fwi m n k n n i i\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n  (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fwi m n k n n i i", "by (auto intro!: fwi_cyc_free_diag)"], ["proof (state)\nthis:\n  (0::'a) \\<le> fwi m n k n n i i\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "also"], ["proof (state)\nthis:\n  (0::'a) \\<le> fwi m n k n n i i\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "from * prems that"], ["proof (chain)\npicking this:\n  canonical_subs n (I \\<union> {k}) (fwi m n k n n)\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n", "have \"fwi m n k n n i i \\<le> len (fwi m n k n n) i i xs\""], ["proof (prove)\nusing this:\n  canonical_subs n (I \\<union> {k}) (fwi m n k n n)\n  i \\<le> n\n  set xs \\<subseteq> I \\<union> {k}\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> I \\<union> {k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  canonical_subs n I m\n  I \\<subseteq> {0..n}\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k n n i i \\<le> len (fwi m n k n n) i i xs", "by (auto intro: canonical_subs_len)"], ["proof (state)\nthis:\n  fwi m n k n n i i \\<le> len (fwi m n k n n) i i xs\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>i \\<le> n; set xs \\<subseteq> I \\<union> {k}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len (fwi m n k n n) i i xs", "finally"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> len (fwi m n k n n) i i xs", "show ?case"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> len (fwi m n k n n) i i xs\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> len (fwi m n k n n) i i xs", "."], ["proof (state)\nthis:\n  (0::'a) \\<le> len (fwi m n k n n) i i xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma canonical_subs_empty [simp]:\n  \"canonical_subs n {} m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_subs n {} m", "unfolding canonical_subs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i j k.\n       i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> {} \\<longrightarrow>\n       m i k \\<le> m i j + m j k", "by simp"], ["", "lemma fwi_neg_diag_neg_cycle:\n  \"\\<exists> i \\<le> n. \\<exists> xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < 0\" if \"fwi m n k n n i i < 0\" \"i \\<le> n\" \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "proof (cases \"m k k \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)\n 2. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "case True"], ["proof (state)\nthis:\n  (0::'a) \\<le> m k k\n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)\n 2. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "from fwi_step'[of m, OF True] that"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i' \\<le> ?n; ?j' \\<le> ?n; k \\<le> ?n; ?i \\<le> ?i';\n   ?j \\<le> ?j'\\<rbrakk>\n  \\<Longrightarrow> fwi m ?n k ?i' ?j' ?i ?j =\n                    min (m ?i ?j) (m ?i k + m k ?j)\n  fwi m n k n n i i < (0::'a)\n  i \\<le> n\n  k \\<le> n", "have \"min (m i i) (m i k + m k i) < 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?i' \\<le> ?n; ?j' \\<le> ?n; k \\<le> ?n; ?i \\<le> ?i';\n   ?j \\<le> ?j'\\<rbrakk>\n  \\<Longrightarrow> fwi m ?n k ?i' ?j' ?i ?j =\n                    min (m ?i ?j) (m ?i k + m k ?j)\n  fwi m n k n n i i < (0::'a)\n  i \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. min (m i i) (m i k + m k i) < (0::'a)", "by auto"], ["proof (state)\nthis:\n  min (m i i) (m i k + m k i) < (0::'a)\n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)\n 2. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "then"], ["proof (chain)\npicking this:\n  min (m i i) (m i k + m k i) < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  min (m i i) (m i k + m k i) < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "unfolding min_def"], ["proof (prove)\nusing this:\n  (if m i i \\<le> m i k + m k i then m i i else m i k + m k i) < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "proof (clarsimp split: if_split_asm, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>m i i \\<le> m i k + m k i; m i i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)\n 2. \\<lbrakk>\\<not> m i i \\<le> m i k + m k i;\n     m i k + m k i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)", "case 1"], ["proof (state)\nthis:\n  m i i \\<le> m i k + m k i\n  m i i < (0::'a)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m i i \\<le> m i k + m k i; m i i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)\n 2. \\<lbrakk>\\<not> m i i \\<le> m i k + m k i;\n     m i k + m k i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)", "then"], ["proof (chain)\npicking this:\n  m i i \\<le> m i k + m k i\n  m i i < (0::'a)", "have \"len m i i [] < 0\" \"set [] \\<subseteq> {}\""], ["proof (prove)\nusing this:\n  m i i \\<le> m i k + m k i\n  m i i < (0::'a)\n\ngoal (1 subgoal):\n 1. len m i i [] < (0::'a) &&& set [] \\<subseteq> {}", "by auto"], ["proof (state)\nthis:\n  len m i i [] < (0::'a)\n  set [] \\<subseteq> {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m i i \\<le> m i k + m k i; m i i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)\n 2. \\<lbrakk>\\<not> m i i \\<le> m i k + m k i;\n     m i k + m k i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)", "with \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n\n  len m i i [] < (0::'a)\n  set [] \\<subseteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  len m i i [] < (0::'a)\n  set [] \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> m i i \\<le> m i k + m k i;\n     m i k + m k i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> m i i \\<le> m i k + m k i;\n     m i k + m k i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)", "case 2"], ["proof (state)\nthis:\n  \\<not> m i i \\<le> m i k + m k i\n  m i k + m k i < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> m i i \\<le> m i k + m k i;\n     m i k + m k i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)", "then"], ["proof (chain)\npicking this:\n  \\<not> m i i \\<le> m i k + m k i\n  m i k + m k i < (0::'a)", "have \"len m i i [k] < 0\" \"set [k] \\<subseteq> {0..k}\""], ["proof (prove)\nusing this:\n  \\<not> m i i \\<le> m i k + m k i\n  m i k + m k i < (0::'a)\n\ngoal (1 subgoal):\n 1. len m i i [k] < (0::'a) &&& set [k] \\<subseteq> {0..k}", "by auto"], ["proof (state)\nthis:\n  len m i i [k] < (0::'a)\n  set [k] \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> m i i \\<le> m i k + m k i;\n     m i k + m k i < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i\\<le>n.\n                         \\<exists>xs.\n                            set xs \\<subseteq> {0..k} \\<and>\n                            len m i i xs < (0::'a)", "with \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n\n  len m i i [k] < (0::'a)\n  set [k] \\<subseteq> {0..k}", "show ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  len m i i [k] < (0::'a)\n  set [k] \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "case False"], ["proof (state)\nthis:\n  \\<not> (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "with \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  k \\<le> n\n  \\<not> (0::'a) \\<le> m k k", "have \"len m k k [] < 0\" \"set [] \\<subseteq> {}\""], ["proof (prove)\nusing this:\n  k \\<le> n\n  \\<not> (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. len m k k [] < (0::'a) &&& set [] \\<subseteq> {}", "by auto"], ["proof (state)\nthis:\n  len m k k [] < (0::'a)\n  set [] \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "with \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  k \\<le> n\n  len m k k [] < (0::'a)\n  set [] \\<subseteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<le> n\n  len m k k [] < (0::'a)\n  set [] \\<subseteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\\<open>fwi\\<close> preserves the length of paths.\\<close>"], ["", "lemma fwi_len:\n  \"\\<exists> ys. set ys \\<subseteq> set xs \\<union> {k} \\<and> len (fwi m n k n n) i j xs = len m i j ys\"\n  if \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\" \"m k k \\<ge> 0\" \"set xs \\<subseteq> {0..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> set xs \\<union> {k} \\<and>\n       len (fwi m n k n n) i j xs = len m i j ys", "using that"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  (0::'a) \\<le> m k k\n  set xs \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> set xs \\<union> {k} \\<and>\n       len (fwi m n k n n) i j xs = len m i j ys", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n        set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set [] \\<union> {k} \\<and>\n                            len (fwi m n k n n) i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n;\n                    (0::'a) \\<le> m k k; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<union> {k} \\<and>\n  len (fwi m n k n n) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys\n                            \\<subseteq> set (a # xs) \\<union> {k} \\<and>\n                            len (fwi m n k n n) i j (a # xs) = len m i j ys", "case Nil"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  (0::'a) \\<le> m k k\n  set [] \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n        set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set [] \\<union> {k} \\<and>\n                            len (fwi m n k n n) i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n;\n                    (0::'a) \\<le> m k k; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<union> {k} \\<and>\n  len (fwi m n k n n) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys\n                            \\<subseteq> set (a # xs) \\<union> {k} \\<and>\n                            len (fwi m n k n n) i j (a # xs) = len m i j ys", "then"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  (0::'a) \\<le> m k k\n  set [] \\<subseteq> {0..n}", "show ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  (0::'a) \\<le> m k k\n  set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> set [] \\<union> {k} \\<and>\n       len (fwi m n k n n) i j [] = len m i j ys", "apply (simp add: fwi_step')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> {k} \\<and>\n                         min (m i j) (m i k + m k j) = len m i j ys", "unfolding min_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> {k} \\<and>\n                         (if m i j \\<le> m i k + m k j then m i j\n                          else m i k + m k j) =\n                         len m i j ys", "apply (clarsimp; safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n     m i j \\<le> m i k + m k j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> {k} \\<and> m i j = len m i j ys\n 2. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n     \\<not> m i j \\<le> m i k + m k j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> {k} \\<and>\n                         m i k + m k j = len m i j ys", "apply (rule exI[where x = \"[]\"]; simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n     \\<not> m i j \\<le> m i k + m k j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> {k} \\<and>\n                         m i k + m k j = len m i j ys", "by (rule exI[where x = \"[k]\"]; simp)"], ["proof (state)\nthis:\n  \\<exists>ys.\n     set ys \\<subseteq> set [] \\<union> {k} \\<and>\n     len (fwi m n k n n) i j [] = len m i j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n;\n                    (0::'a) \\<le> m k k; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<union> {k} \\<and>\n  len (fwi m n k n n) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys\n                            \\<subseteq> set (a # xs) \\<union> {k} \\<and>\n                            len (fwi m n k n n) i j (a # xs) = len m i j ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n;\n                    (0::'a) \\<le> m k k; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<union> {k} \\<and>\n  len (fwi m n k n n) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys\n                            \\<subseteq> set (a # xs) \\<union> {k} \\<and>\n                            len (fwi m n k n n) i j (a # xs) = len m i j ys", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>?i1 \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set xs \\<union> {k} \\<and>\n                       len (fwi m n k n n) ?i1 j xs = len m ?i1 j ys\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  (0::'a) \\<le> m k k\n  set (x # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n;\n                    (0::'a) \\<le> m k k; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<union> {k} \\<and>\n  len (fwi m n k n n) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys\n                            \\<subseteq> set (a # xs) \\<union> {k} \\<and>\n                            len (fwi m n k n n) i j (a # xs) = len m i j ys", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i1 \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set xs \\<union> {k} \\<and>\n                       len (fwi m n k n n) ?i1 j xs = len m ?i1 j ys\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  (0::'a) \\<le> m k k\n  set (x # xs) \\<subseteq> {0..n}", "obtain ys where \"set ys \\<subseteq> set xs \\<union> {k}\" \"len (fwi m n k n n) x j xs = len m x j ys\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?i1 \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set xs \\<union> {k} \\<and>\n                       len (fwi m n k n n) ?i1 j xs = len m ?i1 j ys\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  (0::'a) \\<le> m k k\n  set (x # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>set ys \\<subseteq> set xs \\<union> {k};\n         len (fwi m n k n n) x j xs = len m x j ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  set ys \\<subseteq> set xs \\<union> {k}\n  len (fwi m n k n n) x j xs = len m x j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n;\n                    (0::'a) \\<le> m k k; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<union> {k} \\<and>\n  len (fwi m n k n n) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys\n                            \\<subseteq> set (a # xs) \\<union> {k} \\<and>\n                            len (fwi m n k n n) i j (a # xs) = len m i j ys", "with Cons.prems"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  (0::'a) \\<le> m k k\n  set (x # xs) \\<subseteq> {0..n}\n  set ys \\<subseteq> set xs \\<union> {k}\n  len (fwi m n k n n) x j xs = len m x j ys", "show ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  (0::'a) \\<le> m k k\n  set (x # xs) \\<subseteq> {0..n}\n  set ys \\<subseteq> set xs \\<union> {k}\n  len (fwi m n k n n) x j xs = len m x j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> set (x # xs) \\<union> {k} \\<and>\n       len (fwi m n k n n) i j (x # xs) = len m i j ys", "apply (simp add: fwi_step')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n     x \\<le> n \\<and> set xs \\<subseteq> {0..n};\n     set ys \\<subseteq> insert k (set xs);\n     len (fwi m n k n n) x j xs = len m x j ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         set ysa\n                         \\<subseteq> insert k (insert x (set xs)) \\<and>\n                         min (m i x) (m i k + m k x) + len m x j ys =\n                         len m i j ysa", "unfolding min_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n     x \\<le> n \\<and> set xs \\<subseteq> {0..n};\n     set ys \\<subseteq> insert k (set xs);\n     len (fwi m n k n n) x j xs = len m x j ys\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         set ysa\n                         \\<subseteq> insert k (insert x (set xs)) \\<and>\n                         (if m i x \\<le> m i k + m k x then m i x\n                          else m i k + m k x) +\n                         len m x j ys =\n                         len m i j ysa", "apply (clarsimp; safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n     set ys \\<subseteq> insert k (set xs);\n     len (fwi m n k n n) x j xs = len m x j ys; x \\<le> n;\n     set xs \\<subseteq> {0..n}; m i x \\<le> m i k + m k x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         set ysa\n                         \\<subseteq> insert k (insert x (set xs)) \\<and>\n                         m i x + len m x j ys = len m i j ysa\n 2. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n     set ys \\<subseteq> insert k (set xs);\n     len (fwi m n k n n) x j xs = len m x j ys; x \\<le> n;\n     set xs \\<subseteq> {0..n}; \\<not> m i x \\<le> m i k + m k x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         set ysa\n                         \\<subseteq> insert k (insert x (set xs)) \\<and>\n                         m i k + m k x + len m x j ys = len m i j ysa", "apply (rule exI[where x = \"x # ys\"]; auto; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; j \\<le> n; k \\<le> n; (0::'a) \\<le> m k k;\n     set ys \\<subseteq> insert k (set xs);\n     len (fwi m n k n n) x j xs = len m x j ys; x \\<le> n;\n     set xs \\<subseteq> {0..n}; \\<not> m i x \\<le> m i k + m k x\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ysa.\n                         set ysa\n                         \\<subseteq> insert k (insert x (set xs)) \\<and>\n                         m i k + m k x + len m x j ys = len m i j ysa", "by (rule exI[where x = \"k # x # ys\"]; auto simp: add.assoc)"], ["proof (state)\nthis:\n  \\<exists>ys.\n     set ys \\<subseteq> set (x # xs) \\<union> {k} \\<and>\n     len (fwi m n k n n) i j (x # xs) = len m i j ys\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fwi_neg_cycle_neg_cycle:\n  \"\\<exists> i \\<le> n. \\<exists> ys. set ys \\<subseteq> set xs \\<union> {k} \\<and> len m i i ys < 0\" if\n  \"len (fwi m n k n n) i i xs < 0\" \"i \\<le> n\" \"k \\<le> n\" \"set xs \\<subseteq> {0..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)", "proof (cases \"m k k \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)\n 2. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)", "case True"], ["proof (state)\nthis:\n  (0::'a) \\<le> m k k\n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)\n 2. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)", "from fwi_len[OF that(2,2,3), of m, OF True that(4)] that(1,2)"], ["proof (chain)\npicking this:\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {k} \\<and>\n     len (fwi m n k n n) i i xs = len m i i ys\n  len (fwi m n k n n) i i xs < (0::'a)\n  i \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {k} \\<and>\n     len (fwi m n k n n) i i xs = len m i i ys\n  len (fwi m n k n n) i i xs < (0::'a)\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)", "by safe (rule exI conjI | simp)+"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>ys.\n        set ys \\<subseteq> set xs \\<union> {k} \\<and> len m i i ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)", "case False"], ["proof (state)\nthis:\n  \\<not> (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)", "then"], ["proof (chain)\npicking this:\n  \\<not> (0::'a) \\<le> m k k", "have \"len m k k [] < 0\" \"set [] \\<subseteq> set xs \\<union> {k}\""], ["proof (prove)\nusing this:\n  \\<not> (0::'a) \\<le> m k k\n\ngoal (1 subgoal):\n 1. len m k k [] < (0::'a) &&& set [] \\<subseteq> set xs \\<union> {k}", "by auto"], ["proof (state)\nthis:\n  len m k k [] < (0::'a)\n  set [] \\<subseteq> set xs \\<union> {k}\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> m k k \\<Longrightarrow>\n    \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)", "with \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  k \\<le> n\n  len m k k [] < (0::'a)\n  set [] \\<subseteq> set xs \\<union> {k}", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<le> n\n  len m k k [] < (0::'a)\n  set [] \\<subseteq> set xs \\<union> {k}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {k} \\<and>\n          len m i i ys < (0::'a)", "by (intro exI conjI)"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>ys.\n        set ys \\<subseteq> set xs \\<union> {k} \\<and> len m i i ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  If the \\fw produces a negative diagonal entry, then there is a negative cycle.\n\\<close>"], ["", "lemma fw_neg_diag_neg_cycle:\n  \"\\<exists> i \\<le> n. \\<exists> ys. set ys \\<subseteq> set xs \\<union> {0..k} \\<and> len m i i ys < 0\" if\n  \"len (fw m n k) i i xs < 0\" \"i \\<le> n\" \"k \\<le> n\" \"set xs \\<subseteq> {0..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n          len m i i ys < (0::'a)", "using that"], ["proof (prove)\nusing this:\n  len (fw m n k) i i xs < (0::'a)\n  i \\<le> n\n  k \\<le> n\n  set xs \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n          len m i i ys < (0::'a)", "proof (induction k arbitrary: i xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i xs.\n       \\<lbrakk>len (fw m n 0) i i xs < (0::'a); i \\<le> n; 0 \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..0} \\<and>\n                               len m i i ys < (0::'a)\n 2. \\<And>k i xs.\n       \\<lbrakk>\\<And>i xs.\n                   \\<lbrakk>len (fw m n k) i i xs < (0::'a); i \\<le> n;\n                    k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>i\\<le>n.\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n     len m i i ys < (0::'a);\n        len (fw m n (Suc k)) i i xs < (0::'a); i \\<le> n; Suc k \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n                               len m i i ys < (0::'a)", "case 0"], ["proof (state)\nthis:\n  len (fw m n 0) i i xs < (0::'a)\n  i \\<le> n\n  0 \\<le> n\n  set xs \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. \\<And>i xs.\n       \\<lbrakk>len (fw m n 0) i i xs < (0::'a); i \\<le> n; 0 \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..0} \\<and>\n                               len m i i ys < (0::'a)\n 2. \\<And>k i xs.\n       \\<lbrakk>\\<And>i xs.\n                   \\<lbrakk>len (fw m n k) i i xs < (0::'a); i \\<le> n;\n                    k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>i\\<le>n.\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n     len m i i ys < (0::'a);\n        len (fw m n (Suc k)) i i xs < (0::'a); i \\<le> n; Suc k \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n                               len m i i ys < (0::'a)", "then"], ["proof (chain)\npicking this:\n  len (fw m n 0) i i xs < (0::'a)\n  i \\<le> n\n  0 \\<le> n\n  set xs \\<subseteq> {0..n}", "show ?case"], ["proof (prove)\nusing this:\n  len (fw m n 0) i i xs < (0::'a)\n  i \\<le> n\n  0 \\<le> n\n  set xs \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {0..0} \\<and>\n          len m i i ys < (0::'a)", "by simp (drule fwi_neg_cycle_neg_cycle; auto)"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>ys.\n        set ys \\<subseteq> set xs \\<union> {0..0} \\<and>\n        len m i i ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>k i xs.\n       \\<lbrakk>\\<And>i xs.\n                   \\<lbrakk>len (fw m n k) i i xs < (0::'a); i \\<le> n;\n                    k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>i\\<le>n.\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n     len m i i ys < (0::'a);\n        len (fw m n (Suc k)) i i xs < (0::'a); i \\<le> n; Suc k \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n                               len m i i ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k i xs.\n       \\<lbrakk>\\<And>i xs.\n                   \\<lbrakk>len (fw m n k) i i xs < (0::'a); i \\<le> n;\n                    k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>i\\<le>n.\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n     len m i i ys < (0::'a);\n        len (fw m n (Suc k)) i i xs < (0::'a); i \\<le> n; Suc k \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n                               len m i i ys < (0::'a)", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>len (fw m n k) ?i1 ?i1 ?xs1 < (0::'a); ?i1 \\<le> n; k \\<le> n;\n   set ?xs1 \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<le>n.\n                       \\<exists>ys.\n                          set ys \\<subseteq> set ?xs1 \\<union> {0..k} \\<and>\n                          len m i i ys < (0::'a)\n  len (fw m n (Suc k)) i i xs < (0::'a)\n  i \\<le> n\n  Suc k \\<le> n\n  set xs \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>k i xs.\n       \\<lbrakk>\\<And>i xs.\n                   \\<lbrakk>len (fw m n k) i i xs < (0::'a); i \\<le> n;\n                    k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>i\\<le>n.\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n     len m i i ys < (0::'a);\n        len (fw m n (Suc k)) i i xs < (0::'a); i \\<le> n; Suc k \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n                               len m i i ys < (0::'a)", "from fwi_neg_cycle_neg_cycle[OF Suc.prems(1)[simplified]] Suc.prems"], ["proof (chain)\npicking this:\n  \\<lbrakk>i \\<le> n; Suc k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<le>n.\n                       \\<exists>ys.\n                          set ys \\<subseteq> set xs \\<union> {Suc k} \\<and>\n                          len (fw m n k) i i ys < (0::'a)\n  len (fw m n (Suc k)) i i xs < (0::'a)\n  i \\<le> n\n  Suc k \\<le> n\n  set xs \\<subseteq> {0..n}", "obtain i' ys where\n      \"i' \\<le> n\"  \"set ys \\<subseteq> set xs \\<union> {Suc k}\" \"len (fw m n k) i' i' ys < 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; Suc k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i\\<le>n.\n                       \\<exists>ys.\n                          set ys \\<subseteq> set xs \\<union> {Suc k} \\<and>\n                          len (fw m n k) i i ys < (0::'a)\n  len (fw m n (Suc k)) i i xs < (0::'a)\n  i \\<le> n\n  Suc k \\<le> n\n  set xs \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. (\\<And>i' ys.\n        \\<lbrakk>i' \\<le> n; set ys \\<subseteq> set xs \\<union> {Suc k};\n         len (fw m n k) i' i' ys < (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i' \\<le> n\n  set ys \\<subseteq> set xs \\<union> {Suc k}\n  len (fw m n k) i' i' ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>k i xs.\n       \\<lbrakk>\\<And>i xs.\n                   \\<lbrakk>len (fw m n k) i i xs < (0::'a); i \\<le> n;\n                    k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>i\\<le>n.\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n     len m i i ys < (0::'a);\n        len (fw m n (Suc k)) i i xs < (0::'a); i \\<le> n; Suc k \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n                               len m i i ys < (0::'a)", "with Suc.prems"], ["proof (chain)\npicking this:\n  len (fw m n (Suc k)) i i xs < (0::'a)\n  i \\<le> n\n  Suc k \\<le> n\n  set xs \\<subseteq> {0..n}\n  i' \\<le> n\n  set ys \\<subseteq> set xs \\<union> {Suc k}\n  len (fw m n k) i' i' ys < (0::'a)", "obtain i'' zs where\n      \"i'' \\<le> n\" \"set zs \\<subseteq> set ys \\<union> {0..k}\" \"len m i'' i'' zs < 0\""], ["proof (prove)\nusing this:\n  len (fw m n (Suc k)) i i xs < (0::'a)\n  i \\<le> n\n  Suc k \\<le> n\n  set xs \\<subseteq> {0..n}\n  i' \\<le> n\n  set ys \\<subseteq> set xs \\<union> {Suc k}\n  len (fw m n k) i' i' ys < (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>i'' zs.\n        \\<lbrakk>i'' \\<le> n; set zs \\<subseteq> set ys \\<union> {0..k};\n         len m i'' i'' zs < (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by atomize_elim (auto intro!: Suc.IH)"], ["proof (state)\nthis:\n  i'' \\<le> n\n  set zs \\<subseteq> set ys \\<union> {0..k}\n  len m i'' i'' zs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>k i xs.\n       \\<lbrakk>\\<And>i xs.\n                   \\<lbrakk>len (fw m n k) i i xs < (0::'a); i \\<le> n;\n                    k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>i\\<le>n.\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n     len m i i ys < (0::'a);\n        len (fw m n (Suc k)) i i xs < (0::'a); i \\<le> n; Suc k \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n                               len m i i ys < (0::'a)", "with \\<open>set ys \\<subseteq> _\\<close>"], ["proof (chain)\npicking this:\n  set ys \\<subseteq> set xs \\<union> {Suc k}\n  i'' \\<le> n\n  set zs \\<subseteq> set ys \\<union> {0..k}\n  len m i'' i'' zs < (0::'a)", "have \"set zs \\<subseteq> set xs \\<union> {0..Suc k} \\<and> len m i'' i'' zs < 0\""], ["proof (prove)\nusing this:\n  set ys \\<subseteq> set xs \\<union> {Suc k}\n  i'' \\<le> n\n  set zs \\<subseteq> set ys \\<union> {0..k}\n  len m i'' i'' zs < (0::'a)\n\ngoal (1 subgoal):\n 1. set zs \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n    len m i'' i'' zs < (0::'a)", "by force"], ["proof (state)\nthis:\n  set zs \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n  len m i'' i'' zs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>k i xs.\n       \\<lbrakk>\\<And>i xs.\n                   \\<lbrakk>len (fw m n k) i i xs < (0::'a); i \\<le> n;\n                    k \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>i\\<le>n.\n  \\<exists>ys.\n     set ys \\<subseteq> set xs \\<union> {0..k} \\<and>\n     len m i i ys < (0::'a);\n        len (fw m n (Suc k)) i i xs < (0::'a); i \\<le> n; Suc k \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>ys.\n                               set ys\n                               \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n                               len m i i ys < (0::'a)", "with \\<open>i'' \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i'' \\<le> n\n  set zs \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n  len m i'' i'' zs < (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  i'' \\<le> n\n  set zs \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n  len m i'' i'' zs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>ys.\n          set ys \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n          len m i i ys < (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>ys.\n        set ys \\<subseteq> set xs \\<union> {0..Suc k} \\<and>\n        len m i i ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Main theorem under the absence of negative cycles.\\<close>"], ["", "theorem fw_correct:\n  \"canonical_subs n {0..k} (fw m n k) \\<and> cyc_free_subs n {0..k} (fw m n k)\"\n  if \"cyc_free_subs n {0..k} m\" \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_subs n {0..k} (fw m n k) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n k) i i xs)", "using that"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..k} (fw m n k) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n k) i i xs)", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> canonical_subs n {0..0} (fw m n 0) \\<and>\n                      (\\<forall>i xs.\n                          i \\<le> n \\<and>\n                          set xs \\<subseteq> {0..0} \\<longrightarrow>\n                          (0::'a) \\<le> len (fw m n 0) i i xs)\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>\\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..k} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                                  (\\<forall>i xs.\ni \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n(0::'a) \\<le> len (fw m n k) i i xs);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n                         (\\<forall>i xs.\n                             i \\<le> n \\<and>\n                             set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n                             (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "case 0"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> canonical_subs n {0..0} (fw m n 0) \\<and>\n                      (\\<forall>i xs.\n                          i \\<le> n \\<and>\n                          set xs \\<subseteq> {0..0} \\<longrightarrow>\n                          (0::'a) \\<le> len (fw m n 0) i i xs)\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>\\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..k} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                                  (\\<forall>i xs.\ni \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n(0::'a) \\<le> len (fw m n k) i i xs);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n                         (\\<forall>i xs.\n                             i \\<le> n \\<and>\n                             set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n                             (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "then"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  0 \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..0} (fw m n 0) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n 0) i i xs)", "using fwi_cyc_free_subs[of n \"{}\" 0 m] fwi_canonical_extend[of n \"{}\"]"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  0 \\<le> n\n  \\<lbrakk>\\<forall>i xs.\n              i \\<le> n \\<and>\n              set xs \\<subseteq> {} \\<union> {0} \\<longrightarrow>\n              (0::'a) \\<le> len m i i xs;\n   canonical_subs n {} m; {} \\<subseteq> {0..n}; 0 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<forall>i xs.\n                       i \\<le> n \\<and>\n                       set xs \\<subseteq> {} \\<union> {0} \\<longrightarrow>\n                       (0::'a) \\<le> len (fwi m n 0 n n) i i xs\n  \\<lbrakk>canonical_subs n {} ?m; {} \\<subseteq> {0..n};\n   (0::'a) \\<le> ?m ?k ?k; ?k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> canonical_subs n ({} \\<union> {?k}) (fwi ?m n ?k n n)\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..0} (fw m n 0) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n 0) i i xs)", "by (auto simp: cyc_free_subs_diag)"], ["proof (state)\nthis:\n  canonical_subs n {0..0} (fw m n 0) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n 0) i i xs)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>\\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..k} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                                  (\\<forall>i xs.\ni \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n(0::'a) \\<le> len (fw m n k) i i xs);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n                         (\\<forall>i xs.\n                             i \\<le> n \\<and>\n                             set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n                             (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>\\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..k} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                                  (\\<forall>i xs.\ni \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n(0::'a) \\<le> len (fw m n k) i i xs);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n                         (\\<forall>i xs.\n                             i \\<le> n \\<and>\n                             set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n                             (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>i xs.\n              i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n              (0::'a) \\<le> len m i i xs;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                    (\\<forall>i xs.\n                        i \\<le> n \\<and>\n                        set xs \\<subseteq> {0..k} \\<longrightarrow>\n                        (0::'a) \\<le> len (fw m n k) i i xs)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>\\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..k} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                                  (\\<forall>i xs.\ni \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n(0::'a) \\<le> len (fw m n k) i i xs);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n                         (\\<forall>i xs.\n                             i \\<le> n \\<and>\n                             set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n                             (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>i xs.\n              i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n              (0::'a) \\<le> len m i i xs;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                    (\\<forall>i xs.\n                        i \\<le> n \\<and>\n                        set xs \\<subseteq> {0..k} \\<longrightarrow>\n                        (0::'a) \\<le> len (fw m n k) i i xs)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  Suc k \\<le> n", "have IH:\n    \"canonical_subs n {0..k} (fw m n k) \\<and> cyc_free_subs n {0..k} (fw m n k)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>i xs.\n              i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n              (0::'a) \\<le> len m i i xs;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                    (\\<forall>i xs.\n                        i \\<le> n \\<and>\n                        set xs \\<subseteq> {0..k} \\<longrightarrow>\n                        (0::'a) \\<le> len (fw m n k) i i xs)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..k} (fw m n k) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n k) i i xs)", "by fastforce"], ["proof (state)\nthis:\n  canonical_subs n {0..k} (fw m n k) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n k) i i xs)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>\\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..k} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                                  (\\<forall>i xs.\ni \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n(0::'a) \\<le> len (fw m n k) i i xs);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n                         (\\<forall>i xs.\n                             i \\<le> n \\<and>\n                             set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n                             (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "have *: \"{0..Suc k} = {0..k} \\<union> {Suc k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..Suc k} = {0..k} \\<union> {Suc k}", "by auto"], ["proof (state)\nthis:\n  {0..Suc k} = {0..k} \\<union> {Suc k}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>\\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..k} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                                  (\\<forall>i xs.\ni \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n(0::'a) \\<le> len (fw m n k) i i xs);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n                         (\\<forall>i xs.\n                             i \\<le> n \\<and>\n                             set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n                             (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "then"], ["proof (chain)\npicking this:\n  {0..Suc k} = {0..k} \\<union> {Suc k}", "have **: \"canonical_subs n {0..Suc k} (fw m n (Suc k))\""], ["proof (prove)\nusing this:\n  {0..Suc k} = {0..k} \\<union> {Suc k}\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..Suc k} (fw m n (Suc k))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow>\n    canonical_subs n (insert (Suc k) {0..k}) (fwi (fw m n k) n (Suc k) n n)", "apply (rule fwi_canonical_extend[of n \"{0..k}\" _ \"Suc k\", simplified])"], ["proof (prove)\ngoal (3 subgoals):\n 1. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow>\n    canonical_subs n {0..k} (fw m n k)\n 2. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow>\n    (0::'a) \\<le> fw m n k (Suc k) (Suc k)\n 3. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow> Suc k \\<le> n", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow>\n    canonical_subs n {0..k} (fw m n k)", "using IH"], ["proof (prove)\nusing this:\n  canonical_subs n {0..k} (fw m n k) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n k) i i xs)\n\ngoal (1 subgoal):\n 1. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow>\n    canonical_subs n {0..k} (fw m n k)", ".."], ["proof (prove)\ngoal (2 subgoals):\n 1. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow>\n    (0::'a) \\<le> fw m n k (Suc k) (Suc k)\n 2. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow> Suc k \\<le> n", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow>\n    (0::'a) \\<le> fw m n k (Suc k) (Suc k)", "using IH Suc.prems"], ["proof (prove)\nusing this:\n  canonical_subs n {0..k} (fw m n k) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n k) i i xs)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow>\n    (0::'a) \\<le> fw m n k (Suc k) (Suc k)", "by (auto intro: cyc_free_subs_diag[of n \"{0..k}\" \"fw m n k\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..Suc k} = insert (Suc k) {0..k} \\<Longrightarrow> Suc k \\<le> n", "by (rule Suc)"], ["proof (state)\nthis:\n  canonical_subs n {0..Suc k} (fw m n (Suc k))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>\\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..k} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                                  (\\<forall>i xs.\ni \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n(0::'a) \\<le> len (fw m n k) i i xs);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n                         (\\<forall>i xs.\n                             i \\<le> n \\<and>\n                             set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n                             (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "proof (cases \"\\<exists>i\\<le>n. fw m n (Suc k) i i < 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>i\\<le>n. fw m n (Suc k) i i < (0::'a) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)\n 2. \\<not> (\\<exists>i\\<le>n.\n               fw m n (Suc k) i i < (0::'a)) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "case True"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n (Suc k) i i < (0::'a)\n\ngoal (2 subgoals):\n 1. \\<exists>i\\<le>n. fw m n (Suc k) i i < (0::'a) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)\n 2. \\<not> (\\<exists>i\\<le>n.\n               fw m n (Suc k) i i < (0::'a)) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "then"], ["proof (chain)\npicking this:\n  \\<exists>i\\<le>n. fw m n (Suc k) i i < (0::'a)", "obtain i where \"i \\<le> n\" \"len (fw m n (Suc k)) i i [] < 0\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<le>n. fw m n (Suc k) i i < (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<le> n; len (fw m n (Suc k)) i i [] < (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<le> n\n  len (fw m n (Suc k)) i i [] < (0::'a)\n\ngoal (2 subgoals):\n 1. \\<exists>i\\<le>n. fw m n (Suc k) i i < (0::'a) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)\n 2. \\<not> (\\<exists>i\\<le>n.\n               fw m n (Suc k) i i < (0::'a)) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "from fw_neg_diag_neg_cycle[OF this(2,1) \\<open>Suc k \\<le> n\\<close>] Suc.prems"], ["proof (chain)\npicking this:\n  set [] \\<subseteq> {0..n} \\<Longrightarrow>\n  \\<exists>i\\<le>n.\n     \\<exists>ys.\n        set ys \\<subseteq> set [] \\<union> {0..Suc k} \\<and>\n        len m i i ys < (0::'a)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  Suc k \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  set [] \\<subseteq> {0..n} \\<Longrightarrow>\n  \\<exists>i\\<le>n.\n     \\<exists>ys.\n        set ys \\<subseteq> set [] \\<union> {0..Suc k} \\<and>\n        len m i i ys < (0::'a)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "by fastforce"], ["proof (state)\nthis:\n  canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n (Suc k)) i i xs)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<le>n.\n               fw m n (Suc k) i i < (0::'a)) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<le>n.\n               fw m n (Suc k) i i < (0::'a)) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>i\\<le>n. fw m n (Suc k) i i < (0::'a))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<le>n.\n               fw m n (Suc k) i i < (0::'a)) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "have \"cyc_free_subs n {0..Suc k} (fw m n (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n       (0::'a) \\<le> len (fw m n (Suc k)) i i xs", "apply (simp add: *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and>\n       set xs \\<subseteq> insert (Suc k) {0..k} \\<longrightarrow>\n       (0::'a) \\<le> len (fwi (fw m n k) n (Suc k) n n) i i xs", "apply (rule fwi_cyc_free_subs'[of n \"{0..k}\", simplified])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n       (0::'a) \\<le> len (fw m n k) i i xs\n 2. canonical_subs n {0..k} (fw m n k)\n 3. k \\<le> n\n 4. Suc k \\<le> n\n 5. \\<forall>i\\<le>n. (0::'a) \\<le> fwi (fw m n k) n (Suc k) n n i i", "using Suc IH False"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>i xs.\n              i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n              (0::'a) \\<le> len m i i xs;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> canonical_subs n {0..k} (fw m n k) \\<and>\n                    (\\<forall>i xs.\n                        i \\<le> n \\<and>\n                        set xs \\<subseteq> {0..k} \\<longrightarrow>\n                        (0::'a) \\<le> len (fw m n k) i i xs)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  Suc k \\<le> n\n  canonical_subs n {0..k} (fw m n k) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n k) i i xs)\n  \\<not> (\\<exists>i\\<le>n. fw m n (Suc k) i i < (0::'a))\n\ngoal (5 subgoals):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n       (0::'a) \\<le> len (fw m n k) i i xs\n 2. canonical_subs n {0..k} (fw m n k)\n 3. k \\<le> n\n 4. Suc k \\<le> n\n 5. \\<forall>i\\<le>n. (0::'a) \\<le> fwi (fw m n k) n (Suc k) n n i i", "by force+"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n (Suc k)) i i xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<le>n.\n               fw m n (Suc k) i i < (0::'a)) \\<Longrightarrow>\n    canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "with **"], ["proof (chain)\npicking this:\n  canonical_subs n {0..Suc k} (fw m n (Suc k))\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n (Suc k)) i i xs", "show ?thesis"], ["proof (prove)\nusing this:\n  canonical_subs n {0..Suc k} (fw m n (Suc k))\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n (Suc k)) i i xs\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n        (0::'a) \\<le> len (fw m n (Suc k)) i i xs)", "by blast"], ["proof (state)\nthis:\n  canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n (Suc k)) i i xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  canonical_subs n {0..Suc k} (fw m n (Suc k)) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n (Suc k)) i i xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas fw_canonical_subs = fw_correct[THEN conjunct1]"], ["", "lemmas fw_cyc_free_subs = fw_correct[THEN conjunct2]"], ["", "lemmas cyc_free_diag = cyc_free_subs_diag"], ["", "section \\<open>Definition of Shortest Paths\\<close>"], ["", "text \\<open>\n  We define the notion of the length of the shortest \\<open>simple\\<close> path between two vertices,\n  using only intermediate vertices from the set \\<open>{0\\<dots>k}\\<close>.\n\\<close>"], ["", "definition D :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> 'a\" where\n  \"D m i j k \\<equiv> Min {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["", "lemma distinct_length_le:\"finite s \\<Longrightarrow> set xs \\<subseteq> s \\<Longrightarrow> distinct xs \\<Longrightarrow> length xs \\<le> card s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite s; set xs \\<subseteq> s; distinct xs\\<rbrakk>\n    \\<Longrightarrow> length xs \\<le> card s", "by (metis card_mono distinct_card)"], ["", "lemma finite_distinct: \"finite s \\<Longrightarrow> finite {xs . set xs \\<subseteq> s \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "assume \"finite s\""], ["proof (state)\nthis:\n  finite s\n\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "hence \"{xs . set xs \\<subseteq> s \\<and> distinct xs} \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\""], ["proof (prove)\nusing this:\n  finite s\n\ngoal (1 subgoal):\n 1. {xs. set xs \\<subseteq> s \\<and> distinct xs}\n    \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "using distinct_length_le"], ["proof (prove)\nusing this:\n  finite s\n  \\<lbrakk>finite ?s; set ?xs \\<subseteq> ?s; distinct ?xs\\<rbrakk>\n  \\<Longrightarrow> length ?xs \\<le> card ?s\n\ngoal (1 subgoal):\n 1. {xs. set xs \\<subseteq> s \\<and> distinct xs}\n    \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "by auto"], ["proof (state)\nthis:\n  {xs. set xs \\<subseteq> s \\<and> distinct xs}\n  \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "moreover"], ["proof (state)\nthis:\n  {xs. set xs \\<subseteq> s \\<and> distinct xs}\n  \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "have \"finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "using finite_lists_length_le[OF \\<open>finite s\\<close>]"], ["proof (prove)\nusing this:\n  finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> ?n}\n\ngoal (1 subgoal):\n 1. finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "by auto"], ["proof (state)\nthis:\n  finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n\ngoal (1 subgoal):\n 1. finite s \\<Longrightarrow>\n    finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "ultimately"], ["proof (chain)\npicking this:\n  {xs. set xs \\<subseteq> s \\<and> distinct xs}\n  \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n  finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}", "show ?thesis"], ["proof (prove)\nusing this:\n  {xs. set xs \\<subseteq> s \\<and> distinct xs}\n  \\<subseteq> {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n  finite {xs. set xs \\<subseteq> s \\<and> length xs \\<le> card s}\n\ngoal (1 subgoal):\n 1. finite {xs. set xs \\<subseteq> s \\<and> distinct xs}", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite {xs. set xs \\<subseteq> s \\<and> distinct xs}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma D_base_finite:\n  \"finite {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}", "using finite_distinct finite_image_set"], ["proof (prove)\nusing this:\n  finite ?s \\<Longrightarrow>\n  finite {xs. set xs \\<subseteq> ?s \\<and> distinct xs}\n  finite {x. ?P x} \\<Longrightarrow> finite {?f x |x. ?P x}\n\ngoal (1 subgoal):\n 1. finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}", "by blast"], ["", "lemma D_base_finite':\n  \"finite {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}", "have \"{len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n        \\<subseteq> {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n    \\<subseteq> {len m i j xs |xs.\n                 set xs \\<subseteq> {0..k} \\<and> distinct xs}", "by auto"], ["proof (state)\nthis:\n  {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}", "with D_base_finite[of m i j k]"], ["proof (chain)\npicking this:\n  finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\n  {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\n  {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}", "by (rule rev_finite_subset)"], ["proof (state)\nthis:\n  finite\n   {len m i j xs |xs.\n    set xs \\<subseteq> {0..k} \\<and> distinct (i # j # xs)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma D_base_finite'':\n  \"finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using D_base_finite[of m i j k]"], ["proof (prove)\nusing this:\n  finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by - (rule finite_subset, auto)"], ["", "definition cycle_free :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"cycle_free m n \\<equiv> \\<forall> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n  (\\<forall> j. j \\<le> n \\<longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and> len m i i xs \\<ge> 0\""], ["", "lemma D_eqI:\n  fixes m n i j k\n  defines \"A \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k}}\"\n  defines \"A_distinct \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"\n  assumes \"cycle_free m n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\" \"(\\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y)\" \"x \\<in> A\"\n  shows \"D m i j k = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = x", "using assms"], ["proof (prove)\nusing this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. D m i j k = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}};\n     A_distinct \\<equiv>\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs};\n     cycle_free m n; i \\<le> n; j \\<le> n; k \\<le> n;\n     \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y;\n     x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> D m i j k = x", "let ?S = \"{len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}};\n     A_distinct \\<equiv>\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs};\n     cycle_free m n; i \\<le> n; j \\<le> n; k \\<le> n;\n     \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y;\n     x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> D m i j k = x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = x", "unfolding D_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Min {len m i j xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} =\n    x", "proof (rule Min_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n 2. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 3. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "have \"?S \\<subseteq> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n    \\<subseteq> {len m i j xs |xs.\n                 set xs \\<subseteq> {0..k} \\<and> distinct xs}", "by auto"], ["proof (state)\nthis:\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (3 subgoals):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n 2. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 3. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "thus \"finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\nusing this:\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using D_base_finite[of m i j k]"], ["proof (prove)\nusing this:\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<subseteq> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and> distinct xs}\n  finite {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite\n   {len m i j xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "assume \"y \\<in> ?S\""], ["proof (state)\nthis:\n  y \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "hence \"y \\<in> A_distinct\""], ["proof (prove)\nusing this:\n  y \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. y \\<in> A_distinct", "using assms(2,7)"], ["proof (prove)\nusing this:\n  y \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n\ngoal (1 subgoal):\n 1. y \\<in> A_distinct", "by fastforce"], ["proof (state)\nthis:\n  y \\<in> A_distinct\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       y \\<in> {len m i j xs |xs.\n                set xs \\<subseteq> {0..k} \\<and>\n                i \\<notin> set xs \\<and>\n                j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n       x \\<le> y\n 2. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "thus \"x \\<le> y\""], ["proof (prove)\nusing this:\n  y \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<le> y", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> A_distinct\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> y", "by meson"], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "from assms"], ["proof (chain)\npicking this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A", "obtain xs where xs: \"x = len m i j xs\" \"set xs \\<subseteq> {0..k}\""], ["proof (prove)\nusing this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>x = len m i j xs; set xs \\<subseteq> {0..k}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "let ?ys = \"rem_cycles i j xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "let ?y = \"len m i j ?ys\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "from assms(3-6) xs"], ["proof (chain)\npicking this:\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}", "have *:\"?y \\<le> x\""], ["proof (prove)\nusing this:\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "by (fastforce simp add: cycle_free_def)"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "have distinct: \"i \\<notin> set ?ys\" \"j \\<notin> set ?ys\" \"distinct ?ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs) &&&\n    j \\<notin> set (rem_cycles i j xs) &&& distinct (rem_cycles i j xs)", "using rem_cycles_distinct remove_all_removes rem_cycles_removes_last"], ["proof (prove)\nusing this:\n  distinct (rem_cycles ?i ?j ?xs)\n  ?x \\<notin> set (remove_all ?x ?xs)\n  ?j \\<notin> set (rem_cycles ?i ?j ?xs)\n\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs) &&&\n    j \\<notin> set (rem_cycles i j xs) &&& distinct (rem_cycles i j xs)", "by fast+"], ["proof (state)\nthis:\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "with xs(2)"], ["proof (chain)\npicking this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)", "have \"?y \\<in> A_distinct\""], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<in> A_distinct", "unfolding A_distinct_def"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs)\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using rem_cycles_subs"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set (rem_cycles ?i ?j ?xs) \\<subseteq> set ?xs\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs)\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "hence \"x \\<le> ?y\""], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<le> len m i j (rem_cycles i j xs)", "using assms"], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> len m i j (rem_cycles i j xs)", "by meson"], ["proof (state)\nthis:\n  x \\<le> len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "moreover"], ["proof (state)\nthis:\n  x \\<le> len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "have \"?y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "using assms(3-6) xs"], ["proof (prove)\nusing this:\n  cycle_free m n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "by (fastforce simp add: cycle_free_def)"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "ultimately"], ["proof (chain)\npicking this:\n  x \\<le> len m i j (rem_cycles i j xs)\n  len m i j (rem_cycles i j xs) \\<le> x", "have \"x = ?y\""], ["proof (prove)\nusing this:\n  x \\<le> len m i j (rem_cycles i j xs)\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x = len m i j (rem_cycles i j xs)", "by simp"], ["proof (state)\nthis:\n  x = len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "thus \"x \\<in> ?S\""], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using distinct xs(2) rem_cycles_subs[of i j xs]"], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set xs \\<subseteq> {0..k}\n  set (rem_cycles i j xs) \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D m i j k = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma D_base_not_empty:\n   \"{len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n    {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n    {}", "have \"len m i j [] \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j []\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  len m i j []\n  \\<in> {len m i j xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n    {}", "thus ?thesis"], ["proof (prove)\nusing this:\n  len m i j []\n  \\<in> {len m i j xs |xs.\n         set xs \\<subseteq> {0..k} \\<and>\n         i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. {len m i j xs |xs.\n     set xs \\<subseteq> {0..k} \\<and>\n     i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs} \\<noteq>\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Min_elem_dest: \"finite A \\<Longrightarrow> A \\<noteq> {} \\<Longrightarrow> x = Min A \\<Longrightarrow> x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; A \\<noteq> {}; x = Min A\\<rbrakk>\n    \\<Longrightarrow> x \\<in> A", "by simp"], ["", "lemma D_dest: \"x = D m i j k \\<Longrightarrow>\n  x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..Suc k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using Min_elem_dest[OF D_base_finite'' D_base_not_empty]"], ["proof (prove)\nusing this:\n  ?x =\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and>\n       ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..Suc k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by (fastforce simp add: D_def)"], ["", "lemma D_dest': \"x = D m i j k \\<Longrightarrow> x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k}}", "using Min_elem_dest[OF D_base_finite'' D_base_not_empty]"], ["proof (prove)\nusing this:\n  ?x =\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and>\n       ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..Suc k}}", "by (fastforce simp add: D_def)"], ["", "lemma D_dest'': \"x = D m i j k \\<Longrightarrow> x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}", "using Min_elem_dest[OF D_base_finite'' D_base_not_empty]"], ["proof (prove)\nusing this:\n  ?x =\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and>\n       ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. x = D m i j k \\<Longrightarrow>\n    x \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}", "by (fastforce simp add: D_def)"], ["", "lemma cycle_free_loop_dest: \"i \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> cycle_free m n \\<Longrightarrow> len m i i xs \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n}; cycle_free m n\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> len m i i xs", "unfolding cycle_free_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..n};\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (\\<forall>j\\<le>n.\n            len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n        (0::'a) \\<le> len m i i xs\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> len m i i xs", "by auto"], ["", "lemma cycle_free_dest:\n  \"cycle_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n}\n    \\<Longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; i \\<le> n; j \\<le> n;\n     set xs \\<subseteq> {0..n}\\<rbrakk>\n    \\<Longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs", "by (auto simp add: cycle_free_def)"], ["", "definition cycle_free_up_to :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"cycle_free_up_to m k n \\<equiv> \\<forall> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n  (\\<forall> j. j \\<le> n \\<longrightarrow> len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and> len m i i xs \\<ge> 0\""], ["", "lemma cycle_free_up_to_loop_dest:\n  \"i \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..k} \\<Longrightarrow> cycle_free_up_to m k n \\<Longrightarrow> len m i i xs \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..k};\n     cycle_free_up_to m k n\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> len m i i xs", "unfolding cycle_free_up_to_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; set xs \\<subseteq> {0..k};\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n        (\\<forall>j\\<le>n.\n            len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n        (0::'a) \\<le> len m i i xs\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> len m i i xs", "by auto"], ["", "lemma cycle_free_up_to_diag:\n  assumes \"cycle_free_up_to m k n\" \"i \\<le> n\"\n  shows \"m i i \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m i i", "using cycle_free_up_to_loop_dest[OF assms(2) _ assms(1), of \"[]\"]"], ["proof (prove)\nusing this:\n  set [] \\<subseteq> {0..k} \\<Longrightarrow> (0::'a) \\<le> len m i i []\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m i i", "by auto"], ["", "lemma D_eqI2:\n  fixes m n i j k\n  defines \"A \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k}}\"\n  defines \"A_distinct \\<equiv> {len m i j xs | xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\"\n  assumes \"cycle_free_up_to m k n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"\n          \"(\\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y)\" \"x \\<in> A\"\n  shows \"D m i j k = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = x", "using assms"], ["proof (prove)\nusing this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. D m i j k = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}};\n     A_distinct \\<equiv>\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs};\n     cycle_free_up_to m k n; i \\<le> n; j \\<le> n; k \\<le> n;\n     \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y;\n     x \\<in> A\\<rbrakk>\n    \\<Longrightarrow> D m i j k = x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = x", "proof (simp add: D_def A_distinct_def[symmetric], rule Min_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite A_distinct\n 2. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 3. x \\<in> A_distinct", "show \"finite A_distinct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A_distinct", "using D_base_finite''[of m i j k]"], ["proof (prove)\nusing this:\n  finite\n   {len m i j xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite A_distinct", "unfolding A_distinct_def"], ["proof (prove)\nusing this:\n  finite\n   {len m i j xs |xs.\n    set xs \\<subseteq> {0..k} \\<and>\n    i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n\ngoal (1 subgoal):\n 1. finite\n     {len m i j xs |xs.\n      set xs \\<subseteq> {0..k} \\<and>\n      i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by auto"], ["proof (state)\nthis:\n  finite A_distinct\n\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 2. x \\<in> A_distinct", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 2. x \\<in> A_distinct", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 2. x \\<in> A_distinct", "assume \"y \\<in> A_distinct\""], ["proof (state)\nthis:\n  y \\<in> A_distinct\n\ngoal (2 subgoals):\n 1. \\<And>y. y \\<in> A_distinct \\<Longrightarrow> x \\<le> y\n 2. x \\<in> A_distinct", "thus \"x \\<le> y\""], ["proof (prove)\nusing this:\n  y \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<le> y", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> A_distinct\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> y", "by meson"], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "from assms"], ["proof (chain)\npicking this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A", "obtain xs where xs: \"x = len m i j xs\" \"set xs \\<subseteq> {0..k}\""], ["proof (prove)\nusing this:\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>x = len m i j xs; set xs \\<subseteq> {0..k}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "let ?ys = \"rem_cycles i j xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "let ?y = \"len m i j ?ys\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "from assms(3-6) xs"], ["proof (chain)\npicking this:\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}", "have *:\"?y \\<le> x\""], ["proof (prove)\nusing this:\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "by (fastforce simp add: cycle_free_up_to_def)"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "have distinct: \"i \\<notin> set ?ys\" \"j \\<notin> set ?ys\" \"distinct ?ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs) &&&\n    j \\<notin> set (rem_cycles i j xs) &&& distinct (rem_cycles i j xs)", "using rem_cycles_distinct remove_all_removes rem_cycles_removes_last"], ["proof (prove)\nusing this:\n  distinct (rem_cycles ?i ?j ?xs)\n  ?x \\<notin> set (remove_all ?x ?xs)\n  ?j \\<notin> set (rem_cycles ?i ?j ?xs)\n\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs) &&&\n    j \\<notin> set (rem_cycles i j xs) &&& distinct (rem_cycles i j xs)", "by fast+"], ["proof (state)\nthis:\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "with xs(2)"], ["proof (chain)\npicking this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)", "have \"?y \\<in> A_distinct\""], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<in> A_distinct", "unfolding A_distinct_def"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs)\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "using rem_cycles_subs"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set (rem_cycles ?i ?j ?xs) \\<subseteq> set ?xs\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs)\n    \\<in> {len m i j xs |xs.\n           set xs \\<subseteq> {0..k} \\<and>\n           i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "hence \"x \\<le> ?y\""], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n\ngoal (1 subgoal):\n 1. x \\<le> len m i j (rem_cycles i j xs)", "using assms"], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs) \\<in> A_distinct\n  A \\<equiv> {len m i j xs |xs. set xs \\<subseteq> {0..k}}\n  A_distinct \\<equiv>\n  {len m i j xs |xs.\n   set xs \\<subseteq> {0..k} \\<and>\n   i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  ?y1 \\<in> A_distinct \\<Longrightarrow> x \\<le> ?y1\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<le> len m i j (rem_cycles i j xs)", "by meson"], ["proof (state)\nthis:\n  x \\<le> len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "moreover"], ["proof (state)\nthis:\n  x \\<le> len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "have \"?y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "using assms(3-6) xs"], ["proof (prove)\nusing this:\n  cycle_free_up_to m k n\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  x = len m i j xs\n  set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len m i j (rem_cycles i j xs) \\<le> x", "by (fastforce simp add: cycle_free_up_to_def)"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "ultimately"], ["proof (chain)\npicking this:\n  x \\<le> len m i j (rem_cycles i j xs)\n  len m i j (rem_cycles i j xs) \\<le> x", "have \"x = ?y\""], ["proof (prove)\nusing this:\n  x \\<le> len m i j (rem_cycles i j xs)\n  len m i j (rem_cycles i j xs) \\<le> x\n\ngoal (1 subgoal):\n 1. x = len m i j (rem_cycles i j xs)", "by simp"], ["proof (state)\nthis:\n  x = len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "then"], ["proof (chain)\npicking this:\n  x = len m i j (rem_cycles i j xs)", "show \"x \\<in> A_distinct\""], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "using distinct xs(2) rem_cycles_subs[of i j xs]"], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set xs \\<subseteq> {0..k}\n  set (rem_cycles i j xs) \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> A_distinct", "unfolding A_distinct_def"], ["proof (prove)\nusing this:\n  x = len m i j (rem_cycles i j xs)\n  i \\<notin> set (rem_cycles i j xs)\n  j \\<notin> set (rem_cycles i j xs)\n  distinct (rem_cycles i j xs)\n  set xs \\<subseteq> {0..k}\n  set (rem_cycles i j xs) \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> A_distinct\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  D m i j k = x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Connecting the Algorithm to the Notion of Shortest Paths\\<close>"], ["", "text \\<open>\n  Under the absence of negative cycles, the \\fw correctly computes the length of the shortest path\n  between any pair of vertices \\<open>i, j\\<close>.\n\\<close>"], ["", "lemma canonical_D:\n  assumes\n    \"cycle_free_up_to m k n\" \"canonical_subs n {0..k} m\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"\n  shows \"D m i j k = m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = m i j", "using assms"], ["proof (prove)\nusing this:\n  cycle_free_up_to m k n\n  canonical_subs n {0..k} m\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. D m i j k = m i j", "apply -"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> D m i j k = m i j", "apply (rule D_eqI2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> cycle_free_up_to m k ?n5\n 2. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> i \\<le> ?n5\n 3. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> j \\<le> ?n5\n 4. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> k \\<le> ?n5\n 5. \\<And>y.\n       \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m;\n        i \\<le> n; j \\<le> n; k \\<le> n;\n        y \\<in> {len m i j xs |xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 i \\<notin> set xs \\<and>\n                 j \\<notin> set xs \\<and> distinct xs}\\<rbrakk>\n       \\<Longrightarrow> m i j \\<le> y\n 6. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m i j\n                      \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}", "apply (assumption | simp; fail)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m;\n        i \\<le> n; j \\<le> n; k \\<le> n;\n        y \\<in> {len m i j xs |xs.\n                 set xs \\<subseteq> {0..k} \\<and>\n                 i \\<notin> set xs \\<and>\n                 j \\<notin> set xs \\<and> distinct xs}\\<rbrakk>\n       \\<Longrightarrow> m i j \\<le> y\n 2. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m i j\n                      \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n;\n     y_ \\<in> {len m i j xs |xs.\n               set xs \\<subseteq> {0..k} \\<and>\n               i \\<notin> set xs \\<and>\n               j \\<notin> set xs \\<and> distinct xs}\\<rbrakk>\n    \\<Longrightarrow> m i j \\<le> y_", "by (auto intro: canonical_subs_len)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> m i j\n                      \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k}}", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free_up_to m k n; canonical_subs n {0..k} m; i \\<le> n;\n     j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs.\n                         m i j = len m i j xs \\<and>\n                         set xs \\<subseteq> {0..k}", "by (rule exI[where x = \"[]\"]) auto"], ["", "theorem fw_subs_len:\n  \"(fw m n k) i j \\<le> len m i j xs\" if\n  \"cyc_free_subs n {0..k} m\" \"k \\<le> n\" \"i \\<le> n\" \"j \\<le> n\" \"set xs \\<subseteq> I\" \"I \\<subseteq> {0..k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> len m i j xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> len m i j xs", "from fw_correct[OF that(1,2)]"], ["proof (chain)\npicking this:\n  canonical_subs n {0..k} (fw m n k) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n k) i i xs)", "have \"canonical_subs n {0..k} (fw m n k)\""], ["proof (prove)\nusing this:\n  canonical_subs n {0..k} (fw m n k) \\<and>\n  (\\<forall>i xs.\n      i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n      (0::'a) \\<le> len (fw m n k) i i xs)\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..k} (fw m n k)", ".."], ["proof (state)\nthis:\n  canonical_subs n {0..k} (fw m n k)\n\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> len m i j xs", "from canonical_subs_len[OF this, of i j xs] that"], ["proof (chain)\npicking this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..k};\n   {0..k} \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j \\<le> len (fw m n k) i j xs\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set xs \\<subseteq> I\n  I \\<subseteq> {0..k}", "have \"fw m n k i j \\<le> len (fw m n k) i j xs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..k};\n   {0..k} \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j \\<le> len (fw m n k) i j xs\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set xs \\<subseteq> I\n  I \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> len (fw m n k) i j xs", "by auto"], ["proof (state)\nthis:\n  fw m n k i j \\<le> len (fw m n k) i j xs\n\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> len m i j xs", "also"], ["proof (state)\nthis:\n  fw m n k i j \\<le> len (fw m n k) i j xs\n\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> len m i j xs", "from that(2-)"], ["proof (chain)\npicking this:\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set xs \\<subseteq> I\n  I \\<subseteq> {0..k}", "have \"\\<dots> \\<le> len m i j xs\""], ["proof (prove)\nusing this:\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set xs \\<subseteq> I\n  I \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len (fw m n k) i j xs \\<le> len m i j xs", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n; set [] \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j [] \\<le> len m i j []\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..k}\\<rbrakk>\n                   \\<Longrightarrow> len (fw m n k) i j xs\n                                     \\<le> len m i j xs;\n        k \\<le> n; i \\<le> n; j \\<le> n; set (a # xs) \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j (a # xs)\n                         \\<le> len m i j (a # xs)", "case Nil"], ["proof (state)\nthis:\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> I\n  I \\<subseteq> {0..k}\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n; set [] \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j [] \\<le> len m i j []\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..k}\\<rbrakk>\n                   \\<Longrightarrow> len (fw m n k) i j xs\n                                     \\<le> len m i j xs;\n        k \\<le> n; i \\<le> n; j \\<le> n; set (a # xs) \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j (a # xs)\n                         \\<le> len m i j (a # xs)", "then"], ["proof (chain)\npicking this:\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> I\n  I \\<subseteq> {0..k}", "show ?case"], ["proof (prove)\nusing this:\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> I\n  I \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len (fw m n k) i j [] \\<le> len m i j []", "by (auto intro: fw_mono)"], ["proof (state)\nthis:\n  len (fw m n k) i j [] \\<le> len m i j []\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..k}\\<rbrakk>\n                   \\<Longrightarrow> len (fw m n k) i j xs\n                                     \\<le> len m i j xs;\n        k \\<le> n; i \\<le> n; j \\<le> n; set (a # xs) \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j (a # xs)\n                         \\<le> len m i j (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..k}\\<rbrakk>\n                   \\<Longrightarrow> len (fw m n k) i j xs\n                                     \\<le> len m i j xs;\n        k \\<le> n; i \\<le> n; j \\<le> n; set (a # xs) \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j (a # xs)\n                         \\<le> len m i j (a # xs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>k \\<le> n; ?i1 \\<le> n; j \\<le> n; set xs \\<subseteq> I;\n   I \\<subseteq> {0..k}\\<rbrakk>\n  \\<Longrightarrow> len (fw m n k) ?i1 j xs \\<le> len m ?i1 j xs\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..k}\\<rbrakk>\n                   \\<Longrightarrow> len (fw m n k) i j xs\n                                     \\<le> len m i j xs;\n        k \\<le> n; i \\<le> n; j \\<le> n; set (a # xs) \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j (a # xs)\n                         \\<le> len m i j (a # xs)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>k \\<le> n; ?i1 \\<le> n; j \\<le> n; set xs \\<subseteq> I;\n   I \\<subseteq> {0..k}\\<rbrakk>\n  \\<Longrightarrow> len (fw m n k) ?i1 j xs \\<le> len m ?i1 j xs\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..k}", "have \"len (fw m n k) x j xs \\<le> len m x j xs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>k \\<le> n; ?i1 \\<le> n; j \\<le> n; set xs \\<subseteq> I;\n   I \\<subseteq> {0..k}\\<rbrakk>\n  \\<Longrightarrow> len (fw m n k) ?i1 j xs \\<le> len m ?i1 j xs\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. len (fw m n k) x j xs \\<le> len m x j xs", "by auto"], ["proof (state)\nthis:\n  len (fw m n k) x j xs \\<le> len m x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..k}\\<rbrakk>\n                   \\<Longrightarrow> len (fw m n k) i j xs\n                                     \\<le> len m i j xs;\n        k \\<le> n; i \\<le> n; j \\<le> n; set (a # xs) \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j (a # xs)\n                         \\<le> len m i j (a # xs)", "moreover"], ["proof (state)\nthis:\n  len (fw m n k) x j xs \\<le> len m x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..k}\\<rbrakk>\n                   \\<Longrightarrow> len (fw m n k) i j xs\n                                     \\<le> len m i j xs;\n        k \\<le> n; i \\<le> n; j \\<le> n; set (a # xs) \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j (a # xs)\n                         \\<le> len m i j (a # xs)", "from Cons.prems"], ["proof (chain)\npicking this:\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..k}", "have \"fw m n k i x \\<le> m i x\""], ["proof (prove)\nusing this:\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> I\n  I \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. fw m n k i x \\<le> m i x", "by - (rule fw_mono; auto)"], ["proof (state)\nthis:\n  fw m n k i x \\<le> m i x\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>k \\<le> n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> I; I \\<subseteq> {0..k}\\<rbrakk>\n                   \\<Longrightarrow> len (fw m n k) i j xs\n                                     \\<le> len m i j xs;\n        k \\<le> n; i \\<le> n; j \\<le> n; set (a # xs) \\<subseteq> I;\n        I \\<subseteq> {0..k}\\<rbrakk>\n       \\<Longrightarrow> len (fw m n k) i j (a # xs)\n                         \\<le> len m i j (a # xs)", "ultimately"], ["proof (chain)\npicking this:\n  len (fw m n k) x j xs \\<le> len m x j xs\n  fw m n k i x \\<le> m i x", "show ?case"], ["proof (prove)\nusing this:\n  len (fw m n k) x j xs \\<le> len m x j xs\n  fw m n k i x \\<le> m i x\n\ngoal (1 subgoal):\n 1. len (fw m n k) i j (x # xs) \\<le> len m i j (x # xs)", "by (auto simp: add_mono)"], ["proof (state)\nthis:\n  len (fw m n k) i j (x # xs) \\<le> len m i j (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  len (fw m n k) i j xs \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> len m i j xs", "finally"], ["proof (chain)\npicking this:\n  fw m n k i j \\<le> len m i j xs", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n k i j \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> len m i j xs", "by auto"], ["proof (state)\nthis:\n  fw m n k i j \\<le> len m i j xs\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  This shows that the value calculated by \\<open>fwi\\<close> for a pair \\<open>i, j\\<close> always corresponds to the length\n  of an actual path between \\<open>i\\<close> and \\<open>j\\<close>.\n\\<close>"], ["", "lemma fwi_len':\n  \"\\<exists> xs. set xs \\<subseteq> {k} \\<and> fwi m n k i' j' i j = len m i j xs\" if\n  \"m k k \\<ge> 0\" \"i' \\<le> n\" \"j' \\<le> n\" \"k \\<le> n\" \"i \\<le> i'\" \"j \\<le> j'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xs.\n       set xs \\<subseteq> {k} \\<and> fwi m n k i' j' i j = len m i j xs", "using that"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> m k k\n  i' \\<le> n\n  j' \\<le> n\n  k \\<le> n\n  i \\<le> i'\n  j \\<le> j'\n\ngoal (1 subgoal):\n 1. \\<exists>xs.\n       set xs \\<subseteq> {k} \\<and> fwi m n k i' j' i j = len m i j xs", "apply (subst fwi_step'; auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> m k k; i' \\<le> n; j' \\<le> n; k \\<le> n;\n     i \\<le> i'; j \\<le> j'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs.\n                         set xs \\<subseteq> {k} \\<and>\n                         min (m i j) (m i k + m k j) = len m i j xs", "unfolding min_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> m k k; i' \\<le> n; j' \\<le> n; k \\<le> n;\n     i \\<le> i'; j \\<le> j'\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs.\n                         set xs \\<subseteq> {k} \\<and>\n                         (if m i j \\<le> m i k + m k j then m i j\n                          else m i k + m k j) =\n                         len m i j xs", "apply (clarsimp; safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(0::'a) \\<le> m k k; i' \\<le> n; j' \\<le> n; k \\<le> n;\n     i \\<le> i'; j \\<le> j'; m i j \\<le> m i k + m k j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs.\n                         set xs \\<subseteq> {k} \\<and> m i j = len m i j xs\n 2. \\<lbrakk>(0::'a) \\<le> m k k; i' \\<le> n; j' \\<le> n; k \\<le> n;\n     i \\<le> i'; j \\<le> j'; \\<not> m i j \\<le> m i k + m k j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs.\n                         set xs \\<subseteq> {k} \\<and>\n                         m i k + m k j = len m i j xs", "apply (rule exI[where x = \"[]\"]; auto; fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<le> m k k; i' \\<le> n; j' \\<le> n; k \\<le> n;\n     i \\<le> i'; j \\<le> j'; \\<not> m i j \\<le> m i k + m k j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>xs.\n                         set xs \\<subseteq> {k} \\<and>\n                         m i k + m k j = len m i j xs", "by (rule exI[where x = \"[k]\"]; auto; fail)"], ["", "text \\<open>\n  The same result for \\<open>fw\\<close>.\n\\<close>"], ["", "lemma fw_len:\n  \"\\<exists> xs. set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs\" if\n  \"cyc_free_subs n {0..k} m\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xs.\n       set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs", "using that"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>xs.\n       set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs", "proof (induction k arbitrary: i j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..0} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..0} \\<and>\n                            fw m n 0 i j = len m i j xs\n 2. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "case 0"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..0} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..0} \\<and>\n                            fw m n 0 i j = len m i j xs\n 2. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "from cyc_free_subs_diag[OF this(1)]"], ["proof (chain)\npicking this:\n  ?i \\<le> n \\<Longrightarrow> (0::'a) \\<le> m ?i ?i", "have \"m 0 0 \\<ge> 0\""], ["proof (prove)\nusing this:\n  ?i \\<le> n \\<Longrightarrow> (0::'a) \\<le> m ?i ?i\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> m 0 0", "by blast"], ["proof (state)\nthis:\n  (0::'a) \\<le> m 0 0\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..0} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..0} \\<and>\n                            fw m n 0 i j = len m i j xs\n 2. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "with 0"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  (0::'a) \\<le> m 0 0", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..0} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n  (0::'a) \\<le> m 0 0\n\ngoal (1 subgoal):\n 1. \\<exists>xs.\n       set xs \\<subseteq> {0..0} \\<and> fw m n 0 i j = len m i j xs", "by (auto intro: fwi_len')"], ["proof (state)\nthis:\n  \\<exists>xs. set xs \\<subseteq> {0..0} \\<and> fw m n 0 i j = len m i j xs\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>i xs.\n              i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n              (0::'a) \\<le> len m i i xs;\n   ?i1 \\<le> n; ?j1 \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xs.\n                       set xs \\<subseteq> {0..k} \\<and>\n                       fw m n k ?i1 ?j1 = len m ?i1 ?j1 xs\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "have IH: \"\\<exists> xs. set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs\" if \"i \\<le> n\" \"j \\<le> n\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xs.\n       set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs", "apply (rule Suc.IH)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs\n 2. i \\<le> n\n 3. j \\<le> n\n 4. k \\<le> n", "using Suc.prems that"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  ia__ \\<le> n\n  ja__ \\<le> n\n  Suc k \\<le> n\n  i \\<le> n\n  j \\<le> n\n\ngoal (4 subgoals):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs\n 2. i \\<le> n\n 3. j \\<le> n\n 4. k \\<le> n", "by force+"], ["proof (state)\nthis:\n  \\<lbrakk>?i1 \\<le> n; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xs.\n                       set xs \\<subseteq> {0..k} \\<and>\n                       fw m n k ?i1 ?j1 = len m ?i1 ?j1 xs\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "from fw_cyc_free_subs[OF Suc.prems(1,4)]"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n (Suc k)) i i xs", "have \"cyc_free_subs n {0..Suc k} (fw m n (Suc k))\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n (Suc k)) i i xs\n\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n       (0::'a) \\<le> len (fw m n (Suc k)) i i xs", "."], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n (Suc k)) i i xs\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "then"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n (Suc k)) i i xs", "have \"0 \\<le> fw m n k (Suc k) (Suc k)\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n (Suc k)) i i xs\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fw m n k (Suc k) (Suc k)", "using IH Suc.prems(1, 4)"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n (Suc k)) i i xs\n  \\<lbrakk>?i1 \\<le> n; ?j1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xs.\n                       set xs \\<subseteq> {0..k} \\<and>\n                       fw m n k ?i1 ?j1 = len m ?i1 ?j1 xs\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fw m n k (Suc k) (Suc k)", "by fastforce"], ["proof (state)\nthis:\n  (0::'a) \\<le> fw m n k (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "with Suc.prems fwi_len'[of \"fw m n k\" \"Suc k\" n n n i j]"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  \\<lbrakk>(0::'a) \\<le> fw m n k (Suc k) (Suc k); n \\<le> n; n \\<le> n;\n   Suc k \\<le> n; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xs.\n                       set xs \\<subseteq> {Suc k} \\<and>\n                       fwi (fw m n k) n (Suc k) n n i j =\n                       len (fw m n k) i j xs\n  (0::'a) \\<le> fw m n k (Suc k) (Suc k)", "obtain xs where\n    \"set xs \\<subseteq> {Suc k}\" \"fwi (fw m n k) n (Suc k) n n i j = len (fw m n k) i j xs\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  \\<lbrakk>(0::'a) \\<le> fw m n k (Suc k) (Suc k); n \\<le> n; n \\<le> n;\n   Suc k \\<le> n; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xs.\n                       set xs \\<subseteq> {Suc k} \\<and>\n                       fwi (fw m n k) n (Suc k) n n i j =\n                       len (fw m n k) i j xs\n  (0::'a) \\<le> fw m n k (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>set xs \\<subseteq> {Suc k};\n         fwi (fw m n k) n (Suc k) n n i j = len (fw m n k) i j xs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set xs \\<subseteq> {Suc k}\n  fwi (fw m n k) n (Suc k) n n i j = len (fw m n k) i j xs\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "moreover"], ["proof (state)\nthis:\n  set xs \\<subseteq> {Suc k}\n  fwi (fw m n k) n (Suc k) n n i j = len (fw m n k) i j xs\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "from Suc.prems(2-) this(1)"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set xs \\<subseteq> {Suc k}", "have\n    \"\\<exists> ys. set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set xs \\<subseteq> {Suc k}\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> {0..Suc k} \\<and>\n       len (fw m n k) i j xs = len m i j ys", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set [] \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n                    set xs \\<subseteq> {Suc k}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set (a # xs) \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j (a # xs) = len m i j ys", "case Nil"], ["proof (state)\nthis:\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set [] \\<subseteq> {Suc k}\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set [] \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n                    set xs \\<subseteq> {Suc k}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set (a # xs) \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j (a # xs) = len m i j ys", "then"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set [] \\<subseteq> {Suc k}", "show ?case"], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set [] \\<subseteq> {Suc k}\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> {0..Suc k} \\<and>\n       len (fw m n k) i j [] = len m i j ys", "by (force dest: IH)"], ["proof (state)\nthis:\n  \\<exists>ys.\n     set ys \\<subseteq> {0..Suc k} \\<and>\n     len (fw m n k) i j [] = len m i j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n                    set xs \\<subseteq> {Suc k}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set (a # xs) \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j (a # xs) = len m i j ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n                    set xs \\<subseteq> {Suc k}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set (a # xs) \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j (a # xs) = len m i j ys", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>?i1 \\<le> n; j \\<le> n; Suc k \\<le> n;\n   set xs \\<subseteq> {Suc k}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> {0..Suc k} \\<and>\n                       len (fw m n k) ?i1 j xs = len m ?i1 j ys\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set (x # xs) \\<subseteq> {Suc k}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n                    set xs \\<subseteq> {Suc k}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set (a # xs) \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j (a # xs) = len m i j ys", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i1 \\<le> n; j \\<le> n; Suc k \\<le> n;\n   set xs \\<subseteq> {Suc k}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> {0..Suc k} \\<and>\n                       len (fw m n k) ?i1 j xs = len m ?i1 j ys\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set (x # xs) \\<subseteq> {Suc k}", "obtain ys where ys:\n      \"set ys \\<subseteq> {0..Suc k}\" \"len (fw m n k) x j xs = len m x j ys\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?i1 \\<le> n; j \\<le> n; Suc k \\<le> n;\n   set xs \\<subseteq> {Suc k}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> {0..Suc k} \\<and>\n                       len (fw m n k) ?i1 j xs = len m ?i1 j ys\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set (x # xs) \\<subseteq> {Suc k}\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>set ys \\<subseteq> {0..Suc k};\n         len (fw m n k) x j xs = len m x j ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..Suc k}\n  len (fw m n k) x j xs = len m x j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n                    set xs \\<subseteq> {Suc k}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set (a # xs) \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j (a # xs) = len m i j ys", "moreover"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..Suc k}\n  len (fw m n k) x j xs = len m x j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n                    set xs \\<subseteq> {Suc k}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set (a # xs) \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j (a # xs) = len m i j ys", "from IH[of i x] Cons.prems"], ["proof (chain)\npicking this:\n  \\<lbrakk>i \\<le> n; x \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xs.\n                       set xs \\<subseteq> {0..k} \\<and>\n                       fw m n k i x = len m i x xs\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set (x # xs) \\<subseteq> {Suc k}", "obtain zs where\n      \"set zs \\<subseteq> {0..k}\" \"fw m n k i x = len m i x zs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> n; x \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>xs.\n                       set xs \\<subseteq> {0..k} \\<and>\n                       fw m n k i x = len m i x xs\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  set (x # xs) \\<subseteq> {Suc k}\n\ngoal (1 subgoal):\n 1. (\\<And>zs.\n        \\<lbrakk>set zs \\<subseteq> {0..k};\n         fw m n k i x = len m i x zs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set zs \\<subseteq> {0..k}\n  fw m n k i x = len m i x zs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n                    set xs \\<subseteq> {Suc k}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set (a # xs) \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j (a # xs) = len m i j ys", "ultimately"], ["proof (chain)\npicking this:\n  set ys \\<subseteq> {0..Suc k}\n  len (fw m n k) x j xs = len m x j ys\n  set zs \\<subseteq> {0..k}\n  fw m n k i x = len m i x zs", "have\n      \"set (zs @ x # ys) \\<subseteq> {0..Suc k}\" \"len (fw m n k) i j (x # xs) = len m i j (zs @ x # ys)\""], ["proof (prove)\nusing this:\n  set ys \\<subseteq> {0..Suc k}\n  len (fw m n k) x j xs = len m x j ys\n  set zs \\<subseteq> {0..k}\n  fw m n k i x = len m i x zs\n\ngoal (1 subgoal):\n 1. set (zs @ x # ys) \\<subseteq> {0..Suc k} &&&\n    len (fw m n k) i j (x # xs) = len m i j (zs @ x # ys)", "using \\<open>Suc k \\<le> n\\<close> \\<open>set (x # xs) \\<subseteq> _\\<close>"], ["proof (prove)\nusing this:\n  set ys \\<subseteq> {0..Suc k}\n  len (fw m n k) x j xs = len m x j ys\n  set zs \\<subseteq> {0..k}\n  fw m n k i x = len m i x zs\n  Suc k \\<le> n\n  set (x # xs) \\<subseteq> {Suc k}\n\ngoal (1 subgoal):\n 1. set (zs @ x # ys) \\<subseteq> {0..Suc k} &&&\n    len (fw m n k) i j (x # xs) = len m i j (zs @ x # ys)", "by (auto simp: len_comp)"], ["proof (state)\nthis:\n  set (zs @ x # ys) \\<subseteq> {0..Suc k}\n  len (fw m n k) i j (x # xs) = len m i j (zs @ x # ys)\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>i \\<le> n; j \\<le> n; Suc k \\<le> n;\n                    set xs \\<subseteq> {Suc k}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..Suc k} \\<and> len (fw m n k) i j xs = len m i j ys;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n;\n        set (a # xs) \\<subseteq> {Suc k}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..Suc k} \\<and>\n                            len (fw m n k) i j (a # xs) = len m i j ys", "then"], ["proof (chain)\npicking this:\n  set (zs @ x # ys) \\<subseteq> {0..Suc k}\n  len (fw m n k) i j (x # xs) = len m i j (zs @ x # ys)", "show ?case"], ["proof (prove)\nusing this:\n  set (zs @ x # ys) \\<subseteq> {0..Suc k}\n  len (fw m n k) i j (x # xs) = len m i j (zs @ x # ys)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> {0..Suc k} \\<and>\n       len (fw m n k) i j (x # xs) = len m i j ys", "by (intro exI conjI)"], ["proof (state)\nthis:\n  \\<exists>ys.\n     set ys \\<subseteq> {0..Suc k} \\<and>\n     len (fw m n k) i j (x # xs) = len m i j ys\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys.\n     set ys \\<subseteq> {0..Suc k} \\<and>\n     len (fw m n k) i j xs = len m i j ys\n\ngoal (1 subgoal):\n 1. \\<And>k i j.\n       \\<lbrakk>\\<And>i j.\n                   \\<lbrakk>\\<forall>i xs.\n                               i \\<le> n \\<and>\n                               set xs \\<subseteq> {0..k} \\<longrightarrow>\n                               (0::'a) \\<le> len m i i xs;\n                    i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>xs.\n  set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs;\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..Suc k} \\<longrightarrow>\n           (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xs.\n                            set xs \\<subseteq> {0..Suc k} \\<and>\n                            fw m n (Suc k) i j = len m i j xs", "ultimately"], ["proof (chain)\npicking this:\n  set xs \\<subseteq> {Suc k}\n  fwi (fw m n k) n (Suc k) n n i j = len (fw m n k) i j xs\n  \\<exists>ys.\n     set ys \\<subseteq> {0..Suc k} \\<and>\n     len (fw m n k) i j xs = len m i j ys", "show ?case"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {Suc k}\n  fwi (fw m n k) n (Suc k) n n i j = len (fw m n k) i j xs\n  \\<exists>ys.\n     set ys \\<subseteq> {0..Suc k} \\<and>\n     len (fw m n k) i j xs = len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>xs.\n       set xs \\<subseteq> {0..Suc k} \\<and>\n       fw m n (Suc k) i j = len m i j xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>xs.\n     set xs \\<subseteq> {0..Suc k} \\<and> fw m n (Suc k) i j = len m i j xs\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Intermezzo: Equivalent Characterizations of Cycle-Freeness\\<close>"], ["", "subsection \\<open>Shortening Negative Cycles\\<close>"], ["", "lemma remove_cycles_neg_cycles_aux:\n  fixes i xs ys\n  defines \"xs' \\<equiv> i # ys\"\n  assumes \"i \\<notin> set ys\"\n  assumes \"i \\<in> set xs\"\n  assumes \"xs = as @ concat (map ((#) i) xss) @ xs'\"\n  assumes \"len m i j ys > len m i j xs\"\n  shows \"\\<exists> ys. set ys \\<subseteq> set xs \\<and> len m i i ys < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)", "using assms"], ["proof (prove)\nusing this:\n  xs' \\<equiv> i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) xss) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)", "proof (induction xss arbitrary: xs as)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs as.\n       \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) []) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < (0::'a)\n 2. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a);\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < (0::'a)", "case Nil"], ["proof (state)\nthis:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (2 subgoals):\n 1. \\<And>xs as.\n       \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) []) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < (0::'a)\n 2. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a);\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < (0::'a)", "with Nil"], ["proof (chain)\npicking this:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys", "show ?case"], ["proof (prove)\nusing this:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)", "proof (cases \"len m i i as \\<ge> 0\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "case 1"], ["proof (state)\nthis:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  (0::'a) \\<le> len m i i as\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "from this(4,6) len_decomp[of xs as i ys m i j]"], ["proof (chain)\npicking this:\n  xs = as @ concat (map ((#) i) []) @ xs'\n  xs' = i # ys\n  xs = as @ i # ys \\<Longrightarrow>\n  len m i j xs = len m i i as + len m i j ys", "have \"len m i j xs = len m i i as + len m i j ys\""], ["proof (prove)\nusing this:\n  xs = as @ concat (map ((#) i) []) @ xs'\n  xs' = i # ys\n  xs = as @ i # ys \\<Longrightarrow>\n  len m i j xs = len m i i as + len m i j ys\n\ngoal (1 subgoal):\n 1. len m i j xs = len m i i as + len m i j ys", "by simp"], ["proof (state)\nthis:\n  len m i j xs = len m i i as + len m i j ys\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "with 1(11)"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> len m i i as\n  len m i j xs = len m i i as + len m i j ys", "have \"len m i j ys \\<le> len m i j xs\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> len m i i as\n  len m i j xs = len m i i as + len m i j ys\n\ngoal (1 subgoal):\n 1. len m i j ys \\<le> len m i j xs", "using add_mono"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> len m i i as\n  len m i j xs = len m i i as + len m i j ys\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len m i j ys \\<le> len m i j xs", "by fastforce"], ["proof (state)\nthis:\n  len m i j ys \\<le> len m i j xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  len m i j ys \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)", "using Nil(5)"], ["proof (prove)\nusing this:\n  len m i j ys \\<le> len m i j xs\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "case 2"], ["proof (state)\nthis:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  \\<not> (0::'a) \\<le> len m i i as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) []) @ xs'; len m i j xs < len m i j ys;\n     \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "thus ?case"], ["proof (prove)\nusing this:\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) []) @ xs'\n  len m i j xs < len m i j ys\n  \\<not> (0::'a) \\<le> len m i i as\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a);\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a);\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < (0::'a)", "case (Cons zs xss)"], ["proof (state)\nthis:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs1;\n   ?xs1 = ?as1 @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs1 < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs1 \\<and>\n                       len m i i ys < (0::'a)\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a);\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < (0::'a)", "let ?xs = \"zs @ concat (map ((#) i) xss) @ xs'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                    xs = as @ concat (map ((#) i) xss) @ xs';\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a);\n        xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n        xs = as @ concat (map ((#) i) (a # xss)) @ xs';\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m i i ys < (0::'a)", "from Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs1;\n   ?xs1 = ?as1 @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs1 < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs1 \\<and>\n                       len m i i ys < (0::'a)\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs1;\n   ?xs1 = ?as1 @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs1 < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs1 \\<and>\n                       len m i i ys < (0::'a)\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)", "proof (cases \"len m i i as \\<ge> 0\", goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "case 1"], ["proof (state)\nthis:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs1;\n   ?xs1 = ?as1 @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs1 < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs1 \\<and>\n                       len m i i ys < (0::'a)\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys\n  (0::'a) \\<le> len m i i as\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "from this(5,7) len_decomp add_mono"], ["proof (chain)\npicking this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  (0::'a) \\<le> len m i i as\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d", "have \"len m i j ?xs \\<le> len m i j xs\""], ["proof (prove)\nusing this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  (0::'a) \\<le> len m i i as\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len m i j (zs @ concat (map ((#) i) xss) @ xs') \\<le> len m i j xs", "by fastforce"], ["proof (state)\nthis:\n  len m i j (zs @ concat (map ((#) i) xss) @ xs') \\<le> len m i j xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "hence 4:\"len m i j ?xs < len m i j ys\""], ["proof (prove)\nusing this:\n  len m i j (zs @ concat (map ((#) i) xss) @ xs') \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. len m i j (zs @ concat (map ((#) i) xss) @ xs') < len m i j ys", "using 1(6)"], ["proof (prove)\nusing this:\n  len m i j (zs @ concat (map ((#) i) xss) @ xs') \\<le> len m i j xs\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. len m i j (zs @ concat (map ((#) i) xss) @ xs') < len m i j ys", "by simp"], ["proof (state)\nthis:\n  len m i j (zs @ concat (map ((#) i) xss) @ xs') < len m i j ys\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "have 2:\"i \\<in> set ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> set (zs @ concat (map ((#) i) xss) @ xs')", "using Cons(2)"], ["proof (prove)\nusing this:\n  xs' = i # ys\n\ngoal (1 subgoal):\n 1. i \\<in> set (zs @ concat (map ((#) i) xss) @ xs')", "by auto"], ["proof (state)\nthis:\n  i \\<in> set (zs @ concat (map ((#) i) xss) @ xs')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "have \"set ?xs \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs", "using Cons(5)"], ["proof (prove)\nusing this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n\ngoal (1 subgoal):\n 1. set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "moreover"], ["proof (state)\nthis:\n  set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "from Cons(1)[OF 1(2,3) 2 _ 4]"], ["proof (chain)\npicking this:\n  zs @ concat (map ((#) i) xss) @ xs' =\n  ?as1 @ concat (map ((#) i) xss) @ xs' \\<Longrightarrow>\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < (0::'a)", "have \"\\<exists>ys. set ys \\<subseteq> set ?xs \\<and> len m i i ys < 0\""], ["proof (prove)\nusing this:\n  zs @ concat (map ((#) i) xss) @ xs' =\n  ?as1 @ concat (map ((#) i) xss) @ xs' \\<Longrightarrow>\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n       len m i i ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < (0::'a)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)\n 2. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  set (zs @ concat (map ((#) i) xss) @ xs') \\<subseteq> set xs\n  \\<exists>ys.\n     set ys \\<subseteq> set (zs @ concat (map ((#) i) xss) @ xs') \\<and>\n     len m i i ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "case 2"], ["proof (state)\nthis:\n  \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set ?xs1;\n   ?xs1 = ?as1 @ concat (map ((#) i) xss) @ xs';\n   len m i j ?xs1 < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs1 \\<and>\n                       len m i i ys < (0::'a)\n  xs' = i # ys\n  i \\<notin> set ys\n  i \\<in> set xs\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  len m i j xs < len m i j ys\n  \\<not> (0::'a) \\<le> len m i i as\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>xs as.\n                \\<lbrakk>xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n                 xs = as @ concat (map ((#) i) xss) @ xs';\n                 len m i j xs < len m i j ys\\<rbrakk>\n                \\<Longrightarrow> \\<exists>ys.\n                                     set ys \\<subseteq> set xs \\<and>\n                                     len m i i ys < (0::'a);\n     xs' = i # ys; i \\<notin> set ys; i \\<in> set xs;\n     xs = as @ concat (map ((#) i) (zs # xss)) @ xs';\n     len m i j xs < len m i j ys; \\<not> (0::'a) \\<le> len m i i as\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> set xs \\<and>\n                         len m i i ys < (0::'a)", "from this(5,7)"], ["proof (chain)\npicking this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  \\<not> (0::'a) \\<le> len m i i as", "show ?case"], ["proof (prove)\nusing this:\n  xs = as @ concat (map ((#) i) (zs # xss)) @ xs'\n  \\<not> (0::'a) \\<le> len m i i as\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m i i ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_lt_neutral: \"a + b < b \\<Longrightarrow> a < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + b < b \\<Longrightarrow> a < (0::'a)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < b; \\<not> a < (0::'a)\\<rbrakk> \\<Longrightarrow> False", "assume \"a + b < b\" \"\\<not> a < 0\""], ["proof (state)\nthis:\n  a + b < b\n  \\<not> a < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < b; \\<not> a < (0::'a)\\<rbrakk> \\<Longrightarrow> False", "hence \"a \\<ge> 0\""], ["proof (prove)\nusing this:\n  a + b < b\n  \\<not> a < (0::'a)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> a", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < b; \\<not> a < (0::'a)\\<rbrakk> \\<Longrightarrow> False", "from add_mono[OF this, of b b] \\<open>a + b < b\\<close>"], ["proof (chain)\npicking this:\n  b \\<le> b \\<Longrightarrow> (0::'a) + b \\<le> a + b\n  a + b < b", "show False"], ["proof (prove)\nusing this:\n  b \\<le> b \\<Longrightarrow> (0::'a) + b \\<le> a + b\n  a + b < b\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_cycles_neg_cycles_aux':\n  fixes j xs ys\n  assumes \"j \\<notin> set ys\"\n  assumes \"j \\<in> set xs\"\n  assumes \"xs = ys @ j # concat (map (\\<lambda> xs. xs @ [j]) xss) @ as\"\n  assumes \"len m i j ys > len m i j xs\"\n  shows \"\\<exists> ys. set ys \\<subseteq> set xs \\<and> len m j j ys < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "using assms"], ["proof (prove)\nusing this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "proof (induction xss arbitrary: xs as)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs as.\n       \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < (0::'a)\n 2. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a);\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < (0::'a)", "case Nil"], ["proof (state)\nthis:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n\ngoal (2 subgoals):\n 1. \\<And>xs as.\n       \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < (0::'a)\n 2. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a);\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < (0::'a)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "proof (cases \"len m j j as \\<ge> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "case True"], ["proof (state)\nthis:\n  (0::'a) \\<le> len m j j as\n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "from Nil(3) len_decomp[of xs ys j as m i j]"], ["proof (chain)\npicking this:\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  xs = ys @ j # as \\<Longrightarrow>\n  len m i j xs = len m i j ys + len m j j as", "have \"len m i j xs = len m i j ys + len m j j as\""], ["proof (prove)\nusing this:\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  xs = ys @ j # as \\<Longrightarrow>\n  len m i j xs = len m i j ys + len m j j as\n\ngoal (1 subgoal):\n 1. len m i j xs = len m i j ys + len m j j as", "by simp"], ["proof (state)\nthis:\n  len m i j xs = len m i j ys + len m j j as\n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "with True"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> len m j j as\n  len m i j xs = len m i j ys + len m j j as", "have \"len m i j ys \\<le> len m i j xs\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> len m j j as\n  len m i j xs = len m i j ys + len m j j as\n\ngoal (1 subgoal):\n 1. len m i j ys \\<le> len m i j xs", "using add_mono"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> len m j j as\n  len m i j xs = len m i j ys + len m j j as\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len m i j ys \\<le> len m i j xs", "by fastforce"], ["proof (state)\nthis:\n  len m i j ys \\<le> len m i j xs\n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "with Nil"], ["proof (chain)\npicking this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n  len m i j ys \\<le> len m i j xs", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n  len m i j ys \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "case False"], ["proof (state)\nthis:\n  \\<not> (0::'a) \\<le> len m j j as\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> len m j j as \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "with Nil"], ["proof (chain)\npicking this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n  \\<not> (0::'a) \\<le> len m j j as", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) []) @ as\n  len m i j xs < len m i j ys\n  \\<not> (0::'a) \\<le> len m j j as\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a);\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a);\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < (0::'a)", "case (Cons zs xss)"], ["proof (state)\nthis:\n  \\<lbrakk>j \\<notin> set ys; j \\<in> set ?xs1;\n   ?xs1 = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ ?as1;\n   len m i j ?xs1 < len m i j ys\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ys.\n                       set ys \\<subseteq> set ?xs1 \\<and>\n                       len m j j ys < (0::'a)\n  j \\<notin> set ys\n  j \\<in> set xs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a);\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < (0::'a)", "let ?xs = \"ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a);\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < (0::'a)", "let ?t = \"concat (map (\\<lambda>xs. xs @ [j]) xss) @ as\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xss xs as.\n       \\<lbrakk>\\<And>xs as.\n                   \\<lbrakk>j \\<notin> set ys; j \\<in> set xs;\n                    xs =\n                    ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as;\n                    len m i j xs < len m i j ys\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a);\n        j \\<notin> set ys; j \\<in> set xs;\n        xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (a # xss)) @ as;\n        len m i j xs < len m i j ys\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> set xs \\<and>\n                            len m j j ys < (0::'a)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "proof (cases \"len m i j ?xs \\<le> len m i j xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "case True"], ["proof (state)\nthis:\n  len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<le> len m i j xs\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "hence 4:\"len m i j ?xs < len m i j ys\""], ["proof (prove)\nusing this:\n  len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    < len m i j ys", "using Cons(5)"], ["proof (prove)\nusing this:\n  len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<le> len m i j xs\n  len m i j xs < len m i j ys\n\ngoal (1 subgoal):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    < len m i j ys", "by simp"], ["proof (state)\nthis:\n  len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m i j ys\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "have 2:\"j \\<in> set ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<in> set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "using Cons(2)"], ["proof (prove)\nusing this:\n  j \\<notin> set ys\n\ngoal (1 subgoal):\n 1. j \\<in> set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by auto"], ["proof (state)\nthis:\n  j \\<in> set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "have \"set ?xs \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<subseteq> set xs", "using Cons(4)"], ["proof (prove)\nusing this:\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n\ngoal (1 subgoal):\n 1. set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<subseteq> set xs\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "moreover"], ["proof (state)\nthis:\n  set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<subseteq> set xs\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "from Cons(1)[OF Cons(2) 2 _ 4]"], ["proof (chain)\npicking this:\n  ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as =\n  ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ ?as1 \\<Longrightarrow>\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < (0::'a)", "have \"\\<exists>ys. set ys \\<subseteq> set ?xs \\<and> len m j j ys < 0\""], ["proof (prove)\nusing this:\n  ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as =\n  ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ ?as1 \\<Longrightarrow>\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>ysa.\n       set ysa\n       \\<subseteq> set (ys @\n                        j #\n                        concat (map (\\<lambda>xs. xs @ [j]) xss) @\n                        as) \\<and>\n       len m j j ysa < (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < (0::'a)\n\ngoal (2 subgoals):\n 1. len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n 2. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<subseteq> set xs\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  set (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  \\<subseteq> set xs\n  \\<exists>ysa.\n     set ysa\n     \\<subseteq> set (ys @\n                      j #\n                      concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) \\<and>\n     len m j j ysa < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "case False"], ["proof (state)\nthis:\n  \\<not> len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n         \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "hence \"len m i j xs < len m i j ?xs\""], ["proof (prove)\nusing this:\n  \\<not> len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n         \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. len m i j xs\n    < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by auto"], ["proof (state)\nthis:\n  len m i j xs\n  < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "from this len_decomp Cons(4) add_mono"], ["proof (chain)\npicking this:\n  len m i j xs\n  < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d", "have \"len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as) < len m j j ?t\""], ["proof (prove)\nusing this:\n  len m i j xs\n  < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as)\n    < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "using False local.leI"], ["proof (prove)\nusing this:\n  len m i j xs\n  < len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  ?xs = ?ys @ ?y # ?zs \\<Longrightarrow>\n  len ?m ?x ?z ?xs = len ?m ?x ?y ?ys + len ?m ?y ?z ?zs\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  \\<not> len m i j (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n         \\<le> len m i j xs\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as)\n    < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by fastforce"], ["proof (state)\nthis:\n  len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "hence \"len m j j (zs @ j # ?t) < len m j j ?t\""], ["proof (prove)\nusing this:\n  len m j j (concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by simp"], ["proof (state)\nthis:\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "with len_decomp[of \"zs @ j # ?t\" zs j ?t m j j]"], ["proof (chain)\npicking this:\n  zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as =\n  zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as \\<Longrightarrow>\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) =\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "have \"len m j j zs + len m j j ?t < len m j j ?t\""], ["proof (prove)\nusing this:\n  zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as =\n  zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as \\<Longrightarrow>\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as) =\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  len m j j (zs @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n    < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)", "by auto"], ["proof (state)\nthis:\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "hence \"len m j j zs < 0\""], ["proof (prove)\nusing this:\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n\ngoal (1 subgoal):\n 1. len m j j zs < (0::'a)", "using add_lt_neutral"], ["proof (prove)\nusing this:\n  len m j j zs + len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  < len m j j (concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n  ?a + ?b < ?b \\<Longrightarrow> ?a < (0::'a)\n\ngoal (1 subgoal):\n 1. len m j j zs < (0::'a)", "by auto"], ["proof (state)\nthis:\n  len m j j zs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j\n            (ys @ j # concat (map (\\<lambda>xs. xs @ [j]) xss) @ as)\n           \\<le> len m i j xs \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  len m j j zs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "using Cons.prems(3)"], ["proof (prove)\nusing this:\n  len m j j zs < (0::'a)\n  xs = ys @ j # concat (map (\\<lambda>xs. xs @ [j]) (zs # xss)) @ as\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m j j ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma add_le_impl: \"a + b < a + c \\<Longrightarrow> b < c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a + b < a + c \\<Longrightarrow> b < c", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < a + c; \\<not> b < c\\<rbrakk> \\<Longrightarrow> False", "assume \"a + b < a + c\" \"\\<not> b < c\""], ["proof (state)\nthis:\n  a + b < a + c\n  \\<not> b < c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < a + c; \\<not> b < c\\<rbrakk> \\<Longrightarrow> False", "hence \"b \\<ge> c\""], ["proof (prove)\nusing this:\n  a + b < a + c\n  \\<not> b < c\n\ngoal (1 subgoal):\n 1. c \\<le> b", "by auto"], ["proof (state)\nthis:\n  c \\<le> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a + b < a + c; \\<not> b < c\\<rbrakk> \\<Longrightarrow> False", "from add_mono[OF _ this, of a a] \\<open>a + b < a + c\\<close>"], ["proof (chain)\npicking this:\n  a \\<le> a \\<Longrightarrow> a + c \\<le> a + b\n  a + b < a + c", "show False"], ["proof (prove)\nusing this:\n  a \\<le> a \\<Longrightarrow> a + c \\<le> a + b\n  a + b < a + c\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma start_remove_neg_cycles:\n  \"len m i j (start_remove xs k []) > len m i j xs \\<Longrightarrow> \\<exists> ys. set ys \\<subseteq> set xs \\<and> len m k k ys < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "let ?xs = \"start_remove xs k []\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "assume len_lt:\"len m i j ?xs > len m i j xs\""], ["proof (state)\nthis:\n  len m i j xs < len m i j (start_remove xs k [])\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "hence \"k \\<in> set xs\""], ["proof (prove)\nusing this:\n  len m i j xs < len m i j (start_remove xs k [])\n\ngoal (1 subgoal):\n 1. k \\<in> set xs", "using start_remove_id"], ["proof (prove)\nusing this:\n  len m i j xs < len m i j (start_remove xs k [])\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  start_remove ?xs ?x ?ys = rev ?ys @ ?xs\n\ngoal (1 subgoal):\n 1. k \\<in> set xs", "by fastforce"], ["proof (state)\nthis:\n  k \\<in> set xs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "from start_remove_decomp[OF this, of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>as bs.\n     xs = as @ k # bs \\<and>\n     start_remove xs k [] = rev [] @ as @ remove_cycles bs k [k]", "obtain as bs where as_bs:\n    \"xs = as @ k # bs\" \"?xs = as @ remove_cycles bs k [k]\""], ["proof (prove)\nusing this:\n  \\<exists>as bs.\n     xs = as @ k # bs \\<and>\n     start_remove xs k [] = rev [] @ as @ remove_cycles bs k [k]\n\ngoal (1 subgoal):\n 1. (\\<And>as bs.\n        \\<lbrakk>xs = as @ k # bs;\n         start_remove xs k [] = as @ remove_cycles bs k [k]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  xs = as @ k # bs\n  start_remove xs k [] = as @ remove_cycles bs k [k]\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "let ?xs' = \"remove_cycles bs k [k]\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "have \"k \\<in> set bs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> set bs", "using as_bs len_lt remove_cycles_id"], ["proof (prove)\nusing this:\n  xs = as @ k # bs\n  start_remove xs k [] = as @ remove_cycles bs k [k]\n  len m i j xs < len m i j (start_remove xs k [])\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  remove_cycles ?xs ?x ?ys = rev ?ys @ ?xs\n\ngoal (1 subgoal):\n 1. k \\<in> set bs", "by fastforce"], ["proof (state)\nthis:\n  k \\<in> set bs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "then"], ["proof (chain)\npicking this:\n  k \\<in> set bs", "obtain ys where ys: \"?xs = as @ k # ys\" \"?xs' = k # ys\" \"k \\<notin> set ys\""], ["proof (prove)\nusing this:\n  k \\<in> set bs\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>start_remove xs k [] = as @ k # ys;\n         remove_cycles bs k [k] = k # ys; k \\<notin> set ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using as_bs(2) remove_cycles_begins_with[OF \\<open>k \\<in> set bs\\<close>]"], ["proof (prove)\nusing this:\n  k \\<in> set bs\n  start_remove xs k [] = as @ remove_cycles bs k [k]\n  \\<exists>zs. remove_cycles bs k ?ys = k # zs \\<and> k \\<notin> set zs\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>start_remove xs k [] = as @ k # ys;\n         remove_cycles bs k [k] = k # ys; k \\<notin> set ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  start_remove xs k [] = as @ k # ys\n  remove_cycles bs k [k] = k # ys\n  k \\<notin> set ys\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "have len_lt': \"len m k j bs < len m k j ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m k j bs < len m k j ys", "using len_decomp[OF as_bs(1), of m i j] len_decomp[OF ys(1), of m i j] len_lt add_le_impl"], ["proof (prove)\nusing this:\n  len m i j xs = len m i k as + len m k j bs\n  len m i j (start_remove xs k []) = len m i k as + len m k j ys\n  len m i j xs < len m i j (start_remove xs k [])\n  ?a + ?b < ?a + ?c \\<Longrightarrow> ?b < ?c\n\ngoal (1 subgoal):\n 1. len m k j bs < len m k j ys", "by metis"], ["proof (state)\nthis:\n  len m k j bs < len m k j ys\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "from remove_cycles_cycles[OF \\<open>k \\<in> set bs\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>xxs as.\n     as @ concat (map ((#) k) xxs) @ remove_cycles bs k ?ys = bs \\<and>\n     k \\<notin> set as", "obtain xss as'\n  where \"as' @ concat (map ((#) k) xss) @ ?xs' = bs\""], ["proof (prove)\nusing this:\n  \\<exists>xxs as.\n     as @ concat (map ((#) k) xxs) @ remove_cycles bs k ?ys = bs \\<and>\n     k \\<notin> set as\n\ngoal (1 subgoal):\n 1. (\\<And>as' xss.\n        as' @ concat (map ((#) k) xss) @ remove_cycles bs k [k] =\n        bs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  as' @ concat (map ((#) k) xss) @ remove_cycles bs k [k] = bs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "hence \"as' @ concat (map ((#) k) xss) @ k # ys = bs\""], ["proof (prove)\nusing this:\n  as' @ concat (map ((#) k) xss) @ remove_cycles bs k [k] = bs\n\ngoal (1 subgoal):\n 1. as' @ concat (map ((#) k) xss) @ k # ys = bs", "using ys(2)"], ["proof (prove)\nusing this:\n  as' @ concat (map ((#) k) xss) @ remove_cycles bs k [k] = bs\n  remove_cycles bs k [k] = k # ys\n\ngoal (1 subgoal):\n 1. as' @ concat (map ((#) k) xss) @ k # ys = bs", "by simp"], ["proof (state)\nthis:\n  as' @ concat (map ((#) k) xss) @ k # ys = bs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (start_remove xs k []) \\<Longrightarrow>\n    \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "from remove_cycles_neg_cycles_aux[OF \\<open>k \\<notin> set ys\\<close> \\<open>k \\<in> set bs\\<close> this[symmetric] len_lt']"], ["proof (chain)\npicking this:\n  \\<exists>ys. set ys \\<subseteq> set bs \\<and> len m k k ys < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys. set ys \\<subseteq> set bs \\<and> len m k k ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "using as_bs(1)"], ["proof (prove)\nusing this:\n  \\<exists>ys. set ys \\<subseteq> set bs \\<and> len m k k ys < (0::'a)\n  xs = as @ k # bs\n\ngoal (1 subgoal):\n 1. \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m k k ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma remove_all_cycles_neg_cycles:\n  \"len m i j (remove_all_cycles ys xs) > len m i j xs\n  \\<Longrightarrow> \\<exists> ys k. set ys \\<subseteq> set xs \\<and> k \\<in> set xs \\<and> len m k k ys < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "proof (induction ys arbitrary: xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs.\n       len m i j xs < len m i j (remove_all_cycles [] xs) \\<Longrightarrow>\n       \\<exists>ys k.\n          set ys \\<subseteq> set xs \\<and>\n          k \\<in> set xs \\<and> len m k k ys < (0::'a)\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < (0::'a);\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < (0::'a)", "case Nil"], ["proof (state)\nthis:\n  len m i j xs < len m i j (remove_all_cycles [] xs)\n\ngoal (2 subgoals):\n 1. \\<And>xs.\n       len m i j xs < len m i j (remove_all_cycles [] xs) \\<Longrightarrow>\n       \\<exists>ys k.\n          set ys \\<subseteq> set xs \\<and>\n          k \\<in> set xs \\<and> len m k k ys < (0::'a)\n 2. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < (0::'a);\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < (0::'a)", "thus ?case"], ["proof (prove)\nusing this:\n  len m i j xs < len m i j (remove_all_cycles [] xs)\n\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < (0::'a);\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < (0::'a);\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < (0::'a)", "case (Cons y ys)"], ["proof (state)\nthis:\n  len m i j ?xs1 < len m i j (remove_all_cycles ys ?xs1) \\<Longrightarrow>\n  \\<exists>ys k.\n     set ys \\<subseteq> set ?xs1 \\<and>\n     k \\<in> set ?xs1 \\<and> len m k k ys < (0::'a)\n  len m i j xs < len m i j (remove_all_cycles (y # ys) xs)\n\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < (0::'a);\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < (0::'a)", "let ?xs = \"start_remove xs y []\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a ys xs.\n       \\<lbrakk>\\<And>xs.\n                   len m i j xs\n                   < len m i j (remove_all_cycles ys xs) \\<Longrightarrow>\n                   \\<exists>ys k.\n                      set ys \\<subseteq> set xs \\<and>\n                      k \\<in> set xs \\<and> len m k k ys < (0::'a);\n        len m i j xs < len m i j (remove_all_cycles (a # ys) xs)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys k.\n                            set ys \\<subseteq> set xs \\<and>\n                            k \\<in> set xs \\<and> len m k k ys < (0::'a)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "proof (cases \"len m i j xs < len m i j ?xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)\n 2. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "case True"], ["proof (state)\nthis:\n  len m i j xs < len m i j (start_remove xs y [])\n\ngoal (2 subgoals):\n 1. len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)\n 2. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "with start_remove_id"], ["proof (chain)\npicking this:\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  start_remove ?xs ?x ?ys = rev ?ys @ ?xs\n  len m i j xs < len m i j (start_remove xs y [])", "have \"y \\<in> set xs\""], ["proof (prove)\nusing this:\n  ?x \\<notin> set ?xs \\<Longrightarrow>\n  start_remove ?xs ?x ?ys = rev ?ys @ ?xs\n  len m i j xs < len m i j (start_remove xs y [])\n\ngoal (1 subgoal):\n 1. y \\<in> set xs", "by fastforce"], ["proof (state)\nthis:\n  y \\<in> set xs\n\ngoal (2 subgoals):\n 1. len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)\n 2. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "with start_remove_neg_cycles[OF True]"], ["proof (chain)\npicking this:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m y y ys < (0::'a)\n  y \\<in> set xs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys. set ys \\<subseteq> set xs \\<and> len m y y ys < (0::'a)\n  y \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "case False"], ["proof (state)\nthis:\n  \\<not> len m i j xs < len m i j (start_remove xs y [])\n\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "with Cons(2)"], ["proof (chain)\npicking this:\n  len m i j xs < len m i j (remove_all_cycles (y # ys) xs)\n  \\<not> len m i j xs < len m i j (start_remove xs y [])", "have \"len m i j ?xs < len m i j (remove_all_cycles (y # ys) xs)\""], ["proof (prove)\nusing this:\n  len m i j xs < len m i j (remove_all_cycles (y # ys) xs)\n  \\<not> len m i j xs < len m i j (start_remove xs y [])\n\ngoal (1 subgoal):\n 1. len m i j (start_remove xs y [])\n    < len m i j (remove_all_cycles (y # ys) xs)", "by auto"], ["proof (state)\nthis:\n  len m i j (start_remove xs y [])\n  < len m i j (remove_all_cycles (y # ys) xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "hence \"len m i j ?xs < len m i j (remove_all_cycles ys ?xs)\""], ["proof (prove)\nusing this:\n  len m i j (start_remove xs y [])\n  < len m i j (remove_all_cycles (y # ys) xs)\n\ngoal (1 subgoal):\n 1. len m i j (start_remove xs y [])\n    < len m i j (remove_all_cycles ys (start_remove xs y []))", "by auto"], ["proof (state)\nthis:\n  len m i j (start_remove xs y [])\n  < len m i j (remove_all_cycles ys (start_remove xs y []))\n\ngoal (1 subgoal):\n 1. \\<not> len m i j xs < len m i j (start_remove xs y []) \\<Longrightarrow>\n    \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "from Cons(1)[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set (start_remove xs y []) \\<and>\n     k \\<in> set (start_remove xs y []) \\<and> len m k k ys < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set (start_remove xs y []) \\<and>\n     k \\<in> set (start_remove xs y []) \\<and> len m k k ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "using start_remove_subs[of xs y \"[]\"]"], ["proof (prove)\nusing this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set (start_remove xs y []) \\<and>\n     k \\<in> set (start_remove xs y []) \\<and> len m k k ys < (0::'a)\n  set (start_remove xs y []) \\<subseteq> set xs \\<union> set []\n\ngoal (1 subgoal):\n 1. \\<exists>ys k.\n       set ys \\<subseteq> set xs \\<and>\n       k \\<in> set xs \\<and> len m k k ys < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma concat_map_cons_rev:\n  \"rev (concat (map ((#) j) xss)) = concat (map (\\<lambda> xs. xs @ [j]) (rev (map rev xss)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rev (concat (map ((#) j) xss)) =\n    concat (map (\\<lambda>xs. xs @ [j]) (rev (map rev xss)))", "by (induction xss) auto"], ["", "lemma negative_cycle_dest: \"len m i j (rem_cycles i j xs) > len m i j xs\n       \\<Longrightarrow> \\<exists> i' ys. len m i' i' ys < 0 \\<and> set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "let ?xsij = \"rem_cycles i j xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "let ?xsj  = \"remove_all_rev j (remove_all_cycles xs xs)\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "let ?xs   = \"remove_all_cycles xs xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "assume len_lt: \"len m i j ?xsij > len m i j xs\""], ["proof (state)\nthis:\n  len m i j xs < len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof (cases \"len m i j ?xsij \\<le> len m i j ?xsj\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i j (rem_cycles i j xs)\n    \\<le> len m i j\n           (remove_all_rev j (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case True"], ["proof (state)\nthis:\n  len m i j (rem_cycles i j xs)\n  \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (2 subgoals):\n 1. len m i j (rem_cycles i j xs)\n    \\<le> len m i j\n           (remove_all_rev j (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence len_lt: \"len m i j ?xsj > len m i j xs\""], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs)\n  \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_rev j (remove_all_cycles xs xs))", "using len_lt"], ["proof (prove)\nusing this:\n  len m i j (rem_cycles i j xs)\n  \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  len m i j xs < len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_rev j (remove_all_cycles xs xs))", "by simp"], ["proof (state)\nthis:\n  len m i j xs < len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (2 subgoals):\n 1. len m i j (rem_cycles i j xs)\n    \\<le> len m i j\n           (remove_all_rev j (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof (cases \"len m i j ?xsj \\<le> len m i j ?xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i j (remove_all_rev j (remove_all_cycles xs xs))\n    \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case True"], ["proof (state)\nthis:\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  \\<le> len m i j (remove_all_cycles xs xs)\n\ngoal (2 subgoals):\n 1. len m i j (remove_all_rev j (remove_all_cycles xs xs))\n    \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence \"len m i j ?xs > len m i j xs\""], ["proof (prove)\nusing this:\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  \\<le> len m i j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_cycles xs xs)", "using len_lt"], ["proof (prove)\nusing this:\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  \\<le> len m i j (remove_all_cycles xs xs)\n  len m i j xs < len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (remove_all_cycles xs xs)", "by simp"], ["proof (state)\nthis:\n  len m i j xs < len m i j (remove_all_cycles xs xs)\n\ngoal (2 subgoals):\n 1. len m i j (remove_all_rev j (remove_all_cycles xs xs))\n    \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with remove_all_cycles_neg_cycles[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < (0::'a)\n  len m i j xs < len m i j (remove_all_cycles xs xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys k.\n     set ys \\<subseteq> set xs \\<and>\n     k \\<in> set xs \\<and> len m k k ys < (0::'a)\n  len m i j xs < len m i j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case False"], ["proof (state)\nthis:\n  \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n         \\<le> len m i j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "then"], ["proof (chain)\npicking this:\n  \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n         \\<le> len m i j (remove_all_cycles xs xs)", "have len_lt': \"len m i j ?xsj > len m i j ?xs\""], ["proof (prove)\nusing this:\n  \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n         \\<le> len m i j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. len m i j (remove_all_cycles xs xs)\n    < len m i j (remove_all_rev j (remove_all_cycles xs xs))", "by simp"], ["proof (state)\nthis:\n  len m i j (remove_all_cycles xs xs)\n  < len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n           \\<le> len m i j (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof (cases \"j \\<in> set ?xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. j \\<notin> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case False"], ["proof (state)\nthis:\n  j \\<notin> set (remove_all_cycles xs xs)\n\ngoal (2 subgoals):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. j \\<notin> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j \\<notin> set (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "using len_lt'"], ["proof (prove)\nusing this:\n  j \\<notin> set (remove_all_cycles xs xs)\n  len m i j (remove_all_cycles xs xs)\n  < len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by (simp add: remove_all_rev_def)"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case True"], ["proof (state)\nthis:\n  j \\<in> set (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_all_rev_removes[of j]"], ["proof (chain)\npicking this:\n  j \\<notin> set (remove_all_rev j ?xs)", "have 1: \"j \\<notin> set ?xsj\""], ["proof (prove)\nusing this:\n  j \\<notin> set (remove_all_rev j ?xs)\n\ngoal (1 subgoal):\n 1. j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))", "by simp"], ["proof (state)\nthis:\n  j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from True"], ["proof (chain)\npicking this:\n  j \\<in> set (remove_all_cycles xs xs)", "have \"j \\<in> set (rev ?xs)\""], ["proof (prove)\nusing this:\n  j \\<in> set (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. j \\<in> set (rev (remove_all_cycles xs xs))", "by auto"], ["proof (state)\nthis:\n  j \\<in> set (rev (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_cycles_cycles[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>xxs as.\n     as @\n     concat (map ((#) j) xxs) @\n     remove_cycles (rev (remove_all_cycles xs xs)) j ?ys =\n     rev (remove_all_cycles xs xs) \\<and>\n     j \\<notin> set as", "obtain xss as where as:\n          \"as @ concat (map ((#) j) xss) @ remove_cycles (rev ?xs) j [] = rev ?xs\" \"j \\<notin> set as\""], ["proof (prove)\nusing this:\n  \\<exists>xxs as.\n     as @\n     concat (map ((#) j) xxs) @\n     remove_cycles (rev (remove_all_cycles xs xs)) j ?ys =\n     rev (remove_all_cycles xs xs) \\<and>\n     j \\<notin> set as\n\ngoal (1 subgoal):\n 1. (\\<And>as xss.\n        \\<lbrakk>as @\n                 concat (map ((#) j) xss) @\n                 remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n                 rev (remove_all_cycles xs xs);\n         j \\<notin> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  as @\n  concat (map ((#) j) xss) @\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  rev (remove_all_cycles xs xs)\n  j \\<notin> set as\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from True"], ["proof (chain)\npicking this:\n  j \\<in> set (remove_all_cycles xs xs)", "have \"?xsj = rev (tl (remove_cycles (rev ?xs) j []))\""], ["proof (prove)\nusing this:\n  j \\<in> set (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. remove_all_rev j (remove_all_cycles xs xs) =\n    rev (tl (remove_cycles (rev (remove_all_cycles xs xs)) j []))", "by (simp add: remove_all_rev_def)"], ["proof (state)\nthis:\n  remove_all_rev j (remove_all_cycles xs xs) =\n  rev (tl (remove_cycles (rev (remove_all_cycles xs xs)) j []))\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with remove_cycles_begins_with[OF \\<open>j \\<in> set (rev ?xs)\\<close>, of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>zs.\n     remove_cycles (rev (remove_all_cycles xs xs)) j [] = j # zs \\<and>\n     j \\<notin> set zs\n  remove_all_rev j (remove_all_cycles xs xs) =\n  rev (tl (remove_cycles (rev (remove_all_cycles xs xs)) j []))", "have \"remove_cycles (rev ?xs) j [] = j # rev ?xsj\" \"j \\<notin> set ?xsj\""], ["proof (prove)\nusing this:\n  \\<exists>zs.\n     remove_cycles (rev (remove_all_cycles xs xs)) j [] = j # zs \\<and>\n     j \\<notin> set zs\n  remove_all_rev j (remove_all_cycles xs xs) =\n  rev (tl (remove_cycles (rev (remove_all_cycles xs xs)) j []))\n\ngoal (1 subgoal):\n 1. remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n    j # rev (remove_all_rev j (remove_all_cycles xs xs)) &&&\n    j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))", "by auto"], ["proof (state)\nthis:\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  j # rev (remove_all_rev j (remove_all_cycles xs xs))\n  j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with as(1)"], ["proof (chain)\npicking this:\n  as @\n  concat (map ((#) j) xss) @\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  rev (remove_all_cycles xs xs)\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  j # rev (remove_all_rev j (remove_all_cycles xs xs))\n  j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))", "have xss: \"as @ concat (map ((#) j) xss) @ j # rev ?xsj = rev ?xs\""], ["proof (prove)\nusing this:\n  as @\n  concat (map ((#) j) xss) @\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  rev (remove_all_cycles xs xs)\n  remove_cycles (rev (remove_all_cycles xs xs)) j [] =\n  j # rev (remove_all_rev j (remove_all_cycles xs xs))\n  j \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. as @\n    concat (map ((#) j) xss) @\n    j # rev (remove_all_rev j (remove_all_cycles xs xs)) =\n    rev (remove_all_cycles xs xs)", "by simp"], ["proof (state)\nthis:\n  as @\n  concat (map ((#) j) xss) @\n  j # rev (remove_all_rev j (remove_all_cycles xs xs)) =\n  rev (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence \"rev (as @ concat (map ((#) j) xss) @ j # rev ?xsj) = ?xs\""], ["proof (prove)\nusing this:\n  as @\n  concat (map ((#) j) xss) @\n  j # rev (remove_all_rev j (remove_all_cycles xs xs)) =\n  rev (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. rev (as @\n         concat (map ((#) j) xss) @\n         j # rev (remove_all_rev j (remove_all_cycles xs xs))) =\n    remove_all_cycles xs xs", "by simp"], ["proof (state)\nthis:\n  rev (as @\n       concat (map ((#) j) xss) @\n       j # rev (remove_all_rev j (remove_all_cycles xs xs))) =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence \"?xsj @ j # rev (concat (map ((#) j) xss)) @ rev as = ?xs\""], ["proof (prove)\nusing this:\n  rev (as @\n       concat (map ((#) j) xss) @\n       j # rev (remove_all_rev j (remove_all_cycles xs xs))) =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. remove_all_rev j (remove_all_cycles xs xs) @\n    j # rev (concat (map ((#) j) xss)) @ rev as =\n    remove_all_cycles xs xs", "by simp"], ["proof (state)\nthis:\n  remove_all_rev j (remove_all_cycles xs xs) @\n  j # rev (concat (map ((#) j) xss)) @ rev as =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence \"?xsj @ j # concat (map (\\<lambda> xs. xs @ [j]) (rev (map rev xss))) @ rev as = ?xs\""], ["proof (prove)\nusing this:\n  remove_all_rev j (remove_all_cycles xs xs) @\n  j # rev (concat (map ((#) j) xss)) @ rev as =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. remove_all_rev j (remove_all_cycles xs xs) @\n    j # concat (map (\\<lambda>xs. xs @ [j]) (rev (map rev xss))) @ rev as =\n    remove_all_cycles xs xs", "by (simp add: concat_map_cons_rev)"], ["proof (state)\nthis:\n  remove_all_rev j (remove_all_cycles xs xs) @\n  j # concat (map (\\<lambda>xs. xs @ [j]) (rev (map rev xss))) @ rev as =\n  remove_all_cycles xs xs\n\ngoal (1 subgoal):\n 1. j \\<in> set (remove_all_cycles xs xs) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_cycles_neg_cycles_aux'[OF 1 True this[symmetric] len_lt']"], ["proof (chain)\npicking this:\n  \\<exists>ys.\n     set ys \\<subseteq> set (remove_all_cycles xs xs) \\<and>\n     len m j j ys < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys.\n     set ys \\<subseteq> set (remove_all_cycles xs xs) \\<and>\n     len m j j ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "using remove_all_cycles_subs"], ["proof (prove)\nusing this:\n  \\<exists>ys.\n     set ys \\<subseteq> set (remove_all_cycles xs xs) \\<and>\n     len m j j ys < (0::'a)\n  set (remove_all_cycles ?xs ?ys) \\<subseteq> set ?ys\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case False"], ["proof (state)\nthis:\n  \\<not> len m i j (rem_cycles i j xs)\n         \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "hence len_lt': \"len m i j ?xsij > len m i j ?xsj\""], ["proof (prove)\nusing this:\n  \\<not> len m i j (rem_cycles i j xs)\n         \\<le> len m i j (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. len m i j (remove_all_rev j (remove_all_cycles xs xs))\n    < len m i j (rem_cycles i j xs)", "by simp"], ["proof (state)\nthis:\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  < len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. \\<not> len m i j (rem_cycles i j xs)\n           \\<le> len m i j\n                  (remove_all_rev j\n                    (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "proof (cases \"i \\<in> set ?xsj\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. i \\<notin> set (remove_all_rev j\n                     (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case False"], ["proof (state)\nthis:\n  i \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (2 subgoals):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n 2. i \\<notin> set (remove_all_rev j\n                     (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "thus ?thesis"], ["proof (prove)\nusing this:\n  i \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "using len_lt'"], ["proof (prove)\nusing this:\n  i \\<notin> set (remove_all_rev j (remove_all_cycles xs xs))\n  len m i j (remove_all_rev j (remove_all_cycles xs xs))\n  < len m i j (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "case True"], ["proof (state)\nthis:\n  i \\<in> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_all_removes[of i]"], ["proof (chain)\npicking this:\n  i \\<notin> set (remove_all i ?xs)", "have 1: \"i \\<notin> set ?xsij\""], ["proof (prove)\nusing this:\n  i \\<notin> set (remove_all i ?xs)\n\ngoal (1 subgoal):\n 1. i \\<notin> set (rem_cycles i j xs)", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  i \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_cycles_cycles[OF True]"], ["proof (chain)\npicking this:\n  \\<exists>xxs as.\n     as @\n     concat (map ((#) i) xxs) @\n     remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i ?ys =\n     remove_all_rev j (remove_all_cycles xs xs) \\<and>\n     i \\<notin> set as", "obtain xss as where as:\n      \"as @ concat (map ((#) i) xss) @ remove_cycles ?xsj i [] = ?xsj\" \"i \\<notin> set as\""], ["proof (prove)\nusing this:\n  \\<exists>xxs as.\n     as @\n     concat (map ((#) i) xxs) @\n     remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i ?ys =\n     remove_all_rev j (remove_all_cycles xs xs) \\<and>\n     i \\<notin> set as\n\ngoal (1 subgoal):\n 1. (\\<And>as xss.\n        \\<lbrakk>as @\n                 concat (map ((#) i) xss) @\n                 remove_cycles (remove_all_rev j (remove_all_cycles xs xs))\n                  i [] =\n                 remove_all_rev j (remove_all_cycles xs xs);\n         i \\<notin> set as\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  as @\n  concat (map ((#) i) xss) @\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  remove_all_rev j (remove_all_cycles xs xs)\n  i \\<notin> set as\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from True"], ["proof (chain)\npicking this:\n  i \\<in> set (remove_all_rev j (remove_all_cycles xs xs))", "have \"?xsij = tl (remove_cycles ?xsj i [])\""], ["proof (prove)\nusing this:\n  i \\<in> set (remove_all_rev j (remove_all_cycles xs xs))\n\ngoal (1 subgoal):\n 1. rem_cycles i j xs =\n    tl (remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [])", "by (simp add: remove_all_def)"], ["proof (state)\nthis:\n  rem_cycles i j xs =\n  tl (remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [])\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with remove_cycles_begins_with[OF True, of \"[]\"]"], ["proof (chain)\npicking this:\n  \\<exists>zs.\n     remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n     i # zs \\<and>\n     i \\<notin> set zs\n  rem_cycles i j xs =\n  tl (remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [])", "have \"remove_cycles ?xsj i [] = i # ?xsij\" \"i \\<notin> set ?xsij\""], ["proof (prove)\nusing this:\n  \\<exists>zs.\n     remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n     i # zs \\<and>\n     i \\<notin> set zs\n  rem_cycles i j xs =\n  tl (remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [])\n\ngoal (1 subgoal):\n 1. remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n    i # rem_cycles i j xs &&&\n    i \\<notin> set (rem_cycles i j xs)", "by auto"], ["proof (state)\nthis:\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  i # rem_cycles i j xs\n  i \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "with as(1)"], ["proof (chain)\npicking this:\n  as @\n  concat (map ((#) i) xss) @\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  remove_all_rev j (remove_all_cycles xs xs)\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  i # rem_cycles i j xs\n  i \\<notin> set (rem_cycles i j xs)", "have xss: \"as @ concat (map ((#) i) xss) @ i # ?xsij = ?xsj\""], ["proof (prove)\nusing this:\n  as @\n  concat (map ((#) i) xss) @\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  remove_all_rev j (remove_all_cycles xs xs)\n  remove_cycles (remove_all_rev j (remove_all_cycles xs xs)) i [] =\n  i # rem_cycles i j xs\n  i \\<notin> set (rem_cycles i j xs)\n\ngoal (1 subgoal):\n 1. as @ concat (map ((#) i) xss) @ i # rem_cycles i j xs =\n    remove_all_rev j (remove_all_cycles xs xs)", "by simp"], ["proof (state)\nthis:\n  as @ concat (map ((#) i) xss) @ i # rem_cycles i j xs =\n  remove_all_rev j (remove_all_cycles xs xs)\n\ngoal (1 subgoal):\n 1. i \\<in> set (remove_all_rev j\n                  (remove_all_cycles xs xs)) \\<Longrightarrow>\n    \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "from remove_cycles_neg_cycles_aux[OF 1 True this[symmetric] len_lt']"], ["proof (chain)\npicking this:\n  \\<exists>ys.\n     set ys\n     \\<subseteq> set (remove_all_rev j (remove_all_cycles xs xs)) \\<and>\n     len m i i ys < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>ys.\n     set ys\n     \\<subseteq> set (remove_all_rev j (remove_all_cycles xs xs)) \\<and>\n     len m i i ys < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "using remove_all_rev_subs remove_all_cycles_subs"], ["proof (prove)\nusing this:\n  \\<exists>ys.\n     set ys\n     \\<subseteq> set (remove_all_rev j (remove_all_cycles xs xs)) \\<and>\n     len m i i ys < (0::'a)\n  set (remove_all_rev ?x ?xs) \\<subseteq> set ?xs\n  set (remove_all_cycles ?xs ?ys) \\<subseteq> set ?ys\n\ngoal (1 subgoal):\n 1. \\<exists>i' ys.\n       len m i' i' ys < (0::'a) \\<and>\n       set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Cycle-Freeness\\<close>"], ["", "lemma cycle_free_alt_def:\n  \"cycle_free M n \\<longleftrightarrow> cycle_free_up_to M n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle_free M n = cycle_free_up_to M n n", "unfolding cycle_free_def cycle_free_up_to_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (\\<forall>j\\<le>n.\n            len M i j (rem_cycles i j xs) \\<le> len M i j xs) \\<and>\n        (0::'a) \\<le> len M i i xs) =\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (\\<forall>j\\<le>n.\n            len M i j (rem_cycles i j xs) \\<le> len M i j xs) \\<and>\n        (0::'a) \\<le> len M i i xs)", ".."], ["", "lemma negative_cycle_dest_diag:\n  \"\\<not> cycle_free_up_to m k n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> \\<exists> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<and> len m i i xs < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> cycle_free_up_to m k n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i xs.\n                         i \\<le> n \\<and>\n                         set xs \\<subseteq> {0..k} \\<and>\n                         len m i i xs < (0::'a)", "proof (auto simp: cycle_free_up_to_def, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k}; j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)\n 2. \\<And>i xs.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k};\n        \\<not> (0::'a) \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)", "case (1 i xs j)"], ["proof (state)\nthis:\n  k \\<le> n\n  i \\<le> n\n  set xs \\<subseteq> {0..k}\n  j \\<le> n\n  \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k}; j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)\n 2. \\<And>i xs.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k};\n        \\<not> (0::'a) \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)", "from this(5)"], ["proof (chain)\npicking this:\n  \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs", "have \"len m i j xs < len m i j (rem_cycles i j xs)\""], ["proof (prove)\nusing this:\n  \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\n\ngoal (1 subgoal):\n 1. len m i j xs < len m i j (rem_cycles i j xs)", "by auto"], ["proof (state)\nthis:\n  len m i j xs < len m i j (rem_cycles i j xs)\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k}; j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)\n 2. \\<And>i xs.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k};\n        \\<not> (0::'a) \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)", "from negative_cycle_dest[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)", "obtain i' ys\n  where *:\"len m i' i' ys < 0\" \"set ys \\<subseteq> set xs\" \"i' \\<in> set (i # j # xs)\""], ["proof (prove)\nusing this:\n  \\<exists>i' ys.\n     len m i' i' ys < (0::'a) \\<and>\n     set ys \\<subseteq> set xs \\<and> i' \\<in> set (i # j # xs)\n\ngoal (1 subgoal):\n 1. (\\<And>i' ys.\n        \\<lbrakk>len m i' i' ys < (0::'a); set ys \\<subseteq> set xs;\n         i' \\<in> set (i # j # xs)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  len m i' i' ys < (0::'a)\n  set ys \\<subseteq> set xs\n  i' \\<in> set (i # j # xs)\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k}; j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)\n 2. \\<And>i xs.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k};\n        \\<not> (0::'a) \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)", "from this(2,3) 1(1-4)"], ["proof (chain)\npicking this:\n  set ys \\<subseteq> set xs\n  i' \\<in> set (i # j # xs)\n  k \\<le> n\n  i \\<le> n\n  set xs \\<subseteq> {0..k}\n  j \\<le> n", "have \"set ys \\<subseteq> {0..k}\" \"i' \\<le> n\""], ["proof (prove)\nusing this:\n  set ys \\<subseteq> set xs\n  i' \\<in> set (i # j # xs)\n  k \\<le> n\n  i \\<le> n\n  set xs \\<subseteq> {0..k}\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> {0..k} &&& i' \\<le> n", "by auto"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..k}\n  i' \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>i xs j.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k}; j \\<le> n;\n        \\<not> len m i j (rem_cycles i j xs) \\<le> len m i j xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)\n 2. \\<And>i xs.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k};\n        \\<not> (0::'a) \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)", "with *"], ["proof (chain)\npicking this:\n  len m i' i' ys < (0::'a)\n  set ys \\<subseteq> set xs\n  i' \\<in> set (i # j # xs)\n  set ys \\<subseteq> {0..k}\n  i' \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  len m i' i' ys < (0::'a)\n  set ys \\<subseteq> set xs\n  i' \\<in> set (i # j # xs)\n  set ys \\<subseteq> {0..k}\n  i' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k};\n        \\<not> (0::'a) \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k};\n        \\<not> (0::'a) \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)", "case 2"], ["proof (state)\nthis:\n  k \\<le> n\n  i_ \\<le> n\n  set xs_ \\<subseteq> {0..k}\n  \\<not> (0::'a) \\<le> len m i_ i_ xs_\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>k \\<le> n; i \\<le> n; set xs \\<subseteq> {0..k};\n        \\<not> (0::'a) \\<le> len m i i xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i\\<le>n.\n                            \\<exists>xs.\n                               set xs \\<subseteq> {0..k} \\<and>\n                               len m i i xs < (0::'a)", "then"], ["proof (chain)\npicking this:\n  k \\<le> n\n  i_ \\<le> n\n  set xs_ \\<subseteq> {0..k}\n  \\<not> (0::'a) \\<le> len m i_ i_ xs_", "show ?case"], ["proof (prove)\nusing this:\n  k \\<le> n\n  i_ \\<le> n\n  set xs_ \\<subseteq> {0..k}\n  \\<not> (0::'a) \\<le> len m i_ i_ xs_\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n.\n       \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n.\n     \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> len m i i xs < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma negative_cycle_dest_diag':\n  \"\\<not> cycle_free m n \\<Longrightarrow> \\<exists> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<and> len m i i xs < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>i xs.\n       i \\<le> n \\<and>\n       set xs \\<subseteq> {0..n} \\<and> len m i i xs < (0::'a)", "by (rule negative_cycle_dest_diag) (auto simp: cycle_free_alt_def)"], ["", "abbreviation cyc_free :: \"'a mat \\<Rightarrow> nat \\<Rightarrow> bool\" where\n  \"cyc_free m n \\<equiv> \\<forall> i xs. i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow> len m i i xs \\<ge> 0\""], ["", "lemma cycle_free_diag_intro:\n  \"cyc_free m n \\<Longrightarrow> cycle_free m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs \\<Longrightarrow>\n    cycle_free m n", "using negative_cycle_dest_diag'"], ["proof (prove)\nusing this:\n  \\<not> cycle_free ?m ?n \\<Longrightarrow>\n  \\<exists>i xs.\n     i \\<le> ?n \\<and>\n     set xs \\<subseteq> {0..?n} \\<and> len ?m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs \\<Longrightarrow>\n    cycle_free m n", "by force"], ["", "lemma cycle_free_diag_equiv:\n  \"cyc_free m n \\<longleftrightarrow> cycle_free m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len m i i xs) =\n    cycle_free m n", "using negative_cycle_dest_diag'"], ["proof (prove)\nusing this:\n  \\<not> cycle_free ?m ?n \\<Longrightarrow>\n  \\<exists>i xs.\n     i \\<le> ?n \\<and>\n     set xs \\<subseteq> {0..?n} \\<and> len ?m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len m i i xs) =\n    cycle_free m n", "by (force simp: cycle_free_def)"], ["", "lemma cycle_free_diag_dest:\n  \"cycle_free m n \\<Longrightarrow> cyc_free m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle_free m n \\<Longrightarrow>\n    \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs", "using cycle_free_diag_equiv"], ["proof (prove)\nusing this:\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      (0::'a) \\<le> len ?m i i xs) =\n  cycle_free ?m ?n\n\ngoal (1 subgoal):\n 1. cycle_free m n \\<Longrightarrow>\n    \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs", "by blast"], ["", "lemma cycle_free_upto_diag_equiv:\n  \"cycle_free_up_to m k n \\<longleftrightarrow> cyc_free_subs n {0..k} m\" if \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle_free_up_to m k n =\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n        (0::'a) \\<le> len m i i xs)", "using negative_cycle_dest_diag[of m k n] that"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> cycle_free_up_to m k n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i xs.\n                       i \\<le> n \\<and>\n                       set xs \\<subseteq> {0..k} \\<and>\n                       len m i i xs < (0::'a)\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. cycle_free_up_to m k n =\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n        (0::'a) \\<le> len m i i xs)", "by (force simp: cycle_free_up_to_def)"], ["", "theorem fw_shortest_path_up_to:\n  \"D m i j k = fw m n k i j\" if \"cyc_free_subs n {0..k} m\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = fw m n k i j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. D m i j k = fw m n k i j", "from that(1,4)"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  k \\<le> n", "have cycle_free: \"cycle_free_up_to m k n\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. cycle_free_up_to m k n", "by (subst cycle_free_upto_diag_equiv)"], ["proof (state)\nthis:\n  cycle_free_up_to m k n\n\ngoal (1 subgoal):\n 1. D m i j k = fw m n k i j", "from that"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n", "have \"canonical_subs n {0..k} (fw m n k)\" \"cyc_free_subs n {0..k} (fw m n k)\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..k} (fw m n k) &&&\n    \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n       (0::'a) \\<le> len (fw m n k) i i xs", "by (auto dest: fw_correct)"], ["proof (state)\nthis:\n  canonical_subs n {0..k} (fw m n k)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len (fw m n k) i i xs\n\ngoal (1 subgoal):\n 1. D m i j k = fw m n k i j", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. D m i j k = fw m n k i j", "proof (rule D_eqI2[where n = n], safe, goal_cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. cycle_free_up_to m k n\n 2. i \\<le> n\n 3. j \\<le> n\n 4. k \\<le> n\n 5. \\<And>y xs.\n       \\<lbrakk>set xs \\<subseteq> {0..k}; i \\<notin> set xs;\n        j \\<notin> set xs; distinct xs\\<rbrakk>\n       \\<Longrightarrow> fw m n k i j \\<le> len m i j xs\n 6. \\<exists>xs.\n       fw m n k i j = len m i j xs \\<and> set xs \\<subseteq> {0..k}", "case (5 y xs)"], ["proof (state)\nthis:\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set xs\n  j \\<notin> set xs\n  distinct xs\n\ngoal (6 subgoals):\n 1. cycle_free_up_to m k n\n 2. i \\<le> n\n 3. j \\<le> n\n 4. k \\<le> n\n 5. \\<And>y xs.\n       \\<lbrakk>set xs \\<subseteq> {0..k}; i \\<notin> set xs;\n        j \\<notin> set xs; distinct xs\\<rbrakk>\n       \\<Longrightarrow> fw m n k i j \\<le> len m i j xs\n 6. \\<exists>xs.\n       fw m n k i j = len m i j xs \\<and> set xs \\<subseteq> {0..k}", "with that(1) that"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set xs\n  j \\<notin> set xs\n  distinct xs", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n  set xs \\<subseteq> {0..k}\n  i \\<notin> set xs\n  j \\<notin> set xs\n  distinct xs\n\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> len m i j xs", "by (auto intro: fw_subs_len)"], ["proof (state)\nthis:\n  fw m n k i j \\<le> len m i j xs\n\ngoal (5 subgoals):\n 1. cycle_free_up_to m k n\n 2. i \\<le> n\n 3. j \\<le> n\n 4. k \\<le> n\n 5. \\<exists>xs.\n       fw m n k i j = len m i j xs \\<and> set xs \\<subseteq> {0..k}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. cycle_free_up_to m k n\n 2. i \\<le> n\n 3. j \\<le> n\n 4. k \\<le> n\n 5. \\<exists>xs.\n       fw m n k i j = len m i j xs \\<and> set xs \\<subseteq> {0..k}", "case 6"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. cycle_free_up_to m k n\n 2. i \\<le> n\n 3. j \\<le> n\n 4. k \\<le> n\n 5. \\<exists>xs.\n       fw m n k i j = len m i j xs \\<and> set xs \\<subseteq> {0..k}", "from fw_len[OF that(1) that(2-)]"], ["proof (chain)\npicking this:\n  \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>xs. set xs \\<subseteq> {0..k} \\<and> fw m n k i j = len m i j xs\n\ngoal (1 subgoal):\n 1. \\<exists>xs.\n       fw m n k i j = len m i j xs \\<and> set xs \\<subseteq> {0..k}", "by blast"], ["proof (state)\nthis:\n  \\<exists>xs. fw m n k i j = len m i j xs \\<and> set xs \\<subseteq> {0..k}\n\ngoal (4 subgoals):\n 1. cycle_free_up_to m k n\n 2. i \\<le> n\n 3. j \\<le> n\n 4. k \\<le> n", "qed (rule that cycle_free)+"], ["proof (state)\nthis:\n  D m i j k = fw m n k i j\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We do not need to prove this because the definitions match.\\<close>"], ["", "lemma\n  \"cyc_free m n \\<longleftrightarrow> cyc_free_subs n {0..n} m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len m i i xs) =\n    (\\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len m i i xs)", ".."], ["", "lemma cycle_free_cycle_free_up_to:\n  \"cycle_free m n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> cycle_free_up_to m k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> cycle_free_up_to m k n", "unfolding cycle_free_def cycle_free_up_to_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                (\\<forall>j\\<le>n.\n                    len m i j (rem_cycles i j xs) \\<le> len m i j xs) \\<and>\n                (0::'a) \\<le> len m i i xs;\n     k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i xs.\n                         i \\<le> n \\<and>\n                         set xs \\<subseteq> {0..k} \\<longrightarrow>\n                         (\\<forall>j\\<le>n.\n                             len m i j (rem_cycles i j xs)\n                             \\<le> len m i j xs) \\<and>\n                         (0::'a) \\<le> len m i i xs", "by force"], ["", "lemma cycle_free_diag:\n  \"cycle_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> 0 \\<le> m i i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i i", "using cycle_free_up_to_diag[OF cycle_free_cycle_free_up_to]"], ["proof (prove)\nusing this:\n  \\<lbrakk>cycle_free ?m ?n; ?k \\<le> ?n; ?i \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> (0::'a) \\<le> ?m ?i ?i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n; i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i i", "by blast"], ["", "corollary fw_shortest_path:\n  \"cyc_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> D m i j k = fw m n k i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> D m i j k = fw m n k i j", "by (rule fw_shortest_path_up_to; force)"], ["", "corollary fw_shortest:\n  assumes \"cyc_free m n\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\"\n  shows \"fw m n n i j \\<le> fw m n n i k + fw m n n k j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n n i j \\<le> fw m n n i k + fw m n n k j", "using fw_canonical_subs[OF assms(1)] assms(2-)"], ["proof (prove)\nusing this:\n  n \\<le> n \\<Longrightarrow> canonical_subs n {0..n} (fw m n n)\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n n i j \\<le> fw m n n i k + fw m n n k j", "unfolding canonical_subs_def"], ["proof (prove)\nusing this:\n  n \\<le> n \\<Longrightarrow>\n  \\<forall>i j k.\n     i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> {0..n} \\<longrightarrow>\n     fw m n n i k \\<le> fw m n n i j + fw m n n j k\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n n i j \\<le> fw m n n i k + fw m n n k j", "by auto"], ["", "section \\<open>Result Under the Presence of Negative Cycles\\<close>"], ["", "text \\<open>\n  Under the presence of negative cycles, the \\fw will detect the situation by computing a negative\n  diagonal entry.\n\\<close>"], ["", "lemma not_cylce_free_dest: \"\\<not> cycle_free m n \\<Longrightarrow> \\<exists> k \\<le> n. \\<not> cycle_free_up_to m k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> cycle_free m n \\<Longrightarrow>\n    \\<exists>k\\<le>n. \\<not> cycle_free_up_to m k n", "by (auto simp add: cycle_free_def cycle_free_up_to_def)"], ["", "lemma D_not_diag_le:\n  \"(x :: 'a) \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..k} \\<and> i \\<notin> set xs \\<and> j \\<notin> set xs \\<and> distinct xs}\n  \\<Longrightarrow> D m i j k \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and>\n             j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n    D m i j k \\<le> x", "using Min_le[OF D_base_finite'']"], ["proof (prove)\nusing this:\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and> ?j1 \\<notin> set xs \\<and> distinct xs}\n  \\<le> ?x\n\ngoal (1 subgoal):\n 1. x \\<in> {len m i j xs |xs.\n             set xs \\<subseteq> {0..k} \\<and>\n             i \\<notin> set xs \\<and>\n             j \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n    D m i j k \\<le> x", "by (auto simp add: D_def)"], ["", "lemma D_not_diag_le': \"set xs \\<subseteq> {0..k} \\<Longrightarrow> i \\<notin> set xs \\<Longrightarrow> j \\<notin> set xs \\<Longrightarrow> distinct xs\n  \\<Longrightarrow> D m i j k \\<le> len m i j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set xs \\<subseteq> {0..k}; i \\<notin> set xs;\n     j \\<notin> set xs; distinct xs\\<rbrakk>\n    \\<Longrightarrow> D m i j k \\<le> len m i j xs", "using Min_le[OF D_base_finite'']"], ["proof (prove)\nusing this:\n  ?x \\<in> {len ?m1 ?i1 ?j1 xs |xs.\n            set xs \\<subseteq> {0..?k1} \\<and>\n            ?i1 \\<notin> set xs \\<and>\n            ?j1 \\<notin> set xs \\<and> distinct xs} \\<Longrightarrow>\n  Min {len ?m1 ?i1 ?j1 xs |xs.\n       set xs \\<subseteq> {0..?k1} \\<and>\n       ?i1 \\<notin> set xs \\<and> ?j1 \\<notin> set xs \\<and> distinct xs}\n  \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>set xs \\<subseteq> {0..k}; i \\<notin> set xs;\n     j \\<notin> set xs; distinct xs\\<rbrakk>\n    \\<Longrightarrow> D m i j k \\<le> len m i j xs", "by (fastforce simp add: D_def)"], ["", "lemma nat_upto_subs_top_removal':\n  \"S \\<subseteq> {0..Suc n} \\<Longrightarrow> Suc n \\<notin> S \\<Longrightarrow> S \\<subseteq> {0..n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> S \\<subseteq> {0..n}", "apply (induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<subseteq> {0..Suc 0}; Suc 0 \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> S \\<subseteq> {0..0}\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S\\<rbrakk>\n       \\<Longrightarrow> S \\<subseteq> {0..Suc n}", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>S \\<subseteq> {0..Suc 0}; Suc 0 \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..0}\n 2. \\<And>n x.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..Suc n}", "apply (rename_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>S \\<subseteq> {0..Suc 0}; Suc 0 \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..0}\n 2. \\<And>n x.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..Suc n}", "apply (case_tac \"x = Suc 0\"; fastforce)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..Suc n}", "apply (rename_tac n x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<lbrakk>S \\<subseteq> {0..Suc n}; Suc n \\<notin> S\\<rbrakk>\n                \\<Longrightarrow> S \\<subseteq> {0..n};\n        S \\<subseteq> {0..Suc (Suc n)}; Suc (Suc n) \\<notin> S;\n        x \\<in> S\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {0..Suc n}", "apply (case_tac \"x = Suc (Suc n)\"; fastforce)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma nat_upto_subs_top_removal:\n  \"S \\<subseteq> {0..n::nat} \\<Longrightarrow> n \\<notin> S \\<Longrightarrow> S \\<subseteq> {0..n - 1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> {0..n}; n \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> S \\<subseteq> {0..n - 1}", "using nat_upto_subs_top_removal'"], ["proof (prove)\nusing this:\n  \\<lbrakk>?S \\<subseteq> {0..Suc ?n}; Suc ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> {0..n}; n \\<notin> S\\<rbrakk>\n    \\<Longrightarrow> S \\<subseteq> {0..n - 1}", "by (cases n; simp)"], ["", "text \\<open>Monotonicity with respect to \\<open>k\\<close>.\\<close>"], ["", "lemma fw_invariant:\n  \"k' \\<le> k \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>k' \\<le> 0; i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j \\<le> fw m n k' i j\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j;\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k' i j", "case 0"], ["proof (state)\nthis:\n  k' \\<le> 0\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>k' \\<le> 0; i \\<le> n; j \\<le> n; 0 \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw m n 0 i j \\<le> fw m n k' i j\n 2. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j;\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k' i j", "then"], ["proof (chain)\npicking this:\n  k' \\<le> 0\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  k' \\<le> 0\n  i \\<le> n\n  j \\<le> n\n  0 \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 i j \\<le> fw m n k' i j", "by (auto intro: fwi_invariant)"], ["proof (state)\nthis:\n  fw m n 0 i j \\<le> fw m n k' i j\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j;\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k' i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j;\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k' i j", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j\n  k' \\<le> Suc k\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n;\n                 k \\<le> n\\<rbrakk>\n                \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j;\n        k' \\<le> Suc k; i \\<le> n; j \\<le> n; Suc k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k' i j", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j \\<le> fw m n k' i j", "proof (cases \"k' = Suc k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k' = Suc k \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k' i j\n 2. k' \\<noteq> Suc k \\<Longrightarrow>\n    fw m n (Suc k) i j \\<le> fw m n k' i j", "case True"], ["proof (state)\nthis:\n  k' = Suc k\n\ngoal (2 subgoals):\n 1. k' = Suc k \\<Longrightarrow> fw m n (Suc k) i j \\<le> fw m n k' i j\n 2. k' \\<noteq> Suc k \\<Longrightarrow>\n    fw m n (Suc k) i j \\<le> fw m n k' i j", "then"], ["proof (chain)\npicking this:\n  k' = Suc k", "show ?thesis"], ["proof (prove)\nusing this:\n  k' = Suc k\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j \\<le> fw m n k' i j", "by simp"], ["proof (state)\nthis:\n  fw m n (Suc k) i j \\<le> fw m n k' i j\n\ngoal (1 subgoal):\n 1. k' \\<noteq> Suc k \\<Longrightarrow>\n    fw m n (Suc k) i j \\<le> fw m n k' i j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k' \\<noteq> Suc k \\<Longrightarrow>\n    fw m n (Suc k) i j \\<le> fw m n k' i j", "case False"], ["proof (state)\nthis:\n  k' \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. k' \\<noteq> Suc k \\<Longrightarrow>\n    fw m n (Suc k) i j \\<le> fw m n k' i j", "with Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j\n  k' \\<le> Suc k\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  k' \\<noteq> Suc k", "have \"fw m n k i j \\<le> fw m n k' i j\""], ["proof (prove)\nusing this:\n  \\<lbrakk>k' \\<le> k; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n k i j \\<le> fw m n k' i j\n  k' \\<le> Suc k\n  i \\<le> n\n  j \\<le> n\n  Suc k \\<le> n\n  k' \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. fw m n k i j \\<le> fw m n k' i j", "by auto"], ["proof (state)\nthis:\n  fw m n k i j \\<le> fw m n k' i j\n\ngoal (1 subgoal):\n 1. k' \\<noteq> Suc k \\<Longrightarrow>\n    fw m n (Suc k) i j \\<le> fw m n k' i j", "moreover"], ["proof (state)\nthis:\n  fw m n k i j \\<le> fw m n k' i j\n\ngoal (1 subgoal):\n 1. k' \\<noteq> Suc k \\<Longrightarrow>\n    fw m n (Suc k) i j \\<le> fw m n k' i j", "from \\<open>i \\<le> n\\<close> \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n\n  j \\<le> n", "have \"fw m n (Suc k) i j \\<le> fw m n k i j\""], ["proof (prove)\nusing this:\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j \\<le> fw m n k i j", "by (auto intro: fwi_mono)"], ["proof (state)\nthis:\n  fw m n (Suc k) i j \\<le> fw m n k i j\n\ngoal (1 subgoal):\n 1. k' \\<noteq> Suc k \\<Longrightarrow>\n    fw m n (Suc k) i j \\<le> fw m n k' i j", "ultimately"], ["proof (chain)\npicking this:\n  fw m n k i j \\<le> fw m n k' i j\n  fw m n (Suc k) i j \\<le> fw m n k i j", "show ?thesis"], ["proof (prove)\nusing this:\n  fw m n k i j \\<le> fw m n k' i j\n  fw m n (Suc k) i j \\<le> fw m n k i j\n\ngoal (1 subgoal):\n 1. fw m n (Suc k) i j \\<le> fw m n k' i j", "by auto"], ["proof (state)\nthis:\n  fw m n (Suc k) i j \\<le> fw m n k' i j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n (Suc k) i j \\<le> fw m n k' i j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma negative_len_shortest:\n  \"length xs = n \\<Longrightarrow> len m i i xs < 0\n    \\<Longrightarrow> \\<exists> j ys. distinct (j # ys) \\<and> len m j j ys < 0 \\<and> j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length xs = n; len m i i xs < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>j ys.\n                         distinct (j # ys) \\<and>\n                         len m j j ys < (0::'a) \\<and>\n                         j \\<in> set (i # xs) \\<and>\n                         set ys \\<subseteq> set xs", "proof (induction n arbitrary: xs i rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs i.\n       \\<lbrakk>\\<And>y xs i.\n                   \\<lbrakk>y < x; length xs = y;\n                    len m i i xs < (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>j ys.\n  distinct (j # ys) \\<and>\n  len m j j ys < (0::'a) \\<and>\n  j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs;\n        length xs = x; len m i i xs < (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j ys.\n                            distinct (j # ys) \\<and>\n                            len m j j ys < (0::'a) \\<and>\n                            j \\<in> set (i # xs) \\<and>\n                            set ys \\<subseteq> set xs", "case (less n)"], ["proof (state)\nthis:\n  \\<lbrakk>?y1 < n; length ?xs1 = ?y1; len m ?i1 ?i1 ?xs1 < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < (0::'a) \\<and>\n                       j \\<in> set (?i1 # ?xs1) \\<and>\n                       set ys \\<subseteq> set ?xs1\n  length xs = n\n  len m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x xs i.\n       \\<lbrakk>\\<And>y xs i.\n                   \\<lbrakk>y < x; length xs = y;\n                    len m i i xs < (0::'a)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>j ys.\n  distinct (j # ys) \\<and>\n  len m j j ys < (0::'a) \\<and>\n  j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs;\n        length xs = x; len m i i xs < (0::'a)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>j ys.\n                            distinct (j # ys) \\<and>\n                            len m j j ys < (0::'a) \\<and>\n                            j \\<in> set (i # xs) \\<and>\n                            set ys \\<subseteq> set xs", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < (0::'a) \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case Nil"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < (0::'a) \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  xs = []\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "using less.prems"], ["proof (prove)\nusing this:\n  xs = []\n  length xs = n\n  len m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < (0::'a) \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < (0::'a) \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case (Cons y ys)"], ["proof (state)\nthis:\n  xs = y # ys\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < (0::'a) \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "then"], ["proof (chain)\npicking this:\n  xs = y # ys", "have \"length xs \\<ge> 1\""], ["proof (prove)\nusing this:\n  xs = y # ys\n\ngoal (1 subgoal):\n 1. 1 \\<le> length xs", "by auto"], ["proof (state)\nthis:\n  1 \\<le> length xs\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       xs = a # list \\<Longrightarrow>\n       \\<exists>j ys.\n          distinct (j # ys) \\<and>\n          len m j j ys < (0::'a) \\<and>\n          j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases \"i \\<in> set xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i \\<in> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "assume i: \"i \\<in> set xs\""], ["proof (state)\nthis:\n  i \\<in> set xs\n\ngoal (2 subgoals):\n 1. i \\<in> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "then"], ["proof (chain)\npicking this:\n  i \\<in> set xs", "obtain as bs where xs: \"xs = as @ i # bs\""], ["proof (prove)\nusing this:\n  i \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>as bs.\n        xs = as @ i # bs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list)"], ["proof (state)\nthis:\n  xs = as @ i # bs\n\ngoal (2 subgoals):\n 1. i \\<in> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases \"len m i i as < 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case True"], ["proof (state)\nthis:\n  len m i i as < (0::'a)\n\ngoal (2 subgoals):\n 1. len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from xs less.prems"], ["proof (chain)\npicking this:\n  xs = as @ i # bs\n  length xs = n\n  len m i i xs < (0::'a)", "have \"length as < n\""], ["proof (prove)\nusing this:\n  xs = as @ i # bs\n  length xs = n\n  len m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. length as < n", "by auto"], ["proof (state)\nthis:\n  length as < n\n\ngoal (2 subgoals):\n 1. len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from less.IH[OF this _ True] xs"], ["proof (chain)\npicking this:\n  length as = length as \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # as) \\<and> set ys \\<subseteq> set as\n  xs = as @ i # bs", "show ?thesis"], ["proof (prove)\nusing this:\n  length as = length as \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # as) \\<and> set ys \\<subseteq> set as\n  xs = as @ i # bs\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case False"], ["proof (state)\nthis:\n  \\<not> len m i i as < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from len_decomp[OF xs]"], ["proof (chain)\npicking this:\n  len ?m ?x ?z xs = len ?m ?x i as + len ?m i ?z bs", "have \"len m i i xs = len m i i as + len m i i bs\""], ["proof (prove)\nusing this:\n  len ?m ?x ?z xs = len ?m ?x i as + len ?m i ?z bs\n\ngoal (1 subgoal):\n 1. len m i i xs = len m i i as + len m i i bs", "by auto"], ["proof (state)\nthis:\n  len m i i xs = len m i i as + len m i i bs\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with False less.prems"], ["proof (chain)\npicking this:\n  \\<not> len m i i as < (0::'a)\n  length xs = n\n  len m i i xs < (0::'a)\n  len m i i xs = len m i i as + len m i i bs", "have *: \"len m i i bs < 0\""], ["proof (prove)\nusing this:\n  \\<not> len m i i as < (0::'a)\n  length xs = n\n  len m i i xs < (0::'a)\n  len m i i xs = len m i i as + len m i i bs\n\ngoal (1 subgoal):\n 1. len m i i bs < (0::'a)", "by (metis add_lt_neutral local.dual_order.strict_trans local.neqE)"], ["proof (state)\nthis:\n  len m i i bs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from xs less.prems"], ["proof (chain)\npicking this:\n  xs = as @ i # bs\n  length xs = n\n  len m i i xs < (0::'a)", "have \"length bs < n\""], ["proof (prove)\nusing this:\n  xs = as @ i # bs\n  length xs = n\n  len m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. length bs < n", "by auto"], ["proof (state)\nthis:\n  length bs < n\n\ngoal (1 subgoal):\n 1. \\<not> len m i i as < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from less.IH[OF this _ *] xs"], ["proof (chain)\npicking this:\n  length bs = length bs \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # bs) \\<and> set ys \\<subseteq> set bs\n  xs = as @ i # bs", "show ?thesis"], ["proof (prove)\nusing this:\n  length bs = length bs \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # bs) \\<and> set ys \\<subseteq> set bs\n  xs = as @ i # bs\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "assume i: \"i \\<notin> set xs\""], ["proof (state)\nthis:\n  i \\<notin> set xs\n\ngoal (1 subgoal):\n 1. i \\<notin> set xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases \"distinct xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case True"], ["proof (state)\nthis:\n  distinct xs\n\ngoal (2 subgoals):\n 1. distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with i less.prems"], ["proof (chain)\npicking this:\n  i \\<notin> set xs\n  length xs = n\n  len m i i xs < (0::'a)\n  distinct xs", "show ?thesis"], ["proof (prove)\nusing this:\n  i \\<notin> set xs\n  length xs = n\n  len m i i xs < (0::'a)\n  distinct xs\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case False"], ["proof (state)\nthis:\n  \\<not> distinct xs\n\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from not_distinct_decomp[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>xs ys zs y. xs = xs @ [y] @ ys @ [y] @ zs", "obtain a as bs cs where xs:\n          \"xs = as @ a # bs @ a # cs\""], ["proof (prove)\nusing this:\n  \\<exists>xs ys zs y. xs = xs @ [y] @ ys @ [y] @ zs\n\ngoal (1 subgoal):\n 1. (\\<And>as a bs cs.\n        xs = as @ a # bs @ a # cs \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xs = as @ a # bs @ a # cs\n\ngoal (1 subgoal):\n 1. \\<not> distinct xs \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "proof (cases \"len m a a bs < 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case True"], ["proof (state)\nthis:\n  len m a a bs < (0::'a)\n\ngoal (2 subgoals):\n 1. len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from xs less.prems"], ["proof (chain)\npicking this:\n  xs = as @ a # bs @ a # cs\n  length xs = n\n  len m i i xs < (0::'a)", "have \"length bs < n\""], ["proof (prove)\nusing this:\n  xs = as @ a # bs @ a # cs\n  length xs = n\n  len m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. length bs < n", "by auto"], ["proof (state)\nthis:\n  length bs < n\n\ngoal (2 subgoals):\n 1. len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n 2. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from less.IH[OF this _ True] xs"], ["proof (chain)\npicking this:\n  length bs = length bs \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (a # bs) \\<and> set ys \\<subseteq> set bs\n  xs = as @ a # bs @ a # cs", "show ?thesis"], ["proof (prove)\nusing this:\n  length bs = length bs \\<Longrightarrow>\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (a # bs) \\<and> set ys \\<subseteq> set bs\n  xs = as @ a # bs @ a # cs\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "case False"], ["proof (state)\nthis:\n  \\<not> len m a a bs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from len_decomp[OF xs, of m  i i] len_decomp[of \"bs @ a # cs\" bs a cs m a i]"], ["proof (chain)\npicking this:\n  len m i i xs = len m i a as + len m a i (bs @ a # cs)\n  bs @ a # cs = bs @ a # cs \\<Longrightarrow>\n  len m a i (bs @ a # cs) = len m a a bs + len m a i cs", "have *:\"len m i i xs = len m i a as + (len m a a bs + len m a i cs)\""], ["proof (prove)\nusing this:\n  len m i i xs = len m i a as + len m a i (bs @ a # cs)\n  bs @ a # cs = bs @ a # cs \\<Longrightarrow>\n  len m a i (bs @ a # cs) = len m a a bs + len m a i cs\n\ngoal (1 subgoal):\n 1. len m i i xs = len m i a as + (len m a a bs + len m a i cs)", "by auto"], ["proof (state)\nthis:\n  len m i i xs = len m i a as + (len m a a bs + len m a i cs)\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from False"], ["proof (chain)\npicking this:\n  \\<not> len m a a bs < (0::'a)", "have \"len m a a bs \\<ge> 0\""], ["proof (prove)\nusing this:\n  \\<not> len m a a bs < (0::'a)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> len m a a bs", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> len m a a bs\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with add_mono"], ["proof (chain)\npicking this:\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  (0::'a) \\<le> len m a a bs", "have \"len m a a bs + len m a i cs \\<ge> len m a i cs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n  (0::'a) \\<le> len m a a bs\n\ngoal (1 subgoal):\n 1. len m a i cs \\<le> len m a a bs + len m a i cs", "by fastforce"], ["proof (state)\nthis:\n  len m a i cs \\<le> len m a a bs + len m a i cs\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with *"], ["proof (chain)\npicking this:\n  len m i i xs = len m i a as + (len m a a bs + len m a i cs)\n  len m a i cs \\<le> len m a a bs + len m a i cs", "have \"len m i i xs \\<ge> len m i a as + len m a i cs\""], ["proof (prove)\nusing this:\n  len m i i xs = len m i a as + (len m a a bs + len m a i cs)\n  len m a i cs \\<le> len m a a bs + len m a i cs\n\ngoal (1 subgoal):\n 1. len m i a as + len m a i cs \\<le> len m i i xs", "by (simp add: add_mono)"], ["proof (state)\nthis:\n  len m i a as + len m a i cs \\<le> len m i i xs\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with less.prems(2)"], ["proof (chain)\npicking this:\n  len m i i xs < (0::'a)\n  len m i a as + len m a i cs \\<le> len m i i xs", "have \"len m i a as + len m a i cs < 0\""], ["proof (prove)\nusing this:\n  len m i i xs < (0::'a)\n  len m i a as + len m a i cs \\<le> len m i i xs\n\ngoal (1 subgoal):\n 1. len m i a as + len m a i cs < (0::'a)", "by auto"], ["proof (state)\nthis:\n  len m i a as + len m a i cs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "with len_comp"], ["proof (chain)\npicking this:\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys\n  len m i a as + len m a i cs < (0::'a)", "have \"len m i i (as @ a # cs) < 0\""], ["proof (prove)\nusing this:\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys\n  len m i a as + len m a i cs < (0::'a)\n\ngoal (1 subgoal):\n 1. len m i i (as @ a # cs) < (0::'a)", "by auto"], ["proof (state)\nthis:\n  len m i i (as @ a # cs) < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> len m a a bs < (0::'a) \\<Longrightarrow>\n    \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "from less.IH[OF _ _ this, of \"length (as @ a # cs)\"] xs less.prems"], ["proof (chain)\npicking this:\n  \\<lbrakk>length (as @ a # cs) < n;\n   length (as @ a # cs) = length (as @ a # cs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < (0::'a) \\<and>\n                       j \\<in> set (i # as @ a # cs) \\<and>\n                       set ys \\<subseteq> set (as @ a # cs)\n  xs = as @ a # bs @ a # cs\n  length xs = n\n  len m i i xs < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>length (as @ a # cs) < n;\n   length (as @ a # cs) = length (as @ a # cs)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < (0::'a) \\<and>\n                       j \\<in> set (i # as @ a # cs) \\<and>\n                       set ys \\<subseteq> set (as @ a # cs)\n  xs = as @ a # bs @ a # cs\n  length xs = n\n  len m i i xs < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>j ys.\n       distinct (j # ys) \\<and>\n       len m j j ys < (0::'a) \\<and>\n       j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs", "by auto"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>j ys.\n     distinct (j # ys) \\<and>\n     len m j j ys < (0::'a) \\<and>\n     j \\<in> set (i # xs) \\<and> set ys \\<subseteq> set xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_upd_leI:\n  \"fw_upd m' k i j i j \\<le> fw_upd m k i j i j\" if\n  \"m' i k \\<le> m i k\" \"m' k j \\<le> m k j\" \"m' i j \\<le> m i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw_upd m' k i j i j \\<le> fw_upd m k i j i j", "using that"], ["proof (prove)\nusing this:\n  m' i k \\<le> m i k\n  m' k j \\<le> m k j\n  m' i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. fw_upd m' k i j i j \\<le> fw_upd m k i j i j", "unfolding fw_upd_def upd_def min_def"], ["proof (prove)\nusing this:\n  m' i k \\<le> m i k\n  m' k j \\<le> m k j\n  m' i j \\<le> m i j\n\ngoal (1 subgoal):\n 1. (m'(i := (m' i)\n          (j := if m' i j \\<le> m' i k + m' k j then m' i j\n                else m' i k + m' k j)))\n     i j\n    \\<le> (m(i := (m i)\n               (j := if m i j \\<le> m i k + m k j then m i j\n                     else m i k + m k j)))\n           i j", "using add_mono"], ["proof (prove)\nusing this:\n  m' i k \\<le> m i k\n  m' k j \\<le> m k j\n  m' i j \\<le> m i j\n  \\<lbrakk>?a \\<le> ?b; ?c \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?c \\<le> ?b + ?d\n\ngoal (1 subgoal):\n 1. (m'(i := (m' i)\n          (j := if m' i j \\<le> m' i k + m' k j then m' i j\n                else m' i k + m' k j)))\n     i j\n    \\<le> (m(i := (m i)\n               (j := if m i j \\<le> m i k + m k j then m i j\n                     else m i k + m k j)))\n           i j", "by fastforce"], ["", "lemma fwi_fw_upd_mono:\n  \"fwi m n k i j i j \\<le> fw_upd m k i j i j\" if \"k \\<le> n\" \"i \\<le> n\" \"j \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi m n k i j i j \\<le> fw_upd m k i j i j", "using that"], ["proof (prove)\nusing this:\n  k \\<le> n\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fwi m n k i j i j \\<le> fw_upd m k i j i j", "by (cases i; cases j) (auto intro: fw_upd_leI fwi_mono)"], ["", "text \\<open>\n  The \\fw will always detect negative cycles. The argument goes as follows:\n  In case there is a negative cycle, then we know that there is some smallest \\<open>k\\<close> for which\n  there is a negative cycle containing only intermediate vertices from the set \\<open>{0\\<dots>k}\\<close>.\n  We will show that then \\<open>fwi m n k\\<close> computes a negative entry on the diagonal, and thus,\n  by monotonicity, \\<open>fw m n n\\<close> will compute a negative entry on the diagonal.\n\\<close>"], ["", "theorem FW_neg_cycle_detect:\n  \"\\<not> cyc_free m n \\<Longrightarrow> \\<exists> i \\<le> n. fw m n n i i < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "assume A: \"\\<not> cyc_free m n\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             (0::'a) \\<le> len m i i xs)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "let ?K = \"{k. k \\<le> n \\<and> \\<not> cyc_free_subs n {0..k} m}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "define k where \"k = Min ?K\""], ["proof (state)\nthis:\n  k =\n  Min {k. k \\<le> n \\<and>\n          \\<not> (\\<forall>i xs.\n                     i \\<le> n \\<and>\n                     set xs \\<subseteq> {0..k} \\<longrightarrow>\n                     (0::'a) \\<le> len m i i xs)}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "have not_empty_K: \"?K \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {k. k \\<le> n \\<and>\n        \\<not> (\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..k} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs)} \\<noteq>\n    {}", "using A"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n             (0::'a) \\<le> len m i i xs)\n\ngoal (1 subgoal):\n 1. {k. k \\<le> n \\<and>\n        \\<not> (\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..k} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs)} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {k. k \\<le> n \\<and>\n      \\<not> (\\<forall>i xs.\n                 i \\<le> n \\<and>\n                 set xs \\<subseteq> {0..k} \\<longrightarrow>\n                 (0::'a) \\<le> len m i i xs)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "have \"finite ?K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {k. k \\<le> n \\<and>\n         \\<not> (\\<forall>i xs.\n                    i \\<le> n \\<and>\n                    set xs \\<subseteq> {0..k} \\<longrightarrow>\n                    (0::'a) \\<le> len m i i xs)}", "by auto"], ["proof (state)\nthis:\n  finite\n   {k. k \\<le> n \\<and>\n       \\<not> (\\<forall>i xs.\n                  i \\<le> n \\<and>\n                  set xs \\<subseteq> {0..k} \\<longrightarrow>\n                  (0::'a) \\<le> len m i i xs)}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with not_empty_K"], ["proof (chain)\npicking this:\n  {k. k \\<le> n \\<and>\n      \\<not> (\\<forall>i xs.\n                 i \\<le> n \\<and>\n                 set xs \\<subseteq> {0..k} \\<longrightarrow>\n                 (0::'a) \\<le> len m i i xs)} \\<noteq>\n  {}\n  finite\n   {k. k \\<le> n \\<and>\n       \\<not> (\\<forall>i xs.\n                  i \\<le> n \\<and>\n                  set xs \\<subseteq> {0..k} \\<longrightarrow>\n                  (0::'a) \\<le> len m i i xs)}", "have *:\n    \"\\<forall> k' < k. cyc_free_subs n {0..k'} m\""], ["proof (prove)\nusing this:\n  {k. k \\<le> n \\<and>\n      \\<not> (\\<forall>i xs.\n                 i \\<le> n \\<and>\n                 set xs \\<subseteq> {0..k} \\<longrightarrow>\n                 (0::'a) \\<le> len m i i xs)} \\<noteq>\n  {}\n  finite\n   {k. k \\<le> n \\<and>\n       \\<not> (\\<forall>i xs.\n                  i \\<le> n \\<and>\n                  set xs \\<subseteq> {0..k} \\<longrightarrow>\n                  (0::'a) \\<le> len m i i xs)}\n\ngoal (1 subgoal):\n 1. \\<forall>k'<k.\n       \\<forall>i xs.\n          i \\<le> n \\<and> set xs \\<subseteq> {0..k'} \\<longrightarrow>\n          (0::'a) \\<le> len m i i xs", "unfolding k_def"], ["proof (prove)\nusing this:\n  {k. k \\<le> n \\<and>\n      \\<not> (\\<forall>i xs.\n                 i \\<le> n \\<and>\n                 set xs \\<subseteq> {0..k} \\<longrightarrow>\n                 (0::'a) \\<le> len m i i xs)} \\<noteq>\n  {}\n  finite\n   {k. k \\<le> n \\<and>\n       \\<not> (\\<forall>i xs.\n                  i \\<le> n \\<and>\n                  set xs \\<subseteq> {0..k} \\<longrightarrow>\n                  (0::'a) \\<le> len m i i xs)}\n\ngoal (1 subgoal):\n 1. \\<forall>k'<Min {k. k \\<le> n \\<and>\n                        \\<not> (\\<forall>i xs.\n                                   i \\<le> n \\<and>\n                                   set xs\n                                   \\<subseteq> {0..k} \\<longrightarrow>\n                                   (0::'a) \\<le> len m i i xs)}.\n       \\<forall>i xs.\n          i \\<le> n \\<and> set xs \\<subseteq> {0..k'} \\<longrightarrow>\n          (0::'a) \\<le> len m i i xs", "by simp (meson order_class.dual_order.trans preorder_class.less_le_not_le)"], ["proof (state)\nthis:\n  \\<forall>k'<k.\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k'} \\<longrightarrow>\n        (0::'a) \\<le> len m i i xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "from linorder_class.Min_in[OF \\<open>finite ?K\\<close> \\<open>?K \\<noteq> {}\\<close>]"], ["proof (chain)\npicking this:\n  Min {k. k \\<le> n \\<and>\n          \\<not> (\\<forall>i xs.\n                     i \\<le> n \\<and>\n                     set xs \\<subseteq> {0..k} \\<longrightarrow>\n                     (0::'a) \\<le> len m i i xs)}\n  \\<in> {k. k \\<le> n \\<and>\n            \\<not> (\\<forall>i xs.\n                       i \\<le> n \\<and>\n                       set xs \\<subseteq> {0..k} \\<longrightarrow>\n                       (0::'a) \\<le> len m i i xs)}", "have\n    \"\\<not> cyc_free_subs n {0..k} m\" \"k \\<le> n\""], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and>\n          \\<not> (\\<forall>i xs.\n                     i \\<le> n \\<and>\n                     set xs \\<subseteq> {0..k} \\<longrightarrow>\n                     (0::'a) \\<le> len m i i xs)}\n  \\<in> {k. k \\<le> n \\<and>\n            \\<not> (\\<forall>i xs.\n                       i \\<le> n \\<and>\n                       set xs \\<subseteq> {0..k} \\<longrightarrow>\n                       (0::'a) \\<le> len m i i xs)}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) &&&\n    k \\<le> n", "unfolding k_def"], ["proof (prove)\nusing this:\n  Min {k. k \\<le> n \\<and>\n          \\<not> (\\<forall>i xs.\n                     i \\<le> n \\<and>\n                     set xs \\<subseteq> {0..k} \\<longrightarrow>\n                     (0::'a) \\<le> len m i i xs)}\n  \\<in> {k. k \\<le> n \\<and>\n            \\<not> (\\<forall>i xs.\n                       i \\<le> n \\<and>\n                       set xs \\<subseteq> {0..k} \\<longrightarrow>\n                       (0::'a) \\<le> len m i i xs)}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and>\n               set xs\n               \\<subseteq> {0..Min {k. k \\<le> n \\<and>\n \\<not> (\\<forall>i xs.\n            i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n            (0::'a) \\<le> len m i i xs)}} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) &&&\n    Min {k. k \\<le> n \\<and>\n            \\<not> (\\<forall>i xs.\n                       i \\<le> n \\<and>\n                       set xs \\<subseteq> {0..k} \\<longrightarrow>\n                       (0::'a) \\<le> len m i i xs)}\n    \\<le> n", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n             (0::'a) \\<le> len m i i xs)\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n             (0::'a) \\<le> len m i i xs)\n  k \\<le> n", "have \"\\<exists> xs j. j \\<le> n \\<and> len m j j xs < 0 \\<and> set xs \\<subseteq> {0..k}\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i xs.\n             i \\<le> n \\<and> set xs \\<subseteq> {0..k} \\<longrightarrow>\n             (0::'a) \\<le> len m i i xs)\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>xs j.\n       j \\<le> n \\<and>\n       len m j j xs < (0::'a) \\<and> set xs \\<subseteq> {0..k}", "by force"], ["proof (state)\nthis:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < (0::'a) \\<and> set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "then"], ["proof (chain)\npicking this:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < (0::'a) \\<and> set xs \\<subseteq> {0..k}", "obtain a as where a_as: \"a \\<le> n \\<and> len m a a as < 0 \\<and> set as \\<subseteq> {0..k}\""], ["proof (prove)\nusing this:\n  \\<exists>xs j.\n     j \\<le> n \\<and>\n     len m j j xs < (0::'a) \\<and> set xs \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. (\\<And>a as.\n        a \\<le> n \\<and>\n        len m a a as < (0::'a) \\<and>\n        set as \\<subseteq> {0..k} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<le> n \\<and> len m a a as < (0::'a) \\<and> set as \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with negative_len_shortest[of as \"length as\" m a]"], ["proof (chain)\npicking this:\n  \\<lbrakk>length as = length as; len m a a as < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < (0::'a) \\<and>\n                       j \\<in> set (a # as) \\<and> set ys \\<subseteq> set as\n  a \\<le> n \\<and> len m a a as < (0::'a) \\<and> set as \\<subseteq> {0..k}", "obtain j xs where j_xs:\n  \"distinct (j # xs) \\<and> len m j j xs < 0 \\<and> j \\<in> set (a # as) \\<and> set xs \\<subseteq> set as\""], ["proof (prove)\nusing this:\n  \\<lbrakk>length as = length as; len m a a as < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>j ys.\n                       distinct (j # ys) \\<and>\n                       len m j j ys < (0::'a) \\<and>\n                       j \\<in> set (a # as) \\<and> set ys \\<subseteq> set as\n  a \\<le> n \\<and> len m a a as < (0::'a) \\<and> set as \\<subseteq> {0..k}\n\ngoal (1 subgoal):\n 1. (\\<And>j xs.\n        distinct (j # xs) \\<and>\n        len m j j xs < (0::'a) \\<and>\n        j \\<in> set (a # as) \\<and>\n        set xs \\<subseteq> set as \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  distinct (j # xs) \\<and>\n  len m j j xs < (0::'a) \\<and>\n  j \\<in> set (a # as) \\<and> set xs \\<subseteq> set as\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with a_as \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  a \\<le> n \\<and> len m a a as < (0::'a) \\<and> set as \\<subseteq> {0..k}\n  k \\<le> n\n  distinct (j # xs) \\<and>\n  len m j j xs < (0::'a) \\<and>\n  j \\<in> set (a # as) \\<and> set xs \\<subseteq> set as", "have cyc: \"j \\<le> n\" \"set xs \\<subseteq> {0..k}\" \"len m j j xs < 0\" \"distinct (j # xs)\""], ["proof (prove)\nusing this:\n  a \\<le> n \\<and> len m a a as < (0::'a) \\<and> set as \\<subseteq> {0..k}\n  k \\<le> n\n  distinct (j # xs) \\<and>\n  len m j j xs < (0::'a) \\<and>\n  j \\<in> set (a # as) \\<and> set xs \\<subseteq> set as\n\ngoal (1 subgoal):\n 1. (j \\<le> n &&& set xs \\<subseteq> {0..k}) &&&\n    len m j j xs < (0::'a) &&& distinct (j # xs)", "by auto"], ["proof (state)\nthis:\n  j \\<le> n\n  set xs \\<subseteq> {0..k}\n  len m j j xs < (0::'a)\n  distinct (j # xs)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "{"], ["proof (state)\nthis:\n  j \\<le> n\n  set xs \\<subseteq> {0..k}\n  len m j j xs < (0::'a)\n  distinct (j # xs)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "assume \"k > 0\""], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "then"], ["proof (chain)\npicking this:\n  0 < k", "have \"k - 1 < k\""], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. k - 1 < k", "by simp"], ["proof (state)\nthis:\n  k - 1 < k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with *"], ["proof (chain)\npicking this:\n  \\<forall>k'<k.\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k'} \\<longrightarrow>\n        (0::'a) \\<le> len m i i xs\n  k - 1 < k", "have **:\"cyc_free_subs n {0..k - 1} m\""], ["proof (prove)\nusing this:\n  \\<forall>k'<k.\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..k'} \\<longrightarrow>\n        (0::'a) \\<le> len m i i xs\n  k - 1 < k\n\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..k - 1} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs", "by blast"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k - 1} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "have \"k \\<in> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> set xs", "proof (rule ccontr, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<notin> set xs \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  k \\<notin> set xs\n\ngoal (1 subgoal):\n 1. k \\<notin> set xs \\<Longrightarrow> False", "with \\<open>set xs \\<subseteq> {0..k}\\<close> nat_upto_subs_top_removal"], ["proof (chain)\npicking this:\n  set xs \\<subseteq> {0..k}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}\n  k \\<notin> set xs", "have \"set xs \\<subseteq> {0..k-1}\""], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}\n  k \\<notin> set xs\n\ngoal (1 subgoal):\n 1. set xs \\<subseteq> {0..k - 1}", "by auto"], ["proof (state)\nthis:\n  set xs \\<subseteq> {0..k - 1}\n\ngoal (1 subgoal):\n 1. k \\<notin> set xs \\<Longrightarrow> False", "with \\<open>cyc_free_subs n {0..k - 1} m\\<close> \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k - 1} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  j \\<le> n\n  set xs \\<subseteq> {0..k - 1}", "have \"0 \\<le> len m j j xs\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..k - 1} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  j \\<le> n\n  set xs \\<subseteq> {0..k - 1}\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> len m j j xs", "by blast"], ["proof (state)\nthis:\n  (0::'a) \\<le> len m j j xs\n\ngoal (1 subgoal):\n 1. k \\<notin> set xs \\<Longrightarrow> False", "with cyc(3)"], ["proof (chain)\npicking this:\n  len m j j xs < (0::'a)\n  (0::'a) \\<le> len m j j xs", "show ?case"], ["proof (prove)\nusing this:\n  len m j j xs < (0::'a)\n  (0::'a) \\<le> len m j j xs\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with cyc(4)"], ["proof (chain)\npicking this:\n  distinct (j # xs)\n  k \\<in> set xs", "have \"j \\<noteq> k\""], ["proof (prove)\nusing this:\n  distinct (j # xs)\n  k \\<in> set xs\n\ngoal (1 subgoal):\n 1. j \\<noteq> k", "by auto"], ["proof (state)\nthis:\n  j \\<noteq> k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "from \\<open>k \\<in> set xs\\<close>"], ["proof (chain)\npicking this:\n  k \\<in> set xs", "obtain ys zs where \"xs = ys @ k # zs\""], ["proof (prove)\nusing this:\n  k \\<in> set xs\n\ngoal (1 subgoal):\n 1. (\\<And>ys zs.\n        xs = ys @ k # zs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list)"], ["proof (state)\nthis:\n  xs = ys @ k # zs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with \\<open>distinct (j # xs)\\<close>"], ["proof (chain)\npicking this:\n  distinct (j # xs)\n  xs = ys @ k # zs", "have xs: \"xs = ys @ k # zs\" \"distinct ys\" \"distinct zs\" \"k \\<notin> set ys\" \"k \\<notin> set zs\"\n             \"j \\<notin> set ys\" \"j \\<notin> set zs\""], ["proof (prove)\nusing this:\n  distinct (j # xs)\n  xs = ys @ k # zs\n\ngoal (1 subgoal):\n 1. (xs = ys @ k # zs &&& distinct ys &&& distinct zs) &&&\n    (k \\<notin> set ys &&& k \\<notin> set zs) &&&\n    j \\<notin> set ys &&& j \\<notin> set zs", "by auto"], ["proof (state)\nthis:\n  xs = ys @ k # zs\n  distinct ys\n  distinct zs\n  k \\<notin> set ys\n  k \\<notin> set zs\n  j \\<notin> set ys\n  j \\<notin> set zs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "from xs(1,4) \\<open>set xs \\<subseteq> {0..k}\\<close> nat_upto_subs_top_removal"], ["proof (chain)\npicking this:\n  xs = ys @ k # zs\n  k \\<notin> set ys\n  set xs \\<subseteq> {0..k}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}", "have ys: \"set ys \\<subseteq> {0..k-1}\""], ["proof (prove)\nusing this:\n  xs = ys @ k # zs\n  k \\<notin> set ys\n  set xs \\<subseteq> {0..k}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}\n\ngoal (1 subgoal):\n 1. set ys \\<subseteq> {0..k - 1}", "by auto"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..k - 1}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "from xs(1,5) \\<open>set xs \\<subseteq> {0..k}\\<close> nat_upto_subs_top_removal"], ["proof (chain)\npicking this:\n  xs = ys @ k # zs\n  k \\<notin> set zs\n  set xs \\<subseteq> {0..k}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}", "have zs: \"set zs \\<subseteq> {0..k-1}\""], ["proof (prove)\nusing this:\n  xs = ys @ k # zs\n  k \\<notin> set zs\n  set xs \\<subseteq> {0..k}\n  \\<lbrakk>?S \\<subseteq> {0..?n}; ?n \\<notin> ?S\\<rbrakk>\n  \\<Longrightarrow> ?S \\<subseteq> {0..?n - 1}\n\ngoal (1 subgoal):\n 1. set zs \\<subseteq> {0..k - 1}", "by auto"], ["proof (state)\nthis:\n  set zs \\<subseteq> {0..k - 1}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "have \"D m j k (k - 1) = fw m n (k - 1) j k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m j k (k - 1) = fw m n (k - 1) j k", "using \\<open>k \\<le> n\\<close> \\<open>j \\<le> n\\<close> fw_shortest_path_up_to[OF **]"], ["proof (prove)\nusing this:\n  k \\<le> n\n  j \\<le> n\n  \\<lbrakk>?i \\<le> n; ?j \\<le> n; k - 1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m ?i ?j (k - 1) = fw m n (k - 1) ?i ?j\n\ngoal (1 subgoal):\n 1. D m j k (k - 1) = fw m n (k - 1) j k", "by auto"], ["proof (state)\nthis:\n  D m j k (k - 1) = fw m n (k - 1) j k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "moreover"], ["proof (state)\nthis:\n  D m j k (k - 1) = fw m n (k - 1) j k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "have \"D m k j (k - 1) = fw m n (k - 1) k j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D m k j (k - 1) = fw m n (k - 1) k j", "using \\<open>k \\<le> n\\<close> \\<open>j \\<le> n\\<close> fw_shortest_path_up_to[OF **]"], ["proof (prove)\nusing this:\n  k \\<le> n\n  j \\<le> n\n  \\<lbrakk>?i \\<le> n; ?j \\<le> n; k - 1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> D m ?i ?j (k - 1) = fw m n (k - 1) ?i ?j\n\ngoal (1 subgoal):\n 1. D m k j (k - 1) = fw m n (k - 1) k j", "by auto"], ["proof (state)\nthis:\n  D m k j (k - 1) = fw m n (k - 1) k j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  D m j k (k - 1) = fw m n (k - 1) j k\n  D m k j (k - 1) = fw m n (k - 1) k j", "have \"fw m n (k - 1) j k + fw m n (k - 1) k j \\<le> len m j k ys + len m k j zs\""], ["proof (prove)\nusing this:\n  D m j k (k - 1) = fw m n (k - 1) j k\n  D m k j (k - 1) = fw m n (k - 1) k j\n\ngoal (1 subgoal):\n 1. fw m n (k - 1) j k + fw m n (k - 1) k j\n    \\<le> len m j k ys + len m k j zs", "using D_not_diag_le'[OF zs(1) xs(5,7,3), of m] D_not_diag_le'[OF ys(1) xs(6,4,2), of m]"], ["proof (prove)\nusing this:\n  D m j k (k - 1) = fw m n (k - 1) j k\n  D m k j (k - 1) = fw m n (k - 1) k j\n  D m k j (k - 1) \\<le> len m k j zs\n  D m j k (k - 1) \\<le> len m j k ys\n\ngoal (1 subgoal):\n 1. fw m n (k - 1) j k + fw m n (k - 1) k j\n    \\<le> len m j k ys + len m k j zs", "by (auto simp: add_mono)"], ["proof (state)\nthis:\n  fw m n (k - 1) j k + fw m n (k - 1) k j \\<le> len m j k ys + len m k j zs\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "then"], ["proof (chain)\npicking this:\n  fw m n (k - 1) j k + fw m n (k - 1) k j \\<le> len m j k ys + len m k j zs", "have neg: \"fw m n (k - 1) j k + fw m n (k - 1) k j < 0\""], ["proof (prove)\nusing this:\n  fw m n (k - 1) j k + fw m n (k - 1) k j \\<le> len m j k ys + len m k j zs\n\ngoal (1 subgoal):\n 1. fw m n (k - 1) j k + fw m n (k - 1) k j < (0::'a)", "using xs(1) \\<open>len m j j xs < 0\\<close> len_comp"], ["proof (prove)\nusing this:\n  fw m n (k - 1) j k + fw m n (k - 1) k j \\<le> len m j k ys + len m k j zs\n  xs = ys @ k # zs\n  len m j j xs < (0::'a)\n  len ?m ?a ?c (?xs @ ?b # ?ys) = len ?m ?a ?b ?xs + len ?m ?b ?c ?ys\n\ngoal (1 subgoal):\n 1. fw m n (k - 1) j k + fw m n (k - 1) k j < (0::'a)", "by auto"], ["proof (state)\nthis:\n  fw m n (k - 1) j k + fw m n (k - 1) k j < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "have \"fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j", "from \\<open>k > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < k", "have *: \"fw m n k = fwi (fw m n (k - 1)) n k n n\""], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. fw m n k = fwi (fw m n (k - 1)) n k n n", "by (cases k) auto"], ["proof (state)\nthis:\n  fw m n k = fwi (fw m n (k - 1)) n k n n\n\ngoal (1 subgoal):\n 1. fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j", "from fw_cyc_free_subs[OF **, THEN cyc_free_subs_diag] \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>k - 1 \\<le> n; ?i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> (0::'a) \\<le> fw m n (k - 1) ?i ?i\n  k \\<le> n", "have\n        \"fw m n (k - 1) k k \\<ge> 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>k - 1 \\<le> n; ?i \\<le> n\\<rbrakk>\n  \\<Longrightarrow> (0::'a) \\<le> fw m n (k - 1) ?i ?i\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> fw m n (k - 1) k k", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> fw m n (k - 1) k k\n\ngoal (1 subgoal):\n 1. fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j", "from fwi_step'[of \"fw m n (k - 1)\", OF this] \\<open>k \\<le> n\\<close> \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>?i' \\<le> ?n; ?j' \\<le> ?n; k \\<le> ?n; ?i \\<le> ?i';\n   ?j \\<le> ?j'\\<rbrakk>\n  \\<Longrightarrow> fwi (fw m n (k - 1)) ?n k ?i' ?j' ?i ?j =\n                    min (fw m n (k - 1) ?i ?j)\n                     (fw m n (k - 1) ?i k + fw m n (k - 1) k ?j)\n  k \\<le> n\n  j \\<le> n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i' \\<le> ?n; ?j' \\<le> ?n; k \\<le> ?n; ?i \\<le> ?i';\n   ?j \\<le> ?j'\\<rbrakk>\n  \\<Longrightarrow> fwi (fw m n (k - 1)) ?n k ?i' ?j' ?i ?j =\n                    min (fw m n (k - 1) ?i ?j)\n                     (fw m n (k - 1) ?i k + fw m n (k - 1) k ?j)\n  k \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j", "by (auto intro: min.cobounded2 simp: *)"], ["proof (state)\nthis:\n  fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with neg"], ["proof (chain)\npicking this:\n  fw m n (k - 1) j k + fw m n (k - 1) k j < (0::'a)\n  fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j", "have \"fw m n k j j < 0\""], ["proof (prove)\nusing this:\n  fw m n (k - 1) j k + fw m n (k - 1) k j < (0::'a)\n  fw m n k j j \\<le> fw m n (k - 1) j k + fw m n (k - 1) k j\n\ngoal (1 subgoal):\n 1. fw m n k j j < (0::'a)", "by auto"], ["proof (state)\nthis:\n  fw m n k j j < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "moreover"], ["proof (state)\nthis:\n  fw m n k j j < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "from fw_invariant \\<open>j \\<le> n\\<close> \\<open>k \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>?k' \\<le> ?k; ?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j \\<le> fw ?m ?n ?k' ?i ?j\n  j \\<le> n\n  k \\<le> n", "have \"fw m n n j j \\<le> fw m n k j j\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?k' \\<le> ?k; ?i \\<le> ?n; ?j \\<le> ?n; ?k \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> fw ?m ?n ?k ?i ?j \\<le> fw ?m ?n ?k' ?i ?j\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n n j j \\<le> fw m n k j j", "by blast"], ["proof (state)\nthis:\n  fw m n n j j \\<le> fw m n k j j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  fw m n k j j < (0::'a)\n  fw m n n j j \\<le> fw m n k j j", "have ?thesis"], ["proof (prove)\nusing this:\n  fw m n k j j < (0::'a)\n  fw m n n j j \\<le> fw m n k j j\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "using \\<open>j \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  fw m n k j j < (0::'a)\n  fw m n n j j \\<le> fw m n k j j\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "}"], ["proof (state)\nthis:\n  0 < k \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "moreover"], ["proof (state)\nthis:\n  0 < k \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "{"], ["proof (state)\nthis:\n  0 < k \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "assume \"k = 0\""], ["proof (state)\nthis:\n  k = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with cyc(2,4)"], ["proof (chain)\npicking this:\n  set xs \\<subseteq> {0..k}\n  distinct (j # xs)\n  k = 0", "have \"xs = [] \\<or> xs = [0]\""], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {0..k}\n  distinct (j # xs)\n  k = 0\n\ngoal (1 subgoal):\n 1. xs = [] \\<or> xs = [0]", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set xs \\<subseteq> {0..0}; distinct (j # xs); k = 0;\n     xs \\<noteq> [0]\\<rbrakk>\n    \\<Longrightarrow> xs = []", "apply (case_tac xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>set xs \\<subseteq> {0..0}; distinct (j # xs); k = 0;\n     xs \\<noteq> [0]; xs = []\\<rbrakk>\n    \\<Longrightarrow> xs = []\n 2. \\<And>a list.\n       \\<lbrakk>set xs \\<subseteq> {0..0}; distinct (j # xs); k = 0;\n        xs \\<noteq> [0]; xs = a # list\\<rbrakk>\n       \\<Longrightarrow> xs = []", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>set xs \\<subseteq> {0..0}; distinct (j # xs); k = 0;\n        xs \\<noteq> [0]; xs = a # list\\<rbrakk>\n       \\<Longrightarrow> xs = []", "apply (rename_tac ys)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a ys.\n       \\<lbrakk>set xs \\<subseteq> {0..0}; distinct (j # xs); k = 0;\n        xs \\<noteq> [0]; xs = a # ys\\<rbrakk>\n       \\<Longrightarrow> xs = []", "apply (case_tac ys)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a ys.\n       \\<lbrakk>set xs \\<subseteq> {0..0}; distinct (j # xs); k = 0;\n        xs \\<noteq> [0]; xs = a # ys; ys = []\\<rbrakk>\n       \\<Longrightarrow> xs = []\n 2. \\<And>a ys aa list.\n       \\<lbrakk>set xs \\<subseteq> {0..0}; distinct (j # xs); k = 0;\n        xs \\<noteq> [0]; xs = a # ys; ys = aa # list\\<rbrakk>\n       \\<Longrightarrow> xs = []", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  xs = [] \\<or> xs = [0]\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "then"], ["proof (chain)\npicking this:\n  xs = [] \\<or> xs = [0]", "have ?thesis"], ["proof (prove)\nusing this:\n  xs = [] \\<or> xs = [0]\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n 2. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "assume \"xs = []\""], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n 2. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with cyc"], ["proof (chain)\npicking this:\n  j \\<le> n\n  set xs \\<subseteq> {0..k}\n  len m j j xs < (0::'a)\n  distinct (j # xs)\n  xs = []", "have \"m j j < 0\""], ["proof (prove)\nusing this:\n  j \\<le> n\n  set xs \\<subseteq> {0..k}\n  len m j j xs < (0::'a)\n  distinct (j # xs)\n  xs = []\n\ngoal (1 subgoal):\n 1. m j j < (0::'a)", "by auto"], ["proof (state)\nthis:\n  m j j < (0::'a)\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n 2. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with fw_mono[of j n j m n] \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>j \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n n j j \\<le> m j j\n  j \\<le> n\n  m j j < (0::'a)", "have \"fw m n n j j < 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>j \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n n j j \\<le> m j j\n  j \\<le> n\n  m j j < (0::'a)\n\ngoal (1 subgoal):\n 1. fw m n n j j < (0::'a)", "by auto"], ["proof (state)\nthis:\n  fw m n n j j < (0::'a)\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n 2. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  j \\<le> n\n  fw m n n j j < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<le> n\n  fw m n n j j < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "assume xs: \"xs = [0]\""], ["proof (state)\nthis:\n  xs = [0]\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with cyc"], ["proof (chain)\npicking this:\n  j \\<le> n\n  set xs \\<subseteq> {0..k}\n  len m j j xs < (0::'a)\n  distinct (j # xs)\n  xs = [0]", "have \"m j 0 + m 0 j < 0\""], ["proof (prove)\nusing this:\n  j \\<le> n\n  set xs \\<subseteq> {0..k}\n  len m j j xs < (0::'a)\n  distinct (j # xs)\n  xs = [0]\n\ngoal (1 subgoal):\n 1. m j 0 + m 0 j < (0::'a)", "by auto"], ["proof (state)\nthis:\n  m j 0 + m 0 j < (0::'a)\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "moreover"], ["proof (state)\nthis:\n  m j 0 + m 0 j < (0::'a)\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "from \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  j \\<le> n", "have \"fw m n 0 j j \\<le> fw_upd m 0 j j j j\""], ["proof (prove)\nusing this:\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. fw m n 0 j j \\<le> fw_upd m 0 j j j j", "by (auto intro: order.trans[OF fwi_invariant fwi_fw_upd_mono])"], ["proof (state)\nthis:\n  fw m n 0 j j \\<le> fw_upd m 0 j j j j\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  m j 0 + m 0 j < (0::'a)\n  fw m n 0 j j \\<le> fw_upd m 0 j j j j", "have \"fw m n 0 j j < 0\""], ["proof (prove)\nusing this:\n  m j 0 + m 0 j < (0::'a)\n  fw m n 0 j j \\<le> fw_upd m 0 j j j j\n\ngoal (1 subgoal):\n 1. fw m n 0 j j < (0::'a)", "unfolding fw_upd_def upd_def"], ["proof (prove)\nusing this:\n  m j 0 + m 0 j < (0::'a)\n  fw m n 0 j j \\<le> (m(j := (m j)(j := min (m j j) (m j 0 + m 0 j)))) j j\n\ngoal (1 subgoal):\n 1. fw m n 0 j j < (0::'a)", "by auto"], ["proof (state)\nthis:\n  fw m n 0 j j < (0::'a)\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "then"], ["proof (chain)\npicking this:\n  fw m n 0 j j < (0::'a)", "have \"fw m n 0 j j < 0\""], ["proof (prove)\nusing this:\n  fw m n 0 j j < (0::'a)\n\ngoal (1 subgoal):\n 1. fw m n 0 j j < (0::'a)", "by (metis cyc(1) less_or_eq_imp_le single_iteration_inv)"], ["proof (state)\nthis:\n  fw m n 0 j j < (0::'a)\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  j \\<le> n\n  fw m n 0 j j < (0::'a)", "have \"fw m n n j j < 0\""], ["proof (prove)\nusing this:\n  j \\<le> n\n  fw m n 0 j j < (0::'a)\n\ngoal (1 subgoal):\n 1. fw m n n j j < (0::'a)", "using fw_invariant[of 0 n j n j m]"], ["proof (prove)\nusing this:\n  j \\<le> n\n  fw m n 0 j j < (0::'a)\n  \\<lbrakk>0 \\<le> n; j \\<le> n; j \\<le> n; n \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw m n n j j \\<le> fw m n 0 j j\n\ngoal (1 subgoal):\n 1. fw m n n j j < (0::'a)", "by auto"], ["proof (state)\nthis:\n  fw m n n j j < (0::'a)\n\ngoal (1 subgoal):\n 1. xs = [0] \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "with \\<open>j \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  j \\<le> n\n  fw m n n j j < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  j \\<le> n\n  fw m n n j j < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "}"], ["proof (state)\nthis:\n  k = 0 \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i xs.\n               i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n               (0::'a) \\<le> len m i i xs) \\<Longrightarrow>\n    \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  0 < k \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n  k = 0 \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < k \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n  k = 0 \\<Longrightarrow> \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>i\\<le>n. fw m n n i i < (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i\\<le>n. fw m n n i i < (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* End of local class context *)"], ["", "section \\<open>More on Canonical Matrices\\<close>"], ["", "abbreviation\n  \"canonical M n \\<equiv> \\<forall> i j k. i \\<le> n \\<and> j \\<le> n \\<and> k \\<le> n \\<longrightarrow> M i k \\<le> M i j + M j k\""], ["", "lemma canonical_alt_def:\n  \"canonical M n \\<longleftrightarrow> canonical_subs n {0..n} M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical M n = canonical_subs n {0..n} M", "unfolding canonical_subs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical M n =\n    (\\<forall>i j k.\n        i \\<le> n \\<and> k \\<le> n \\<and> j \\<in> {0..n} \\<longrightarrow>\n        M i k \\<le> M i j + M j k)", "by auto"], ["", "lemma fw_canonical:\n \"canonical (fw m n n) n\" if \"cyc_free m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical (fw m n n) n", "using fw_canonical_subs[OF \\<open>cyc_free m n\\<close>]"], ["proof (prove)\nusing this:\n  n \\<le> n \\<Longrightarrow> canonical_subs n {0..n} (fw m n n)\n\ngoal (1 subgoal):\n 1. canonical (fw m n n) n", "unfolding canonical_alt_def"], ["proof (prove)\nusing this:\n  n \\<le> n \\<Longrightarrow> canonical_subs n {0..n} (fw m n n)\n\ngoal (1 subgoal):\n 1. canonical_subs n {0..n} (fw m n n)", "by auto"], ["", "lemma canonical_len:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n} \\<Longrightarrow> M i j \\<le> len M i j xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n     set xs \\<subseteq> {0..n}\\<rbrakk>\n    \\<Longrightarrow> M i j \\<le> len M i j xs", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n        set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j []\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "case Nil"], ["proof (state)\nthis:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n        set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j []\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "thus ?case"], ["proof (prove)\nusing this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. M i j \\<le> len M i j []", "by auto"], ["proof (state)\nthis:\n  M i j \\<le> len M i j []\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}", "have \"M x j \\<le> len M x j xs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. M x j \\<le> len M x j xs", "by auto"], ["proof (state)\nthis:\n  M x j \\<le> len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "from Cons.prems \\<open>canonical M n\\<close>"], ["proof (chain)\npicking this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n  canonical M n", "have \"M i j \\<le> M i x + M x j\""], ["proof (prove)\nusing this:\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n  canonical M n\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i x + M x j", "by simp"], ["proof (state)\nthis:\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "also"], ["proof (state)\nthis:\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n  M i j \\<le> M i x + M x j", "have \"\\<dots> \\<le> M i x + len M x j xs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical M n; ?i \\<le> n; j \\<le> n;\n   set xs \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> M ?i j \\<le> len M ?i j xs\n  canonical M n\n  i \\<le> n\n  j \\<le> n\n  set (x # xs) \\<subseteq> {0..n}\n  M i j \\<le> M i x + M x j\n\ngoal (1 subgoal):\n 1. M i x + M x j \\<le> M i x + len M x j xs", "by (simp add: add_mono)"], ["proof (state)\nthis:\n  M i x + M x j \\<le> M i x + len M x j xs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n;\n                    set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> M i j \\<le> len M i j xs;\n        canonical M n; i \\<le> n; j \\<le> n;\n        set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> M i j \\<le> len M i j (a # xs)", "finally"], ["proof (chain)\npicking this:\n  M i j \\<le> M i x + len M x j xs", "show ?case"], ["proof (prove)\nusing this:\n  M i j \\<le> M i x + len M x j xs\n\ngoal (1 subgoal):\n 1. M i j \\<le> len M i j (x # xs)", "by simp"], ["proof (state)\nthis:\n  M i j \\<le> len M i j (x # xs)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Additional Theorems\\<close>"], ["", "lemma D_cycle_free_len_dest:\n  \"cycle_free m n\n    \\<Longrightarrow> \\<forall> i \\<le> n. \\<forall> j \\<le> n. D m i j n = m' i j \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> set xs \\<subseteq> {0..n}\n    \\<Longrightarrow> \\<exists> ys. set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle_free m n;\n     \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n     j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ys.\n                         set ys \\<subseteq> {0..n} \\<and>\n                         len m' i j xs = len m i j ys", "proof (induction xs arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "case Nil"], ["proof (state)\nthis:\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "with Nil"], ["proof (chain)\npicking this:\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}", "have \"m' i j = D m i j n\""], ["proof (prove)\nusing this:\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. m' i j = D m i j n", "by simp"], ["proof (state)\nthis:\n  m' i j = D m i j n\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "from D_dest''[OF this]"], ["proof (chain)\npicking this:\n  m' i j \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..n}}", "obtain ys where \"set ys \\<subseteq> {0..n}\" \"len m' i j [] = len m i j ys\""], ["proof (prove)\nusing this:\n  m' i j \\<in> {len m i j xs |xs. set xs \\<subseteq> {0..n}}\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        \\<lbrakk>set ys \\<subseteq> {0..n};\n         len m' i j [] = len m i j ys\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..n}\n  len m' i j [] = len m i j ys\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set [] \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j [] = len m i j ys\n 2. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "then"], ["proof (chain)\npicking this:\n  set ys \\<subseteq> {0..n}\n  len m' i j [] = len m i j ys", "show ?case"], ["proof (prove)\nusing this:\n  set ys \\<subseteq> {0..n}\n  len m' i j [] = len m i j ys\n\ngoal (1 subgoal):\n 1. \\<exists>ys.\n       set ys \\<subseteq> {0..n} \\<and> len m' i j [] = len m i j ys", "by auto"], ["proof (state)\nthis:\n  \\<exists>ys. set ys \\<subseteq> {0..n} \\<and> len m' i j [] = len m i j ys\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "case (Cons y ys)"], ["proof (state)\nthis:\n  \\<lbrakk>cycle_free m n;\n   \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; ?i \\<le> n;\n   j \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' ?i j ys = len m ?i j ysa\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set (y # ys) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "from Cons.IH[OF Cons.prems(1,2) _ \\<open>j \\<le> n\\<close>, of y] Cons.prems(5)"], ["proof (chain)\npicking this:\n  \\<lbrakk>y \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' y j ys = len m y j ysa\n  set (y # ys) \\<subseteq> {0..n}", "obtain zs where zs:\"set zs \\<subseteq> {0..n}\" \"len m' y j ys = len m y j zs\""], ["proof (prove)\nusing this:\n  \\<lbrakk>y \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' y j ys = len m y j ysa\n  set (y # ys) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. (\\<And>zs.\n        \\<lbrakk>set zs \\<subseteq> {0..n};\n         len m' y j ys = len m y j zs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>cycle_free m n;\n   \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; ?i \\<le> n;\n   j \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' ?i j ys = len m ?i j ysa\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set (y # ys) \\<subseteq> {0..n}\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs", "have \"m' i y = D m i y n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>cycle_free m n;\n   \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; ?i \\<le> n;\n   j \\<le> n; set ys \\<subseteq> {0..n}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ysa.\n                       set ysa \\<subseteq> {0..n} \\<and>\n                       len m' ?i j ys = len m ?i j ysa\n  cycle_free m n\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  j \\<le> n\n  set (y # ys) \\<subseteq> {0..n}\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs\n\ngoal (1 subgoal):\n 1. m' i y = D m i y n", "by simp"], ["proof (state)\nthis:\n  m' i y = D m i y n\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "from D_dest''[OF this]"], ["proof (chain)\npicking this:\n  m' i y \\<in> {len m i y xs |xs. set xs \\<subseteq> {0..n}}", "obtain ws where ws:\"set ws \\<subseteq> {0..n}\" \"m' i y = len m i y ws\""], ["proof (prove)\nusing this:\n  m' i y \\<in> {len m i y xs |xs. set xs \\<subseteq> {0..n}}\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>set ws \\<subseteq> {0..n}; m' i y = len m i y ws\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set ws \\<subseteq> {0..n}\n  m' i y = len m i y ws\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "with len_comp[of m i j ws y zs] zs Cons.prems(5)"], ["proof (chain)\npicking this:\n  len m i j (ws @ y # zs) = len m i y ws + len m y j zs\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs\n  set (y # ys) \\<subseteq> {0..n}\n  set ws \\<subseteq> {0..n}\n  m' i y = len m i y ws", "have \"len m' i j (y # ys) = len m i j (ws @ y # zs)\" \"set (ws @ y # zs) \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  len m i j (ws @ y # zs) = len m i y ws + len m y j zs\n  set zs \\<subseteq> {0..n}\n  len m' y j ys = len m y j zs\n  set (y # ys) \\<subseteq> {0..n}\n  set ws \\<subseteq> {0..n}\n  m' i y = len m i y ws\n\ngoal (1 subgoal):\n 1. len m' i j (y # ys) = len m i j (ws @ y # zs) &&&\n    set (ws @ y # zs) \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  len m' i j (y # ys) = len m i j (ws @ y # zs)\n  set (ws @ y # zs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>a xs i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>cycle_free m n;\n                    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j;\n                    i \\<le> n; j \\<le> n; set xs \\<subseteq> {0..n}\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>ys.\n  set ys \\<subseteq> {0..n} \\<and> len m' i j xs = len m i j ys;\n        cycle_free m n;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        j \\<le> n; set (a # xs) \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ys.\n                            set ys \\<subseteq> {0..n} \\<and>\n                            len m' i j (a # xs) = len m i j ys", "then"], ["proof (chain)\npicking this:\n  len m' i j (y # ys) = len m i j (ws @ y # zs)\n  set (ws @ y # zs) \\<subseteq> {0..n}", "show ?case"], ["proof (prove)\nusing this:\n  len m' i j (y # ys) = len m i j (ws @ y # zs)\n  set (ws @ y # zs) \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<exists>ysa.\n       set ysa \\<subseteq> {0..n} \\<and> len m' i j (y # ys) = len m i j ysa", "by blast"], ["proof (state)\nthis:\n  \\<exists>ysa.\n     set ysa \\<subseteq> {0..n} \\<and> len m' i j (y # ys) = len m i j ysa\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma D_cyc_free_preservation:\n  \"cyc_free m n \\<Longrightarrow> \\<forall> i \\<le> n. \\<forall> j \\<le> n. D m i j n = m' i j \\<Longrightarrow> cyc_free m' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i xs.\n                         i \\<le> n \\<and>\n                         set xs \\<subseteq> {0..n} \\<longrightarrow>\n                         (0::'a) \\<le> len m' i i xs", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len m' i i xs", "case (1 i xs)"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j\n  i \\<le> n\n  set xs \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len m' i i xs", "from D_cycle_free_len_dest[OF _ 1(2,3,3,4)] 1(1) cycle_free_diag_equiv"], ["proof (chain)\npicking this:\n  cycle_free m n \\<Longrightarrow>\n  \\<exists>ys. set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      (0::?'a) \\<le> len ?m i i xs) =\n  cycle_free ?m ?n", "obtain ys where \"set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\""], ["proof (prove)\nusing this:\n  cycle_free m n \\<Longrightarrow>\n  \\<exists>ys. set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      (0::?'a) \\<le> len ?m i i xs) =\n  cycle_free ?m ?n\n\ngoal (1 subgoal):\n 1. (\\<And>ys.\n        set ys \\<subseteq> {0..n} \\<and>\n        len m' i i xs = len m i i ys \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\n\ngoal (1 subgoal):\n 1. \\<And>i xs.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = m' i j; i \\<le> n;\n        set xs \\<subseteq> {0..n}\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> len m' i i xs", "with 1(1,3)"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len m i i xs\n  i \\<le> n\n  set ys \\<subseteq> {0..n} \\<and> len m' i i xs = len m i i ys\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> len m' i i xs", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> len m' i i xs\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation \"FW m n \\<equiv> fw m n n\""], ["", "lemma FW_out_of_bounds1:\n  assumes \"i > n\"\n  shows \"(FW M n) i j = M i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FW M n i j = M i j", "using assms"], ["proof (prove)\nusing this:\n  n < i\n\ngoal (1 subgoal):\n 1. FW M n i j = M i j", "by (rule fw_out_of_bounds1)"], ["", "lemma FW_out_of_bounds2:\n  assumes \"j > n\"\n  shows \"(FW M n) i j = M i j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FW M n i j = M i j", "using assms"], ["proof (prove)\nusing this:\n  n < j\n\ngoal (1 subgoal):\n 1. FW M n i j = M i j", "by (rule fw_out_of_bounds2)"], ["", "lemma FW_cyc_free_preservation:\n  \"cyc_free m n \\<Longrightarrow> cyc_free (FW m n) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs \\<Longrightarrow>\n    \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len (FW m n) i i xs", "apply (rule D_cyc_free_preservation)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs \\<Longrightarrow>\n    \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len ?m i i xs\n 2. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs \\<Longrightarrow>\n    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D ?m i j n = FW m n i j", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i xs.\n       i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n       (0::'a) \\<le> len m i i xs \\<Longrightarrow>\n    \\<forall>i\\<le>n. \\<forall>j\\<le>n. D m i j n = FW m n i j", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> D m i j n = FW m n i j", "apply (rule fw_shortest_path)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..n} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs\n 2. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> i \\<le> n\n 3. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> j \\<le> n\n 4. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n", "using cycle_free_diag_equiv"], ["proof (prove)\nusing this:\n  (\\<forall>i xs.\n      i \\<le> ?n \\<and> set xs \\<subseteq> {0..?n} \\<longrightarrow>\n      (0::?'a) \\<le> len ?m i i xs) =\n  cycle_free ?m ?n\n\ngoal (4 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> \\<forall>i xs.\n                            i \\<le> n \\<and>\n                            set xs \\<subseteq> {0..n} \\<longrightarrow>\n                            (0::'a) \\<le> len m i i xs\n 2. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> i \\<le> n\n 3. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> j \\<le> n\n 4. \\<And>i j.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len m i i xs;\n        i \\<le> n; j \\<le> n\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n", "by auto"], ["", "lemma cyc_free_diag_dest':\n  \"cyc_free m n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> m i i \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                (0::'a) \\<le> len m i i xs;\n     i \\<le> n\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> m i i", "by (rule cyc_free_subs_diag)"], ["", "lemma FW_diag_neutral_preservation:\n  \"\\<forall> i \\<le> n. M i i = 0 \\<Longrightarrow> cyc_free M n \\<Longrightarrow> \\<forall> i\\<le>n. (FW M n) i i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i\\<le>n. M i i = (0::'a);\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len M i i xs\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>n. FW M n i i = (0::'a)", "proof (auto, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i\\<le>n. M i i = (0::'a);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n           (0::'a) \\<le> len M i i xs;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n i i = (0::'a)", "case (1 i)"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n. M i i = (0::'a)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len M i i xs\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i\\<le>n. M i i = (0::'a);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n           (0::'a) \\<le> len M i i xs;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n i i = (0::'a)", "from this(3)"], ["proof (chain)\npicking this:\n  i \\<le> n", "have \"(FW M n) i i \\<le> M i i\""], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. FW M n i i \\<le> M i i", "by (auto intro: fw_mono)"], ["proof (state)\nthis:\n  FW M n i i \\<le> M i i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i\\<le>n. M i i = (0::'a);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n           (0::'a) \\<le> len M i i xs;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n i i = (0::'a)", "with 1"], ["proof (chain)\npicking this:\n  \\<forall>i\\<le>n. M i i = (0::'a)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len M i i xs\n  i \\<le> n\n  FW M n i i \\<le> M i i", "have \"(FW M n) i i \\<le> 0\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<le>n. M i i = (0::'a)\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len M i i xs\n  i \\<le> n\n  FW M n i i \\<le> M i i\n\ngoal (1 subgoal):\n 1. FW M n i i \\<le> (0::'a)", "by auto"], ["proof (state)\nthis:\n  FW M n i i \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i\\<le>n. M i i = (0::'a);\n        \\<forall>i xs.\n           i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n           (0::'a) \\<le> len M i i xs;\n        i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> FW M n i i = (0::'a)", "with cyc_free_diag_dest'[OF FW_cyc_free_preservation[OF 1(2)] \\<open>i \\<le> n\\<close>]"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> FW M n i i\n  FW M n i i \\<le> (0::'a)", "show \"FW M n i i = 0\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> FW M n i i\n  FW M n i i \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. FW M n i i = (0::'a)", "by auto"], ["proof (state)\nthis:\n  FW M n i i = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FW_fixed_preservation:\n  fixes M :: \"('a::linordered_ab_monoid_add) mat\"\n  assumes A: \"i \\<le> n\" \"M 0 i + M i 0 = 0\" \"canonical (FW M n) n\" \"cyc_free (FW M n) n\"\n  shows \"FW M n 0 i + FW M n i 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 = (0::'a)", "using assms"], ["proof (prove)\nusing this:\n  i \\<le> n\n  M 0 i + M i 0 = (0::'a)\n  canonical (FW M n) n\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len (FW M n) i i xs\n\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 = (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = (0::'a); canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = (0::'a)", "let ?M' = \"FW M n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = (0::'a); canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = (0::'a)", "assume A: \"i \\<le> n\" \"M 0 i + M i 0 = 0\" \"canonical ?M' n\" \"cyc_free ?M' n\""], ["proof (state)\nthis:\n  i \\<le> n\n  M 0 i + M i 0 = (0::'a)\n  canonical (FW M n) n\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len (FW M n) i i xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = (0::'a); canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = (0::'a)", "from \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> n", "have \"?M' 0 i + ?M' i 0 \\<le> M 0 i + M i 0\""], ["proof (prove)\nusing this:\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 \\<le> M 0 i + M i 0", "by (auto intro: fw_mono add_mono)"], ["proof (state)\nthis:\n  FW M n 0 i + FW M n i 0 \\<le> M 0 i + M i 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = (0::'a); canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = (0::'a)", "with A(2)"], ["proof (chain)\npicking this:\n  M 0 i + M i 0 = (0::'a)\n  FW M n 0 i + FW M n i 0 \\<le> M 0 i + M i 0", "have \"?M' 0 i + ?M' i 0 \\<le> 0\""], ["proof (prove)\nusing this:\n  M 0 i + M i 0 = (0::'a)\n  FW M n 0 i + FW M n i 0 \\<le> M 0 i + M i 0\n\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 \\<le> (0::'a)", "by auto"], ["proof (state)\nthis:\n  FW M n 0 i + FW M n i 0 \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = (0::'a); canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = (0::'a)", "moreover"], ["proof (state)\nthis:\n  FW M n 0 i + FW M n i 0 \\<le> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = (0::'a); canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = (0::'a)", "from \\<open>canonical ?M' n\\<close> \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  canonical (FW M n) n\n  i \\<le> n", "have \"?M' 0 0 \\<le> ?M' 0 i + ?M' i 0\""], ["proof (prove)\nusing this:\n  canonical (FW M n) n\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0", "by auto"], ["proof (state)\nthis:\n  FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = (0::'a); canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = (0::'a)", "moreover"], ["proof (state)\nthis:\n  FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = (0::'a); canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = (0::'a)", "from cyc_free_diag_dest'[OF  \\<open>cyc_free ?M' n\\<close>]"], ["proof (chain)\npicking this:\n  ?i \\<le> n \\<Longrightarrow> (0::'a) \\<le> FW M n ?i ?i", "have \"0 \\<le> ?M' 0 0\""], ["proof (prove)\nusing this:\n  ?i \\<le> n \\<Longrightarrow> (0::'a) \\<le> FW M n ?i ?i\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> FW M n 0 0", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> FW M n 0 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i \\<le> n; M 0 i + M i 0 = (0::'a); canonical (FW M n) n;\n     \\<forall>i xs.\n        i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n        (0::'a) \\<le> len (FW M n) i i xs\\<rbrakk>\n    \\<Longrightarrow> FW M n 0 i + FW M n i 0 = (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  FW M n 0 i + FW M n i 0 \\<le> (0::'a)\n  FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0\n  (0::'a) \\<le> FW M n 0 0", "show \"?M' 0 i + ?M' i 0 = 0\""], ["proof (prove)\nusing this:\n  FW M n 0 i + FW M n i 0 \\<le> (0::'a)\n  FW M n 0 0 \\<le> FW M n 0 i + FW M n i 0\n  (0::'a) \\<le> FW M n 0 0\n\ngoal (1 subgoal):\n 1. FW M n 0 i + FW M n i 0 = (0::'a)", "by (auto simp: add_mono)"], ["proof (state)\nthis:\n  FW M n 0 i + FW M n i 0 = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_cyc_free_neutral:\n  \"cyc_free M n \\<Longrightarrow> \\<forall>k\\<le>n. M k k \\<le> 0 \\<Longrightarrow> \\<forall>i\\<le>n. M i i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i xs.\n                i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n                (0::'a) \\<le> len M i i xs;\n     \\<forall>k\\<le>n. M k k \\<le> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i\\<le>n. M i i = (0::'a)", "proof (clarify, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> (0::'a); i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = (0::'a)", "case (1 i)"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len M i i xs\n  \\<forall>k\\<le>n. M k k \\<le> (0::'a)\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> (0::'a); i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = (0::'a)", "note A = this"], ["proof (state)\nthis:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len M i i xs\n  \\<forall>k\\<le>n. M k k \\<le> (0::'a)\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> (0::'a); i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = (0::'a)", "then"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len M i i xs\n  \\<forall>k\\<le>n. M k k \\<le> (0::'a)\n  i \\<le> n", "have \"i \\<le> n \\<and> set [] \\<subseteq> {0..n}\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len M i i xs\n  \\<forall>k\\<le>n. M k k \\<le> (0::'a)\n  i \\<le> n\n\ngoal (1 subgoal):\n 1. i \\<le> n \\<and> set [] \\<subseteq> {0..n}", "by auto"], ["proof (state)\nthis:\n  i \\<le> n \\<and> set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> (0::'a); i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = (0::'a)", "with A(1)"], ["proof (chain)\npicking this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len M i i xs\n  i \\<le> n \\<and> set [] \\<subseteq> {0..n}", "have \"0 \\<le> M i i\""], ["proof (prove)\nusing this:\n  \\<forall>i xs.\n     i \\<le> n \\<and> set xs \\<subseteq> {0..n} \\<longrightarrow>\n     (0::'a) \\<le> len M i i xs\n  i \\<le> n \\<and> set [] \\<subseteq> {0..n}\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> M i i", "by fastforce"], ["proof (state)\nthis:\n  (0::'a) \\<le> M i i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<forall>i xs.\n                   i \\<le> n \\<and>\n                   set xs \\<subseteq> {0..n} \\<longrightarrow>\n                   (0::'a) \\<le> len M i i xs;\n        \\<forall>k\\<le>n. M k k \\<le> (0::'a); i \\<le> n\\<rbrakk>\n       \\<Longrightarrow> M i i = (0::'a)", "with A(2) \\<open>i \\<le> n\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>n. M k k \\<le> (0::'a)\n  i \\<le> n\n  (0::'a) \\<le> M i i", "show \"M i i = 0\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>n. M k k \\<le> (0::'a)\n  i \\<le> n\n  (0::'a) \\<le> M i i\n\ngoal (1 subgoal):\n 1. M i i = (0::'a)", "by auto"], ["proof (state)\nthis:\n  M i i = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_upd_canonical_subs_id:\n  \"canonical_subs n {k} M \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> fw_upd M k i j = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw_upd M k i j = M", "proof (auto simp: fw_upd_def upd_def less_eq[symmetric] min.coboundedI2, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "case 1"], ["proof (state)\nthis:\n  canonical_subs n {k} M\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "then"], ["proof (chain)\npicking this:\n  canonical_subs n {k} M\n  i \\<le> n\n  j \\<le> n", "have \"M i j \\<le> M i k + M k j\""], ["proof (prove)\nusing this:\n  canonical_subs n {k} M\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i k + M k j", "unfolding canonical_subs_def"], ["proof (prove)\nusing this:\n  \\<forall>i j ka.\n     i \\<le> n \\<and> ka \\<le> n \\<and> j \\<in> {k} \\<longrightarrow>\n     M i ka \\<le> M i j + M j ka\n  i \\<le> n\n  j \\<le> n\n\ngoal (1 subgoal):\n 1. M i j \\<le> M i k + M k j", "by auto"], ["proof (state)\nthis:\n  M i j \\<le> M i k + M k j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "then"], ["proof (chain)\npicking this:\n  M i j \\<le> M i k + M k j", "have \"min (M i j) (M i k + M k j) = M i j\""], ["proof (prove)\nusing this:\n  M i j \\<le> M i k + M k j\n\ngoal (1 subgoal):\n 1. min (M i j) (M i k + M k j) = M i j", "by (simp split: split_min)"], ["proof (state)\nthis:\n  min (M i j) (M i k + M k j) = M i j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n\\<rbrakk>\n    \\<Longrightarrow> M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "thus ?case"], ["proof (prove)\nusing this:\n  min (M i j) (M i k + M k j) = M i j\n\ngoal (1 subgoal):\n 1. M(i := (M i)(j := min (M i j) (M i k + M k j))) = M", "by force"], ["proof (state)\nthis:\n  M(i := (M i)(j := min (M i j) (M i k + M k j))) = M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_upd_canonical_id:\n  \"canonical M n \\<Longrightarrow> i \\<le> n \\<Longrightarrow> j \\<le> n \\<Longrightarrow> k \\<le> n \\<Longrightarrow> fw_upd M k i j = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw_upd M k i j = M", "using fw_upd_canonical_subs_id[of n k M i j]"], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw_upd M k i j = M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw_upd M k i j = M", "unfolding canonical_subs_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>i j ka.\n              i \\<le> n \\<and>\n              ka \\<le> n \\<and> j \\<in> {k} \\<longrightarrow>\n              M i ka \\<le> M i j + M j ka;\n   i \\<le> n; j \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fw_upd M k i j = M\n\ngoal (1 subgoal):\n 1. \\<lbrakk>canonical M n; i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n    \\<Longrightarrow> fw_upd M k i j = M", "by auto"], ["", "lemma fwi_canonical_id:\n  \"fwi M n k i j = M\" if \"canonical_subs n {k} M\" \"i \\<le> n\" \"j \\<le> n\" \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fwi M n k i j = M", "using that"], ["proof (prove)\nusing this:\n  canonical_subs n {k} M\n  i \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fwi M n k i j = M", "proof (induction i arbitrary: j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>canonical_subs n {k} M; 0 \\<le> n; j \\<le> n;\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k 0 j = M\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi M n k i j = M;\n        canonical_subs n {k} M; Suc i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k (Suc i) j = M", "case 0"], ["proof (state)\nthis:\n  canonical_subs n {k} M\n  0 \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>canonical_subs n {k} M; 0 \\<le> n; j \\<le> n;\n        k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k 0 j = M\n 2. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi M n k i j = M;\n        canonical_subs n {k} M; Suc i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k (Suc i) j = M", "then"], ["proof (chain)\npicking this:\n  canonical_subs n {k} M\n  0 \\<le> n\n  j \\<le> n\n  k \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  canonical_subs n {k} M\n  0 \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fwi M n k 0 j = M", "by (induction j) (auto intro: fw_upd_canonical_subs_id)"], ["proof (state)\nthis:\n  fwi M n k 0 j = M\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi M n k i j = M;\n        canonical_subs n {k} M; Suc i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k (Suc i) j = M", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi M n k i j = M;\n        canonical_subs n {k} M; Suc i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k (Suc i) j = M", "case Suc"], ["proof (state)\nthis:\n  \\<lbrakk>canonical_subs n {k} M; i_ \\<le> n; ?j \\<le> n;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi M n k i_ ?j = M\n  canonical_subs n {k} M\n  Suc i_ \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>canonical_subs n {k} M; i \\<le> n; j \\<le> n;\n                    k \\<le> n\\<rbrakk>\n                   \\<Longrightarrow> fwi M n k i j = M;\n        canonical_subs n {k} M; Suc i \\<le> n; j \\<le> n; k \\<le> n\\<rbrakk>\n       \\<Longrightarrow> fwi M n k (Suc i) j = M", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>canonical_subs n {k} M; i_ \\<le> n; ?j \\<le> n;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi M n k i_ ?j = M\n  canonical_subs n {k} M\n  Suc i_ \\<le> n\n  j \\<le> n\n  k \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>canonical_subs n {k} M; i_ \\<le> n; ?j \\<le> n;\n   k \\<le> n\\<rbrakk>\n  \\<Longrightarrow> fwi M n k i_ ?j = M\n  canonical_subs n {k} M\n  Suc i_ \\<le> n\n  j \\<le> n\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fwi M n k (Suc i_) j = M", "by (induction j) (auto intro: fw_upd_canonical_subs_id)"], ["proof (state)\nthis:\n  fwi M n k (Suc i_) j = M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fw_canonical_id:\n  \"fw M n k = M\" if \"canonical_subs n {0..k} M\" \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fw M n k = M", "using that"], ["proof (prove)\nusing this:\n  canonical_subs n {0..k} M\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. fw M n k = M", "by (induction k) (auto simp: canonical_subs_def fwi_canonical_id)"], ["", "lemmas FW_canonical_id = fw_canonical_id[OF _ order.refl, unfolded canonical_alt_def[symmetric]]"], ["", "definition \"FWI M n k \\<equiv> fwi M n k n n\""], ["", "text \\<open>The characteristic property of \\<open>fwi\\<close>.\\<close>"], ["", "theorem fwi_characteristic:\n  \"canonical_subs n (I \\<union> {k::nat}) (FWI M n k) \\<or> (\\<exists> i \\<le> n. FWI M n k i i < 0)\" if\n  \"canonical_subs n I M\" \"I \\<subseteq> {0..n}\" \"k \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))", "proof (cases \"0 \\<le> M k k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> M k k \\<Longrightarrow>\n    canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))\n 2. \\<not> (0::'a) \\<le> M k k \\<Longrightarrow>\n    canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))", "case True"], ["proof (state)\nthis:\n  (0::'a) \\<le> M k k\n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> M k k \\<Longrightarrow>\n    canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))\n 2. \\<not> (0::'a) \\<le> M k k \\<Longrightarrow>\n    canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))", "from fwi_canonical_extend[OF that(1,2) this \\<open>k \\<le> n\\<close>]"], ["proof (chain)\npicking this:\n  canonical_subs n (I \\<union> {k}) (fwi M n k n n)", "show ?thesis"], ["proof (prove)\nusing this:\n  canonical_subs n (I \\<union> {k}) (fwi M n k n n)\n\ngoal (1 subgoal):\n 1. canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))", "unfolding FWI_def"], ["proof (prove)\nusing this:\n  canonical_subs n (I \\<union> {k}) (fwi M n k n n)\n\ngoal (1 subgoal):\n 1. canonical_subs n (I \\<union> {k}) (fwi M n k n n) \\<or>\n    (\\<exists>i\\<le>n. fwi M n k n n i i < (0::'a))", ".."], ["proof (state)\nthis:\n  canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n  (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> M k k \\<Longrightarrow>\n    canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> M k k \\<Longrightarrow>\n    canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))", "case False"], ["proof (state)\nthis:\n  \\<not> (0::'a) \\<le> M k k\n\ngoal (1 subgoal):\n 1. \\<not> (0::'a) \\<le> M k k \\<Longrightarrow>\n    canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))", "with \\<open>k \\<le> n\\<close> fwi_mono[OF \\<open>k \\<le> n\\<close> \\<open>k \\<le> n\\<close>, of M k n n]"], ["proof (chain)\npicking this:\n  k \\<le> n\n  fwi M n k n n k k \\<le> M k k\n  \\<not> (0::'a) \\<le> M k k", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<le> n\n  fwi M n k n n k k \\<le> M k k\n  \\<not> (0::'a) \\<le> M k k\n\ngoal (1 subgoal):\n 1. canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n    (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))", "unfolding FWI_def"], ["proof (prove)\nusing this:\n  k \\<le> n\n  fwi M n k n n k k \\<le> M k k\n  \\<not> (0::'a) \\<le> M k k\n\ngoal (1 subgoal):\n 1. canonical_subs n (I \\<union> {k}) (fwi M n k n n) \\<or>\n    (\\<exists>i\\<le>n. fwi M n k n n i i < (0::'a))", "by fastforce"], ["proof (state)\nthis:\n  canonical_subs n (I \\<union> {k}) (FWI M n k) \\<or>\n  (\\<exists>i\\<le>n. FWI M n k i i < (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* End of theory *)"]]}