{"file_name": "/home/qj213/afp-2021-10-22/thys/IP_Addresses/IP_Address_toString.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/IP_Addresses", "problem_names": ["lemma \"ipaddr_generic_toString (ipv4addr_of_dotdecimal (192,168,0,1)) = ''[IP address (32 bit): 3232235521]''\"", "lemma \"ipv4addr_toString (ipv4addr_of_dotdecimal (192, 168, 0, 1)) = ''192.168.0.1''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0x2001 0xDB8 0x0 0x0 0x8 0x800 0x200C 0x417A))\n              = ''2001:db8::8:800:200c:417a''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0xFF01 0x0 0x0 0x0 0x0 0x0 0x0 0x0101)) =\n              ''ff01::101''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0 0 0 0 0x8 0x800 0x200C 0x417A)) =\n               ''::8:800:200c:417a''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0x2001 0xDB8 0 0 0 0 0 0)) =\n               ''2001:db8::''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0xFF00 0 0 0 0 0 0 0)) =\n               ''ff00::''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0xFE80 0 0 0 0 0 0 0)) =\n               ''fe80::''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0 0 0 0 0 0 0 0)) =\n               ''::''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0 0 0 0 0 0 0 1)) =\n               ''::1''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0xdb8 0x0 0x0 0x0 0x0 0x0 0x1)) =\n              ''2001:db8::1''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0xdb8 0x0 0x0 0x0 0x0 0x2 0x1)) =\n              ''2001:db8::2:1''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0xdb8 0x0 0x1 0x1 0x1 0x1 0x1)) =\n              ''2001:db8:0:1:1:1:1:1''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0x0 0x0 0x1 0x0 0x0 0x0 0x1)) =\n              ''2001:0:0:1::1''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0xdb8 0x0 0x0 0x1 0x0 0x0 0x1)) =\n              ''2001:db8::1:0:0:1''\"", "lemma \"ipv6addr_toString max_ipv6_addr = ''ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff''\"", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n           (IPv6AddrPreferred 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)) =\n              ''ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff''\""], "translations": [["", "lemma \"ipaddr_generic_toString (ipv4addr_of_dotdecimal (192,168,0,1)) = ''[IP address (32 bit): 3232235521]''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipaddr_generic_toString (ipv4addr_of_dotdecimal (192, 168, 0, 1)) =\n    ''[IP address (32 bit): 3232235521]''", "by eval"], ["", "subsection\\<open>IPv4 Pretty Printing\\<close>"], ["", "fun dotteddecimal_toString :: \"nat \\<times> nat \\<times> nat \\<times> nat \\<Rightarrow> string\" where\n    \"dotteddecimal_toString (a,b,c,d) =\n      string_of_nat a@''.''@string_of_nat b@''.''@string_of_nat c@''.''@string_of_nat d\""], ["", "definition ipv4addr_toString :: \"ipv4addr \\<Rightarrow> string\" where\n    \"ipv4addr_toString ip = dotteddecimal_toString (dotdecimal_of_ipv4addr ip)\""], ["", "lemma \"ipv4addr_toString (ipv4addr_of_dotdecimal (192, 168, 0, 1)) = ''192.168.0.1''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv4addr_toString (ipv4addr_of_dotdecimal (192, 168, 0, 1)) =\n    ''192.168.0.1''", "by eval"], ["", "text\\<open>Correctness Theorems:\\<close>"], ["", "thm dotdecimal_of_ipv4addr_ipv4addr_of_dotdecimal\n      ipv4addr_of_dotdecimal_dotdecimal_of_ipv4addr"], ["", "subsection\\<open>IPv6 Pretty Printing\\<close>"], ["", "definition ipv6addr_toString :: \"ipv6addr \\<Rightarrow> string\" where\n    \"ipv6addr_toString ip = (\n      let partslist = ipv6_preferred_to_compressed (int_to_ipv6preferred ip);\n          \\<comment> \\<open>add empty lists to the beginning and end if omission occurs at start/end\\<close>\n          \\<comment> \\<open>to join over \\<^verbatim>\\<open>:\\<close> properly\\<close>\n          fix_start = (\\<lambda>ps. case ps of None#_ \\<Rightarrow> None#ps | _ \\<Rightarrow> ps);\n          fix_end = (\\<lambda>ps. case rev ps of None#_ \\<Rightarrow> ps@[None] | _ \\<Rightarrow> ps)\n      in list_separated_toString '':''\n        (\\<lambda>pt. case pt of None \\<Rightarrow> ''''\n                      |  Some w \\<Rightarrow> hex_string_of_word0 w)\n        ((fix_end \\<circ> fix_start) partslist)\n      )\""], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0x2001 0xDB8 0x0 0x0 0x8 0x800 0x200C 0x417A))\n              = ''2001:db8::8:800:200c:417a''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int\n       (IPv6AddrPreferred 8193 3512 0 0 8 2048 8204 16762)) =\n    ''2001:db8::8:800:200c:417a''", "by eval \\<comment> \\<open>a unicast address\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0xFF01 0x0 0x0 0x0 0x0 0x0 0x0 0x0101)) =\n              ''ff01::101''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 65281 0 0 0 0 0 0 257)) =\n    ''ff01::101''", "by eval \\<comment> \\<open>a multicast address\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0 0 0 0 0x8 0x800 0x200C 0x417A)) =\n               ''::8:800:200c:417a''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 0 0 0 0 8 2048 8204 16762)) =\n    ''::8:800:200c:417a''", "by eval"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0x2001 0xDB8 0 0 0 0 0 0)) =\n               ''2001:db8::''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 8193 3512 0 0 0 0 0 0)) =\n    ''2001:db8::''", "by eval"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0xFF00 0 0 0 0 0 0 0)) =\n               ''ff00::''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 65280 0 0 0 0 0 0 0)) =\n    ''ff00::''", "by eval \\<comment> \\<open>Multicast\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0xFE80 0 0 0 0 0 0 0)) =\n               ''fe80::''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 65152 0 0 0 0 0 0 0)) =\n    ''fe80::''", "by eval \\<comment> \\<open>Link-Local unicast\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0 0 0 0 0 0 0 0)) =\n               ''::''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 0 0 0 0 0 0 0 0)) =\n    ''::''", "by eval \\<comment> \\<open>unspecified address\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int (IPv6AddrPreferred 0 0 0 0 0 0 0 1)) =\n               ''::1''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 0 0 0 0 0 0 0 1)) =\n    ''::1''", "by eval \\<comment> \\<open>loopback address\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0xdb8 0x0 0x0 0x0 0x0 0x0 0x1)) =\n              ''2001:db8::1''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 8193 3512 0 0 0 0 0 1)) =\n    ''2001:db8::1''", "by eval \\<comment> \\<open>Section 4.1 of RFC5952\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0xdb8 0x0 0x0 0x0 0x0 0x2 0x1)) =\n              ''2001:db8::2:1''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 8193 3512 0 0 0 0 2 1)) =\n    ''2001:db8::2:1''", "by eval \\<comment> \\<open>Section 4.2.1 of RFC5952\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0xdb8 0x0 0x1 0x1 0x1 0x1 0x1)) =\n              ''2001:db8:0:1:1:1:1:1''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 8193 3512 0 1 1 1 1 1)) =\n    ''2001:db8:0:1:1:1:1:1''", "by eval \\<comment> \\<open>Section 4.2.2 of RFC5952\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0x0 0x0 0x1 0x0 0x0 0x0 0x1)) =\n              ''2001:0:0:1::1''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 8193 0 0 1 0 0 0 1)) =\n    ''2001:0:0:1::1''", "by eval \\<comment> \\<open>Section 4.2.3 of RFC5952\\<close>"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n          (IPv6AddrPreferred 0x2001 0xdb8 0x0 0x0 0x1 0x0 0x0 0x1)) =\n              ''2001:db8::1:0:0:1''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int (IPv6AddrPreferred 8193 3512 0 0 1 0 0 1)) =\n    ''2001:db8::1:0:0:1''", "by eval \\<comment> \\<open>Section 4.2.3 of RFC5952\\<close>"], ["", "lemma \"ipv6addr_toString max_ipv6_addr = ''ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString max_ipv6_addr =\n    ''ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff''", "by eval"], ["", "lemma \"ipv6addr_toString (ipv6preferred_to_int\n           (IPv6AddrPreferred 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)) =\n              ''ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ipv6addr_toString\n     (ipv6preferred_to_int\n       (IPv6AddrPreferred 65535 65535 65535 65535 65535 65535 65535\n         65535)) =\n    ''ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff''", "by eval"], ["", "text\\<open>Correctness Theorems:\\<close>"], ["", "thm ipv6_preferred_to_compressed\n      ipv6_preferred_to_compressed_RFC_4291_format\n      ipv6_unparsed_compressed_to_preferred_identity1\n      ipv6_unparsed_compressed_to_preferred_identity2\n      RFC_4291_format\n      ipv6preferred_to_int_int_to_ipv6preferred\n      int_to_ipv6preferred_ipv6preferred_to_int"], ["", "end"]]}