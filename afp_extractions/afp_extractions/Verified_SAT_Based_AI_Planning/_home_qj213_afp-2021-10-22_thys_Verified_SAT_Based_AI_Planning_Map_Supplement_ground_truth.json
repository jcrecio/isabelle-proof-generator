{"file_name": "/home/qj213/afp-2021-10-22/thys/Verified_SAT_Based_AI_Planning/Map_Supplement.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Verified_SAT_Based_AI_Planning", "problem_names": ["lemma map_of_defined_if_constructed_from_list_of_constant_assignments:\n  \"l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow> \\<forall>x \\<in> set xs. (map_of l) x = Some a\"", "lemma map_of_from_function_graph_is_some_if:\n  fixes f :: \"'a \\<Rightarrow> 'b\"\n  assumes \"set xs \\<noteq> {}\"\n   and \"x \\<in> set xs\"\n  shows \"(map_of (map (\\<lambda>x. (x, f x)) xs)) x = Some (f x)\"", "lemma foldl_map_append_is_some_if:\n  assumes \"b x = Some y \\<or> (\\<exists>m \\<in> set ms. m x = Some y)\" \n    and \"\\<forall>m' \\<in> set ms. m' x = Some y \\<or> m' x = None\"\n  shows \"foldl (++) b ms x = Some y\"", "lemma map_of_constant_assignments_defined_if:\n  assumes \"\\<forall>(v, a) \\<in> set l. \\<forall>(v', a') \\<in> set l. v \\<noteq> v' \\<or> a = a'\"\n    and \"(v, a) \\<in> set l\" \n  shows \"map_of l v = Some a\""], "translations": [["", "lemma map_of_defined_if_constructed_from_list_of_constant_assignments:\n  \"l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow> \\<forall>x \\<in> set xs. (map_of l) x = Some a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow>\n    \\<forall>x\\<in>set xs. map_of l x = Some a", "proof (induction xs arbitrary: l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = map (\\<lambda>x. (x, a)) [] \\<Longrightarrow>\n       \\<forall>x\\<in>set []. map_of l x = Some a\n 2. \\<And>aa xs l.\n       \\<lbrakk>\\<And>l.\n                   l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow>\n                   \\<forall>x\\<in>set xs. map_of l x = Some a;\n        l = map (\\<lambda>x. (x, a)) (aa # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set (aa # xs). map_of l x = Some a", "case (Cons x xs)"], ["proof (state)\nthis:\n  ?l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow>\n  \\<forall>x\\<in>set xs. map_of ?l x = Some a\n  l = map (\\<lambda>x. (x, a)) (x # xs)\n\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = map (\\<lambda>x. (x, a)) [] \\<Longrightarrow>\n       \\<forall>x\\<in>set []. map_of l x = Some a\n 2. \\<And>aa xs l.\n       \\<lbrakk>\\<And>l.\n                   l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow>\n                   \\<forall>x\\<in>set xs. map_of l x = Some a;\n        l = map (\\<lambda>x. (x, a)) (aa # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set (aa # xs). map_of l x = Some a", "let ?l' = \"map (\\<lambda>v. (v, a)) xs\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = map (\\<lambda>x. (x, a)) [] \\<Longrightarrow>\n       \\<forall>x\\<in>set []. map_of l x = Some a\n 2. \\<And>aa xs l.\n       \\<lbrakk>\\<And>l.\n                   l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow>\n                   \\<forall>x\\<in>set xs. map_of l x = Some a;\n        l = map (\\<lambda>x. (x, a)) (aa # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set (aa # xs). map_of l x = Some a", "from Cons.prems(1)"], ["proof (chain)\npicking this:\n  l = map (\\<lambda>x. (x, a)) (x # xs)", "have \"l = (x, a) # map (\\<lambda>v. (v, a)) xs\""], ["proof (prove)\nusing this:\n  l = map (\\<lambda>x. (x, a)) (x # xs)\n\ngoal (1 subgoal):\n 1. l = (x, a) # map (\\<lambda>v. (v, a)) xs", "by force"], ["proof (state)\nthis:\n  l = (x, a) # map (\\<lambda>v. (v, a)) xs\n\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = map (\\<lambda>x. (x, a)) [] \\<Longrightarrow>\n       \\<forall>x\\<in>set []. map_of l x = Some a\n 2. \\<And>aa xs l.\n       \\<lbrakk>\\<And>l.\n                   l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow>\n                   \\<forall>x\\<in>set xs. map_of l x = Some a;\n        l = map (\\<lambda>x. (x, a)) (aa # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set (aa # xs). map_of l x = Some a", "moreover"], ["proof (state)\nthis:\n  l = (x, a) # map (\\<lambda>v. (v, a)) xs\n\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = map (\\<lambda>x. (x, a)) [] \\<Longrightarrow>\n       \\<forall>x\\<in>set []. map_of l x = Some a\n 2. \\<And>aa xs l.\n       \\<lbrakk>\\<And>l.\n                   l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow>\n                   \\<forall>x\\<in>set xs. map_of l x = Some a;\n        l = map (\\<lambda>x. (x, a)) (aa # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set (aa # xs). map_of l x = Some a", "have \"\\<forall>v \\<in> set xs. (map_of ?l') v = Some a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>set xs. map_of (map (\\<lambda>v. (v, a)) xs) v = Some a", "using Cons.IH[where l=\"?l'\"]"], ["proof (prove)\nusing this:\n  map (\\<lambda>v. (v, a)) xs =\n  map (\\<lambda>x. (x, a)) xs \\<Longrightarrow>\n  \\<forall>x\\<in>set xs. map_of (map (\\<lambda>v. (v, a)) xs) x = Some a\n\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>set xs. map_of (map (\\<lambda>v. (v, a)) xs) v = Some a", "by blast"], ["proof (state)\nthis:\n  \\<forall>v\\<in>set xs. map_of (map (\\<lambda>v. (v, a)) xs) v = Some a\n\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = map (\\<lambda>x. (x, a)) [] \\<Longrightarrow>\n       \\<forall>x\\<in>set []. map_of l x = Some a\n 2. \\<And>aa xs l.\n       \\<lbrakk>\\<And>l.\n                   l = map (\\<lambda>x. (x, a)) xs \\<Longrightarrow>\n                   \\<forall>x\\<in>set xs. map_of l x = Some a;\n        l = map (\\<lambda>x. (x, a)) (aa # xs)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>set (aa # xs). map_of l x = Some a", "ultimately"], ["proof (chain)\npicking this:\n  l = (x, a) # map (\\<lambda>v. (v, a)) xs\n  \\<forall>v\\<in>set xs. map_of (map (\\<lambda>v. (v, a)) xs) v = Some a", "show ?case"], ["proof (prove)\nusing this:\n  l = (x, a) # map (\\<lambda>v. (v, a)) xs\n  \\<forall>v\\<in>set xs. map_of (map (\\<lambda>v. (v, a)) xs) v = Some a\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (x # xs). map_of l x = Some a", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set (x # xs). map_of l x = Some a\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l = map (\\<lambda>x. (x, a)) [] \\<Longrightarrow>\n       \\<forall>x\\<in>set []. map_of l x = Some a", "qed auto\n\n\\<comment> \\<open> NOTE Function graph is the set of pairs (x, f x) for a (total) function f. \\<close>\n\\<comment> \\<open> TODO Remove the first premise (follows from the second). \\<close>"], ["", "lemma map_of_from_function_graph_is_some_if:\n  fixes f :: \"'a \\<Rightarrow> 'b\"\n  assumes \"set xs \\<noteq> {}\"\n   and \"x \\<in> set xs\"\n  shows \"(map_of (map (\\<lambda>x. (x, f x)) xs)) x = Some (f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) xs) x = Some (f x)", "using assms"], ["proof (prove)\nusing this:\n  set xs \\<noteq> {}\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) xs) x = Some (f x)", "proof (induction xs arbitrary: f x)\n  \\<comment> \\<open> NOTE Base case follows trivially from violation of assumption \\<open>set xs \\<noteq> {}\\<close>. \\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>set [] \\<noteq> {}; x \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) []) x =\n                         Some (f x)\n 2. \\<And>a xs f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>set xs \\<noteq> {}; x \\<in> set xs\\<rbrakk>\n                   \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) xs)\nx =\n                                     Some (f x);\n        set (a # xs) \\<noteq> {}; x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                         Some (f x)", "case (Cons a xs)"], ["proof (state)\nthis:\n  \\<lbrakk>set xs \\<noteq> {}; ?x \\<in> set xs\\<rbrakk>\n  \\<Longrightarrow> map_of (map (\\<lambda>x. (x, ?f x)) xs) ?x =\n                    Some (?f ?x)\n  set (a # xs) \\<noteq> {}\n  x \\<in> set (a # xs)\n\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>set [] \\<noteq> {}; x \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) []) x =\n                         Some (f x)\n 2. \\<And>a xs f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>set xs \\<noteq> {}; x \\<in> set xs\\<rbrakk>\n                   \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) xs)\nx =\n                                     Some (f x);\n        set (a # xs) \\<noteq> {}; x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                         Some (f x)", "thm Cons"], ["proof (state)\nthis:\n  \\<lbrakk>set xs \\<noteq> {}; ?x \\<in> set xs\\<rbrakk>\n  \\<Longrightarrow> map_of (map (\\<lambda>x. (x, ?f x)) xs) ?x =\n                    Some (?f ?x)\n  set (a # xs) \\<noteq> {}\n  x \\<in> set (a # xs)\n\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>set [] \\<noteq> {}; x \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) []) x =\n                         Some (f x)\n 2. \\<And>a xs f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>set xs \\<noteq> {}; x \\<in> set xs\\<rbrakk>\n                   \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) xs)\nx =\n                                     Some (f x);\n        set (a # xs) \\<noteq> {}; x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                         Some (f x)", "let ?m = \"map_of (map (\\<lambda>x. (x, f x)) xs)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>set [] \\<noteq> {}; x \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) []) x =\n                         Some (f x)\n 2. \\<And>a xs f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>set xs \\<noteq> {}; x \\<in> set xs\\<rbrakk>\n                   \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) xs)\nx =\n                                     Some (f x);\n        set (a # xs) \\<noteq> {}; x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                         Some (f x)", "have a: \"map_of (map (\\<lambda>x. (x, f x)) (Cons a xs)) = ?m(a \\<mapsto> f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) (a # xs)) =\n    map_of (map (\\<lambda>x. (x, f x)) xs)(a \\<mapsto> f a)", "unfolding map_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. rec_list Map.empty (\\<lambda>p ps psa. psa(fst p \\<mapsto> snd p))\n     (map (\\<lambda>x. (x, f x)) (a # xs)) =\n    rec_list Map.empty (\\<lambda>p ps psa. psa(fst p \\<mapsto> snd p))\n     (map (\\<lambda>x. (x, f x)) xs)\n    (a \\<mapsto> f a)", "by simp"], ["proof (state)\nthis:\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) =\n  map_of (map (\\<lambda>x. (x, f x)) xs)(a \\<mapsto> f a)\n\ngoal (2 subgoals):\n 1. \\<And>f x.\n       \\<lbrakk>set [] \\<noteq> {}; x \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) []) x =\n                         Some (f x)\n 2. \\<And>a xs f x.\n       \\<lbrakk>\\<And>f x.\n                   \\<lbrakk>set xs \\<noteq> {}; x \\<in> set xs\\<rbrakk>\n                   \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) xs)\nx =\n                                     Some (f x);\n        set (a # xs) \\<noteq> {}; x \\<in> set (a # xs)\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                         Some (f x)", "thus ?case"], ["proof (prove)\nusing this:\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) =\n  map_of (map (\\<lambda>x. (x, f x)) xs)(a \\<mapsto> f a)\n\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)", "proof(cases \"x = a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>map_of (map (\\<lambda>x. (x, f x)) (a # xs)) =\n             map_of (map (\\<lambda>x. (x, f x)) xs)(a \\<mapsto> f a);\n     x = a\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)\n 2. \\<lbrakk>map_of (map (\\<lambda>x. (x, f x)) (a # xs)) =\n             map_of (map (\\<lambda>x. (x, f x)) xs)(a \\<mapsto> f a);\n     x \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>map_of (map (\\<lambda>x. (x, f x)) (a # xs)) =\n             map_of (map (\\<lambda>x. (x, f x)) xs)(a \\<mapsto> f a);\n     x = a\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)\n 2. \\<lbrakk>map_of (map (\\<lambda>x. (x, f x)) (a # xs)) =\n             map_of (map (\\<lambda>x. (x, f x)) xs)(a \\<mapsto> f a);\n     x \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)", "proof (cases \"set xs = {}\")\n            \\<comment> \\<open> NOTE Follows from contradiction (\\<open>x \\<in> set (Cons a xs) \\<and> set xs = {} \\<and> x \\<noteq> a \\<equiv> \\<bottom>\\<close>)\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> a; set xs = {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)\n 2. \\<lbrakk>x \\<noteq> a; set xs \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "case True"], ["proof (state)\nthis:\n  set xs = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> a; set xs = {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)\n 2. \\<lbrakk>x \\<noteq> a; set xs \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  set xs = {}\n\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)", "using Cons.prems(2)"], ["proof (prove)\nusing this:\n  set xs = {}\n  x \\<in> set (a # xs)\n\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)", "by fastforce"], ["proof (state)\nthis:\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> a; set xs \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> a; set xs \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "case False"], ["proof (state)\nthis:\n  set xs \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> a; set xs \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "then"], ["proof (chain)\npicking this:\n  set xs \\<noteq> {}", "have \"x \\<in> set xs\""], ["proof (prove)\nusing this:\n  set xs \\<noteq> {}\n\ngoal (1 subgoal):\n 1. x \\<in> set xs", "using \\<open>x \\<noteq> a\\<close> Cons.prems(2)"], ["proof (prove)\nusing this:\n  set xs \\<noteq> {}\n  x \\<noteq> a\n  x \\<in> set (a # xs)\n\ngoal (1 subgoal):\n 1. x \\<in> set xs", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> a; set xs \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "moreover"], ["proof (state)\nthis:\n  x \\<in> set xs\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> a; set xs \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "have \"map_of (map (\\<lambda>x. (x, f x)) (Cons a xs)) x = ?m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n    map_of (map (\\<lambda>x. (x, f x)) xs) x", "using \\<open>x \\<noteq> a\\<close>"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n    map_of (map (\\<lambda>x. (x, f x)) xs) x", "by fastforce"], ["proof (state)\nthis:\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n  map_of (map (\\<lambda>x. (x, f x)) xs) x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> a; set xs \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> set xs\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n  map_of (map (\\<lambda>x. (x, f x)) xs) x", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> set xs\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n  map_of (map (\\<lambda>x. (x, f x)) xs) x\n\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)", "using Cons.IH[OF False]"], ["proof (prove)\nusing this:\n  x \\<in> set xs\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n  map_of (map (\\<lambda>x. (x, f x)) xs) x\n  ?x \\<in> set xs \\<Longrightarrow>\n  map_of (map (\\<lambda>x. (x, ?f x)) xs) ?x = Some (?f ?x)\n\ngoal (1 subgoal):\n 1. map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)", "by presburger"], ["proof (state)\nthis:\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>map_of (map (\\<lambda>x. (x, f x)) (a # xs)) =\n             map_of (map (\\<lambda>x. (x, f x)) xs)(a \\<mapsto> f a);\n     x = a\\<rbrakk>\n    \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x =\n                      Some (f x)", "qed force"], ["proof (state)\nthis:\n  map_of (map (\\<lambda>x. (x, f x)) (a # xs)) x = Some (f x)\n\ngoal (1 subgoal):\n 1. \\<And>f x.\n       \\<lbrakk>set [] \\<noteq> {}; x \\<in> set []\\<rbrakk>\n       \\<Longrightarrow> map_of (map (\\<lambda>x. (x, f x)) []) x =\n                         Some (f x)", "qed blast"], ["", "lemma foldl_map_append_is_some_if:\n  assumes \"b x = Some y \\<or> (\\<exists>m \\<in> set ms. m x = Some y)\" \n    and \"\\<forall>m' \\<in> set ms. m' x = Some y \\<or> m' x = None\"\n  shows \"foldl (++) b ms x = Some y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. foldl (++) b ms x = Some y", "using assms"], ["proof (prove)\nusing this:\n  b x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n  \\<forall>m'\\<in>set ms. m' x = Some y \\<or> m' x = None\n\ngoal (1 subgoal):\n 1. foldl (++) b ms x = Some y", "proof (induction ms arbitrary: b)\n  \\<comment> \\<open> NOTE Induction base case violates first assumption (we have at least one element in ms \n    and hence \\<open>ms \\<noteq> []\\<close>). \\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>b x = Some y \\<or> (\\<exists>m\\<in>set []. m x = Some y);\n        \\<forall>m'\\<in>set []. m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b [] x = Some y\n 2. \\<And>a ms b.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b x = Some y \\<or>\n                            (\\<exists>m\\<in>set ms. m x = Some y);\n                    \\<forall>m'\\<in>set ms.\n                       m' x = Some y \\<or> m' x = None\\<rbrakk>\n                   \\<Longrightarrow> foldl (++) b ms x = Some y;\n        b x = Some y \\<or> (\\<exists>m\\<in>set (a # ms). m x = Some y);\n        \\<forall>m'\\<in>set (a # ms).\n           m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b (a # ms) x = Some y", "case (Cons a ms)"], ["proof (state)\nthis:\n  \\<lbrakk>?b x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y);\n   \\<forall>m'\\<in>set ms. m' x = Some y \\<or> m' x = None\\<rbrakk>\n  \\<Longrightarrow> foldl (++) ?b ms x = Some y\n  b x = Some y \\<or> (\\<exists>m\\<in>set (a # ms). m x = Some y)\n  \\<forall>m'\\<in>set (a # ms). m' x = Some y \\<or> m' x = None\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>b x = Some y \\<or> (\\<exists>m\\<in>set []. m x = Some y);\n        \\<forall>m'\\<in>set []. m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b [] x = Some y\n 2. \\<And>a ms b.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b x = Some y \\<or>\n                            (\\<exists>m\\<in>set ms. m x = Some y);\n                    \\<forall>m'\\<in>set ms.\n                       m' x = Some y \\<or> m' x = None\\<rbrakk>\n                   \\<Longrightarrow> foldl (++) b ms x = Some y;\n        b x = Some y \\<or> (\\<exists>m\\<in>set (a # ms). m x = Some y);\n        \\<forall>m'\\<in>set (a # ms).\n           m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b (a # ms) x = Some y", "consider (b_is_some_y) \"b x = Some y\" \n    | (m_is_some_y) \"\\<exists>m \\<in> set (a # ms). m x = Some y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>b x = Some y \\<Longrightarrow> thesis;\n     \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using Cons.prems(1)"], ["proof (prove)\nusing this:\n  b x = Some y \\<or> (\\<exists>m\\<in>set (a # ms). m x = Some y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>b x = Some y \\<Longrightarrow> thesis;\n     \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>b x = Some y \\<Longrightarrow> ?thesis;\n   \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>b x = Some y \\<or> (\\<exists>m\\<in>set []. m x = Some y);\n        \\<forall>m'\\<in>set []. m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b [] x = Some y\n 2. \\<And>a ms b.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b x = Some y \\<or>\n                            (\\<exists>m\\<in>set ms. m x = Some y);\n                    \\<forall>m'\\<in>set ms.\n                       m' x = Some y \\<or> m' x = None\\<rbrakk>\n                   \\<Longrightarrow> foldl (++) b ms x = Some y;\n        b x = Some y \\<or> (\\<exists>m\\<in>set (a # ms). m x = Some y);\n        \\<forall>m'\\<in>set (a # ms).\n           m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b (a # ms) x = Some y", "hence \"(b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>b x = Some y \\<Longrightarrow> ?thesis;\n   \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. b x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n 2. \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "case b_is_some_y"], ["proof (state)\nthis:\n  b x = Some y\n\ngoal (2 subgoals):\n 1. b x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n 2. \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "moreover"], ["proof (state)\nthis:\n  b x = Some y\n\ngoal (2 subgoals):\n 1. b x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n 2. \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "have \"a x = Some y \\<or> a x = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a x = Some y \\<or> a x = None", "using Cons.prems(2)"], ["proof (prove)\nusing this:\n  \\<forall>m'\\<in>set (a # ms). m' x = Some y \\<or> m' x = None\n\ngoal (1 subgoal):\n 1. a x = Some y \\<or> a x = None", "by simp"], ["proof (state)\nthis:\n  a x = Some y \\<or> a x = None\n\ngoal (2 subgoals):\n 1. b x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n 2. \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "ultimately"], ["proof (chain)\npicking this:\n  b x = Some y\n  a x = Some y \\<or> a x = None", "show ?thesis"], ["proof (prove)\nusing this:\n  b x = Some y\n  a x = Some y \\<or> a x = None\n\ngoal (1 subgoal):\n 1. (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "using map_add_Some_iff[of b a x y]"], ["proof (prove)\nusing this:\n  b x = Some y\n  a x = Some y \\<or> a x = None\n  ((b ++ a) x = Some y) =\n  (a x = Some y \\<or> a x = None \\<and> b x = Some y)\n\ngoal (1 subgoal):\n 1. (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "by blast"], ["proof (state)\nthis:\n  (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "case m_is_some_y"], ["proof (state)\nthis:\n  \\<exists>m\\<in>set (a # ms). m x = Some y\n\ngoal (1 subgoal):\n 1. \\<exists>m\\<in>set (a # ms). m x = Some y \\<Longrightarrow>\n    (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "then"], ["proof (chain)\npicking this:\n  \\<exists>m\\<in>set (a # ms). m x = Some y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>m\\<in>set (a # ms). m x = Some y\n\ngoal (1 subgoal):\n 1. (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "proof (cases \"a x = Some y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>m\\<in>set (a # ms). m x = Some y;\n     a x = Some y\\<rbrakk>\n    \\<Longrightarrow> (b ++ a) x = Some y \\<or>\n                      (\\<exists>m\\<in>set ms. m x = Some y)\n 2. \\<lbrakk>\\<exists>m\\<in>set (a # ms). m x = Some y;\n     a x \\<noteq> Some y\\<rbrakk>\n    \\<Longrightarrow> (b ++ a) x = Some y \\<or>\n                      (\\<exists>m\\<in>set ms. m x = Some y)", "case False"], ["proof (state)\nthis:\n  a x \\<noteq> Some y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>m\\<in>set (a # ms). m x = Some y;\n     a x = Some y\\<rbrakk>\n    \\<Longrightarrow> (b ++ a) x = Some y \\<or>\n                      (\\<exists>m\\<in>set ms. m x = Some y)\n 2. \\<lbrakk>\\<exists>m\\<in>set (a # ms). m x = Some y;\n     a x \\<noteq> Some y\\<rbrakk>\n    \\<Longrightarrow> (b ++ a) x = Some y \\<or>\n                      (\\<exists>m\\<in>set ms. m x = Some y)", "then"], ["proof (chain)\npicking this:\n  a x \\<noteq> Some y", "obtain m where \"m \\<in> set ms\" and \"m x = Some y\""], ["proof (prove)\nusing this:\n  a x \\<noteq> Some y\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> set ms; m x = Some y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using m_is_some_y"], ["proof (prove)\nusing this:\n  a x \\<noteq> Some y\n  \\<exists>m\\<in>set (a # ms). m x = Some y\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> set ms; m x = Some y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "try0"], ["proof (prove)\nusing this:\n  a x \\<noteq> Some y\n  \\<exists>m\\<in>set (a # ms). m x = Some y\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> set ms; m x = Some y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  m \\<in> set ms\n  m x = Some y\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>m\\<in>set (a # ms). m x = Some y;\n     a x = Some y\\<rbrakk>\n    \\<Longrightarrow> (b ++ a) x = Some y \\<or>\n                      (\\<exists>m\\<in>set ms. m x = Some y)\n 2. \\<lbrakk>\\<exists>m\\<in>set (a # ms). m x = Some y;\n     a x \\<noteq> Some y\\<rbrakk>\n    \\<Longrightarrow> (b ++ a) x = Some y \\<or>\n                      (\\<exists>m\\<in>set ms. m x = Some y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  m \\<in> set ms\n  m x = Some y\n\ngoal (1 subgoal):\n 1. (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)", "by blast"], ["proof (state)\nthis:\n  (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>m\\<in>set (a # ms). m x = Some y;\n     a x = Some y\\<rbrakk>\n    \\<Longrightarrow> (b ++ a) x = Some y \\<or>\n                      (\\<exists>m\\<in>set ms. m x = Some y)", "qed simp"], ["proof (state)\nthis:\n  (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>b x = Some y \\<or> (\\<exists>m\\<in>set []. m x = Some y);\n        \\<forall>m'\\<in>set []. m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b [] x = Some y\n 2. \\<And>a ms b.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b x = Some y \\<or>\n                            (\\<exists>m\\<in>set ms. m x = Some y);\n                    \\<forall>m'\\<in>set ms.\n                       m' x = Some y \\<or> m' x = None\\<rbrakk>\n                   \\<Longrightarrow> foldl (++) b ms x = Some y;\n        b x = Some y \\<or> (\\<exists>m\\<in>set (a # ms). m x = Some y);\n        \\<forall>m'\\<in>set (a # ms).\n           m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b (a # ms) x = Some y", "moreover"], ["proof (state)\nthis:\n  (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>b x = Some y \\<or> (\\<exists>m\\<in>set []. m x = Some y);\n        \\<forall>m'\\<in>set []. m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b [] x = Some y\n 2. \\<And>a ms b.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b x = Some y \\<or>\n                            (\\<exists>m\\<in>set ms. m x = Some y);\n                    \\<forall>m'\\<in>set ms.\n                       m' x = Some y \\<or> m' x = None\\<rbrakk>\n                   \\<Longrightarrow> foldl (++) b ms x = Some y;\n        b x = Some y \\<or> (\\<exists>m\\<in>set (a # ms). m x = Some y);\n        \\<forall>m'\\<in>set (a # ms).\n           m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b (a # ms) x = Some y", "have \"\\<forall>m' \\<in> set ms. m' x = Some y \\<or> m' x = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m'\\<in>set ms. m' x = Some y \\<or> m' x = None", "using Cons.prems(2)"], ["proof (prove)\nusing this:\n  \\<forall>m'\\<in>set (a # ms). m' x = Some y \\<or> m' x = None\n\ngoal (1 subgoal):\n 1. \\<forall>m'\\<in>set ms. m' x = Some y \\<or> m' x = None", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>m'\\<in>set ms. m' x = Some y \\<or> m' x = None\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       \\<lbrakk>b x = Some y \\<or> (\\<exists>m\\<in>set []. m x = Some y);\n        \\<forall>m'\\<in>set []. m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b [] x = Some y\n 2. \\<And>a ms b.\n       \\<lbrakk>\\<And>b.\n                   \\<lbrakk>b x = Some y \\<or>\n                            (\\<exists>m\\<in>set ms. m x = Some y);\n                    \\<forall>m'\\<in>set ms.\n                       m' x = Some y \\<or> m' x = None\\<rbrakk>\n                   \\<Longrightarrow> foldl (++) b ms x = Some y;\n        b x = Some y \\<or> (\\<exists>m\\<in>set (a # ms). m x = Some y);\n        \\<forall>m'\\<in>set (a # ms).\n           m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b (a # ms) x = Some y", "ultimately"], ["proof (chain)\npicking this:\n  (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n  \\<forall>m'\\<in>set ms. m' x = Some y \\<or> m' x = None", "show ?case"], ["proof (prove)\nusing this:\n  (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n  \\<forall>m'\\<in>set ms. m' x = Some y \\<or> m' x = None\n\ngoal (1 subgoal):\n 1. foldl (++) b (a # ms) x = Some y", "using Cons.IH[where b=\"b ++ a\"]"], ["proof (prove)\nusing this:\n  (b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y)\n  \\<forall>m'\\<in>set ms. m' x = Some y \\<or> m' x = None\n  \\<lbrakk>(b ++ a) x = Some y \\<or> (\\<exists>m\\<in>set ms. m x = Some y);\n   \\<forall>m'\\<in>set ms. m' x = Some y \\<or> m' x = None\\<rbrakk>\n  \\<Longrightarrow> foldl (++) (b ++ a) ms x = Some y\n\ngoal (1 subgoal):\n 1. foldl (++) b (a # ms) x = Some y", "by simp"], ["proof (state)\nthis:\n  foldl (++) b (a # ms) x = Some y\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>b x = Some y \\<or> (\\<exists>m\\<in>set []. m x = Some y);\n        \\<forall>m'\\<in>set []. m' x = Some y \\<or> m' x = None\\<rbrakk>\n       \\<Longrightarrow> foldl (++) b [] x = Some y", "qed auto"], ["", "(* TODO \"\\<forall>(v, a) \\<in> set l. \\<forall>(v', a') \\<in> set l. v \\<noteq> v' \\<or> a = a'\" \\<leadsto>\n  \"\\<forall>(v', a') \\<in> set l. v \\<noteq> v' \\<or> a = a'\" (this is too strong; we only consider (v, a), i.e. fixed v)\n*)\n(* TODO isn't this the same as map_of_is_SomeI? *)"], ["", "lemma map_of_constant_assignments_defined_if:\n  assumes \"\\<forall>(v, a) \\<in> set l. \\<forall>(v', a') \\<in> set l. v \\<noteq> v' \\<or> a = a'\"\n    and \"(v, a) \\<in> set l\" \n  shows \"map_of l v = Some a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_of l v = Some a", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>(v, a)\\<in>set l.\n     \\<forall>(v', a')\\<in>set l. v \\<noteq> v' \\<or> a = a'\n  (v, a) \\<in> set l\n\ngoal (1 subgoal):\n 1. map_of l v = Some a", "proof (induction l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>(v, a)\\<in>set [].\n                \\<forall>(v', a')\\<in>set []. v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set []\\<rbrakk>\n    \\<Longrightarrow> map_of [] v = Some a\n 2. \\<And>aa l.\n       \\<lbrakk>\\<lbrakk>\\<forall>(v, a)\\<in>set l.\n                            \\<forall>(v', a')\\<in>set l.\n                               v \\<noteq> v' \\<or> a = a';\n                 (v, a) \\<in> set l\\<rbrakk>\n                \\<Longrightarrow> map_of l v = Some a;\n        \\<forall>(v, a)\\<in>set (aa # l).\n           \\<forall>(v', a')\\<in>set (aa # l). v \\<noteq> v' \\<or> a = a';\n        (v, a) \\<in> set (aa # l)\\<rbrakk>\n       \\<Longrightarrow> map_of (aa # l) v = Some a", "case (Cons x l)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>a\\<in>set l.\n              case a of\n              (v, a) \\<Rightarrow>\n                \\<forall>b\\<in>set l.\n                   case b of\n                   (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n   (v, a) \\<in> set l\\<rbrakk>\n  \\<Longrightarrow> map_of l v = Some a\n  \\<forall>a\\<in>set (x # l).\n     case a of\n     (v, a) \\<Rightarrow>\n       \\<forall>b\\<in>set (x # l).\n          case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a'\n  (v, a) \\<in> set (x # l)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>(v, a)\\<in>set [].\n                \\<forall>(v', a')\\<in>set []. v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set []\\<rbrakk>\n    \\<Longrightarrow> map_of [] v = Some a\n 2. \\<And>aa l.\n       \\<lbrakk>\\<lbrakk>\\<forall>(v, a)\\<in>set l.\n                            \\<forall>(v', a')\\<in>set l.\n                               v \\<noteq> v' \\<or> a = a';\n                 (v, a) \\<in> set l\\<rbrakk>\n                \\<Longrightarrow> map_of l v = Some a;\n        \\<forall>(v, a)\\<in>set (aa # l).\n           \\<forall>(v', a')\\<in>set (aa # l). v \\<noteq> v' \\<or> a = a';\n        (v, a) \\<in> set (aa # l)\\<rbrakk>\n       \\<Longrightarrow> map_of (aa # l) v = Some a", "thm Cons"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>a\\<in>set l.\n              case a of\n              (v, a) \\<Rightarrow>\n                \\<forall>b\\<in>set l.\n                   case b of\n                   (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n   (v, a) \\<in> set l\\<rbrakk>\n  \\<Longrightarrow> map_of l v = Some a\n  \\<forall>a\\<in>set (x # l).\n     case a of\n     (v, a) \\<Rightarrow>\n       \\<forall>b\\<in>set (x # l).\n          case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a'\n  (v, a) \\<in> set (x # l)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>(v, a)\\<in>set [].\n                \\<forall>(v', a')\\<in>set []. v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set []\\<rbrakk>\n    \\<Longrightarrow> map_of [] v = Some a\n 2. \\<And>aa l.\n       \\<lbrakk>\\<lbrakk>\\<forall>(v, a)\\<in>set l.\n                            \\<forall>(v', a')\\<in>set l.\n                               v \\<noteq> v' \\<or> a = a';\n                 (v, a) \\<in> set l\\<rbrakk>\n                \\<Longrightarrow> map_of l v = Some a;\n        \\<forall>(v, a)\\<in>set (aa # l).\n           \\<forall>(v', a')\\<in>set (aa # l). v \\<noteq> v' \\<or> a = a';\n        (v, a) \\<in> set (aa # l)\\<rbrakk>\n       \\<Longrightarrow> map_of (aa # l) v = Some a", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>a\\<in>set l.\n              case a of\n              (v, a) \\<Rightarrow>\n                \\<forall>b\\<in>set l.\n                   case b of\n                   (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n   (v, a) \\<in> set l\\<rbrakk>\n  \\<Longrightarrow> map_of l v = Some a\n  \\<forall>a\\<in>set (x # l).\n     case a of\n     (v, a) \\<Rightarrow>\n       \\<forall>b\\<in>set (x # l).\n          case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a'\n  (v, a) \\<in> set (x # l)", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>a\\<in>set l.\n              case a of\n              (v, a) \\<Rightarrow>\n                \\<forall>b\\<in>set l.\n                   case b of\n                   (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n   (v, a) \\<in> set l\\<rbrakk>\n  \\<Longrightarrow> map_of l v = Some a\n  \\<forall>a\\<in>set (x # l).\n     case a of\n     (v, a) \\<Rightarrow>\n       \\<forall>b\\<in>set (x # l).\n          case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a'\n  (v, a) \\<in> set (x # l)\n\ngoal (1 subgoal):\n 1. map_of (x # l) v = Some a", "proof (cases \"x = (v, a)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "case False"], ["proof (state)\nthis:\n  x \\<noteq> (v, a)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "have v_a_in_l: \"(v, a) \\<in> set l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v, a) \\<in> set l", "using Cons.prems(2) False"], ["proof (prove)\nusing this:\n  (v, a) \\<in> set (x # l)\n  x \\<noteq> (v, a)\n\ngoal (1 subgoal):\n 1. (v, a) \\<in> set l", "by fastforce"], ["proof (state)\nthis:\n  (v, a) \\<in> set l\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "{"], ["proof (state)\nthis:\n  (v, a) \\<in> set l\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "have \"\\<forall>(v, a) \\<in> set l. \\<forall>(v', a') \\<in> set l. v \\<noteq> v' \\<or> a = a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>(v, a)\\<in>set l.\n       \\<forall>(v', a')\\<in>set l. v \\<noteq> v' \\<or> a = a'", "using Cons.prems(1)"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>set (x # l).\n     case a of\n     (v, a) \\<Rightarrow>\n       \\<forall>b\\<in>set (x # l).\n          case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a'\n\ngoal (1 subgoal):\n 1. \\<forall>(v, a)\\<in>set l.\n       \\<forall>(v', a')\\<in>set l. v \\<noteq> v' \\<or> a = a'", "by auto"], ["proof (state)\nthis:\n  \\<forall>(v, a)\\<in>set l.\n     \\<forall>(v', a')\\<in>set l. v \\<noteq> v' \\<or> a = a'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "hence \"map_of l v = Some a\""], ["proof (prove)\nusing this:\n  \\<forall>(v, a)\\<in>set l.\n     \\<forall>(v', a')\\<in>set l. v \\<noteq> v' \\<or> a = a'\n\ngoal (1 subgoal):\n 1. map_of l v = Some a", "using Cons.IH v_a_in_l"], ["proof (prove)\nusing this:\n  \\<forall>(v, a)\\<in>set l.\n     \\<forall>(v', a')\\<in>set l. v \\<noteq> v' \\<or> a = a'\n  \\<lbrakk>\\<forall>a\\<in>set l.\n              case a of\n              (v, a) \\<Rightarrow>\n                \\<forall>b\\<in>set l.\n                   case b of\n                   (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n   (v, a) \\<in> set l\\<rbrakk>\n  \\<Longrightarrow> map_of l v = Some a\n  (v, a) \\<in> set l\n\ngoal (1 subgoal):\n 1. map_of l v = Some a", "by linarith"], ["proof (state)\nthis:\n  map_of l v = Some a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "}"], ["proof (state)\nthis:\n  map_of l v = Some a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "note ih = this"], ["proof (state)\nthis:\n  map_of l v = Some a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "{"], ["proof (state)\nthis:\n  map_of l v = Some a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "have \"x \\<in> set (x # l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set (x # l)", "by auto"], ["proof (state)\nthis:\n  x \\<in> set (x # l)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "hence \"fst x \\<noteq> v \\<or> snd x = a\""], ["proof (prove)\nusing this:\n  x \\<in> set (x # l)\n\ngoal (1 subgoal):\n 1. fst x \\<noteq> v \\<or> snd x = a", "using Cons.prems(1) v_a_in_l"], ["proof (prove)\nusing this:\n  x \\<in> set (x # l)\n  \\<forall>a\\<in>set (x # l).\n     case a of\n     (v, a) \\<Rightarrow>\n       \\<forall>b\\<in>set (x # l).\n          case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a'\n  (v, a) \\<in> set l\n\ngoal (1 subgoal):\n 1. fst x \\<noteq> v \\<or> snd x = a", "by fastforce"], ["proof (state)\nthis:\n  fst x \\<noteq> v \\<or> snd x = a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "}"], ["proof (state)\nthis:\n  fst x \\<noteq> v \\<or> snd x = a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "note nb = this\n      \\<comment> \\<open> NOTE If @{text \"fst x = v\"} then @{text \"snd x = a\"} by fact @{text \"nb\"}; moreover if \n        on the other hand @{text \"fst x \\<noteq> v\"}, then the proposition follows from the induction \n        hypothesis since @{text \"map_of (x # l) v = map_of l v\"} in that case. \\<close>"], ["proof (state)\nthis:\n  fst x \\<noteq> v \\<or> snd x = a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a\n 2. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x \\<noteq> (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "thus ?thesis"], ["proof (prove)\nusing this:\n  fst x \\<noteq> v \\<or> snd x = a\n\ngoal (1 subgoal):\n 1. map_of (x # l) v = Some a", "using ih nb"], ["proof (prove)\nusing this:\n  fst x \\<noteq> v \\<or> snd x = a\n  map_of l v = Some a\n  fst x \\<noteq> v \\<or> snd x = a\n\ngoal (1 subgoal):\n 1. map_of (x # l) v = Some a", "by (cases \"fst x = v\") fastforce+"], ["proof (state)\nthis:\n  map_of (x # l) v = Some a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>\\<forall>a\\<in>set l.\n                         case a of\n                         (v, a) \\<Rightarrow>\n                           \\<forall>b\\<in>set l.\n                              case b of\n                              (v', a') \\<Rightarrow>\n                                v \\<noteq> v' \\<or> a = a';\n              (v, a) \\<in> set l\\<rbrakk>\n             \\<Longrightarrow> map_of l v = Some a;\n     \\<forall>a\\<in>set (x # l).\n        case a of\n        (v, a) \\<Rightarrow>\n          \\<forall>b\\<in>set (x # l).\n             case b of (v', a') \\<Rightarrow> v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set (x # l); x = (v, a)\\<rbrakk>\n    \\<Longrightarrow> map_of (x # l) v = Some a", "qed simp"], ["proof (state)\nthis:\n  map_of (x # l) v = Some a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(v, a)\\<in>set [].\n                \\<forall>(v', a')\\<in>set []. v \\<noteq> v' \\<or> a = a';\n     (v, a) \\<in> set []\\<rbrakk>\n    \\<Longrightarrow> map_of [] v = Some a", "qed fastforce"], ["", "end"]]}