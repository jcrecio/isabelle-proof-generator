{"file_name": "/home/qj213/afp-2021-10-22/thys/Modular_Assembly_Kit_Security/SystemSpecification/StateEventSystems.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modular_Assembly_Kit_Security", "problem_names": ["lemma none_remains_none : \"\\<And> s e. (path SES s t) = None \n  \\<Longrightarrow> (path SES s (t @ [e])) = None\"", "lemma path_trans_single_neg: \"\\<And> s1. \\<lbrakk>s1 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2; \\<not> (s2 e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn)\\<rbrakk> \n     \\<Longrightarrow> \\<not> (s1 (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn)\"", "lemma path_split_single: \"s1 (t@[e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \n  \\<Longrightarrow> \\<exists>s'. s1 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'  \\<and> s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\"", "lemma path_trans_single: \"\\<And>s. \\<lbrakk> s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'; s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn \\<rbrakk> \n  \\<Longrightarrow> s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\"", "lemma path_split: \"\\<And> sn. \\<lbrakk> s1 (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<rbrakk> \n  \\<Longrightarrow> (\\<exists>s2. (s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and> s2 t2\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn))\"", "lemma path_trans: \n\"\\<And>sn. \\<lbrakk> s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2; s2 l2\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<rbrakk> \\<Longrightarrow> s1 (l1 @ l2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\"", "lemma enabledPrefixSingle : \"\\<lbrakk> enabled SES s (t@[e]) \\<rbrakk> \\<Longrightarrow> enabled SES s t\"", "lemma enabledPrefix : \"\\<lbrakk> enabled SES s (t1 @ t2) \\<rbrakk> \\<Longrightarrow> enabled SES s t1\"", "lemma enabledPrefixSingleFinalStep : \"\\<lbrakk> enabled SES s (t@[e]) \\<rbrakk> \\<Longrightarrow> \\<exists> t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''\"", "lemma induceES_yields_ES: \n  \"SES_valid SES \\<Longrightarrow> ES_valid (induceES SES)\""], "translations": [["", "lemma none_remains_none : \"\\<And> s e. (path SES s t) = None \n  \\<Longrightarrow> (path SES s (t @ [e])) = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s e.\n       path SES s t = None \\<Longrightarrow> path SES s (t @ [e]) = None", "by (induct t, auto)"], ["", "(* If some event sequence t is enabled in a state s in which\n some event e is not enabled, then the event sequence\n obtained by appending e to t is not enabled in s. *)"], ["", "lemma path_trans_single_neg: \"\\<And> s1. \\<lbrakk>s1 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2; \\<not> (s2 e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn)\\<rbrakk> \n     \\<Longrightarrow> \\<not> (s1 (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s1.\n       \\<lbrakk>s1 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n        T\\<^bsub>SES\\<^esub> s2 e \\<noteq> Some sn\\<rbrakk>\n       \\<Longrightarrow> path SES s1 (t @ [e]) \\<noteq> Some sn", "by (induct t, auto)"], ["", "(* If the event sequence t:e is enabled in some state, then \n  the event sequence t is also enabled and results in some state t' *)"], ["", "lemma path_split_single: \"s1 (t@[e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \n  \\<Longrightarrow> \\<exists>s'. s1 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'  \\<and> s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s1 (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n    \\<exists>s'.\n       s1 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<and>\n       s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn", "by (cases \"path SES s1 t\", simp add: none_remains_none,\n    simp, rule ccontr, auto simp add: path_trans_single_neg)"], ["", "(* If an event sequence results in a state s', from which the event e results in sn,\n  then the combined event sequence also results in sn *)"], ["", "lemma path_trans_single: \"\\<And>s. \\<lbrakk> s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'; s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn \\<rbrakk> \n  \\<Longrightarrow> s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n        s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>s []\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n        s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s ([] @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n 2. \\<And>a t s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n                    s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s (t @\n  [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n        s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s ((a # t) @\n                            [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "case Nil"], ["proof (state)\nthis:\n  s []\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n  s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>s []\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n        s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s ([] @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n 2. \\<And>a t s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n                    s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s (t @\n  [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n        s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s ((a # t) @\n                            [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "thus ?case"], ["proof (prove)\nusing this:\n  s []\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n  s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. s ([] @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by auto"], ["proof (state)\nthis:\n  s ([] @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<And>a t s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n                    s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s (t @\n  [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n        s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s ((a # t) @\n                            [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a t s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n                    s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s (t @\n  [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n        s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s ((a # t) @\n                            [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "case (Cons a t)"], ["proof (state)\nthis:\n  \\<lbrakk>?s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n   s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n  \\<Longrightarrow> ?s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n  s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<And>a t s.\n       \\<lbrakk>\\<And>s.\n                   \\<lbrakk>s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n                    s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s (t @\n  [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n        s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s ((a # t) @\n                            [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n   s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n  \\<Longrightarrow> ?s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n  s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. s ((a # t) @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s.\n                \\<lbrakk>s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n                 s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s (t @\n                                     [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n     s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s ((a # t) @\n                         [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "from Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>?s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n   s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n  \\<Longrightarrow> ?s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n  s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn", "obtain s1' where trans_s_a_s1': \"s a\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n   s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n  \\<Longrightarrow> ?s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n  s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. (\\<And>s1'.\n        s a\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp, split if_split_asm, auto)"], ["proof (state)\nthis:\n  s a\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s.\n                \\<lbrakk>s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n                 s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s (t @\n                                     [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n     s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s ((a # t) @\n                         [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "with Cons"], ["proof (chain)\npicking this:\n  \\<lbrakk>?s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n   s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n  \\<Longrightarrow> ?s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n  s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s a\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'", "have \"s1' (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n   s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n  \\<Longrightarrow> ?s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n  s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s a\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. s1' (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by auto"], ["proof (state)\nthis:\n  s1' (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>s.\n                \\<lbrakk>s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n                 s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s (t @\n                                     [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s (a # t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s';\n     s' e\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s ((a # t) @\n                         [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "with trans_s_a_s1'"], ["proof (chain)\npicking this:\n  s a\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "show ?thesis"], ["proof (prove)\nusing this:\n  s a\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. s ((a # t) @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by auto"], ["proof (state)\nthis:\n  s ((a # t) @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s ((a # t) @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal:\nNo subgoals!", "qed"], ["", "(* We can split a path from s1 to sn via the event sequence t1:t2\n into two paths from s1 to s2 via t1 and from s2 to sn via t2  *)"], ["", "lemma path_split: \"\\<And> sn. \\<lbrakk> s1 (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<rbrakk> \n  \\<Longrightarrow> (\\<exists>s2. (s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and> s2 t2\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sn.\n       s1 (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n       \\<exists>s2.\n          s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n          s2 t2\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "proof (induct t2 rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sn.\n       s1 (t1 @ [])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n       \\<exists>s2.\n          s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n          s2 []\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n 2. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   s1 (t1 @\n                       xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                   \\<exists>s2.\n                      s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                      s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 (t1 @ xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s2.\n                            s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                            s2 (xs @\n                                [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "case Nil"], ["proof (state)\nthis:\n  s1 (t1 @ [])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (2 subgoals):\n 1. \\<And>sn.\n       s1 (t1 @ [])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n       \\<exists>s2.\n          s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n          s2 []\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n 2. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   s1 (t1 @\n                       xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                   \\<exists>s2.\n                      s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                      s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 (t1 @ xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s2.\n                            s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                            s2 (xs @\n                                [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "thus ?case"], ["proof (prove)\nusing this:\n  s1 (t1 @ [])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<exists>s2.\n       s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n       s2 []\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by auto"], ["proof (state)\nthis:\n  \\<exists>s2.\n     s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n     s2 []\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   s1 (t1 @\n                       xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                   \\<exists>s2.\n                      s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                      s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 (t1 @ xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s2.\n                            s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                            s2 (xs @\n                                [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   s1 (t1 @\n                       xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                   \\<exists>s2.\n                      s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                      s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 (t1 @ xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s2.\n                            s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                            s2 (xs @\n                                [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "case (snoc a t)"], ["proof (state)\nthis:\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn \\<Longrightarrow>\n  \\<exists>s2.\n     s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n     s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   s1 (t1 @\n                       xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                   \\<exists>s2.\n                      s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                      s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 (t1 @ xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s2.\n                            s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                            s2 (xs @\n                                [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "thus ?case"], ["proof (prove)\nusing this:\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn \\<Longrightarrow>\n  \\<exists>s2.\n     s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n     s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<exists>s2.\n       s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n       s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                s1 (t1 @\n                    t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                \\<exists>s2.\n                   s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                   s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> \\<exists>s2.\n                         s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                         s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "from snoc"], ["proof (chain)\npicking this:\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn \\<Longrightarrow>\n  \\<exists>s2.\n     s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n     s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "have \"s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\nusing this:\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn \\<Longrightarrow>\n  \\<exists>s2.\n     s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n     s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by auto"], ["proof (state)\nthis:\n  s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                s1 (t1 @\n                    t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                \\<exists>s2.\n                   s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                   s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> \\<exists>s2.\n                         s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                         s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "hence \"\\<exists>sn'. s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and> sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\nusing this:\n  s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<exists>sn'.\n       s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n       sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn", "by (simp add: path_split_single)"], ["proof (state)\nthis:\n  \\<exists>sn'.\n     s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n     sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                s1 (t1 @\n                    t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                \\<exists>s2.\n                   s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                   s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> \\<exists>s2.\n                         s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                         s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "then"], ["proof (chain)\npicking this:\n  \\<exists>sn'.\n     s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n     sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn", "obtain sn' where path_t1_t_trans_a: \n      \"s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and> sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\nusing this:\n  \\<exists>sn'.\n     s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n     sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. (\\<And>sn'.\n        s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n        sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                s1 (t1 @\n                    t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                \\<exists>s2.\n                   s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                   s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> \\<exists>s2.\n                         s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                         s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "with snoc"], ["proof (chain)\npicking this:\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn \\<Longrightarrow>\n  \\<exists>s2.\n     s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n     s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn", "obtain s2 where path_t1_t: \n      \"s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and> s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\""], ["proof (prove)\nusing this:\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn \\<Longrightarrow>\n  \\<exists>s2.\n     s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n     s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. (\\<And>s2.\n        s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n        s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n  s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                s1 (t1 @\n                    t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                \\<exists>s2.\n                   s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                   s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> \\<exists>s2.\n                         s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                         s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "with path_t1_t_trans_a"], ["proof (chain)\npicking this:\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n  s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'", "have \"s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\nusing this:\n  s1 (t1 @ t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n  s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\n\ngoal (1 subgoal):\n 1. s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by (simp add: path_trans_single)"], ["proof (state)\nthis:\n  s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                s1 (t1 @\n                    t)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n                \\<exists>s2.\n                   s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                   s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 (t1 @ t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> \\<exists>s2.\n                         s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n                         s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "with path_t1_t"], ["proof (chain)\npicking this:\n  s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n  s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\n  s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "show ?thesis"], ["proof (prove)\nusing this:\n  s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n  s2 t\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\n  s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<exists>s2.\n       s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n       s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by auto"], ["proof (state)\nthis:\n  \\<exists>s2.\n     s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n     s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>s2.\n     s1 t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<and>\n     s2 (t @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Two paths can be concatenated. *)"], ["", "lemma path_trans: \n\"\\<And>sn. \\<lbrakk> s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2; s2 l2\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<rbrakk> \\<Longrightarrow> s1 (l1 @ l2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>sn.\n       \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n        s2 l2\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s1 (l1 @ l2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "proof (induct l2 rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sn.\n       \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n        s2 []\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s1 (l1 @ [])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n 2. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                    s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s1 (l1 @\n   xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n        s2 (xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s1 (l1 @\n                             xs @\n                             [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "case Nil"], ["proof (state)\nthis:\n  s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n  s2 []\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (2 subgoals):\n 1. \\<And>sn.\n       \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n        s2 []\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s1 (l1 @ [])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n 2. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                    s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s1 (l1 @\n   xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n        s2 (xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s1 (l1 @\n                             xs @\n                             [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "thus ?case"], ["proof (prove)\nusing this:\n  s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n  s2 []\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. s1 (l1 @ [])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by auto"], ["proof (state)\nthis:\n  s1 (l1 @ [])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                    s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s1 (l1 @\n   xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n        s2 (xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s1 (l1 @\n                             xs @\n                             [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                    s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s1 (l1 @\n   xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n        s2 (xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s1 (l1 @\n                             xs @\n                             [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "case (snoc a l)"], ["proof (state)\nthis:\n  \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n   s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\\<rbrakk>\n  \\<Longrightarrow> s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n  s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<And>x xs sn.\n       \\<lbrakk>\\<And>sn.\n                   \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                    s2 xs\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                   \\<Longrightarrow> s1 (l1 @\n   xs)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n        s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n        s2 (xs @ [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n       \\<Longrightarrow> s1 (l1 @\n                             xs @\n                             [x])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n   s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\\<rbrakk>\n  \\<Longrightarrow> s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n  s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. s1 (l1 @ l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                 s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s1 (l1 @\nl)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n     s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s1 (l1 @\n                          l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "assume path_l1: \"s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\""], ["proof (state)\nthis:\n  s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                 s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s1 (l1 @\nl)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n     s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s1 (l1 @\n                          l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "assume \"s2 (l@[a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (state)\nthis:\n  s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                 s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s1 (l1 @\nl)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n     s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s1 (l1 @\n                          l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "hence \"\\<exists>sn'. s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and> sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\nusing this:\n  s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<exists>sn'.\n       s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n       sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by (simp add: path_split del: path_nonempt)"], ["proof (state)\nthis:\n  \\<exists>sn'.\n     s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n     sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                 s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s1 (l1 @\nl)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n     s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s1 (l1 @\n                          l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "then"], ["proof (chain)\npicking this:\n  \\<exists>sn'.\n     s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n     sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "obtain sn' where path_l_a: \"s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and> sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\nusing this:\n  \\<exists>sn'.\n     s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n     sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. (\\<And>sn'.\n        s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n        sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                 s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s1 (l1 @\nl)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n     s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s1 (l1 @\n                          l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "with snoc path_l1"], ["proof (chain)\npicking this:\n  \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n   s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\\<rbrakk>\n  \\<Longrightarrow> s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n  s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n  s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "have path_l1_l: \"s1 (l1@l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n   s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\\<rbrakk>\n  \\<Longrightarrow> s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> ?sn\n  s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n  s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n  s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'", "by auto"], ["proof (state)\nthis:\n  s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                 s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s1 (l1 @\nl)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n     s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s1 (l1 @\n                          l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "with path_l_a"], ["proof (chain)\npicking this:\n  s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'", "have \"sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\nusing this:\n  s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn' \\<and>\n  sn' [a]\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n  s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\n\ngoal (1 subgoal):\n 1. sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn", "by (simp, split if_split_asm, auto)"], ["proof (state)\nthis:\n  sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>sn.\n                \\<lbrakk>s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n                 s2 l\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n                \\<Longrightarrow> s1 (l1 @\nl)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn;\n     s1 l1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2;\n     s2 (l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\\<rbrakk>\n    \\<Longrightarrow> s1 (l1 @\n                          l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "with path_l1_l"], ["proof (chain)\npicking this:\n  s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\n  sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn", "show \"s1 (l1 @ l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\""], ["proof (prove)\nusing this:\n  s1 (l1 @ l)\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn'\n  sn' a\\<longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal (1 subgoal):\n 1. s1 (l1 @ l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn", "by (subst append_assoc[symmetric], rule_tac s'=\"sn'\" in path_trans_single, auto)"], ["proof (state)\nthis:\n  s1 (l1 @ l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s1 (l1 @ l @ [a])\\<Longrightarrow>\\<^bsub>SES\\<^esub> sn\n\ngoal:\nNo subgoals!", "qed"], ["", "(* The prefix of an enabled trace is also enabled. (This lemma cuts of the last element.) *)"], ["", "lemma enabledPrefixSingle : \"\\<lbrakk> enabled SES s (t@[e]) \\<rbrakk> \\<Longrightarrow> enabled SES s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enabled SES s (t @ [e]) \\<Longrightarrow> enabled SES s t", "unfolding enabled_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "assume ass: \"\\<exists>s'. s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\""], ["proof (state)\nthis:\n  \\<exists>s'. s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "from ass"], ["proof (chain)\npicking this:\n  \\<exists>s'. s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "obtain s' where \"s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\""], ["proof (prove)\nusing this:\n  \\<exists>s'. s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "hence \"\\<exists>t'. (s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t') \\<and> (t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s')\""], ["proof (prove)\nusing this:\n  s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>t'.\n       s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t' \\<and>\n       t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'", "by (rule path_split_single)"], ["proof (state)\nthis:\n  \\<exists>t'.\n     s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t' \\<and>\n     t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "then"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t' \\<and>\n     t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'", "obtain t' where \"s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t' \\<and>\n     t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "thus \"\\<exists>s'. s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\""], ["proof (prove)\nusing this:\n  s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t'\n\ngoal (1 subgoal):\n 1. \\<exists>s'. s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", ".."], ["proof (state)\nthis:\n  \\<exists>s'. s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal:\nNo subgoals!", "qed"], ["", "(* The prefix of an enabled trace is also enabled.\n    (This lemma cuts of a suffix trace.) *)"], ["", "lemma enabledPrefix : \"\\<lbrakk> enabled SES s (t1 @ t2) \\<rbrakk> \\<Longrightarrow> enabled SES s t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enabled SES s (t1 @ t2) \\<Longrightarrow> enabled SES s t1", "unfolding enabled_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "assume ass: \"\\<exists>s'. s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\""], ["proof (state)\nthis:\n  \\<exists>s'. s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "from ass"], ["proof (chain)\npicking this:\n  \\<exists>s'. s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "obtain s' where \"s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\""], ["proof (prove)\nusing this:\n  \\<exists>s'. s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "hence \"\\<exists>t. (s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t \\<and> t t2\\<Longrightarrow>\\<^bsub>SES\\<^esub> s')\""], ["proof (prove)\nusing this:\n  s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t \\<and>\n       t t2\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "by (rule path_split)"], ["proof (state)\nthis:\n  \\<exists>t.\n     s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t \\<and>\n     t t2\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "then"], ["proof (chain)\npicking this:\n  \\<exists>t.\n     s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t \\<and>\n     t t2\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "obtain t where \"s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t\""], ["proof (prove)\nusing this:\n  \\<exists>t.\n     s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t \\<and>\n     t t2\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t1 @ t2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>s'. s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "then"], ["proof (chain)\npicking this:\n  s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t", "show \"\\<exists>s'. s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\""], ["proof (prove)\nusing this:\n  s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> t\n\ngoal (1 subgoal):\n 1. \\<exists>s'. s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", ".."], ["proof (state)\nthis:\n  \\<exists>s'. s t1\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal:\nNo subgoals!", "qed"], ["", "(* The last element of an enabled trace makes a transition between two states. *)"], ["", "lemma enabledPrefixSingleFinalStep : \"\\<lbrakk> enabled SES s (t@[e]) \\<rbrakk> \\<Longrightarrow> \\<exists> t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enabled SES s (t @ [e]) \\<Longrightarrow>\n    \\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''", "unfolding enabled_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''", "assume ass: \"\\<exists>s'. s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\""], ["proof (state)\nthis:\n  \\<exists>s'. s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''", "from ass"], ["proof (chain)\npicking this:\n  \\<exists>s'. s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'", "obtain s' where \"s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\""], ["proof (prove)\nusing this:\n  \\<exists>s'. s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''", "hence \"\\<exists>t'. (s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t')  \\<and> (t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s')\""], ["proof (prove)\nusing this:\n  s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>t'.\n       s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t' \\<and>\n       t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'", "by (rule path_split_single)"], ["proof (state)\nthis:\n  \\<exists>t'.\n     s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t' \\<and>\n     t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''", "then"], ["proof (chain)\npicking this:\n  \\<exists>t'.\n     s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t' \\<and>\n     t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'", "obtain t' where \"t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'\""], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     s t\\<Longrightarrow>\\<^bsub>SES\\<^esub> t' \\<and>\n     t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>s'.\n       s (t @ [e])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<Longrightarrow>\n    \\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''", "thus \"\\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''\""], ["proof (prove)\nusing this:\n  t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> s'\n\ngoal (1 subgoal):\n 1. \\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''", "by (auto)"], ["proof (state)\nthis:\n  \\<exists>t' t''. t' e\\<longrightarrow>\\<^bsub>SES\\<^esub> t''\n\ngoal:\nNo subgoals!", "qed"], ["", "(* applying induceES on a state event system yields an event system *)"], ["", "lemma induceES_yields_ES: \n  \"SES_valid SES \\<Longrightarrow> ES_valid (induceES SES)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SES_valid SES \\<Longrightarrow> ES_valid (induceES SES)", "proof (simp add: SES_valid_def ES_valid_def, auto)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_are_events (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_outputs_are_events (induceES SES)\n 3. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_outputs_disjoint (induceES SES)\n 4. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 5. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "assume SES_inputs_are_events: \"ses_inputs_are_events SES\""], ["proof (state)\nthis:\n  ses_inputs_are_events SES\n\ngoal (5 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_are_events (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_outputs_are_events (induceES SES)\n 3. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_outputs_disjoint (induceES SES)\n 4. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 5. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "thus \"es_inputs_are_events (induceES SES)\""], ["proof (prove)\nusing this:\n  ses_inputs_are_events SES\n\ngoal (1 subgoal):\n 1. es_inputs_are_events (induceES SES)", "by (simp add: induceES_def ses_inputs_are_events_def es_inputs_are_events_def)"], ["proof (state)\nthis:\n  es_inputs_are_events (induceES SES)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_outputs_are_events (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_outputs_disjoint (induceES SES)\n 3. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 4. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_outputs_are_events (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_outputs_disjoint (induceES SES)\n 3. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 4. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "assume SES_outputs_are_events: \"ses_outputs_are_events SES\""], ["proof (state)\nthis:\n  ses_outputs_are_events SES\n\ngoal (4 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_outputs_are_events (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_outputs_disjoint (induceES SES)\n 3. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 4. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "thus \"es_outputs_are_events (induceES SES)\""], ["proof (prove)\nusing this:\n  ses_outputs_are_events SES\n\ngoal (1 subgoal):\n 1. es_outputs_are_events (induceES SES)", "by (simp add: induceES_def ses_outputs_are_events_def es_outputs_are_events_def)"], ["proof (state)\nthis:\n  es_outputs_are_events (induceES SES)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_outputs_disjoint (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 3. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_outputs_disjoint (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 3. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "assume SES_inputs_outputs_disjoint: \"ses_inputs_outputs_disjoint SES\""], ["proof (state)\nthis:\n  ses_inputs_outputs_disjoint SES\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> es_inputs_outputs_disjoint (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 3. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "thus \"es_inputs_outputs_disjoint (induceES SES)\""], ["proof (prove)\nusing this:\n  ses_inputs_outputs_disjoint SES\n\ngoal (1 subgoal):\n 1. es_inputs_outputs_disjoint (induceES SES)", "by (simp add: induceES_def ses_inputs_outputs_disjoint_def es_inputs_outputs_disjoint_def)"], ["proof (state)\nthis:\n  es_inputs_outputs_disjoint (induceES SES)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "assume SES_correct_transition_relation: \"correct_transition_relation SES\""], ["proof (state)\nthis:\n  correct_transition_relation SES\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_contain_events (induceES SES)\n 2. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "thus \"traces_contain_events (induceES SES)\""], ["proof (prove)\nusing this:\n  correct_transition_relation SES\n\ngoal (1 subgoal):\n 1. traces_contain_events (induceES SES)", "unfolding induceES_def traces_contain_events_def possible_traces_def"], ["proof (prove)\nusing this:\n  correct_transition_relation SES\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>Tr\\<^bsub>\\<lparr>E_ES = E\\<^bsub>SES\\<^esub>,\n                                I_ES = I\\<^bsub>SES\\<^esub>,\n                                O_ES = O\\<^bsub>SES\\<^esub>,\n                                Tr_ES =\n                                  Collect\n                                   (enabled SES\n                                     s0\\<^bsub>SES\\<^esub>)\\<rparr>\\<^esub>.\n       \\<forall>e\\<in>set l.\n          e \\<in> E\\<^bsub>\\<lparr>E_ES = E\\<^bsub>SES\\<^esub>,\n                              I_ES = I\\<^bsub>SES\\<^esub>,\n                              O_ES = O\\<^bsub>SES\\<^esub>,\n                              Tr_ES =\n                                Collect\n                                 (enabled SES\n                                   s0\\<^bsub>SES\\<^esub>)\\<rparr>\\<^esub>", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l e.\n       \\<lbrakk>correct_transition_relation SES;\n        enabled SES s0\\<^bsub>SES\\<^esub> l; e \\<in> set l\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "fix l e"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l e.\n       \\<lbrakk>correct_transition_relation SES;\n        enabled SES s0\\<^bsub>SES\\<^esub> l; e \\<in> set l\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "assume enabled_l: \"enabled SES s0\\<^bsub>SES\\<^esub> l\""], ["proof (state)\nthis:\n  enabled SES s0\\<^bsub>SES\\<^esub> l\n\ngoal (1 subgoal):\n 1. \\<And>l e.\n       \\<lbrakk>correct_transition_relation SES;\n        enabled SES s0\\<^bsub>SES\\<^esub> l; e \\<in> set l\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "assume e_in_l: \"e \\<in> set l\""], ["proof (state)\nthis:\n  e \\<in> set l\n\ngoal (1 subgoal):\n 1. \\<And>l e.\n       \\<lbrakk>correct_transition_relation SES;\n        enabled SES s0\\<^bsub>SES\\<^esub> l; e \\<in> set l\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "from enabled_l e_in_l"], ["proof (chain)\npicking this:\n  enabled SES s0\\<^bsub>SES\\<^esub> l\n  e \\<in> set l", "show \"e \\<in> E\\<^bsub>SES\\<^esub>\""], ["proof (prove)\nusing this:\n  enabled SES s0\\<^bsub>SES\\<^esub> l\n  e \\<in> set l\n\ngoal (1 subgoal):\n 1. e \\<in> E\\<^bsub>SES\\<^esub>", "proof (induct l rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> []; e \\<in> set []\\<rbrakk>\n    \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> xs;\n                 e \\<in> set xs\\<rbrakk>\n                \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>;\n        enabled SES s0\\<^bsub>SES\\<^esub> (xs @ [x]);\n        e \\<in> set (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "case Nil"], ["proof (state)\nthis:\n  enabled SES s0\\<^bsub>SES\\<^esub> []\n  e \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> []; e \\<in> set []\\<rbrakk>\n    \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> xs;\n                 e \\<in> set xs\\<rbrakk>\n                \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>;\n        enabled SES s0\\<^bsub>SES\\<^esub> (xs @ [x]);\n        e \\<in> set (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "assume e_in_empty_list: \"e \\<in> set []\""], ["proof (state)\nthis:\n  e \\<in> set []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> []; e \\<in> set []\\<rbrakk>\n    \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> xs;\n                 e \\<in> set xs\\<rbrakk>\n                \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>;\n        enabled SES s0\\<^bsub>SES\\<^esub> (xs @ [x]);\n        e \\<in> set (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "hence f: \"False\""], ["proof (prove)\nusing this:\n  e \\<in> set []\n\ngoal (1 subgoal):\n 1. False", "by (auto)"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> []; e \\<in> set []\\<rbrakk>\n    \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> xs;\n                 e \\<in> set xs\\<rbrakk>\n                \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>;\n        enabled SES s0\\<^bsub>SES\\<^esub> (xs @ [x]);\n        e \\<in> set (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. e \\<in> E\\<^bsub>SES\\<^esub>", "by auto"], ["proof (state)\nthis:\n  e \\<in> E\\<^bsub>SES\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> xs;\n                 e \\<in> set xs\\<rbrakk>\n                \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>;\n        enabled SES s0\\<^bsub>SES\\<^esub> (xs @ [x]);\n        e \\<in> set (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> xs;\n                 e \\<in> set xs\\<rbrakk>\n                \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>;\n        enabled SES s0\\<^bsub>SES\\<^esub> (xs @ [x]);\n        e \\<in> set (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "case (snoc a l)"], ["proof (state)\nthis:\n  \\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> l; e \\<in> set l\\<rbrakk>\n  \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n  enabled SES s0\\<^bsub>SES\\<^esub> (l @ [a])\n  e \\<in> set (l @ [a])\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> xs;\n                 e \\<in> set xs\\<rbrakk>\n                \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>;\n        enabled SES s0\\<^bsub>SES\\<^esub> (xs @ [x]);\n        e \\<in> set (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "from snoc.prems"], ["proof (chain)\npicking this:\n  enabled SES s0\\<^bsub>SES\\<^esub> (l @ [a])\n  e \\<in> set (l @ [a])", "have l_enabled: \"enabled SES s0\\<^bsub>SES\\<^esub> l\""], ["proof (prove)\nusing this:\n  enabled SES s0\\<^bsub>SES\\<^esub> (l @ [a])\n  e \\<in> set (l @ [a])\n\ngoal (1 subgoal):\n 1. enabled SES s0\\<^bsub>SES\\<^esub> l", "by (simp add: enabledPrefixSingle)"], ["proof (state)\nthis:\n  enabled SES s0\\<^bsub>SES\\<^esub> l\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> xs;\n                 e \\<in> set xs\\<rbrakk>\n                \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>;\n        enabled SES s0\\<^bsub>SES\\<^esub> (xs @ [x]);\n        e \\<in> set (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<in> E\\<^bsub>SES\\<^esub>", "proof  (cases \"e \\<in> (set l)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. e \\<in> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n 2. e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "from snoc.hyps l_enabled"], ["proof (chain)\npicking this:\n  \\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> l; e \\<in> set l\\<rbrakk>\n  \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n  enabled SES s0\\<^bsub>SES\\<^esub> l", "show \"e \\<in> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>enabled SES s0\\<^bsub>SES\\<^esub> l; e \\<in> set l\\<rbrakk>\n  \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n  enabled SES s0\\<^bsub>SES\\<^esub> l\n\ngoal (1 subgoal):\n 1. e \\<in> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "by auto"], ["proof (state)\nthis:\n  e \\<in> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n\ngoal (1 subgoal):\n 1. e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "show \"e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "assume \"e \\<notin> set l\""], ["proof (state)\nthis:\n  e \\<notin> set l\n\ngoal (1 subgoal):\n 1. e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "with snoc.prems"], ["proof (chain)\npicking this:\n  enabled SES s0\\<^bsub>SES\\<^esub> (l @ [a])\n  e \\<in> set (l @ [a])\n  e \\<notin> set l", "have e_eq_a : \"e=a\""], ["proof (prove)\nusing this:\n  enabled SES s0\\<^bsub>SES\\<^esub> (l @ [a])\n  e \\<in> set (l @ [a])\n  e \\<notin> set l\n\ngoal (1 subgoal):\n 1. e = a", "by auto"], ["proof (state)\nthis:\n  e = a\n\ngoal (1 subgoal):\n 1. e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "from snoc.prems"], ["proof (chain)\npicking this:\n  enabled SES s0\\<^bsub>SES\\<^esub> (l @ [a])\n  e \\<in> set (l @ [a])", "have \"\\<exists> t t'. t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t'\""], ["proof (prove)\nusing this:\n  enabled SES s0\\<^bsub>SES\\<^esub> (l @ [a])\n  e \\<in> set (l @ [a])\n\ngoal (1 subgoal):\n 1. \\<exists>t t'. t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t'", "by (auto simp add: enabledPrefixSingleFinalStep)"], ["proof (state)\nthis:\n  \\<exists>t t'. t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t'\n\ngoal (1 subgoal):\n 1. e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "then"], ["proof (chain)\npicking this:\n  \\<exists>t t'. t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t'", "obtain t t' where \"t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t'\""], ["proof (prove)\nusing this:\n  \\<exists>t t'. t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t'\n\ngoal (1 subgoal):\n 1. (\\<And>t t'.\n        t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t'\n\ngoal (1 subgoal):\n 1. e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>", "with e_eq_a SES_correct_transition_relation"], ["proof (chain)\npicking this:\n  e = a\n  correct_transition_relation SES\n  t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t'", "show \"e \\<in> E\\<^bsub>SES\\<^esub>\""], ["proof (prove)\nusing this:\n  e = a\n  correct_transition_relation SES\n  t a\\<longrightarrow>\\<^bsub>SES\\<^esub> t'\n\ngoal (1 subgoal):\n 1. e \\<in> E\\<^bsub>SES\\<^esub>", "by (simp add: correct_transition_relation_def)"], ["proof (state)\nthis:\n  e \\<in> E\\<^bsub>SES\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e \\<notin> set l \\<Longrightarrow> e \\<in> E\\<^bsub>SES\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e \\<in> E\\<^bsub>SES\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e \\<in> E\\<^bsub>SES\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  traces_contain_events (induceES SES)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s0_is_state SES; ses_inputs_are_events SES;\n     ses_outputs_are_events SES; ses_inputs_outputs_disjoint SES;\n     correct_transition_relation SES\\<rbrakk>\n    \\<Longrightarrow> traces_prefixclosed (induceES SES)", "show \"traces_prefixclosed (induceES SES)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. traces_prefixclosed (induceES SES)", "unfolding traces_prefixclosed_def prefixclosed_def induceES_def possible_traces_def prefix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l1\\<in>Tr\\<^bsub>\\<lparr>E_ES = E\\<^bsub>SES\\<^esub>,\n                                 I_ES = I\\<^bsub>SES\\<^esub>,\n                                 O_ES = O\\<^bsub>SES\\<^esub>,\n                                 Tr_ES =\n                                   Collect\n                                    (enabled SES\ns0\\<^bsub>SES\\<^esub>)\\<rparr>\\<^esub>.\n       \\<forall>l2.\n          (\\<exists>l3. l2 @ l3 = l1) \\<longrightarrow>\n          l2 \\<in> Tr\\<^bsub>\\<lparr>E_ES = E\\<^bsub>SES\\<^esub>,\n                                I_ES = I\\<^bsub>SES\\<^esub>,\n                                O_ES = O\\<^bsub>SES\\<^esub>,\n                                Tr_ES =\n                                  Collect\n                                   (enabled SES\n                                     s0\\<^bsub>SES\\<^esub>)\\<rparr>\\<^esub>", "by (clarsimp simp add: enabledPrefix)"], ["proof (state)\nthis:\n  traces_prefixclosed (induceES SES)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}