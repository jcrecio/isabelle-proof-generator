{"file_name": "/home/qj213/afp-2021-10-22/thys/Modular_Assembly_Kit_Security/Verification/Unwinding/UnwindingResults.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modular_Assembly_Kit_Security", "problem_names": ["theorem unwinding_theorem_BSD:\n\"\\<lbrakk> lrf ur; osc ur \\<rbrakk> \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_BSI:\n\"\\<lbrakk> lrb ur; osc ur \\<rbrakk> \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_BSIA:\n\"\\<lbrakk> lrbe \\<rho> ur; osc ur \\<rbrakk> \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_FCD:\n\"\\<lbrakk> fcrf \\<Gamma> ur; osc ur \\<rbrakk> \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_FCI:\n\"\\<lbrakk> fcrb \\<Gamma> ur; osc ur \\<rbrakk> \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_FCIA:\n\"\\<lbrakk> fcrbe \\<Gamma> \\<rho> ur; osc ur \\<rbrakk> \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_SD:\n\"\\<lbrakk> \\<V>' = \\<lparr> V = (V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>), N = {}, C = C\\<^bsub>\\<V>\\<^esub> \\<rparr>; \n  Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur \\<rbrakk> \n  \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_SI:\n\"\\<lbrakk> \\<V>' = \\<lparr> V = (V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>), N = {}, C = C\\<^bsub>\\<V>\\<^esub> \\<rparr>; \n  Unwinding.lrb SES \\<V>' ur; Unwinding.osc SES \\<V>' ur \\<rbrakk> \n  \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_SIA: \n\"\\<lbrakk> \\<V>' = \\<lparr> V = (V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>), N = {}, C = C\\<^bsub>\\<V>\\<^esub> \\<rparr>; \\<rho> \\<V> = \\<rho> \\<V>'; \n  Unwinding.lrbe SES \\<V>' \\<rho> ur; Unwinding.osc SES \\<V>' ur \\<rbrakk> \n  \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_SR:\n\"\\<lbrakk> \\<V>' = \\<lparr> V = (V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>), N = {}, C = C\\<^bsub>\\<V>\\<^esub> \\<rparr>; \n  Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur \\<rbrakk> \n  \\<Longrightarrow> SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_D:\n\"\\<lbrakk> lrf ur; osc ur \\<rbrakk> \\<Longrightarrow> D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_I:\n\"\\<lbrakk> lrb ur; osc ur \\<rbrakk> \\<Longrightarrow> I \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_IA:\n\"\\<lbrakk> lrbe \\<rho> ur; osc ur \\<rbrakk> \\<Longrightarrow> IA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\"", "theorem unwinding_theorem_R:\n\"\\<lbrakk> lrf ur; osc ur \\<rbrakk> \\<Longrightarrow> R \\<V> (Tr\\<^bsub>(induceES SES)\\<^esub>)\""], "translations": [["", "theorem unwinding_theorem_BSD:\n\"\\<lbrakk> lrf ur; osc ur \\<rbrakk> \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume lrf_true: \"lrf ur\""], ["proof (state)\nthis:\n  lrf ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc_true: \"osc ur\""], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "{"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "(* show that the conclusion of the BSP follows from the assumptions *)"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "fix \\<alpha> \\<beta> c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume c_in_C: \"c \\<in> C\\<^bsub>\\<V>\\<^esub>\""], ["proof (state)\nthis:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<beta>c\\<alpha>_in_Tr: \"((\\<beta> @ [c]) @ \\<alpha>) \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (state)\nthis:\n  (\\<beta> @ [c]) @ \\<alpha> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<alpha>_contains_no_c: \"\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from state_from_induceES_trace[OF \\<beta>c\\<alpha>_in_Tr]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                            [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s", "obtain s1'\n      where s1'_in_S: \"s1' \\<in> S\\<^bsub>SES\\<^esub>\" \n      and enabled_s1'_\\<alpha>: \"enabled SES s1' \\<alpha>\" \n      and s0_\\<beta>c_s1': \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\"\n      and reachable_s1': \"reachable SES s1'\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                            [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s\n\ngoal (1 subgoal):\n 1. (\\<And>s1'.\n        \\<lbrakk>s1' \\<in> S\\<^bsub>SES\\<^esub>; enabled SES s1' \\<alpha>;\n         s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                                [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1';\n         reachable SES s1'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  enabled SES s1' \\<alpha>\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  reachable SES s1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from path_split_single2[OF s0_\\<beta>c_s1']"], ["proof (chain)\npicking this:\n  \\<exists>s'\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<and>\n     s' c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> reachable SES s'", "obtain s1\n      where s1_in_S: \"s1 \\<in> S\\<^bsub>SES\\<^esub>\" \n      and s0_\\<beta>_s1: \"s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\" \n      and s1_c_s1': \"s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\"\n      and reachable_s1: \"reachable SES s1\""], ["proof (prove)\nusing this:\n  \\<exists>s'\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<and>\n     s' c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> reachable SES s'\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        \\<lbrakk>s1 \\<in> S\\<^bsub>SES\\<^esub>;\n         s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1;\n         s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1';\n         reachable SES s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  reachable SES s1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from s1_in_S s1'_in_S c_in_C reachable_s1 s1_c_s1' lrf_true"], ["proof (chain)\npicking this:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  reachable SES s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  lrf ur", "have s1'_ur_s1: \"((s1', s1) \\<in> ur)\""], ["proof (prove)\nusing this:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  reachable SES s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  lrf ur\n\ngoal (1 subgoal):\n 1. (s1', s1) \\<in> ur", "by (simp add: lrf_def, auto)"], ["proof (state)\nthis:\n  (s1', s1) \\<in> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from osc_property[OF osc_true s1_in_S s1'_in_S \\<alpha>_contains_no_c reachable_s1\n      reachable_s1' enabled_s1'_\\<alpha> s1'_ur_s1]"], ["proof (chain)\npicking this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1 \\<alpha>'", "obtain \\<alpha>' \n      where \\<alpha>'_contains_no_c: \"\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\"\n      and \\<alpha>'_V_is_\\<alpha>_V: \"\\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\"\n      and enabled_s1_\\<alpha>': \"enabled SES s1 \\<alpha>'\""], ["proof (prove)\nusing this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1 \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>'.\n        \\<lbrakk>\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n         \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n         \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>;\n         enabled SES s1 \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  enabled SES s1 \\<alpha>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "have \\<beta>\\<alpha>'_in_Tr: \"\\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "note s0_\\<beta>_s1"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "moreover"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from enabled_s1_\\<alpha>'"], ["proof (chain)\npicking this:\n  enabled SES s1 \\<alpha>'", "obtain s2\n        where \"s1 \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\""], ["proof (prove)\nusing this:\n  enabled SES s1 \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>s2.\n        s1 \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: enabled_def, auto)"], ["proof (state)\nthis:\n  s1 \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2", "have \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ \\<alpha>') \\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: induceES_def possible_traces_def enabled_def)"], ["proof (state)\nthis:\n  \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from \\<beta>\\<alpha>'_in_Tr \\<alpha>'_V_is_\\<alpha>_V \\<alpha>'_contains_no_c"], ["proof (chain)\npicking this:\n  \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "have \n      \"\\<exists>\\<alpha>'. ((\\<beta> @ \\<alpha>') \\<in> (Tr\\<^bsub>(induceES SES)\\<^esub>) \\<and> (\\<alpha>' \\<upharpoonleft> (V\\<^bsub>\\<V>\\<^esub>)) = (\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>) \\<and> \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [])\""], ["proof (prove)\nusing this:\n  \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>'.\n       \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>'.\n     \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?c2 \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   (?\\<beta>2 @ [?c2]) @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>'.\n                       ?\\<beta>2 @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?c2 \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   (?\\<beta>2 @ [?c2]) @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>'.\n                       ?\\<beta>2 @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: BSD_def)"], ["proof (state)\nthis:\n  BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_BSI:\n\"\\<lbrakk> lrb ur; osc ur \\<rbrakk> \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume lrb_true: \"lrb ur\""], ["proof (state)\nthis:\n  lrb ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc_true: \"osc ur\""], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "{"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "(* show that the conclusion of the BSP follows from the assumptions *)"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "fix \\<alpha> \\<beta> c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume c_in_C: \"c \\<in> C\\<^bsub>\\<V>\\<^esub>\""], ["proof (state)\nthis:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<beta>\\<alpha>_in_ind_Tr: \"(\\<beta> @ \\<alpha>) \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (state)\nthis:\n  \\<beta> @ \\<alpha> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<alpha>_contains_no_c: \"\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from state_from_induceES_trace[OF \\<beta>\\<alpha>_in_ind_Tr]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s", "obtain s1\n      where s1_in_S : \"s1 \\<in> S\\<^bsub>SES\\<^esub>\"\n      and path_\\<beta>_yields_s1:  \"s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\" \n      and enabled_s1_\\<alpha>: \"enabled SES s1 \\<alpha>\"\n      and reachable_s1: \"reachable SES s1\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        \\<lbrakk>s1 \\<in> S\\<^bsub>SES\\<^esub>;\n         s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1;\n         enabled SES s1 \\<alpha>; reachable SES s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  enabled SES s1 \\<alpha>\n  reachable SES s1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from reachable_s1 s1_in_S c_in_C  lrb_true"], ["proof (chain)\npicking this:\n  reachable SES s1\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  lrb ur", "have \"\\<exists>s1'\\<in> S\\<^bsub>SES\\<^esub>. s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> (s1, s1') \\<in> ur\""], ["proof (prove)\nusing this:\n  reachable SES s1\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  lrb ur\n\ngoal (1 subgoal):\n 1. \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n       s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n       (s1, s1') \\<in> ur", "by(simp add: lrb_def)"], ["proof (state)\nthis:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> (s1, s1') \\<in> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> (s1, s1') \\<in> ur", "obtain s1' \n      where s1'_in_S: \"s1' \\<in> S\\<^bsub>SES\\<^esub>\"\n      and s1_trans_c_s1': \"s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\"\n      and s1_s1'_in_ur: \"(s1, s1') \\<in> ur\""], ["proof (prove)\nusing this:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> (s1, s1') \\<in> ur\n\ngoal (1 subgoal):\n 1. (\\<And>s1'.\n        \\<lbrakk>s1' \\<in> S\\<^bsub>SES\\<^esub>;\n         s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1';\n         (s1, s1') \\<in> ur\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  (s1, s1') \\<in> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "have reachable_s1': \"reachable SES s1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reachable SES s1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. reachable SES s1'", "from path_\\<beta>_yields_s1 s1_trans_c_s1'"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'", "have \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "by (rule path_trans_single)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. reachable SES s1'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. reachable SES s1'", "by (simp add: reachable_def, auto)"], ["proof (state)\nthis:\n  reachable SES s1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  reachable SES s1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from osc_property[OF osc_true s1'_in_S s1_in_S \\<alpha>_contains_no_c \n      reachable_s1' reachable_s1 enabled_s1_\\<alpha> s1_s1'_in_ur]"], ["proof (chain)\npicking this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1' \\<alpha>'", "obtain \\<alpha>' \n      where \\<alpha>'_contains_no_c: \"\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\"\n      and \\<alpha>'_V_is_\\<alpha>_V: \"\\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\"\n      and enabled_s1'_\\<alpha>': \"enabled SES s1' \\<alpha>'\""], ["proof (prove)\nusing this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>'.\n        \\<lbrakk>\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n         \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n         \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>;\n         enabled SES s1' \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "have \\<beta>c\\<alpha>'_in_ind_Tr: \"\\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from path_\\<beta>_yields_s1 s1_trans_c_s1'"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'", "have \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "by (rule path_trans_single)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "moreover"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from enabled_s1'_\\<alpha>'"], ["proof (chain)\npicking this:\n  enabled SES s1' \\<alpha>'", "obtain s2\n        where \"s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\""], ["proof (prove)\nusing this:\n  enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>s2.\n        s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: enabled_def, auto)"], ["proof (state)\nthis:\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2", "have \"s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c]) @ \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c]) @\n                           \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: induceES_def possible_traces_def enabled_def)"], ["proof (state)\nthis:\n  \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from \\<beta>c\\<alpha>'_in_ind_Tr \\<alpha>'_V_is_\\<alpha>_V \\<alpha>'_contains_no_c"], ["proof (chain)\npicking this:\n  \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "have \"\\<exists>\\<alpha>'. \\<beta> @ c # \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and> \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and> \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (prove)\nusing this:\n  \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>'.\n       \\<beta> @ c # \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>'.\n     \\<beta> @ c # \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?c2 \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   ?\\<beta>2 @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>'.\n                       ?\\<beta>2 @ ?c2 # \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?c2 \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   ?\\<beta>2 @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>'.\n                       ?\\<beta>2 @ ?c2 # \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by(simp add: BSI_def)"], ["proof (state)\nthis:\n  BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "(* unwinding theorem for BSP BSIA *)"], ["", "theorem unwinding_theorem_BSIA:\n\"\\<lbrakk> lrbe \\<rho> ur; osc ur \\<rbrakk> \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume lrbe_true: \"lrbe \\<rho> ur\""], ["proof (state)\nthis:\n  lrbe \\<rho> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc_true: \"osc ur\""], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "{"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "(* show that the conclusion of the BSP follows from the assumptions *)"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "fix \\<alpha> \\<beta> c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume c_in_C: \"c \\<in> C\\<^bsub>\\<V>\\<^esub>\""], ["proof (state)\nthis:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<beta>\\<alpha>_in_ind_Tr: \"(\\<beta> @ \\<alpha>) \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (state)\nthis:\n  \\<beta> @ \\<alpha> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<alpha>_contains_no_c: \"\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume adm: \"Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\""], ["proof (state)\nthis:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from state_from_induceES_trace[OF \\<beta>\\<alpha>_in_ind_Tr]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s", "obtain s1 \n      where s1_in_S : \"s1 \\<in> S\\<^bsub>SES\\<^esub>\"\n      and s0_\\<beta>_s1:  \"s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\" \n      and enabled_s1_\\<alpha>: \"enabled SES s1 \\<alpha>\"  \n      and reachable_s1: \"reachable SES s1\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        \\<lbrakk>s1 \\<in> S\\<^bsub>SES\\<^esub>;\n         s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1;\n         enabled SES s1 \\<alpha>; reachable SES s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  enabled SES s1 \\<alpha>\n  reachable SES s1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "(* case distinction whether En is true or not *)"], ["proof (state)\nthis:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  enabled SES s1 \\<alpha>\n  reachable SES s1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "have \"\\<exists>\\<alpha>'. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and> \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and> \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "assume en: \"En \\<rho> s1 c\""], ["proof (state)\nthis:\n  En \\<rho> s1 c\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "(*first case, en is true *)"], ["proof (state)\nthis:\n  En \\<rho> s1 c\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from reachable_s1 s1_in_S c_in_C en lrbe_true"], ["proof (chain)\npicking this:\n  reachable SES s1\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  En \\<rho> s1 c\n  lrbe \\<rho> ur", "have \"\\<exists>s1'\\<in> S\\<^bsub>SES\\<^esub>. s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> (s1, s1') \\<in> ur\""], ["proof (prove)\nusing this:\n  reachable SES s1\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  En \\<rho> s1 c\n  lrbe \\<rho> ur\n\ngoal (1 subgoal):\n 1. \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n       s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n       (s1, s1') \\<in> ur", "by(simp add: lrbe_def)"], ["proof (state)\nthis:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> (s1, s1') \\<in> ur\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "then"], ["proof (chain)\npicking this:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> (s1, s1') \\<in> ur", "obtain s1' \n        where s1'_in_S: \"s1' \\<in> S\\<^bsub>SES\\<^esub>\"\n        and s1_trans_c_s1': \"s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\"\n        and s1_s1'_in_ur: \"(s1, s1') \\<in> ur\""], ["proof (prove)\nusing this:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and> (s1, s1') \\<in> ur\n\ngoal (1 subgoal):\n 1. (\\<And>s1'.\n        \\<lbrakk>s1' \\<in> S\\<^bsub>SES\\<^esub>;\n         s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1';\n         (s1, s1') \\<in> ur\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  (s1, s1') \\<in> ur\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "have reachable_s1': \"reachable SES s1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reachable SES s1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. reachable SES s1'", "from s0_\\<beta>_s1 s1_trans_c_s1'"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'", "have \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "by (rule path_trans_single)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. reachable SES s1'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. reachable SES s1'", "by (simp add: reachable_def, auto)"], ["proof (state)\nthis:\n  reachable SES s1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  reachable SES s1'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from osc_property[OF osc_true s1'_in_S s1_in_S \\<alpha>_contains_no_c \n        reachable_s1' reachable_s1 enabled_s1_\\<alpha> s1_s1'_in_ur]"], ["proof (chain)\npicking this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1' \\<alpha>'", "obtain \\<alpha>' \n        where \\<alpha>'_contains_no_c: \"\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\"\n        and \\<alpha>'_V_is_\\<alpha>_V: \"\\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\"\n        and enabled_s1'_\\<alpha>': \"enabled SES s1' \\<alpha>'\""], ["proof (prove)\nusing this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>'.\n        \\<lbrakk>\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n         \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n         \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>;\n         enabled SES s1' \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  enabled SES s1' \\<alpha>'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "have \\<beta>c\\<alpha>'_in_ind_Tr: \"\\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from s0_\\<beta>_s1 s1_trans_c_s1'"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'", "have \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 c\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "by (rule path_trans_single)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "moreover"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from enabled_s1'_\\<alpha>'"], ["proof (chain)\npicking this:\n  enabled SES s1' \\<alpha>'", "obtain s2\n          where \"s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\""], ["proof (prove)\nusing this:\n  enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>s2.\n        s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: enabled_def, auto)"], ["proof (state)\nthis:\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2", "have \"s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c]) @ \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c]) @\n                           \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: induceES_def possible_traces_def enabled_def)"], ["proof (state)\nthis:\n  \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from \\<beta>c\\<alpha>'_in_ind_Tr \\<alpha>'_V_is_\\<alpha>_V \\<alpha>'_contains_no_c"], ["proof (chain)\npicking this:\n  \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>'.\n     \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "(* second case, en is false *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "assume not_en: \"\\<not> En \\<rho> s1 c\""], ["proof (state)\nthis:\n  \\<not> En \\<rho> s1 c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "let ?A = \"(Adm \\<V> \\<rho> (Tr\\<^bsub>(induceES SES)\\<^esub>) \\<beta> c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "let ?E = \"\\<exists>s \\<in> S\\<^bsub>SES\\<^esub>. (s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and> En \\<rho> s c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "(* show the contraposition of Adm_to_En *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "assume adm: \"?A\""], ["proof (state)\nthis:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from s0_\\<beta>_s1"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1", "have \\<beta>_in_Tr: \"\\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n\ngoal (1 subgoal):\n 1. \\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: induceES_def possible_traces_def enabled_def)"], ["proof (state)\nthis:\n  \\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from  \\<beta>_in_Tr adm"], ["proof (chain)\npicking this:\n  \\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "have \"?E\""], ["proof (prove)\nusing this:\n  \\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n       s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n       En \\<rho> s c", "by (rule Adm_to_En)"], ["proof (state)\nthis:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     En \\<rho> s c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "}"], ["proof (state)\nthis:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta>\n   c \\<Longrightarrow>\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     En \\<rho> s c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "hence Adm_to_En_contr: \"\\<not> ?E \\<Longrightarrow> \\<not> ?A\""], ["proof (prove)\nusing this:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta>\n   c \\<Longrightarrow>\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     En \\<rho> s c\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n               s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n               En \\<rho> s c) \\<Longrightarrow>\n    \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n             s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n             En \\<rho> s c) \\<Longrightarrow>\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "with s1_in_S s0_\\<beta>_s1 not_en"], ["proof (chain)\npicking this:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  \\<not> En \\<rho> s1 c\n  \\<not> (\\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n             s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n             En \\<rho> s c) \\<Longrightarrow>\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "have not_adm: \"\\<not> ?A\""], ["proof (prove)\nusing this:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  \\<not> En \\<rho> s1 c\n  \\<not> (\\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n             s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n             En \\<rho> s c) \\<Longrightarrow>\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "by auto"], ["proof (state)\nthis:\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "with adm"], ["proof (chain)\npicking this:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "show ?thesis"], ["proof (prove)\nusing this:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>'.\n       \\<beta> @ [c] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>'.\n     \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>'.\n     \\<beta> @ [c] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?c2 \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   ?\\<beta>2 @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n   Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> ?\\<beta>2 ?c2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>'.\n                       ?\\<beta>2 @ [?c2] @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?c2 \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   ?\\<beta>2 @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n   Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> ?\\<beta>2 ?c2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>'.\n                       ?\\<beta>2 @ [?c2] @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: BSIA_def)"], ["proof (state)\nthis:\n  BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_FCD:\n\"\\<lbrakk> fcrf \\<Gamma> ur; osc ur \\<rbrakk> \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume fcrf: \"fcrf \\<Gamma> ur\""], ["proof (state)\nthis:\n  fcrf \\<Gamma> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc: \"osc ur\""], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "{"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "(* show that the conclusion of the BSP follows from the assumptions *)"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "fix \\<alpha> \\<beta> c v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume c_in_C_inter_Y: \"c \\<in> (C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>)\""], ["proof (state)\nthis:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume v_in_V_inter_Nabla: \"v \\<in> (V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>)\""], ["proof (state)\nthis:\n  v \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<beta>cv\\<alpha>_in_Tr: \"((\\<beta> @ [c] @ [v]) @ \\<alpha>) \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (state)\nthis:\n  (\\<beta> @ [c] @ [v]) @ \\<alpha> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<alpha>_contains_no_c: \"\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from state_from_induceES_trace[OF \\<beta>cv\\<alpha>_in_Tr]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                            [c] @\n                            [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s", "obtain s1'\n      where s1'_in_S: \"s1' \\<in> S\\<^bsub>SES\\<^esub>\"\n      and s0_\\<beta>cv_s1': \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ ([c] @ [v]))\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\"\n      and enabled_s1'_\\<alpha>: \"enabled SES s1' \\<alpha>\"\n      and reachable_s1': \"reachable SES s1'\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                            [c] @\n                            [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s\n\ngoal (1 subgoal):\n 1. (\\<And>s1'.\n        \\<lbrakk>s1' \\<in> S\\<^bsub>SES\\<^esub>;\n         s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                                [c] @\n                                [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1';\n         enabled SES s1' \\<alpha>; reachable SES s1'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  enabled SES s1' \\<alpha>\n  reachable SES s1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from path_split2[OF s0_\\<beta>cv_s1']"], ["proof (chain)\npicking this:\n  \\<exists>s'\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<and>\n     s' ([c] @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n     reachable SES s'", "obtain s1 \n      where s1_in_S: \"s1 \\<in> S\\<^bsub>SES\\<^esub>\"\n      and s0_\\<beta>_s1: \"s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\"\n      and s1_cv_s1': \"s1 ([c] @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\"\n      and reachable_s1: \"reachable SES s1\""], ["proof (prove)\nusing this:\n  \\<exists>s'\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<and>\n     s' ([c] @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n     reachable SES s'\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        \\<lbrakk>s1 \\<in> S\\<^bsub>SES\\<^esub>;\n         s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1;\n         s1 ([c] @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1';\n         reachable SES s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 ([c] @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  reachable SES s1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from c_in_C_inter_Y v_in_V_inter_Nabla s1_in_S s1'_in_S reachable_s1 s1_cv_s1' fcrf"], ["proof (chain)\npicking this:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>\n  v \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  reachable SES s1\n  s1 ([c] @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  fcrf \\<Gamma> ur", "have \"\\<exists>s1'' \\<in> S\\<^bsub>SES\\<^esub>. \\<exists>\\<delta>. (\\<forall>d \\<in> (set \\<delta>). d \\<in> (N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>)) \\<and>\n      s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'' \\<and> (s1', s1'') \\<in> ur\""], ["proof (prove)\nusing this:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>\n  v \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  reachable SES s1\n  s1 ([c] @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  fcrf \\<Gamma> ur\n\ngoal (1 subgoal):\n 1. \\<exists>s1''\\<in>S\\<^bsub>SES\\<^esub>.\n       \\<exists>\\<delta>.\n          (\\<forall>d\\<in>set \\<delta>.\n              d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                      \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n          s1 (\\<delta> @\n              [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'' \\<and>\n          (s1', s1'') \\<in> ur", "by (simp add: fcrf_def)"], ["proof (state)\nthis:\n  \\<exists>s1''\\<in>S\\<^bsub>SES\\<^esub>.\n     \\<exists>\\<delta>.\n        (\\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n        s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'' \\<and>\n        (s1', s1'') \\<in> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  \\<exists>s1''\\<in>S\\<^bsub>SES\\<^esub>.\n     \\<exists>\\<delta>.\n        (\\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n        s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'' \\<and>\n        (s1', s1'') \\<in> ur", "obtain s1'' \\<delta>\n      where s1''_in_S: \"s1'' \\<in> S\\<^bsub>SES\\<^esub>\"\n      and \\<delta>_in_N_inter_Delta_star: \"(\\<forall>d \\<in> (set \\<delta>). d \\<in> (N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>))\"\n      and s1_\\<delta>v_s1'': \"s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\"\n      and s1'_ur_s1'': \"(s1', s1'') \\<in> ur\""], ["proof (prove)\nusing this:\n  \\<exists>s1''\\<in>S\\<^bsub>SES\\<^esub>.\n     \\<exists>\\<delta>.\n        (\\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n        s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'' \\<and>\n        (s1', s1'') \\<in> ur\n\ngoal (1 subgoal):\n 1. (\\<And>s1'' \\<delta>.\n        \\<lbrakk>s1'' \\<in> S\\<^bsub>SES\\<^esub>;\n         \\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>;\n         s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'';\n         (s1', s1'') \\<in> ur\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1'' \\<in> S\\<^bsub>SES\\<^esub>\n  \\<forall>d\\<in>set \\<delta>.\n     d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>\n  s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  (s1', s1'') \\<in> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "have reachable_s1'': \"reachable SES s1''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reachable SES s1''", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. reachable SES s1''", "from s0_\\<beta>_s1 s1_\\<delta>v_s1''"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''", "have \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ (\\<delta> @ [v]))\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           \\<delta> @\n                           [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n\ngoal (1 subgoal):\n 1. reachable SES s1''", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n\ngoal (1 subgoal):\n 1. reachable SES s1''", "by (simp add: reachable_def, auto)"], ["proof (state)\nthis:\n  reachable SES s1''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  reachable SES s1''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from osc_property[OF  osc s1''_in_S s1'_in_S \\<alpha>_contains_no_c \n      reachable_s1'' reachable_s1' enabled_s1'_\\<alpha> s1'_ur_s1'']"], ["proof (chain)\npicking this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1'' \\<alpha>'", "obtain \\<alpha>' \n      where  \\<alpha>'_contains_no_c: \"\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\"\n      and \\<alpha>'_V_is_\\<alpha>_V: \"\\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\"\n      and enabled_s1''_\\<alpha>': \"enabled SES s1'' \\<alpha>'\""], ["proof (prove)\nusing this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1'' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>'.\n        \\<lbrakk>\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n         \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n         \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>;\n         enabled SES s1'' \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  enabled SES s1'' \\<alpha>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "have \\<beta>\\<delta>v\\<alpha>'_in_Tr: \"\\<beta> @ \\<delta> @ [v] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from s0_\\<beta>_s1 s1_\\<delta>v_s1''"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''", "have \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 (\\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           \\<delta> @\n                           [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "moreover"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from enabled_s1''_\\<alpha>'"], ["proof (chain)\npicking this:\n  enabled SES s1'' \\<alpha>'", "obtain s2\n          where \"s1'' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\""], ["proof (prove)\nusing this:\n  enabled SES s1'' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>s2.\n        s1'' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: enabled_def, auto)"], ["proof (state)\nthis:\n  s1'' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  s1'' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2", "have \"s0\\<^bsub>SES\\<^esub> ((\\<beta> @ \\<delta> @ [v]) @ \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  s1'' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> ((\\<beta> @ \\<delta> @ [v]) @\n                           \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ \\<delta> @ [v]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ \\<delta> @ [v]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s2\n\ngoal (1 subgoal):\n 1. \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: induceES_def possible_traces_def enabled_def)"], ["proof (state)\nthis:\n  \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from \\<delta>_in_N_inter_Delta_star \\<beta>\\<delta>v\\<alpha>'_in_Tr \\<alpha>'_V_is_\\<alpha>_V \\<alpha>'_contains_no_c"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>set \\<delta>.\n     d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>\n  \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "have \"\\<exists>\\<alpha>'. \\<exists>\\<delta>'. set \\<delta>' \\<subseteq> (N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and> \\<beta> @ \\<delta>' @ [v] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \n        \\<and> \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and> \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>set \\<delta>.\n     d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>\n  \\<beta> @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>' \\<delta>'.\n     set \\<delta>'\n     \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n     \\<beta> @ \\<delta>' @ [v] @ \\<alpha>'\n     \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?c2\n           \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>;\n   ?v2\n   \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>;\n   (?\\<beta>2 @ [?c2] @ [?v2]) @ ?\\<alpha>2\n   \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>' \\<delta>'.\n                       set \\<delta>'\n                       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n                       ?\\<beta>2 @ \\<delta>' @ [?v2] @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrf \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?c2\n           \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>;\n   ?v2\n   \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>;\n   (?\\<beta>2 @ [?c2] @ [?v2]) @ ?\\<alpha>2\n   \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>' \\<delta>'.\n                       set \\<delta>'\n                       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n                       ?\\<beta>2 @ \\<delta>' @ [?v2] @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: FCD_def)"], ["proof (state)\nthis:\n  FCD \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_FCI:\n\"\\<lbrakk> fcrb \\<Gamma> ur; osc ur \\<rbrakk> \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume fcrb: \"fcrb \\<Gamma> ur\""], ["proof (state)\nthis:\n  fcrb \\<Gamma> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc: \"osc ur\""], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "{"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "(* show that the conclusion of the BSP follows from the assumptions *)"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "fix \\<alpha> \\<beta> c v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume c_in_C_inter_Y: \"c \\<in> (C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>)\""], ["proof (state)\nthis:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume v_in_V_inter_Nabla: \"v \\<in> (V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>)\""], ["proof (state)\nthis:\n  v \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<beta>v\\<alpha>_in_Tr: \"((\\<beta> @ [v]) @ \\<alpha>) \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (state)\nthis:\n  (\\<beta> @ [v]) @ \\<alpha> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<alpha>_contains_no_c: \"\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from state_from_induceES_trace[OF \\<beta>v\\<alpha>_in_Tr]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                            [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s", "obtain s1''\n      where s1''_in_S: \"s1'' \\<in> S\\<^bsub>SES\\<^esub>\"\n      and s0_\\<beta>v_s1'': \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ [v]) \\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\"\n      and enabled_s1''_\\<alpha>: \"enabled SES s1'' \\<alpha>\"\n      and reachable_s1'': \"reachable SES s1''\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                            [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s\n\ngoal (1 subgoal):\n 1. (\\<And>s1''.\n        \\<lbrakk>s1'' \\<in> S\\<^bsub>SES\\<^esub>;\n         s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                                [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'';\n         enabled SES s1'' \\<alpha>; reachable SES s1''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1'' \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  enabled SES s1'' \\<alpha>\n  reachable SES s1''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from path_split_single2[OF s0_\\<beta>v_s1'']"], ["proof (chain)\npicking this:\n  \\<exists>s'\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<and>\n     s' v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'' \\<and> reachable SES s'", "obtain s1 \n      where s1_in_S: \"s1 \\<in> S\\<^bsub>SES\\<^esub>\"\n      and s0_\\<beta>_s1: \"s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\"\n      and s1_v_s1'': \"s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1''\"\n      and reachable_s1: \"reachable SES s1\""], ["proof (prove)\nusing this:\n  \\<exists>s'\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<and>\n     s' v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'' \\<and> reachable SES s'\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        \\<lbrakk>s1 \\<in> S\\<^bsub>SES\\<^esub>;\n         s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1;\n         s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'';\n         reachable SES s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  reachable SES s1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from c_in_C_inter_Y v_in_V_inter_Nabla s1_in_S \n      s1''_in_S reachable_s1 s1_v_s1'' fcrb"], ["proof (chain)\npicking this:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>\n  v \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s1'' \\<in> S\\<^bsub>SES\\<^esub>\n  reachable SES s1\n  s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  fcrb \\<Gamma> ur", "have \"\\<exists>s1' \\<in> S\\<^bsub>SES\\<^esub>. \\<exists>\\<delta>. (\\<forall>d \\<in> (set \\<delta>). d \\<in> (N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>))\n      \\<and> s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n      \\<and> (s1'', s1') \\<in> ur\""], ["proof (prove)\nusing this:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>\n  v \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s1'' \\<in> S\\<^bsub>SES\\<^esub>\n  reachable SES s1\n  s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  fcrb \\<Gamma> ur\n\ngoal (1 subgoal):\n 1. \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n       \\<exists>\\<delta>.\n          (\\<forall>d\\<in>set \\<delta>.\n              d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                      \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n          s1 ([c] @\n              \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n          (s1'', s1') \\<in> ur", "by (simp add: fcrb_def)"], ["proof (state)\nthis:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     \\<exists>\\<delta>.\n        (\\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n        s1 ([c] @\n            \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n        (s1'', s1') \\<in> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     \\<exists>\\<delta>.\n        (\\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n        s1 ([c] @\n            \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n        (s1'', s1') \\<in> ur", "obtain s1' \\<delta>\n      where s1'_in_S: \"s1' \\<in> S\\<^bsub>SES\\<^esub>\"\n      and \\<delta>_in_N_inter_Delta_star: \"(\\<forall>d \\<in> (set \\<delta>). d \\<in> (N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>))\"\n      and s1_c\\<delta>v_s1': \"s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\"\n      and s1''_ur_s1': \"(s1'', s1') \\<in> ur\""], ["proof (prove)\nusing this:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     \\<exists>\\<delta>.\n        (\\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n        s1 ([c] @\n            \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n        (s1'', s1') \\<in> ur\n\ngoal (1 subgoal):\n 1. (\\<And>s1' \\<delta>.\n        \\<lbrakk>s1' \\<in> S\\<^bsub>SES\\<^esub>;\n         \\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>;\n         s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1';\n         (s1'', s1') \\<in> ur\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  \\<forall>d\\<in>set \\<delta>.\n     d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  (s1'', s1') \\<in> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "have reachable_s1': \"reachable SES s1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reachable SES s1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. reachable SES s1'", "from s0_\\<beta>_s1 s1_c\\<delta>v_s1'"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "have \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ ([c] @ \\<delta> @ [v]))\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           [c] @\n                           \\<delta> @\n                           [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. reachable SES s1'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. reachable SES s1'", "by (simp add: reachable_def, auto)"], ["proof (state)\nthis:\n  reachable SES s1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  reachable SES s1'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from osc_property[OF osc s1'_in_S s1''_in_S \\<alpha>_contains_no_c \n      reachable_s1' reachable_s1'' enabled_s1''_\\<alpha> s1''_ur_s1']"], ["proof (chain)\npicking this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1' \\<alpha>'", "obtain \\<alpha>' \n      where  \\<alpha>'_contains_no_c: \"\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\"\n      and \\<alpha>'_V_is_\\<alpha>_V: \"\\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\"\n      and enabled_s1'_\\<alpha>': \"enabled SES s1' \\<alpha>'\""], ["proof (prove)\nusing this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>'.\n        \\<lbrakk>\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n         \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n         \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>;\n         enabled SES s1' \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "have \\<beta>c\\<delta>v\\<alpha>'_in_Tr: \"\\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "let ?l1 = \"\\<beta> @ [c] @ \\<delta> @ [v]\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "let ?l2 = \"\\<alpha>'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from s0_\\<beta>_s1 s1_c\\<delta>v_s1'"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "have \"s0\\<^bsub>SES\\<^esub> (?l1)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           [c] @\n                           \\<delta> @\n                           [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "moreover"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from enabled_s1'_\\<alpha>'"], ["proof (chain)\npicking this:\n  enabled SES s1' \\<alpha>'", "obtain s1337 where \"s1' ?l2 \\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\""], ["proof (prove)\nusing this:\n  enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>s1337.\n        s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: enabled_def, auto)"], ["proof (state)\nthis:\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337", "have \"s0\\<^bsub>SES\\<^esub> (?l1 @ ?l2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c] @ \\<delta> @ [v]) @\n                           \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c] @ \\<delta> @ [v]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c] @ \\<delta> @ [v]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: induceES_def possible_traces_def enabled_def)"], ["proof (state)\nthis:\n  \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from \\<delta>_in_N_inter_Delta_star \\<beta>c\\<delta>v\\<alpha>'_in_Tr \\<alpha>'_V_is_\\<alpha>_V \\<alpha>'_contains_no_c"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>set \\<delta>.\n     d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>\n  \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "have \"\\<exists>\\<alpha>' \\<delta>'.\n      set \\<delta>' \\<subseteq> (N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and> \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \n      \\<and> \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and> \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>set \\<delta>.\n     d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>\n  \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>' \\<delta>'.\n     set \\<delta>'\n     \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n     \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n     \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?c2\n           \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>;\n   ?v2\n   \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>;\n   (?\\<beta>2 @ [?v2]) @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>' \\<delta>'.\n                       set \\<delta>'\n                       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n                       ?\\<beta>2 @ [?c2] @ \\<delta>' @ [?v2] @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrb \\<Gamma> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?c2\n           \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>;\n   ?v2\n   \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>;\n   (?\\<beta>2 @ [?v2]) @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>' \\<delta>'.\n                       set \\<delta>'\n                       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n                       ?\\<beta>2 @ [?c2] @ \\<delta>' @ [?v2] @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by(simp add: FCI_def)"], ["proof (state)\nthis:\n  FCI \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_FCIA:\n\"\\<lbrakk> fcrbe \\<Gamma> \\<rho> ur; osc ur \\<rbrakk> \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "assume fcrbe: \"fcrbe \\<Gamma> \\<rho> ur\""], ["proof (state)\nthis:\n  fcrbe \\<Gamma> \\<rho> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc: \"osc ur\""], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "{"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "(* show that the conclusion of the BSP follows from the assumptions *)"], ["proof (state)\nthis:\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "fix \\<alpha> \\<beta> c v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "assume c_in_C_inter_Y: \"c \\<in> (C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>)\""], ["proof (state)\nthis:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "assume v_in_V_inter_Nabla: \"v \\<in> (V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>)\""], ["proof (state)\nthis:\n  v \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<beta>v\\<alpha>_in_Tr: \"((\\<beta> @ [v]) @ \\<alpha>) \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (state)\nthis:\n  (\\<beta> @ [v]) @ \\<alpha> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<alpha>_contains_no_c: \"\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\""], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "assume adm: \"Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\""], ["proof (state)\nthis:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "from state_from_induceES_trace[OF \\<beta>v\\<alpha>_in_Tr]"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                            [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s", "obtain s1''\n      where s1''_in_S: \"s1'' \\<in> S\\<^bsub>SES\\<^esub>\"\n      and s0_\\<beta>v_s1'': \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\"\n      and enabled_s1''_\\<alpha>: \"enabled SES s1'' \\<alpha>\"\n      and reachable_s1'': \"reachable SES s1''\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                            [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     enabled SES s \\<alpha> \\<and> reachable SES s\n\ngoal (1 subgoal):\n 1. (\\<And>s1''.\n        \\<lbrakk>s1'' \\<in> S\\<^bsub>SES\\<^esub>;\n         s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                                [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'';\n         enabled SES s1'' \\<alpha>; reachable SES s1''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s1'' \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  enabled SES s1'' \\<alpha>\n  reachable SES s1''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "from path_split_single2[OF s0_\\<beta>v_s1'']"], ["proof (chain)\npicking this:\n  \\<exists>s'\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<and>\n     s' v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'' \\<and> reachable SES s'", "obtain s1 \n      where s1_in_S: \"s1 \\<in> S\\<^bsub>SES\\<^esub>\"\n      and s0_\\<beta>_s1: \"s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\"\n      and s1_v_s1'': \"s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1''\"\n      and reachable_s1: \"reachable SES s1\""], ["proof (prove)\nusing this:\n  \\<exists>s'\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s' \\<and>\n     s' v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'' \\<and> reachable SES s'\n\ngoal (1 subgoal):\n 1. (\\<And>s1.\n        \\<lbrakk>s1 \\<in> S\\<^bsub>SES\\<^esub>;\n         s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1;\n         s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1'';\n         reachable SES s1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  reachable SES s1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "have \"\\<exists>\\<alpha>' \\<delta>'.(set \\<delta>' \\<subseteq> (N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and> \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \n      \\<and> \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and> \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "assume en: \"En \\<rho> s1 c\""], ["proof (state)\nthis:\n  En \\<rho> s1 c\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from c_in_C_inter_Y v_in_V_inter_Nabla s1_in_S s1''_in_S reachable_s1 s1_v_s1'' en fcrbe"], ["proof (chain)\npicking this:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>\n  v \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s1'' \\<in> S\\<^bsub>SES\\<^esub>\n  reachable SES s1\n  s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  En \\<rho> s1 c\n  fcrbe \\<Gamma> \\<rho> ur", "have \"\\<exists>s1' \\<in> S\\<^bsub>SES\\<^esub>. \\<exists>\\<delta>. (\\<forall>d \\<in> (set \\<delta>). d \\<in> (N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>))\n        \\<and> s1 ([c] @ \\<delta> @ [v]) \\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n        \\<and> (s1'', s1') \\<in> ur\""], ["proof (prove)\nusing this:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>\n  v \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s1'' \\<in> S\\<^bsub>SES\\<^esub>\n  reachable SES s1\n  s1 v\\<longrightarrow>\\<^bsub>SES\\<^esub> s1''\n  En \\<rho> s1 c\n  fcrbe \\<Gamma> \\<rho> ur\n\ngoal (1 subgoal):\n 1. \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n       \\<exists>\\<delta>.\n          (\\<forall>d\\<in>set \\<delta>.\n              d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                      \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n          s1 ([c] @\n              \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n          (s1'', s1') \\<in> ur", "by (simp add: fcrbe_def)"], ["proof (state)\nthis:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     \\<exists>\\<delta>.\n        (\\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n        s1 ([c] @\n            \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n        (s1'', s1') \\<in> ur\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "then"], ["proof (chain)\npicking this:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     \\<exists>\\<delta>.\n        (\\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n        s1 ([c] @\n            \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n        (s1'', s1') \\<in> ur", "obtain s1' \\<delta>\n        where s1'_in_S: \"s1' \\<in> S\\<^bsub>SES\\<^esub>\"\n        and \\<delta>_in_N_inter_Delta_star: \"(\\<forall>d \\<in> (set \\<delta>). d \\<in> (N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>))\"\n        and s1_c\\<delta>v_s1': \"s1 ([c] @ \\<delta> @ [v]) \\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\"\n        and s1''_ur_s1': \"(s1'', s1') \\<in> ur\""], ["proof (prove)\nusing this:\n  \\<exists>s1'\\<in>S\\<^bsub>SES\\<^esub>.\n     \\<exists>\\<delta>.\n        (\\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>) \\<and>\n        s1 ([c] @\n            \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1' \\<and>\n        (s1'', s1') \\<in> ur\n\ngoal (1 subgoal):\n 1. (\\<And>s1' \\<delta>.\n        \\<lbrakk>s1' \\<in> S\\<^bsub>SES\\<^esub>;\n         \\<forall>d\\<in>set \\<delta>.\n            d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                    \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>;\n         s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1';\n         (s1'', s1') \\<in> ur\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  s1' \\<in> S\\<^bsub>SES\\<^esub>\n  \\<forall>d\\<in>set \\<delta>.\n     d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  (s1'', s1') \\<in> ur\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "have reachable_s1': \"reachable SES s1'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reachable SES s1'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. reachable SES s1'", "from s0_\\<beta>_s1 s1_c\\<delta>v_s1'"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "have \"s0\\<^bsub>SES\\<^esub> (\\<beta> @ ([c] @ \\<delta> @ [v]))\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           [c] @\n                           \\<delta> @\n                           [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. reachable SES s1'", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. reachable SES s1'", "by (simp add: reachable_def, auto)"], ["proof (state)\nthis:\n  reachable SES s1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  reachable SES s1'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from osc_property[OF osc s1'_in_S s1''_in_S \\<alpha>_contains_no_c reachable_s1' \n        reachable_s1'' enabled_s1''_\\<alpha> s1''_ur_s1']"], ["proof (chain)\npicking this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1' \\<alpha>'", "obtain \\<alpha>' \n        where  \\<alpha>'_contains_no_c: \"\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\"\n        and \\<alpha>'_V_is_\\<alpha>_V: \"\\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\"\n        and enabled_s1'_\\<alpha>': \"enabled SES s1' \\<alpha>'\""], ["proof (prove)\nusing this:\n  \\<exists>\\<alpha>'.\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [] \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>'.\n        \\<lbrakk>\\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n         \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n         \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>;\n         enabled SES s1' \\<alpha>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  enabled SES s1' \\<alpha>'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "have \\<beta>c\\<delta>v\\<alpha>'_in_Tr: \"\\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>' \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "let ?l1 = \"\\<beta> @ [c] @ \\<delta> @ [v]\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "let ?l2 = \"\\<alpha>'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from s0_\\<beta>_s1 s1_c\\<delta>v_s1'"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "have \"s0\\<^bsub>SES\\<^esub> (?l1)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  s1 ([c] @ \\<delta> @ [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                           [c] @\n                           \\<delta> @\n                           [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "moreover"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "from enabled_s1'_\\<alpha>'"], ["proof (chain)\npicking this:\n  enabled SES s1' \\<alpha>'", "obtain s1337 where \"s1' ?l2\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\""], ["proof (prove)\nusing this:\n  enabled SES s1' \\<alpha>'\n\ngoal (1 subgoal):\n 1. (\\<And>s1337.\n        s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: enabled_def, auto)"], ["proof (state)\nthis:\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337", "have \"s0\\<^bsub>SES\\<^esub> (?l1 @ ?l2)\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> (\\<beta> @\n                         [c] @\n                         \\<delta> @\n                         [v])\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1'\n  s1' \\<alpha>'\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\n\ngoal (1 subgoal):\n 1. s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c] @ \\<delta> @ [v]) @\n                           \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337", "by (rule path_trans)"], ["proof (state)\nthis:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c] @ \\<delta> @ [v]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> ((\\<beta> @ [c] @ \\<delta> @ [v]) @\n                         \\<alpha>')\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1337\n\ngoal (1 subgoal):\n 1. \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n    \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: induceES_def possible_traces_def enabled_def)"], ["proof (state)\nthis:\n  \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from \\<delta>_in_N_inter_Delta_star \\<beta>c\\<delta>v\\<alpha>'_in_Tr \\<alpha>'_V_is_\\<alpha>_V \\<alpha>'_contains_no_c"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>set \\<delta>.\n     d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>\n  \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>set \\<delta>.\n     d \\<in> N\\<^bsub>\\<V>\\<^esub> \\<inter> \\<Delta>\\<^bsub>\\<Gamma>\\<^esub>\n  \\<beta> @ [c] @ \\<delta> @ [v] @ \\<alpha>'\n  \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub>\n  \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>' \\<delta>'.\n     set \\<delta>'\n     \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n     \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n     \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "assume not_en: \"\\<not> En \\<rho> s1 c\""], ["proof (state)\nthis:\n  \\<not> En \\<rho> s1 c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "let ?A = \"(Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "let ?E = \"\\<exists>s \\<in> S\\<^bsub>SES\\<^esub>. (s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and> En \\<rho> s c)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "(* show the contraposition of Adm_to_En *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "assume adm: \"?A\""], ["proof (state)\nthis:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from s0_\\<beta>_s1"], ["proof (chain)\npicking this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1", "have \\<beta>_in_Tr: \"\\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n\ngoal (1 subgoal):\n 1. \\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: induceES_def possible_traces_def enabled_def)"], ["proof (state)\nthis:\n  \\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "from  \\<beta>_in_Tr adm"], ["proof (chain)\npicking this:\n  \\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "have \"?E\""], ["proof (prove)\nusing this:\n  \\<beta> \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n       s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n       En \\<rho> s c", "by (rule Adm_to_En)"], ["proof (state)\nthis:\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     En \\<rho> s c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "}"], ["proof (state)\nthis:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta>\n   c \\<Longrightarrow>\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     En \\<rho> s c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "hence Adm_to_En_contr: \"\\<not> ?E \\<Longrightarrow> \\<not> ?A\""], ["proof (prove)\nusing this:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta>\n   c \\<Longrightarrow>\n  \\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n     s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n     En \\<rho> s c\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n               s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n               En \\<rho> s c) \\<Longrightarrow>\n    \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "by blast"], ["proof (state)\nthis:\n  \\<not> (\\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n             s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n             En \\<rho> s c) \\<Longrightarrow>\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "with s1_in_S s0_\\<beta>_s1 not_en"], ["proof (chain)\npicking this:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  \\<not> En \\<rho> s1 c\n  \\<not> (\\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n             s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n             En \\<rho> s c) \\<Longrightarrow>\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "have not_adm: \"\\<not> ?A\""], ["proof (prove)\nusing this:\n  s1 \\<in> S\\<^bsub>SES\\<^esub>\n  s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s1\n  \\<not> En \\<rho> s1 c\n  \\<not> (\\<exists>s\\<in>S\\<^bsub>SES\\<^esub>.\n             s0\\<^bsub>SES\\<^esub> \\<beta>\\<Longrightarrow>\\<^bsub>SES\\<^esub> s \\<and>\n             En \\<rho> s c) \\<Longrightarrow>\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "by auto"], ["proof (state)\nthis:\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<not> En \\<rho> s1 c \\<Longrightarrow>\n    \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "with adm"], ["proof (chain)\npicking this:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c", "show ?thesis"], ["proof (prove)\nusing this:\n  Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n  \\<not> Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> \\<beta> c\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>' \\<delta>'.\n       set \\<delta>'\n       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n       \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>' \\<delta>'.\n     set \\<delta>'\n     \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n     \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n     \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>' \\<delta>'.\n     set \\<delta>'\n     \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n     \\<beta> @ [c] @ \\<delta>' @ [v] @ \\<alpha>'\n     \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> \\<and>\n     \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?c2\n           \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>;\n   ?v2\n   \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>;\n   (?\\<beta>2 @ [?v2]) @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n   Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> ?\\<beta>2 ?c2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>' \\<delta>'.\n                       set \\<delta>'\n                       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n                       ?\\<beta>2 @ [?c2] @ \\<delta>' @ [?v2] @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>fcrbe \\<Gamma> \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> FCIA \\<rho> \\<Gamma> \\<V>\n                       Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?c2\n           \\<in> C\\<^bsub>\\<V>\\<^esub> \\<inter>\n                 \\<Upsilon>\\<^bsub>\\<Gamma>\\<^esub>;\n   ?v2\n   \\<in> V\\<^bsub>\\<V>\\<^esub> \\<inter> \\<nabla>\\<^bsub>\\<Gamma>\\<^esub>;\n   (?\\<beta>2 @ [?v2]) @ ?\\<alpha>2 \\<in> Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<alpha>2 \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [];\n   Adm \\<V> \\<rho> Tr\\<^bsub>(induceES SES)\\<^esub> ?\\<beta>2 ?c2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>' \\<delta>'.\n                       set \\<delta>'\n                       \\<subseteq> N\\<^bsub>\\<V>\\<^esub> \\<inter>\n                                   \\<Delta>\\<^bsub>\\<Gamma>\\<^esub> \\<and>\n                       ?\\<beta>2 @ [?c2] @ \\<delta>' @ [?v2] @ \\<alpha>'\n                       \\<in> Tr\\<^bsub>(induceES SES)\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>\\<^esub> =\n                       ?\\<alpha>2 \\<upharpoonleft>\n                       V\\<^bsub>\\<V>\\<^esub> \\<and>\n                       \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = []\n\ngoal (1 subgoal):\n 1. FCIA \\<rho> \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (simp add: FCIA_def)"], ["proof (state)\nthis:\n  FCIA \\<rho> \\<Gamma> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_SD:\n\"\\<lbrakk> \\<V>' = \\<lparr> V = (V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>), N = {}, C = C\\<^bsub>\\<V>\\<^esub> \\<rparr>; \n  Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur \\<rbrakk> \n  \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume view'_def : \"\\<V>' = \\<lparr>V = (V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>), N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\""], ["proof (state)\nthis:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume lrf_view' : \"Unwinding.lrf SES \\<V>' ur\""], ["proof (state)\nthis:\n  Unwinding.lrf SES \\<V>' ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc_view' : \"Unwinding.osc SES \\<V>' ur\""], ["proof (state)\nthis:\n  Unwinding.osc SES \\<V>' ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "interpret modified_view: Unwinding \"SES\" \"\\<V>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unwinding SES \\<V>'", "by (unfold_locales, rule validSES, simp add: view'_def modified_view_valid)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     modified_view.lrf ur; modified_view.osc ur\\<rbrakk>\n    \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from lrf_view' osc_view'"], ["proof (chain)\npicking this:\n  modified_view.lrf ur\n  modified_view.osc ur", "have BSD_view' : \"BSD \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  modified_view.lrf ur\n  modified_view.osc ur\n\ngoal (1 subgoal):\n 1. BSD \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule_tac ur=\"ur\" in modified_view.unwinding_theorem_BSD)"], ["proof (state)\nthis:\n  BSD \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     modified_view.lrf ur; modified_view.osc ur\\<rbrakk>\n    \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "with view'_def BSD_implies_SD_for_modified_view"], ["proof (chain)\npicking this:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n  \\<lbrakk>BSD ?\\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<V>' =\n   \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n      C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n  BSD \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n  \\<lbrakk>BSD ?\\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<V>' =\n   \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n      C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n  BSD \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_SI:\n\"\\<lbrakk> \\<V>' = \\<lparr> V = (V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>), N = {}, C = C\\<^bsub>\\<V>\\<^esub> \\<rparr>; \n  Unwinding.lrb SES \\<V>' ur; Unwinding.osc SES \\<V>' ur \\<rbrakk> \n  \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrb SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrb SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume view'_def : \"\\<V>' = \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\""], ["proof (state)\nthis:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrb SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume lrb_view' : \"Unwinding.lrb SES \\<V>' ur\""], ["proof (state)\nthis:\n  Unwinding.lrb SES \\<V>' ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrb SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc_view' : \"Unwinding.osc SES \\<V>' ur\""], ["proof (state)\nthis:\n  Unwinding.osc SES \\<V>' ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrb SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "interpret modified_view: Unwinding \"SES\" \"\\<V>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unwinding SES \\<V>'", "by (unfold_locales, rule validSES, simp add: view'_def modified_view_valid)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     modified_view.lrb ur; modified_view.osc ur\\<rbrakk>\n    \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from lrb_view' osc_view'"], ["proof (chain)\npicking this:\n  modified_view.lrb ur\n  modified_view.osc ur", "have BSI_view' : \"BSI \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  modified_view.lrb ur\n  modified_view.osc ur\n\ngoal (1 subgoal):\n 1. BSI \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule_tac ur=\"ur\" in modified_view.unwinding_theorem_BSI)"], ["proof (state)\nthis:\n  BSI \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     modified_view.lrb ur; modified_view.osc ur\\<rbrakk>\n    \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "with view'_def BSI_implies_SI_for_modified_view"], ["proof (chain)\npicking this:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n  \\<lbrakk>BSI ?\\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<V>' =\n   \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n      C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n  BSI \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n  \\<lbrakk>BSI ?\\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<V>' =\n   \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n      C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n  BSI \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  SI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_SIA: \n\"\\<lbrakk> \\<V>' = \\<lparr> V = (V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>), N = {}, C = C\\<^bsub>\\<V>\\<^esub> \\<rparr>; \\<rho> \\<V> = \\<rho> \\<V>'; \n  Unwinding.lrbe SES \\<V>' \\<rho> ur; Unwinding.osc SES \\<V>' ur \\<rbrakk> \n  \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     \\<rho> \\<V> = \\<rho> \\<V>'; Unwinding.lrbe SES \\<V>' \\<rho> ur;\n     Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     \\<rho> \\<V> = \\<rho> \\<V>'; Unwinding.lrbe SES \\<V>' \\<rho> ur;\n     Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume view'_def : \"\\<V>' = \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\""], ["proof (state)\nthis:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     \\<rho> \\<V> = \\<rho> \\<V>'; Unwinding.lrbe SES \\<V>' \\<rho> ur;\n     Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \\<rho>_eq : \"\\<rho> \\<V> = \\<rho> \\<V>'\""], ["proof (state)\nthis:\n  \\<rho> \\<V> = \\<rho> \\<V>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     \\<rho> \\<V> = \\<rho> \\<V>'; Unwinding.lrbe SES \\<V>' \\<rho> ur;\n     Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume lrbe_view' : \"Unwinding.lrbe SES \\<V>' \\<rho> ur\""], ["proof (state)\nthis:\n  Unwinding.lrbe SES \\<V>' \\<rho> ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     \\<rho> \\<V> = \\<rho> \\<V>'; Unwinding.lrbe SES \\<V>' \\<rho> ur;\n     Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc_view' : \"Unwinding.osc SES \\<V>' ur\""], ["proof (state)\nthis:\n  Unwinding.osc SES \\<V>' ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     \\<rho> \\<V> = \\<rho> \\<V>'; Unwinding.lrbe SES \\<V>' \\<rho> ur;\n     Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "interpret modified_view: Unwinding \"SES\" \"\\<V>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Unwinding SES \\<V>'", "by (unfold_locales, rule validSES, simp add: view'_def modified_view_valid)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     \\<rho> \\<V> = \\<rho> \\<V>'; modified_view.lrbe \\<rho> ur;\n     modified_view.osc ur\\<rbrakk>\n    \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from lrbe_view' osc_view'"], ["proof (chain)\npicking this:\n  modified_view.lrbe \\<rho> ur\n  modified_view.osc ur", "have BSIA_view' : \"BSIA \\<rho> \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  modified_view.lrbe \\<rho> ur\n  modified_view.osc ur\n\ngoal (1 subgoal):\n 1. BSIA \\<rho> \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule_tac ur=\"ur\" in modified_view.unwinding_theorem_BSIA)"], ["proof (state)\nthis:\n  BSIA \\<rho> \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     \\<rho> \\<V> = \\<rho> \\<V>'; modified_view.lrbe \\<rho> ur;\n     modified_view.osc ur\\<rbrakk>\n    \\<Longrightarrow> SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "with view'_def BSIA_implies_SIA_for_modified_view \\<rho>_eq"], ["proof (chain)\npicking this:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n  \\<lbrakk>BSIA ?\\<rho>' ?\\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<V>' =\n   \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n      C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n   ?\\<rho> \\<V> = ?\\<rho>' ?\\<V>'\\<rbrakk>\n  \\<Longrightarrow> SIA ?\\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<rho> \\<V> = \\<rho> \\<V>'\n  BSIA \\<rho> \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n  \\<lbrakk>BSIA ?\\<rho>' ?\\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>;\n   ?\\<V>' =\n   \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n      C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n   ?\\<rho> \\<V> = ?\\<rho>' ?\\<V>'\\<rbrakk>\n  \\<Longrightarrow> SIA ?\\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n  \\<rho> \\<V> = \\<rho> \\<V>'\n  BSIA \\<rho> \\<V>' Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  SIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_SR:\n\"\\<lbrakk> \\<V>' = \\<lparr> V = (V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>), N = {}, C = C\\<^bsub>\\<V>\\<^esub> \\<rparr>; \n  Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur \\<rbrakk> \n  \\<Longrightarrow> SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume view'_def : \"\\<V>' = \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\""], ["proof (state)\nthis:\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume lrf_view' : \"Unwinding.lrf SES \\<V>' ur\""], ["proof (state)\nthis:\n  Unwinding.lrf SES \\<V>' ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume osc_view' : \"Unwinding.osc SES \\<V>' ur\""], ["proof (state)\nthis:\n  Unwinding.osc SES \\<V>' ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "from lrf_view' osc_view' view'_def"], ["proof (chain)\npicking this:\n  Unwinding.lrf SES \\<V>' ur\n  Unwinding.osc SES \\<V>' ur\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>", "have S_view : \"SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  Unwinding.lrf SES \\<V>' ur\n  Unwinding.osc SES \\<V>' ur\n  \\<V>' =\n  \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub>, N = {},\n     C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule_tac ur=\"ur\" in  unwinding_theorem_SD, auto)"], ["proof (state)\nthis:\n  SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<V>' =\n             \\<lparr>V = V\\<^bsub>\\<V>\\<^esub> \\<union>\n                         N\\<^bsub>\\<V>\\<^esub>,\n                N = {}, C = C\\<^bsub>\\<V>\\<^esub>\\<rparr>;\n     Unwinding.lrf SES \\<V>' ur; Unwinding.osc SES \\<V>' ur\\<rbrakk>\n    \\<Longrightarrow> SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "with SD_implies_SR"], ["proof (chain)\npicking this:\n  SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub> \\<Longrightarrow>\n  SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n  SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub> \\<Longrightarrow>\n  SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n  SD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  SR \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_D:\n\"\\<lbrakk> lrf ur; osc ur \\<rbrakk> \\<Longrightarrow> D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \"lrf ur\"\n  and \"osc ur\""], ["proof (state)\nthis:\n  lrf ur\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "hence \"BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  lrf ur\n  osc ur\n\ngoal (1 subgoal):\n 1. BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule unwinding_theorem_BSD)"], ["proof (state)\nthis:\n  BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule BSD_implies_D)"], ["proof (state)\nthis:\n  D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_I:\n\"\\<lbrakk> lrb ur; osc ur \\<rbrakk> \\<Longrightarrow> I \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> I \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> I \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \"lrb ur\"\n  and \"osc ur\""], ["proof (state)\nthis:\n  lrb ur\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> I \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "hence \"BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  lrb ur\n  osc ur\n\ngoal (1 subgoal):\n 1. BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule unwinding_theorem_BSI)"], ["proof (state)\nthis:\n  BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrb ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> I \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  BSI \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. I \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule BSI_implies_I)"], ["proof (state)\nthis:\n  I \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_IA:\n\"\\<lbrakk> lrbe \\<rho> ur; osc ur \\<rbrakk> \\<Longrightarrow> IA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> IA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> IA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \"lrbe \\<rho> ur\"\n  and \"osc ur\""], ["proof (state)\nthis:\n  lrbe \\<rho> ur\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> IA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "hence \"BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  lrbe \\<rho> ur\n  osc ur\n\ngoal (1 subgoal):\n 1. BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule unwinding_theorem_BSIA)"], ["proof (state)\nthis:\n  BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrbe \\<rho> ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> IA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  BSIA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. IA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule BSIA_implies_IA)"], ["proof (state)\nthis:\n  IA \\<rho> \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unwinding_theorem_R:\n\"\\<lbrakk> lrf ur; osc ur \\<rbrakk> \\<Longrightarrow> R \\<V> (Tr\\<^bsub>(induceES SES)\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> R \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> R \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "assume \"lrf ur\"\n  and \"osc ur\""], ["proof (state)\nthis:\n  lrf ur\n  osc ur\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> R \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "hence \"BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  lrf ur\n  osc ur\n\ngoal (1 subgoal):\n 1. BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule unwinding_theorem_BSD)"], ["proof (state)\nthis:\n  BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> R \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "hence \"D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\""], ["proof (prove)\nusing this:\n  BSD \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule BSD_implies_D)"], ["proof (state)\nthis:\n  D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lrf ur; osc ur\\<rbrakk>\n    \\<Longrightarrow> R \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  D \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal (1 subgoal):\n 1. R \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>", "by (rule D_implies_R)"], ["proof (state)\nthis:\n  R \\<V> Tr\\<^bsub>(induceES SES)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}