{"file_name": "/home/qj213/afp-2021-10-22/thys/Modular_Assembly_Kit_Security/Verification/Compositionality/CompositionSupport.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modular_Assembly_Kit_Security", "problem_names": ["lemma BSD_in_subsystem:\n\"\\<lbrakk> c \\<in> C\\<^bsub>\\<V>\\<^esub>; ((\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) \\<in> Tr\\<^bsub>ESi\\<^esub> ; BSD \\<V>i Tr\\<^bsub>ESi\\<^esub> \\<rbrakk> \n  \\<Longrightarrow> \\<exists>\\<alpha>_i'. ( ((\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) @ \\<alpha>_i') \\<in> Tr\\<^bsub>ESi\\<^esub> \n  \\<and> (\\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = (\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) \\<and> \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [] )\"", "lemma BSD_in_subsystem2:\n\"\\<lbrakk> ((\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) \\<in> Tr\\<^bsub>ESi\\<^esub> ; BSD \\<V>i Tr\\<^bsub>ESi\\<^esub> \\<rbrakk> \n  \\<Longrightarrow> \\<exists> \\<alpha>_i'. ( ((\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) @ \\<alpha>_i') \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and> (\\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = (\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) \\<and> \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [] )\""], "translations": [["", "lemma BSD_in_subsystem:\n\"\\<lbrakk> c \\<in> C\\<^bsub>\\<V>\\<^esub>; ((\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) \\<in> Tr\\<^bsub>ESi\\<^esub> ; BSD \\<V>i Tr\\<^bsub>ESi\\<^esub> \\<rbrakk> \n  \\<Longrightarrow> \\<exists>\\<alpha>_i'. ( ((\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) @ \\<alpha>_i') \\<in> Tr\\<^bsub>ESi\\<^esub> \n  \\<and> (\\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = (\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) \\<and> \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [] )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n     (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n     \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                         \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                         \\<alpha>_i'\n                         \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                         \\<alpha>_i' \\<upharpoonleft>\n                         V\\<^bsub>\\<V>i\\<^esub> =\n                         \\<alpha> \\<upharpoonleft>\n                         V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                         \\<alpha>_i' \\<upharpoonleft>\n                         C\\<^bsub>\\<V>i\\<^esub> =\n                         []", "proof (induct \"length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\" arbitrary: \\<beta> c \\<alpha>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c \\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length\n                 (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "case 0"], ["proof (state)\nthis:\n  0 = length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>c \\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length\n                 (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "(* show that ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> is a suitable choice for \\<alpha>_i' *)"], ["proof (state)\nthis:\n  0 = length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>c \\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length\n                 (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "let ?L = \"([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c \\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length\n                 (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "from 0(3)"], ["proof (chain)\npicking this:\n  (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>", "have \\<beta>_E1_c\\<alpha>_E1_in_Tr1: \"((\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) @ (([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>)) \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by (simp only: projection_concatenation_commute)"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>c \\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length\n                 (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>c \\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length\n                 (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have \"(?L \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = (\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"(?L \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "from validVi"], ["proof (chain)\npicking this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>", "have \"E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> = V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\nusing this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n    V\\<^bsub>\\<V>i\\<^esub>", "by (simp add: isViewOn_def V_valid_def VN_disjoint_def VC_disjoint_def NC_disjoint_def \n          , auto)"], ["proof (state)\nthis:\n  E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n  V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "moreover"], ["proof (state)\nthis:\n  E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n  V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"(?L \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = ([c] @ \\<alpha>) \\<upharpoonleft> (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    ([c] @ \\<alpha>) \\<upharpoonleft>\n    (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)", "by (simp add: projection_def)"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  ([c] @ \\<alpha>) \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n  V\\<^bsub>\\<V>i\\<^esub>\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  ([c] @ \\<alpha>) \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n  V\\<^bsub>\\<V>i\\<^esub>\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  ([c] @ \\<alpha>) \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by auto"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "moreover"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = ([c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) @ (\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> @\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by (rule projection_concatenation_commute)"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> @\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "moreover"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> @\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"([c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []", "from 0(2)"], ["proof (chain)\npicking this:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>", "have \"[c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [c]\""], ["proof (prove)\nusing this:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [c]", "by (simp add: projection_def)"], ["proof (state)\nthis:\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [c]\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []", "moreover"], ["proof (state)\nthis:\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [c]\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []", "have \"[c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    []", "from validVi Cv_inter_Ei_subsetof_Cvi"], ["proof (chain)\npicking this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n  C\\<^bsub>\\<V>\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>\n  \\<subseteq> C\\<^bsub>\\<V>i\\<^esub>", "have \"C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> \\<subseteq> C\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\nusing this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n  C\\<^bsub>\\<V>\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>\n  \\<subseteq> C\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>\n    \\<subseteq> C\\<^bsub>\\<V>i\\<^esub>", "by (simp add: isViewOn_def  V_valid_def VC_disjoint_def, auto)"], ["proof (state)\nthis:\n  C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>\n  \\<subseteq> C\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    []", "moreover"], ["proof (state)\nthis:\n  C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>\n  \\<subseteq> C\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    []", "from 0(1)"], ["proof (chain)\npicking this:\n  0 = length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)", "have \"[c] \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\nusing this:\n  0 = length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "by (simp only: projection_concatenation_commute, auto)"], ["proof (state)\nthis:\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    []", "ultimately"], ["proof (chain)\npicking this:\n  C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>\n  \\<subseteq> C\\<^bsub>\\<V>i\\<^esub>\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "have \"[c] \\<upharpoonleft> (C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>) = []\""], ["proof (prove)\nusing this:\n  C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>\n  \\<subseteq> C\\<^bsub>\\<V>i\\<^esub>\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft>\n    (C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>) =\n    []", "by (rule projection_on_subset)"], ["proof (state)\nthis:\n  [c] \\<upharpoonleft>\n  (C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    []", "thus ?thesis"], ["proof (prove)\nusing this:\n  [c] \\<upharpoonleft>\n  (C\\<^bsub>\\<V>\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    []", "by (simp only: projection_def, auto)"], ["proof (state)\nthis:\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []", "ultimately"], ["proof (chain)\npicking this:\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [c]\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  []", "show ?thesis"], ["proof (prove)\nusing this:\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> = [c]\n  [c] \\<upharpoonleft> C\\<^bsub>\\<V>\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (1 subgoal):\n 1. [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> @\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []", "show ?thesis"], ["proof (prove)\nusing this:\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> @\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  [c] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by auto"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  ([c] @ \\<alpha>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by auto"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>c \\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length\n                 (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>c \\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length\n                 (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have \"?L \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "from 0(1)"], ["proof (chain)\npicking this:\n  0 = length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)", "have \"([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\nusing this:\n  0 = length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "hence \"([c] @ \\<alpha>) \\<upharpoonleft> (C\\<^bsub>\\<V>i\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>) = []\""], ["proof (prove)\nusing this:\n  ([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft>\n    (C\\<^bsub>\\<V>i\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>) =\n    []", "by (rule projection_on_intersection)"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft>\n  (C\\<^bsub>\\<V>i\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "hence \"([c] @ \\<alpha>) \\<upharpoonleft> (E\\<^bsub>ESi\\<^esub> \\<inter> C\\<^bsub>\\<V>i\\<^esub>) = []\""], ["proof (prove)\nusing this:\n  ([c] @ \\<alpha>) \\<upharpoonleft>\n  (C\\<^bsub>\\<V>i\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft>\n    (E\\<^bsub>ESi\\<^esub> \\<inter> C\\<^bsub>\\<V>i\\<^esub>) =\n    []", "by (simp only: Int_commute)"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> C\\<^bsub>\\<V>i\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "thus ?thesis"], ["proof (prove)\nusing this:\n  ([c] @ \\<alpha>) \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> C\\<^bsub>\\<V>i\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "by (simp only: projection_def, auto)"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (2 subgoals):\n 1. \\<And>c \\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length\n                 (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "ultimately"], ["proof (chain)\npicking this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []", "show ?case"], ["proof (prove)\nusing this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  ([c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>_i'.\n     \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n     \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>n =\n           length\n            (([?c] @ ?\\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n   ?c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   (?\\<beta> @ [?c] @ ?\\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n   \\<in> Tr\\<^bsub>ESi\\<^esub>;\n   BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                       ?\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                       \\<alpha>_i'\n                       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                       ?\\<alpha> \\<upharpoonleft>\n                       V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n                       []\n  Suc n = length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "from projection_split_last[OF Suc(2)]"], ["proof (chain)\npicking this:\n  \\<exists>\\<beta> x \\<alpha>.\n     x \\<in> C\\<^bsub>\\<V>i\\<^esub> \\<and>\n     [c] @ \\<alpha> = \\<beta> @ [x] @ \\<alpha> \\<and>\n     \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [] \\<and>\n     n =\n     length ((\\<beta> @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)", "obtain \\<gamma> c_i \\<delta>\n    where c_i_in_C\\<V>i: \"c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\"\n    and   c\\<alpha>_is_\\<gamma>c_i\\<delta>: \"[c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\"\n    and   \\<delta>_no_C\\<V>i:  \"\\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\"\n    and   n_is_len_\\<gamma>\\<delta>_C\\<V>i: \"n = length ((\\<gamma> @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<exists>\\<beta> x \\<alpha>.\n     x \\<in> C\\<^bsub>\\<V>i\\<^esub> \\<and>\n     [c] @ \\<alpha> = \\<beta> @ [x] @ \\<alpha> \\<and>\n     \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [] \\<and>\n     n =\n     length ((\\<beta> @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. (\\<And>c_i \\<gamma> \\<delta>.\n        \\<lbrakk>c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>;\n         [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>;\n         \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n         n =\n         length\n          ((\\<gamma> @ \\<delta>) \\<upharpoonleft>\n           C\\<^bsub>\\<V>i\\<^esub>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  n = length ((\\<gamma> @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "let ?L1 = \"((\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "let ?L2 = \"(\\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "note c_i_in_C\\<V>i"], ["proof (state)\nthis:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have list_with_c_i_in_Tr1: \"(?L1 @ [c_i] @ ?L2) \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "from c_i_in_C\\<V>i validVi"], ["proof (chain)\npicking this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>", "have \"[c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\""], ["proof (prove)\nusing this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]", "by (simp only: isViewOn_def V_valid_def VC_disjoint_def\n        VN_disjoint_def NC_disjoint_def projection_def, auto)"], ["proof (state)\nthis:\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "moreover"], ["proof (state)\nthis:\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "from Suc(4) c\\<alpha>_is_\\<gamma>c_i\\<delta>"], ["proof (chain)\npicking this:\n  (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>", "have \"((\\<beta> @ \\<gamma> @ [c_i] @ \\<delta>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma> @ [c_i] @ \\<delta>) \\<upharpoonleft>\n    E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by auto"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma> @ [c_i] @ \\<delta>) \\<upharpoonleft>\n  E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "hence \"(?L1 @ ([c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) @ ?L2) \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma> @ [c_i] @ \\<delta>) \\<upharpoonleft>\n  E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by (simp only: projection_def, auto)"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by auto"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have \"?L2 \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "from validVi"], ["proof (chain)\npicking this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>", "have \"\\<And>x. (x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> x \\<in> C\\<^bsub>\\<V>i\\<^esub>) = (x \\<in> C\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\nusing this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> E\\<^bsub>ESi\\<^esub> \\<and>\n        x \\<in> C\\<^bsub>\\<V>i\\<^esub>) =\n       (x \\<in> C\\<^bsub>\\<V>i\\<^esub>)", "by (simp add: isViewOn_def V_valid_def VC_disjoint_def\n        VN_disjoint_def NC_disjoint_def, auto)"], ["proof (state)\nthis:\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> C\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "with \\<delta>_no_C\\<V>i"], ["proof (chain)\npicking this:\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> C\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> C\\<^bsub>\\<V>i\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> C\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "by (simp add: projection_def)"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "note Suc(5)"], ["proof (state)\nthis:\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "ultimately"], ["proof (chain)\npicking this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>", "obtain \\<delta>'\n    where \\<delta>'_1: \"(?L1 @ \\<delta>') \\<in> Tr\\<^bsub>ESi\\<^esub>\"\n    and \\<delta>'_2: \"\\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = ?L2 \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\"\n    and \\<delta>'_3: \"\\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\nusing this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>'.\n        \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                 E\\<^bsub>ESi\\<^esub> @\n                 \\<delta>'\n                 \\<in> Tr\\<^bsub>ESi\\<^esub>;\n         \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n         \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n         V\\<^bsub>\\<V>i\\<^esub>;\n         \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding BSD_def"], ["proof (prove)\nusing this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n  \\<forall>\\<alpha> \\<beta>.\n     \\<forall>c\\<in>C\\<^bsub>\\<V>i\\<^esub>.\n        \\<beta> @ [c] @ \\<alpha> \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n        \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n        [] \\<longrightarrow>\n        (\\<exists>\\<alpha>'.\n            \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n            \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n            \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n            \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [])\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>'.\n        \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                 E\\<^bsub>ESi\\<^esub> @\n                 \\<delta>'\n                 \\<in> Tr\\<^bsub>ESi\\<^esub>;\n         \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n         \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n         V\\<^bsub>\\<V>i\\<^esub>;\n         \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "hence \\<delta>'_2': \"\\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n             \\<delta>'\n             \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n     V\\<^bsub>\\<V>i\\<^esub>;\n     \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n    \\<Longrightarrow> \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                      \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"?L2 \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "from validVi"], ["proof (chain)\npicking this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>", "have \"\\<And>x. (x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> x \\<in> V\\<^bsub>\\<V>i\\<^esub>) = (x \\<in> V\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\nusing this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> E\\<^bsub>ESi\\<^esub> \\<and>\n        x \\<in> V\\<^bsub>\\<V>i\\<^esub>) =\n       (x \\<in> V\\<^bsub>\\<V>i\\<^esub>)", "by (simp add: isViewOn_def V_valid_def VC_disjoint_def\n        VN_disjoint_def NC_disjoint_def, auto)"], ["proof (state)\nthis:\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> V\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> V\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> V\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> V\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by (simp add: projection_def)"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n             \\<delta>'\n             \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n     V\\<^bsub>\\<V>i\\<^esub>;\n     \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n    \\<Longrightarrow> \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                      \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "with \\<delta>'_2"], ["proof (chain)\npicking this:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x c \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>c \\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (([c] @ \\<alpha>) \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n                    (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x =\n        length (([c] @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n        (\\<beta> @ [c] @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "proof (cases \\<gamma>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "(* need to distinguish between these cases as the inductive \n      hypothesis can only be applied to one case. *)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "case Nil"], ["proof (state)\nthis:\n  \\<gamma> = []\n\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "with c\\<alpha>_is_\\<gamma>c_i\\<delta>"], ["proof (chain)\npicking this:\n  [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<gamma> = []", "have \"[c] @ \\<alpha> = [c_i] @ \\<delta>\""], ["proof (prove)\nusing this:\n  [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<gamma> = []\n\ngoal (1 subgoal):\n 1. [c] @ \\<alpha> = [c_i] @ \\<delta>", "by auto"], ["proof (state)\nthis:\n  [c] @ \\<alpha> = [c_i] @ \\<delta>\n\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "hence \\<delta>_is_\\<alpha>: \"\\<delta> = \\<alpha>\""], ["proof (prove)\nusing this:\n  [c] @ \\<alpha> = [c_i] @ \\<delta>\n\ngoal (1 subgoal):\n 1. \\<delta> = \\<alpha>", "by auto"], ["proof (state)\nthis:\n  \\<delta> = \\<alpha>\n\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "from \\<delta>'_1"], ["proof (chain)\npicking this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>", "have \\<delta>'_1': \"((\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) @ \\<delta>') \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by (simp only: Nil, auto)"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "moreover"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "note \\<delta>'_2'"], ["proof (state)\nthis:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "moreover"], ["proof (state)\nthis:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "note \\<delta>'_3"], ["proof (state)\nthis:\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (2 subgoals):\n 1. \\<gamma> = [] \\<Longrightarrow>\n    \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n 2. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "ultimately"], ["proof (chain)\npicking this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "by (simp only: \\<delta>_is_\\<alpha>, auto)"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>_i'.\n     \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n     \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "case (Cons x \\<gamma>')"], ["proof (state)\nthis:\n  \\<gamma> = x # \\<gamma>'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "with c\\<alpha>_is_\\<gamma>c_i\\<delta>"], ["proof (chain)\npicking this:\n  [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<gamma> = x # \\<gamma>'", "have \\<gamma>_is_c\\<gamma>': \"\\<gamma> = [c] @ \\<gamma>'\""], ["proof (prove)\nusing this:\n  [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<gamma> = x # \\<gamma>'\n\ngoal (1 subgoal):\n 1. \\<gamma> = [c] @ \\<gamma>'", "by simp"], ["proof (state)\nthis:\n  \\<gamma> = [c] @ \\<gamma>'\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "with n_is_len_\\<gamma>\\<delta>_C\\<V>i"], ["proof (chain)\npicking this:\n  n = length ((\\<gamma> @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  \\<gamma> = [c] @ \\<gamma>'", "have \"n = length (([c] @ \\<gamma>' @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\nusing this:\n  n = length ((\\<gamma> @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  \\<gamma> = [c] @ \\<gamma>'\n\ngoal (1 subgoal):\n 1. n =\n    length\n     (([c] @ \\<gamma>' @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  n =\n  length\n   (([c] @ \\<gamma>' @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "with \\<delta>_no_C\\<V>i \\<delta>'_3"], ["proof (chain)\npicking this:\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  n =\n  length\n   (([c] @ \\<gamma>' @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)", "have \"n = length (([c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  n =\n  length\n   (([c] @ \\<gamma>' @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. n =\n    length\n     (([c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)", "by (simp only: projection_concatenation_commute)"], ["proof (state)\nthis:\n  n =\n  length\n   (([c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "moreover"], ["proof (state)\nthis:\n  n =\n  length\n   (([c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "note Suc(3)"], ["proof (state)\nthis:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "moreover"], ["proof (state)\nthis:\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "have \"((\\<beta> @ [c] @ (\\<gamma>' @ \\<delta>')) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n    E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n    E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "from \\<delta>'_1 validESi"], ["proof (chain)\npicking this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  ES_valid ESi", "have \"\\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  ES_valid ESi\n\ngoal (1 subgoal):\n 1. \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n             \\<delta>'\n             \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     ES_valid ESi\\<rbrakk>\n    \\<Longrightarrow> \\<delta>' =\n                      \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "let ?L = \"(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n             \\<delta>'\n             \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     ES_valid ESi\\<rbrakk>\n    \\<Longrightarrow> \\<delta>' =\n                      \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "from \\<delta>'_1 validESi"], ["proof (chain)\npicking this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  ES_valid ESi", "have \"\\<forall>e \\<in> set ?L. e \\<in> E\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  ES_valid ESi\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>set ((\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                        E\\<^bsub>ESi\\<^esub> @\n                        \\<delta>').\n       e \\<in> E\\<^bsub>ESi\\<^esub>", "by (simp add: ES_valid_def traces_contain_events_def)"], ["proof (state)\nthis:\n  \\<forall>e\\<in>set ((\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                      E\\<^bsub>ESi\\<^esub> @\n                      \\<delta>').\n     e \\<in> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n             \\<delta>'\n             \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     ES_valid ESi\\<rbrakk>\n    \\<Longrightarrow> \\<delta>' =\n                      \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "hence \"set \\<delta>' \\<subseteq> E\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>set ((\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                      E\\<^bsub>ESi\\<^esub> @\n                      \\<delta>').\n     e \\<in> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. set \\<delta>' \\<subseteq> E\\<^bsub>ESi\\<^esub>", "by auto"], ["proof (state)\nthis:\n  set \\<delta>' \\<subseteq> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n             \\<delta>'\n             \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     ES_valid ESi\\<rbrakk>\n    \\<Longrightarrow> \\<delta>' =\n                      \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  set \\<delta>' \\<subseteq> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "by (simp add: list_subset_iff_projection_neutral)"], ["proof (state)\nthis:\n  \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n    E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "with \\<delta>'_1"], ["proof (chain)\npicking this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "have \"?L1 @ \\<delta>' = (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>' =\n    (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "by (simp only: projection_concatenation_commute, auto)"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>' =\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n    E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "with \\<gamma>_is_c\\<gamma>' \\<delta>'_1"], ["proof (chain)\npicking this:\n  \\<gamma> = [c] @ \\<gamma>'\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>' =\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<gamma> = [c] @ \\<gamma>'\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>' =\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n    E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by auto"], ["proof (state)\nthis:\n  (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n  E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n  E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "moreover"], ["proof (state)\nthis:\n  (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n  E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "note Suc(5)"], ["proof (state)\nthis:\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "moreover"], ["proof (state)\nthis:\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "note Suc(1)[of c \"\\<gamma>' @ \\<delta>'\" \\<beta>]"], ["proof (state)\nthis:\n  \\<lbrakk>n =\n           length\n            (([c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n             C\\<^bsub>\\<V>i\\<^esub>);\n   c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n   E\\<^bsub>ESi\\<^esub>\n   \\<in> Tr\\<^bsub>ESi\\<^esub>;\n   BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                       \\<alpha>_i'\n                       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                       (\\<gamma>' @ \\<delta>') \\<upharpoonleft>\n                       V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n                       []\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "ultimately"], ["proof (chain)\npicking this:\n  n =\n  length\n   (([c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n  E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n  \\<lbrakk>n =\n           length\n            (([c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n             C\\<^bsub>\\<V>i\\<^esub>);\n   c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n   E\\<^bsub>ESi\\<^esub>\n   \\<in> Tr\\<^bsub>ESi\\<^esub>;\n   BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                       \\<alpha>_i'\n                       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                       (\\<gamma>' @ \\<delta>') \\<upharpoonleft>\n                       V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n                       []", "obtain \\<alpha>_i'\n      where \\<alpha>_i'_1: \"\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i' \\<in> Tr\\<^bsub>ESi\\<^esub>\"\n      and \\<alpha>_i'_2: \"\\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = (\\<gamma>' @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\"\n      and \\<alpha>_i'_3: \"\\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\nusing this:\n  n =\n  length\n   (([c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  c \\<in> C\\<^bsub>\\<V>\\<^esub>\n  (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n  E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n  \\<lbrakk>n =\n           length\n            (([c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n             C\\<^bsub>\\<V>i\\<^esub>);\n   c \\<in> C\\<^bsub>\\<V>\\<^esub>;\n   (\\<beta> @ [c] @ \\<gamma>' @ \\<delta>') \\<upharpoonleft>\n   E\\<^bsub>ESi\\<^esub>\n   \\<in> Tr\\<^bsub>ESi\\<^esub>;\n   BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                       \\<alpha>_i'\n                       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                       (\\<gamma>' @ \\<delta>') \\<upharpoonleft>\n                       V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n                       []\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>_i'.\n        \\<lbrakk>\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n                 \\<in> Tr\\<^bsub>ESi\\<^esub>;\n         \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n         (\\<gamma>' @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>;\n         \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "moreover"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "have \"\\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "from c\\<alpha>_is_\\<gamma>c_i\\<delta> \\<gamma>_is_c\\<gamma>'"], ["proof (chain)\npicking this:\n  [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<gamma> = [c] @ \\<gamma>'", "have \"\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = (\\<gamma>' @ [c_i] @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\nusing this:\n  [c] @ \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<gamma> = [c] @ \\<gamma>'\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    (\\<gamma>' @ [c_i] @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by simp"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ [c_i] @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "with validVi c_i_in_C\\<V>i"], ["proof (chain)\npicking this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ [c_i] @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ [c_i] @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by (simp only: isViewOn_def V_valid_def  VC_disjoint_def\n            VN_disjoint_def NC_disjoint_def projection_concatenation_commute \n            projection_def, auto)"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "moreover"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "from \\<alpha>_i'_2 \\<delta>'_2'"], ["proof (chain)\npicking this:\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"\\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by (simp only: projection_concatenation_commute)"], ["proof (state)\nthis:\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>) \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<gamma> = a # list \\<Longrightarrow>\n       \\<exists>\\<alpha>_i'.\n          \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n          \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n          \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n          \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "ultimately"], ["proof (chain)\npicking this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma>' @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>_i'.\n     \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n     \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>_i'.\n     \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n     \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal:\nNo subgoals!", "qed"], ["", "(*\n    Variant of the previous lemma with different propositions (note the lack of a confidential event c).\n*)"], ["", "lemma BSD_in_subsystem2:\n\"\\<lbrakk> ((\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) \\<in> Tr\\<^bsub>ESi\\<^esub> ; BSD \\<V>i Tr\\<^bsub>ESi\\<^esub> \\<rbrakk> \n  \\<Longrightarrow> \\<exists> \\<alpha>_i'. ( ((\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) @ \\<alpha>_i') \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and> (\\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = (\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) \\<and> \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [] )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n             \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                         \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                         \\<alpha>_i'\n                         \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                         \\<alpha>_i' \\<upharpoonleft>\n                         V\\<^bsub>\\<V>i\\<^esub> =\n                         \\<alpha> \\<upharpoonleft>\n                         V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                         \\<alpha>_i' \\<upharpoonleft>\n                         C\\<^bsub>\\<V>i\\<^esub> =\n                         []", "proof (induct \"length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\" arbitrary: \\<beta> \\<alpha>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "case 0"], ["proof (state)\nthis:\n  0 = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "(* show that \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>  is a suitable choice for \\<alpha>_i' *)"], ["proof (state)\nthis:\n  0 = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "let ?L = \"\\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "from 0(2)"], ["proof (chain)\npicking this:\n  (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>", "have \\<beta>_E1_\\<alpha>_E1_in_Tr1: \"((\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) @ ?L) \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by (simp only: projection_concatenation_commute)"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have \"(?L \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = (\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "from validVi"], ["proof (chain)\npicking this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>", "have \"E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> = V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\nusing this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n    V\\<^bsub>\\<V>i\\<^esub>", "by (simp add: isViewOn_def V_valid_def  VC_disjoint_def\n        VN_disjoint_def NC_disjoint_def, auto)"], ["proof (state)\nthis:\n  E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n  V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "moreover"], ["proof (state)\nthis:\n  E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n  V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"(?L \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>) = \\<alpha> \\<upharpoonleft> (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft>\n    (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)", "by (simp add: projection_def)"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub> =\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> V\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have \"?L \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "from 0(1)"], ["proof (chain)\npicking this:\n  0 = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)", "have \"\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\nusing this:\n  0 = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "hence \"\\<alpha> \\<upharpoonleft> (C\\<^bsub>\\<V>i\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>) = []\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft>\n    (C\\<^bsub>\\<V>i\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>) =\n    []", "by (rule projection_on_intersection)"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft>\n  (C\\<^bsub>\\<V>i\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "hence \"\\<alpha> \\<upharpoonleft> (E\\<^bsub>ESi\\<^esub> \\<inter> C\\<^bsub>\\<V>i\\<^esub>) = []\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<upharpoonleft>\n  (C\\<^bsub>\\<V>i\\<^esub> \\<inter> E\\<^bsub>ESi\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft>\n    (E\\<^bsub>ESi\\<^esub> \\<inter> C\\<^bsub>\\<V>i\\<^esub>) =\n    []", "by (simp only: Int_commute)"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> C\\<^bsub>\\<V>i\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<alpha> \\<upharpoonleft>\n  (E\\<^bsub>ESi\\<^esub> \\<inter> C\\<^bsub>\\<V>i\\<^esub>) =\n  []\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "by (simp only: projection_def, auto)"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (2 subgoals):\n 1. \\<And>\\<alpha> \\<beta>.\n       \\<lbrakk>0 =\n                length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []\n 2. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "ultimately"], ["proof (chain)\npicking this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []", "show ?case"], ["proof (prove)\nusing this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>_i'.\n     \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n     \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>n = length (?\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n   (?\\<beta> @ ?\\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n   \\<in> Tr\\<^bsub>ESi\\<^esub>;\n   BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                       ?\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                       \\<alpha>_i'\n                       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                       ?\\<alpha> \\<upharpoonleft>\n                       V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n                       []\n  Suc n = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "from projection_split_last[OF Suc(2)]"], ["proof (chain)\npicking this:\n  \\<exists>\\<beta> x \\<alpha>.\n     x \\<in> C\\<^bsub>\\<V>i\\<^esub> \\<and>\n     \\<alpha> = \\<beta> @ [x] @ \\<alpha> \\<and>\n     \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [] \\<and>\n     n =\n     length ((\\<beta> @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)", "obtain \\<gamma> c_i \\<delta>\n    where c_i_in_C\\<V>i: \"c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\"\n    and   \\<alpha>_is_\\<gamma>c_i\\<delta>: \"\\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\"\n    and   \\<delta>_no_C\\<V>i:  \"\\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\"\n    and   n_is_len_\\<gamma>\\<delta>_C\\<V>i: \"n = length ((\\<gamma> @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\nusing this:\n  \\<exists>\\<beta> x \\<alpha>.\n     x \\<in> C\\<^bsub>\\<V>i\\<^esub> \\<and>\n     \\<alpha> = \\<beta> @ [x] @ \\<alpha> \\<and>\n     \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [] \\<and>\n     n =\n     length ((\\<beta> @ \\<alpha>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. (\\<And>c_i \\<gamma> \\<delta>.\n        \\<lbrakk>c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>;\n         \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>;\n         \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n         n =\n         length\n          ((\\<gamma> @ \\<delta>) \\<upharpoonleft>\n           C\\<^bsub>\\<V>i\\<^esub>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  n = length ((\\<gamma> @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "let ?L1 = \"((\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "let ?L2 = \"(\\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "(* first apply BSD to get rid of c_i in \\<alpha> *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "note c_i_in_C\\<V>i"], ["proof (state)\nthis:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have list_with_c_i_in_Tr1: \"(?L1 @ [c_i] @ ?L2) \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "from c_i_in_C\\<V>i validVi"], ["proof (chain)\npicking this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>", "have \"[c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\""], ["proof (prove)\nusing this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]", "by (simp only: isViewOn_def V_valid_def  VC_disjoint_def\n        VN_disjoint_def NC_disjoint_def projection_def, auto)"], ["proof (state)\nthis:\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "moreover"], ["proof (state)\nthis:\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "from Suc(3) \\<alpha>_is_\\<gamma>c_i\\<delta>"], ["proof (chain)\npicking this:\n  (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>", "have \"((\\<beta> @ \\<gamma> @ [c_i] @ \\<delta>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma> @ [c_i] @ \\<delta>) \\<upharpoonleft>\n    E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by auto"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma> @ [c_i] @ \\<delta>) \\<upharpoonleft>\n  E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "hence \"(?L1 @ ([c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>) @ ?L2) \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma> @ [c_i] @ \\<delta>) \\<upharpoonleft>\n  E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by (simp only: projection_def, auto)"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> = [c_i]\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n    [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by auto"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have \"?L2 \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "from validVi"], ["proof (chain)\npicking this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>", "have \"\\<And>x. (x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> x \\<in> C\\<^bsub>\\<V>i\\<^esub>) = (x \\<in> C\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\nusing this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> E\\<^bsub>ESi\\<^esub> \\<and>\n        x \\<in> C\\<^bsub>\\<V>i\\<^esub>) =\n       (x \\<in> C\\<^bsub>\\<V>i\\<^esub>)", "by (simp add: isViewOn_def V_valid_def  VC_disjoint_def\n        VN_disjoint_def NC_disjoint_def, auto)"], ["proof (state)\nthis:\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> C\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "with \\<delta>_no_C\\<V>i"], ["proof (chain)\npicking this:\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> C\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> C\\<^bsub>\\<V>i\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> C\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    C\\<^bsub>\\<V>i\\<^esub> =\n    []", "by (simp add: projection_def)"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "note Suc(4)"], ["proof (state)\nthis:\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "ultimately"], ["proof (chain)\npicking this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>", "obtain \\<delta>'\n    where \\<delta>'_1: \"(?L1 @ \\<delta>') \\<in> Tr\\<^bsub>ESi\\<^esub>\"\n    and \\<delta>'_2: \"\\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = ?L2 \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\"\n    and \\<delta>'_3: \"\\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\nusing this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>'.\n        \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                 E\\<^bsub>ESi\\<^esub> @\n                 \\<delta>'\n                 \\<in> Tr\\<^bsub>ESi\\<^esub>;\n         \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n         \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n         V\\<^bsub>\\<V>i\\<^esub>;\n         \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding BSD_def"], ["proof (prove)\nusing this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n  [c_i] @ \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  C\\<^bsub>\\<V>i\\<^esub> =\n  []\n  \\<forall>\\<alpha> \\<beta>.\n     \\<forall>c\\<in>C\\<^bsub>\\<V>i\\<^esub>.\n        \\<beta> @ [c] @ \\<alpha> \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n        \\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n        [] \\<longrightarrow>\n        (\\<exists>\\<alpha>'.\n            \\<beta> @ \\<alpha>' \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n            \\<alpha>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n            \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n            \\<alpha>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [])\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>'.\n        \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                 E\\<^bsub>ESi\\<^esub> @\n                 \\<delta>'\n                 \\<in> Tr\\<^bsub>ESi\\<^esub>;\n         \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n         \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n         V\\<^bsub>\\<V>i\\<^esub>;\n         \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "hence \\<delta>'_2': \"\\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n             \\<delta>'\n             \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n     V\\<^bsub>\\<V>i\\<^esub>;\n     \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n    \\<Longrightarrow> \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                      \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "have \"?L2 \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "from validVi"], ["proof (chain)\npicking this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>", "have \"\\<And>x. (x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> x \\<in> V\\<^bsub>\\<V>i\\<^esub>) = (x \\<in> V\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\nusing this:\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> E\\<^bsub>ESi\\<^esub> \\<and>\n        x \\<in> V\\<^bsub>\\<V>i\\<^esub>) =\n       (x \\<in> V\\<^bsub>\\<V>i\\<^esub>)", "by (simp add: isViewOn_def V_valid_def  VC_disjoint_def\n        VN_disjoint_def NC_disjoint_def, auto)"], ["proof (state)\nthis:\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> V\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> V\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (?x \\<in> E\\<^bsub>ESi\\<^esub> \\<and> ?x \\<in> V\\<^bsub>\\<V>i\\<^esub>) =\n  (?x \\<in> V\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n    V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by (simp add: projection_def)"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n             \\<delta>'\n             \\<in> Tr\\<^bsub>ESi\\<^esub>;\n     \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n     V\\<^bsub>\\<V>i\\<^esub>;\n     \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n    \\<Longrightarrow> \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                      \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "with \\<delta>'_2"], ["proof (chain)\npicking this:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub>\n  \\<delta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<upharpoonleft>\n  V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "(* now that we eliminated c_i, we can apply the inductive hypothesis for ?\\<beta> = \\<beta> and ?\\<alpha> = \\<gamma> @ \\<delta>' *)"], ["proof (state)\nthis:\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "from n_is_len_\\<gamma>\\<delta>_C\\<V>i \\<delta>_no_C\\<V>i \\<delta>'_3"], ["proof (chain)\npicking this:\n  n = length ((\\<gamma> @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "have \"n = length ((\\<gamma> @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\""], ["proof (prove)\nusing this:\n  n = length ((\\<gamma> @ \\<delta>) \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  \\<delta> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  \\<delta>' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. n =\n    length ((\\<gamma> @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)", "by (simp add: projection_concatenation_commute)"], ["proof (state)\nthis:\n  n =\n  length ((\\<gamma> @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  n =\n  length ((\\<gamma> @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have \"(\\<beta> @ (\\<gamma> @ \\<delta>')) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> \\<in> Tr\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "have \"\\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "let ?L = \"(\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "from \\<delta>'_1 validESi"], ["proof (chain)\npicking this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  ES_valid ESi", "have \"\\<forall>e \\<in> set ?L. e \\<in> E\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  ES_valid ESi\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>set ((\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                        E\\<^bsub>ESi\\<^esub> @\n                        \\<delta>').\n       e \\<in> E\\<^bsub>ESi\\<^esub>", "by (simp add: ES_valid_def traces_contain_events_def)"], ["proof (state)\nthis:\n  \\<forall>e\\<in>set ((\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                      E\\<^bsub>ESi\\<^esub> @\n                      \\<delta>').\n     e \\<in> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "hence \"set \\<delta>' \\<subseteq> E\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>set ((\\<beta> @ \\<gamma>) \\<upharpoonleft>\n                      E\\<^bsub>ESi\\<^esub> @\n                      \\<delta>').\n     e \\<in> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. set \\<delta>' \\<subseteq> E\\<^bsub>ESi\\<^esub>", "by auto"], ["proof (state)\nthis:\n  set \\<delta>' \\<subseteq> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  set \\<delta>' \\<subseteq> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "by (simp add: list_subset_iff_projection_neutral)"], ["proof (state)\nthis:\n  \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "with \\<delta>'_1"], ["proof (chain)\npicking this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "have \"?L1 @ \\<delta>' = (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<delta>' = \\<delta>' \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>' =\n    (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "by (simp only: projection_concatenation_commute, auto)"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>' =\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "with \\<delta>'_1"], ["proof (chain)\npicking this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>' =\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  (\\<beta> @ \\<gamma>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<delta>' =\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n    \\<in> Tr\\<^bsub>ESi\\<^esub>", "by auto"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "moreover"], ["proof (state)\nthis:\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "note Suc(4) Suc(1)[of \"\\<gamma> @ \\<delta>'\" \\<beta>]"], ["proof (state)\nthis:\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n  \\<lbrakk>n =\n           length\n            ((\\<gamma> @ \\<delta>') \\<upharpoonleft>\n             C\\<^bsub>\\<V>i\\<^esub>);\n   (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n   \\<in> Tr\\<^bsub>ESi\\<^esub>;\n   BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                       \\<alpha>_i'\n                       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                       (\\<gamma> @ \\<delta>') \\<upharpoonleft>\n                       V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n                       []\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "ultimately"], ["proof (chain)\npicking this:\n  n =\n  length ((\\<gamma> @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n  \\<lbrakk>n =\n           length\n            ((\\<gamma> @ \\<delta>') \\<upharpoonleft>\n             C\\<^bsub>\\<V>i\\<^esub>);\n   (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n   \\<in> Tr\\<^bsub>ESi\\<^esub>;\n   BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                       \\<alpha>_i'\n                       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                       (\\<gamma> @ \\<delta>') \\<upharpoonleft>\n                       V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n                       []", "obtain \\<alpha>_i' \n    where res1: \"\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i' \\<in> Tr\\<^bsub>ESi\\<^esub>\" \n    and res2: \"\\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\"\n    and res3: \"\\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\nusing this:\n  n =\n  length ((\\<gamma> @ \\<delta>') \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>)\n  (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\n  \\<lbrakk>n =\n           length\n            ((\\<gamma> @ \\<delta>') \\<upharpoonleft>\n             C\\<^bsub>\\<V>i\\<^esub>);\n   (\\<beta> @ \\<gamma> @ \\<delta>') \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n   \\<in> Tr\\<^bsub>ESi\\<^esub>;\n   BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                       \\<alpha>_i'\n                       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n                       (\\<gamma> @ \\<delta>') \\<upharpoonleft>\n                       V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> =\n                       []\n\ngoal (1 subgoal):\n 1. (\\<And>\\<alpha>_i'.\n        \\<lbrakk>\\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n                 \\<in> Tr\\<^bsub>ESi\\<^esub>;\n         \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n         (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>;\n         \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "(* Show that the resulting \\<alpha>_i' is suitable *)"], ["proof (state)\nthis:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "have \"\\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "from c_i_in_C\\<V>i validVi"], ["proof (chain)\npicking this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>", "have \"[c_i] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []\""], ["proof (prove)\nusing this:\n  c_i \\<in> C\\<^bsub>\\<V>i\\<^esub>\n  isViewOn \\<V>i E\\<^bsub>ESi\\<^esub>\n\ngoal (1 subgoal):\n 1. [c_i] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []", "by (simp add: isViewOn_def V_valid_def  VC_disjoint_def\n        VN_disjoint_def NC_disjoint_def projection_def, auto)"], ["proof (state)\nthis:\n  [c_i] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "with \\<alpha>_is_\\<gamma>c_i\\<delta> \\<delta>'_2'"], ["proof (chain)\npicking this:\n  \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  [c_i] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []", "have \"\\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<alpha> = \\<gamma> @ [c_i] @ \\<delta>\n  \\<delta>' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<delta> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  [c_i] \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by (simp only: projection_concatenation_commute, auto)"], ["proof (state)\nthis:\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "with res2"], ["proof (chain)\npicking this:\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  (\\<gamma> @ \\<delta>') \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n    \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x \\<alpha> \\<beta>.\n       \\<lbrakk>\\<And>\\<alpha> \\<beta>.\n                   \\<lbrakk>x =\n                            length\n                             (\\<alpha> \\<upharpoonleft>\n                              C\\<^bsub>\\<V>i\\<^esub>);\n                    (\\<beta> @ \\<alpha>) \\<upharpoonleft>\n                    E\\<^bsub>ESi\\<^esub>\n                    \\<in> Tr\\<^bsub>ESi\\<^esub>;\n                    BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = [];\n        Suc x = length (\\<alpha> \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub>);\n        (\\<beta> @ \\<alpha>) \\<upharpoonleft> E\\<^bsub>ESi\\<^esub>\n        \\<in> Tr\\<^bsub>ESi\\<^esub>;\n        BSD \\<V>i Tr\\<^bsub>ESi\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<alpha>_i'.\n                            \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @\n                            \\<alpha>_i'\n                            \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> =\n                            \\<alpha> \\<upharpoonleft>\n                            V\\<^bsub>\\<V>i\\<^esub> \\<and>\n                            \\<alpha>_i' \\<upharpoonleft>\n                            C\\<^bsub>\\<V>i\\<^esub> =\n                            []", "with res1 res3"], ["proof (chain)\npicking this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>", "show ?case"], ["proof (prove)\nusing this:\n  \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n  \\<in> Tr\\<^bsub>ESi\\<^esub>\n  \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n  \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n  \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<alpha>_i'.\n       \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n       \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n       \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n       \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<alpha>_i'.\n     \\<beta> \\<upharpoonleft> E\\<^bsub>ESi\\<^esub> @ \\<alpha>_i'\n     \\<in> Tr\\<^bsub>ESi\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> =\n     \\<alpha> \\<upharpoonleft> V\\<^bsub>\\<V>i\\<^esub> \\<and>\n     \\<alpha>_i' \\<upharpoonleft> C\\<^bsub>\\<V>i\\<^esub> = []\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}