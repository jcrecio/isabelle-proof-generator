{"file_name": "/home/qj213/afp-2021-10-22/thys/Modular_Assembly_Kit_Security/SecuritySpecification/PropertyLibrary.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Modular_Assembly_Kit_Security", "problem_names": ["lemma GNI_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (GNI L H IE)\"", "lemma IBGNI_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (IBGNI L H IE)\"", "lemma FC_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (FC L H IE)\"", "lemma NDO_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (NDO UI L H)\"", "lemma NF_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (NF L H)\"", "lemma GNF_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (GNF L H IE)\"", "lemma SEP_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (SEP L H)\"", "lemma PSP_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (PSP L H)\""], "translations": [["", "lemma GNI_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (GNI L H IE)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    IFP_valid (L \\<union> H) (GNI L H IE)", "unfolding IFP_valid_def GNI_def HighInputsConfidential_def isViewOn_def \n    V_valid_def VN_disjoint_def VC_disjoint_def NC_disjoint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = H - IE,\n                           C = H \\<inter> IE\\<rparr>},\n                       {BSD, BSI}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = H - IE,\n                                  C = H \\<inter> IE\\<rparr>},\n                              {BSD, BSI}).\n           BSP_valid BSP)", "using BasicSecurityPredicates.BSP_valid_BSD BasicSecurityPredicates.BSP_valid_BSI"], ["proof (prove)\nusing this:\n  BSP_valid BSD\n  BSP_valid BSI\n\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = H - IE,\n                           C = H \\<inter> IE\\<rparr>},\n                       {BSD, BSI}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = H - IE,\n                                  C = H \\<inter> IE\\<rparr>},\n                              {BSD, BSI}).\n           BSP_valid BSP)", "by auto"], ["", "(* Literature representation *)"], ["", "definition litGNI :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e set \\<Rightarrow> ('e list) set \\<Rightarrow> bool\"\nwhere \n\"litGNI L H IE Tr \\<equiv> \n  \\<forall> t1 t2 t3. \n    t1 @ t2 \\<in> Tr \\<and> t3 \\<upharpoonleft> (L \\<union> (H - IE)) = t2 \\<upharpoonleft> (L \\<union> (H - IE))\n     \\<longrightarrow> (\\<exists> t4. t1 @ t4 \\<in> Tr \\<and> t4\\<upharpoonleft>(L \\<union> (H \\<inter> IE)) = t3\\<upharpoonleft>(L \\<union> (H \\<inter> IE)))\""], ["", "(* Interleaving-based Generalized Noninterference [ZL97] *)\n(* MAKS representation *)"], ["", "definition IBGNI :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e IFP_type\"\nwhere \"IBGNI L H IE \\<equiv> ( {HighInputsConfidential L H IE}, {D, I})\""], ["", "lemma IBGNI_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (IBGNI L H IE)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    IFP_valid (L \\<union> H) (IBGNI L H IE)", "unfolding IFP_valid_def IBGNI_def HighInputsConfidential_def isViewOn_def \n    V_valid_def VN_disjoint_def VC_disjoint_def NC_disjoint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = H - IE,\n                           C = H \\<inter> IE\\<rparr>},\n                       {D, I}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = H - IE,\n                                  C = H \\<inter> IE\\<rparr>},\n                              {D, I}).\n           BSP_valid BSP)", "using BasicSecurityPredicates.BSP_valid_D BasicSecurityPredicates.BSP_valid_I"], ["proof (prove)\nusing this:\n  BSP_valid D\n  BSP_valid I\n\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = H - IE,\n                           C = H \\<inter> IE\\<rparr>},\n                       {D, I}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = H - IE,\n                                  C = H \\<inter> IE\\<rparr>},\n                              {D, I}).\n           BSP_valid BSP)", "by auto"], ["", "(* Literature representation *)"], ["", "definition \nlitIBGNI :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e set \\<Rightarrow> ('e list) set \\<Rightarrow> bool\"  \nwhere \n\"litIBGNI L H IE Tr \\<equiv> \n  \\<forall> \\<tau>_l \\<in> Tr. \\<forall> t_hi t. \n    (set t_hi) \\<subseteq> (H \\<inter> IE)  \\<and> t \\<in> interleaving t_hi (\\<tau>_l \\<upharpoonleft> L) \n      \\<longrightarrow> (\\<exists> \\<tau>' \\<in> Tr. \\<tau>' \\<upharpoonleft> (L \\<union> (H \\<inter> IE)) = t)\""], ["", "(* Forward Correctability [JT88] *)\n(* MAKS representation *)"], ["", "definition FC :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e IFP_type\"\nwhere \n\"FC L H IE \\<equiv> \n  ( {HighInputsConfidential L H IE}, \n  {BSD, BSI, (FCD \\<lparr> Nabla=IE, Delta={}, Upsilon=IE \\<rparr>), \n             (FCI \\<lparr> Nabla=IE, Delta={}, Upsilon=IE \\<rparr> )})\""], ["", "lemma FC_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (FC L H IE)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (FC L H IE)", "unfolding IFP_valid_def FC_def HighInputsConfidential_def isViewOn_def \n    V_valid_def VN_disjoint_def VC_disjoint_def NC_disjoint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = H - IE,\n                           C = H \\<inter> IE\\<rparr>},\n                       {BSD, BSI,\n                        FCD \\<lparr>Nabla = IE, Delta = {},\n                               Upsilon = IE\\<rparr>,\n                        FCI \\<lparr>Nabla = IE, Delta = {},\n                               Upsilon = IE\\<rparr>}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = H - IE,\n                                  C = H \\<inter> IE\\<rparr>},\n                              {BSD, BSI,\n                               FCD \\<lparr>Nabla = IE, Delta = {},\nUpsilon = IE\\<rparr>,\n                               FCI \\<lparr>Nabla = IE, Delta = {},\nUpsilon = IE\\<rparr>}).\n           BSP_valid BSP)", "using BasicSecurityPredicates.BSP_valid_BSD BasicSecurityPredicates.BSP_valid_BSI\n    BasicSecurityPredicates.BSP_valid_FCD BasicSecurityPredicates.BSP_valid_FCI"], ["proof (prove)\nusing this:\n  BSP_valid BSD\n  BSP_valid BSI\n  BSP_valid (FCD ?\\<Gamma>)\n  BSP_valid (FCI ?\\<Gamma>)\n\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = H - IE,\n                           C = H \\<inter> IE\\<rparr>},\n                       {BSD, BSI,\n                        FCD \\<lparr>Nabla = IE, Delta = {},\n                               Upsilon = IE\\<rparr>,\n                        FCI \\<lparr>Nabla = IE, Delta = {},\n                               Upsilon = IE\\<rparr>}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = H - IE,\n                                  C = H \\<inter> IE\\<rparr>},\n                              {BSD, BSI,\n                               FCD \\<lparr>Nabla = IE, Delta = {},\nUpsilon = IE\\<rparr>,\n                               FCI \\<lparr>Nabla = IE, Delta = {},\nUpsilon = IE\\<rparr>}).\n           BSP_valid BSP)", "by auto"], ["", "(* Literature representation *)"], ["", "definition litFC :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e set \\<Rightarrow> ('e list) set \\<Rightarrow> bool\"\nwhere \n\"litFC L H IE Tr \\<equiv> \n  \\<forall>t_1 t_2. \\<forall> hi \\<in> (H \\<inter> IE). \n  (\n    (\\<forall> li \\<in> (L \\<inter> IE). \n      t_1 @ [li] @ t_2 \\<in> Tr \\<and> t_2 \\<upharpoonleft> (H \\<inter> IE) = [] \n      \\<longrightarrow> (\\<exists> t_3. t_1 @ [hi] @ [li] @ t_3 \\<in> Tr \n                   \\<and> t_3 \\<upharpoonleft> L = t_2 \\<upharpoonleft> L \\<and> t_3 \\<upharpoonleft> (H \\<inter> IE) = [] ))\n      \\<and> (t_1 @ t_2 \\<in> Tr \\<and> t_2 \\<upharpoonleft> (H \\<inter> IE) = [] \n         \\<longrightarrow> (\\<exists> t_3. t_1 @ [hi]  @ t_3 \\<in> Tr \n                      \\<and> t_3 \\<upharpoonleft> L = t_2 \\<upharpoonleft> L \\<and> t_3 \\<upharpoonleft> (H \\<inter> IE) = [] ))\n     \\<and> (\\<forall> li \\<in> (L \\<inter> IE). \n          t_1 @ [hi] @ [li] @ t_2 \\<in> Tr \\<and> t_2 \\<upharpoonleft> (H \\<inter> IE) = [] \n           \\<longrightarrow> (\\<exists> t_3. t_1 @ [li] @ t_3 \\<in> Tr \n                        \\<and> t_3 \\<upharpoonleft> L = t_2 \\<upharpoonleft> L \\<and> t_3 \\<upharpoonleft> (H \\<inter> IE) = [] )) \n          \\<and> (t_1 @ [hi]  @ t_2 \\<in> Tr \\<and> t_2 \\<upharpoonleft> (H \\<inter> IE) = [] \n             \\<longrightarrow> (\\<exists> t_3. t_1  @ t_3 \\<in> Tr \n                          \\<and> t_3 \\<upharpoonleft> L = t_2 \\<upharpoonleft> L \\<and> t_3 \\<upharpoonleft> (H \\<inter> IE) = [] ))\n  )\""], ["", "(* Nondeducibility for outputs [GN88] *)\n(* MAKS representation *)"], ["", "definition NDO :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e IFP_type\"\nwhere \n\"NDO UI L H \\<equiv> \n  ( {HighConfidential L H}, {BSD, (BSIA (\\<lambda> \\<V>. C\\<^bsub>\\<V>\\<^esub> \\<union> (V\\<^bsub>\\<V>\\<^esub> \\<inter> UI)))})\""], ["", "lemma NDO_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (NDO UI L H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    IFP_valid (L \\<union> H) (NDO UI L H)", "unfolding IFP_valid_def NDO_def HighConfidential_def isViewOn_def \n    V_valid_def VN_disjoint_def VC_disjoint_def NC_disjoint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                       {BSD,\n                        BSIA\n                         (\\<lambda>\\<V>.\n                             C\\<^bsub>\\<V>\\<^esub> \\<union>\n                             V\\<^bsub>\\<V>\\<^esub> \\<inter> UI)}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                              {BSD,\n                               BSIA\n                                (\\<lambda>\\<V>.\n                                    C\\<^bsub>\\<V>\\<^esub> \\<union>\n                                    V\\<^bsub>\\<V>\\<^esub> \\<inter> UI)}).\n           BSP_valid BSP)", "using BasicSecurityPredicates.BSP_valid_BSD\n        BasicSecurityPredicates.BSP_valid_BSIA[of \"(\\<lambda> \\<V>. C\\<^bsub>\\<V>\\<^esub> \\<union> (V\\<^bsub>\\<V>\\<^esub> \\<inter> UI))\"]"], ["proof (prove)\nusing this:\n  BSP_valid BSD\n  BSP_valid\n   (BSIA\n     (\\<lambda>\\<V>.\n         C\\<^bsub>\\<V>\\<^esub> \\<union> V\\<^bsub>\\<V>\\<^esub> \\<inter> UI))\n\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                       {BSD,\n                        BSIA\n                         (\\<lambda>\\<V>.\n                             C\\<^bsub>\\<V>\\<^esub> \\<union>\n                             V\\<^bsub>\\<V>\\<^esub> \\<inter> UI)}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                              {BSD,\n                               BSIA\n                                (\\<lambda>\\<V>.\n                                    C\\<^bsub>\\<V>\\<^esub> \\<union>\n                                    V\\<^bsub>\\<V>\\<^esub> \\<inter> UI)}).\n           BSP_valid BSP)", "by auto"], ["", "(* Literature representation *)"], ["", "definition litNDO :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e set \\<Rightarrow> ('e list) set \\<Rightarrow> bool\"\nwhere \n\"litNDO UI L H Tr \\<equiv> \n  \\<forall>\\<tau>_l \\<in> Tr. \\<forall> \\<tau>_hlui \\<in> Tr.  \\<forall> t. \n    t\\<upharpoonleft>L = \\<tau>_l\\<upharpoonleft>L \\<and> t\\<upharpoonleft>(H \\<union> (L \\<inter> UI)) = \\<tau>_hlui\\<upharpoonleft>(H \\<union> (L \\<inter> UI)) \\<longrightarrow> t \\<in> Tr\""], ["", "(* Noninference [ZL97] *)\n(* MAKS representation *)"], ["", "definition NF :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e IFP_type\"\nwhere \n\"NF L H \\<equiv> ( {HighConfidential L H}, {R})\""], ["", "lemma NF_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (NF L H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (NF L H)", "unfolding IFP_valid_def NF_def HighConfidential_def isViewOn_def \n    V_valid_def VN_disjoint_def VC_disjoint_def NC_disjoint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\\<in>fst ({\\<lparr>V = L, N = {}, C = H\\<rparr>}, {R}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = {}, C = H\\<rparr>}, {R}).\n           BSP_valid BSP)", "using BasicSecurityPredicates.BSP_valid_R"], ["proof (prove)\nusing this:\n  BSP_valid R\n\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\\<in>fst ({\\<lparr>V = L, N = {}, C = H\\<rparr>}, {R}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = {}, C = H\\<rparr>}, {R}).\n           BSP_valid BSP)", "by auto"], ["", "(* Literature representation *)"], ["", "definition litNF :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> ('e list) set \\<Rightarrow> bool\"\nwhere \n\"litNF L H Tr \\<equiv> \\<forall>\\<tau> \\<in> Tr. \\<tau> \\<upharpoonleft> L \\<in> Tr\""], ["", "(* Generalized Noninference [ZL97] *)\n(* MAKS representation *)"], ["", "definition GNF :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e IFP_type\"\nwhere \n\"GNF L H IE \\<equiv> ( {HighInputsConfidential L H IE}, {R})\""], ["", "lemma GNF_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (GNF L H IE)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    IFP_valid (L \\<union> H) (GNF L H IE)", "unfolding IFP_valid_def GNF_def HighInputsConfidential_def isViewOn_def \n    V_valid_def VN_disjoint_def VC_disjoint_def NC_disjoint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = H - IE,\n                           C = H \\<inter> IE\\<rparr>},\n                       {R}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = H - IE,\n                                  C = H \\<inter> IE\\<rparr>},\n                              {R}).\n           BSP_valid BSP)", "using BasicSecurityPredicates.BSP_valid_R"], ["proof (prove)\nusing this:\n  BSP_valid R\n\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = H - IE,\n                           C = H \\<inter> IE\\<rparr>},\n                       {R}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = H - IE,\n                                  C = H \\<inter> IE\\<rparr>},\n                              {R}).\n           BSP_valid BSP)", "by auto"], ["", "(* Literature representation *)"], ["", "definition litGNF :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e set \\<Rightarrow> ('e list) set \\<Rightarrow> bool\"\nwhere \n\"litGNF L H IE Tr \\<equiv> \n  \\<forall>\\<tau> \\<in> Tr. \\<exists>\\<tau>' \\<in> Tr. \\<tau>'\\<upharpoonleft> (H \\<inter> IE) = [] \\<and> \\<tau>'\\<upharpoonleft> L = \\<tau> \\<upharpoonleft> L\""], ["", "(* Separability [ZL97] *)\n(* MAKS representation *)"], ["", "definition SEP :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e IFP_type\"\nwhere \n\"SEP L H \\<equiv> ( {HighConfidential L H}, {BSD, (BSIA (\\<lambda> \\<V>. C\\<^bsub>\\<V>\\<^esub>))})\""], ["", "lemma SEP_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (SEP L H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (SEP L H)", "unfolding IFP_valid_def SEP_def HighConfidential_def isViewOn_def \n    V_valid_def VN_disjoint_def VC_disjoint_def NC_disjoint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                       {BSD, BSIA VrecC}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                              {BSD, BSIA VrecC}).\n           BSP_valid BSP)", "using BasicSecurityPredicates.BSP_valid_BSD\n        BasicSecurityPredicates.BSP_valid_BSIA[of \"\\<lambda> \\<V>. C\\<^bsub>\\<V>\\<^esub>\"]"], ["proof (prove)\nusing this:\n  BSP_valid BSD\n  BSP_valid (BSIA VrecC)\n\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                       {BSD, BSIA VrecC}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                              {BSD, BSIA VrecC}).\n           BSP_valid BSP)", "by auto"], ["", "(* Literature representation *)"], ["", "definition litSEP :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> ('e list) set \\<Rightarrow> bool\"\nwhere \n\"litSEP L H Tr \\<equiv> \n  \\<forall>\\<tau>_l \\<in> Tr. \\<forall> \\<tau>_h \\<in> Tr. \n    interleaving (\\<tau>_l \\<upharpoonleft> L) (\\<tau>_h \\<upharpoonleft> H) \\<subseteq> {\\<tau> \\<in> Tr . \\<tau> \\<upharpoonleft> L = \\<tau>_l \\<upharpoonleft> L} \""], ["", "(* Perfect Security Property [ZL97] *)\n(* MAKS representation *)"], ["", "definition PSP :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> 'e IFP_type\"\nwhere \n\"PSP L H \\<equiv> \n  ( {HighConfidential L H}, {BSD, (BSIA (\\<lambda> \\<V>. C\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union> V\\<^bsub>\\<V>\\<^esub>))})\""], ["", "lemma PSP_valid: \"L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (PSP L H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow> IFP_valid (L \\<union> H) (PSP L H)", "unfolding IFP_valid_def PSP_def HighConfidential_def isViewOn_def \n    V_valid_def VN_disjoint_def VC_disjoint_def NC_disjoint_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                       {BSD,\n                        BSIA\n                         (\\<lambda>\\<V>.\n                             C\\<^bsub>\\<V>\\<^esub> \\<union>\n                             N\\<^bsub>\\<V>\\<^esub> \\<union>\n                             V\\<^bsub>\\<V>\\<^esub>)}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                              {BSD,\n                               BSIA\n                                (\\<lambda>\\<V>.\n                                    C\\<^bsub>\\<V>\\<^esub> \\<union>\n                                    N\\<^bsub>\\<V>\\<^esub> \\<union>\n                                    V\\<^bsub>\\<V>\\<^esub>)}).\n           BSP_valid BSP)", "using BasicSecurityPredicates.BSP_valid_BSD\n        BasicSecurityPredicates.BSP_valid_BSIA[of \"\\<lambda> \\<V>. C\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union> V\\<^bsub>\\<V>\\<^esub>\"]"], ["proof (prove)\nusing this:\n  BSP_valid BSD\n  BSP_valid\n   (BSIA\n     (\\<lambda>\\<V>.\n         C\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n         V\\<^bsub>\\<V>\\<^esub>))\n\ngoal (1 subgoal):\n 1. L \\<inter> H = {} \\<Longrightarrow>\n    \\<forall>\\<V>\n             \\<in>fst ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                       {BSD,\n                        BSIA\n                         (\\<lambda>\\<V>.\n                             C\\<^bsub>\\<V>\\<^esub> \\<union>\n                             N\\<^bsub>\\<V>\\<^esub> \\<union>\n                             V\\<^bsub>\\<V>\\<^esub>)}).\n       ((V\\<^bsub>\\<V>\\<^esub> \\<inter> N\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         V\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {} \\<and>\n         N\\<^bsub>\\<V>\\<^esub> \\<inter> C\\<^bsub>\\<V>\\<^esub> = {}) \\<and>\n        V\\<^bsub>\\<V>\\<^esub> \\<union> N\\<^bsub>\\<V>\\<^esub> \\<union>\n        C\\<^bsub>\\<V>\\<^esub> =\n        L \\<union> H) \\<and>\n       (\\<forall>BSP\\<in>snd ({\\<lparr>V = L, N = {}, C = H\\<rparr>},\n                              {BSD,\n                               BSIA\n                                (\\<lambda>\\<V>.\n                                    C\\<^bsub>\\<V>\\<^esub> \\<union>\n                                    N\\<^bsub>\\<V>\\<^esub> \\<union>\n                                    V\\<^bsub>\\<V>\\<^esub>)}).\n           BSP_valid BSP)", "by auto"], ["", "(* Literature representation *)"], ["", "definition litPSP :: \"'e set \\<Rightarrow> 'e set \\<Rightarrow> ('e list) set \\<Rightarrow> bool\"\nwhere \n\"litPSP L H Tr \\<equiv> \n  (\\<forall>\\<tau> \\<in> Tr. \\<tau> \\<upharpoonleft> L \\<in> Tr) \n    \\<and> (\\<forall> \\<alpha> \\<beta>. (\\<beta> @ \\<alpha>) \\<in> Tr \\<and> (\\<alpha> \\<upharpoonleft> H) = [] \n                \\<longrightarrow> (\\<forall> h \\<in> H. \\<beta> @ [h] \\<in> Tr \\<longrightarrow> \\<beta> @ [h] @ \\<alpha> \\<in> Tr))\""], ["", "end"]]}