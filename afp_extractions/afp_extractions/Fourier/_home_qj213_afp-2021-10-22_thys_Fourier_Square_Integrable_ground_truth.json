{"file_name": "/home/qj213/afp-2021-10-22/thys/Fourier/Square_Integrable.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Fourier", "problem_names": ["lemma square_integrable_imp_measurable:\n   \"f square_integrable S \\<Longrightarrow> f \\<in> borel_measurable (lebesgue_on S)\"", "lemma square_integrable_imp_lebesgue:\n   \"f square_integrable S \\<Longrightarrow> S \\<in> sets lebesgue\"", "lemma square_integrable_imp_lspace:\n  assumes \"f square_integrable S\" shows \"f \\<in> lspace (lebesgue_on S) 2\"", "lemma square_integrable_iff_lspace:\n  assumes \"S \\<in> sets lebesgue\"\n  shows \"f square_integrable S \\<longleftrightarrow> f \\<in> lspace (lebesgue_on S) 2\" (is \"?lhs = ?rhs\")", "lemma square_integrable_0 [simp]:\n   \"S \\<in> sets lebesgue \\<Longrightarrow> (\\<lambda>x. 0) square_integrable S\"", "lemma square_integrable_neg_eq [simp]:\n   \"(\\<lambda>x. -(f x)) square_integrable S \\<longleftrightarrow> f square_integrable S\"", "lemma square_integrable_lmult [simp]:\n  assumes \"f square_integrable S\"\n  shows \"(\\<lambda>x. c * f x) square_integrable S\"", "lemma square_integrable_rmult [simp]:\n   \"f square_integrable S \\<Longrightarrow> (\\<lambda>x. f x * c) square_integrable S\"", "lemma square_integrable_imp_absolutely_integrable_product:\n  assumes f: \"f square_integrable S\" and g: \"g square_integrable S\"\n  shows \"(\\<lambda>x. f x * g x) absolutely_integrable_on S\"", "lemma square_integrable_imp_integrable_product:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows  \"integrable (lebesgue_on S) (\\<lambda>x. f x * g x)\"", "lemma square_integrable_add [simp]:\n  assumes f: \"f square_integrable S\" and g: \"g square_integrable S\"\n  shows \"(\\<lambda>x. f x + g x) square_integrable S\"", "lemma square_integrable_diff [simp]:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk> \\<Longrightarrow> (\\<lambda>x. f x - g x) square_integrable S\"", "lemma square_integrable_abs [simp]:\n   \"f square_integrable S \\<Longrightarrow> (\\<lambda>x. \\<bar>f x\\<bar>) square_integrable S\"", "lemma square_integrable_sum [simp]:\n  assumes I: \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> f i square_integrable S\" and S: \"S \\<in> sets lebesgue\"\n  shows \"(\\<lambda>x. \\<Sum>i\\<in>I. f i x) square_integrable S\"", "lemma continuous_imp_square_integrable [simp]:\n   \"continuous_on {a..b} f \\<Longrightarrow> f square_integrable {a..b}\"", "lemma square_integrable_imp_absolutely_integrable:\n  assumes f: \"f square_integrable S\" and S: \"S \\<in> lmeasurable\"\n  shows \"f absolutely_integrable_on S\"", "lemma square_integrable_imp_integrable:\n  assumes f: \"f square_integrable S\" and S: \"S \\<in> lmeasurable\"\n  shows \"integrable (lebesgue_on S) f\"", "lemma l2norm_lnorm: \"l2norm S f = lnorm (lebesgue_on S) 2 f\"", "lemma lnorm_nonneg: \"lnorm M p f \\<ge> 0\"", "lemma lnorm_minus_commute: \"lnorm M p (g - f) = lnorm M p (f - g)\"", "lemma eNorm_triangle_eps:\n  assumes \"eNorm N (x' - x) < a\" \"defect N = 1\"\n  obtains e where \"e > 0\" \"\\<And>y. eNorm N (y - x') < e \\<Longrightarrow> eNorm N (y - x) < a\"", "lemma topspace_topology\\<^sub>N [simp]:\n  assumes \"defect N = 1\" shows \"topspace (topology\\<^sub>N N) = UNIV\"", "lemma tendsto_ine\\<^sub>N_iff_limitin:\n  assumes \"defect N = 1\"\n  shows \"tendsto_ine\\<^sub>N N u x = limitin (topology\\<^sub>N N) u x sequentially\"", "lemma l2product_sym: \"l2product S f g = l2product S g f\"", "lemma l2product_pos_le:\n   \"f square_integrable S \\<Longrightarrow> 0 \\<le> l2product S f f\"", "lemma l2norm_pow_2:\n   \"f square_integrable S \\<Longrightarrow> (l2norm S f) ^ 2 = l2product S f f\"", "lemma l2norm_pos_le:\n   \"f square_integrable S \\<Longrightarrow> 0 \\<le> l2norm S f\"", "lemma l2norm_le: \"(l2norm S f \\<le> l2norm S g \\<longleftrightarrow> l2product S f f \\<le> l2product S g g)\"", "lemma l2norm_eq:\n   \"(l2norm S f = l2norm S g \\<longleftrightarrow> l2product S f f = l2product S g g)\"", "lemma Schwartz_inequality_strong:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"l2product S (\\<lambda>x. \\<bar>f x\\<bar>) (\\<lambda>x. \\<bar>g x\\<bar>) \\<le> l2norm S f * l2norm S g\"", "lemma Schwartz_inequality_abs:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"\\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g\"", "lemma Schwartz_inequality:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"l2product S f g \\<le> l2norm S f * l2norm S g\"", "lemma lnorm_triangle:\n  assumes f: \"f \\<in> lspace M p\" and g: \"g \\<in> lspace M p\" and \"p \\<ge> 1\"\n  shows \"lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g\"", "lemma lnorm_triangle_fun:\n  assumes f: \"f \\<in> lspace M p\" and g: \"g \\<in> lspace M p\" and \"p \\<ge> 1\"\n  shows \"lnorm M p (f + g) \\<le> lnorm M p f + lnorm M p g\"", "lemma l2norm_triangle:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"l2norm S (\\<lambda>x. f x + g x) \\<le> l2norm S f + l2norm S g\"", "lemma l2product_ladd:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S; h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S (\\<lambda>x. f x + g x) h = l2product S f h + l2product S g h\"", "lemma l2product_radd:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S; h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S f(\\<lambda>x. g x + h x) = l2product S f g + l2product S f h\"", "lemma l2product_ldiff:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S; h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S (\\<lambda>x. f x - g x) h = l2product S f h - l2product S g h\"", "lemma l2product_rdiff:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S; h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S f(\\<lambda>x. g x - h x) = l2product S f g - l2product S f h\"", "lemma l2product_lmult:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S (\\<lambda>x. c * f x) g = c * l2product S f g\"", "lemma l2product_rmult:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S f(\\<lambda>x. c * g x) = c * l2product S f g\"", "lemma l2product_lzero [simp]: \"l2product S (\\<lambda>x. 0) f = 0\"", "lemma l2product_rzero [simp]: \"l2product S f(\\<lambda>x. 0) = 0\"", "lemma l2product_lsum:\n  assumes I: \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> (f i) square_integrable S\" and S: \"g square_integrable S\"\n  shows \"l2product S (\\<lambda>x. \\<Sum>i\\<in>I. f i x) g = (\\<Sum>i\\<in>I. l2product S (f i) g)\"", "lemma l2product_rsum:\n  assumes I: \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> (f i) square_integrable S\" and S: \"g square_integrable S\"\n  shows \"l2product S g (\\<lambda>x. \\<Sum>i\\<in>I. f i x) = (\\<Sum>i\\<in>I. l2product S g (f i))\"", "lemma l2norm_lmult:\n   \"f square_integrable S \\<Longrightarrow> l2norm S (\\<lambda>x. c * f x) = \\<bar>c\\<bar> * l2norm S f\"", "lemma l2norm_rmult:\n   \"f square_integrable S \\<Longrightarrow> l2norm S (\\<lambda>x. f x * c) = l2norm S f * \\<bar>c\\<bar>\"", "lemma l2norm_neg:\n   \"f square_integrable S \\<Longrightarrow> l2norm S (\\<lambda>x. - f x) = l2norm S f\"", "lemma l2norm_diff:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"l2norm S (\\<lambda>x. f x - g x) = l2norm S (\\<lambda>x. g x - f x)\"", "lemma eNorm_eq_lnorm: \"\\<lbrakk>f \\<in> lspace M p; p > 0\\<rbrakk> \\<Longrightarrow> eNorm (\\<LL> (ennreal p) M) f = ennreal (lnorm M p f)\"", "lemma Norm_eq_lnorm: \"\\<lbrakk>f \\<in> lspace M p; p > 0\\<rbrakk> \\<Longrightarrow> Norm (\\<LL> (ennreal p) M) f = lnorm M p f\"", "lemma eNorm_ge1_triangular_ineq:\n  assumes \"p \\<ge> (1::real)\"\n  shows \"eNorm (\\<LL> p M) (x + y) \\<le> eNorm (\\<LL> p M) x + eNorm (\\<LL> p M) y\"", "lemma lspace_bounded_measurable:\n  fixes p::real\n  assumes f: \"f \\<in> borel_measurable (lebesgue_on S)\" and g: \"g \\<in> lspace (lebesgue_on S) p\" and \"p > 0\"\n    and le: \" AE x in lebesgue_on S. norm (\\<bar>f x\\<bar> powr p) \\<le> norm (\\<bar>g x\\<bar> powr p)\"\n  shows \"f \\<in> lspace (lebesgue_on S) p\"", "lemma lspace_approximate_bounded:\n  assumes f: \"f \\<in> lspace (lebesgue_on S) p\" and S: \"S \\<in> lmeasurable\" and \"p > 0\" \"e > 0\"\n  obtains g where \"g \\<in> lspace (lebesgue_on S) p\" \"bounded (g ` S)\"\n    \"lnorm (lebesgue_on S) p (f - g) < e\"", "lemma borel_measurable_imp_continuous_limit:\n  fixes h :: \"'a::euclidean_space \\<Rightarrow> 'b::euclidean_space\"\n  assumes h: \"h \\<in> borel_measurable (lebesgue_on S)\" and S: \"S \\<in> sets lebesgue\"\n  obtains g where \"\\<And>n. continuous_on UNIV (g n)\" \"AE x in lebesgue_on S. (\\<lambda>n::nat. g n x) \\<longlonglongrightarrow> h x\"", "lemma absolutely_integrable_approximate_continuous:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes f: \"f absolutely_integrable_on S\" and S: \"S \\<in> lmeasurable\" and \"0 < e\"\n  obtains g where \"continuous_on UNIV g\" \"g absolutely_integrable_on S\" \"integral\\<^sup>L (lebesgue_on S) (\\<lambda>x. \\<bar>f x - g x\\<bar>) < e\""], "translations": [["", "lemma square_integrable_imp_measurable:\n   \"f square_integrable S \\<Longrightarrow> f \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    f \\<in> borel_measurable (lebesgue_on S)", "by (simp add: square_integrable_def)"], ["", "lemma square_integrable_imp_lebesgue:\n   \"f square_integrable S \\<Longrightarrow> S \\<in> sets lebesgue\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow> S \\<in> sets lebesgue", "by (simp add: square_integrable_def)"], ["", "lemma square_integrable_imp_lspace:\n  assumes \"f square_integrable S\" shows \"f \\<in> lspace (lebesgue_on S) 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "have \"(\\<lambda>x. (f x)\\<^sup>2) absolutely_integrable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. (f x)\\<^sup>2) absolutely_integrable_on S", "by (metis assms integrable_on_lebesgue_on nonnegative_absolutely_integrable_1 square_integrable_def zero_le_power2)"], ["proof (state)\nthis:\n  (\\<lambda>x. (f x)\\<^sup>2) absolutely_integrable_on S\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. (f x)\\<^sup>2) absolutely_integrable_on S\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "have \"S \\<in> sets lebesgue\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue", "using assms square_integrable_def"], ["proof (prove)\nusing this:\n  f square_integrable S\n  ?f square_integrable ?S \\<equiv>\n  ?S \\<in> sets lebesgue \\<and>\n  ?f \\<in> borel_measurable (lebesgue_on ?S) \\<and>\n  integrable (lebesgue_on ?S) (\\<lambda>x. (?f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue", "by blast"], ["proof (state)\nthis:\n  S \\<in> sets lebesgue\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. (f x)\\<^sup>2) absolutely_integrable_on S\n  S \\<in> sets lebesgue", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. (f x)\\<^sup>2) absolutely_integrable_on S\n  S \\<in> sets lebesgue\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "by (simp add: assms Lp_space_numeral integrable_restrict_space set_integrable_def square_integrable_imp_measurable)"], ["proof (state)\nthis:\n  f \\<in> lspace (lebesgue_on S) 2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma square_integrable_iff_lspace:\n  assumes \"S \\<in> sets lebesgue\"\n  shows \"f square_integrable S \\<longleftrightarrow> f \\<in> lspace (lebesgue_on S) 2\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f square_integrable S) = (f \\<in> lspace (lebesgue_on S) 2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f square_integrable S \\<Longrightarrow> f \\<in> lspace (lebesgue_on S) 2\n 2. f \\<in> lspace (lebesgue_on S) 2 \\<Longrightarrow> f square_integrable S", "assume L: ?lhs"], ["proof (state)\nthis:\n  f square_integrable S\n\ngoal (2 subgoals):\n 1. f square_integrable S \\<Longrightarrow> f \\<in> lspace (lebesgue_on S) 2\n 2. f \\<in> lspace (lebesgue_on S) 2 \\<Longrightarrow> f square_integrable S", "then"], ["proof (chain)\npicking this:\n  f square_integrable S", "show ?rhs"], ["proof (prove)\nusing this:\n  f square_integrable S\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "using square_integrable_imp_lspace"], ["proof (prove)\nusing this:\n  f square_integrable S\n  ?f square_integrable ?S \\<Longrightarrow>\n  ?f \\<in> lspace (lebesgue_on ?S) 2\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "by blast"], ["proof (state)\nthis:\n  f \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2 \\<Longrightarrow> f square_integrable S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2 \\<Longrightarrow> f square_integrable S", "assume ?rhs"], ["proof (state)\nthis:\n  f \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2 \\<Longrightarrow> f square_integrable S", "then"], ["proof (chain)\npicking this:\n  f \\<in> lspace (lebesgue_on S) 2", "show ?lhs"], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. f square_integrable S", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) 2\n  S \\<in> sets lebesgue\n\ngoal (1 subgoal):\n 1. f square_integrable S", "by (auto simp: Lp_space_numeral square_integrable_def integrable_on_lebesgue_on)"], ["proof (state)\nthis:\n  f square_integrable S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma square_integrable_0 [simp]:\n   \"S \\<in> sets lebesgue \\<Longrightarrow> (\\<lambda>x. 0) square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue \\<Longrightarrow>\n    (\\<lambda>x. 0) square_integrable S", "by (simp add: square_integrable_def power2_eq_square integrable_0)"], ["", "lemma square_integrable_neg_eq [simp]:\n   \"(\\<lambda>x. -(f x)) square_integrable S \\<longleftrightarrow> f square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. - f x) square_integrable S) = (f square_integrable S)", "by (auto simp: square_integrable_def)"], ["", "lemma square_integrable_lmult [simp]:\n  assumes \"f square_integrable S\"\n  shows \"(\\<lambda>x. c * f x) square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c * f x) square_integrable S", "proof (simp add: square_integrable_def, intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. S \\<in> sets lebesgue\n 2. (\\<lambda>x. c * f x) \\<in> borel_measurable (lebesgue_on S)\n 3. integrable (lebesgue_on S) (\\<lambda>x. (c * f x)\\<^sup>2)", "have f: \"f \\<in> borel_measurable (lebesgue_on S)\" \"integrable (lebesgue_on S) (\\<lambda>x. f x ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (lebesgue_on S) &&&\n    integrable (lebesgue_on S) (\\<lambda>x. (f x)\\<^sup>2)", "using assms"], ["proof (prove)\nusing this:\n  f square_integrable S\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (lebesgue_on S) &&&\n    integrable (lebesgue_on S) (\\<lambda>x. (f x)\\<^sup>2)", "by (simp_all add: square_integrable_def)"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (lebesgue_on S)\n  integrable (lebesgue_on S) (\\<lambda>x. (f x)\\<^sup>2)\n\ngoal (3 subgoals):\n 1. S \\<in> sets lebesgue\n 2. (\\<lambda>x. c * f x) \\<in> borel_measurable (lebesgue_on S)\n 3. integrable (lebesgue_on S) (\\<lambda>x. (c * f x)\\<^sup>2)", "then"], ["proof (chain)\npicking this:\n  f \\<in> borel_measurable (lebesgue_on S)\n  integrable (lebesgue_on S) (\\<lambda>x. (f x)\\<^sup>2)", "show \"(\\<lambda>x. c * f x) \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (lebesgue_on S)\n  integrable (lebesgue_on S) (\\<lambda>x. (f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c * f x) \\<in> borel_measurable (lebesgue_on S)", "using borel_measurable_scaleR [of \"\\<lambda>x. c\" \"lebesgue_on S\" f]"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (lebesgue_on S)\n  integrable (lebesgue_on S) (\\<lambda>x. (f x)\\<^sup>2)\n  \\<lbrakk>(\\<lambda>x. c) \\<in> borel_measurable (lebesgue_on S);\n   f \\<in> borel_measurable (lebesgue_on S)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. c *\\<^sub>R f x)\n                    \\<in> borel_measurable (lebesgue_on S)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. c * f x) \\<in> borel_measurable (lebesgue_on S)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. c * f x) \\<in> borel_measurable (lebesgue_on S)\n\ngoal (2 subgoals):\n 1. S \\<in> sets lebesgue\n 2. integrable (lebesgue_on S) (\\<lambda>x. (c * f x)\\<^sup>2)", "have \"integrable (lebesgue_on S) (\\<lambda>x. c\\<^sup>2 * (f x)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. c\\<^sup>2 * (f x)\\<^sup>2)", "by (cases \"c=0\") (auto simp: f integrable_0)"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. c\\<^sup>2 * (f x)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. S \\<in> sets lebesgue\n 2. integrable (lebesgue_on S) (\\<lambda>x. (c * f x)\\<^sup>2)", "then"], ["proof (chain)\npicking this:\n  integrable (lebesgue_on S) (\\<lambda>x. c\\<^sup>2 * (f x)\\<^sup>2)", "show \"integrable (lebesgue_on S) (\\<lambda>x. (c * f x)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  integrable (lebesgue_on S) (\\<lambda>x. c\\<^sup>2 * (f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. (c * f x)\\<^sup>2)", "by (simp add: power2_eq_square mult_ac)"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. (c * f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue", "show \"S \\<in> sets lebesgue\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue", "using assms square_integrable_def"], ["proof (prove)\nusing this:\n  f square_integrable S\n  ?f square_integrable ?S \\<equiv>\n  ?S \\<in> sets lebesgue \\<and>\n  ?f \\<in> borel_measurable (lebesgue_on ?S) \\<and>\n  integrable (lebesgue_on ?S) (\\<lambda>x. (?f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue", "by blast"], ["proof (state)\nthis:\n  S \\<in> sets lebesgue\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma square_integrable_rmult [simp]:\n   \"f square_integrable S \\<Longrightarrow> (\\<lambda>x. f x * c) square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    (\\<lambda>x. f x * c) square_integrable S", "using square_integrable_lmult [of f S c]"], ["proof (prove)\nusing this:\n  f square_integrable S \\<Longrightarrow>\n  (\\<lambda>x. c * f x) square_integrable S\n\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    (\\<lambda>x. f x * c) square_integrable S", "by (simp add: mult.commute)"], ["", "lemma square_integrable_imp_absolutely_integrable_product:\n  assumes f: \"f square_integrable S\" and g: \"g square_integrable S\"\n  shows \"(\\<lambda>x. f x * g x) absolutely_integrable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * g x) absolutely_integrable_on S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * g x) absolutely_integrable_on S", "have fS: \"integrable (lebesgue_on S) (\\<lambda>r. (f r)\\<^sup>2)\" \"integrable (lebesgue_on S) (\\<lambda>r. (g r)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>r. (f r)\\<^sup>2) &&&\n    integrable (lebesgue_on S) (\\<lambda>r. (g r)\\<^sup>2)", "using assms square_integrable_def"], ["proof (prove)\nusing this:\n  f square_integrable S\n  g square_integrable S\n  ?f square_integrable ?S \\<equiv>\n  ?S \\<in> sets lebesgue \\<and>\n  ?f \\<in> borel_measurable (lebesgue_on ?S) \\<and>\n  integrable (lebesgue_on ?S) (\\<lambda>x. (?f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>r. (f r)\\<^sup>2) &&&\n    integrable (lebesgue_on S) (\\<lambda>r. (g r)\\<^sup>2)", "by blast+"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>r. (f r)\\<^sup>2)\n  integrable (lebesgue_on S) (\\<lambda>r. (g r)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * g x) absolutely_integrable_on S", "have \"integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x * g x\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x * g x\\<bar>)", "proof (intro integrable_abs Holder_inequality [of 2 2])"], ["proof (state)\ngoal (7 subgoals):\n 1. 0 < 2\n 2. 0 < 2\n 3. 1 / 2 + 1 / 2 = 1\n 4. f \\<in> borel_measurable (lebesgue_on S)\n 5. g \\<in> borel_measurable (lebesgue_on S)\n 6. integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> powr 2)\n 7. integrable (lebesgue_on S) (\\<lambda>x. \\<bar>g x\\<bar> powr 2)", "show \"f \\<in> borel_measurable (lebesgue_on S)\" \"g \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (lebesgue_on S) &&&\n    g \\<in> borel_measurable (lebesgue_on S)", "using f g square_integrable_def"], ["proof (prove)\nusing this:\n  f square_integrable S\n  g square_integrable S\n  ?f square_integrable ?S \\<equiv>\n  ?S \\<in> sets lebesgue \\<and>\n  ?f \\<in> borel_measurable (lebesgue_on ?S) \\<and>\n  integrable (lebesgue_on ?S) (\\<lambda>x. (?f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (lebesgue_on S) &&&\n    g \\<in> borel_measurable (lebesgue_on S)", "by blast+"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (lebesgue_on S)\n  g \\<in> borel_measurable (lebesgue_on S)\n\ngoal (5 subgoals):\n 1. 0 < 2\n 2. 0 < 2\n 3. 1 / 2 + 1 / 2 = 1\n 4. integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> powr 2)\n 5. integrable (lebesgue_on S) (\\<lambda>x. \\<bar>g x\\<bar> powr 2)", "show \"integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> powr 2)\" \"integrable (lebesgue_on S) (\\<lambda>x. \\<bar>g x\\<bar> powr 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> powr 2) &&&\n    integrable (lebesgue_on S) (\\<lambda>x. \\<bar>g x\\<bar> powr 2)", "using nonnegative_absolutely_integrable_1 [of \"(\\<lambda>x. (f x)\\<^sup>2)\"] nonnegative_absolutely_integrable_1 [of \"(\\<lambda>x. (g x)\\<^sup>2)\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(\\<lambda>x. (f x)\\<^sup>2) integrable_on ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> 0 \\<le> (f x)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. (f x)\\<^sup>2) absolutely_integrable_on ?A\n  \\<lbrakk>(\\<lambda>x. (g x)\\<^sup>2) integrable_on ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> 0 \\<le> (g x)\\<^sup>2\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. (g x)\\<^sup>2) absolutely_integrable_on ?A\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> powr 2) &&&\n    integrable (lebesgue_on S) (\\<lambda>x. \\<bar>g x\\<bar> powr 2)", "by (simp_all add: fS integrable_restrict_space set_integrable_def)"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> powr 2)\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>g x\\<bar> powr 2)\n\ngoal (3 subgoals):\n 1. 0 < 2\n 2. 0 < 2\n 3. 1 / 2 + 1 / 2 = 1", "qed auto"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x * g x\\<bar>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * g x) absolutely_integrable_on S", "then"], ["proof (chain)\npicking this:\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x * g x\\<bar>)", "show ?thesis"], ["proof (prove)\nusing this:\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x * g x\\<bar>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * g x) absolutely_integrable_on S", "using assms"], ["proof (prove)\nusing this:\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x * g x\\<bar>)\n  f square_integrable S\n  g square_integrable S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x * g x) absolutely_integrable_on S", "by (simp add: absolutely_integrable_measurable_real borel_measurable_times square_integrable_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x * g x) absolutely_integrable_on S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma square_integrable_imp_integrable_product:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows  \"integrable (lebesgue_on S) (\\<lambda>x. f x * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. f x * g x)", "using absolutely_integrable_measurable assms integrable_abs_iff"], ["proof (prove)\nusing this:\n  ?S \\<in> sets lebesgue \\<Longrightarrow>\n  (?f absolutely_integrable_on ?S) =\n  (?f \\<in> borel_measurable (lebesgue_on ?S) \\<and>\n   integrable (lebesgue_on ?S) (norm \\<circ> ?f))\n  f square_integrable S\n  g square_integrable S\n  ?f \\<in> borel_measurable ?M \\<Longrightarrow>\n  integrable ?M (\\<lambda>x. \\<bar>?f x\\<bar>) = integrable ?M ?f\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. f x * g x)", "by (metis (full_types) absolutely_integrable_measurable_real square_integrable_def square_integrable_imp_absolutely_integrable_product)"], ["", "lemma square_integrable_add [simp]:\n  assumes f: \"f square_integrable S\" and g: \"g square_integrable S\"\n  shows \"(\\<lambda>x. f x + g x) square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x + g x) square_integrable S", "unfolding square_integrable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue \\<and>\n    (\\<lambda>x. f x + g x) \\<in> borel_measurable (lebesgue_on S) \\<and>\n    integrable (lebesgue_on S) (\\<lambda>x. (f x + g x)\\<^sup>2)", "proof (intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. S \\<in> sets lebesgue\n 2. (\\<lambda>x. f x + g x) \\<in> borel_measurable (lebesgue_on S)\n 3. integrable (lebesgue_on S) (\\<lambda>x. (f x + g x)\\<^sup>2)", "show \"S \\<in> sets lebesgue\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue", "using assms square_integrable_def"], ["proof (prove)\nusing this:\n  f square_integrable S\n  g square_integrable S\n  ?f square_integrable ?S \\<equiv>\n  ?S \\<in> sets lebesgue \\<and>\n  ?f \\<in> borel_measurable (lebesgue_on ?S) \\<and>\n  integrable (lebesgue_on ?S) (\\<lambda>x. (?f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue", "by blast"], ["proof (state)\nthis:\n  S \\<in> sets lebesgue\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. f x + g x) \\<in> borel_measurable (lebesgue_on S)\n 2. integrable (lebesgue_on S) (\\<lambda>x. (f x + g x)\\<^sup>2)", "show \"(\\<lambda>x. f x + g x) \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x + g x) \\<in> borel_measurable (lebesgue_on S)", "by (simp add: f g borel_measurable_add square_integrable_imp_measurable)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x + g x) \\<in> borel_measurable (lebesgue_on S)\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. (f x + g x)\\<^sup>2)", "show \"integrable (lebesgue_on S) (\\<lambda>x. (f x + g x)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. (f x + g x)\\<^sup>2)", "unfolding power2_eq_square distrib_right distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S)\n     (\\<lambda>x. f x * f x + g x * f x + (f x * g x + g x * g x))", "proof (intro Bochner_Integration.integrable_add)"], ["proof (state)\ngoal (4 subgoals):\n 1. integrable (lebesgue_on S) (\\<lambda>x. f x * f x)\n 2. integrable (lebesgue_on S) (\\<lambda>x. g x * f x)\n 3. integrable (lebesgue_on S) (\\<lambda>x. f x * g x)\n 4. integrable (lebesgue_on S) (\\<lambda>x. g x * g x)", "show \"integrable (lebesgue_on S) (\\<lambda>x. f x * f x)\" \"integrable (lebesgue_on S) (\\<lambda>x. g x * g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. f x * f x) &&&\n    integrable (lebesgue_on S) (\\<lambda>x. g x * g x)", "using f g square_integrable_imp_integrable_product"], ["proof (prove)\nusing this:\n  f square_integrable S\n  g square_integrable S\n  \\<lbrakk>?f square_integrable ?S; ?g square_integrable ?S\\<rbrakk>\n  \\<Longrightarrow> integrable (lebesgue_on ?S) (\\<lambda>x. ?f x * ?g x)\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. f x * f x) &&&\n    integrable (lebesgue_on S) (\\<lambda>x. g x * g x)", "by blast+"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. f x * f x)\n  integrable (lebesgue_on S) (\\<lambda>x. g x * g x)\n\ngoal (2 subgoals):\n 1. integrable (lebesgue_on S) (\\<lambda>x. g x * f x)\n 2. integrable (lebesgue_on S) (\\<lambda>x. f x * g x)", "show \"integrable (lebesgue_on S) (\\<lambda>x. f x * g x)\" \"integrable (lebesgue_on S) (\\<lambda>x. g x * f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. f x * g x) &&&\n    integrable (lebesgue_on S) (\\<lambda>x. g x * f x)", "using f g square_integrable_imp_integrable_product"], ["proof (prove)\nusing this:\n  f square_integrable S\n  g square_integrable S\n  \\<lbrakk>?f square_integrable ?S; ?g square_integrable ?S\\<rbrakk>\n  \\<Longrightarrow> integrable (lebesgue_on ?S) (\\<lambda>x. ?f x * ?g x)\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. f x * g x) &&&\n    integrable (lebesgue_on S) (\\<lambda>x. g x * f x)", "by blast+"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. f x * g x)\n  integrable (lebesgue_on S) (\\<lambda>x. g x * f x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. (f x + g x)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma square_integrable_diff [simp]:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk> \\<Longrightarrow> (\\<lambda>x. f x - g x) square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f x - g x) square_integrable S", "using square_integrable_neg_eq square_integrable_add [of f S \"\\<lambda>x. - (g x)\"]"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. - ?f x) square_integrable ?S) = (?f square_integrable ?S)\n  \\<lbrakk>f square_integrable S;\n   (\\<lambda>x. - g x) square_integrable S\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. f x + - g x) square_integrable S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f x - g x) square_integrable S", "by auto"], ["", "lemma square_integrable_abs [simp]:\n   \"f square_integrable S \\<Longrightarrow> (\\<lambda>x. \\<bar>f x\\<bar>) square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    (\\<lambda>x. \\<bar>f x\\<bar>) square_integrable S", "by (simp add: square_integrable_def borel_measurable_abs)"], ["", "lemma square_integrable_sum [simp]:\n  assumes I: \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> f i square_integrable S\" and S: \"S \\<in> sets lebesgue\"\n  shows \"(\\<lambda>x. \\<Sum>i\\<in>I. f i x) square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>i\\<in>I. f i x) square_integrable S", "using I"], ["proof (prove)\nusing this:\n  finite I\n  ?i \\<in> I \\<Longrightarrow> f ?i square_integrable S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Sum>i\\<in>I. f i x) square_integrable S", "by induction (simp_all add: S)"], ["", "lemma continuous_imp_square_integrable [simp]:\n   \"continuous_on {a..b} f \\<Longrightarrow> f square_integrable {a..b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {a..b} f \\<Longrightarrow> f square_integrable {a..b}", "using continuous_imp_integrable [of a b \"(\\<lambda>x. (f x)\\<^sup>2)\"]"], ["proof (prove)\nusing this:\n  continuous_on (cbox a b) (\\<lambda>x. (f x)\\<^sup>2) \\<Longrightarrow>\n  integrable (lebesgue_on (cbox a b)) (\\<lambda>x. (f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. continuous_on {a..b} f \\<Longrightarrow> f square_integrable {a..b}", "by (simp add: square_integrable_def continuous_on_power continuous_imp_measurable_on_sets_lebesgue)"], ["", "lemma square_integrable_imp_absolutely_integrable:\n  assumes f: \"f square_integrable S\" and S: \"S \\<in> lmeasurable\"\n  shows \"f absolutely_integrable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f absolutely_integrable_on S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f absolutely_integrable_on S", "have \"f \\<in> lspace (lebesgue_on S) 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "using f S square_integrable_iff_lspace"], ["proof (prove)\nusing this:\n  f square_integrable S\n  S \\<in> lmeasurable\n  ?S \\<in> sets lebesgue \\<Longrightarrow>\n  (?f square_integrable ?S) = (?f \\<in> lspace (lebesgue_on ?S) 2)\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "by blast"], ["proof (state)\nthis:\n  f \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. f absolutely_integrable_on S", "then"], ["proof (chain)\npicking this:\n  f \\<in> lspace (lebesgue_on S) 2", "have \"f \\<in> lspace (lebesgue_on S) 1\""], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 1", "by (rule lspace_mono) (use S in auto)"], ["proof (state)\nthis:\n  f \\<in> lspace (lebesgue_on S) 1\n\ngoal (1 subgoal):\n 1. f absolutely_integrable_on S", "then"], ["proof (chain)\npicking this:\n  f \\<in> lspace (lebesgue_on S) 1", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) 1\n\ngoal (1 subgoal):\n 1. f absolutely_integrable_on S", "using S"], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) 1\n  S \\<in> lmeasurable\n\ngoal (1 subgoal):\n 1. f absolutely_integrable_on S", "by (simp flip: lspace_1)"], ["proof (state)\nthis:\n  f absolutely_integrable_on S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma square_integrable_imp_integrable:\n  assumes f: \"f square_integrable S\" and S: \"S \\<in> lmeasurable\"\n  shows \"integrable (lebesgue_on S) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) f", "by (meson S absolutely_integrable_measurable_real f fmeasurableD integrable_abs_iff square_integrable_imp_absolutely_integrable)"], ["", "subsection\\<open> The norm and inner product in L2\\<close>"], ["", "definition l2product :: \"'a::euclidean_space set \\<Rightarrow> ('a \\<Rightarrow> real) \\<Rightarrow> ('a \\<Rightarrow> real) \\<Rightarrow> real\"\n  where \"l2product S f g \\<equiv> (\\<integral>x. f x * g x \\<partial>(lebesgue_on S))\""], ["", "definition l2norm :: \"['a::euclidean_space set, 'a \\<Rightarrow> real] \\<Rightarrow> real\"\n  where \"l2norm S f \\<equiv> sqrt (l2product S f f)\""], ["", "definition lnorm :: \"['a measure, real, 'a \\<Rightarrow> real] \\<Rightarrow> real\"\n  where \"lnorm M p f \\<equiv> (\\<integral>x. \\<bar>f x\\<bar> powr p \\<partial>M) powr (1/p)\""], ["", "corollary Holder_inequality_lnorm:\n  assumes \"p > (0::real)\" \"q > 0\" \"1/p+1/q = 1\"\n      and \"f \\<in> borel_measurable M\" \"g \\<in> borel_measurable M\"\n          \"integrable M (\\<lambda>x. \\<bar>f x\\<bar> powr p)\"\n          \"integrable M (\\<lambda>x. \\<bar>g x\\<bar> powr q)\"\n  shows \"(\\<integral>x. \\<bar>f x * g x\\<bar> \\<partial>M) \\<le> lnorm M p f * lnorm M q g\"\n        \"\\<bar>\\<integral>x. f x * g x \\<partial>M \\<bar> \\<le> lnorm M p f * lnorm M q g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LINT x|M. \\<bar>f x * g x\\<bar> \\<le> lnorm M p f * lnorm M q g &&&\n    \\<bar>LINT x|M. f x * g x\\<bar> \\<le> lnorm M p f * lnorm M q g", "by (simp_all add: Holder_inequality assms lnorm_def)"], ["", "lemma l2norm_lnorm: \"l2norm S f = lnorm (lebesgue_on S) 2 f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2norm S f = lnorm (lebesgue_on S) 2 f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. l2norm S f = lnorm (lebesgue_on S) 2 f", "have \"(LINT x|lebesgue_on S. (f x)\\<^sup>2) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> LINT x|lebesgue_on S. (f x)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 \\<le> LINT x|lebesgue_on S. (f x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. l2norm S f = lnorm (lebesgue_on S) 2 f", "then"], ["proof (chain)\npicking this:\n  0 \\<le> LINT x|lebesgue_on S. (f x)\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> LINT x|lebesgue_on S. (f x)\\<^sup>2\n\ngoal (1 subgoal):\n 1. l2norm S f = lnorm (lebesgue_on S) 2 f", "by (auto simp: lnorm_def l2norm_def l2product_def power2_eq_square powr_half_sqrt)"], ["proof (state)\nthis:\n  l2norm S f = lnorm (lebesgue_on S) 2 f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lnorm_nonneg: \"lnorm M p f \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> lnorm M p f", "by (simp add: lnorm_def)"], ["", "lemma lnorm_minus_commute: \"lnorm M p (g - f) = lnorm M p (f - g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnorm M p (g - f) = lnorm M p (f - g)", "by (simp add: lnorm_def abs_minus_commute)"], ["", "text\\<open> Extending a continuous function in a periodic way\\<close>"], ["", "proposition continuous_on_compose_frac:\n  fixes f:: \"real \\<Rightarrow> real\"\n  assumes contf: \"continuous_on {0..1} f\" and f10: \"f 1 = f 0\"\n  shows \"continuous_on UNIV (f \\<circ> frac)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (f \\<circ> frac)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. continuous_on UNIV (f \\<circ> frac)", "have *: \"isCont (f \\<circ> frac) x\"\n    if caf: \"\\<And>x. \\<lbrakk>0 \\<le> x; x \\<le> 1\\<rbrakk> \\<Longrightarrow> continuous (at x within {0..1}) f\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (f \\<circ> frac) x", "proof (cases \"x \\<in> \\<int>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> \\<int> \\<Longrightarrow> isCont (f \\<circ> frac) x\n 2. x \\<notin> \\<int> \\<Longrightarrow> isCont (f \\<circ> frac) x", "case True"], ["proof (state)\nthis:\n  x \\<in> \\<int>\n\ngoal (2 subgoals):\n 1. x \\<in> \\<int> \\<Longrightarrow> isCont (f \\<circ> frac) x\n 2. x \\<notin> \\<int> \\<Longrightarrow> isCont (f \\<circ> frac) x", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<int>", "have [simp]: \"frac x = 0\""], ["proof (prove)\nusing this:\n  x \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. frac x = 0", "by simp"], ["proof (state)\nthis:\n  frac x = 0\n\ngoal (2 subgoals):\n 1. x \\<in> \\<int> \\<Longrightarrow> isCont (f \\<circ> frac) x\n 2. x \\<notin> \\<int> \\<Longrightarrow> isCont (f \\<circ> frac) x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (f \\<circ> frac) x", "proof (clarsimp simp add: continuous_at_eps_delta dist_real_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>d>0.\n          \\<forall>x'.\n             \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n             \\<bar>f (frac x') - f 0\\<bar> < e", "have f0: \"continuous (at 0 within {0..1}) f\" and f1: \"continuous (at 1 within {0..1}) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous (at 0 within {0..1}) f &&& continuous (at 1 within {0..1}) f", "by (auto intro: caf)"], ["proof (state)\nthis:\n  continuous (at 0 within {0..1}) f\n  continuous (at 1 within {0..1}) f\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>d>0.\n          \\<forall>x'.\n             \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n             \\<bar>f (frac x') - f 0\\<bar> < e", "show \"\\<exists>d>0. \\<forall>x'. \\<bar>x'-x\\<bar> < d \\<longrightarrow> \\<bar>f(frac x') - f 0\\<bar> < e\"\n        if \"0 < e\" for e"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x'.\n          \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n          \\<bar>f (frac x') - f 0\\<bar> < e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x'.\n          \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n          \\<bar>f (frac x') - f 0\\<bar> < e", "obtain d0 where \"d0 > 0\" and d0: \"\\<And>x'. \\<lbrakk>x'\\<in>{0..1}; \\<bar>x'\\<bar> < d0\\<rbrakk> \\<Longrightarrow> \\<bar>f x' - f 0\\<bar> < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d0.\n        \\<lbrakk>0 < d0;\n         \\<And>x'.\n            \\<lbrakk>x' \\<in> {0..1}; \\<bar>x'\\<bar> < d0\\<rbrakk>\n            \\<Longrightarrow> \\<bar>f x' - f 0\\<bar> < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>e > 0\\<close> caf [of 0] dist_not_less_zero"], ["proof (prove)\nusing this:\n  0 < e\n  \\<lbrakk>0 \\<le> 0; 0 \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> continuous (at 0 within {0..1}) f\n  \\<not> dist ?x ?y < 0\n\ngoal (1 subgoal):\n 1. (\\<And>d0.\n        \\<lbrakk>0 < d0;\n         \\<And>x'.\n            \\<lbrakk>x' \\<in> {0..1}; \\<bar>x'\\<bar> < d0\\<rbrakk>\n            \\<Longrightarrow> \\<bar>f x' - f 0\\<bar> < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: continuous_within_eps_delta dist_real_def)"], ["proof (state)\nthis:\n  0 < d0\n  \\<lbrakk>?x' \\<in> {0..1}; \\<bar>?x'\\<bar> < d0\\<rbrakk>\n  \\<Longrightarrow> \\<bar>f ?x' - f 0\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x'.\n          \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n          \\<bar>f (frac x') - f 0\\<bar> < e", "obtain d1 where \"d1 > 0\" and d1: \"\\<And>x'. \\<lbrakk>x'\\<in>{0..1}; \\<bar>x' - 1\\<bar> < d1\\<rbrakk> \\<Longrightarrow> \\<bar>f x' - f 0\\<bar> < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d1.\n        \\<lbrakk>0 < d1;\n         \\<And>x'.\n            \\<lbrakk>x' \\<in> {0..1}; \\<bar>x' - 1\\<bar> < d1\\<rbrakk>\n            \\<Longrightarrow> \\<bar>f x' - f 0\\<bar> < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>e > 0\\<close> caf [of 1] dist_not_less_zero f10"], ["proof (prove)\nusing this:\n  0 < e\n  \\<lbrakk>0 \\<le> 1; 1 \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> continuous (at 1 within {0..1}) f\n  \\<not> dist ?x ?y < 0\n  f 1 = f 0\n\ngoal (1 subgoal):\n 1. (\\<And>d1.\n        \\<lbrakk>0 < d1;\n         \\<And>x'.\n            \\<lbrakk>x' \\<in> {0..1}; \\<bar>x' - 1\\<bar> < d1\\<rbrakk>\n            \\<Longrightarrow> \\<bar>f x' - f 0\\<bar> < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: continuous_within_eps_delta dist_real_def)"], ["proof (state)\nthis:\n  0 < d1\n  \\<lbrakk>?x' \\<in> {0..1}; \\<bar>?x' - 1\\<bar> < d1\\<rbrakk>\n  \\<Longrightarrow> \\<bar>f ?x' - f 0\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x'.\n          \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n          \\<bar>f (frac x') - f 0\\<bar> < e", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>x'.\n          \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n          \\<bar>f (frac x') - f 0\\<bar> < e", "proof (intro exI conjI allI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < ?d\n 2. \\<And>x'.\n       \\<bar>x' - x\\<bar> < ?d \\<Longrightarrow>\n       \\<bar>f (frac x') - f 0\\<bar> < e", "show \"0 < min 1 (min d0 d1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < min 1 (min d0 d1)", "by (auto simp: \\<open>d0 > 0\\<close> \\<open>d1 > 0\\<close>)"], ["proof (state)\nthis:\n  0 < min 1 (min d0 d1)\n\ngoal (1 subgoal):\n 1. \\<And>x'.\n       \\<bar>x' - x\\<bar> < min 1 (min d0 d1) \\<Longrightarrow>\n       \\<bar>f (frac x') - f 0\\<bar> < e", "show \"\\<bar>f(frac x') - f 0\\<bar> < e\"\n            if \"\\<bar>x'-x\\<bar> < min 1 (min d0 d1)\" for x'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>f (frac x') - f 0\\<bar> < e", "proof (cases \"x \\<le> x'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e\n 2. \\<not> x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e", "case True"], ["proof (state)\nthis:\n  x \\<le> x'\n\ngoal (2 subgoals):\n 1. x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e\n 2. \\<not> x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e", "with \\<open>x \\<in> \\<int>\\<close> that"], ["proof (chain)\npicking this:\n  x \\<in> \\<int>\n  \\<bar>x' - x\\<bar> < min 1 (min d0 d1)\n  x \\<le> x'", "have \"frac x' = x' - x\""], ["proof (prove)\nusing this:\n  x \\<in> \\<int>\n  \\<bar>x' - x\\<bar> < min 1 (min d0 d1)\n  x \\<le> x'\n\ngoal (1 subgoal):\n 1. frac x' = x' - x", "by (simp add: frac_unique_iff)"], ["proof (state)\nthis:\n  frac x' = x' - x\n\ngoal (2 subgoals):\n 1. x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e\n 2. \\<not> x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e", "then"], ["proof (chain)\npicking this:\n  frac x' = x' - x", "show ?thesis"], ["proof (prove)\nusing this:\n  frac x' = x' - x\n\ngoal (1 subgoal):\n 1. \\<bar>f (frac x') - f 0\\<bar> < e", "using True d0 that"], ["proof (prove)\nusing this:\n  frac x' = x' - x\n  x \\<le> x'\n  \\<lbrakk>?x' \\<in> {0..1}; \\<bar>?x'\\<bar> < d0\\<rbrakk>\n  \\<Longrightarrow> \\<bar>f ?x' - f 0\\<bar> < e\n  \\<bar>x' - x\\<bar> < min 1 (min d0 d1)\n\ngoal (1 subgoal):\n 1. \\<bar>f (frac x') - f 0\\<bar> < e", "by auto"], ["proof (state)\nthis:\n  \\<bar>f (frac x') - f 0\\<bar> < e\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e", "case False"], ["proof (state)\nthis:\n  \\<not> x \\<le> x'\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e", "then"], ["proof (chain)\npicking this:\n  \\<not> x \\<le> x'", "have [simp]: \"frac x' = 1 - (x - x')\""], ["proof (prove)\nusing this:\n  \\<not> x \\<le> x'\n\ngoal (1 subgoal):\n 1. frac x' = 1 - (x - x')", "using that \\<open>x \\<in> \\<int>\\<close>"], ["proof (prove)\nusing this:\n  \\<not> x \\<le> x'\n  \\<bar>x' - x\\<bar> < min 1 (min d0 d1)\n  x \\<in> \\<int>\n\ngoal (1 subgoal):\n 1. frac x' = 1 - (x - x')", "by (simp add: not_le frac_unique_iff)"], ["proof (state)\nthis:\n  frac x' = 1 - (x - x')\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> x' \\<Longrightarrow> \\<bar>f (frac x') - f 0\\<bar> < e", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>f (frac x') - f 0\\<bar> < e", "using False d1 that"], ["proof (prove)\nusing this:\n  \\<not> x \\<le> x'\n  \\<lbrakk>?x' \\<in> {0..1}; \\<bar>?x' - 1\\<bar> < d1\\<rbrakk>\n  \\<Longrightarrow> \\<bar>f ?x' - f 0\\<bar> < e\n  \\<bar>x' - x\\<bar> < min 1 (min d0 d1)\n\ngoal (1 subgoal):\n 1. \\<bar>f (frac x') - f 0\\<bar> < e", "by auto"], ["proof (state)\nthis:\n  \\<bar>f (frac x') - f 0\\<bar> < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<bar>?x' - x\\<bar> < min 1 (min d0 d1) \\<Longrightarrow>\n  \\<bar>f (frac ?x') - f 0\\<bar> < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>d>0.\n     \\<forall>x'.\n        \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n        \\<bar>f (frac x') - f 0\\<bar> < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>d>0.\n     \\<forall>x'.\n        \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n        \\<bar>f (frac x') - f 0\\<bar> < ?e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  isCont (f \\<circ> frac) x\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<int> \\<Longrightarrow> isCont (f \\<circ> frac) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> \\<int> \\<Longrightarrow> isCont (f \\<circ> frac) x", "case False"], ["proof (state)\nthis:\n  x \\<notin> \\<int>\n\ngoal (1 subgoal):\n 1. x \\<notin> \\<int> \\<Longrightarrow> isCont (f \\<circ> frac) x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont (f \\<circ> frac) x", "proof (rule continuous_at_compose)"], ["proof (state)\ngoal (2 subgoals):\n 1. isCont frac x\n 2. isCont f (frac x)", "show \"isCont frac x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isCont frac x", "by (simp add: False continuous_frac)"], ["proof (state)\nthis:\n  isCont frac x\n\ngoal (1 subgoal):\n 1. isCont f (frac x)", "have \"frac x \\<in> {0<..<1}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. frac x \\<in> {0<..<1}", "by (simp add: False frac_lt_1)"], ["proof (state)\nthis:\n  frac x \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. isCont f (frac x)", "then"], ["proof (chain)\npicking this:\n  frac x \\<in> {0<..<1}", "show \"isCont f(frac x)\""], ["proof (prove)\nusing this:\n  frac x \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. isCont f (frac x)", "by (metis at_within_Icc_at greaterThanLessThan_iff le_cases not_le that)"], ["proof (state)\nthis:\n  isCont f (frac x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  isCont (f \\<circ> frac) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<And>x.\n      \\<lbrakk>0 \\<le> x; x \\<le> 1\\<rbrakk>\n      \\<Longrightarrow> continuous (at x within {0..1}) f) \\<Longrightarrow>\n  isCont (f \\<circ> frac) ?x\n\ngoal (1 subgoal):\n 1. continuous_on UNIV (f \\<circ> frac)", "then"], ["proof (chain)\npicking this:\n  (\\<And>x.\n      \\<lbrakk>0 \\<le> x; x \\<le> 1\\<rbrakk>\n      \\<Longrightarrow> continuous (at x within {0..1}) f) \\<Longrightarrow>\n  isCont (f \\<circ> frac) ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      \\<lbrakk>0 \\<le> x; x \\<le> 1\\<rbrakk>\n      \\<Longrightarrow> continuous (at x within {0..1}) f) \\<Longrightarrow>\n  isCont (f \\<circ> frac) ?x\n\ngoal (1 subgoal):\n 1. continuous_on UNIV (f \\<circ> frac)", "using contf"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      \\<lbrakk>0 \\<le> x; x \\<le> 1\\<rbrakk>\n      \\<Longrightarrow> continuous (at x within {0..1}) f) \\<Longrightarrow>\n  isCont (f \\<circ> frac) ?x\n  continuous_on {0..1} f\n\ngoal (1 subgoal):\n 1. continuous_on UNIV (f \\<circ> frac)", "by (simp add: o_def continuous_on_eq_continuous_within)"], ["proof (state)\nthis:\n  continuous_on UNIV (f \\<circ> frac)\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition Tietze_periodic_interval:\n  fixes f:: \"real \\<Rightarrow> real\"\n  assumes contf: \"continuous_on {a..b} f\" and fab: \"f a = f b\"\n  obtains g where \"continuous_on UNIV g\" \"\\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x\"\n                  \"\\<And>x. g(x + (b-a)) = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n         \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"a < b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>g.\n                \\<lbrakk>continuous_on UNIV g;\n                 \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n                 \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     a < b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>g.\n                \\<lbrakk>continuous_on UNIV g;\n                 \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n                 \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> a < b\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  a < b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>g.\n                \\<lbrakk>continuous_on UNIV g;\n                 \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n                 \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     a < b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>g.\n                \\<lbrakk>continuous_on UNIV g;\n                 \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n                 \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> a < b\\<rbrakk>\n    \\<Longrightarrow> thesis", "let ?g = \"f \\<circ> (\\<lambda>y. a + (b-a) * y) \\<circ> frac \\<circ>\n                (\\<lambda>x. (x - a) / (b-a))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>g.\n                \\<lbrakk>continuous_on UNIV g;\n                 \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n                 \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     a < b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>g.\n                \\<lbrakk>continuous_on UNIV g;\n                 \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n                 \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> a < b\\<rbrakk>\n    \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. continuous_on UNIV ?g\n 2. \\<And>x. x \\<in> {a..b} \\<Longrightarrow> ?g x = f x\n 3. \\<And>x. ?g (x + (b - a)) = ?g x", "have \"a + (b - a) * y \\<le> b\" if \"a < b\" \"0 \\<le> y\" \"y \\<le> 1\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + (b - a) * y \\<le> b", "using that affine_ineq"], ["proof (prove)\nusing this:\n  a < b\n  0 \\<le> y\n  y \\<le> 1\n  \\<lbrakk>?x \\<le> (1::?'a); ?v \\<le> ?u\\<rbrakk>\n  \\<Longrightarrow> ?v + ?x * ?u \\<le> ?u + ?x * ?v\n\ngoal (1 subgoal):\n 1. a + (b - a) * y \\<le> b", "by (force simp: field_simps)"], ["proof (state)\nthis:\n  \\<lbrakk>a < b; 0 \\<le> ?y; ?y \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> a + (b - a) * ?y \\<le> b\n\ngoal (3 subgoals):\n 1. continuous_on UNIV ?g\n 2. \\<And>x. x \\<in> {a..b} \\<Longrightarrow> ?g x = f x\n 3. \\<And>x. ?g (x + (b - a)) = ?g x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a < b; 0 \\<le> ?y; ?y \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> a + (b - a) * ?y \\<le> b", "have *: \"continuous_on (range (\\<lambda>x. (x - a) / (b - a))) (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>a < b; 0 \\<le> ?y; ?y \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> a + (b - a) * ?y \\<le> b\n\ngoal (1 subgoal):\n 1. continuous_on (range (\\<lambda>x. (x - a) / (b - a)))\n     (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac)", "apply (intro continuous_on_subset [OF continuous_on_compose_frac] continuous_on_subset [OF contf]\n          continuous_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (\\<And>y.\n        \\<lbrakk>a < b; 0 \\<le> y; y \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> a + (b - a) * y \\<le> b) \\<Longrightarrow>\n    (\\<lambda>y. a + (b - a) * y) ` {0..1} \\<subseteq> {a..b}\n 2. (\\<And>y.\n        \\<lbrakk>a < b; 0 \\<le> y; y \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> a + (b - a) * y \\<le> b) \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y)) 1 =\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y)) 0\n 3. (\\<And>y.\n        \\<lbrakk>a < b; 0 \\<le> y; y \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> a + (b - a) * y \\<le> b) \\<Longrightarrow>\n    range (\\<lambda>x. (x - a) / (b - a)) \\<subseteq> UNIV", "using \\<open>a < b\\<close>"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (3 subgoals):\n 1. (\\<And>y.\n        \\<lbrakk>a < b; 0 \\<le> y; y \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> a + (b - a) * y \\<le> b) \\<Longrightarrow>\n    (\\<lambda>y. a + (b - a) * y) ` {0..1} \\<subseteq> {a..b}\n 2. (\\<And>y.\n        \\<lbrakk>a < b; 0 \\<le> y; y \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> a + (b - a) * y \\<le> b) \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y)) 1 =\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y)) 0\n 3. (\\<And>y.\n        \\<lbrakk>a < b; 0 \\<le> y; y \\<le> 1\\<rbrakk>\n        \\<Longrightarrow> a + (b - a) * y \\<le> b) \\<Longrightarrow>\n    range (\\<lambda>x. (x - a) / (b - a)) \\<subseteq> UNIV", "by (auto simp: fab)"], ["proof (state)\nthis:\n  continuous_on (range (\\<lambda>x. (x - a) / (b - a)))\n   (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac)\n\ngoal (3 subgoals):\n 1. continuous_on UNIV ?g\n 2. \\<And>x. x \\<in> {a..b} \\<Longrightarrow> ?g x = f x\n 3. \\<And>x. ?g (x + (b - a)) = ?g x", "show \"continuous_on UNIV ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV\n     (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n      (\\<lambda>x. (x - a) / (b - a)))", "by (intro * continuous_on_compose continuous_intros) (use True in auto)"], ["proof (state)\nthis:\n  continuous_on UNIV\n   (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n    (\\<lambda>x. (x - a) / (b - a)))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {a..b} \\<Longrightarrow>\n       (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n        (\\<lambda>x. (x - a) / (b - a)))\n        x =\n       f x\n 2. \\<And>x.\n       (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n        (\\<lambda>x. (x - a) / (b - a)))\n        (x + (b - a)) =\n       (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n        (\\<lambda>x. (x - a) / (b - a)))\n        x", "show \"?g x = f x\" if \"x \\<in> {a..b}\" for x :: real"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x", "proof (cases \"x=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x\n 2. x \\<noteq> b \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x", "case True"], ["proof (state)\nthis:\n  x = b\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x\n 2. x \\<noteq> b \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x", "then"], ["proof (chain)\npicking this:\n  x = b", "show ?thesis"], ["proof (prove)\nusing this:\n  x = b\n\ngoal (1 subgoal):\n 1. (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x", "by (auto simp: frac_def intro: fab)"], ["proof (state)\nthis:\n  (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n   (\\<lambda>x. (x - a) / (b - a)))\n   x =\n  f x\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x", "case False"], ["proof (state)\nthis:\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x", "with \\<open>a < b\\<close> that"], ["proof (chain)\npicking this:\n  a < b\n  x \\<in> {a..b}\n  x \\<noteq> b", "have \"frac ((x - a) / (b - a)) = (x - a) / (b - a)\""], ["proof (prove)\nusing this:\n  a < b\n  x \\<in> {a..b}\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. frac ((x - a) / (b - a)) = (x - a) / (b - a)", "by (subst frac_eq) (auto simp: divide_simps)"], ["proof (state)\nthis:\n  frac ((x - a) / (b - a)) = (x - a) / (b - a)\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow>\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x", "with \\<open>a < b\\<close>"], ["proof (chain)\npicking this:\n  a < b\n  frac ((x - a) / (b - a)) = (x - a) / (b - a)", "show ?thesis"], ["proof (prove)\nusing this:\n  a < b\n  frac ((x - a) / (b - a)) = (x - a) / (b - a)\n\ngoal (1 subgoal):\n 1. (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x =\n    f x", "by auto"], ["proof (state)\nthis:\n  (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n   (\\<lambda>x. (x - a) / (b - a)))\n   x =\n  f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {a..b} \\<Longrightarrow>\n  (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n   (\\<lambda>x. (x - a) / (b - a)))\n   ?x =\n  f ?x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n        (\\<lambda>x. (x - a) / (b - a)))\n        (x + (b - a)) =\n       (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n        (\\<lambda>x. (x - a) / (b - a)))\n        x", "have \"a + (b-a) * frac ((x + b - 2 * a) / (b-a)) = a + (b-a) * frac ((x - a) / (b-a))\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. a + (b - a) * frac ((x + b - 2 * a) / (b - a)) =\n    a + (b - a) * frac ((x - a) / (b - a))", "using True frac_1_eq [of \"(x - a) / (b-a)\"]"], ["proof (prove)\nusing this:\n  a < b\n  frac ((x - a) / (b - a) + 1) = frac ((x - a) / (b - a))\n\ngoal (1 subgoal):\n 1. a + (b - a) * frac ((x + b - 2 * a) / (b - a)) =\n    a + (b - a) * frac ((x - a) / (b - a))", "by (auto simp: divide_simps)"], ["proof (state)\nthis:\n  a + (b - a) * frac ((?x + b - 2 * a) / (b - a)) =\n  a + (b - a) * frac ((?x - a) / (b - a))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n        (\\<lambda>x. (x - a) / (b - a)))\n        (x + (b - a)) =\n       (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n        (\\<lambda>x. (x - a) / (b - a)))\n        x", "then"], ["proof (chain)\npicking this:\n  a + (b - a) * frac ((?x + b - 2 * a) / (b - a)) =\n  a + (b - a) * frac ((?x - a) / (b - a))", "show \"?g (x + (b-a)) = (?g x::real)\" for x"], ["proof (prove)\nusing this:\n  a + (b - a) * frac ((?x + b - 2 * a) / (b - a)) =\n  a + (b - a) * frac ((?x - a) / (b - a))\n\ngoal (1 subgoal):\n 1. (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     (x + (b - a)) =\n    (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n     (\\<lambda>x. (x - a) / (b - a)))\n     x", "by force"], ["proof (state)\nthis:\n  (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n   (\\<lambda>x. (x - a) / (b - a)))\n   (?x + (b - a)) =\n  (f \\<circ> (\\<lambda>y. a + (b - a) * y) \\<circ> frac \\<circ>\n   (\\<lambda>x. (x - a) / (b - a)))\n   ?x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>g.\n                \\<lbrakk>continuous_on UNIV g;\n                 \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n                 \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> a < b\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>g.\n                \\<lbrakk>continuous_on UNIV g;\n                 \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n                 \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> a < b\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<not> a < b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>g.\n                \\<lbrakk>continuous_on UNIV g;\n                 \\<And>x. x \\<in> {a..b} \\<Longrightarrow> g x = f x;\n                 \\<And>x. g (x + (b - a)) = g x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     \\<not> a < b\\<rbrakk>\n    \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. continuous_on UNIV ?g\n 2. \\<And>x. x \\<in> {a..b} \\<Longrightarrow> ?g x = f x\n 3. \\<And>x. ?g (x + (b - a)) = ?g x", "show \"f a = f x\" if \"x \\<in> {a..b}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f a = f x", "using that False order_trans"], ["proof (prove)\nusing this:\n  x \\<in> {a..b}\n  \\<not> a < b\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. f a = f x", "by fastforce"], ["proof (state)\nthis:\n  ?x \\<in> {a..b} \\<Longrightarrow> f a = f ?x\n\ngoal (2 subgoals):\n 1. continuous_on UNIV (\\<lambda>x. f a)\n 2. \\<And>x. f a = f a", "qed auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Lspace stuff\\<close>"], ["", "lemma eNorm_triangle_eps:\n  assumes \"eNorm N (x' - x) < a\" \"defect N = 1\"\n  obtains e where \"e > 0\" \"\\<And>y. eNorm N (y - x') < e \\<Longrightarrow> eNorm N (y - x) < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y.\n            eNorm N (y - x') < e \\<Longrightarrow>\n            eNorm N (y - x) < a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y.\n            eNorm N (y - x') < e \\<Longrightarrow>\n            eNorm N (y - x) < a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?d = \"a - Norm N (x' - x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y.\n            eNorm N (y - x') < e \\<Longrightarrow>\n            eNorm N (y - x) < a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have nt: \"eNorm N (x' - x) < \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eNorm N (x' - x) < \\<top>", "using assms top.not_eq_extremum"], ["proof (prove)\nusing this:\n  eNorm N (x' - x) < a\n  defect N = 1\n  (?a \\<noteq> \\<top>) = (?a < \\<top>)\n\ngoal (1 subgoal):\n 1. eNorm N (x' - x) < \\<top>", "by fastforce"], ["proof (state)\nthis:\n  eNorm N (x' - x) < \\<top>\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y.\n            eNorm N (y - x') < e \\<Longrightarrow>\n            eNorm N (y - x) < a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with assms"], ["proof (chain)\npicking this:\n  eNorm N (x' - x) < a\n  defect N = 1\n  eNorm N (x' - x) < \\<top>", "have d: \"?d > 0\""], ["proof (prove)\nusing this:\n  eNorm N (x' - x) < a\n  defect N = 1\n  eNorm N (x' - x) < \\<top>\n\ngoal (1 subgoal):\n 1. 0 < a - ennreal (Norm N (x' - x))", "by (simp add: Norm_def diff_gr0_ennreal)"], ["proof (state)\nthis:\n  0 < a - ennreal (Norm N (x' - x))\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y.\n            eNorm N (y - x') < e \\<Longrightarrow>\n            eNorm N (y - x) < a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have [simp]: \"ennreal (1 - Norm N (x' - x)) = 1 - eNorm N (x' - x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (1 - Norm N (x' - x)) = 1 - eNorm N (x' - x)", "using that nt"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?e;\n   \\<And>y.\n      eNorm N (y - x') < ?e \\<Longrightarrow> eNorm N (y - x) < a\\<rbrakk>\n  \\<Longrightarrow> thesis\n  eNorm N (x' - x) < \\<top>\n\ngoal (1 subgoal):\n 1. ennreal (1 - Norm N (x' - x)) = 1 - eNorm N (x' - x)", "unfolding Norm_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?e;\n   \\<And>y.\n      eNorm N (y - x') < ?e \\<Longrightarrow> eNorm N (y - x) < a\\<rbrakk>\n  \\<Longrightarrow> thesis\n  eNorm N (x' - x) < \\<top>\n\ngoal (1 subgoal):\n 1. ennreal (1 - enn2real (eNorm N (x' - x))) = 1 - eNorm N (x' - x)", "by (metis enn2real_nonneg ennreal_1 ennreal_enn2real ennreal_minus)"], ["proof (state)\nthis:\n  ennreal (1 - Norm N (x' - x)) = 1 - eNorm N (x' - x)\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y.\n            eNorm N (y - x') < e \\<Longrightarrow>\n            eNorm N (y - x) < a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < ?e\n 2. \\<And>y. eNorm N (y - x') < ?e \\<Longrightarrow> eNorm N (y - x) < a", "show \"(0::ennreal) < ?d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < a - ennreal (Norm N (x' - x))", "using d ennreal_less_zero_iff"], ["proof (prove)\nusing this:\n  0 < a - ennreal (Norm N (x' - x))\n  (0 < ennreal ?x) = (0 < ?x)\n\ngoal (1 subgoal):\n 1. 0 < a - ennreal (Norm N (x' - x))", "by blast"], ["proof (state)\nthis:\n  0 < a - ennreal (Norm N (x' - x))\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       eNorm N (y - x') < a - ennreal (Norm N (x' - x)) \\<Longrightarrow>\n       eNorm N (y - x) < a", "show \"eNorm N (y - x) < a\"\n      if \"eNorm N (y - x') < ?d\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. eNorm N (y - x) < a", "using that assms eNorm_triangular_ineq [of N \"y - x'\" \"x' - x\"] le_less_trans less_diff_eq_ennreal"], ["proof (prove)\nusing this:\n  eNorm N (y - x') < a - ennreal (Norm N (x' - x))\n  eNorm N (x' - x) < a\n  defect N = 1\n  eNorm N (y - x' + (x' - x))\n  \\<le> ennreal (defect N) * eNorm N (y - x') +\n        ennreal (defect N) * eNorm N (x' - x)\n  \\<lbrakk>?x \\<le> ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n  ?b < \\<top> \\<or> ?c < \\<top> \\<Longrightarrow>\n  (?a < ?b - ?c) = (?a + ?c < ?b)\n\ngoal (1 subgoal):\n 1. eNorm N (y - x) < a", "by (simp add: Norm_def nt)"], ["proof (state)\nthis:\n  eNorm N (?y - x') < a - ennreal (Norm N (x' - x)) \\<Longrightarrow>\n  eNorm N (?y - x) < a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma topspace_topology\\<^sub>N [simp]:\n  assumes \"defect N = 1\" shows \"topspace (topology\\<^sub>N N) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. topspace (topology\\<^sub>N N) = UNIV", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. topspace (topology\\<^sub>N N) = UNIV", "have \"x \\<in> topspace (topology\\<^sub>N N)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> topspace (topology\\<^sub>N N)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> topspace (topology\\<^sub>N N)", "have \"\\<exists>e>0. \\<forall>y. eNorm N (y - x') < e \\<longrightarrow> eNorm N (y - x) < 1\"\n      if \"eNorm N (x' - x) < 1\" for x'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e>0.\n       \\<forall>y.\n          eNorm N (y - x') < e \\<longrightarrow> eNorm N (y - x) < 1", "using eNorm_triangle_eps"], ["proof (prove)\nusing this:\n  \\<lbrakk>eNorm ?N (?x' - ?x) < ?a; defect ?N = 1;\n   \\<And>e.\n      \\<lbrakk>0 < e;\n       \\<And>y.\n          eNorm ?N (y - ?x') < e \\<Longrightarrow>\n          eNorm ?N (y - ?x) < ?a\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>e>0.\n       \\<forall>y.\n          eNorm N (y - x') < e \\<longrightarrow> eNorm N (y - x) < 1", "by (metis assms that)"], ["proof (state)\nthis:\n  eNorm N (?x' - x) < 1 \\<Longrightarrow>\n  \\<exists>e>0.\n     \\<forall>y. eNorm N (y - ?x') < e \\<longrightarrow> eNorm N (y - x) < 1\n\ngoal (1 subgoal):\n 1. x \\<in> topspace (topology\\<^sub>N N)", "then"], ["proof (chain)\npicking this:\n  eNorm N (?x' - x) < 1 \\<Longrightarrow>\n  \\<exists>e>0.\n     \\<forall>y. eNorm N (y - ?x') < e \\<longrightarrow> eNorm N (y - x) < 1", "show ?thesis"], ["proof (prove)\nusing this:\n  eNorm N (?x' - x) < 1 \\<Longrightarrow>\n  \\<exists>e>0.\n     \\<forall>y. eNorm N (y - ?x') < e \\<longrightarrow> eNorm N (y - x) < 1\n\ngoal (1 subgoal):\n 1. x \\<in> topspace (topology\\<^sub>N N)", "unfolding topspace_def"], ["proof (prove)\nusing this:\n  eNorm N (?x' - x) < 1 \\<Longrightarrow>\n  \\<exists>e>0.\n     \\<forall>y. eNorm N (y - ?x') < e \\<longrightarrow> eNorm N (y - x) < 1\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Union> (Collect (openin (topology\\<^sub>N N)))", "by (rule_tac X=\"{y. eNorm N (y - x) < 1}\" in UnionI) (auto intro: openin_topology\\<^sub>N_I)"], ["proof (state)\nthis:\n  x \\<in> topspace (topology\\<^sub>N N)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> topspace (topology\\<^sub>N N)\n\ngoal (1 subgoal):\n 1. topspace (topology\\<^sub>N N) = UNIV", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> topspace (topology\\<^sub>N N)", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<in> topspace (topology\\<^sub>N N)\n\ngoal (1 subgoal):\n 1. topspace (topology\\<^sub>N N) = UNIV", "by auto"], ["proof (state)\nthis:\n  topspace (topology\\<^sub>N N) = UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tendsto_ine\\<^sub>N_iff_limitin:\n  assumes \"defect N = 1\"\n  shows \"tendsto_ine\\<^sub>N N u x = limitin (topology\\<^sub>N N) u x sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tendsto_ine\\<^sub>N N u x =\n    limitin (topology\\<^sub>N N) u x sequentially", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. tendsto_ine\\<^sub>N N u x =\n    limitin (topology\\<^sub>N N) u x sequentially", "have \"\\<forall>\\<^sub>F x in sequentially. u x \\<in> U\"\n    if 0: \"(\\<lambda>n. eNorm N (u n - x)) \\<longlonglongrightarrow> 0\" and U: \"openin (topology\\<^sub>N N) U\" \"x \\<in> U\" for U"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. u x \\<in> U", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. u x \\<in> U", "obtain e where \"e > 0\" and e: \"\\<And>y. eNorm N (y-x) < e \\<Longrightarrow> y \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y. eNorm N (y - x) < e \\<Longrightarrow> y \\<in> U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using openin_topology\\<^sub>N_D U"], ["proof (prove)\nusing this:\n  \\<lbrakk>openin (topology\\<^sub>N ?N) ?U; ?x \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>e>0.\n                       \\<forall>y.\n                          eNorm ?N (y - ?x) < e \\<longrightarrow> y \\<in> ?U\n  openin (topology\\<^sub>N N) U\n  x \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e;\n         \\<And>y. eNorm N (y - x) < e \\<Longrightarrow> y \\<in> U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  0 < e\n  eNorm N (?y - x) < e \\<Longrightarrow> ?y \\<in> U\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. u x \\<in> U", "then"], ["proof (chain)\npicking this:\n  0 < e\n  eNorm N (?y - x) < e \\<Longrightarrow> ?y \\<in> U", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < e\n  eNorm N (?y - x) < e \\<Longrightarrow> ?y \\<in> U\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. u x \\<in> U", "using eventually_mono order_tendstoD(2)[OF 0]"], ["proof (prove)\nusing this:\n  0 < e\n  eNorm N (?y - x) < e \\<Longrightarrow> ?y \\<in> U\n  \\<lbrakk>eventually ?P ?F; \\<And>x. ?P x \\<Longrightarrow> ?Q x\\<rbrakk>\n  \\<Longrightarrow> eventually ?Q ?F\n  0 < ?a \\<Longrightarrow>\n  \\<forall>\\<^sub>F xa in sequentially. eNorm N (u xa - x) < ?a\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in sequentially. u x \\<in> U", "by force"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in sequentially. u x \\<in> U\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>(\\<lambda>n. eNorm N (u n - x)) \\<longlonglongrightarrow> 0;\n   openin (topology\\<^sub>N N) ?U; x \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F x in sequentially. u x \\<in> ?U\n\ngoal (1 subgoal):\n 1. tendsto_ine\\<^sub>N N u x =\n    limitin (topology\\<^sub>N N) u x sequentially", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>(\\<lambda>n. eNorm N (u n - x)) \\<longlonglongrightarrow> 0;\n   openin (topology\\<^sub>N N) ?U; x \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F x in sequentially. u x \\<in> ?U\n\ngoal (1 subgoal):\n 1. tendsto_ine\\<^sub>N N u x =\n    limitin (topology\\<^sub>N N) u x sequentially", "have \"(\\<lambda>n. eNorm N (u n - x)) \\<longlonglongrightarrow> 0\"\n    if x: \"x \\<in> topspace (topology\\<^sub>N N)\"\n      and *: \"\\<And>U. \\<lbrakk>openin (topology\\<^sub>N N) U; x \\<in> U\\<rbrakk> \\<Longrightarrow> (\\<forall>\\<^sub>F x in sequentially. u x \\<in> U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. eNorm N (u n - x)) \\<longlonglongrightarrow> 0", "proof (rule order_tendstoI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a < 0 \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in sequentially. a < eNorm N (u xa - x)\n 2. \\<And>a.\n       0 < a \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in sequentially. eNorm N (u xa - x) < a", "show \"\\<forall>\\<^sub>F n in sequentially. eNorm N (u n - x) < a\" if \"a > 0\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially. eNorm N (u n - x) < a", "apply (rule * [OF openin_topology\\<^sub>N_I, of \"{v. eNorm N (v - x) < a}\", simplified])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       eNorm N (n - x) < a \\<Longrightarrow>\n       \\<exists>e>0.\n          \\<forall>y.\n             eNorm N (y - n) < e \\<longrightarrow> eNorm N (y - x) < a\n 2. 0 < a", "using assms eNorm_triangle_eps that"], ["proof (prove)\nusing this:\n  defect N = 1\n  \\<lbrakk>eNorm ?N (?x' - ?x) < ?a; defect ?N = 1;\n   \\<And>e.\n      \\<lbrakk>0 < e;\n       \\<And>y.\n          eNorm ?N (y - ?x') < e \\<Longrightarrow>\n          eNorm ?N (y - ?x) < ?a\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  0 < a\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       eNorm N (n - x) < a \\<Longrightarrow>\n       \\<exists>e>0.\n          \\<forall>y.\n             eNorm N (y - n) < e \\<longrightarrow> eNorm N (y - x) < a\n 2. 0 < a", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  0 < ?a \\<Longrightarrow>\n  \\<forall>\\<^sub>F n in sequentially. eNorm N (u n - x) < ?a\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a < 0 \\<Longrightarrow>\n       \\<forall>\\<^sub>F xa in sequentially. a < eNorm N (u xa - x)", "qed simp"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<in> topspace (topology\\<^sub>N N);\n   \\<And>U.\n      \\<lbrakk>openin (topology\\<^sub>N N) U; x \\<in> U\\<rbrakk>\n      \\<Longrightarrow> \\<forall>\\<^sub>F x in sequentially.\n                           u x \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. eNorm N (u n - x))\n                    \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. tendsto_ine\\<^sub>N N u x =\n    limitin (topology\\<^sub>N N) u x sequentially", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>(\\<lambda>n. eNorm N (u n - x)) \\<longlonglongrightarrow> 0;\n   openin (topology\\<^sub>N N) ?U; x \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F x in sequentially. u x \\<in> ?U\n  \\<lbrakk>x \\<in> topspace (topology\\<^sub>N N);\n   \\<And>U.\n      \\<lbrakk>openin (topology\\<^sub>N N) U; x \\<in> U\\<rbrakk>\n      \\<Longrightarrow> \\<forall>\\<^sub>F x in sequentially.\n                           u x \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. eNorm N (u n - x))\n                    \\<longlonglongrightarrow> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(\\<lambda>n. eNorm N (u n - x)) \\<longlonglongrightarrow> 0;\n   openin (topology\\<^sub>N N) ?U; x \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F x in sequentially. u x \\<in> ?U\n  \\<lbrakk>x \\<in> topspace (topology\\<^sub>N N);\n   \\<And>U.\n      \\<lbrakk>openin (topology\\<^sub>N N) U; x \\<in> U\\<rbrakk>\n      \\<Longrightarrow> \\<forall>\\<^sub>F x in sequentially.\n                           u x \\<in> U\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. eNorm N (u n - x))\n                    \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. tendsto_ine\\<^sub>N N u x =\n    limitin (topology\\<^sub>N N) u x sequentially", "by (auto simp: tendsto_ine\\<^sub>N_def limitin_def assms)"], ["proof (state)\nthis:\n  tendsto_ine\\<^sub>N N u x = limitin (topology\\<^sub>N N) u x sequentially\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary tendsto_ine\\<^sub>N_iff_limitin_ge1:\n  fixes p :: ennreal\n  assumes \"p \\<ge> 1\"\n  shows \"tendsto_ine\\<^sub>N (\\<LL> p M) u x = limitin (topology\\<^sub>N (\\<LL> p M)) u x sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tendsto_ine\\<^sub>N (\\<LL> p M) u x =\n    limitin (topology\\<^sub>N (\\<LL> p M)) u x sequentially", "proof (rule tendsto_ine\\<^sub>N_iff_limitin)"], ["proof (state)\ngoal (1 subgoal):\n 1. defect (\\<LL> p M) = 1", "show \"defect (\\<LL> p M) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. defect (\\<LL> p M) = 1", "by (metis (full_types) L_infinity(2) L_zero(2) Lp(2) Lp_cases assms ennreal_ge_1)"], ["proof (state)\nthis:\n  defect (\\<LL> p M) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary tendsto_in\\<^sub>N_iff_limitin:\n  assumes \"defect N = 1\" \"x \\<in> space\\<^sub>N N\" \"\\<And>n. u n \\<in> space\\<^sub>N N\"\n  shows \"tendsto_in\\<^sub>N N u x = limitin (topology\\<^sub>N N) u x sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tendsto_in\\<^sub>N N u x = limitin (topology\\<^sub>N N) u x sequentially", "using assms tendsto_ine\\<^sub>N_iff_limitin tendsto_ine_in"], ["proof (prove)\nusing this:\n  defect N = 1\n  x \\<in> space\\<^sub>N N\n  u ?n \\<in> space\\<^sub>N N\n  defect ?N = 1 \\<Longrightarrow>\n  tendsto_ine\\<^sub>N ?N ?u ?x =\n  limitin (topology\\<^sub>N ?N) ?u ?x sequentially\n  \\<lbrakk>\\<And>n. ?u n \\<in> space\\<^sub>N ?N;\n   ?x \\<in> space\\<^sub>N ?N\\<rbrakk>\n  \\<Longrightarrow> tendsto_ine\\<^sub>N ?N ?u ?x =\n                    tendsto_in\\<^sub>N ?N ?u ?x\n\ngoal (1 subgoal):\n 1. tendsto_in\\<^sub>N N u x = limitin (topology\\<^sub>N N) u x sequentially", "by blast"], ["", "corollary tendsto_in\\<^sub>N_iff_limitin_ge1:\n  fixes p :: ennreal\n  assumes \"p \\<ge> 1\" \"x \\<in> lspace M p\" \"\\<And>n. u n \\<in> lspace M p\"\n  shows \"tendsto_in\\<^sub>N (\\<LL> p M) u x = limitin (topology\\<^sub>N (\\<LL> p M)) u x sequentially\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tendsto_in\\<^sub>N (\\<LL> p M) u x =\n    limitin (topology\\<^sub>N (\\<LL> p M)) u x sequentially", "proof (rule tendsto_in\\<^sub>N_iff_limitin)"], ["proof (state)\ngoal (3 subgoals):\n 1. defect (\\<LL> p M) = 1\n 2. x \\<in> lspace M p\n 3. \\<And>n. u n \\<in> lspace M p", "show \"defect (\\<LL> p M) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. defect (\\<LL> p M) = 1", "by (metis (full_types) L_infinity(2) L_zero(2) Lp(2) Lp_cases \\<open>p \\<ge> 1\\<close> ennreal_ge_1)"], ["proof (state)\nthis:\n  defect (\\<LL> p M) = 1\n\ngoal (2 subgoals):\n 1. x \\<in> lspace M p\n 2. \\<And>n. u n \\<in> lspace M p", "qed (auto simp: assms)"], ["", "lemma l2product_sym: \"l2product S f g = l2product S g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2product S f g = l2product S g f", "by (simp add: l2product_def mult.commute)"], ["", "lemma l2product_pos_le:\n   \"f square_integrable S \\<Longrightarrow> 0 \\<le> l2product S f f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow> 0 \\<le> l2product S f f", "by (simp add: square_integrable_def l2product_def flip: power2_eq_square)"], ["", "lemma l2norm_pow_2:\n   \"f square_integrable S \\<Longrightarrow> (l2norm S f) ^ 2 = l2product S f f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    (l2norm S f)\\<^sup>2 = l2product S f f", "by (simp add: l2norm_def l2product_pos_le)"], ["", "lemma l2norm_pos_le:\n   \"f square_integrable S \\<Longrightarrow> 0 \\<le> l2norm S f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow> 0 \\<le> l2norm S f", "by (simp add: l2norm_def l2product_pos_le)"], ["", "lemma l2norm_le: \"(l2norm S f \\<le> l2norm S g \\<longleftrightarrow> l2product S f f \\<le> l2product S g g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l2norm S f \\<le> l2norm S g) = (l2product S f f \\<le> l2product S g g)", "by (simp add: l2norm_def)"], ["", "lemma l2norm_eq:\n   \"(l2norm S f = l2norm S g \\<longleftrightarrow> l2product S f f = l2product S g g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (l2norm S f = l2norm S g) = (l2product S f f = l2product S g g)", "by (simp add: l2norm_def)"], ["", "lemma Schwartz_inequality_strong:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"l2product S (\\<lambda>x. \\<bar>f x\\<bar>) (\\<lambda>x. \\<bar>g x\\<bar>) \\<le> l2norm S f * l2norm S g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2product S (\\<lambda>x. \\<bar>f x\\<bar>) (\\<lambda>x. \\<bar>g x\\<bar>)\n    \\<le> l2norm S f * l2norm S g", "using Holder_inequality_lnorm [of 2 2 f \"lebesgue_on S\" g] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < 2; 0 < 2; 1 / 2 + 1 / 2 = 1;\n   f \\<in> borel_measurable (lebesgue_on S);\n   g \\<in> borel_measurable (lebesgue_on S);\n   integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> powr 2);\n   integrable (lebesgue_on S) (\\<lambda>x. \\<bar>g x\\<bar> powr 2)\\<rbrakk>\n  \\<Longrightarrow> LINT x|lebesgue_on S. \\<bar>f x * g x\\<bar>\n                    \\<le> lnorm (lebesgue_on S) 2 f *\n                          lnorm (lebesgue_on S) 2 g\n  \\<lbrakk>0 < 2; 0 < 2; 1 / 2 + 1 / 2 = 1;\n   f \\<in> borel_measurable (lebesgue_on S);\n   g \\<in> borel_measurable (lebesgue_on S);\n   integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> powr 2);\n   integrable (lebesgue_on S) (\\<lambda>x. \\<bar>g x\\<bar> powr 2)\\<rbrakk>\n  \\<Longrightarrow> \\<bar>LINT x|lebesgue_on S. f x * g x\\<bar>\n                    \\<le> lnorm (lebesgue_on S) 2 f *\n                          lnorm (lebesgue_on S) 2 g\n  f square_integrable S\n  g square_integrable S\n\ngoal (1 subgoal):\n 1. l2product S (\\<lambda>x. \\<bar>f x\\<bar>) (\\<lambda>x. \\<bar>g x\\<bar>)\n    \\<le> l2norm S f * l2norm S g", "by (simp add: square_integrable_def l2product_def abs_mult flip: l2norm_lnorm)"], ["", "lemma Schwartz_inequality_abs:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"\\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g", "have \"\\<bar>l2product S f g\\<bar> \\<le> l2product S (\\<lambda>x. \\<bar>f x\\<bar>) (\\<lambda>x. \\<bar>g x\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>l2product S f g\\<bar>\n    \\<le> l2product S (\\<lambda>x. \\<bar>f x\\<bar>)\n           (\\<lambda>x. \\<bar>g x\\<bar>)", "unfolding l2product_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>LINT x|lebesgue_on S. f x * g x\\<bar>\n    \\<le> LINT x|lebesgue_on S. \\<bar>f x\\<bar> * \\<bar>g x\\<bar>", "proof (rule integral_abs_bound_integral)"], ["proof (state)\ngoal (3 subgoals):\n 1. integrable (lebesgue_on S) (\\<lambda>x. f x * g x)\n 2. integrable (lebesgue_on S)\n     (\\<lambda>x. \\<bar>f x\\<bar> * \\<bar>g x\\<bar>)\n 3. \\<And>x.\n       x \\<in> space (lebesgue_on S) \\<Longrightarrow>\n       \\<bar>f x * g x\\<bar> \\<le> \\<bar>f x\\<bar> * \\<bar>g x\\<bar>", "show \"integrable (lebesgue_on S) (\\<lambda>x. f x * g x)\" \"integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> * \\<bar>g x\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. f x * g x) &&&\n    integrable (lebesgue_on S)\n     (\\<lambda>x. \\<bar>f x\\<bar> * \\<bar>g x\\<bar>)", "by (simp_all add: assms square_integrable_imp_integrable_product)"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. f x * g x)\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x\\<bar> * \\<bar>g x\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> space (lebesgue_on S) \\<Longrightarrow>\n       \\<bar>f x * g x\\<bar> \\<le> \\<bar>f x\\<bar> * \\<bar>g x\\<bar>", "qed (simp add: abs_mult)"], ["proof (state)\nthis:\n  \\<bar>l2product S f g\\<bar>\n  \\<le> l2product S (\\<lambda>x. \\<bar>f x\\<bar>)\n         (\\<lambda>x. \\<bar>g x\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g", "also"], ["proof (state)\nthis:\n  \\<bar>l2product S f g\\<bar>\n  \\<le> l2product S (\\<lambda>x. \\<bar>f x\\<bar>)\n         (\\<lambda>x. \\<bar>g x\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g", "have \"\\<dots> \\<le> l2norm S f * l2norm S g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2product S (\\<lambda>x. \\<bar>f x\\<bar>) (\\<lambda>x. \\<bar>g x\\<bar>)\n    \\<le> l2norm S f * l2norm S g", "by (simp add: Schwartz_inequality_strong assms)"], ["proof (state)\nthis:\n  l2product S (\\<lambda>x. \\<bar>f x\\<bar>) (\\<lambda>x. \\<bar>g x\\<bar>)\n  \\<le> l2norm S f * l2norm S g\n\ngoal (1 subgoal):\n 1. \\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g", "finally"], ["proof (chain)\npicking this:\n  \\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g\n\ngoal (1 subgoal):\n 1. \\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g", "."], ["proof (state)\nthis:\n  \\<bar>l2product S f g\\<bar> \\<le> l2norm S f * l2norm S g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Schwartz_inequality:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"l2product S f g \\<le> l2norm S f * l2norm S g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2product S f g \\<le> l2norm S f * l2norm S g", "using Schwartz_inequality_abs assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f square_integrable ?S; ?g square_integrable ?S\\<rbrakk>\n  \\<Longrightarrow> \\<bar>l2product ?S ?f ?g\\<bar>\n                    \\<le> l2norm ?S ?f * l2norm ?S ?g\n  f square_integrable S\n  g square_integrable S\n\ngoal (1 subgoal):\n 1. l2product S f g \\<le> l2norm S f * l2norm S g", "by fastforce"], ["", "lemma lnorm_triangle:\n  assumes f: \"f \\<in> lspace M p\" and g: \"g \\<in> lspace M p\" and \"p \\<ge> 1\"\n  shows \"lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g", "have \"p > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> lspace M (ennreal p)\n  g \\<in> lspace M (ennreal p)\n  1 \\<le> p\n\ngoal (1 subgoal):\n 1. 0 < p", "by linarith"], ["proof (state)\nthis:\n  0 < p\n\ngoal (1 subgoal):\n 1. lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g", "then"], ["proof (chain)\npicking this:\n  0 < p", "have \"integrable M (\\<lambda>x. \\<bar>f x\\<bar> powr p)\" \"integrable M (\\<lambda>x. \\<bar>g x\\<bar> powr p)\""], ["proof (prove)\nusing this:\n  0 < p\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. \\<bar>f x\\<bar> powr p) &&&\n    integrable M (\\<lambda>x. \\<bar>g x\\<bar> powr p)", "by (simp_all add: Lp_D(2) assms)"], ["proof (state)\nthis:\n  integrable M (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  integrable M (\\<lambda>x. \\<bar>g x\\<bar> powr p)\n\ngoal (1 subgoal):\n 1. lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g", "moreover"], ["proof (state)\nthis:\n  integrable M (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  integrable M (\\<lambda>x. \\<bar>g x\\<bar> powr p)\n\ngoal (1 subgoal):\n 1. lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g", "have \"f \\<in> borel_measurable M\" \"g \\<in> borel_measurable M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable M &&& g \\<in> borel_measurable M", "using Lp_measurable f g"], ["proof (prove)\nusing this:\n  ?f \\<in> lspace ?M ?p \\<Longrightarrow> ?f \\<in> borel_measurable ?M\n  f \\<in> lspace M (ennreal p)\n  g \\<in> lspace M (ennreal p)\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable M &&& g \\<in> borel_measurable M", "by blast+"], ["proof (state)\nthis:\n  f \\<in> borel_measurable M\n  g \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g", "ultimately"], ["proof (chain)\npicking this:\n  integrable M (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  integrable M (\\<lambda>x. \\<bar>g x\\<bar> powr p)\n  f \\<in> borel_measurable M\n  g \\<in> borel_measurable M", "show ?thesis"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  integrable M (\\<lambda>x. \\<bar>g x\\<bar> powr p)\n  f \\<in> borel_measurable M\n  g \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g", "unfolding lnorm_def"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  integrable M (\\<lambda>x. \\<bar>g x\\<bar> powr p)\n  f \\<in> borel_measurable M\n  g \\<in> borel_measurable M\n\ngoal (1 subgoal):\n 1. (LINT x|M. \\<bar>f x + g x\\<bar> powr p) powr (1 / p)\n    \\<le> (LINT x|M. \\<bar>f x\\<bar> powr p) powr (1 / p) +\n          (LINT x|M. \\<bar>g x\\<bar> powr p) powr (1 / p)", "using Minkowski_inequality(2) \\<open>p \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. \\<bar>f x\\<bar> powr p)\n  integrable M (\\<lambda>x. \\<bar>g x\\<bar> powr p)\n  f \\<in> borel_measurable M\n  g \\<in> borel_measurable M\n  \\<lbrakk>1 \\<le> ?p; ?f \\<in> borel_measurable ?M;\n   ?g \\<in> borel_measurable ?M;\n   integrable ?M (\\<lambda>x. \\<bar>?f x\\<bar> powr ?p);\n   integrable ?M (\\<lambda>x. \\<bar>?g x\\<bar> powr ?p)\\<rbrakk>\n  \\<Longrightarrow> (LINT x|?M. \\<bar>?f x + ?g x\\<bar> powr ?p) powr\n                    (1 / ?p)\n                    \\<le> (LINT x|?M. \\<bar>?f x\\<bar> powr ?p) powr\n                          (1 / ?p) +\n                          (LINT x|?M. \\<bar>?g x\\<bar> powr ?p) powr\n                          (1 / ?p)\n  1 \\<le> p\n\ngoal (1 subgoal):\n 1. (LINT x|M. \\<bar>f x + g x\\<bar> powr p) powr (1 / p)\n    \\<le> (LINT x|M. \\<bar>f x\\<bar> powr p) powr (1 / p) +\n          (LINT x|M. \\<bar>g x\\<bar> powr p) powr (1 / p)", "by blast"], ["proof (state)\nthis:\n  lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lnorm_triangle_fun:\n  assumes f: \"f \\<in> lspace M p\" and g: \"g \\<in> lspace M p\" and \"p \\<ge> 1\"\n  shows \"lnorm M p (f + g) \\<le> lnorm M p f + lnorm M p g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnorm M p (f + g) \\<le> lnorm M p f + lnorm M p g", "using lnorm_triangle [OF assms]"], ["proof (prove)\nusing this:\n  lnorm M p (\\<lambda>x. f x + g x) \\<le> lnorm M p f + lnorm M p g\n\ngoal (1 subgoal):\n 1. lnorm M p (f + g) \\<le> lnorm M p f + lnorm M p g", "by (simp add: plus_fun_def)"], ["", "lemma l2norm_triangle:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"l2norm S (\\<lambda>x. f x + g x) \\<le> l2norm S f + l2norm S g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x + g x) \\<le> l2norm S f + l2norm S g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x + g x) \\<le> l2norm S f + l2norm S g", "have \"f \\<in> lspace (lebesgue_on S) 2\" \"g \\<in> lspace (lebesgue_on S) 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2 &&& g \\<in> lspace (lebesgue_on S) 2", "using assms"], ["proof (prove)\nusing this:\n  f square_integrable S\n  g square_integrable S\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2 &&& g \\<in> lspace (lebesgue_on S) 2", "by (simp_all add: square_integrable_imp_lspace)"], ["proof (state)\nthis:\n  f \\<in> lspace (lebesgue_on S) 2\n  g \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x + g x) \\<le> l2norm S f + l2norm S g", "then"], ["proof (chain)\npicking this:\n  f \\<in> lspace (lebesgue_on S) 2\n  g \\<in> lspace (lebesgue_on S) 2", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) 2\n  g \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x + g x) \\<le> l2norm S f + l2norm S g", "using lnorm_triangle [of f 2 \"lebesgue_on S\"]"], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) 2\n  g \\<in> lspace (lebesgue_on S) 2\n  \\<lbrakk>f \\<in> lspace (lebesgue_on S) (ennreal 2);\n   ?g \\<in> lspace (lebesgue_on S) (ennreal 2); 1 \\<le> 2\\<rbrakk>\n  \\<Longrightarrow> lnorm (lebesgue_on S) 2 (\\<lambda>x. f x + ?g x)\n                    \\<le> lnorm (lebesgue_on S) 2 f +\n                          lnorm (lebesgue_on S) 2 ?g\n\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x + g x) \\<le> l2norm S f + l2norm S g", "by (simp add: l2norm_lnorm)"], ["proof (state)\nthis:\n  l2norm S (\\<lambda>x. f x + g x) \\<le> l2norm S f + l2norm S g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma l2product_ladd:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S; h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S (\\<lambda>x. f x + g x) h = l2product S f h + l2product S g h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f square_integrable S; g square_integrable S;\n     h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S (\\<lambda>x. f x + g x) h =\n                      l2product S f h + l2product S g h", "by (simp add: l2product_def algebra_simps square_integrable_imp_integrable_product)"], ["", "lemma l2product_radd:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S; h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S f(\\<lambda>x. g x + h x) = l2product S f g + l2product S f h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f square_integrable S; g square_integrable S;\n     h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S f (\\<lambda>x. g x + h x) =\n                      l2product S f g + l2product S f h", "by (simp add: l2product_def algebra_simps square_integrable_imp_integrable_product)"], ["", "lemma l2product_ldiff:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S; h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S (\\<lambda>x. f x - g x) h = l2product S f h - l2product S g h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f square_integrable S; g square_integrable S;\n     h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S (\\<lambda>x. f x - g x) h =\n                      l2product S f h - l2product S g h", "by (simp add: l2product_def algebra_simps square_integrable_imp_integrable_product)"], ["", "lemma l2product_rdiff:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S; h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S f(\\<lambda>x. g x - h x) = l2product S f g - l2product S f h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f square_integrable S; g square_integrable S;\n     h square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S f (\\<lambda>x. g x - h x) =\n                      l2product S f g - l2product S f h", "by (simp add: l2product_def algebra_simps square_integrable_imp_integrable_product)"], ["", "lemma l2product_lmult:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S (\\<lambda>x. c * f x) g = c * l2product S f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S (\\<lambda>x. c * f x) g =\n                      c * l2product S f g", "by (simp add: l2product_def algebra_simps)"], ["", "lemma l2product_rmult:\n   \"\\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S f(\\<lambda>x. c * g x) = c * l2product S f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f square_integrable S; g square_integrable S\\<rbrakk>\n    \\<Longrightarrow> l2product S f (\\<lambda>x. c * g x) =\n                      c * l2product S f g", "by (simp add: l2product_def algebra_simps)"], ["", "lemma l2product_lzero [simp]: \"l2product S (\\<lambda>x. 0) f = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2product S (\\<lambda>x. 0) f = 0", "by (simp add: l2product_def)"], ["", "lemma l2product_rzero [simp]: \"l2product S f(\\<lambda>x. 0) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2product S f (\\<lambda>x. 0) = 0", "by (simp add: l2product_def)"], ["", "lemma l2product_lsum:\n  assumes I: \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> (f i) square_integrable S\" and S: \"g square_integrable S\"\n  shows \"l2product S (\\<lambda>x. \\<Sum>i\\<in>I. f i x) g = (\\<Sum>i\\<in>I. l2product S (f i) g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2product S (\\<lambda>x. \\<Sum>i\\<in>I. f i x) g =\n    (\\<Sum>i\\<in>I. l2product S (f i) g)", "using I"], ["proof (prove)\nusing this:\n  finite I\n  ?i \\<in> I \\<Longrightarrow> f ?i square_integrable S\n\ngoal (1 subgoal):\n 1. l2product S (\\<lambda>x. \\<Sum>i\\<in>I. f i x) g =\n    (\\<Sum>i\\<in>I. l2product S (f i) g)", "proof induction"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        f i square_integrable S) \\<Longrightarrow>\n    l2product S (\\<lambda>x. \\<Sum>i\\<in>{}. f i x) g =\n    (\\<Sum>i\\<in>{}. l2product S (f i) g)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i square_integrable S) \\<Longrightarrow>\n        l2product S (\\<lambda>x. \\<Sum>i\\<in>F. f i x) g =\n        (\\<Sum>i\\<in>F. l2product S (f i) g);\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i square_integrable S\\<rbrakk>\n       \\<Longrightarrow> l2product S\n                          (\\<lambda>xa. \\<Sum>i\\<in>insert x F. f i xa) g =\n                         (\\<Sum>i\\<in>insert x F. l2product S (f i) g)", "case (insert i I)"], ["proof (state)\nthis:\n  finite I\n  i \\<notin> I\n  (\\<And>i.\n      i \\<in> I \\<Longrightarrow> f i square_integrable S) \\<Longrightarrow>\n  l2product S (\\<lambda>x. \\<Sum>i\\<in>I. f i x) g =\n  (\\<Sum>i\\<in>I. l2product S (f i) g)\n  ?i \\<in> insert i I \\<Longrightarrow> f ?i square_integrable S\n\ngoal (2 subgoals):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        f i square_integrable S) \\<Longrightarrow>\n    l2product S (\\<lambda>x. \\<Sum>i\\<in>{}. f i x) g =\n    (\\<Sum>i\\<in>{}. l2product S (f i) g)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>i.\n            i \\<in> F \\<Longrightarrow>\n            f i square_integrable S) \\<Longrightarrow>\n        l2product S (\\<lambda>x. \\<Sum>i\\<in>F. f i x) g =\n        (\\<Sum>i\\<in>F. l2product S (f i) g);\n        \\<And>i.\n           i \\<in> insert x F \\<Longrightarrow>\n           f i square_integrable S\\<rbrakk>\n       \\<Longrightarrow> l2product S\n                          (\\<lambda>xa. \\<Sum>i\\<in>insert x F. f i xa) g =\n                         (\\<Sum>i\\<in>insert x F. l2product S (f i) g)", "with S"], ["proof (chain)\npicking this:\n  g square_integrable S\n  finite I\n  i \\<notin> I\n  (\\<And>i.\n      i \\<in> I \\<Longrightarrow> f i square_integrable S) \\<Longrightarrow>\n  l2product S (\\<lambda>x. \\<Sum>i\\<in>I. f i x) g =\n  (\\<Sum>i\\<in>I. l2product S (f i) g)\n  ?i \\<in> insert i I \\<Longrightarrow> f ?i square_integrable S", "show ?case"], ["proof (prove)\nusing this:\n  g square_integrable S\n  finite I\n  i \\<notin> I\n  (\\<And>i.\n      i \\<in> I \\<Longrightarrow> f i square_integrable S) \\<Longrightarrow>\n  l2product S (\\<lambda>x. \\<Sum>i\\<in>I. f i x) g =\n  (\\<Sum>i\\<in>I. l2product S (f i) g)\n  ?i \\<in> insert i I \\<Longrightarrow> f ?i square_integrable S\n\ngoal (1 subgoal):\n 1. l2product S (\\<lambda>x. \\<Sum>i\\<in>insert i I. f i x) g =\n    (\\<Sum>i\\<in>insert i I. l2product S (f i) g)", "by (simp add: l2product_ladd square_integrable_imp_lebesgue)"], ["proof (state)\nthis:\n  l2product S (\\<lambda>x. \\<Sum>i\\<in>insert i I. f i x) g =\n  (\\<Sum>i\\<in>insert i I. l2product S (f i) g)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> {} \\<Longrightarrow>\n        f i square_integrable S) \\<Longrightarrow>\n    l2product S (\\<lambda>x. \\<Sum>i\\<in>{}. f i x) g =\n    (\\<Sum>i\\<in>{}. l2product S (f i) g)", "qed auto"], ["", "lemma l2product_rsum:\n  assumes I: \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> (f i) square_integrable S\" and S: \"g square_integrable S\"\n  shows \"l2product S g (\\<lambda>x. \\<Sum>i\\<in>I. f i x) = (\\<Sum>i\\<in>I. l2product S g (f i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2product S g (\\<lambda>x. \\<Sum>i\\<in>I. f i x) =\n    (\\<Sum>i\\<in>I. l2product S g (f i))", "using l2product_lsum [OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>i. i \\<in> I \\<Longrightarrow> ?i1 i \\<in> I) \\<Longrightarrow>\n  l2product S (\\<lambda>x. \\<Sum>i\\<in>I. f (?i1 i) x) g =\n  (\\<Sum>i\\<in>I. l2product S (f (?i1 i)) g)\n\ngoal (1 subgoal):\n 1. l2product S g (\\<lambda>x. \\<Sum>i\\<in>I. f i x) =\n    (\\<Sum>i\\<in>I. l2product S g (f i))", "by (simp add: l2product_sym)"], ["", "lemma l2norm_lmult:\n   \"f square_integrable S \\<Longrightarrow> l2norm S (\\<lambda>x. c * f x) = \\<bar>c\\<bar> * l2norm S f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    l2norm S (\\<lambda>x. c * f x) = \\<bar>c\\<bar> * l2norm S f", "by (simp add: l2norm_def l2product_rmult l2product_sym real_sqrt_mult)"], ["", "lemma l2norm_rmult:\n   \"f square_integrable S \\<Longrightarrow> l2norm S (\\<lambda>x. f x * c) = l2norm S f * \\<bar>c\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    l2norm S (\\<lambda>x. f x * c) = l2norm S f * \\<bar>c\\<bar>", "using l2norm_lmult"], ["proof (prove)\nusing this:\n  ?f square_integrable ?S \\<Longrightarrow>\n  l2norm ?S (\\<lambda>x. ?c * ?f x) = \\<bar>?c\\<bar> * l2norm ?S ?f\n\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    l2norm S (\\<lambda>x. f x * c) = l2norm S f * \\<bar>c\\<bar>", "by (simp add: mult.commute)"], ["", "lemma l2norm_neg:\n   \"f square_integrable S \\<Longrightarrow> l2norm S (\\<lambda>x. - f x) = l2norm S f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    l2norm S (\\<lambda>x. - f x) = l2norm S f", "using l2norm_lmult [of f S \"-1\"]"], ["proof (prove)\nusing this:\n  f square_integrable S \\<Longrightarrow>\n  l2norm S (\\<lambda>x. - 1 * f x) = \\<bar>- 1\\<bar> * l2norm S f\n\ngoal (1 subgoal):\n 1. f square_integrable S \\<Longrightarrow>\n    l2norm S (\\<lambda>x. - f x) = l2norm S f", "by simp"], ["", "lemma l2norm_diff:\n  assumes \"f square_integrable S\" \"g square_integrable S\"\n  shows \"l2norm S (\\<lambda>x. f x - g x) = l2norm S (\\<lambda>x. g x - f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x - g x) = l2norm S (\\<lambda>x. g x - f x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x - g x) = l2norm S (\\<lambda>x. g x - f x)", "have \"(\\<lambda>x. f x - g x) square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - g x) square_integrable S", "using assms square_integrable_diff"], ["proof (prove)\nusing this:\n  f square_integrable S\n  g square_integrable S\n  \\<lbrakk>?f square_integrable ?S; ?g square_integrable ?S\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x. ?f x - ?g x) square_integrable ?S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - g x) square_integrable S", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - g x) square_integrable S\n\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x - g x) = l2norm S (\\<lambda>x. g x - f x)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f x - g x) square_integrable S", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - g x) square_integrable S\n\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x - g x) = l2norm S (\\<lambda>x. g x - f x)", "using l2norm_neg [of \"\\<lambda>x. f x - g x\" S]"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - g x) square_integrable S\n  (\\<lambda>x. f x - g x) square_integrable S \\<Longrightarrow>\n  l2norm S (\\<lambda>x. - (f x - g x)) = l2norm S (\\<lambda>x. f x - g x)\n\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x - g x) = l2norm S (\\<lambda>x. g x - f x)", "by (simp add: algebra_simps)"], ["proof (state)\nthis:\n  l2norm S (\\<lambda>x. f x - g x) = l2norm S (\\<lambda>x. g x - f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Completeness (Riesz-Fischer)\\<close>"], ["", "lemma eNorm_eq_lnorm: \"\\<lbrakk>f \\<in> lspace M p; p > 0\\<rbrakk> \\<Longrightarrow> eNorm (\\<LL> (ennreal p) M) f = ennreal (lnorm M p f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> lspace M (ennreal p); 0 < p\\<rbrakk>\n    \\<Longrightarrow> eNorm (\\<LL> (ennreal p) M) f = ennreal (lnorm M p f)", "by (simp add: Lp_D(4) lnorm_def)"], ["", "lemma Norm_eq_lnorm: \"\\<lbrakk>f \\<in> lspace M p; p > 0\\<rbrakk> \\<Longrightarrow> Norm (\\<LL> (ennreal p) M) f = lnorm M p f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> lspace M (ennreal p); 0 < p\\<rbrakk>\n    \\<Longrightarrow> Norm (\\<LL> (ennreal p) M) f = lnorm M p f", "by (simp add: Lp_D(3) lnorm_def)"], ["", "lemma eNorm_ge1_triangular_ineq:\n  assumes \"p \\<ge> (1::real)\"\n  shows \"eNorm (\\<LL> p M) (x + y) \\<le> eNorm (\\<LL> p M) x + eNorm (\\<LL> p M) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eNorm (\\<LL> (ennreal p) M) (x + y)\n    \\<le> eNorm (\\<LL> (ennreal p) M) x + eNorm (\\<LL> (ennreal p) M) y", "using eNorm_triangular_ineq [of \"(\\<LL> p M)\"] assms"], ["proof (prove)\nusing this:\n  eNorm (\\<LL> (ennreal p) M) (?x + ?y)\n  \\<le> ennreal (defect (\\<LL> (ennreal p) M)) *\n        eNorm (\\<LL> (ennreal p) M) ?x +\n        ennreal (defect (\\<LL> (ennreal p) M)) *\n        eNorm (\\<LL> (ennreal p) M) ?y\n  1 \\<le> p\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> (ennreal p) M) (x + y)\n    \\<le> eNorm (\\<LL> (ennreal p) M) x + eNorm (\\<LL> (ennreal p) M) y", "by (simp add: Lp(2))"], ["", "text\\<open>A mere repackaging of the theorem @{thm Lp_complete}, but nearly as much work again.\\<close>"], ["", "proposition l2_complete:\n  assumes f: \"\\<And>i::nat. f i square_integrable S\"\n    and cauchy: \"\\<And>e. 0 < e \\<Longrightarrow> \\<exists>N. \\<forall>m\\<ge>N. \\<forall>n\\<ge>N. l2norm S (\\<lambda>x. f m x - f n x) < e\"\n  obtains g where \"g square_integrable S\" \"((\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x)) \\<longlonglongrightarrow> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g square_integrable S;\n         (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n         \\<longlonglongrightarrow> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g square_integrable S;\n         (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n         \\<longlonglongrightarrow> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have finite: \"eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < \\<top>\" for m n"], ["proof (prove)\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < \\<top>", "by (metis f infinity_ennreal_def spaceN_diff spaceN_iff square_integrable_imp_lspace)"], ["proof (state)\nthis:\n  eNorm (\\<LL> 2 (lebesgue_on S)) (f ?n - f ?m) < \\<top>\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g square_integrable S;\n         (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n         \\<longlonglongrightarrow> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have *: \"cauchy_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cauchy_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f", "proof (clarsimp simp: cauchy_ine\\<^sub>N_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>M.\n          \\<forall>n\\<ge>M.\n             \\<forall>m\\<ge>M.\n                eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "show \"\\<exists>M. \\<forall>n\\<ge>M. \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e\"\n      if \"e > 0\" for e"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M.\n       \\<forall>n\\<ge>M.\n          \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "proof (cases e)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>0 \\<le> r; e = ennreal r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M.\n                            \\<forall>n\\<ge>M.\n                               \\<forall>m\\<ge>M.\n                                  eNorm (\\<LL> 2 (lebesgue_on S))\n                                   (f n - f m)\n                                  < e\n 2. e = \\<top> \\<Longrightarrow>\n    \\<exists>M.\n       \\<forall>n\\<ge>M.\n          \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "case (real r)"], ["proof (state)\nthis:\n  0 \\<le> r\n  e = ennreal r\n\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>0 \\<le> r; e = ennreal r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M.\n                            \\<forall>n\\<ge>M.\n                               \\<forall>m\\<ge>M.\n                                  eNorm (\\<LL> 2 (lebesgue_on S))\n                                   (f n - f m)\n                                  < e\n 2. e = \\<top> \\<Longrightarrow>\n    \\<exists>M.\n       \\<forall>n\\<ge>M.\n          \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "then"], ["proof (chain)\npicking this:\n  0 \\<le> r\n  e = ennreal r", "have \"r > 0\""], ["proof (prove)\nusing this:\n  0 \\<le> r\n  e = ennreal r\n\ngoal (1 subgoal):\n 1. 0 < r", "using that"], ["proof (prove)\nusing this:\n  0 \\<le> r\n  e = ennreal r\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 < r", "by auto"], ["proof (state)\nthis:\n  0 < r\n\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>0 \\<le> r; e = ennreal r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M.\n                            \\<forall>n\\<ge>M.\n                               \\<forall>m\\<ge>M.\n                                  eNorm (\\<LL> 2 (lebesgue_on S))\n                                   (f n - f m)\n                                  < e\n 2. e = \\<top> \\<Longrightarrow>\n    \\<exists>M.\n       \\<forall>n\\<ge>M.\n          \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "with cauchy"], ["proof (chain)\npicking this:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>N.\n     \\<forall>m\\<ge>N.\n        \\<forall>n\\<ge>N. l2norm S (\\<lambda>x. f m x - f n x) < ?e\n  0 < r", "obtain N::nat where N: \"\\<And>m n. \\<lbrakk>m \\<ge> N; n \\<ge> N\\<rbrakk> \\<Longrightarrow> l2norm S (\\<lambda>x. f n x - f m x) < r\""], ["proof (prove)\nusing this:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>N.\n     \\<forall>m\\<ge>N.\n        \\<forall>n\\<ge>N. l2norm S (\\<lambda>x. f m x - f n x) < ?e\n  0 < r\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        (\\<And>m n.\n            \\<lbrakk>N \\<le> m; N \\<le> n\\<rbrakk>\n            \\<Longrightarrow> l2norm S (\\<lambda>x. f n x - f m x)\n                              < r) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>N \\<le> ?m; N \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> l2norm S (\\<lambda>x. f ?n x - f ?m x) < r\n\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>0 \\<le> r; e = ennreal r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>M.\n                            \\<forall>n\\<ge>M.\n                               \\<forall>m\\<ge>M.\n                                  eNorm (\\<LL> 2 (lebesgue_on S))\n                                   (f n - f m)\n                                  < e\n 2. e = \\<top> \\<Longrightarrow>\n    \\<exists>M.\n       \\<forall>n\\<ge>M.\n          \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>M.\n       \\<forall>n\\<ge>M.\n          \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "proof (intro exI allI impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>?M \\<le> n; ?M \\<le> m\\<rbrakk>\n       \\<Longrightarrow> eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "show \"eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e\"\n          if \"N \\<le> m\" \"N \\<le> n\" for m n"], ["proof (prove)\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "have fnm: \"(f n - f m) \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n - f m \\<in> borel_measurable (lebesgue_on S)", "using f"], ["proof (prove)\nusing this:\n  f ?i square_integrable S\n\ngoal (1 subgoal):\n 1. f n - f m \\<in> borel_measurable (lebesgue_on S)", "unfolding square_integrable_def"], ["proof (prove)\nusing this:\n  S \\<in> sets lebesgue \\<and>\n  f ?i \\<in> borel_measurable (lebesgue_on S) \\<and>\n  integrable (lebesgue_on S) (\\<lambda>x. (f ?i x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. f n - f m \\<in> borel_measurable (lebesgue_on S)", "by (blast intro: borel_measurable_diff')"], ["proof (state)\nthis:\n  f n - f m \\<in> borel_measurable (lebesgue_on S)\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "have \"l2norm S (\\<lambda>x. f n x - f m x) = lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - f m x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f n x - f m x) =\n    lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - f m x)", "by (metis l2norm_lnorm)"], ["proof (state)\nthis:\n  l2norm S (\\<lambda>x. f n x - f m x) =\n  lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - f m x)\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "also"], ["proof (state)\nthis:\n  l2norm S (\\<lambda>x. f n x - f m x) =\n  lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - f m x)\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "have \"\\<dots> = Norm (\\<LL> 2 (lebesgue_on S)) (f n - f m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - f m x) =\n    Norm (\\<LL> 2 (lebesgue_on S)) (f n - f m)", "using Lp_Norm [OF _ fnm, of 2]"], ["proof (prove)\nusing this:\n  0 < 2 \\<Longrightarrow>\n  Norm (\\<LL> (ennreal 2) (lebesgue_on S)) (f n - f m) =\n  (LINT x|lebesgue_on S. \\<bar>(f n - f m) x\\<bar> powr 2) powr (1 / 2)\n  0 < 2 \\<Longrightarrow>\n  Norm (\\<LL> (ennreal 2) (lebesgue_on S)) (f n - f m) powr 2 =\n  LINT x|lebesgue_on S. \\<bar>(f n - f m) x\\<bar> powr 2\n\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - f m x) =\n    Norm (\\<LL> 2 (lebesgue_on S)) (f n - f m)", "by (simp add: lnorm_def)"], ["proof (state)\nthis:\n  lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - f m x) =\n  Norm (\\<LL> 2 (lebesgue_on S)) (f n - f m)\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "finally"], ["proof (chain)\npicking this:\n  l2norm S (\\<lambda>x. f n x - f m x) =\n  Norm (\\<LL> 2 (lebesgue_on S)) (f n - f m)", "show ?thesis"], ["proof (prove)\nusing this:\n  l2norm S (\\<lambda>x. f n x - f m x) =\n  Norm (\\<LL> 2 (lebesgue_on S)) (f n - f m)\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "using N [OF that] real finite"], ["proof (prove)\nusing this:\n  l2norm S (\\<lambda>x. f n x - f m x) =\n  Norm (\\<LL> 2 (lebesgue_on S)) (f n - f m)\n  l2norm S (\\<lambda>x. f n x - f m x) < r\n  0 \\<le> r\n  e = ennreal r\n  eNorm (\\<LL> 2 (lebesgue_on S)) (f ?n - f ?m) < \\<top>\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "by (simp add: Norm_def)"], ["proof (state)\nthis:\n  eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>N \\<le> ?m; N \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> eNorm (\\<LL> 2 (lebesgue_on S)) (f ?n - f ?m) < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>M.\n     \\<forall>n\\<ge>M.\n        \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e\n\ngoal (1 subgoal):\n 1. e = \\<top> \\<Longrightarrow>\n    \\<exists>M.\n       \\<forall>n\\<ge>M.\n          \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < e", "qed (simp add: finite)"], ["proof (state)\nthis:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>M.\n     \\<forall>n\\<ge>M.\n        \\<forall>m\\<ge>M. eNorm (\\<LL> 2 (lebesgue_on S)) (f n - f m) < ?e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cauchy_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g square_integrable S;\n         (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n         \\<longlonglongrightarrow> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  cauchy_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f", "obtain g where g: \"tendsto_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f g\""], ["proof (prove)\nusing this:\n  cauchy_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        tendsto_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using Lp_complete complete\\<^sub>N_def"], ["proof (prove)\nusing this:\n  cauchy_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f\n  complete\\<^sub>N (\\<LL> ?p ?M)\n  complete\\<^sub>N ?N =\n  (\\<forall>u.\n      cauchy_ine\\<^sub>N ?N u \\<longrightarrow>\n      (\\<exists>x. tendsto_ine\\<^sub>N ?N u x))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        tendsto_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  tendsto_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f g\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g square_integrable S;\n         (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n         \\<longlonglongrightarrow> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?g square_integrable S\n 2. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - ?g x))\n    \\<longlonglongrightarrow> 0", "have fng_to_0: \"(\\<lambda>n. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x))\n    \\<longlonglongrightarrow> 0", "using g Lp_D(4) [of 2 _ \"lebesgue_on S\"]"], ["proof (prove)\nusing this:\n  tendsto_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f g\n  \\<lbrakk>0 < 2; ?f \\<in> lspace (lebesgue_on S) (ennreal 2)\\<rbrakk>\n  \\<Longrightarrow> eNorm (\\<LL> (ennreal 2) (lebesgue_on S)) ?f =\n                    ennreal\n                     ((LINT x|lebesgue_on S. \\<bar>?f x\\<bar> powr 2) powr\n                      (1 / 2))\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x))\n    \\<longlonglongrightarrow> 0", "by (simp add: tendsto_ine\\<^sub>N_def minus_fun_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0\n\ngoal (2 subgoals):\n 1. ?g square_integrable S\n 2. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - ?g x))\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0", "obtain M where \"\\<And>n . n \\<ge> M \\<Longrightarrow> eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x) < \\<top>\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        (\\<And>n.\n            M \\<le> n \\<Longrightarrow>\n            eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x)\n            < \\<top>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (simp add: lim_explicit)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>M.\n                (\\<And>n.\n                    M \\<le> n \\<Longrightarrow>\n                    eNorm (\\<LL> 2 (lebesgue_on S))\n                     (\\<lambda>x. f n x - g x)\n                    < \\<top>) \\<Longrightarrow>\n                thesis;\n     \\<forall>Sa.\n        open Sa \\<longrightarrow>\n        0 \\<in> Sa \\<longrightarrow>\n        (\\<exists>N.\n            \\<forall>n\\<ge>N.\n               eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x)\n               \\<in> Sa)\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis (full_types) open_lessThan diff_self eNorm_zero lessThan_iff local.finite)"], ["proof (state)\nthis:\n  M \\<le> ?n \\<Longrightarrow>\n  eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f ?n x - g x) < \\<top>\n\ngoal (2 subgoals):\n 1. ?g square_integrable S\n 2. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - ?g x))\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  M \\<le> ?n \\<Longrightarrow>\n  eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f ?n x - g x) < \\<top>", "have \"eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. g x - f M x) < \\<top>\""], ["proof (prove)\nusing this:\n  M \\<le> ?n \\<Longrightarrow>\n  eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f ?n x - g x) < \\<top>\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. g x - f M x) < \\<top>", "using eNorm_uminus [of _ \"\\<lambda>x. g x - f _ x\"]"], ["proof (prove)\nusing this:\n  M \\<le> ?n \\<Longrightarrow>\n  eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f ?n x - g x) < \\<top>\n  eNorm ?N (- (\\<lambda>x. g x - f ?uu4 x)) =\n  eNorm ?N (\\<lambda>x. g x - f ?uu4 x)\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. g x - f M x) < \\<top>", "by (simp add: uminus_fun_def)"], ["proof (state)\nthis:\n  eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. g x - f M x) < \\<top>\n\ngoal (2 subgoals):\n 1. ?g square_integrable S\n 2. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - ?g x))\n    \\<longlonglongrightarrow> 0", "moreover"], ["proof (state)\nthis:\n  eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. g x - f M x) < \\<top>\n\ngoal (2 subgoals):\n 1. ?g square_integrable S\n 2. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - ?g x))\n    \\<longlonglongrightarrow> 0", "have \"eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f M x) < \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f M) < \\<top>", "using f square_integrable_imp_lspace"], ["proof (prove)\nusing this:\n  f ?i square_integrable S\n  ?f square_integrable ?S \\<Longrightarrow>\n  ?f \\<in> lspace (lebesgue_on ?S) 2\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) (f M) < \\<top>", "by (simp add: spaceN_iff)"], ["proof (state)\nthis:\n  eNorm (\\<LL> 2 (lebesgue_on S)) (f M) < \\<top>\n\ngoal (2 subgoals):\n 1. ?g square_integrable S\n 2. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - ?g x))\n    \\<longlonglongrightarrow> 0", "ultimately"], ["proof (chain)\npicking this:\n  eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. g x - f M x) < \\<top>\n  eNorm (\\<LL> 2 (lebesgue_on S)) (f M) < \\<top>", "have \"eNorm (\\<LL> 2 (lebesgue_on S)) g < \\<top>\""], ["proof (prove)\nusing this:\n  eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. g x - f M x) < \\<top>\n  eNorm (\\<LL> 2 (lebesgue_on S)) (f M) < \\<top>\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) g < \\<top>", "using eNorm_ge1_triangular_ineq [of 2 \"lebesgue_on S\" \"g - f M\" \"f M\", simplified] not_le top.not_eq_extremum"], ["proof (prove)\nusing this:\n  eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. g x - f M x) < \\<top>\n  eNorm (\\<LL> 2 (lebesgue_on S)) (f M) < \\<top>\n  eNorm (\\<LL> 2 (lebesgue_on S)) g\n  \\<le> eNorm (\\<LL> 2 (lebesgue_on S)) (g - f M) +\n        eNorm (\\<LL> 2 (lebesgue_on S)) (f M)\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n  (?a \\<noteq> \\<top>) = (?a < \\<top>)\n\ngoal (1 subgoal):\n 1. eNorm (\\<LL> 2 (lebesgue_on S)) g < \\<top>", "by (fastforce simp add: minus_fun_def)"], ["proof (state)\nthis:\n  eNorm (\\<LL> 2 (lebesgue_on S)) g < \\<top>\n\ngoal (2 subgoals):\n 1. ?g square_integrable S\n 2. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - ?g x))\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  eNorm (\\<LL> 2 (lebesgue_on S)) g < \\<top>", "have g_space: \"g \\<in> space\\<^sub>N (\\<LL> 2 (lebesgue_on S))\""], ["proof (prove)\nusing this:\n  eNorm (\\<LL> 2 (lebesgue_on S)) g < \\<top>\n\ngoal (1 subgoal):\n 1. g \\<in> lspace (lebesgue_on S) 2", "by (simp add: spaceN_iff)"], ["proof (state)\nthis:\n  g \\<in> lspace (lebesgue_on S) 2\n\ngoal (2 subgoals):\n 1. ?g square_integrable S\n 2. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - ?g x))\n    \\<longlonglongrightarrow> 0", "show \"g square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g square_integrable S", "unfolding square_integrable_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue \\<and>\n    g \\<in> borel_measurable (lebesgue_on S) \\<and>\n    integrable (lebesgue_on S) (\\<lambda>x. (g x)\\<^sup>2)", "proof (intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. S \\<in> sets lebesgue\n 2. g \\<in> borel_measurable (lebesgue_on S)\n 3. integrable (lebesgue_on S) (\\<lambda>x. (g x)\\<^sup>2)", "show \"g \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> borel_measurable (lebesgue_on S)", "using Lp_measurable g_space"], ["proof (prove)\nusing this:\n  ?f \\<in> lspace ?M ?p \\<Longrightarrow> ?f \\<in> borel_measurable ?M\n  g \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. g \\<in> borel_measurable (lebesgue_on S)", "by blast"], ["proof (state)\nthis:\n  g \\<in> borel_measurable (lebesgue_on S)\n\ngoal (2 subgoals):\n 1. S \\<in> sets lebesgue\n 2. integrable (lebesgue_on S) (\\<lambda>x. (g x)\\<^sup>2)", "show \"S \\<in> sets lebesgue\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue", "using f square_integrable_def"], ["proof (prove)\nusing this:\n  f ?i square_integrable S\n  ?f square_integrable ?S \\<equiv>\n  ?S \\<in> sets lebesgue \\<and>\n  ?f \\<in> borel_measurable (lebesgue_on ?S) \\<and>\n  integrable (lebesgue_on ?S) (\\<lambda>x. (?f x)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. S \\<in> sets lebesgue", "by blast"], ["proof (state)\nthis:\n  S \\<in> sets lebesgue\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. (g x)\\<^sup>2)", "then"], ["proof (chain)\npicking this:\n  S \\<in> sets lebesgue", "show \"integrable (lebesgue_on S) (\\<lambda>x. (g x)\\<^sup>2)\""], ["proof (prove)\nusing this:\n  S \\<in> sets lebesgue\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. (g x)\\<^sup>2)", "using g_space square_integrable_def square_integrable_iff_lspace"], ["proof (prove)\nusing this:\n  S \\<in> sets lebesgue\n  g \\<in> lspace (lebesgue_on S) 2\n  ?f square_integrable ?S \\<equiv>\n  ?S \\<in> sets lebesgue \\<and>\n  ?f \\<in> borel_measurable (lebesgue_on ?S) \\<and>\n  integrable (lebesgue_on ?S) (\\<lambda>x. (?f x)\\<^sup>2)\n  ?S \\<in> sets lebesgue \\<Longrightarrow>\n  (?f square_integrable ?S) = (?f \\<in> lspace (lebesgue_on ?S) 2)\n\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. (g x)\\<^sup>2)", "by blast"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. (g x)\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g square_integrable S\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  g square_integrable S", "have \"f n - g \\<in> lspace (lebesgue_on S) 2\" for n"], ["proof (prove)\nusing this:\n  g square_integrable S\n\ngoal (1 subgoal):\n 1. f n - g \\<in> lspace (lebesgue_on S) 2", "using f spaceN_diff square_integrable_imp_lspace"], ["proof (prove)\nusing this:\n  g square_integrable S\n  f ?i square_integrable S\n  \\<lbrakk>?x \\<in> space\\<^sub>N ?N; ?y \\<in> space\\<^sub>N ?N\\<rbrakk>\n  \\<Longrightarrow> ?x - ?y \\<in> space\\<^sub>N ?N\n  ?f square_integrable ?S \\<Longrightarrow>\n  ?f \\<in> lspace (lebesgue_on ?S) 2\n\ngoal (1 subgoal):\n 1. f n - g \\<in> lspace (lebesgue_on S) 2", "by blast"], ["proof (state)\nthis:\n  f ?n - g \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n    \\<longlonglongrightarrow> 0", "with fng_to_0"], ["proof (chain)\npicking this:\n  (\\<lambda>n. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0\n  f ?n - g \\<in> lspace (lebesgue_on S) 2", "have \"(\\<lambda>n. ennreal (lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x))) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. eNorm (\\<LL> 2 (lebesgue_on S)) (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0\n  f ?n - g \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        ennreal (lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x)))\n    \\<longlonglongrightarrow> 0", "by (simp add: minus_fun_def flip: eNorm_eq_lnorm)"], ["proof (state)\nthis:\n  (\\<lambda>n. ennreal (lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x)))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. ennreal (lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x)))\n  \\<longlonglongrightarrow> 0", "have \"(\\<lambda>n. lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. ennreal (lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x)))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x))\n    \\<longlonglongrightarrow> 0", "by (simp add: ennreal_tendsto_0_iff lnorm_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n    \\<longlonglongrightarrow> 0", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>n. lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0", "show \"(\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n    \\<longlonglongrightarrow> 0", "using g"], ["proof (prove)\nusing this:\n  (\\<lambda>n. lnorm (lebesgue_on S) 2 (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0\n  tendsto_ine\\<^sub>N (\\<LL> 2 (lebesgue_on S)) f g\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n    \\<longlonglongrightarrow> 0", "by (simp add:  l2norm_lnorm lnorm_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. l2norm S (\\<lambda>x. f n x - g x))\n  \\<longlonglongrightarrow> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Approximation of functions in Lp by bounded and continuous ones\\<close>"], ["", "lemma lspace_bounded_measurable:\n  fixes p::real\n  assumes f: \"f \\<in> borel_measurable (lebesgue_on S)\" and g: \"g \\<in> lspace (lebesgue_on S) p\" and \"p > 0\"\n    and le: \" AE x in lebesgue_on S. norm (\\<bar>f x\\<bar> powr p) \\<le> norm (\\<bar>g x\\<bar> powr p)\"\n  shows \"f \\<in> lspace (lebesgue_on S) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) (ennreal p)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable (lebesgue_on S)\n  g \\<in> lspace (lebesgue_on S) (ennreal p)\n  0 < p\n  AE x in lebesgue_on\n           S. norm (\\<bar>f x\\<bar> powr p)\n              \\<le> norm (\\<bar>g x\\<bar> powr p)\n\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) (ennreal p)", "by (auto simp: lspace_ennreal_iff intro: Bochner_Integration.integrable_bound)"], ["", "lemma lspace_approximate_bounded:\n  assumes f: \"f \\<in> lspace (lebesgue_on S) p\" and S: \"S \\<in> lmeasurable\" and \"p > 0\" \"e > 0\"\n  obtains g where \"g \\<in> lspace (lebesgue_on S) p\" \"bounded (g ` S)\"\n    \"lnorm (lebesgue_on S) p (f - g) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (g ` S); lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (g ` S); lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f_bm: \"f \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (lebesgue_on S)", "using Lp_measurable f"], ["proof (prove)\nusing this:\n  ?f \\<in> lspace ?M ?p \\<Longrightarrow> ?f \\<in> borel_measurable ?M\n  f \\<in> lspace (lebesgue_on S) (ennreal p)\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable (lebesgue_on S)", "by blast"], ["proof (state)\nthis:\n  f \\<in> borel_measurable (lebesgue_on S)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (g ` S); lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?f = \"\\<lambda>n::nat. \\<lambda>x. max (- n) (min n (f x))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (g ` S); lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"tendsto_in\\<^sub>N (\\<LL> p (lebesgue_on S)) ?f f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tendsto_in\\<^sub>N (\\<LL> (ennreal p) (lebesgue_on S))\n     (\\<lambda>x xa. max (- real x) (min (real x) (f xa))) f", "proof (rule Lp_domination_limit)"], ["proof (state)\ngoal (5 subgoals):\n 1. f \\<in> borel_measurable (lebesgue_on S)\n 2. \\<And>n.\n       (\\<lambda>x. max (- real n) (min (real n) (f x)))\n       \\<in> borel_measurable (lebesgue_on S)\n 3. ?m \\<in> lspace (lebesgue_on S) (ennreal p)\n 4. AE x in lebesgue_on\n             S. (\\<lambda>n. max (- real n) (min (real n) (f x)))\n                \\<longlonglongrightarrow> f x\n 5. \\<And>n.\n       AE x in lebesgue_on\n                S. \\<bar>max (- real n) (min (real n) (f x))\\<bar>\n                   \\<le> ?m x", "show \"\\<And>n::nat. ?f n \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<lambda>x. max (- real n) (min (real n) (f x)))\n       \\<in> borel_measurable (lebesgue_on S)", "by (intro f_bm borel_measurable_max borel_measurable_min borel_measurable_const)"], ["proof (state)\nthis:\n  (\\<lambda>x. max (- real ?n) (min (real ?n) (f x)))\n  \\<in> borel_measurable (lebesgue_on S)\n\ngoal (4 subgoals):\n 1. f \\<in> borel_measurable (lebesgue_on S)\n 2. ?m \\<in> lspace (lebesgue_on S) (ennreal p)\n 3. AE x in lebesgue_on\n             S. (\\<lambda>n. max (- real n) (min (real n) (f x)))\n                \\<longlonglongrightarrow> f x\n 4. \\<And>n.\n       AE x in lebesgue_on\n                S. \\<bar>max (- real n) (min (real n) (f x))\\<bar>\n                   \\<le> ?m x", "show \"abs \\<circ> f \\<in> lspace (lebesgue_on S) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abs \\<circ> f \\<in> lspace (lebesgue_on S) (ennreal p)", "using Lp_Banach_lattice [OF f]"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<bar>f x\\<bar>) \\<in> lspace (lebesgue_on S) (ennreal p)\n  Norm (\\<LL> (ennreal p) (lebesgue_on S)) (\\<lambda>x. \\<bar>f x\\<bar>) =\n  Norm (\\<LL> (ennreal p) (lebesgue_on S)) f\n\ngoal (1 subgoal):\n 1. abs \\<circ> f \\<in> lspace (lebesgue_on S) (ennreal p)", "by (simp add: o_def)"], ["proof (state)\nthis:\n  abs \\<circ> f \\<in> lspace (lebesgue_on S) (ennreal p)\n\ngoal (3 subgoals):\n 1. f \\<in> borel_measurable (lebesgue_on S)\n 2. AE x in lebesgue_on\n             S. (\\<lambda>n. max (- real n) (min (real n) (f x)))\n                \\<longlonglongrightarrow> f x\n 3. \\<And>n.\n       AE x in lebesgue_on\n                S. \\<bar>max (- real n) (min (real n) (f x))\\<bar>\n                   \\<le> (abs \\<circ> f) x", "have *: \"\\<forall>\\<^sub>F n in sequentially. dist (?f n x) (f x) < e\"\n      if x: \"x \\<in> space (lebesgue_on S)\" and \"e > 0\" for x e"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F n in sequentially.\n       dist (max (- real n) (min (real n) (f x))) (f x) < e", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ?c \\<le> xa \\<Longrightarrow>\n       dist (max (- real xa) (min (real xa) (f x))) (f x) < e", "show \"dist (?f n x) (f x) < e\"\n        if \"nat \\<lceil>\\<bar>f x\\<bar>\\<rceil> \\<le> n\" for n :: nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (max (- real n) (min (real n) (f x))) (f x) < e", "using that \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  nat \\<lceil>\\<bar>f x\\<bar>\\<rceil> \\<le> n\n  0 < e\n\ngoal (1 subgoal):\n 1. dist (max (- real n) (min (real n) (f x))) (f x) < e", "by (simp add: dist_real_def max_def min_def abs_if split: if_split_asm)"], ["proof (state)\nthis:\n  nat \\<lceil>\\<bar>f x\\<bar>\\<rceil> \\<le> ?n \\<Longrightarrow>\n  dist (max (- real ?n) (min (real ?n) (f x))) (f x) < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> space (lebesgue_on S); 0 < ?e\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F n in sequentially.\n                       dist (max (- real n) (min (real n) (f ?x))) (f ?x)\n                       < ?e\n\ngoal (3 subgoals):\n 1. f \\<in> borel_measurable (lebesgue_on S)\n 2. AE x in lebesgue_on\n             S. (\\<lambda>n. max (- real n) (min (real n) (f x)))\n                \\<longlonglongrightarrow> f x\n 3. \\<And>n.\n       AE x in lebesgue_on\n                S. \\<bar>max (- real n) (min (real n) (f x))\\<bar>\n                   \\<le> (abs \\<circ> f) x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> space (lebesgue_on S); 0 < ?e\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F n in sequentially.\n                       dist (max (- real n) (min (real n) (f ?x))) (f ?x)\n                       < ?e", "show \"AE x in lebesgue_on S. (\\<lambda>n::nat. max (- n) (min n (f x))) \\<longlonglongrightarrow> f x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> space (lebesgue_on S); 0 < ?e\\<rbrakk>\n  \\<Longrightarrow> \\<forall>\\<^sub>F n in sequentially.\n                       dist (max (- real n) (min (real n) (f ?x))) (f ?x)\n                       < ?e\n\ngoal (1 subgoal):\n 1. AE x in lebesgue_on\n             S. (\\<lambda>xa. max (- real xa) (min (real xa) (f x)))\n                \\<longlonglongrightarrow> f x", "by (blast intro: tendstoI)"], ["proof (state)\nthis:\n  AE x in lebesgue_on\n           S. (\\<lambda>xa. max (- real xa) (min (real xa) (f x)))\n              \\<longlonglongrightarrow> f x\n\ngoal (2 subgoals):\n 1. f \\<in> borel_measurable (lebesgue_on S)\n 2. \\<And>n.\n       AE x in lebesgue_on\n                S. \\<bar>max (- real n) (min (real n) (f x))\\<bar>\n                   \\<le> (abs \\<circ> f) x", "qed (auto simp: f_bm)"], ["proof (state)\nthis:\n  tendsto_in\\<^sub>N (\\<LL> (ennreal p) (lebesgue_on S))\n   (\\<lambda>x xa. max (- real x) (min (real x) (f xa))) f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (g ` S); lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  tendsto_in\\<^sub>N (\\<LL> (ennreal p) (lebesgue_on S))\n   (\\<lambda>x xa. max (- real x) (min (real x) (f xa))) f\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (g ` S); lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have lspace: \"?f n \\<in> lspace (lebesgue_on S) p\" for n::nat"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. max (- real n) (min (real n) (f x)))\n    \\<in> lspace (lebesgue_on S) (ennreal p)", "by (intro f lspace_const lspace_min lspace_max \\<open>p > 0\\<close> S)"], ["proof (state)\nthis:\n  (\\<lambda>x. max (- real ?n) (min (real ?n) (f x)))\n  \\<in> lspace (lebesgue_on S) (ennreal p)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (g ` S); lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  tendsto_in\\<^sub>N (\\<LL> (ennreal p) (lebesgue_on S))\n   (\\<lambda>x xa. max (- real x) (min (real x) (f xa))) f\n  (\\<lambda>x. max (- real ?n) (min (real ?n) (f x)))\n  \\<in> lspace (lebesgue_on S) (ennreal p)", "have \"(\\<lambda>n. lnorm (lebesgue_on S) p (?f n - f)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  tendsto_in\\<^sub>N (\\<LL> (ennreal p) (lebesgue_on S))\n   (\\<lambda>x xa. max (- real x) (min (real x) (f xa))) f\n  (\\<lambda>x. max (- real ?n) (min (real ?n) (f x)))\n  \\<in> lspace (lebesgue_on S) (ennreal p)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        lnorm (lebesgue_on S) p\n         ((\\<lambda>x. max (- real n) (min (real n) (f x))) - f))\n    \\<longlonglongrightarrow> 0", "by (simp add: tendsto_in\\<^sub>N_def Norm_eq_lnorm \\<open>p > 0\\<close> f)"], ["proof (state)\nthis:\n  (\\<lambda>n.\n      lnorm (lebesgue_on S) p\n       ((\\<lambda>x. max (- real n) (min (real n) (f x))) - f))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (g ` S); lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with \\<open>e > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < e\n  (\\<lambda>n.\n      lnorm (lebesgue_on S) p\n       ((\\<lambda>x. max (- real n) (min (real n) (f x))) - f))\n  \\<longlonglongrightarrow> 0", "obtain N where N: \"\\<bar>lnorm (lebesgue_on S) p (?f N - f)\\<bar> < e\""], ["proof (prove)\nusing this:\n  0 < e\n  (\\<lambda>n.\n      lnorm (lebesgue_on S) p\n       ((\\<lambda>x. max (- real n) (min (real n) (f x))) - f))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        \\<bar>lnorm (lebesgue_on S) p\n               ((\\<lambda>x. max (- real N) (min (real N) (f x))) - f)\\<bar>\n        < e \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: LIMSEQ_iff)"], ["proof (state)\nthis:\n  \\<bar>lnorm (lebesgue_on S) p\n         ((\\<lambda>x. max (- real N) (min (real N) (f x))) - f)\\<bar>\n  < e\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (g ` S); lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. ?g \\<in> lspace (lebesgue_on S) (ennreal p)\n 2. bounded (?g ` S)\n 3. lnorm (lebesgue_on S) p (f - ?g) < e", "have \"\\<forall>x\\<in>S. \\<bar>max (- real N) (min (real N) (f x))\\<bar> \\<le> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S.\n       \\<bar>max (- real N) (min (real N) (f x))\\<bar> \\<le> real N", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>S.\n     \\<bar>max (- real N) (min (real N) (f x))\\<bar> \\<le> real N\n\ngoal (3 subgoals):\n 1. ?g \\<in> lspace (lebesgue_on S) (ennreal p)\n 2. bounded (?g ` S)\n 3. lnorm (lebesgue_on S) p (f - ?g) < e", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S.\n     \\<bar>max (- real N) (min (real N) (f x))\\<bar> \\<le> real N", "show \"bounded (?f N ` S::real set)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S.\n     \\<bar>max (- real N) (min (real N) (f x))\\<bar> \\<le> real N\n\ngoal (1 subgoal):\n 1. bounded ((\\<lambda>x. max (- real N) (min (real N) (f x))) ` S)", "by (force simp: bounded_iff)"], ["proof (state)\nthis:\n  bounded ((\\<lambda>x. max (- real N) (min (real N) (f x))) ` S)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. max (- real N) (min (real N) (f x)))\n    \\<in> lspace (lebesgue_on S) (ennreal p)\n 2. lnorm (lebesgue_on S) p\n     (f - (\\<lambda>x. max (- real N) (min (real N) (f x))))\n    < e", "show \"lnorm (lebesgue_on S) p (f - ?f N) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p\n     (f - (\\<lambda>x. max (- real N) (min (real N) (f x))))\n    < e", "using N"], ["proof (prove)\nusing this:\n  \\<bar>lnorm (lebesgue_on S) p\n         ((\\<lambda>x. max (- real N) (min (real N) (f x))) - f)\\<bar>\n  < e\n\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p\n     (f - (\\<lambda>x. max (- real N) (min (real N) (f x))))\n    < e", "by (simp add: lnorm_minus_commute)"], ["proof (state)\nthis:\n  lnorm (lebesgue_on S) p\n   (f - (\\<lambda>x. max (- real N) (min (real N) (f x))))\n  < e\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. max (- real N) (min (real N) (f x)))\n    \\<in> lspace (lebesgue_on S) (ennreal p)", "qed (auto simp: lspace)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma borel_measurable_imp_continuous_limit:\n  fixes h :: \"'a::euclidean_space \\<Rightarrow> 'b::euclidean_space\"\n  assumes h: \"h \\<in> borel_measurable (lebesgue_on S)\" and S: \"S \\<in> sets lebesgue\"\n  obtains g where \"\\<And>n. continuous_on UNIV (g n)\" \"AE x in lebesgue_on S. (\\<lambda>n::nat. g n x) \\<longlonglongrightarrow> h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"h measurable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h measurable_on S", "using S h measurable_on_iff_borel_measurable"], ["proof (prove)\nusing this:\n  S \\<in> sets lebesgue\n  h \\<in> borel_measurable (lebesgue_on S)\n  ?S \\<in> sets lebesgue \\<Longrightarrow>\n  (?f measurable_on ?S) = (?f \\<in> borel_measurable (lebesgue_on ?S))\n\ngoal (1 subgoal):\n 1. h measurable_on S", "by blast"], ["proof (state)\nthis:\n  h measurable_on S\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  h measurable_on S", "obtain N g where N: \"N \\<in> null_sets lebesgue\" and g: \"\\<And>n. continuous_on UNIV (g n)\"\n    and tends: \"\\<And>x. x \\<notin> N \\<Longrightarrow> (\\<lambda>n. g n x) \\<longlonglongrightarrow> (if x \\<in> S then h x else 0)\""], ["proof (prove)\nusing this:\n  h measurable_on S\n\ngoal (1 subgoal):\n 1. (\\<And>N g.\n        \\<lbrakk>N \\<in> null_sets lebesgue;\n         \\<And>n. continuous_on UNIV (g n);\n         \\<And>x.\n            x \\<notin> N \\<Longrightarrow>\n            (\\<lambda>n. g n x)\n            \\<longlonglongrightarrow> (if x \\<in> S then h x\n else (0::'b))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: measurable_on_def negligible_iff_null_sets)"], ["proof (state)\nthis:\n  N \\<in> null_sets lebesgue\n  continuous_on UNIV (g ?n)\n  ?x \\<notin> N \\<Longrightarrow>\n  (\\<lambda>n. g n ?x)\n  \\<longlonglongrightarrow> (if ?x \\<in> S then h ?x else (0::'b))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  N \\<in> null_sets lebesgue\n  continuous_on UNIV (g ?n)\n  ?x \\<notin> N \\<Longrightarrow>\n  (\\<lambda>n. g n ?x)\n  \\<longlonglongrightarrow> (if ?x \\<in> S then h ?x else (0::'b))\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"AE x in lebesgue_on S. (\\<lambda>n::nat. g n x) \\<longlonglongrightarrow> h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in lebesgue_on S. (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x", "proof (rule AE_I')"], ["proof (state)\ngoal (2 subgoals):\n 1. ?N \\<in> null_sets (lebesgue_on S)\n 2. {x \\<in> space (lebesgue_on S).\n     \\<not> (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x}\n    \\<subseteq> ?N", "show \"N \\<inter> S \\<in> null_sets (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<inter> S \\<in> null_sets (lebesgue_on S)", "by (simp add: S N null_set_Int2 null_sets_restrict_space)"], ["proof (state)\nthis:\n  N \\<inter> S \\<in> null_sets (lebesgue_on S)\n\ngoal (1 subgoal):\n 1. {x \\<in> space (lebesgue_on S).\n     \\<not> (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x}\n    \\<subseteq> N \\<inter> S", "show \"{x \\<in> space (lebesgue_on S). \\<not> (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x} \\<subseteq> N \\<inter> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> space (lebesgue_on S).\n     \\<not> (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x}\n    \\<subseteq> N \\<inter> S", "using tends"], ["proof (prove)\nusing this:\n  ?x \\<notin> N \\<Longrightarrow>\n  (\\<lambda>n. g n ?x)\n  \\<longlonglongrightarrow> (if ?x \\<in> S then h ?x else (0::'b))\n\ngoal (1 subgoal):\n 1. {x \\<in> space (lebesgue_on S).\n     \\<not> (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x}\n    \\<subseteq> N \\<inter> S", "by force"], ["proof (state)\nthis:\n  {x \\<in> space (lebesgue_on S).\n   \\<not> (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x}\n  \\<subseteq> N \\<inter> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in lebesgue_on S. (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  N \\<in> null_sets lebesgue\n  continuous_on UNIV (g ?n)\n  ?x \\<notin> N \\<Longrightarrow>\n  (\\<lambda>n. g n ?x)\n  \\<longlonglongrightarrow> (if ?x \\<in> S then h ?x else (0::'b))\n  AE x in lebesgue_on S. (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x", "show thesis"], ["proof (prove)\nusing this:\n  N \\<in> null_sets lebesgue\n  continuous_on UNIV (g ?n)\n  ?x \\<notin> N \\<Longrightarrow>\n  (\\<lambda>n. g n ?x)\n  \\<longlonglongrightarrow> (if ?x \\<in> S then h ?x else (0::'b))\n  AE x in lebesgue_on S. (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  N \\<in> null_sets lebesgue\n  continuous_on UNIV (g ?n)\n  ?x \\<notin> N \\<Longrightarrow>\n  (\\<lambda>n. g n ?x)\n  \\<longlonglongrightarrow> (if ?x \\<in> S then h ?x else (0::'b))\n  AE x in lebesgue_on S. (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x\n  \\<lbrakk>\\<And>n. continuous_on UNIV (?g n);\n   AE x in lebesgue_on\n            S. (\\<lambda>n. ?g n x) \\<longlonglongrightarrow> h x\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition lspace_approximate_continuous:\n  assumes f: \"f \\<in> lspace (lebesgue_on S) p\" and S: \"S \\<in> lmeasurable\" and \"1 \\<le> p\" \"e > 0\"\n  obtains g where \"continuous_on UNIV g\" \"g \\<in> lspace (lebesgue_on S) p\" \"lnorm (lebesgue_on S) p (f - g) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"p > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) (ennreal p)\n  S \\<in> lmeasurable\n  1 \\<le> p\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 < p", "by simp"], ["proof (state)\nthis:\n  0 < p\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain h where h: \"h \\<in> lspace (lebesgue_on S) p\" and \"bounded (h ` S)\"\n    and lesse2: \"lnorm (lebesgue_on S) p (f - h) < e/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>h \\<in> lspace (lebesgue_on S) (ennreal p);\n         bounded (h ` S); lnorm (lebesgue_on S) p (f - h) < e / 2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule lspace_approximate_bounded [of f p S \"e/2\"]) (use assms in auto)"], ["proof (state)\nthis:\n  h \\<in> lspace (lebesgue_on S) (ennreal p)\n  bounded (h ` S)\n  lnorm (lebesgue_on S) p (f - h) < e / 2\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  h \\<in> lspace (lebesgue_on S) (ennreal p)\n  bounded (h ` S)\n  lnorm (lebesgue_on S) p (f - h) < e / 2", "obtain B where \"B > 0\" and B: \"\\<And>x. x \\<in> S \\<Longrightarrow> \\<bar>h x\\<bar> \\<le> B\""], ["proof (prove)\nusing this:\n  h \\<in> lspace (lebesgue_on S) (ennreal p)\n  bounded (h ` S)\n  lnorm (lebesgue_on S) p (f - h) < e / 2\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>0 < B;\n         \\<And>x.\n            x \\<in> S \\<Longrightarrow> \\<bar>h x\\<bar> \\<le> B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: bounded_pos)"], ["proof (state)\nthis:\n  0 < B\n  ?x \\<in> S \\<Longrightarrow> \\<bar>h ?x\\<bar> \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have bmh: \"h \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h \\<in> borel_measurable (lebesgue_on S)", "using h lspace_ennreal_iff [of p] \\<open>p \\<ge> 1\\<close>"], ["proof (prove)\nusing this:\n  h \\<in> lspace (lebesgue_on S) (ennreal p)\n  0 < p \\<Longrightarrow>\n  lspace (lebesgue_on ?S) (ennreal p) =\n  {f \\<in> borel_measurable (lebesgue_on ?S).\n   integrable (lebesgue_on ?S) (\\<lambda>x. norm (f x) powr p)}\n  1 \\<le> p\n\ngoal (1 subgoal):\n 1. h \\<in> borel_measurable (lebesgue_on S)", "by auto"], ["proof (state)\nthis:\n  h \\<in> borel_measurable (lebesgue_on S)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain g where contg: \"\\<And>n. continuous_on UNIV (g n)\"\n    and gle: \"\\<And>n x. x \\<in> S \\<Longrightarrow> \\<bar>g n x\\<bar> \\<le> B\"\n    and tends: \"AE x in lebesgue_on S. (\\<lambda>n::nat. g n x) \\<longlonglongrightarrow> h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         \\<And>n x. x \\<in> S \\<Longrightarrow> \\<bar>g n x\\<bar> \\<le> B;\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         \\<And>n x. x \\<in> S \\<Longrightarrow> \\<bar>g n x\\<bar> \\<le> B;\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain \\<gamma> where cont: \"\\<And>n. continuous_on UNIV (\\<gamma> n)\"\n      and tends: \"AE x in lebesgue_on S. (\\<lambda>n::nat. \\<gamma> n x) \\<longlonglongrightarrow> h x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<gamma>.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (\\<gamma> n);\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. \\<gamma> n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using borel_measurable_imp_continuous_limit S bmh"], ["proof (prove)\nusing this:\n  \\<lbrakk>?h \\<in> borel_measurable (lebesgue_on ?S);\n   ?S \\<in> sets lebesgue;\n   \\<And>g.\n      \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n       AE x in lebesgue_on\n                ?S. (\\<lambda>n. g n x)\n                    \\<longlonglongrightarrow> ?h x\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  S \\<in> lmeasurable\n  h \\<in> borel_measurable (lebesgue_on S)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<gamma>.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (\\<gamma> n);\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. \\<gamma> n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  continuous_on UNIV (\\<gamma> ?n)\n  AE x in lebesgue_on\n           S. (\\<lambda>n. \\<gamma> n x) \\<longlonglongrightarrow> h x\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         \\<And>n x. x \\<in> S \\<Longrightarrow> \\<bar>g n x\\<bar> \\<le> B;\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?g = \"\\<lambda>n::nat. \\<lambda>x. max (- B) (min B (\\<gamma> n x))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>\\<And>n. continuous_on UNIV (g n);\n         \\<And>n x. x \\<in> S \\<Longrightarrow> \\<bar>g n x\\<bar> \\<le> B;\n         AE x in lebesgue_on\n                  S. (\\<lambda>n. g n x)\n                     \\<longlonglongrightarrow> h x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n. continuous_on UNIV (?g n)\n 2. \\<And>n x. x \\<in> S \\<Longrightarrow> \\<bar>?g n x\\<bar> \\<le> B\n 3. AE x in lebesgue_on\n             S. (\\<lambda>n. ?g n x) \\<longlonglongrightarrow> h x", "show \"continuous_on UNIV (?g n)\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (\\<lambda>x. max (- B) (min B (\\<gamma> n x)))", "by (intro continuous_intros cont)"], ["proof (state)\nthis:\n  continuous_on UNIV (\\<lambda>x. max (- B) (min B (\\<gamma> ?n x)))\n\ngoal (2 subgoals):\n 1. \\<And>n x.\n       x \\<in> S \\<Longrightarrow>\n       \\<bar>max (- B) (min B (\\<gamma> (?n7 n) x))\\<bar> \\<le> B\n 2. AE x in lebesgue_on\n             S. (\\<lambda>n. max (- B) (min B (\\<gamma> (?n7 n) x)))\n                \\<longlonglongrightarrow> h x", "show \"\\<bar>?g n x\\<bar> \\<le> B\" if \"x \\<in> S\"  for n x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>max (- B) (min B (\\<gamma> n x))\\<bar> \\<le> B", "using that \\<open>B > 0\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> S\n  0 < B\n\ngoal (1 subgoal):\n 1. \\<bar>max (- B) (min B (\\<gamma> n x))\\<bar> \\<le> B", "by (auto simp: max_def min_def)"], ["proof (state)\nthis:\n  ?x \\<in> S \\<Longrightarrow>\n  \\<bar>max (- B) (min B (\\<gamma> ?n ?x))\\<bar> \\<le> B\n\ngoal (1 subgoal):\n 1. AE x in lebesgue_on\n             S. (\\<lambda>n. max (- B) (min B (\\<gamma> (?n7 n) x)))\n                \\<longlonglongrightarrow> h x", "have \"(\\<lambda>n. max (- B) (min B (\\<gamma> n x))) \\<longlonglongrightarrow> h x\"\n        if \"(\\<lambda>n. \\<gamma> n x) \\<longlonglongrightarrow> h x\" \"x \\<in> S\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. max (- B) (min B (\\<gamma> n x)))\n    \\<longlonglongrightarrow> h x", "using that \\<open>B > 0\\<close> B [OF \\<open>x \\<in> S\\<close>]"], ["proof (prove)\nusing this:\n  (\\<lambda>n. \\<gamma> n x) \\<longlonglongrightarrow> h x\n  x \\<in> S\n  0 < B\n  \\<bar>h x\\<bar> \\<le> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. max (- B) (min B (\\<gamma> n x)))\n    \\<longlonglongrightarrow> h x", "unfolding LIMSEQ_def"], ["proof (prove)\nusing this:\n  \\<forall>r>0.\n     \\<exists>no. \\<forall>n\\<ge>no. dist (\\<gamma> n x) (h x) < r\n  x \\<in> S\n  0 < B\n  \\<bar>h x\\<bar> \\<le> B\n\ngoal (1 subgoal):\n 1. \\<forall>r>0.\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             dist (max (- B) (min B (\\<gamma> n x))) (h x) < r", "by (fastforce simp: min_def max_def dist_real_def)"], ["proof (state)\nthis:\n  \\<lbrakk>(\\<lambda>n. \\<gamma> n ?x) \\<longlonglongrightarrow> h ?x;\n   ?x \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. max (- B) (min B (\\<gamma> n ?x)))\n                    \\<longlonglongrightarrow> h ?x\n\ngoal (1 subgoal):\n 1. AE x in lebesgue_on\n             S. (\\<lambda>n. max (- B) (min B (\\<gamma> (?n7 n) x)))\n                \\<longlonglongrightarrow> h x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>(\\<lambda>n. \\<gamma> n ?x) \\<longlonglongrightarrow> h ?x;\n   ?x \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. max (- B) (min B (\\<gamma> n ?x)))\n                    \\<longlonglongrightarrow> h ?x", "show \"AE x in lebesgue_on S. (\\<lambda>n. ?g n x) \\<longlonglongrightarrow> h x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>(\\<lambda>n. \\<gamma> n ?x) \\<longlonglongrightarrow> h ?x;\n   ?x \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. max (- B) (min B (\\<gamma> n ?x)))\n                    \\<longlonglongrightarrow> h ?x\n\ngoal (1 subgoal):\n 1. AE x in lebesgue_on\n             S. (\\<lambda>n. max (- B) (min B (\\<gamma> n x)))\n                \\<longlonglongrightarrow> h x", "using tends"], ["proof (prove)\nusing this:\n  \\<lbrakk>(\\<lambda>n. \\<gamma> n ?x) \\<longlonglongrightarrow> h ?x;\n   ?x \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. max (- B) (min B (\\<gamma> n ?x)))\n                    \\<longlonglongrightarrow> h ?x\n  AE x in lebesgue_on\n           S. (\\<lambda>n. \\<gamma> n x) \\<longlonglongrightarrow> h x\n\ngoal (1 subgoal):\n 1. AE x in lebesgue_on\n             S. (\\<lambda>n. max (- B) (min B (\\<gamma> n x)))\n                \\<longlonglongrightarrow> h x", "by auto"], ["proof (state)\nthis:\n  AE x in lebesgue_on\n           S. (\\<lambda>n. max (- B) (min B (\\<gamma> n x)))\n              \\<longlonglongrightarrow> h x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  continuous_on UNIV (g ?n)\n  ?x \\<in> S \\<Longrightarrow> \\<bar>g ?n ?x\\<bar> \\<le> B\n  AE x in lebesgue_on S. (\\<lambda>n. g n x) \\<longlonglongrightarrow> h x\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have lspace_B: \"(\\<lambda>x. B) \\<in> lspace (lebesgue_on S) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. B) \\<in> lspace (lebesgue_on S) (ennreal p)", "by (simp add: S \\<open>0 < p\\<close> lspace_const)"], ["proof (state)\nthis:\n  (\\<lambda>x. B) \\<in> lspace (lebesgue_on S) (ennreal p)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have lspace_g: \"g n \\<in> lspace (lebesgue_on S) p\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. g n \\<in> lspace (lebesgue_on S) (ennreal p)", "proof (rule lspace_bounded_measurable)"], ["proof (state)\ngoal (4 subgoals):\n 1. g n \\<in> borel_measurable (lebesgue_on S)\n 2. ?g \\<in> lspace (lebesgue_on S) (ennreal p)\n 3. 0 < p\n 4. AE x in lebesgue_on\n             S. norm (\\<bar>g n x\\<bar> powr p)\n                \\<le> norm (\\<bar>?g x\\<bar> powr p)", "show \"g n \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g n \\<in> borel_measurable (lebesgue_on S)", "by (simp add: borel_measurable_continuous_onI contg measurable_completion measurable_restrict_space1)"], ["proof (state)\nthis:\n  g n \\<in> borel_measurable (lebesgue_on S)\n\ngoal (3 subgoals):\n 1. ?g \\<in> lspace (lebesgue_on S) (ennreal p)\n 2. 0 < p\n 3. AE x in lebesgue_on\n             S. norm (\\<bar>g n x\\<bar> powr p)\n                \\<le> norm (\\<bar>?g x\\<bar> powr p)", "show \"AE x in lebesgue_on S. norm (\\<bar>g n x\\<bar> powr p) \\<le> norm (\\<bar>B\\<bar> powr p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in lebesgue_on\n             S. norm (\\<bar>g n x\\<bar> powr p)\n                \\<le> norm (\\<bar>B\\<bar> powr p)", "using \\<open>B > 0\\<close> gle S \\<open>0 < p\\<close> powr_mono2"], ["proof (prove)\nusing this:\n  0 < B\n  ?x \\<in> S \\<Longrightarrow> \\<bar>g ?n ?x\\<bar> \\<le> B\n  S \\<in> lmeasurable\n  0 < p\n  \\<lbrakk>0 \\<le> ?a; 0 \\<le> ?x; ?x \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?x powr ?a \\<le> ?y powr ?a\n\ngoal (1 subgoal):\n 1. AE x in lebesgue_on\n             S. norm (\\<bar>g n x\\<bar> powr p)\n                \\<le> norm (\\<bar>B\\<bar> powr p)", "by auto"], ["proof (state)\nthis:\n  AE x in lebesgue_on\n           S. norm (\\<bar>g n x\\<bar> powr p)\n              \\<le> norm (\\<bar>B\\<bar> powr p)\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. B) \\<in> lspace (lebesgue_on S) (ennreal p)\n 2. 0 < p", "qed (use \\<open>p > 0\\<close> lspace_B in auto)"], ["proof (state)\nthis:\n  g ?n \\<in> lspace (lebesgue_on S) (ennreal p)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"tendsto_in\\<^sub>N (\\<LL> p (lebesgue_on S)) g h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tendsto_in\\<^sub>N (\\<LL> (ennreal p) (lebesgue_on S)) g h", "proof (rule Lp_domination_limit [OF bmh _ lspace_B tends])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n. g n \\<in> borel_measurable (lebesgue_on S)\n 2. \\<And>n. AE x in lebesgue_on S. \\<bar>g n x\\<bar> \\<le> B", "show \"\\<And>n::nat. g n \\<in> borel_measurable (lebesgue_on S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. g n \\<in> borel_measurable (lebesgue_on S)", "using Lp_measurable lspace_g"], ["proof (prove)\nusing this:\n  ?f \\<in> lspace ?M ?p \\<Longrightarrow> ?f \\<in> borel_measurable ?M\n  g ?n \\<in> lspace (lebesgue_on S) (ennreal p)\n\ngoal (1 subgoal):\n 1. \\<And>n. g n \\<in> borel_measurable (lebesgue_on S)", "by blast"], ["proof (state)\nthis:\n  g ?n \\<in> borel_measurable (lebesgue_on S)\n\ngoal (1 subgoal):\n 1. \\<And>n. AE x in lebesgue_on S. \\<bar>g n x\\<bar> \\<le> B", "show \"\\<And>n. AE x in lebesgue_on S. \\<bar>g n x\\<bar> \\<le> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. AE x in lebesgue_on S. \\<bar>g n x\\<bar> \\<le> B", "using S gle"], ["proof (prove)\nusing this:\n  S \\<in> lmeasurable\n  ?x \\<in> S \\<Longrightarrow> \\<bar>g ?n ?x\\<bar> \\<le> B\n\ngoal (1 subgoal):\n 1. \\<And>n. AE x in lebesgue_on S. \\<bar>g n x\\<bar> \\<le> B", "by auto"], ["proof (state)\nthis:\n  AE x in lebesgue_on S. \\<bar>g ?n x\\<bar> \\<le> B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  tendsto_in\\<^sub>N (\\<LL> (ennreal p) (lebesgue_on S)) g h\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  tendsto_in\\<^sub>N (\\<LL> (ennreal p) (lebesgue_on S)) g h", "have 0: \"(\\<lambda>n. Norm (\\<LL> p (lebesgue_on S)) (g n - h)) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  tendsto_in\\<^sub>N (\\<LL> (ennreal p) (lebesgue_on S)) g h\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. Norm (\\<LL> (ennreal p) (lebesgue_on S)) (g n - h))\n    \\<longlonglongrightarrow> 0", "by (simp add: tendsto_in\\<^sub>N_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. Norm (\\<LL> (ennreal p) (lebesgue_on S)) (g n - h))\n  \\<longlonglongrightarrow> 0\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<And>e. 0 < e \\<Longrightarrow> \\<exists>N. \\<forall>n\\<ge>N. lnorm (lebesgue_on S) p (g n - h) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>N. \\<forall>n\\<ge>N. lnorm (lebesgue_on S) p (g n - h) < e", "using LIMSEQ_D [OF 0] \\<open>e > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < ?r \\<Longrightarrow>\n  \\<exists>no.\n     \\<forall>n\\<ge>no.\n        norm (Norm (\\<LL> (ennreal p) (lebesgue_on S)) (g n - h) - 0) < ?r\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       0 < e \\<Longrightarrow>\n       \\<exists>N. \\<forall>n\\<ge>N. lnorm (lebesgue_on S) p (g n - h) < e", "by (force simp: Norm_eq_lnorm \\<open>0 < p\\<close> h lspace_g)"], ["proof (state)\nthis:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>N. \\<forall>n\\<ge>N. lnorm (lebesgue_on S) p (g n - h) < ?e\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>N. \\<forall>n\\<ge>N. lnorm (lebesgue_on S) p (g n - h) < ?e", "obtain N where N: \"lnorm (lebesgue_on S) p (g N - h) < e/2\""], ["proof (prove)\nusing this:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>N. \\<forall>n\\<ge>N. lnorm (lebesgue_on S) p (g n - h) < ?e\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        lnorm (lebesgue_on S) p (g N - h) < e / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding minus_fun_def"], ["proof (prove)\nusing this:\n  0 < ?e \\<Longrightarrow>\n  \\<exists>N.\n     \\<forall>n\\<ge>N.\n        lnorm (lebesgue_on S) p (\\<lambda>x. g n x - h x) < ?e\n\ngoal (1 subgoal):\n 1. (\\<And>N.\n        lnorm (lebesgue_on S) p (\\<lambda>x. g N x - h x)\n        < e / 2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson \\<open>e>0\\<close> half_gt_zero order_refl)"], ["proof (state)\nthis:\n  lnorm (lebesgue_on S) p (g N - h) < e / 2\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g;\n         g \\<in> lspace (lebesgue_on S) (ennreal p);\n         lnorm (lebesgue_on S) p (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. continuous_on UNIV ?g\n 2. ?g \\<in> lspace (lebesgue_on S) (ennreal p)\n 3. lnorm (lebesgue_on S) p (f - ?g) < e", "show \"continuous_on UNIV (g N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV (g N)", "by (simp add: contg)"], ["proof (state)\nthis:\n  continuous_on UNIV (g N)\n\ngoal (2 subgoals):\n 1. g N \\<in> lspace (lebesgue_on S) (ennreal p)\n 2. lnorm (lebesgue_on S) p (f - g N) < e", "show \"g N \\<in> lspace (lebesgue_on S) (ennreal p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g N \\<in> lspace (lebesgue_on S) (ennreal p)", "by (simp add: lspace_g)"], ["proof (state)\nthis:\n  g N \\<in> lspace (lebesgue_on S) (ennreal p)\n\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p (f - g N) < e", "have \"lnorm (lebesgue_on S) p (f - h + - (g N - h)) \\<le> lnorm (lebesgue_on S) p (f - h) + lnorm (lebesgue_on S) p (- (g N - h))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p (f - h + - (g N - h))\n    \\<le> lnorm (lebesgue_on S) p (f - h) +\n          lnorm (lebesgue_on S) p (- (g N - h))", "by (rule lnorm_triangle_fun) (auto simp: lspace_g h assms)"], ["proof (state)\nthis:\n  lnorm (lebesgue_on S) p (f - h + - (g N - h))\n  \\<le> lnorm (lebesgue_on S) p (f - h) +\n        lnorm (lebesgue_on S) p (- (g N - h))\n\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p (f - g N) < e", "also"], ["proof (state)\nthis:\n  lnorm (lebesgue_on S) p (f - h + - (g N - h))\n  \\<le> lnorm (lebesgue_on S) p (f - h) +\n        lnorm (lebesgue_on S) p (- (g N - h))\n\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p (f - g N) < e", "have \"\\<dots>  < e/2 + e/2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p (f - h) + lnorm (lebesgue_on S) p (- (g N - h))\n    < e / 2 + e / 2", "using lesse2 N"], ["proof (prove)\nusing this:\n  lnorm (lebesgue_on S) p (f - h) < e / 2\n  lnorm (lebesgue_on S) p (g N - h) < e / 2\n\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p (f - h) + lnorm (lebesgue_on S) p (- (g N - h))\n    < e / 2 + e / 2", "by (simp add: lnorm_minus_commute)"], ["proof (state)\nthis:\n  lnorm (lebesgue_on S) p (f - h) + lnorm (lebesgue_on S) p (- (g N - h))\n  < e / 2 + e / 2\n\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p (f - g N) < e", "finally"], ["proof (chain)\npicking this:\n  lnorm (lebesgue_on S) p (f - h + - (g N - h)) < e / 2 + e / 2", "show \"lnorm (lebesgue_on S) p (f - g N) < e\""], ["proof (prove)\nusing this:\n  lnorm (lebesgue_on S) p (f - h + - (g N - h)) < e / 2 + e / 2\n\ngoal (1 subgoal):\n 1. lnorm (lebesgue_on S) p (f - g N) < e", "by simp"], ["proof (state)\nthis:\n  lnorm (lebesgue_on S) p (f - g N) < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition square_integrable_approximate_continuous:\n  assumes f: \"f square_integrable S\" and S: \"S \\<in> lmeasurable\" and \"e > 0\"\n  obtains g where \"continuous_on UNIV g\" \"g square_integrable S\" \"l2norm S (\\<lambda>x. f x - g x) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g square_integrable S;\n         l2norm S (\\<lambda>x. f x - g x) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g square_integrable S;\n         l2norm S (\\<lambda>x. f x - g x) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have f2: \"f \\<in> lspace (lebesgue_on S) 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) 2", "by (simp add: f square_integrable_imp_lspace)"], ["proof (state)\nthis:\n  f \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g square_integrable S;\n         l2norm S (\\<lambda>x. f x - g x) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  f \\<in> lspace (lebesgue_on S) 2", "obtain g where contg: \"continuous_on UNIV g\"\n             and g2: \"g \\<in> lspace (lebesgue_on S) 2\"\n             and less_e: \"lnorm (lebesgue_on S) 2 (\\<lambda>x. f x - g x) < e\""], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 2;\n         lnorm (lebesgue_on S) 2 (\\<lambda>x. f x - g x) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using lspace_approximate_continuous [of f 2 S e] S \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  f \\<in> lspace (lebesgue_on S) 2\n  \\<lbrakk>f \\<in> lspace (lebesgue_on S) (ennreal 2); S \\<in> lmeasurable;\n   1 \\<le> 2; 0 < e;\n   \\<And>g.\n      \\<lbrakk>continuous_on UNIV g;\n       g \\<in> lspace (lebesgue_on S) (ennreal 2);\n       lnorm (lebesgue_on S) 2 (f - g) < e\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  S \\<in> lmeasurable\n  0 < e\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 2;\n         lnorm (lebesgue_on S) 2 (\\<lambda>x. f x - g x) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: minus_fun_def)"], ["proof (state)\nthis:\n  continuous_on UNIV g\n  g \\<in> lspace (lebesgue_on S) 2\n  lnorm (lebesgue_on S) 2 (\\<lambda>x. f x - g x) < e\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g square_integrable S;\n         l2norm S (\\<lambda>x. f x - g x) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. continuous_on UNIV ?g\n 2. ?g square_integrable S\n 3. l2norm S (\\<lambda>x. f x - ?g x) < e", "show \"g square_integrable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g square_integrable S", "using g2"], ["proof (prove)\nusing this:\n  g \\<in> lspace (lebesgue_on S) 2\n\ngoal (1 subgoal):\n 1. g square_integrable S", "by (simp add: S fmeasurableD square_integrable_iff_lspace)"], ["proof (state)\nthis:\n  g square_integrable S\n\ngoal (2 subgoals):\n 1. continuous_on UNIV g\n 2. l2norm S (\\<lambda>x. f x - g x) < e", "show \"l2norm S (\\<lambda>x. f x - g x) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x - g x) < e", "using less_e"], ["proof (prove)\nusing this:\n  lnorm (lebesgue_on S) 2 (\\<lambda>x. f x - g x) < e\n\ngoal (1 subgoal):\n 1. l2norm S (\\<lambda>x. f x - g x) < e", "by (simp add: l2norm_lnorm)"], ["proof (state)\nthis:\n  l2norm S (\\<lambda>x. f x - g x) < e\n\ngoal (1 subgoal):\n 1. continuous_on UNIV g", "qed (simp add: contg)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma absolutely_integrable_approximate_continuous:\n  fixes f :: \"real \\<Rightarrow> real\"\n  assumes f: \"f absolutely_integrable_on S\" and S: \"S \\<in> lmeasurable\" and \"0 < e\"\n  obtains g where \"continuous_on UNIV g\" \"g absolutely_integrable_on S\" \"integral\\<^sup>L (lebesgue_on S) (\\<lambda>x. \\<bar>f x - g x\\<bar>) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g absolutely_integrable_on S;\n         LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g absolutely_integrable_on S;\n         LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain g where \"continuous_on UNIV g\" \"g \\<in> lspace (lebesgue_on S) 1\"\n              and lnorm: \"lnorm (lebesgue_on S) 1 (f - g) < e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 1;\n         lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (rule lspace_approximate_continuous)"], ["proof (state)\ngoal (5 subgoals):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 1;\n         lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?f2 \\<in> lspace (lebesgue_on ?S2) (ennreal ?p2)\n 2. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 1;\n         lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    ?S2 \\<in> lmeasurable\n 3. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 1;\n         lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    1 \\<le> ?p2\n 4. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 1;\n         lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    0 < ?e2\n 5. \\<And>g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>continuous_on UNIV g;\n                    g \\<in> lspace (lebesgue_on S) 1;\n                    lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        continuous_on UNIV g;\n        g \\<in> lspace (lebesgue_on ?S2) (ennreal ?p2);\n        lnorm (lebesgue_on ?S2) ?p2 (?f2 - g) < ?e2\\<rbrakk>\n       \\<Longrightarrow> thesis", "show \"f \\<in> lspace (lebesgue_on S) (ennreal 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> lspace (lebesgue_on S) (ennreal 1)", "by (simp add: S f fmeasurableD lspace_1)"], ["proof (state)\nthis:\n  f \\<in> lspace (lebesgue_on S) (ennreal 1)\n\ngoal (4 subgoals):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 1;\n         lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    S \\<in> lmeasurable\n 2. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 1;\n         lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    1 \\<le> 1\n 3. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) 1;\n         lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    0 < ?e2\n 4. \\<And>g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>continuous_on UNIV g;\n                    g \\<in> lspace (lebesgue_on S) 1;\n                    lnorm (lebesgue_on S) 1 (f - g) < e\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        continuous_on UNIV g; g \\<in> lspace (lebesgue_on S) (ennreal 1);\n        lnorm (lebesgue_on S) 1 (f - g) < ?e2\\<rbrakk>\n       \\<Longrightarrow> thesis", "qed (auto simp: assms)"], ["proof (state)\nthis:\n  continuous_on UNIV g\n  g \\<in> lspace (lebesgue_on S) 1\n  lnorm (lebesgue_on S) 1 (f - g) < e\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>continuous_on UNIV g; g absolutely_integrable_on S;\n         LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. continuous_on UNIV ?g\n 2. ?g absolutely_integrable_on S\n 3. LINT x|lebesgue_on S. \\<bar>f x - ?g x\\<bar> < e", "show \"continuous_on UNIV g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on UNIV g", "by fact"], ["proof (state)\nthis:\n  continuous_on UNIV g\n\ngoal (2 subgoals):\n 1. g absolutely_integrable_on S\n 2. LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e", "show \"g absolutely_integrable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g absolutely_integrable_on S", "using S \\<open>g \\<in> lspace (lebesgue_on S) 1\\<close> lspace_1"], ["proof (prove)\nusing this:\n  S \\<in> lmeasurable\n  g \\<in> lspace (lebesgue_on S) 1\n  ?S \\<in> sets lebesgue \\<Longrightarrow>\n  (?f \\<in> lspace (lebesgue_on ?S) 1) = (?f absolutely_integrable_on ?S)\n\ngoal (1 subgoal):\n 1. g absolutely_integrable_on S", "by blast"], ["proof (state)\nthis:\n  g absolutely_integrable_on S\n\ngoal (1 subgoal):\n 1. LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e", "have *: \"(\\<lambda>x. f x - g x) absolutely_integrable_on S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x - g x) absolutely_integrable_on S", "by (simp add: \\<open>g absolutely_integrable_on S\\<close> f)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - g x) absolutely_integrable_on S\n\ngoal (1 subgoal):\n 1. LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>x. f x - g x) absolutely_integrable_on S\n\ngoal (1 subgoal):\n 1. LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e", "have \"integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x - g x\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x - g x\\<bar>)", "by (simp add: L1_D(2) S * fmeasurableD lspace_1)"], ["proof (state)\nthis:\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x - g x\\<bar>)\n\ngoal (1 subgoal):\n 1. LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>x. f x - g x) absolutely_integrable_on S\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x - g x\\<bar>)", "show \"integral\\<^sup>L (lebesgue_on S)  (\\<lambda>x. \\<bar>f x - g x\\<bar>) < e\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - g x) absolutely_integrable_on S\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x - g x\\<bar>)\n\ngoal (1 subgoal):\n 1. LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e", "using lnorm S"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - g x) absolutely_integrable_on S\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x - g x\\<bar>)\n  lnorm (lebesgue_on S) 1 (f - g) < e\n  S \\<in> lmeasurable\n\ngoal (1 subgoal):\n 1. LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e", "unfolding lnorm_def absolutely_integrable_on_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x - g x) integrable_on S \\<and>\n  (\\<lambda>x. norm (f x - g x)) integrable_on S\n  integrable (lebesgue_on S) (\\<lambda>x. \\<bar>f x - g x\\<bar>)\n  (LINT x|lebesgue_on S. \\<bar>(f - g) x\\<bar> powr 1) powr (1 / 1) < e\n  S \\<in> lmeasurable\n\ngoal (1 subgoal):\n 1. LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e", "by simp"], ["proof (state)\nthis:\n  LINT x|lebesgue_on S. \\<bar>f x - g x\\<bar> < e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}