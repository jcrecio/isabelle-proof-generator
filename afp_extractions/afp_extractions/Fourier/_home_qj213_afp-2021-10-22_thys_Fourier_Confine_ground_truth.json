{"file_name": "/home/qj213/afp-2021-10-22/thys/Fourier/Confine.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Fourier", "problem_names": ["lemma confine_UNIV [simp]: \"confine f UNIV = f\"", "lemma sum_confine_eq_Int:\n  assumes \"finite I\"\n  shows \"sum (confine f A) I = (\\<Sum>i \\<in> I \\<inter> A. f i)\"", "lemma sums_confine_add:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_vector\"\n  assumes \"confine f N sums a\" \"confine g N sums b\"\n  shows \"confine (\\<lambda>i. f i + g i) N sums (a+b)\"", "lemma sums_confine_minus:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_vector\"\n  shows \"confine f N sums a \\<Longrightarrow> confine (uminus \\<circ> f) N sums (-a)\"", "lemma sums_confine_mult:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_algebra\"\n  shows \"confine f N sums a \\<Longrightarrow> confine (\\<lambda>n. c * f n) N sums (c * a)\"", "lemma sums_confine_divide:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_field\"\n  shows \"confine f N sums a \\<Longrightarrow> confine (\\<lambda>n. f n / c) N sums (a/c)\"", "lemma sums_confine_divide_iff:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_field\"\n  assumes \"c \\<noteq> 0\"\n  shows \"confine (\\<lambda>n. f n / c) N sums (a/c) \\<longleftrightarrow> confine f N sums a\"", "lemma sums_confine:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_vector\"\n  shows \"confine f N sums l \\<longleftrightarrow> ((\\<lambda>n. \\<Sum>i \\<in> {..<n} \\<inter> N. f i) \\<longlonglongrightarrow> l)\"", "lemma sums_confine_le:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_vector\"\n  shows \"confine f N sums l \\<longleftrightarrow> ((\\<lambda>n. \\<Sum>i \\<in> {..n} \\<inter> N. f i) \\<longlonglongrightarrow> l)\""], "translations": [["", "lemma confine_UNIV [simp]: \"confine f UNIV = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. confine f UNIV = f", "by (simp add: confine_def)"], ["", "lemma sum_confine_eq_Int:\n  assumes \"finite I\"\n  shows \"sum (confine f A) I = (\\<Sum>i \\<in> I \\<inter> A. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (confine f A) I = sum f (I \\<inter> A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum (confine f A) I = sum f (I \\<inter> A)", "have \"sum f(I \\<inter> A) = (\\<Sum>a\\<in>I. if a \\<in> A then f a else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (I \\<inter> A) =\n    (\\<Sum>a\\<in>I. if a \\<in> A then f a else (0::'b))", "using assms sum.inter_restrict"], ["proof (prove)\nusing this:\n  finite I\n  finite ?A \\<Longrightarrow>\n  sum ?g (?A \\<inter> ?B) =\n  (\\<Sum>x\\<in>?A. if x \\<in> ?B then ?g x else (0::?'a))\n\ngoal (1 subgoal):\n 1. sum f (I \\<inter> A) =\n    (\\<Sum>a\\<in>I. if a \\<in> A then f a else (0::'b))", "by blast"], ["proof (state)\nthis:\n  sum f (I \\<inter> A) = (\\<Sum>a\\<in>I. if a \\<in> A then f a else (0::'b))\n\ngoal (1 subgoal):\n 1. sum (confine f A) I = sum f (I \\<inter> A)", "then"], ["proof (chain)\npicking this:\n  sum f (I \\<inter> A) = (\\<Sum>a\\<in>I. if a \\<in> A then f a else (0::'b))", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f (I \\<inter> A) = (\\<Sum>a\\<in>I. if a \\<in> A then f a else (0::'b))\n\ngoal (1 subgoal):\n 1. sum (confine f A) I = sum f (I \\<inter> A)", "by (auto simp: confine_def)"], ["proof (state)\nthis:\n  sum (confine f A) I = sum f (I \\<inter> A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sums_confine_add:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_vector\"\n  assumes \"confine f N sums a\" \"confine g N sums b\"\n  shows \"confine (\\<lambda>i. f i + g i) N sums (a+b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. confine (\\<lambda>i. f i + g i) N sums (a + b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. confine (\\<lambda>i. f i + g i) N sums (a + b)", "have \"\\<And>n. (if n \\<in> N then f n + g n else 0) = (if n \\<in> N then f n else 0) + (if n \\<in> N then g n else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (if n \\<in> N then f n + g n else (0::'a)) =\n       (if n \\<in> N then f n else (0::'a)) +\n       (if n \\<in> N then g n else (0::'a))", "by simp"], ["proof (state)\nthis:\n  (if ?n \\<in> N then f ?n + g ?n else (0::'a)) =\n  (if ?n \\<in> N then f ?n else (0::'a)) +\n  (if ?n \\<in> N then g ?n else (0::'a))\n\ngoal (1 subgoal):\n 1. confine (\\<lambda>i. f i + g i) N sums (a + b)", "then"], ["proof (chain)\npicking this:\n  (if ?n \\<in> N then f ?n + g ?n else (0::'a)) =\n  (if ?n \\<in> N then f ?n else (0::'a)) +\n  (if ?n \\<in> N then g ?n else (0::'a))", "show ?thesis"], ["proof (prove)\nusing this:\n  (if ?n \\<in> N then f ?n + g ?n else (0::'a)) =\n  (if ?n \\<in> N then f ?n else (0::'a)) +\n  (if ?n \\<in> N then g ?n else (0::'a))\n\ngoal (1 subgoal):\n 1. confine (\\<lambda>i. f i + g i) N sums (a + b)", "using sums_add [of \"confine f N\" a \"confine g N\" b] assms"], ["proof (prove)\nusing this:\n  (if ?n \\<in> N then f ?n + g ?n else (0::'a)) =\n  (if ?n \\<in> N then f ?n else (0::'a)) +\n  (if ?n \\<in> N then g ?n else (0::'a))\n  \\<lbrakk>confine f N sums a; confine g N sums b\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>n. confine f N n + confine g N n) sums (a + b)\n  confine f N sums a\n  confine g N sums b\n\ngoal (1 subgoal):\n 1. confine (\\<lambda>i. f i + g i) N sums (a + b)", "by (simp add: confine_def)"], ["proof (state)\nthis:\n  confine (\\<lambda>i. f i + g i) N sums (a + b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sums_confine_minus:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_vector\"\n  shows \"confine f N sums a \\<Longrightarrow> confine (uminus \\<circ> f) N sums (-a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. confine f N sums a \\<Longrightarrow>\n    confine (uminus \\<circ> f) N sums - a", "using sums_minus [of \"confine f N\" a]"], ["proof (prove)\nusing this:\n  confine f N sums a \\<Longrightarrow>\n  (\\<lambda>n. - confine f N n) sums - a\n\ngoal (1 subgoal):\n 1. confine f N sums a \\<Longrightarrow>\n    confine (uminus \\<circ> f) N sums - a", "by (simp add: confine_def if_distrib [of uminus] cong: if_cong)"], ["", "lemma sums_confine_mult:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_algebra\"\n  shows \"confine f N sums a \\<Longrightarrow> confine (\\<lambda>n. c * f n) N sums (c * a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. confine f N sums a \\<Longrightarrow>\n    confine (\\<lambda>n. c * f n) N sums (c * a)", "using sums_mult [of \"confine f N\" a c]"], ["proof (prove)\nusing this:\n  confine f N sums a \\<Longrightarrow>\n  (\\<lambda>n. c * confine f N n) sums (c * a)\n\ngoal (1 subgoal):\n 1. confine f N sums a \\<Longrightarrow>\n    confine (\\<lambda>n. c * f n) N sums (c * a)", "by (simp add: confine_def if_distrib [of \"(*)c\"] cong: if_cong)"], ["", "lemma sums_confine_divide:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_field\"\n  shows \"confine f N sums a \\<Longrightarrow> confine (\\<lambda>n. f n / c) N sums (a/c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. confine f N sums a \\<Longrightarrow>\n    confine (\\<lambda>n. f n / c) N sums (a / c)", "using sums_divide [of \"confine f N\" a c]"], ["proof (prove)\nusing this:\n  confine f N sums a \\<Longrightarrow>\n  (\\<lambda>n. confine f N n / c) sums (a / c)\n\ngoal (1 subgoal):\n 1. confine f N sums a \\<Longrightarrow>\n    confine (\\<lambda>n. f n / c) N sums (a / c)", "by (simp add: confine_def if_distrib [of \"\\<lambda>x. x/c\"] cong: if_cong)"], ["", "lemma sums_confine_divide_iff:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_field\"\n  assumes \"c \\<noteq> 0\"\n  shows \"confine (\\<lambda>n. f n / c) N sums (a/c) \\<longleftrightarrow> confine f N sums a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. confine (\\<lambda>n. f n / c) N sums (a / c) = confine f N sums a", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. confine (\\<lambda>n. f n / c) N sums (a / c) \\<Longrightarrow>\n    confine f N sums a\n 2. confine f N sums a \\<Longrightarrow>\n    confine (\\<lambda>n. f n / c) N sums (a / c)", "show \"confine f N sums a\"\n    if \"confine (\\<lambda>n. f n / c) N sums (a / c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. confine f N sums a", "using sums_confine_mult [OF that, of c] assms"], ["proof (prove)\nusing this:\n  confine (\\<lambda>n. c * (f n / c)) N sums (c * (a / c))\n  c \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. confine f N sums a", "by simp"], ["proof (state)\nthis:\n  confine (\\<lambda>n. f n / c) N sums (a / c) \\<Longrightarrow>\n  confine f N sums a\n\ngoal (1 subgoal):\n 1. confine f N sums a \\<Longrightarrow>\n    confine (\\<lambda>n. f n / c) N sums (a / c)", "qed (auto simp: sums_confine_divide)"], ["", "lemma sums_confine:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_vector\"\n  shows \"confine f N sums l \\<longleftrightarrow> ((\\<lambda>n. \\<Sum>i \\<in> {..<n} \\<inter> N. f i) \\<longlonglongrightarrow> l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. confine f N sums l =\n    (\\<lambda>n. sum f ({..<n} \\<inter> N)) \\<longlonglongrightarrow> l", "by (simp add: sums_def atLeast0LessThan confine_def sum.inter_restrict)"], ["", "lemma sums_confine_le:\n  fixes f :: \"nat \\<Rightarrow> 'a::real_normed_vector\"\n  shows \"confine f N sums l \\<longleftrightarrow> ((\\<lambda>n. \\<Sum>i \\<in> {..n} \\<inter> N. f i) \\<longlonglongrightarrow> l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. confine f N sums l =\n    (\\<lambda>n. sum f ({..n} \\<inter> N)) \\<longlonglongrightarrow> l", "by (simp add: sums_def_le atLeast0AtMost confine_def sum.inter_restrict)"], ["", "end"]]}