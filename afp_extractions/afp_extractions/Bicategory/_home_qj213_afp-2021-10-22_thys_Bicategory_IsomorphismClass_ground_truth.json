{"file_name": "/home/qj213/afp-2021-10-22/thys/Bicategory/IsomorphismClass.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Bicategory", "problem_names": ["lemmas isomorphic_transitive [trans]", "lemmas naturally_isomorphic_transitive [trans]", "lemma inv_in_homI [intro]:\n    assumes \"iso f\" and \"\\<guillemotleft>f : a \\<rightarrow> b\\<guillemotright>\"\n    shows \"\\<guillemotleft>inv f : b \\<rightarrow> a\\<guillemotright>\"", "lemma iso_class_is_nonempty:\n    assumes \"is_iso_class F\"\n    shows \"F \\<noteq> {}\"", "lemma iso_class_memb_is_ide:\n    assumes \"is_iso_class F\" and \"f \\<in> F\"\n    shows \"ide f\"", "lemma ide_in_iso_class:\n    assumes \"ide f\"\n    shows \"f \\<in> \\<lbrakk>f\\<rbrakk>\"", "lemma rep_in_iso_class:\n    assumes \"is_iso_class F\"\n    shows \"iso_class_rep F \\<in> F\"", "lemma is_iso_classI:\n    assumes \"ide f\"\n    shows \"is_iso_class \\<lbrakk>f\\<rbrakk>\"", "lemma rep_iso_class:\n    assumes \"ide f\"\n    shows \"iso_class_rep \\<lbrakk>f\\<rbrakk> \\<cong> f\"", "lemma iso_class_elems_isomorphic:\n    assumes \"is_iso_class F\" and \"f \\<in> F\" and \"f' \\<in> F\"\n    shows \"f \\<cong> f'\"", "lemma iso_class_eqI [intro]:\n    assumes \"f \\<cong> g\"\n    shows \"\\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>\"", "lemma iso_class_eq:\n    assumes \"is_iso_class F\" and \"is_iso_class G\" and \"F \\<inter> G \\<noteq> {}\"\n    shows \"F = G\"", "lemma iso_class_rep [simp]:\n    assumes \"is_iso_class F\"\n    shows \"\\<lbrakk>iso_class_rep F\\<rbrakk> = F\""], "translations": [["", "lemmas isomorphic_transitive [trans]"], ["", "lemmas naturally_isomorphic_transitive [trans]"], ["", "lemma inv_in_homI [intro]:\n    assumes \"iso f\" and \"\\<guillemotleft>f : a \\<rightarrow> b\\<guillemotright>\"\n    shows \"\\<guillemotleft>inv f : b \\<rightarrow> a\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft>local.inv f : b \\<rightarrow> a\\<guillemotright>", "using assms inv_is_inverse seqE inverse_arrowsE"], ["proof (prove)\nusing this:\n  local.iso f\n  \\<guillemotleft>f : a \\<rightarrow> b\\<guillemotright>\n  local.iso ?f \\<Longrightarrow> inverse_arrows ?f (local.inv ?f)\n  \\<lbrakk>seq ?g ?f;\n   \\<lbrakk>arr ?f; arr ?g; local.dom ?g = cod ?f\\<rbrakk>\n   \\<Longrightarrow> ?T\\<rbrakk>\n  \\<Longrightarrow> ?T\n  \\<lbrakk>inverse_arrows ?f ?g;\n   \\<lbrakk>ide (?g \\<cdot> ?f); ide (?f \\<cdot> ?g)\\<rbrakk>\n   \\<Longrightarrow> ?T\\<rbrakk>\n  \\<Longrightarrow> ?T\n\ngoal (1 subgoal):\n 1. \\<guillemotleft>local.inv f : b \\<rightarrow> a\\<guillemotright>", "by (metis ide_compE in_homE in_homI)"], ["", "lemma iso_class_is_nonempty:\n    assumes \"is_iso_class F\"\n    shows \"F \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<noteq> {}", "using assms is_iso_class_def iso_class_def"], ["proof (prove)\nusing this:\n  is_iso_class F\n  is_iso_class ?F \\<equiv>\n  \\<exists>f. f \\<in> ?F \\<and> ?F = \\<lbrakk>f\\<rbrakk>\n  \\<lbrakk>?f\\<rbrakk> \\<equiv> {f'. ?f \\<cong> f'}\n\ngoal (1 subgoal):\n 1. F \\<noteq> {}", "by auto"], ["", "lemma iso_class_memb_is_ide:\n    assumes \"is_iso_class F\" and \"f \\<in> F\"\n    shows \"ide f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide f", "using assms is_iso_class_def iso_class_def isomorphic_def"], ["proof (prove)\nusing this:\n  is_iso_class F\n  f \\<in> F\n  is_iso_class ?F \\<equiv>\n  \\<exists>f. f \\<in> ?F \\<and> ?F = \\<lbrakk>f\\<rbrakk>\n  \\<lbrakk>?f\\<rbrakk> \\<equiv> {f'. ?f \\<cong> f'}\n  (?a \\<cong> ?a') =\n  (\\<exists>f.\n      \\<guillemotleft>f : ?a \\<rightarrow> ?a'\\<guillemotright> \\<and>\n      local.iso f)\n\ngoal (1 subgoal):\n 1. ide f", "by auto"], ["", "lemma ide_in_iso_class:\n    assumes \"ide f\"\n    shows \"f \\<in> \\<lbrakk>f\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> \\<lbrakk>f\\<rbrakk>", "using assms iso_class_def is_iso_class_def isomorphic_reflexive"], ["proof (prove)\nusing this:\n  ide f\n  \\<lbrakk>?f\\<rbrakk> \\<equiv> {f'. ?f \\<cong> f'}\n  is_iso_class ?F \\<equiv>\n  \\<exists>f. f \\<in> ?F \\<and> ?F = \\<lbrakk>f\\<rbrakk>\n  ide ?f \\<Longrightarrow> ?f \\<cong> ?f\n\ngoal (1 subgoal):\n 1. f \\<in> \\<lbrakk>f\\<rbrakk>", "by simp"], ["", "lemma rep_in_iso_class:\n    assumes \"is_iso_class F\"\n    shows \"iso_class_rep F \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iso_class_rep F \\<in> F", "using assms is_iso_class_def iso_class_rep_def someI_ex [of \"\\<lambda>f. f \\<in> F\"]\n            ide_in_iso_class"], ["proof (prove)\nusing this:\n  is_iso_class F\n  is_iso_class ?F \\<equiv>\n  \\<exists>f. f \\<in> ?F \\<and> ?F = \\<lbrakk>f\\<rbrakk>\n  iso_class_rep ?F \\<equiv> SOME f. f \\<in> ?F\n  \\<exists>x. x \\<in> F \\<Longrightarrow> (SOME x. x \\<in> F) \\<in> F\n  ide ?f \\<Longrightarrow> ?f \\<in> \\<lbrakk>?f\\<rbrakk>\n\ngoal (1 subgoal):\n 1. iso_class_rep F \\<in> F", "by metis"], ["", "lemma is_iso_classI:\n    assumes \"ide f\"\n    shows \"is_iso_class \\<lbrakk>f\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_iso_class \\<lbrakk>f\\<rbrakk>", "using assms iso_class_def is_iso_class_def isomorphic_reflexive"], ["proof (prove)\nusing this:\n  ide f\n  \\<lbrakk>?f\\<rbrakk> \\<equiv> {f'. ?f \\<cong> f'}\n  is_iso_class ?F \\<equiv>\n  \\<exists>f. f \\<in> ?F \\<and> ?F = \\<lbrakk>f\\<rbrakk>\n  ide ?f \\<Longrightarrow> ?f \\<cong> ?f\n\ngoal (1 subgoal):\n 1. is_iso_class \\<lbrakk>f\\<rbrakk>", "by blast"], ["", "lemma rep_iso_class:\n    assumes \"ide f\"\n    shows \"iso_class_rep \\<lbrakk>f\\<rbrakk> \\<cong> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iso_class_rep \\<lbrakk>f\\<rbrakk> \\<cong> f", "using assms is_iso_classI rep_in_iso_class iso_class_def isomorphic_symmetric"], ["proof (prove)\nusing this:\n  ide f\n  ide ?f \\<Longrightarrow> is_iso_class \\<lbrakk>?f\\<rbrakk>\n  is_iso_class ?F \\<Longrightarrow> iso_class_rep ?F \\<in> ?F\n  \\<lbrakk>?f\\<rbrakk> \\<equiv> {f'. ?f \\<cong> f'}\n  ?f \\<cong> ?g \\<Longrightarrow> ?g \\<cong> ?f\n\ngoal (1 subgoal):\n 1. iso_class_rep \\<lbrakk>f\\<rbrakk> \\<cong> f", "by blast"], ["", "lemma iso_class_elems_isomorphic:\n    assumes \"is_iso_class F\" and \"f \\<in> F\" and \"f' \\<in> F\"\n    shows \"f \\<cong> f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<cong> f'", "using assms iso_class_def"], ["proof (prove)\nusing this:\n  is_iso_class F\n  f \\<in> F\n  f' \\<in> F\n  \\<lbrakk>?f\\<rbrakk> \\<equiv> {f'. ?f \\<cong> f'}\n\ngoal (1 subgoal):\n 1. f \\<cong> f'", "by (metis is_iso_class_def isomorphic_symmetric isomorphic_transitive mem_Collect_eq)"], ["", "lemma iso_class_eqI [intro]:\n    assumes \"f \\<cong> g\"\n    shows \"\\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>", "have f: \"ide f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide f", "using assms isomorphic_def"], ["proof (prove)\nusing this:\n  f \\<cong> g\n  (?a \\<cong> ?a') =\n  (\\<exists>f.\n      \\<guillemotleft>f : ?a \\<rightarrow> ?a'\\<guillemotright> \\<and>\n      local.iso f)\n\ngoal (1 subgoal):\n 1. ide f", "by auto"], ["proof (state)\nthis:\n  ide f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>", "have g: \"ide g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ide g", "using assms isomorphic_def"], ["proof (prove)\nusing this:\n  f \\<cong> g\n  (?a \\<cong> ?a') =\n  (\\<exists>f.\n      \\<guillemotleft>f : ?a \\<rightarrow> ?a'\\<guillemotright> \\<and>\n      local.iso f)\n\ngoal (1 subgoal):\n 1. ide g", "by auto"], ["proof (state)\nthis:\n  ide g\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>", "have \"f \\<in> \\<lbrakk>g\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> \\<lbrakk>g\\<rbrakk>", "using assms iso_class_def isomorphic_symmetric"], ["proof (prove)\nusing this:\n  f \\<cong> g\n  \\<lbrakk>?f\\<rbrakk> \\<equiv> {f'. ?f \\<cong> f'}\n  ?f \\<cong> ?g \\<Longrightarrow> ?g \\<cong> ?f\n\ngoal (1 subgoal):\n 1. f \\<in> \\<lbrakk>g\\<rbrakk>", "by simp"], ["proof (state)\nthis:\n  f \\<in> \\<lbrakk>g\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>", "moreover"], ["proof (state)\nthis:\n  f \\<in> \\<lbrakk>g\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>", "have \"g \\<in> \\<lbrakk>g\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> \\<lbrakk>g\\<rbrakk>", "using assms g iso_class_def isomorphic_reflexive isomorphic_def"], ["proof (prove)\nusing this:\n  f \\<cong> g\n  ide g\n  \\<lbrakk>?f\\<rbrakk> \\<equiv> {f'. ?f \\<cong> f'}\n  ide ?f \\<Longrightarrow> ?f \\<cong> ?f\n  (?a \\<cong> ?a') =\n  (\\<exists>f.\n      \\<guillemotleft>f : ?a \\<rightarrow> ?a'\\<guillemotright> \\<and>\n      local.iso f)\n\ngoal (1 subgoal):\n 1. g \\<in> \\<lbrakk>g\\<rbrakk>", "by simp"], ["proof (state)\nthis:\n  g \\<in> \\<lbrakk>g\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>", "ultimately"], ["proof (chain)\npicking this:\n  f \\<in> \\<lbrakk>g\\<rbrakk>\n  g \\<in> \\<lbrakk>g\\<rbrakk>", "have \"\\<And>h. (h \\<in> \\<lbrakk>f\\<rbrakk>) = (h \\<in> \\<lbrakk>g\\<rbrakk>)\""], ["proof (prove)\nusing this:\n  f \\<in> \\<lbrakk>g\\<rbrakk>\n  g \\<in> \\<lbrakk>g\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<And>h. (h \\<in> \\<lbrakk>f\\<rbrakk>) = (h \\<in> \\<lbrakk>g\\<rbrakk>)", "using assms g iso_class_def [of f] iso_class_def [of g]\n              isomorphic_reflexive isomorphic_symmetric isomorphic_transitive"], ["proof (prove)\nusing this:\n  f \\<in> \\<lbrakk>g\\<rbrakk>\n  g \\<in> \\<lbrakk>g\\<rbrakk>\n  f \\<cong> g\n  ide g\n  \\<lbrakk>f\\<rbrakk> \\<equiv> {f'. f \\<cong> f'}\n  \\<lbrakk>g\\<rbrakk> \\<equiv> {f'. g \\<cong> f'}\n  ide ?f \\<Longrightarrow> ?f \\<cong> ?f\n  ?f \\<cong> ?g \\<Longrightarrow> ?g \\<cong> ?f\n  \\<lbrakk>?f \\<cong> ?g; ?g \\<cong> ?h\\<rbrakk>\n  \\<Longrightarrow> ?f \\<cong> ?h\n\ngoal (1 subgoal):\n 1. \\<And>h. (h \\<in> \\<lbrakk>f\\<rbrakk>) = (h \\<in> \\<lbrakk>g\\<rbrakk>)", "by blast"], ["proof (state)\nthis:\n  (?h \\<in> \\<lbrakk>f\\<rbrakk>) = (?h \\<in> \\<lbrakk>g\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (?h \\<in> \\<lbrakk>f\\<rbrakk>) = (?h \\<in> \\<lbrakk>g\\<rbrakk>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>f\\<rbrakk> = \\<lbrakk>g\\<rbrakk>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iso_class_eq:\n    assumes \"is_iso_class F\" and \"is_iso_class G\" and \"F \\<inter> G \\<noteq> {}\"\n    shows \"F = G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F = G", "obtain h where h: \"h \\<in> F \\<and> h \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        h \\<in> F \\<and> h \\<in> G \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  is_iso_class F\n  is_iso_class G\n  F \\<inter> G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        h \\<in> F \\<and> h \\<in> G \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  h \\<in> F \\<and> h \\<in> G\n\ngoal (1 subgoal):\n 1. F = G", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. F = G", "using assms h"], ["proof (prove)\nusing this:\n  is_iso_class F\n  is_iso_class G\n  F \\<inter> G \\<noteq> {}\n  h \\<in> F \\<and> h \\<in> G\n\ngoal (1 subgoal):\n 1. F = G", "by (metis is_iso_class_def iso_class_elems_isomorphic iso_class_eqI)"], ["proof (state)\nthis:\n  F = G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iso_class_rep [simp]:\n    assumes \"is_iso_class F\"\n    shows \"\\<lbrakk>iso_class_rep F\\<rbrakk> = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>iso_class_rep F\\<rbrakk> = F", "proof (intro iso_class_eq)"], ["proof (state)\ngoal (3 subgoals):\n 1. is_iso_class \\<lbrakk>iso_class_rep F\\<rbrakk>\n 2. is_iso_class F\n 3. \\<lbrakk>iso_class_rep F\\<rbrakk> \\<inter> F \\<noteq> {}", "show \"is_iso_class \\<lbrakk>iso_class_rep F\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_iso_class \\<lbrakk>iso_class_rep F\\<rbrakk>", "using assms is_iso_classI iso_class_memb_is_ide rep_in_iso_class"], ["proof (prove)\nusing this:\n  is_iso_class F\n  ide ?f \\<Longrightarrow> is_iso_class \\<lbrakk>?f\\<rbrakk>\n  \\<lbrakk>is_iso_class ?F; ?f \\<in> ?F\\<rbrakk> \\<Longrightarrow> ide ?f\n  is_iso_class ?F \\<Longrightarrow> iso_class_rep ?F \\<in> ?F\n\ngoal (1 subgoal):\n 1. is_iso_class \\<lbrakk>iso_class_rep F\\<rbrakk>", "by blast"], ["proof (state)\nthis:\n  is_iso_class \\<lbrakk>iso_class_rep F\\<rbrakk>\n\ngoal (2 subgoals):\n 1. is_iso_class F\n 2. \\<lbrakk>iso_class_rep F\\<rbrakk> \\<inter> F \\<noteq> {}", "show \"is_iso_class F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_iso_class F", "using assms"], ["proof (prove)\nusing this:\n  is_iso_class F\n\ngoal (1 subgoal):\n 1. is_iso_class F", "by simp"], ["proof (state)\nthis:\n  is_iso_class F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>iso_class_rep F\\<rbrakk> \\<inter> F \\<noteq> {}", "show \"\\<lbrakk>iso_class_rep F\\<rbrakk> \\<inter> F \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>iso_class_rep F\\<rbrakk> \\<inter> F \\<noteq> {}", "using assms rep_in_iso_class"], ["proof (prove)\nusing this:\n  is_iso_class F\n  is_iso_class ?F \\<Longrightarrow> iso_class_rep ?F \\<in> ?F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>iso_class_rep F\\<rbrakk> \\<inter> F \\<noteq> {}", "by (meson disjoint_iff_not_equal ide_in_iso_class iso_class_memb_is_ide)"], ["proof (state)\nthis:\n  \\<lbrakk>iso_class_rep F\\<rbrakk> \\<inter> F \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}