{"file_name": "/home/qj213/afp-2021-10-22/thys/Graph_Theory/Funpow.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Graph_Theory", "problem_names": ["lemma funpow_simp_l: \"f ((f ^^ n) x) = (f ^^ Suc n) x\"", "lemma funpow_add_app: \"(f ^^ n) ((f ^^ m) x) = (f ^^ (n + m)) x\"", "lemma funpow_mod_eq:\n  assumes \"(f ^^ n) x = x\" \"0 < n\" shows \"(f ^^ (m mod n)) x = (f ^^ m) x\"", "lemma id_funpow_id:\n  assumes \"f x = x\" shows \"(f ^^ n) x = x\"", "lemma inv_id_abs[simp]: \"inv (\\<lambda>a. a) = id\"", "lemma inj_funpow:\n  fixes f :: \"'a \\<Rightarrow> 'a\"\n  assumes \"inj f\" shows \"inj (f ^^ n)\"", "lemma funpow_inj_finite:\n  assumes \"inj p\" \"finite {(p ^^ n) x |n. True}\"\n  shows \"\\<exists>n>0. (p ^^ n) x = x\"", "lemma permutes_in_funpow_image:\n  assumes \"f permutes S\" \"x \\<in> S\"\n  shows \"(f ^^ n) x \\<in> S\"", "lemma permutation_self:\n  assumes \"permutation p\" shows \"\\<exists>n>0. (p ^^ n) x = x\"", "lemma (in -) funpow_invs:\n  assumes \"m \\<le> n\" and inv: \"\\<And>x. f (g x) = x\"\n  shows \"(f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x\"", "lemma funpow_dist_0:\n  assumes \"x = y\" shows \"funpow_dist f x y = 0\"", "lemma funpow_dist_least:\n  assumes \"n < funpow_dist f x y\" shows \"(f ^^ n) x \\<noteq> y\"", "lemma funpow_dist1_least:\n  assumes \"0 < n\" \"n < funpow_dist1 f x y\" shows \"(f ^^ n) x \\<noteq> y\"", "lemma orbit_altdef: \"orbit f x = {(f ^^ n) x | n. 0 < n}\" (is \"?L = ?R\")", "lemma orbit_trans:\n  assumes \"s \\<in> orbit f t\" \"t \\<in> orbit f u\" shows \"s \\<in> orbit f u\"", "lemma orbit_subset:\n  assumes \"s \\<in> orbit f (f t)\" shows \"s \\<in> orbit f t\"", "lemma orbit_sim_step:\n  assumes \"s \\<in> orbit f t\" shows \"f s \\<in> orbit f (f t)\"", "lemma orbit_step:\n  assumes \"y \\<in> orbit f x\" \"f x \\<noteq> y\" shows \"y \\<in> orbit f (f x)\"", "lemma self_in_orbit_trans:\n  assumes \"s \\<in> orbit f s\" \"t \\<in> orbit f s\" shows \"t \\<in> orbit f t\"", "lemma orbit_swap:\n  assumes \"s \\<in> orbit f s\" \"t \\<in> orbit f s\" shows \"s \\<in> orbit f t\"", "lemma permutation_self_in_orbit:\n  assumes \"permutation f\" shows \"s \\<in> orbit f s\"", "lemma orbit_altdef_self_in:\n  assumes \"s \\<in> orbit f s\" shows \"orbit f s = {(f ^^ n) s | n. True}\"", "lemma orbit_altdef_permutation:\n  assumes \"permutation f\" shows \"orbit f s = {(f ^^ n) s | n. True}\"", "lemma orbit_altdef_bounded:\n  assumes \"(f ^^ n) s = s\" \"0 < n\" shows \"orbit f s = {(f ^^ m) s| m. m < n}\"", "lemma funpow_in_orbit:\n  assumes \"s \\<in> orbit f t\" shows \"(f ^^ n) s \\<in> orbit f t\"", "lemma finite_orbit:\n  assumes \"s \\<in> orbit f s\" shows \"finite (orbit f s)\"", "lemma self_in_orbit_step:\n  assumes \"s \\<in> orbit f s\" shows \"orbit f (f s) = orbit f s\"", "lemma permutation_orbit_step:\n  assumes \"permutation f\" shows \"orbit f (f s) = orbit f s\"", "lemma orbit_nonempty:\n  \"orbit f s \\<noteq> {}\"", "lemma orbit_inv_eq:\n  assumes \"permutation f\"\n  shows \"orbit (inv f) x = orbit f x\" (is \"?L = ?R\")", "lemma cyclic_on_alldef:\n  \"cyclic_on f S \\<longleftrightarrow> S \\<noteq> {} \\<and> (\\<forall>s\\<in>S. S = orbit f s)\"", "lemma cyclic_on_funpow_in:\n  assumes \"cyclic_on f S\" \"s \\<in> S\" shows \"(f^^n) s \\<in> S\"", "lemma finite_cyclic_on:\n  assumes \"cyclic_on f S\" shows \"finite S\"", "lemma cyclic_on_singleI:\n  assumes \"s \\<in> S\" \"S = orbit f s\" shows \"cyclic_on f S\"", "lemma inj_on_funpow_least:\n  assumes \"(f ^^ n) s = s\" \"\\<And>m. \\<lbrakk>m < n; 0 < m\\<rbrakk> \\<Longrightarrow> (f ^^ m) s \\<noteq> s\"\n  shows \"inj_on (\\<lambda>k. (f^^k) s) {0..<n}\"", "lemma cyclic_on_inI:\n  assumes \"cyclic_on f S\" \"s \\<in> S\" shows \"f s \\<in> S\"", "lemma bij_betw_funpow:\n  assumes \"bij_betw f S S\" shows \"bij_betw (f ^^ n) S S\"", "lemma orbit_FOO:\n  assumes self:\"a \\<in> orbit g a\"\n    and eq: \"\\<And>x. x \\<in> orbit g a \\<Longrightarrow>  g' (f x) = f (g x)\"\n  shows \"f ` orbit g a = orbit g' (f a)\" (is \"?L = ?R\")", "lemma cyclic_on_FOO:\n  assumes \"cyclic_on f S\"\n  assumes \"\\<And>x. x \\<in> S \\<Longrightarrow> g (h x) = h (f x)\"\n  shows \"cyclic_on g (h ` S)\"", "lemma cyclic_on_f_in:\n  assumes \"f permutes S\" \"cyclic_on f A\" \"f x \\<in> A\"\n  shows \"x \\<in> A\"", "lemma permutes_not_in:\n  assumes \"f permutes S\" \"x \\<notin> S\" shows \"f x = x\"", "lemma orbit_cong0:\n  assumes \"x \\<in> A\" \"f \\<in> A \\<rightarrow> A\" \"\\<And>y. y \\<in> A \\<Longrightarrow> f y = g y\" shows \"orbit f x = orbit g x\"", "lemma orbit_cong:\n  assumes self_in: \"t \\<in> orbit f t\" and eq: \"\\<And>s. s \\<in> orbit f t \\<Longrightarrow> g s = f s\"\n  shows \"orbit g t = orbit f t\"", "lemma cyclic_cong:\n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> f s = g s\" shows \"cyclic_on f S = cyclic_on g S\"", "lemma permutes_comp_preserves_cyclic1:\n  assumes \"g permutes B\" \"cyclic_on f C\"\n  assumes \"A \\<inter> B = {}\" \"C \\<subseteq> A\"\n  shows \"cyclic_on (f o g) C\"", "lemma permutes_comp_preserves_cyclic2:\n  assumes \"f permutes A\" \"cyclic_on g C\"\n  assumes \"A \\<inter> B = {}\" \"C \\<subseteq> B\"\n  shows \"cyclic_on (f o g) C\"", "lemma permutes_orbit_subset:\n  assumes \"f permutes S\" \"x \\<in> S\" shows \"orbit f x \\<subseteq> S\"", "lemma cyclic_on_orbit':\n  assumes \"permutation f\" shows \"cyclic_on f (orbit f x)\"", "lemma cyclic_on_orbit:\n  assumes \"f permutes S\" \"finite S\" shows \"cyclic_on f (orbit f x)\"", "lemma orbit_cyclic_eq3:\n  assumes \"cyclic_on f S\" \"y \\<in> S\" shows \"orbit f y = S\"", "lemma orbit_eq_singleton_iff: \"orbit f x = {x} \\<longleftrightarrow> f x = x\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma eq_on_cyclic_on_iff1:\n  assumes \"cyclic_on f S\" \"x \\<in> S\"\n  obtains \"f x \\<in> S\" \"f x = x \\<longleftrightarrow> card S = 1\"", "lemma perm_restrict_comp:\n  assumes \"A \\<inter> B = {}\" \"cyclic_on f B\"\n  shows \"perm_restrict f A o perm_restrict f B = perm_restrict f (A \\<union> B)\"", "lemma perm_restrict_simps:\n  \"x \\<in> S \\<Longrightarrow> perm_restrict f S x = f x\"\n  \"x \\<notin> S \\<Longrightarrow> perm_restrict f S x = x\"", "lemma perm_restrict_perm_restrict:\n  \"perm_restrict (perm_restrict f A) B = perm_restrict f (A \\<inter> B)\"", "lemma perm_restrict_union:\n  assumes \"perm_restrict f A permutes A\" \"perm_restrict f B permutes B\" \"A \\<inter> B = {}\"\n  shows \"perm_restrict f A o perm_restrict f B = perm_restrict f (A \\<union> B)\"", "lemma perm_restrict_id[simp]:\n  assumes \"f permutes S\" shows \"perm_restrict f S = f\"", "lemma cyclic_on_perm_restrict:\n  \"cyclic_on (perm_restrict f S) S \\<longleftrightarrow> cyclic_on f S\"", "lemma perm_restrict_diff_cyclic:\n  assumes \"f permutes S\" \"cyclic_on f A\"\n  shows \"perm_restrict f (S - A) permutes (S - A)\"", "lemma orbit_eqI:\n  \"y = f x \\<Longrightarrow> y \\<in> orbit f x\"\n  \"z = f y \\<Longrightarrow>y \\<in> orbit f x \\<Longrightarrow>z \\<in> orbit f x\"", "lemma permutes_decompose:\n  assumes \"f permutes S\" \"finite S\"\n  shows \"\\<exists>C. (\\<forall>c \\<in> C. cyclic_on f c) \\<and> \\<Union>C = S \\<and> (\\<forall>c1 \\<in> C. \\<forall>c2 \\<in> C. c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})\"", "lemma funpow_dist_prop:\n  \"y \\<in> orbit f x \\<Longrightarrow> (f ^^ funpow_dist f x y) x = y\"", "lemma funpow_dist_0_eq:\n  assumes \"y \\<in> orbit f x\" shows \"funpow_dist f x y = 0 \\<longleftrightarrow> x = y\"", "lemma funpow_dist_step:\n  assumes \"x \\<noteq> y\" \"y \\<in> orbit f x\" shows \"funpow_dist f x y = Suc (funpow_dist f (f x) y)\"", "lemma funpow_dist1_prop:\n  assumes \"y \\<in> orbit f x\" shows \"(f ^^ funpow_dist1 f x y) x = y\"", "lemma funpow_neq_less_funpow_dist:\n  assumes \"y \\<in> orbit f x\" \"m \\<le> funpow_dist f x y\" \"n \\<le> funpow_dist f x y\" \"m \\<noteq> n\"\n  shows \"(f ^^ m) x \\<noteq> (f ^^ n) x\"", "lemma funpow_neq_less_funpow_dist1:\n  assumes \"y \\<in> orbit f x\" \"m < funpow_dist1 f x y\" \"n < funpow_dist1 f x y\" \"m \\<noteq> n\"\n  shows \"(f ^^ m) x \\<noteq> (f ^^ n) x\"", "lemma inj_on_funpow_dist:\n  assumes \"y \\<in> orbit f x\" shows \"inj_on (\\<lambda>n. (f ^^ n) x) {0..funpow_dist f x y}\"", "lemma inj_on_funpow_dist1:\n  assumes \"y \\<in> orbit f x\" shows \"inj_on (\\<lambda>n. (f ^^ n) x) {0..<funpow_dist1 f x y}\"", "lemma orbit_conv_funpow_dist1:\n  assumes \"x \\<in> orbit f x\"\n  shows \"orbit f x = (\\<lambda>n. (f ^^ n) x) ` {0..<funpow_dist1 f x x}\" (is \"?L = ?R\")", "lemma funpow_dist1_prop1:\n  assumes \"(f ^^ n) x = y\" \"0 < n\" shows \"(f ^^ funpow_dist1 f x y) x = y\"", "lemma funpow_dist1_dist:\n  assumes \"funpow_dist1 f x y < funpow_dist1 f x z\"\n  assumes \"{y,z} \\<subseteq> orbit f x\"\n  shows \"funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z\" (is \"?L = ?R\")", "lemma funpow_dist1_le_self:\n  assumes \"(f ^^ m) x = x\" \"0 < m\" \"y \\<in> orbit f x\"\n  shows \"funpow_dist1 f x y \\<le> m\"", "lemma permutes_conv_has_dom:\n  \"f permutes S \\<longleftrightarrow> bij f \\<and> has_dom f S\"", "lemma segment_step_2D:\n  assumes \"x \\<in> segment f a (f b)\" shows \"x \\<in> segment f a b \\<or> x = b\"", "lemma not_in_segment2D:\n  assumes \"x \\<in> segment f a b\" shows \"x \\<noteq> b\"", "lemma segment_altdef:\n  assumes \"b \\<in> orbit f a\"\n  shows \"segment f a b = (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\" (is \"?L = ?R\")", "lemma segmentD_orbit:\n  assumes \"x \\<in> segment f y z\" shows \"x \\<in> orbit f y\"", "lemma segment1_empty: \"segment f x (f x) = {}\"", "lemma segment_subset:\n  assumes \"y \\<in> segment f x z\"\n  assumes \"w \\<in> segment f x y\"\n  shows \"w \\<in> segment f x z\"", "lemma not_in_segment1:\n  assumes \"y \\<in> orbit f x\" shows \"x \\<notin> segment f x y\"", "lemma not_in_segment2: \"y \\<notin> segment f x y\"", "lemma in_segmentE:\n  assumes \"y \\<in> segment f x z\" \"z \\<in> orbit f x\"\n  obtains \"(f ^^ funpow_dist1 f x y) x = y\" \"funpow_dist1 f x y < funpow_dist1 f x z\"", "lemma cyclic_split_segment:\n  assumes S: \"cyclic_on f S\" \"a \\<in> S\" \"b \\<in> S\" and \"a \\<noteq> b\"\n  shows \"S = {a,b} \\<union> segment f a b \\<union> segment f b a\" (is \"?L = ?R\")", "lemma segment_split:\n  assumes y_in_seg: \"y \\<in> segment f x z\"\n  shows \"segment f x z = segment f x y \\<union> {y} \\<union> segment f y z\" (is \"?L = ?R\")", "lemma in_segmentD_inv:\n  assumes \"x \\<in> segment f a b\" \"x \\<noteq> f a\"\n  assumes \"inj f\"\n  shows \"inv f x \\<in> segment f a b\"", "lemma in_orbit_invI:\n  assumes \"b \\<in> orbit f a\"\n  assumes \"inj f\"\n  shows \"a \\<in> orbit (inv f) b\"", "lemma segment_step_2:\n  assumes A: \"x \\<in> segment f a b\" \"b \\<noteq> a\" and \"inj f\"\n  shows \"x \\<in> segment f a (f b)\"", "lemma inv_end_in_segment:\n  assumes \"b \\<in> orbit f a\" \"f a \\<noteq> b\" \"bij f\"\n  shows \"inv f b \\<in> segment f a b\"", "lemma segment_overlapping:\n  assumes \"x \\<in> orbit f a\" \"x \\<in> orbit f b\" \"bij f\"\n  shows \"segment f a x \\<subseteq> segment f b x \\<or> segment f b x \\<subseteq> segment f a x\"", "lemma segment_disj:\n  assumes \"a \\<noteq> b\" \"bij f\"\n  shows \"segment f a b \\<inter> segment f b a = {}\"", "lemma segment_x_x_eq:\n  assumes \"permutation f\"\n  shows \"segment f x x = orbit f x - {x}\" (is \"?L = ?R\")", "lemma set_iterate:\n  \"set (iterate m n f x) = (\\<lambda>k. (f ^^ k) x) ` {m..<n} \"", "lemma iterate_empty[simp]: \"iterate n m f x = [] \\<longleftrightarrow> m \\<le> n\"", "lemma iterate_length[simp]:\n  \"length (iterate m n f x) = n - m\"", "lemma iterate_nth[simp]:\n  assumes \"k < n - m\" shows \"iterate m n f x ! k = (f^^(m+k)) x\"", "lemma iterate_applied:\n  \"iterate n m f (f x) = iterate (Suc n) (Suc m) f x\""], "translations": [["", "lemma funpow_simp_l: \"f ((f ^^ n) x) = (f ^^ Suc n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ((f ^^ n) x) = (f ^^ Suc n) x", "by (metis comp_apply funpow.simps(2))"], ["", "lemma funpow_add_app: \"(f ^^ n) ((f ^^ m) x) = (f ^^ (n + m)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) ((f ^^ m) x) = (f ^^ (n + m)) x", "by (metis comp_apply funpow_add)"], ["", "lemma funpow_mod_eq:\n  assumes \"(f ^^ n) x = x\" \"0 < n\" shows \"(f ^^ (m mod n)) x = (f ^^ m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (m mod n)) x = (f ^^ m) x", "proof (induct m rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "case (less m)"], ["proof (state)\nthis:\n  ?y < m \\<Longrightarrow> (f ^^ (?y mod n)) x = (f ^^ ?y) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "{"], ["proof (state)\nthis:\n  ?y < m \\<Longrightarrow> (f ^^ (?y mod n)) x = (f ^^ ?y) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "assume \"m < n\""], ["proof (state)\nthis:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "then"], ["proof (chain)\npicking this:\n  m < n", "have ?case"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. (f ^^ (m mod n)) x = (f ^^ m) x", "by simp"], ["proof (state)\nthis:\n  (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "}"], ["proof (state)\nthis:\n  m < n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "moreover"], ["proof (state)\nthis:\n  m < n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "{"], ["proof (state)\nthis:\n  m < n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "assume \"m = n\""], ["proof (state)\nthis:\n  m = n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "then"], ["proof (chain)\npicking this:\n  m = n", "have ?case"], ["proof (prove)\nusing this:\n  m = n\n\ngoal (1 subgoal):\n 1. (f ^^ (m mod n)) x = (f ^^ m) x", "by (simp add: \\<open>_ = x\\<close>)"], ["proof (state)\nthis:\n  (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "}"], ["proof (state)\nthis:\n  m = n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "moreover"], ["proof (state)\nthis:\n  m = n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "{"], ["proof (state)\nthis:\n  m = n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "assume \"n < m\""], ["proof (state)\nthis:\n  n < m\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "then"], ["proof (chain)\npicking this:\n  n < m", "have \"m - n < m\" \"0 < m - n\""], ["proof (prove)\nusing this:\n  n < m\n\ngoal (1 subgoal):\n 1. m - n < m &&& 0 < m - n", "using \\<open>0 < n\\<close>"], ["proof (prove)\nusing this:\n  n < m\n  0 < n\n\ngoal (1 subgoal):\n 1. m - n < m &&& 0 < m - n", "by arith+"], ["proof (state)\nthis:\n  m - n < m\n  0 < m - n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "have \"(f ^^ (m mod n)) x = (f ^^ ((m - n) mod n)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (m mod n)) x = (f ^^ ((m - n) mod n)) x", "using \\<open>0 < m - n\\<close>"], ["proof (prove)\nusing this:\n  0 < m - n\n\ngoal (1 subgoal):\n 1. (f ^^ (m mod n)) x = (f ^^ ((m - n) mod n)) x", "by (simp add: mod_geq)"], ["proof (state)\nthis:\n  (f ^^ (m mod n)) x = (f ^^ ((m - n) mod n)) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "also"], ["proof (state)\nthis:\n  (f ^^ (m mod n)) x = (f ^^ ((m - n) mod n)) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "have \"\\<dots> = (f ^^ (m - n)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ ((m - n) mod n)) x = (f ^^ (m - n)) x", "using \\<open>m - n < m\\<close>"], ["proof (prove)\nusing this:\n  m - n < m\n\ngoal (1 subgoal):\n 1. (f ^^ ((m - n) mod n)) x = (f ^^ (m - n)) x", "by (rule less)"], ["proof (state)\nthis:\n  (f ^^ ((m - n) mod n)) x = (f ^^ (m - n)) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "also"], ["proof (state)\nthis:\n  (f ^^ ((m - n) mod n)) x = (f ^^ (m - n)) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "have \"\\<dots> = (f ^^ (m - n)) ((f ^^ n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (m - n)) x = (f ^^ (m - n)) ((f ^^ n) x)", "by (simp add: assms)"], ["proof (state)\nthis:\n  (f ^^ (m - n)) x = (f ^^ (m - n)) ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "also"], ["proof (state)\nthis:\n  (f ^^ (m - n)) x = (f ^^ (m - n)) ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "have \"\\<dots> = (f ^^ m) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (m - n)) ((f ^^ n) x) = (f ^^ m) x", "using \\<open>0 < m - n\\<close>"], ["proof (prove)\nusing this:\n  0 < m - n\n\ngoal (1 subgoal):\n 1. (f ^^ (m - n)) ((f ^^ n) x) = (f ^^ m) x", "by (simp add: funpow_add_app)"], ["proof (state)\nthis:\n  (f ^^ (m - n)) ((f ^^ n) x) = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "finally"], ["proof (chain)\npicking this:\n  (f ^^ (m mod n)) x = (f ^^ m) x", "have ?case"], ["proof (prove)\nusing this:\n  (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. (f ^^ (m mod n)) x = (f ^^ m) x", "."], ["proof (state)\nthis:\n  (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "}"], ["proof (state)\nthis:\n  n < m \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<And>y.\n           y < xa \\<Longrightarrow>\n           (f ^^ (y mod n)) x = (f ^^ y) x) \\<Longrightarrow>\n       (f ^^ (xa mod n)) x = (f ^^ xa) x", "ultimately"], ["proof (chain)\npicking this:\n  m < n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n  m = n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n  n < m \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x", "show ?case"], ["proof (prove)\nusing this:\n  m < n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n  m = n \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n  n < m \\<Longrightarrow> (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal (1 subgoal):\n 1. (f ^^ (m mod n)) x = (f ^^ m) x", "by (metis linorder_neqE_nat)"], ["proof (state)\nthis:\n  (f ^^ (m mod n)) x = (f ^^ m) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma id_funpow_id:\n  assumes \"f x = x\" shows \"(f ^^ n) x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) x = x", "using assms"], ["proof (prove)\nusing this:\n  f x = x\n\ngoal (1 subgoal):\n 1. (f ^^ n) x = x", "by (induct n) auto"], ["", "lemma inv_id_abs[simp]: \"inv (\\<lambda>a. a) = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv (\\<lambda>a. a) = id", "unfolding id_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv id = id", "by simp"], ["", "lemma inj_funpow:\n  fixes f :: \"'a \\<Rightarrow> 'a\"\n  assumes \"inj f\" shows \"inj (f ^^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (f ^^ n)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj (f ^^ 0)\n 2. \\<And>n. inj (f ^^ n) \\<Longrightarrow> inj (f ^^ Suc n)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. inj (f ^^ 0)\n 2. \\<And>n. inj (f ^^ n) \\<Longrightarrow> inj (f ^^ Suc n)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj (f ^^ 0)", "by (auto simp: id_def[symmetric])"], ["proof (state)\nthis:\n  inj (f ^^ 0)\n\ngoal (1 subgoal):\n 1. \\<And>n. inj (f ^^ n) \\<Longrightarrow> inj (f ^^ Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. inj (f ^^ n) \\<Longrightarrow> inj (f ^^ Suc n)", "case (Suc n)"], ["proof (state)\nthis:\n  inj (f ^^ n)\n\ngoal (1 subgoal):\n 1. \\<And>n. inj (f ^^ n) \\<Longrightarrow> inj (f ^^ Suc n)", "with assms"], ["proof (chain)\npicking this:\n  inj f\n  inj (f ^^ n)", "show ?case"], ["proof (prove)\nusing this:\n  inj f\n  inj (f ^^ n)\n\ngoal (1 subgoal):\n 1. inj (f ^^ Suc n)", "unfolding funpow.simps"], ["proof (prove)\nusing this:\n  inj f\n  inj (f ^^ n)\n\ngoal (1 subgoal):\n 1. inj (f \\<circ> f ^^ n)", "by (rule inj_compose)"], ["proof (state)\nthis:\n  inj (f ^^ Suc n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma funpow_inj_finite:\n  assumes \"inj p\" \"finite {(p ^^ n) x |n. True}\"\n  shows \"\\<exists>n>0. (p ^^ n) x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "have \"\\<not>finite {0::nat..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite {0..}", "by simp"], ["proof (state)\nthis:\n  infinite {0..}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "moreover"], ["proof (state)\nthis:\n  infinite {0..}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "have \"{(p ^^ n) x |n. True} = (\\<lambda>n. (p ^^ n) x) ` {0..}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(p ^^ n) x |n. True} = (\\<lambda>n. (p ^^ n) x) ` {0..}", "by auto"], ["proof (state)\nthis:\n  {(p ^^ n) x |n. True} = (\\<lambda>n. (p ^^ n) x) ` {0..}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "with assms"], ["proof (chain)\npicking this:\n  inj p\n  finite {(p ^^ n) x |n. True}\n  {(p ^^ n) x |n. True} = (\\<lambda>n. (p ^^ n) x) ` {0..}", "have \"finite \\<dots>\""], ["proof (prove)\nusing this:\n  inj p\n  finite {(p ^^ n) x |n. True}\n  {(p ^^ n) x |n. True} = (\\<lambda>n. (p ^^ n) x) ` {0..}\n\ngoal (1 subgoal):\n 1. finite ((\\<lambda>n. (p ^^ n) x) ` {0..})", "by simp"], ["proof (state)\nthis:\n  finite ((\\<lambda>n. (p ^^ n) x) ` {0..})\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "ultimately"], ["proof (chain)\npicking this:\n  infinite {0..}\n  finite ((\\<lambda>n. (p ^^ n) x) ` {0..})", "have \"\\<exists>n\\<in>{0..}. \\<not> finite {m \\<in> {0..}. (p ^^ m) x = (p ^^ n) x}\""], ["proof (prove)\nusing this:\n  infinite {0..}\n  finite ((\\<lambda>n. (p ^^ n) x) ` {0..})\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>{0..}. infinite {m \\<in> {0..}. (p ^^ m) x = (p ^^ n) x}", "by (rule pigeonhole_infinite)"], ["proof (state)\nthis:\n  \\<exists>n\\<in>{0..}. infinite {m \\<in> {0..}. (p ^^ m) x = (p ^^ n) x}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  \\<exists>n\\<in>{0..}. infinite {m \\<in> {0..}. (p ^^ m) x = (p ^^ n) x}", "obtain n where \"\\<not>finite {m. (p ^^ m) x = (p ^^ n) x}\""], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>{0..}. infinite {m \\<in> {0..}. (p ^^ m) x = (p ^^ n) x}\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        infinite {m. (p ^^ m) x = (p ^^ n) x} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  infinite {m. (p ^^ m) x = (p ^^ n) x}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  infinite {m. (p ^^ m) x = (p ^^ n) x}", "have \"\\<not>finite ({m. (p ^^ m) x = (p ^^ n) x} - {n})\""], ["proof (prove)\nusing this:\n  infinite {m. (p ^^ m) x = (p ^^ n) x}\n\ngoal (1 subgoal):\n 1. infinite ({m. (p ^^ m) x = (p ^^ n) x} - {n})", "by auto"], ["proof (state)\nthis:\n  infinite ({m. (p ^^ m) x = (p ^^ n) x} - {n})\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  infinite ({m. (p ^^ m) x = (p ^^ n) x} - {n})", "have \"({m. (p ^^ m) x = (p ^^ n) x} - {n}) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  infinite ({m. (p ^^ m) x = (p ^^ n) x} - {n})\n\ngoal (1 subgoal):\n 1. {m. (p ^^ m) x = (p ^^ n) x} - {n} \\<noteq> {}", "by (metis finite.emptyI)"], ["proof (state)\nthis:\n  {m. (p ^^ m) x = (p ^^ n) x} - {n} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  {m. (p ^^ m) x = (p ^^ n) x} - {n} \\<noteq> {}", "obtain m where m: \"(p ^^ m) x = (p ^^ n) x\" \"m \\<noteq> n\""], ["proof (prove)\nusing this:\n  {m. (p ^^ m) x = (p ^^ n) x} - {n} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>(p ^^ m) x = (p ^^ n) x; m \\<noteq> n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (p ^^ m) x = (p ^^ n) x\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "{"], ["proof (state)\nthis:\n  (p ^^ m) x = (p ^^ n) x\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "fix m n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "assume \"(p ^^ n) x = (p ^^ m) x\" \"m < n\""], ["proof (state)\nthis:\n  (p ^^ n) x = (p ^^ m) x\n  m < n\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "have \"(p ^^ (n - m)) x = inv (p ^^ m) ((p ^^ m) ((p ^^ (n - m)) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p ^^ (n - m)) x = inv (p ^^ m) ((p ^^ m) ((p ^^ (n - m)) x))", "using \\<open>inj p\\<close>"], ["proof (prove)\nusing this:\n  inj p\n\ngoal (1 subgoal):\n 1. (p ^^ (n - m)) x = inv (p ^^ m) ((p ^^ m) ((p ^^ (n - m)) x))", "by (simp add: inv_f_f inj_funpow)"], ["proof (state)\nthis:\n  (p ^^ (n - m)) x = inv (p ^^ m) ((p ^^ m) ((p ^^ (n - m)) x))\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "also"], ["proof (state)\nthis:\n  (p ^^ (n - m)) x = inv (p ^^ m) ((p ^^ m) ((p ^^ (n - m)) x))\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "have \"((p ^^ m) ((p ^^ (n - m)) x)) = (p ^^ n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p ^^ m) ((p ^^ (n - m)) x) = (p ^^ n) x", "using \\<open>m < n\\<close>"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. (p ^^ m) ((p ^^ (n - m)) x) = (p ^^ n) x", "by (simp add: funpow_add_app)"], ["proof (state)\nthis:\n  (p ^^ m) ((p ^^ (n - m)) x) = (p ^^ n) x\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "also"], ["proof (state)\nthis:\n  (p ^^ m) ((p ^^ (n - m)) x) = (p ^^ n) x\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "have \"inv (p ^^ m) \\<dots> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv (p ^^ m) ((p ^^ n) x) = x", "using \\<open>inj p\\<close>"], ["proof (prove)\nusing this:\n  inj p\n\ngoal (1 subgoal):\n 1. inv (p ^^ m) ((p ^^ n) x) = x", "by (simp add: \\<open>(p ^^ n) x = _\\<close> inj_funpow)"], ["proof (state)\nthis:\n  inv (p ^^ m) ((p ^^ n) x) = x\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "finally"], ["proof (chain)\npicking this:\n  (p ^^ (n - m)) x = x", "have \"(p ^^ (n - m)) x = x\" \"0 < n - m\""], ["proof (prove)\nusing this:\n  (p ^^ (n - m)) x = x\n\ngoal (1 subgoal):\n 1. (p ^^ (n - m)) x = x &&& 0 < n - m", "using \\<open>m < n\\<close>"], ["proof (prove)\nusing this:\n  (p ^^ (n - m)) x = x\n  m < n\n\ngoal (1 subgoal):\n 1. (p ^^ (n - m)) x = x &&& 0 < n - m", "by auto"], ["proof (state)\nthis:\n  (p ^^ (n - m)) x = x\n  0 < n - m\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "}"], ["proof (state)\nthis:\n  \\<lbrakk>(p ^^ ?na2) x = (p ^^ ?ma2) x; ?ma2 < ?na2\\<rbrakk>\n  \\<Longrightarrow> (p ^^ (?na2 - ?ma2)) x = x\n  \\<lbrakk>(p ^^ ?na2) x = (p ^^ ?ma2) x; ?ma2 < ?na2\\<rbrakk>\n  \\<Longrightarrow> 0 < ?na2 - ?ma2\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "note general = this"], ["proof (state)\nthis:\n  \\<lbrakk>(p ^^ ?na2) x = (p ^^ ?ma2) x; ?ma2 < ?na2\\<rbrakk>\n  \\<Longrightarrow> (p ^^ (?na2 - ?ma2)) x = x\n  \\<lbrakk>(p ^^ ?na2) x = (p ^^ ?ma2) x; ?ma2 < ?na2\\<rbrakk>\n  \\<Longrightarrow> 0 < ?na2 - ?ma2\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "proof (cases m n rule: linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. m < n \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x\n 2. m = n \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x\n 3. n < m \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "case less"], ["proof (state)\nthis:\n  m < n\n\ngoal (3 subgoals):\n 1. m < n \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x\n 2. m = n \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x\n 3. n < m \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  m < n", "show ?thesis"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "using general m"], ["proof (prove)\nusing this:\n  m < n\n  \\<lbrakk>(p ^^ ?na2) x = (p ^^ ?ma2) x; ?ma2 < ?na2\\<rbrakk>\n  \\<Longrightarrow> (p ^^ (?na2 - ?ma2)) x = x\n  \\<lbrakk>(p ^^ ?na2) x = (p ^^ ?ma2) x; ?ma2 < ?na2\\<rbrakk>\n  \\<Longrightarrow> 0 < ?na2 - ?ma2\n  (p ^^ m) x = (p ^^ n) x\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "by metis"], ["proof (state)\nthis:\n  \\<exists>n>0. (p ^^ n) x = x\n\ngoal (2 subgoals):\n 1. m = n \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x\n 2. n < m \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. m = n \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x\n 2. n < m \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "case equal"], ["proof (state)\nthis:\n  m = n\n\ngoal (2 subgoals):\n 1. m = n \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x\n 2. n < m \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  m = n", "show ?thesis"], ["proof (prove)\nusing this:\n  m = n\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "using m"], ["proof (prove)\nusing this:\n  m = n\n  (p ^^ m) x = (p ^^ n) x\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "by metis"], ["proof (state)\nthis:\n  \\<exists>n>0. (p ^^ n) x = x\n\ngoal (1 subgoal):\n 1. n < m \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n < m \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "case greater"], ["proof (state)\nthis:\n  n < m\n\ngoal (1 subgoal):\n 1. n < m \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  n < m", "show ?thesis"], ["proof (prove)\nusing this:\n  n < m\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "using general m"], ["proof (prove)\nusing this:\n  n < m\n  \\<lbrakk>(p ^^ ?na2) x = (p ^^ ?ma2) x; ?ma2 < ?na2\\<rbrakk>\n  \\<Longrightarrow> (p ^^ (?na2 - ?ma2)) x = x\n  \\<lbrakk>(p ^^ ?na2) x = (p ^^ ?ma2) x; ?ma2 < ?na2\\<rbrakk>\n  \\<Longrightarrow> 0 < ?na2 - ?ma2\n  (p ^^ m) x = (p ^^ n) x\n  m \\<noteq> n\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "by metis"], ["proof (state)\nthis:\n  \\<exists>n>0. (p ^^ n) x = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n>0. (p ^^ n) x = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma permutes_in_funpow_image:\n  assumes \"f permutes S\" \"x \\<in> S\"\n  shows \"(f ^^ n) x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) x \\<in> S", "using assms"], ["proof (prove)\nusing this:\n  f permutes S\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. (f ^^ n) x \\<in> S", "by (induct n) (auto simp: permutes_in_image)"], ["", "(* XXX move*)"], ["", "lemma permutation_self:\n  assumes \"permutation p\" shows \"\\<exists>n>0. (p ^^ n) x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "assume \"p x = x\""], ["proof (state)\nthis:\n  p x = x\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  p x = x", "show ?thesis"], ["proof (prove)\nusing this:\n  p x = x\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "by auto"], ["proof (state)\nthis:\n  \\<exists>n>0. (p ^^ n) x = x\n\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "assume \"p x \\<noteq> x\""], ["proof (state)\nthis:\n  p x \\<noteq> x\n\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "from assms"], ["proof (chain)\npicking this:\n  permutation p", "have \"inj p\""], ["proof (prove)\nusing this:\n  permutation p\n\ngoal (1 subgoal):\n 1. inj p", "by (intro permutation_bijective bij_is_inj)"], ["proof (state)\nthis:\n  inj p\n\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "{"], ["proof (state)\nthis:\n  inj p\n\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "from \\<open>p x \\<noteq> x\\<close>"], ["proof (chain)\npicking this:\n  p x \\<noteq> x", "have \"(p ^^ Suc n) x \\<noteq> (p ^^ n) x\""], ["proof (prove)\nusing this:\n  p x \\<noteq> x\n\ngoal (1 subgoal):\n 1. (p ^^ Suc n) x \\<noteq> (p ^^ n) x", "proof (induct n arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       p x \\<noteq> x \\<Longrightarrow> (p ^^ Suc 0) x \\<noteq> (p ^^ 0) x\n 2. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "case 0"], ["proof (state)\nthis:\n  p x \\<noteq> x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       p x \\<noteq> x \\<Longrightarrow> (p ^^ Suc 0) x \\<noteq> (p ^^ 0) x\n 2. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "then"], ["proof (chain)\npicking this:\n  p x \\<noteq> x", "show ?case"], ["proof (prove)\nusing this:\n  p x \\<noteq> x\n\ngoal (1 subgoal):\n 1. (p ^^ Suc 0) x \\<noteq> (p ^^ 0) x", "by simp"], ["proof (state)\nthis:\n  (p ^^ Suc 0) x \\<noteq> (p ^^ 0) x\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "case (Suc n)"], ["proof (state)\nthis:\n  p ?x \\<noteq> ?x \\<Longrightarrow> (p ^^ Suc n) ?x \\<noteq> (p ^^ n) ?x\n  p x \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "have \"p (p x) \\<noteq> p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p (p x) \\<noteq> p x", "proof (rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. p (p x) = p x \\<Longrightarrow> False", "assume \"p (p x) = p x\""], ["proof (state)\nthis:\n  p (p x) = p x\n\ngoal (1 subgoal):\n 1. p (p x) = p x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p (p x) = p x", "show False"], ["proof (prove)\nusing this:\n  p (p x) = p x\n\ngoal (1 subgoal):\n 1. False", "using \\<open>p x \\<noteq> x\\<close> \\<open>inj p\\<close>"], ["proof (prove)\nusing this:\n  p (p x) = p x\n  p x \\<noteq> x\n  inj p\n\ngoal (1 subgoal):\n 1. False", "by (simp add: inj_eq)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p (p x) \\<noteq> p x\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "have \"(p ^^ Suc (Suc n)) x = (p ^^ Suc n) (p x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p ^^ Suc (Suc n)) x = (p ^^ Suc n) (p x)", "by (metis funpow_simp_l funpow_swap1)"], ["proof (state)\nthis:\n  (p ^^ Suc (Suc n)) x = (p ^^ Suc n) (p x)\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "also"], ["proof (state)\nthis:\n  (p ^^ Suc (Suc n)) x = (p ^^ Suc n) (p x)\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "have \"\\<dots> \\<noteq> (p ^^ n) (p x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p ^^ Suc n) (p x) \\<noteq> (p ^^ n) (p x)", "by (rule Suc) fact"], ["proof (state)\nthis:\n  (p ^^ Suc n) (p x) \\<noteq> (p ^^ n) (p x)\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "also"], ["proof (state)\nthis:\n  (p ^^ Suc n) (p x) \\<noteq> (p ^^ n) (p x)\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "have \"(p ^^ n) (p x) = (p ^^ Suc n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p ^^ n) (p x) = (p ^^ Suc n) x", "by (metis funpow_simp_l funpow_swap1)"], ["proof (state)\nthis:\n  (p ^^ n) (p x) = (p ^^ Suc n) x\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   p x \\<noteq> x \\<Longrightarrow>\n                   (p ^^ Suc n) x \\<noteq> (p ^^ n) x;\n        p x \\<noteq> x\\<rbrakk>\n       \\<Longrightarrow> (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "finally"], ["proof (chain)\npicking this:\n  (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "show ?case"], ["proof (prove)\nusing this:\n  (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x\n\ngoal (1 subgoal):\n 1. (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x", "by simp"], ["proof (state)\nthis:\n  (p ^^ Suc (Suc n)) x \\<noteq> (p ^^ Suc n) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (p ^^ Suc n) x \\<noteq> (p ^^ n) x\n\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "}"], ["proof (state)\nthis:\n  (p ^^ Suc ?n2) x \\<noteq> (p ^^ ?n2) x\n\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  (p ^^ Suc ?n2) x \\<noteq> (p ^^ ?n2) x", "have \"{(p ^^ n) x | n. True} \\<subseteq> {x. p x \\<noteq> x}\""], ["proof (prove)\nusing this:\n  (p ^^ Suc ?n2) x \\<noteq> (p ^^ ?n2) x\n\ngoal (1 subgoal):\n 1. {(p ^^ n) x |n. True} \\<subseteq> {x. p x \\<noteq> x}", "by auto"], ["proof (state)\nthis:\n  {(p ^^ n) x |n. True} \\<subseteq> {x. p x \\<noteq> x}\n\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "then"], ["proof (chain)\npicking this:\n  {(p ^^ n) x |n. True} \\<subseteq> {x. p x \\<noteq> x}", "have \"finite {(p ^^ n) x | n. True}\""], ["proof (prove)\nusing this:\n  {(p ^^ n) x |n. True} \\<subseteq> {x. p x \\<noteq> x}\n\ngoal (1 subgoal):\n 1. finite {(p ^^ n) x |n. True}", "using permutation_finite_support[OF assms]"], ["proof (prove)\nusing this:\n  {(p ^^ n) x |n. True} \\<subseteq> {x. p x \\<noteq> x}\n  finite {x. p x \\<noteq> x}\n\ngoal (1 subgoal):\n 1. finite {(p ^^ n) x |n. True}", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite {(p ^^ n) x |n. True}\n\ngoal (1 subgoal):\n 1. p x \\<noteq> x \\<Longrightarrow> \\<exists>n>0. (p ^^ n) x = x", "with \\<open>inj p\\<close>"], ["proof (chain)\npicking this:\n  inj p\n  finite {(p ^^ n) x |n. True}", "show ?thesis"], ["proof (prove)\nusing this:\n  inj p\n  finite {(p ^^ n) x |n. True}\n\ngoal (1 subgoal):\n 1. \\<exists>n>0. (p ^^ n) x = x", "by (rule funpow_inj_finite)"], ["proof (state)\nthis:\n  \\<exists>n>0. (p ^^ n) x = x\n\ngoal:\nNo subgoals!", "qed"], ["", "(* XXX move *)"], ["", "lemma (in -) funpow_invs:\n  assumes \"m \\<le> n\" and inv: \"\\<And>x. f (g x) = x\"\n  shows \"(f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x", "using \\<open>m \\<le> n\\<close>"], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x", "proof (induction m)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> n \\<Longrightarrow> (f ^^ 0) ((g ^^ n) x) = (g ^^ (n - 0)) x\n 2. \\<And>m.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x;\n        Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (f ^^ Suc m) ((g ^^ n) x) = (g ^^ (n - Suc m)) x", "case (Suc m)"], ["proof (state)\nthis:\n  m \\<le> n \\<Longrightarrow> (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x\n  Suc m \\<le> n\n\ngoal (2 subgoals):\n 1. 0 \\<le> n \\<Longrightarrow> (f ^^ 0) ((g ^^ n) x) = (g ^^ (n - 0)) x\n 2. \\<And>m.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x;\n        Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (f ^^ Suc m) ((g ^^ n) x) = (g ^^ (n - Suc m)) x", "moreover"], ["proof (state)\nthis:\n  m \\<le> n \\<Longrightarrow> (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x\n  Suc m \\<le> n\n\ngoal (2 subgoals):\n 1. 0 \\<le> n \\<Longrightarrow> (f ^^ 0) ((g ^^ n) x) = (g ^^ (n - 0)) x\n 2. \\<And>m.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x;\n        Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (f ^^ Suc m) ((g ^^ n) x) = (g ^^ (n - Suc m)) x", "then"], ["proof (chain)\npicking this:\n  m \\<le> n \\<Longrightarrow> (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x\n  Suc m \\<le> n", "have \"n - m = Suc (n - Suc m)\""], ["proof (prove)\nusing this:\n  m \\<le> n \\<Longrightarrow> (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x\n  Suc m \\<le> n\n\ngoal (1 subgoal):\n 1. n - m = Suc (n - Suc m)", "by auto"], ["proof (state)\nthis:\n  n - m = Suc (n - Suc m)\n\ngoal (2 subgoals):\n 1. 0 \\<le> n \\<Longrightarrow> (f ^^ 0) ((g ^^ n) x) = (g ^^ (n - 0)) x\n 2. \\<And>m.\n       \\<lbrakk>m \\<le> n \\<Longrightarrow>\n                (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x;\n        Suc m \\<le> n\\<rbrakk>\n       \\<Longrightarrow> (f ^^ Suc m) ((g ^^ n) x) = (g ^^ (n - Suc m)) x", "ultimately"], ["proof (chain)\npicking this:\n  m \\<le> n \\<Longrightarrow> (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x\n  Suc m \\<le> n\n  n - m = Suc (n - Suc m)", "show ?case"], ["proof (prove)\nusing this:\n  m \\<le> n \\<Longrightarrow> (f ^^ m) ((g ^^ n) x) = (g ^^ (n - m)) x\n  Suc m \\<le> n\n  n - m = Suc (n - Suc m)\n\ngoal (1 subgoal):\n 1. (f ^^ Suc m) ((g ^^ n) x) = (g ^^ (n - Suc m)) x", "by (auto simp: inv)"], ["proof (state)\nthis:\n  (f ^^ Suc m) ((g ^^ n) x) = (g ^^ (n - Suc m)) x\n\ngoal (1 subgoal):\n 1. 0 \\<le> n \\<Longrightarrow> (f ^^ 0) ((g ^^ n) x) = (g ^^ (n - 0)) x", "qed simp"], ["", "section \\<open>Function-power distance between values\\<close>"], ["", "(* xxx move *)"], ["", "definition funpow_dist :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> nat\" where\n  \"funpow_dist f x y \\<equiv> LEAST n. (f ^^ n) x = y\""], ["", "abbreviation funpow_dist1 :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> nat\" where\n  \"funpow_dist1 f x y \\<equiv> Suc (funpow_dist f (f x) y)\""], ["", "lemma funpow_dist_0:\n  assumes \"x = y\" shows \"funpow_dist f x y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. funpow_dist f x y = 0", "using assms"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. funpow_dist f x y = 0", "unfolding funpow_dist_def"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. (LEAST n. (f ^^ n) x = y) = 0", "by (intro Least_eq_0) simp"], ["", "lemma funpow_dist_least:\n  assumes \"n < funpow_dist f x y\" shows \"(f ^^ n) x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) x \\<noteq> y", "proof (rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. (f ^^ n) x = y \\<Longrightarrow> False", "assume \"(f ^^ n) x = y\""], ["proof (state)\nthis:\n  (f ^^ n) x = y\n\ngoal (1 subgoal):\n 1. (f ^^ n) x = y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (f ^^ n) x = y", "have \"funpow_dist f x y \\<le> n\""], ["proof (prove)\nusing this:\n  (f ^^ n) x = y\n\ngoal (1 subgoal):\n 1. funpow_dist f x y \\<le> n", "unfolding funpow_dist_def"], ["proof (prove)\nusing this:\n  (f ^^ n) x = y\n\ngoal (1 subgoal):\n 1. (LEAST n. (f ^^ n) x = y) \\<le> n", "by (rule Least_le)"], ["proof (state)\nthis:\n  funpow_dist f x y \\<le> n\n\ngoal (1 subgoal):\n 1. (f ^^ n) x = y \\<Longrightarrow> False", "with assms"], ["proof (chain)\npicking this:\n  n < funpow_dist f x y\n  funpow_dist f x y \\<le> n", "show False"], ["proof (prove)\nusing this:\n  n < funpow_dist f x y\n  funpow_dist f x y \\<le> n\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma funpow_dist1_least:\n  assumes \"0 < n\" \"n < funpow_dist1 f x y\" shows \"(f ^^ n) x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) x \\<noteq> y", "proof (rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. (f ^^ n) x = y \\<Longrightarrow> False", "assume \"(f ^^ n) x = y\""], ["proof (state)\nthis:\n  (f ^^ n) x = y\n\ngoal (1 subgoal):\n 1. (f ^^ n) x = y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (f ^^ n) x = y", "have \"(f ^^ (n - 1)) (f x) = y\""], ["proof (prove)\nusing this:\n  (f ^^ n) x = y\n\ngoal (1 subgoal):\n 1. (f ^^ (n - 1)) (f x) = y", "using \\<open>0 < n\\<close>"], ["proof (prove)\nusing this:\n  (f ^^ n) x = y\n  0 < n\n\ngoal (1 subgoal):\n 1. (f ^^ (n - 1)) (f x) = y", "by (cases n) (simp_all add: funpow_swap1)"], ["proof (state)\nthis:\n  (f ^^ (n - 1)) (f x) = y\n\ngoal (1 subgoal):\n 1. (f ^^ n) x = y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (f ^^ (n - 1)) (f x) = y", "have \"funpow_dist f (f x) y \\<le> n - 1\""], ["proof (prove)\nusing this:\n  (f ^^ (n - 1)) (f x) = y\n\ngoal (1 subgoal):\n 1. funpow_dist f (f x) y \\<le> n - 1", "unfolding funpow_dist_def"], ["proof (prove)\nusing this:\n  (f ^^ (n - 1)) (f x) = y\n\ngoal (1 subgoal):\n 1. (LEAST n. (f ^^ n) (f x) = y) \\<le> n - 1", "by (rule Least_le)"], ["proof (state)\nthis:\n  funpow_dist f (f x) y \\<le> n - 1\n\ngoal (1 subgoal):\n 1. (f ^^ n) x = y \\<Longrightarrow> False", "with assms"], ["proof (chain)\npicking this:\n  0 < n\n  n < funpow_dist1 f x y\n  funpow_dist f (f x) y \\<le> n - 1", "show False"], ["proof (prove)\nusing this:\n  0 < n\n  n < funpow_dist1 f x y\n  funpow_dist f (f x) y \\<le> n - 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Cyclic Permutations\\<close>"], ["", "inductive_set orbit :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> 'a \\<Rightarrow> 'a set\" for f x where\n  base: \"f x \\<in> orbit f x\" |\n  step: \"y \\<in> orbit f x \\<Longrightarrow> f y \\<in> orbit f x\""], ["", "definition cyclic_on :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"cyclic_on f S \\<longleftrightarrow> (\\<exists>s\\<in>S. S = orbit f s)\""], ["", "lemma orbit_altdef: \"orbit f x = {(f ^^ n) x | n. 0 < n}\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f x = {(f ^^ n) x |n. 0 < n}", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> orbit f x \\<Longrightarrow> xa \\<in> {(f ^^ n) x |n. 0 < n}\n 2. \\<And>xa.\n       xa \\<in> {(f ^^ n) x |n. 0 < n} \\<Longrightarrow> xa \\<in> orbit f x", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> orbit f x \\<Longrightarrow> xa \\<in> {(f ^^ n) x |n. 0 < n}\n 2. \\<And>xa.\n       xa \\<in> {(f ^^ n) x |n. 0 < n} \\<Longrightarrow> xa \\<in> orbit f x", "assume \"y \\<in> ?L\""], ["proof (state)\nthis:\n  y \\<in> orbit f x\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> orbit f x \\<Longrightarrow> xa \\<in> {(f ^^ n) x |n. 0 < n}\n 2. \\<And>xa.\n       xa \\<in> {(f ^^ n) x |n. 0 < n} \\<Longrightarrow> xa \\<in> orbit f x", "then"], ["proof (chain)\npicking this:\n  y \\<in> orbit f x", "show \"y \\<in> ?R\""], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. y \\<in> {(f ^^ n) x |n. 0 < n}", "by (induct rule: orbit.induct) (auto simp: exI[where x=1] exI[where x=\"Suc n\" for n])"], ["proof (state)\nthis:\n  y \\<in> {(f ^^ n) x |n. 0 < n}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {(f ^^ n) x |n. 0 < n} \\<Longrightarrow> xa \\<in> orbit f x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {(f ^^ n) x |n. 0 < n} \\<Longrightarrow> xa \\<in> orbit f x", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {(f ^^ n) x |n. 0 < n} \\<Longrightarrow> xa \\<in> orbit f x", "assume \"y \\<in> ?R\""], ["proof (state)\nthis:\n  y \\<in> {(f ^^ n) x |n. 0 < n}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {(f ^^ n) x |n. 0 < n} \\<Longrightarrow> xa \\<in> orbit f x", "then"], ["proof (chain)\npicking this:\n  y \\<in> {(f ^^ n) x |n. 0 < n}", "obtain n where \"y = (f ^^ n) x\" \"0 < n\""], ["proof (prove)\nusing this:\n  y \\<in> {(f ^^ n) x |n. 0 < n}\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>y = (f ^^ n) x; 0 < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y = (f ^^ n) x\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {(f ^^ n) x |n. 0 < n} \\<Longrightarrow> xa \\<in> orbit f x", "then"], ["proof (chain)\npicking this:\n  y = (f ^^ n) x\n  0 < n", "show \"y \\<in> ?L\""], ["proof (prove)\nusing this:\n  y = (f ^^ n) x\n  0 < n\n\ngoal (1 subgoal):\n 1. y \\<in> orbit f x", "proof (induction n arbitrary: y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>y = (f ^^ 0) x; 0 < 0\\<rbrakk>\n       \\<Longrightarrow> y \\<in> orbit f x\n 2. \\<And>n y.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y = (f ^^ n) x; 0 < n\\<rbrakk>\n                   \\<Longrightarrow> y \\<in> orbit f x;\n        y = (f ^^ Suc n) x; 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> y \\<in> orbit f x", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>?y = (f ^^ n) x; 0 < n\\<rbrakk>\n  \\<Longrightarrow> ?y \\<in> orbit f x\n  y = (f ^^ Suc n) x\n  0 < Suc n\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>y = (f ^^ 0) x; 0 < 0\\<rbrakk>\n       \\<Longrightarrow> y \\<in> orbit f x\n 2. \\<And>n y.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y = (f ^^ n) x; 0 < n\\<rbrakk>\n                   \\<Longrightarrow> y \\<in> orbit f x;\n        y = (f ^^ Suc n) x; 0 < Suc n\\<rbrakk>\n       \\<Longrightarrow> y \\<in> orbit f x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?y = (f ^^ n) x; 0 < n\\<rbrakk>\n  \\<Longrightarrow> ?y \\<in> orbit f x\n  y = (f ^^ Suc n) x\n  0 < Suc n", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y = (f ^^ n) x; 0 < n\\<rbrakk>\n  \\<Longrightarrow> ?y \\<in> orbit f x\n  y = (f ^^ Suc n) x\n  0 < Suc n\n\ngoal (1 subgoal):\n 1. y \\<in> orbit f x", "by (cases \"n = 0\") (auto intro: orbit.intros)"], ["proof (state)\nthis:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y = (f ^^ 0) x; 0 < 0\\<rbrakk>\n       \\<Longrightarrow> y \\<in> orbit f x", "qed simp"], ["proof (state)\nthis:\n  y \\<in> orbit f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma orbit_trans:\n  assumes \"s \\<in> orbit f t\" \"t \\<in> orbit f u\" shows \"s \\<in> orbit f u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> orbit f u", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> orbit f t\n  t \\<in> orbit f u\n\ngoal (1 subgoal):\n 1. s \\<in> orbit f u", "by induct (auto intro: orbit.intros)"], ["", "lemma orbit_subset:\n  assumes \"s \\<in> orbit f (f t)\" shows \"s \\<in> orbit f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> orbit f t", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> orbit f (f t)\n\ngoal (1 subgoal):\n 1. s \\<in> orbit f t", "by (induct) (auto intro: orbit.intros)"], ["", "lemma orbit_sim_step:\n  assumes \"s \\<in> orbit f t\" shows \"f s \\<in> orbit f (f t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f s \\<in> orbit f (f t)", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> orbit f t\n\ngoal (1 subgoal):\n 1. f s \\<in> orbit f (f t)", "by induct (auto intro: orbit.intros)"], ["", "lemma orbit_step:\n  assumes \"y \\<in> orbit f x\" \"f x \\<noteq> y\" shows \"y \\<in> orbit f (f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> orbit f (f x)", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n  f x \\<noteq> y\n\ngoal (1 subgoal):\n 1. y \\<in> orbit f (f x)", "proof induction"], ["proof (state)\ngoal (2 subgoals):\n 1. f x \\<noteq> f x \\<Longrightarrow> f x \\<in> orbit f (f x)\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f x;\n        f x \\<noteq> y \\<Longrightarrow> y \\<in> orbit f (f x);\n        f x \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> f y \\<in> orbit f (f x)", "case (step y)"], ["proof (state)\nthis:\n  y \\<in> orbit f x\n  f x \\<noteq> y \\<Longrightarrow> y \\<in> orbit f (f x)\n  f x \\<noteq> f y\n\ngoal (2 subgoals):\n 1. f x \\<noteq> f x \\<Longrightarrow> f x \\<in> orbit f (f x)\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f x;\n        f x \\<noteq> y \\<Longrightarrow> y \\<in> orbit f (f x);\n        f x \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> f y \\<in> orbit f (f x)", "then"], ["proof (chain)\npicking this:\n  y \\<in> orbit f x\n  f x \\<noteq> y \\<Longrightarrow> y \\<in> orbit f (f x)\n  f x \\<noteq> f y", "show ?case"], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n  f x \\<noteq> y \\<Longrightarrow> y \\<in> orbit f (f x)\n  f x \\<noteq> f y\n\ngoal (1 subgoal):\n 1. f y \\<in> orbit f (f x)", "by (cases \"x = y\") (auto intro: orbit.intros)"], ["proof (state)\nthis:\n  f y \\<in> orbit f (f x)\n\ngoal (1 subgoal):\n 1. f x \\<noteq> f x \\<Longrightarrow> f x \\<in> orbit f (f x)", "qed simp"], ["", "lemma self_in_orbit_trans:\n  assumes \"s \\<in> orbit f s\" \"t \\<in> orbit f s\" shows \"t \\<in> orbit f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> orbit f t", "using assms(2,1)"], ["proof (prove)\nusing this:\n  t \\<in> orbit f s\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. t \\<in> orbit f t", "by induct (auto intro: orbit_sim_step)"], ["", "lemma orbit_swap:\n  assumes \"s \\<in> orbit f s\" \"t \\<in> orbit f s\" shows \"s \\<in> orbit f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> orbit f t", "using assms(2,1)"], ["proof (prove)\nusing this:\n  t \\<in> orbit f s\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. s \\<in> orbit f t", "proof induction"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f (f s)\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f s;\n        s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f y;\n        s \\<in> orbit f s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> orbit f (f y)", "case base"], ["proof (state)\nthis:\n  s \\<in> orbit f s\n\ngoal (2 subgoals):\n 1. s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f (f s)\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f s;\n        s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f y;\n        s \\<in> orbit f s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> orbit f (f y)", "then"], ["proof (chain)\npicking this:\n  s \\<in> orbit f s", "show ?case"], ["proof (prove)\nusing this:\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. s \\<in> orbit f (f s)", "by (cases \"f s = s\") (auto intro: orbit_step)"], ["proof (state)\nthis:\n  s \\<in> orbit f (f s)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f s;\n        s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f y;\n        s \\<in> orbit f s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> orbit f (f y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f s;\n        s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f y;\n        s \\<in> orbit f s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> orbit f (f y)", "case (step x)"], ["proof (state)\nthis:\n  x \\<in> orbit f s\n  s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f x\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f s;\n        s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f y;\n        s \\<in> orbit f s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> orbit f (f y)", "then"], ["proof (chain)\npicking this:\n  x \\<in> orbit f s\n  s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f x\n  s \\<in> orbit f s", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> orbit f s\n  s \\<in> orbit f s \\<Longrightarrow> s \\<in> orbit f x\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. s \\<in> orbit f (f x)", "by (cases \"f x = s\") (auto intro: orbit_step)"], ["proof (state)\nthis:\n  s \\<in> orbit f (f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma permutation_self_in_orbit:\n  assumes \"permutation f\" shows \"s \\<in> orbit f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> orbit f s", "unfolding orbit_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> {(f ^^ n) s |n. 0 < n}", "using permutation_self[OF assms, of s]"], ["proof (prove)\nusing this:\n  \\<exists>n>0. (f ^^ n) s = s\n\ngoal (1 subgoal):\n 1. s \\<in> {(f ^^ n) s |n. 0 < n}", "by simp metis"], ["", "lemma orbit_altdef_self_in:\n  assumes \"s \\<in> orbit f s\" shows \"orbit f s = {(f ^^ n) s | n. True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ n) s |n. True}", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> orbit f s \\<Longrightarrow> x \\<in> {(f ^^ n) s |n. True}\n 2. \\<And>x.\n       x \\<in> {(f ^^ n) s |n. True} \\<Longrightarrow> x \\<in> orbit f s", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> orbit f s \\<Longrightarrow> x \\<in> {(f ^^ n) s |n. True}\n 2. \\<And>x.\n       x \\<in> {(f ^^ n) s |n. True} \\<Longrightarrow> x \\<in> orbit f s", "assume \"x \\<in> {(f ^^ n) s | n. True}\""], ["proof (state)\nthis:\n  x \\<in> {(f ^^ n) s |n. True}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> orbit f s \\<Longrightarrow> x \\<in> {(f ^^ n) s |n. True}\n 2. \\<And>x.\n       x \\<in> {(f ^^ n) s |n. True} \\<Longrightarrow> x \\<in> orbit f s", "then"], ["proof (chain)\npicking this:\n  x \\<in> {(f ^^ n) s |n. True}", "obtain n where \"x = (f ^^ n) s\""], ["proof (prove)\nusing this:\n  x \\<in> {(f ^^ n) s |n. True}\n\ngoal (1 subgoal):\n 1. (\\<And>n. x = (f ^^ n) s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = (f ^^ n) s\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> orbit f s \\<Longrightarrow> x \\<in> {(f ^^ n) s |n. True}\n 2. \\<And>x.\n       x \\<in> {(f ^^ n) s |n. True} \\<Longrightarrow> x \\<in> orbit f s", "then"], ["proof (chain)\npicking this:\n  x = (f ^^ n) s", "show \"x \\<in> orbit f s\""], ["proof (prove)\nusing this:\n  x = (f ^^ n) s\n\ngoal (1 subgoal):\n 1. x \\<in> orbit f s", "using assms"], ["proof (prove)\nusing this:\n  x = (f ^^ n) s\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. x \\<in> orbit f s", "by (cases \"n = 0\") (auto simp: orbit_altdef)"], ["proof (state)\nthis:\n  x \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orbit f s \\<Longrightarrow> x \\<in> {(f ^^ n) s |n. True}", "qed (auto simp: orbit_altdef)"], ["", "lemma orbit_altdef_permutation:\n  assumes \"permutation f\" shows \"orbit f s = {(f ^^ n) s | n. True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ n) s |n. True}", "using assms"], ["proof (prove)\nusing this:\n  permutation f\n\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ n) s |n. True}", "by (intro orbit_altdef_self_in permutation_self_in_orbit)"], ["", "lemma orbit_altdef_bounded:\n  assumes \"(f ^^ n) s = s\" \"0 < n\" shows \"orbit f s = {(f ^^ m) s| m. m < n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ m) s |m. m < n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ m) s |m. m < n}", "from assms"], ["proof (chain)\npicking this:\n  (f ^^ n) s = s\n  0 < n", "have \"s \\<in> orbit f s\""], ["proof (prove)\nusing this:\n  (f ^^ n) s = s\n  0 < n\n\ngoal (1 subgoal):\n 1. s \\<in> orbit f s", "unfolding orbit_altdef"], ["proof (prove)\nusing this:\n  (f ^^ n) s = s\n  0 < n\n\ngoal (1 subgoal):\n 1. s \\<in> {(f ^^ n) s |n. 0 < n}", "by auto metis"], ["proof (state)\nthis:\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ m) s |m. m < n}", "then"], ["proof (chain)\npicking this:\n  s \\<in> orbit f s", "have \"orbit f s = {(f ^^ m) s|m. True}\""], ["proof (prove)\nusing this:\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ m) s |m. True}", "by (rule orbit_altdef_self_in)"], ["proof (state)\nthis:\n  orbit f s = {(f ^^ m) s |m. True}\n\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ m) s |m. m < n}", "also"], ["proof (state)\nthis:\n  orbit f s = {(f ^^ m) s |m. True}\n\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ m) s |m. m < n}", "have \"\\<dots> = {(f ^^ m) s| m. m < n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(f ^^ m) s |m. True} = {(f ^^ m) s |m. m < n}", "using assms"], ["proof (prove)\nusing this:\n  (f ^^ n) s = s\n  0 < n\n\ngoal (1 subgoal):\n 1. {(f ^^ m) s |m. True} = {(f ^^ m) s |m. m < n}", "by (auto simp: funpow_mod_eq intro: exI[where x=\"m mod n\" for m])"], ["proof (state)\nthis:\n  {(f ^^ m) s |m. True} = {(f ^^ m) s |m. m < n}\n\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ m) s |m. m < n}", "finally"], ["proof (chain)\npicking this:\n  orbit f s = {(f ^^ m) s |m. m < n}", "show ?thesis"], ["proof (prove)\nusing this:\n  orbit f s = {(f ^^ m) s |m. m < n}\n\ngoal (1 subgoal):\n 1. orbit f s = {(f ^^ m) s |m. m < n}", "."], ["proof (state)\nthis:\n  orbit f s = {(f ^^ m) s |m. m < n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma funpow_in_orbit:\n  assumes \"s \\<in> orbit f t\" shows \"(f ^^ n) s \\<in> orbit f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) s \\<in> orbit f t", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> orbit f t\n\ngoal (1 subgoal):\n 1. (f ^^ n) s \\<in> orbit f t", "by (induct n) (auto intro: orbit.intros)"], ["", "lemma finite_orbit:\n  assumes \"s \\<in> orbit f s\" shows \"finite (orbit f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (orbit f s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (orbit f s)", "from assms"], ["proof (chain)\npicking this:\n  s \\<in> orbit f s", "obtain n where n: \"0 < n\" \"(f ^^n) s = s\""], ["proof (prove)\nusing this:\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>0 < n; (f ^^ n) s = s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: orbit_altdef)"], ["proof (state)\nthis:\n  0 < n\n  (f ^^ n) s = s\n\ngoal (1 subgoal):\n 1. finite (orbit f s)", "then"], ["proof (chain)\npicking this:\n  0 < n\n  (f ^^ n) s = s", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < n\n  (f ^^ n) s = s\n\ngoal (1 subgoal):\n 1. finite (orbit f s)", "by (auto simp: orbit_altdef_bounded)"], ["proof (state)\nthis:\n  finite (orbit f s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma self_in_orbit_step:\n  assumes \"s \\<in> orbit f s\" shows \"orbit f (f s) = orbit f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f (f s) = orbit f s", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> orbit f (f s) \\<Longrightarrow> x \\<in> orbit f s\n 2. \\<And>x. x \\<in> orbit f s \\<Longrightarrow> x \\<in> orbit f (f s)", "fix t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> orbit f (f s) \\<Longrightarrow> x \\<in> orbit f s\n 2. \\<And>x. x \\<in> orbit f s \\<Longrightarrow> x \\<in> orbit f (f s)", "assume \"t \\<in> orbit f s\""], ["proof (state)\nthis:\n  t \\<in> orbit f s\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> orbit f (f s) \\<Longrightarrow> x \\<in> orbit f s\n 2. \\<And>x. x \\<in> orbit f s \\<Longrightarrow> x \\<in> orbit f (f s)", "then"], ["proof (chain)\npicking this:\n  t \\<in> orbit f s", "show \"t \\<in> orbit f (f s)\""], ["proof (prove)\nusing this:\n  t \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. t \\<in> orbit f (f s)", "using assms"], ["proof (prove)\nusing this:\n  t \\<in> orbit f s\n  s \\<in> orbit f s\n\ngoal (1 subgoal):\n 1. t \\<in> orbit f (f s)", "by (auto intro: orbit_step orbit_sim_step)"], ["proof (state)\nthis:\n  t \\<in> orbit f (f s)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> orbit f (f s) \\<Longrightarrow> x \\<in> orbit f s", "qed (auto intro: orbit_subset)"], ["", "lemma permutation_orbit_step:\n  assumes \"permutation f\" shows \"orbit f (f s) = orbit f s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f (f s) = orbit f s", "using assms"], ["proof (prove)\nusing this:\n  permutation f\n\ngoal (1 subgoal):\n 1. orbit f (f s) = orbit f s", "by (intro self_in_orbit_step permutation_self_in_orbit)"], ["", "lemma orbit_nonempty:\n  \"orbit f s \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f s \\<noteq> {}", "using orbit.base"], ["proof (prove)\nusing this:\n  ?f ?x \\<in> orbit ?f ?x\n\ngoal (1 subgoal):\n 1. orbit f s \\<noteq> {}", "by fastforce"], ["", "lemma orbit_inv_eq:\n  assumes \"permutation f\"\n  shows \"orbit (inv f) x = orbit f x\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "fix g y"], ["proof (state)\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "assume A: \"permutation g\" \"y \\<in> orbit (inv g) x\""], ["proof (state)\nthis:\n  permutation g\n  y \\<in> orbit (inv g) x\n\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "have \"y \\<in> orbit g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> orbit g x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> orbit g x", "have inv_g: \"\\<And>y. x = g y \\<Longrightarrow> inv g x = y\" \"\\<And>y. inv g (g y) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y. x = g y \\<Longrightarrow> inv g x = y) &&&\n    (\\<And>y. inv g (g y) = y)", "by (metis A(1) bij_inv_eq_iff permutation_bijective)+"], ["proof (state)\nthis:\n  x = g ?y \\<Longrightarrow> inv g x = ?y\n  inv g (g ?y) = ?y\n\ngoal (1 subgoal):\n 1. y \\<in> orbit g x", "{"], ["proof (state)\nthis:\n  x = g ?y \\<Longrightarrow> inv g x = ?y\n  inv g (g ?y) = ?y\n\ngoal (1 subgoal):\n 1. y \\<in> orbit g x", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. y__ \\<in> orbit g x", "assume \"y \\<in> orbit g x\""], ["proof (state)\nthis:\n  y \\<in> orbit g x\n\ngoal (1 subgoal):\n 1. y__ \\<in> orbit g x", "then"], ["proof (chain)\npicking this:\n  y \\<in> orbit g x", "have \"inv g y \\<in> orbit g x\""], ["proof (prove)\nusing this:\n  y \\<in> orbit g x\n\ngoal (1 subgoal):\n 1. inv g y \\<in> orbit g x", "by (cases) (simp_all add: inv_g A(1) permutation_self_in_orbit)"], ["proof (state)\nthis:\n  inv g y \\<in> orbit g x\n\ngoal (1 subgoal):\n 1. y__ \\<in> orbit g x", "}"], ["proof (state)\nthis:\n  ?ya2 \\<in> orbit g x \\<Longrightarrow> inv g ?ya2 \\<in> orbit g x\n\ngoal (1 subgoal):\n 1. y \\<in> orbit g x", "note inv_g_in_orb = this"], ["proof (state)\nthis:\n  ?ya2 \\<in> orbit g x \\<Longrightarrow> inv g ?ya2 \\<in> orbit g x\n\ngoal (1 subgoal):\n 1. y \\<in> orbit g x", "from A(2)"], ["proof (chain)\npicking this:\n  y \\<in> orbit (inv g) x", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> orbit (inv g) x\n\ngoal (1 subgoal):\n 1. y \\<in> orbit g x", "by induct (simp_all add: inv_g_in_orb A permutation_self_in_orbit)"], ["proof (state)\nthis:\n  y \\<in> orbit g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<in> orbit g x\n\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "}"], ["proof (state)\nthis:\n  \\<lbrakk>permutation ?g2; ?y2 \\<in> orbit (inv ?g2) x\\<rbrakk>\n  \\<Longrightarrow> ?y2 \\<in> orbit ?g2 x\n\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "note orb_inv_ss = this"], ["proof (state)\nthis:\n  \\<lbrakk>permutation ?g2; ?y2 \\<in> orbit (inv ?g2) x\\<rbrakk>\n  \\<Longrightarrow> ?y2 \\<in> orbit ?g2 x\n\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "have \"inv (inv f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv (inv f) = f", "by (simp add: assms inv_inv_eq permutation_bijective)"], ["proof (state)\nthis:\n  inv (inv f) = f\n\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "then"], ["proof (chain)\npicking this:\n  inv (inv f) = f", "show ?thesis"], ["proof (prove)\nusing this:\n  inv (inv f) = f\n\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "using orb_inv_ss[OF assms] orb_inv_ss[OF permutation_inverse[OF assms]]"], ["proof (prove)\nusing this:\n  inv (inv f) = f\n  ?y2 \\<in> orbit (inv f) x \\<Longrightarrow> ?y2 \\<in> orbit f x\n  ?y2 \\<in> orbit (inv (inv f)) x \\<Longrightarrow>\n  ?y2 \\<in> orbit (inv f) x\n\ngoal (1 subgoal):\n 1. orbit (inv f) x = orbit f x", "by auto"], ["proof (state)\nthis:\n  orbit (inv f) x = orbit f x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cyclic_on_alldef:\n  \"cyclic_on f S \\<longleftrightarrow> S \\<noteq> {} \\<and> (\\<forall>s\\<in>S. S = orbit f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on f S = (S \\<noteq> {} \\<and> (\\<forall>s\\<in>S. S = orbit f s))", "unfolding cyclic_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>s\\<in>S. S = orbit f s) =\n    (S \\<noteq> {} \\<and> (\\<forall>s\\<in>S. S = orbit f s))", "by (auto intro: orbit.step orbit_swap orbit_trans)"], ["", "lemma cyclic_on_funpow_in:\n  assumes \"cyclic_on f S\" \"s \\<in> S\" shows \"(f^^n) s \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) s \\<in> S", "using assms"], ["proof (prove)\nusing this:\n  cyclic_on f S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. (f ^^ n) s \\<in> S", "unfolding cyclic_on_def"], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>S. S = orbit f s\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. (f ^^ n) s \\<in> S", "by (auto intro: funpow_in_orbit)"], ["", "lemma finite_cyclic_on:\n  assumes \"cyclic_on f S\" shows \"finite S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S", "using assms"], ["proof (prove)\nusing this:\n  cyclic_on f S\n\ngoal (1 subgoal):\n 1. finite S", "by (auto simp: cyclic_on_def finite_orbit)"], ["", "lemma cyclic_on_singleI:\n  assumes \"s \\<in> S\" \"S = orbit f s\" shows \"cyclic_on f S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on f S", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> S\n  S = orbit f s\n\ngoal (1 subgoal):\n 1. cyclic_on f S", "unfolding cyclic_on_def"], ["proof (prove)\nusing this:\n  s \\<in> S\n  S = orbit f s\n\ngoal (1 subgoal):\n 1. \\<exists>s\\<in>S. S = orbit f s", "by blast"], ["", "lemma inj_on_funpow_least:\n  assumes \"(f ^^ n) s = s\" \"\\<And>m. \\<lbrakk>m < n; 0 < m\\<rbrakk> \\<Longrightarrow> (f ^^ m) s \\<noteq> s\"\n  shows \"inj_on (\\<lambda>k. (f^^k) s) {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "fix k l"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "assume A: \"k < n\" \"l < n\" \"k \\<noteq> l\" \"(f ^^ k) s = (f ^^ l) s\""], ["proof (state)\nthis:\n  k < n\n  l < n\n  k \\<noteq> l\n  (f ^^ k) s = (f ^^ l) s\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "define k' l' where \"k' = min k l\" and \"l' = max k l\""], ["proof (state)\nthis:\n  k' = min k l\n  l' = max k l\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "with A"], ["proof (chain)\npicking this:\n  k < n\n  l < n\n  k \\<noteq> l\n  (f ^^ k) s = (f ^^ l) s\n  k' = min k l\n  l' = max k l", "have A': \"k' < l'\" \"(f ^^ k') s = (f ^^ l') s\" \"l' < n\""], ["proof (prove)\nusing this:\n  k < n\n  l < n\n  k \\<noteq> l\n  (f ^^ k) s = (f ^^ l) s\n  k' = min k l\n  l' = max k l\n\ngoal (1 subgoal):\n 1. k' < l' &&& (f ^^ k') s = (f ^^ l') s &&& l' < n", "by (auto simp: min_def max_def)"], ["proof (state)\nthis:\n  k' < l'\n  (f ^^ k') s = (f ^^ l') s\n  l' < n\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "have \"s = (f ^^ ((n - l') + l')) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = (f ^^ (n - l' + l')) s", "using assms \\<open>l' < n\\<close>"], ["proof (prove)\nusing this:\n  (f ^^ n) s = s\n  \\<lbrakk>?m < n; 0 < ?m\\<rbrakk> \\<Longrightarrow> (f ^^ ?m) s \\<noteq> s\n  l' < n\n\ngoal (1 subgoal):\n 1. s = (f ^^ (n - l' + l')) s", "by simp"], ["proof (state)\nthis:\n  s = (f ^^ (n - l' + l')) s\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "also"], ["proof (state)\nthis:\n  s = (f ^^ (n - l' + l')) s\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "have \"\\<dots> = (f ^^ (n - l')) ((f ^^ l') s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (n - l' + l')) s = (f ^^ (n - l')) ((f ^^ l') s)", "by (simp add: funpow_add)"], ["proof (state)\nthis:\n  (f ^^ (n - l' + l')) s = (f ^^ (n - l')) ((f ^^ l') s)\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "also"], ["proof (state)\nthis:\n  (f ^^ (n - l' + l')) s = (f ^^ (n - l')) ((f ^^ l') s)\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "have \"(f ^^ l') s = (f ^^ k') s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ l') s = (f ^^ k') s", "by (simp add: A')"], ["proof (state)\nthis:\n  (f ^^ l') s = (f ^^ k') s\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "also"], ["proof (state)\nthis:\n  (f ^^ l') s = (f ^^ k') s\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "have \"(f ^^ (n - l')) \\<dots> = (f ^^ (n - l' + k')) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (n - l')) ((f ^^ k') s) = (f ^^ (n - l' + k')) s", "by (simp add: funpow_add)"], ["proof (state)\nthis:\n  (f ^^ (n - l')) ((f ^^ k') s) = (f ^^ (n - l' + k')) s\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "finally"], ["proof (chain)\npicking this:\n  s = (f ^^ (n - l' + k')) s", "have \"(f ^^ (n - l' + k')) s = s\""], ["proof (prove)\nusing this:\n  s = (f ^^ (n - l' + k')) s\n\ngoal (1 subgoal):\n 1. (f ^^ (n - l' + k')) s = s", "by simp"], ["proof (state)\nthis:\n  (f ^^ (n - l' + k')) s = s\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "moreover"], ["proof (state)\nthis:\n  (f ^^ (n - l' + k')) s = s\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "have \"n - l' + k' < n\" \"0 < n - l' + k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n - l' + k' < n &&& 0 < n - l' + k'", "using A'"], ["proof (prove)\nusing this:\n  k' < l'\n  (f ^^ k') s = (f ^^ l') s\n  l' < n\n\ngoal (1 subgoal):\n 1. n - l' + k' < n &&& 0 < n - l' + k'", "by linarith+"], ["proof (state)\nthis:\n  n - l' + k' < n\n  0 < n - l' + k'\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "ultimately"], ["proof (chain)\npicking this:\n  (f ^^ (n - l' + k')) s = s\n  n - l' + k' < n\n  0 < n - l' + k'", "have False"], ["proof (prove)\nusing this:\n  (f ^^ (n - l' + k')) s = s\n  n - l' + k' < n\n  0 < n - l' + k'\n\ngoal (1 subgoal):\n 1. False", "using assms(2)"], ["proof (prove)\nusing this:\n  (f ^^ (n - l' + k')) s = s\n  n - l' + k' < n\n  0 < n - l' + k'\n  \\<lbrakk>?m < n; 0 < ?m\\<rbrakk> \\<Longrightarrow> (f ^^ ?m) s \\<noteq> s\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?k2 < n; ?l2 < n; ?k2 \\<noteq> ?l2;\n   (f ^^ ?k2) s = (f ^^ ?l2) s\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?k2 < n; ?l2 < n; ?k2 \\<noteq> ?l2;\n   (f ^^ ?k2) s = (f ^^ ?l2) s\\<rbrakk>\n  \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?k2 < n; ?l2 < n; ?k2 \\<noteq> ?l2;\n   (f ^^ ?k2) s = (f ^^ ?l2) s\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}", "by (intro inj_onI) auto"], ["proof (state)\nthis:\n  inj_on (\\<lambda>k. (f ^^ k) s) {0..<n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cyclic_on_inI:\n  assumes \"cyclic_on f S\" \"s \\<in> S\" shows \"f s \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f s \\<in> S", "using assms"], ["proof (prove)\nusing this:\n  cyclic_on f S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. f s \\<in> S", "by (auto simp: cyclic_on_def intro: orbit.intros)"], ["", "lemma bij_betw_funpow:\n  assumes \"bij_betw f S S\" shows \"bij_betw (f ^^ n) S S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (f ^^ n) S S", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. bij_betw (f ^^ 0) S S\n 2. \\<And>n.\n       bij_betw (f ^^ n) S S \\<Longrightarrow> bij_betw (f ^^ Suc n) S S", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. bij_betw (f ^^ 0) S S\n 2. \\<And>n.\n       bij_betw (f ^^ n) S S \\<Longrightarrow> bij_betw (f ^^ Suc n) S S", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (f ^^ 0) S S", "by (auto simp: id_def[symmetric])"], ["proof (state)\nthis:\n  bij_betw (f ^^ 0) S S\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       bij_betw (f ^^ n) S S \\<Longrightarrow> bij_betw (f ^^ Suc n) S S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       bij_betw (f ^^ n) S S \\<Longrightarrow> bij_betw (f ^^ Suc n) S S", "case (Suc n)"], ["proof (state)\nthis:\n  bij_betw (f ^^ n) S S\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       bij_betw (f ^^ n) S S \\<Longrightarrow> bij_betw (f ^^ Suc n) S S", "then"], ["proof (chain)\npicking this:\n  bij_betw (f ^^ n) S S", "show ?case"], ["proof (prove)\nusing this:\n  bij_betw (f ^^ n) S S\n\ngoal (1 subgoal):\n 1. bij_betw (f ^^ Suc n) S S", "unfolding funpow.simps"], ["proof (prove)\nusing this:\n  bij_betw (f ^^ n) S S\n\ngoal (1 subgoal):\n 1. bij_betw (f \\<circ> f ^^ n) S S", "using assms"], ["proof (prove)\nusing this:\n  bij_betw (f ^^ n) S S\n  bij_betw f S S\n\ngoal (1 subgoal):\n 1. bij_betw (f \\<circ> f ^^ n) S S", "by (rule bij_betw_trans)"], ["proof (state)\nthis:\n  bij_betw (f ^^ Suc n) S S\n\ngoal:\nNo subgoals!", "qed"], ["", "(*XXX rename move*)"], ["", "lemma orbit_FOO:\n  assumes self:\"a \\<in> orbit g a\"\n    and eq: \"\\<And>x. x \\<in> orbit g a \\<Longrightarrow>  g' (f x) = f (g x)\"\n  shows \"f ` orbit g a = orbit g' (f a)\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` orbit g a = orbit g' (f a)", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> f ` orbit g a \\<Longrightarrow> x \\<in> orbit g' (f a)\n 2. \\<And>x. x \\<in> orbit g' (f a) \\<Longrightarrow> x \\<in> f ` orbit g a", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> f ` orbit g a \\<Longrightarrow> x \\<in> orbit g' (f a)\n 2. \\<And>x. x \\<in> orbit g' (f a) \\<Longrightarrow> x \\<in> f ` orbit g a", "assume \"x \\<in> ?L\""], ["proof (state)\nthis:\n  x \\<in> f ` orbit g a\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> f ` orbit g a \\<Longrightarrow> x \\<in> orbit g' (f a)\n 2. \\<And>x. x \\<in> orbit g' (f a) \\<Longrightarrow> x \\<in> f ` orbit g a", "then"], ["proof (chain)\npicking this:\n  x \\<in> f ` orbit g a", "obtain x0 where \"x0 \\<in> orbit g a\" \"x = f x0\""], ["proof (prove)\nusing this:\n  x \\<in> f ` orbit g a\n\ngoal (1 subgoal):\n 1. (\\<And>x0.\n        \\<lbrakk>x0 \\<in> orbit g a; x = f x0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x0 \\<in> orbit g a\n  x = f x0\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> f ` orbit g a \\<Longrightarrow> x \\<in> orbit g' (f a)\n 2. \\<And>x. x \\<in> orbit g' (f a) \\<Longrightarrow> x \\<in> f ` orbit g a", "then"], ["proof (chain)\npicking this:\n  x0 \\<in> orbit g a\n  x = f x0", "show \"x \\<in> ?R\""], ["proof (prove)\nusing this:\n  x0 \\<in> orbit g a\n  x = f x0\n\ngoal (1 subgoal):\n 1. x \\<in> orbit g' (f a)", "proof (induct arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x = f (g a) \\<Longrightarrow> x \\<in> orbit g' (f a)\n 2. \\<And>y x.\n       \\<lbrakk>y \\<in> orbit g a;\n        \\<And>x. x = f y \\<Longrightarrow> x \\<in> orbit g' (f a);\n        x = f (g y)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> orbit g' (f a)", "case base"], ["proof (state)\nthis:\n  x = f (g a)\n\ngoal (2 subgoals):\n 1. \\<And>x. x = f (g a) \\<Longrightarrow> x \\<in> orbit g' (f a)\n 2. \\<And>y x.\n       \\<lbrakk>y \\<in> orbit g a;\n        \\<And>x. x = f y \\<Longrightarrow> x \\<in> orbit g' (f a);\n        x = f (g y)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> orbit g' (f a)", "then"], ["proof (chain)\npicking this:\n  x = f (g a)", "show ?case"], ["proof (prove)\nusing this:\n  x = f (g a)\n\ngoal (1 subgoal):\n 1. x \\<in> orbit g' (f a)", "by (auto simp: self orbit.base eq[symmetric])"], ["proof (state)\nthis:\n  x \\<in> orbit g' (f a)\n\ngoal (1 subgoal):\n 1. \\<And>y x.\n       \\<lbrakk>y \\<in> orbit g a;\n        \\<And>x. x = f y \\<Longrightarrow> x \\<in> orbit g' (f a);\n        x = f (g y)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> orbit g' (f a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y x.\n       \\<lbrakk>y \\<in> orbit g a;\n        \\<And>x. x = f y \\<Longrightarrow> x \\<in> orbit g' (f a);\n        x = f (g y)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> orbit g' (f a)", "case step"], ["proof (state)\nthis:\n  y_ \\<in> orbit g a\n  ?x = f y_ \\<Longrightarrow> ?x \\<in> orbit g' (f a)\n  x = f (g y_)\n\ngoal (1 subgoal):\n 1. \\<And>y x.\n       \\<lbrakk>y \\<in> orbit g a;\n        \\<And>x. x = f y \\<Longrightarrow> x \\<in> orbit g' (f a);\n        x = f (g y)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> orbit g' (f a)", "then"], ["proof (chain)\npicking this:\n  y_ \\<in> orbit g a\n  ?x = f y_ \\<Longrightarrow> ?x \\<in> orbit g' (f a)\n  x = f (g y_)", "show ?case"], ["proof (prove)\nusing this:\n  y_ \\<in> orbit g a\n  ?x = f y_ \\<Longrightarrow> ?x \\<in> orbit g' (f a)\n  x = f (g y_)\n\ngoal (1 subgoal):\n 1. x \\<in> orbit g' (f a)", "by cases (auto simp: eq[symmetric] orbit.intros)"], ["proof (state)\nthis:\n  x \\<in> orbit g' (f a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> orbit g' (f a)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> orbit g' (f a) \\<Longrightarrow> x \\<in> f ` orbit g a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> orbit g' (f a) \\<Longrightarrow> x \\<in> f ` orbit g a", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> orbit g' (f a) \\<Longrightarrow> x \\<in> f ` orbit g a", "assume \"x \\<in> ?R\""], ["proof (state)\nthis:\n  x \\<in> orbit g' (f a)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> orbit g' (f a) \\<Longrightarrow> x \\<in> f ` orbit g a", "then"], ["proof (chain)\npicking this:\n  x \\<in> orbit g' (f a)", "show \"x \\<in> ?L\""], ["proof (prove)\nusing this:\n  x \\<in> orbit g' (f a)\n\ngoal (1 subgoal):\n 1. x \\<in> f ` orbit g a", "proof (induct arbitrary: )"], ["proof (state)\ngoal (2 subgoals):\n 1. g' (f a) \\<in> f ` orbit g a\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit g' (f a); y \\<in> f ` orbit g a\\<rbrakk>\n       \\<Longrightarrow> g' y \\<in> f ` orbit g a", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. g' (f a) \\<in> f ` orbit g a\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit g' (f a); y \\<in> f ` orbit g a\\<rbrakk>\n       \\<Longrightarrow> g' y \\<in> f ` orbit g a", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. g' (f a) \\<in> f ` orbit g a", "by (auto simp: self orbit.base eq)"], ["proof (state)\nthis:\n  g' (f a) \\<in> f ` orbit g a\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit g' (f a); y \\<in> f ` orbit g a\\<rbrakk>\n       \\<Longrightarrow> g' y \\<in> f ` orbit g a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit g' (f a); y \\<in> f ` orbit g a\\<rbrakk>\n       \\<Longrightarrow> g' y \\<in> f ` orbit g a", "case step"], ["proof (state)\nthis:\n  y_ \\<in> orbit g' (f a)\n  y_ \\<in> f ` orbit g a\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit g' (f a); y \\<in> f ` orbit g a\\<rbrakk>\n       \\<Longrightarrow> g' y \\<in> f ` orbit g a", "then"], ["proof (chain)\npicking this:\n  y_ \\<in> orbit g' (f a)\n  y_ \\<in> f ` orbit g a", "show ?case"], ["proof (prove)\nusing this:\n  y_ \\<in> orbit g' (f a)\n  y_ \\<in> f ` orbit g a\n\ngoal (1 subgoal):\n 1. g' y_ \\<in> f ` orbit g a", "by cases (auto simp: eq orbit.intros)"], ["proof (state)\nthis:\n  g' y_ \\<in> f ` orbit g a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> f ` orbit g a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cyclic_on_FOO:\n  assumes \"cyclic_on f S\"\n  assumes \"\\<And>x. x \\<in> S \\<Longrightarrow> g (h x) = h (f x)\"\n  shows \"cyclic_on g (h ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on g (h ` S)", "using assms"], ["proof (prove)\nusing this:\n  cyclic_on f S\n  ?x \\<in> S \\<Longrightarrow> g (h ?x) = h (f ?x)\n\ngoal (1 subgoal):\n 1. cyclic_on g (h ` S)", "by (auto simp: cyclic_on_def) (meson orbit_FOO)"], ["", "lemma cyclic_on_f_in:\n  assumes \"f permutes S\" \"cyclic_on f A\" \"f x \\<in> A\"\n  shows \"x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> A", "from assms"], ["proof (chain)\npicking this:\n  f permutes S\n  cyclic_on f A\n  f x \\<in> A", "have fx_in_orb: \"f x \\<in> orbit f (f x)\""], ["proof (prove)\nusing this:\n  f permutes S\n  cyclic_on f A\n  f x \\<in> A\n\ngoal (1 subgoal):\n 1. f x \\<in> orbit f (f x)", "by (auto simp: cyclic_on_alldef)"], ["proof (state)\nthis:\n  f x \\<in> orbit f (f x)\n\ngoal (1 subgoal):\n 1. x \\<in> A", "from assms"], ["proof (chain)\npicking this:\n  f permutes S\n  cyclic_on f A\n  f x \\<in> A", "have \"A = orbit f (f x)\""], ["proof (prove)\nusing this:\n  f permutes S\n  cyclic_on f A\n  f x \\<in> A\n\ngoal (1 subgoal):\n 1. A = orbit f (f x)", "by (auto simp: cyclic_on_alldef)"], ["proof (state)\nthis:\n  A = orbit f (f x)\n\ngoal (1 subgoal):\n 1. x \\<in> A", "moreover"], ["proof (state)\nthis:\n  A = orbit f (f x)\n\ngoal (1 subgoal):\n 1. x \\<in> A", "then"], ["proof (chain)\npicking this:\n  A = orbit f (f x)", "have \"\\<dots> = orbit f x\""], ["proof (prove)\nusing this:\n  A = orbit f (f x)\n\ngoal (1 subgoal):\n 1. orbit f (f x) = orbit f x", "using \\<open>f x \\<in> A\\<close>"], ["proof (prove)\nusing this:\n  A = orbit f (f x)\n  f x \\<in> A\n\ngoal (1 subgoal):\n 1. orbit f (f x) = orbit f x", "by (auto intro: orbit_step orbit_subset)"], ["proof (state)\nthis:\n  orbit f (f x) = orbit f x\n\ngoal (1 subgoal):\n 1. x \\<in> A", "ultimately"], ["proof (chain)\npicking this:\n  A = orbit f (f x)\n  orbit f (f x) = orbit f x", "show ?thesis"], ["proof (prove)\nusing this:\n  A = orbit f (f x)\n  orbit f (f x) = orbit f x\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by (metis (no_types) orbit.simps permutes_inverses(2)[OF assms(1)])"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma permutes_not_in:\n  assumes \"f permutes S\" \"x \\<notin> S\" shows \"f x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = x", "using assms"], ["proof (prove)\nusing this:\n  f permutes S\n  x \\<notin> S\n\ngoal (1 subgoal):\n 1. f x = x", "by (auto simp: permutes_def)"], ["", "lemma orbit_cong0:\n  assumes \"x \\<in> A\" \"f \\<in> A \\<rightarrow> A\" \"\\<And>y. y \\<in> A \\<Longrightarrow> f y = g y\" shows \"orbit f x = orbit g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f x = orbit g x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. orbit f x = orbit g x", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. orbit f x = orbit g x", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. orbit f x = orbit g x", "have \"(f ^^ n) x = (g ^^ n) x \\<and> (f ^^ n) x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) x = (g ^^ n) x \\<and> (f ^^ n) x \\<in> A", "by (induct n rule: nat.induct) (insert assms, auto)"], ["proof (state)\nthis:\n  (f ^^ n) x = (g ^^ n) x \\<and> (f ^^ n) x \\<in> A\n\ngoal (1 subgoal):\n 1. orbit f x = orbit g x", "}"], ["proof (state)\nthis:\n  (f ^^ ?n2) x = (g ^^ ?n2) x \\<and> (f ^^ ?n2) x \\<in> A\n\ngoal (1 subgoal):\n 1. orbit f x = orbit g x", "then"], ["proof (chain)\npicking this:\n  (f ^^ ?n2) x = (g ^^ ?n2) x \\<and> (f ^^ ?n2) x \\<in> A", "show ?thesis"], ["proof (prove)\nusing this:\n  (f ^^ ?n2) x = (g ^^ ?n2) x \\<and> (f ^^ ?n2) x \\<in> A\n\ngoal (1 subgoal):\n 1. orbit f x = orbit g x", "by (auto simp: orbit_altdef)"], ["proof (state)\nthis:\n  orbit f x = orbit g x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma orbit_cong:\n  assumes self_in: \"t \\<in> orbit f t\" and eq: \"\\<And>s. s \\<in> orbit f t \\<Longrightarrow> g s = f s\"\n  shows \"orbit g t = orbit f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit g t = orbit f t", "using assms(1) _ assms(2)"], ["proof (prove)\nusing this:\n  t \\<in> orbit f t\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ?s \\<in> orbit f t \\<Longrightarrow> g ?s = f ?s\n\ngoal (1 subgoal):\n 1. orbit g t = orbit f t", "by (rule orbit_cong0) (auto simp: orbit.step eq)"], ["", "lemma cyclic_cong:\n  assumes \"\\<And>s. s \\<in> S \\<Longrightarrow> f s = g s\" shows \"cyclic_on f S = cyclic_on g S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on f S = cyclic_on g S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cyclic_on f S = cyclic_on g S", "have \"(\\<exists>s\\<in>S. orbit f s = orbit g s) \\<Longrightarrow> cyclic_on f S = cyclic_on g S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s\\<in>S. orbit f s = orbit g s \\<Longrightarrow>\n    cyclic_on f S = cyclic_on g S", "by (metis cyclic_on_alldef cyclic_on_def)"], ["proof (state)\nthis:\n  \\<exists>s\\<in>S. orbit f s = orbit g s \\<Longrightarrow>\n  cyclic_on f S = cyclic_on g S\n\ngoal (1 subgoal):\n 1. cyclic_on f S = cyclic_on g S", "then"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>S. orbit f s = orbit g s \\<Longrightarrow>\n  cyclic_on f S = cyclic_on g S", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>S. orbit f s = orbit g s \\<Longrightarrow>\n  cyclic_on f S = cyclic_on g S\n\ngoal (1 subgoal):\n 1. cyclic_on f S = cyclic_on g S", "by (metis assms orbit_cong cyclic_on_def)"], ["proof (state)\nthis:\n  cyclic_on f S = cyclic_on g S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma permutes_comp_preserves_cyclic1:\n  assumes \"g permutes B\" \"cyclic_on f C\"\n  assumes \"A \\<inter> B = {}\" \"C \\<subseteq> A\"\n  shows \"cyclic_on (f o g) C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on (f \\<circ> g) C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cyclic_on (f \\<circ> g) C", "have *: \"\\<And>c. c \\<in> C \\<Longrightarrow> f (g c) = f c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> C \\<Longrightarrow> f (g c) = f c", "using assms"], ["proof (prove)\nusing this:\n  g permutes B\n  cyclic_on f C\n  A \\<inter> B = {}\n  C \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> C \\<Longrightarrow> f (g c) = f c", "by (subst permutes_not_in[where f=g]) auto"], ["proof (state)\nthis:\n  ?c \\<in> C \\<Longrightarrow> f (g ?c) = f ?c\n\ngoal (1 subgoal):\n 1. cyclic_on (f \\<circ> g) C", "with assms(2)"], ["proof (chain)\npicking this:\n  cyclic_on f C\n  ?c \\<in> C \\<Longrightarrow> f (g ?c) = f ?c", "show ?thesis"], ["proof (prove)\nusing this:\n  cyclic_on f C\n  ?c \\<in> C \\<Longrightarrow> f (g ?c) = f ?c\n\ngoal (1 subgoal):\n 1. cyclic_on (f \\<circ> g) C", "by (simp cong: cyclic_cong)"], ["proof (state)\nthis:\n  cyclic_on (f \\<circ> g) C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma permutes_comp_preserves_cyclic2:\n  assumes \"f permutes A\" \"cyclic_on g C\"\n  assumes \"A \\<inter> B = {}\" \"C \\<subseteq> B\"\n  shows \"cyclic_on (f o g) C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on (f \\<circ> g) C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cyclic_on (f \\<circ> g) C", "obtain c where c: \"c \\<in> C\" \"C = orbit g c\" \"c \\<in> orbit g c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> C; C = orbit g c; c \\<in> orbit g c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>cyclic_on g C\\<close>"], ["proof (prove)\nusing this:\n  cyclic_on g C\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> C; C = orbit g c; c \\<in> orbit g c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: cyclic_on_def)"], ["proof (state)\nthis:\n  c \\<in> C\n  C = orbit g c\n  c \\<in> orbit g c\n\ngoal (1 subgoal):\n 1. cyclic_on (f \\<circ> g) C", "then"], ["proof (chain)\npicking this:\n  c \\<in> C\n  C = orbit g c\n  c \\<in> orbit g c", "have \"\\<And>c. c \\<in> C \\<Longrightarrow> f (g c) = g c\""], ["proof (prove)\nusing this:\n  c \\<in> C\n  C = orbit g c\n  c \\<in> orbit g c\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> C \\<Longrightarrow> f (g c) = g c", "using assms c"], ["proof (prove)\nusing this:\n  c \\<in> C\n  C = orbit g c\n  c \\<in> orbit g c\n  f permutes A\n  cyclic_on g C\n  A \\<inter> B = {}\n  C \\<subseteq> B\n  c \\<in> C\n  C = orbit g c\n  c \\<in> orbit g c\n\ngoal (1 subgoal):\n 1. \\<And>c. c \\<in> C \\<Longrightarrow> f (g c) = g c", "by (subst permutes_not_in[where f=f]) (auto intro: orbit.intros)"], ["proof (state)\nthis:\n  ?c \\<in> C \\<Longrightarrow> f (g ?c) = g ?c\n\ngoal (1 subgoal):\n 1. cyclic_on (f \\<circ> g) C", "with assms(2)"], ["proof (chain)\npicking this:\n  cyclic_on g C\n  ?c \\<in> C \\<Longrightarrow> f (g ?c) = g ?c", "show ?thesis"], ["proof (prove)\nusing this:\n  cyclic_on g C\n  ?c \\<in> C \\<Longrightarrow> f (g ?c) = g ?c\n\ngoal (1 subgoal):\n 1. cyclic_on (f \\<circ> g) C", "by (simp cong: cyclic_cong)"], ["proof (state)\nthis:\n  cyclic_on (f \\<circ> g) C\n\ngoal:\nNo subgoals!", "qed"], ["", "(*XXX merge with previous section?*)"], ["", "subsection \\<open>Orbits\\<close>"], ["", "lemma permutes_orbit_subset:\n  assumes \"f permutes S\" \"x \\<in> S\" shows \"orbit f x \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f x \\<subseteq> S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> orbit f x \\<Longrightarrow> xa \\<in> S", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> orbit f x \\<Longrightarrow> xa \\<in> S", "assume \"y \\<in> orbit f x\""], ["proof (state)\nthis:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa \\<in> orbit f x \\<Longrightarrow> xa \\<in> S", "then"], ["proof (chain)\npicking this:\n  y \\<in> orbit f x", "show \"y \\<in> S\""], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. y \\<in> S", "by induct (auto simp: permutes_in_image assms)"], ["proof (state)\nthis:\n  y \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cyclic_on_orbit':\n  assumes \"permutation f\" shows \"cyclic_on f (orbit f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on f (orbit f x)", "unfolding cyclic_on_alldef"], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f x \\<noteq> {} \\<and>\n    (\\<forall>s\\<in>orbit f x. orbit f x = orbit f s)", "using orbit_nonempty[of f x]"], ["proof (prove)\nusing this:\n  orbit f x \\<noteq> {}\n\ngoal (1 subgoal):\n 1. orbit f x \\<noteq> {} \\<and>\n    (\\<forall>s\\<in>orbit f x. orbit f x = orbit f s)", "by (auto intro: assms orbit_swap orbit_trans permutation_self_in_orbit)"], ["", "(* XXX remove? *)"], ["", "lemma cyclic_on_orbit:\n  assumes \"f permutes S\" \"finite S\" shows \"cyclic_on f (orbit f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on f (orbit f x)", "using assms"], ["proof (prove)\nusing this:\n  f permutes S\n  finite S\n\ngoal (1 subgoal):\n 1. cyclic_on f (orbit f x)", "by (intro cyclic_on_orbit') (auto simp: permutation_permutes)"], ["", "lemma orbit_cyclic_eq3:\n  assumes \"cyclic_on f S\" \"y \\<in> S\" shows \"orbit f y = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f y = S", "using assms"], ["proof (prove)\nusing this:\n  cyclic_on f S\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. orbit f y = S", "unfolding cyclic_on_alldef"], ["proof (prove)\nusing this:\n  S \\<noteq> {} \\<and> (\\<forall>s\\<in>S. S = orbit f s)\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. orbit f y = S", "by simp"], ["", "(*XXX move*)"], ["", "lemma orbit_eq_singleton_iff: \"orbit f x = {x} \\<longleftrightarrow> f x = x\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (orbit f x = {x}) = (f x = x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x\n 2. f x = x \\<Longrightarrow> orbit f x = {x}", "assume A: ?R"], ["proof (state)\nthis:\n  f x = x\n\ngoal (2 subgoals):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x\n 2. f x = x \\<Longrightarrow> orbit f x = {x}", "{"], ["proof (state)\nthis:\n  f x = x\n\ngoal (2 subgoals):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x\n 2. f x = x \\<Longrightarrow> orbit f x = {x}", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x\n 2. f x = x \\<Longrightarrow> orbit f x = {x}", "assume \"y \\<in> orbit f x\""], ["proof (state)\nthis:\n  y \\<in> orbit f x\n\ngoal (2 subgoals):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x\n 2. f x = x \\<Longrightarrow> orbit f x = {x}", "then"], ["proof (chain)\npicking this:\n  y \\<in> orbit f x", "have \"y = x\""], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. y = x", "by induct (auto simp: A)"], ["proof (state)\nthis:\n  y = x\n\ngoal (2 subgoals):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x\n 2. f x = x \\<Longrightarrow> orbit f x = {x}", "}"], ["proof (state)\nthis:\n  ?y2 \\<in> orbit f x \\<Longrightarrow> ?y2 = x\n\ngoal (2 subgoals):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x\n 2. f x = x \\<Longrightarrow> orbit f x = {x}", "then"], ["proof (chain)\npicking this:\n  ?y2 \\<in> orbit f x \\<Longrightarrow> ?y2 = x", "show ?L"], ["proof (prove)\nusing this:\n  ?y2 \\<in> orbit f x \\<Longrightarrow> ?y2 = x\n\ngoal (1 subgoal):\n 1. orbit f x = {x}", "by (metis orbit_nonempty singletonI subsetI subset_singletonD)"], ["proof (state)\nthis:\n  orbit f x = {x}\n\ngoal (1 subgoal):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x", "assume A: ?L"], ["proof (state)\nthis:\n  orbit f x = {x}\n\ngoal (1 subgoal):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x", "then"], ["proof (chain)\npicking this:\n  orbit f x = {x}", "have \"\\<And>y. y \\<in> orbit f x \\<Longrightarrow> f x = y\""], ["proof (prove)\nusing this:\n  orbit f x = {x}\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> orbit f x \\<Longrightarrow> f x = y", "by - (erule orbit.cases, simp_all)"], ["proof (state)\nthis:\n  ?y \\<in> orbit f x \\<Longrightarrow> f x = ?y\n\ngoal (1 subgoal):\n 1. orbit f x = {x} \\<Longrightarrow> f x = x", "then"], ["proof (chain)\npicking this:\n  ?y \\<in> orbit f x \\<Longrightarrow> f x = ?y", "show ?R"], ["proof (prove)\nusing this:\n  ?y \\<in> orbit f x \\<Longrightarrow> f x = ?y\n\ngoal (1 subgoal):\n 1. f x = x", "using A"], ["proof (prove)\nusing this:\n  ?y \\<in> orbit f x \\<Longrightarrow> f x = ?y\n  orbit f x = {x}\n\ngoal (1 subgoal):\n 1. f x = x", "by blast"], ["proof (state)\nthis:\n  f x = x\n\ngoal:\nNo subgoals!", "qed"], ["", "(* XXX move *)"], ["", "lemma eq_on_cyclic_on_iff1:\n  assumes \"cyclic_on f S\" \"x \\<in> S\"\n  obtains \"f x \\<in> S\" \"f x = x \\<longleftrightarrow> card S = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>f x \\<in> S; (f x = x) = (card S = 1)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lbrakk>f x \\<in> S; (f x = x) = (card S = 1)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    f x \\<in> S\n 2. (\\<lbrakk>f x \\<in> S; (f x = x) = (card S = 1)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (f x = x) = (card S = 1)", "from assms"], ["proof (chain)\npicking this:\n  cyclic_on f S\n  x \\<in> S", "show \"f x \\<in> S\""], ["proof (prove)\nusing this:\n  cyclic_on f S\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. f x \\<in> S", "by (auto simp: cyclic_on_def intro: orbit.intros)"], ["proof (state)\nthis:\n  f x \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>f x \\<in> S; (f x = x) = (card S = 1)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (f x = x) = (card S = 1)", "from assms"], ["proof (chain)\npicking this:\n  cyclic_on f S\n  x \\<in> S", "have \"S = orbit f x\""], ["proof (prove)\nusing this:\n  cyclic_on f S\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. S = orbit f x", "by (auto simp: cyclic_on_alldef)"], ["proof (state)\nthis:\n  S = orbit f x\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>f x \\<in> S; (f x = x) = (card S = 1)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (f x = x) = (card S = 1)", "then"], ["proof (chain)\npicking this:\n  S = orbit f x", "have \"f x = x \\<longleftrightarrow> S = {x}\""], ["proof (prove)\nusing this:\n  S = orbit f x\n\ngoal (1 subgoal):\n 1. (f x = x) = (S = {x})", "by (metis orbit_eq_singleton_iff)"], ["proof (state)\nthis:\n  (f x = x) = (S = {x})\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>f x \\<in> S; (f x = x) = (card S = 1)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (f x = x) = (card S = 1)", "then"], ["proof (chain)\npicking this:\n  (f x = x) = (S = {x})", "show \"f x = x \\<longleftrightarrow> card S = 1\""], ["proof (prove)\nusing this:\n  (f x = x) = (S = {x})\n\ngoal (1 subgoal):\n 1. (f x = x) = (card S = 1)", "using \\<open>x \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  (f x = x) = (S = {x})\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. (f x = x) = (card S = 1)", "by (auto simp: card_Suc_eq)"], ["proof (state)\nthis:\n  (f x = x) = (card S = 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Decomposition of Arbitrary Permutations\\<close>"], ["", "definition perm_restrict :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> 'a set \\<Rightarrow> ('a \\<Rightarrow> 'a)\" where\n  \"perm_restrict f S x \\<equiv> if x \\<in> S then f x else x\""], ["", "lemma perm_restrict_comp:\n  assumes \"A \\<inter> B = {}\" \"cyclic_on f B\"\n  shows \"perm_restrict f A o perm_restrict f B = perm_restrict f (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_restrict f A \\<circ> perm_restrict f B =\n    perm_restrict f (A \\<union> B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. perm_restrict f A \\<circ> perm_restrict f B =\n    perm_restrict f (A \\<union> B)", "have \"\\<And>x. x \\<in> B \\<Longrightarrow> f x \\<in> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> f x \\<in> B", "using \\<open>cyclic_on f B\\<close>"], ["proof (prove)\nusing this:\n  cyclic_on f B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> f x \\<in> B", "by (rule cyclic_on_inI)"], ["proof (state)\nthis:\n  ?x \\<in> B \\<Longrightarrow> f ?x \\<in> B\n\ngoal (1 subgoal):\n 1. perm_restrict f A \\<circ> perm_restrict f B =\n    perm_restrict f (A \\<union> B)", "with assms"], ["proof (chain)\npicking this:\n  A \\<inter> B = {}\n  cyclic_on f B\n  ?x \\<in> B \\<Longrightarrow> f ?x \\<in> B", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<inter> B = {}\n  cyclic_on f B\n  ?x \\<in> B \\<Longrightarrow> f ?x \\<in> B\n\ngoal (1 subgoal):\n 1. perm_restrict f A \\<circ> perm_restrict f B =\n    perm_restrict f (A \\<union> B)", "by (auto simp: perm_restrict_def fun_eq_iff)"], ["proof (state)\nthis:\n  perm_restrict f A \\<circ> perm_restrict f B =\n  perm_restrict f (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perm_restrict_simps:\n  \"x \\<in> S \\<Longrightarrow> perm_restrict f S x = f x\"\n  \"x \\<notin> S \\<Longrightarrow> perm_restrict f S x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> S \\<Longrightarrow> perm_restrict f S x = f x) &&&\n    (x \\<notin> S \\<Longrightarrow> perm_restrict f S x = x)", "by (auto simp: perm_restrict_def)"], ["", "lemma perm_restrict_perm_restrict:\n  \"perm_restrict (perm_restrict f A) B = perm_restrict f (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_restrict (perm_restrict f A) B = perm_restrict f (A \\<inter> B)", "by (auto simp: perm_restrict_def)"], ["", "lemma perm_restrict_union:\n  assumes \"perm_restrict f A permutes A\" \"perm_restrict f B permutes B\" \"A \\<inter> B = {}\"\n  shows \"perm_restrict f A o perm_restrict f B = perm_restrict f (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_restrict f A \\<circ> perm_restrict f B =\n    perm_restrict f (A \\<union> B)", "using assms"], ["proof (prove)\nusing this:\n  perm_restrict f A permutes A\n  perm_restrict f B permutes B\n  A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. perm_restrict f A \\<circ> perm_restrict f B =\n    perm_restrict f (A \\<union> B)", "by (auto simp: fun_eq_iff perm_restrict_def permutes_def) (metis Diff_iff Diff_triv)"], ["", "lemma perm_restrict_id[simp]:\n  assumes \"f permutes S\" shows \"perm_restrict f S = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_restrict f S = f", "using assms"], ["proof (prove)\nusing this:\n  f permutes S\n\ngoal (1 subgoal):\n 1. perm_restrict f S = f", "by (auto simp: permutes_def perm_restrict_def)"], ["", "lemma cyclic_on_perm_restrict:\n  \"cyclic_on (perm_restrict f S) S \\<longleftrightarrow> cyclic_on f S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on (perm_restrict f S) S = cyclic_on f S", "by (simp add: perm_restrict_def cong: cyclic_cong)"], ["", "lemma perm_restrict_diff_cyclic:\n  assumes \"f permutes S\" \"cyclic_on f A\"\n  shows \"perm_restrict f (S - A) permutes (S - A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "have \"\\<exists>x. perm_restrict f (S - A) x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. perm_restrict f (S - A) x = y", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y", "assume A: \"y \\<in> S - A\""], ["proof (state)\nthis:\n  y \\<in> S - A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y", "with \\<open>f permutes S\\<close>"], ["proof (chain)\npicking this:\n  f permutes S\n  y \\<in> S - A", "obtain x where \"f x = y\" \"x \\<in> S\""], ["proof (prove)\nusing this:\n  f permutes S\n  y \\<in> S - A\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>f x = y; x \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding permutes_def"], ["proof (prove)\nusing this:\n  (\\<forall>x. x \\<notin> S \\<longrightarrow> f x = x) \\<and>\n  (\\<forall>y. \\<exists>!x. f x = y)\n  y \\<in> S - A\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>f x = y; x \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto metis"], ["proof (state)\nthis:\n  f x = y\n  x \\<in> S\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y", "moreover"], ["proof (state)\nthis:\n  f x = y\n  x \\<in> S\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y", "with A"], ["proof (chain)\npicking this:\n  y \\<in> S - A\n  f x = y\n  x \\<in> S", "have \"x \\<notin> A\""], ["proof (prove)\nusing this:\n  y \\<in> S - A\n  f x = y\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<notin> A", "by (metis Diff_iff assms(2) cyclic_on_inI)"], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y", "ultimately"], ["proof (chain)\npicking this:\n  f x = y\n  x \\<in> S\n  x \\<notin> A", "have \"perm_restrict f (S - A) x = y\""], ["proof (prove)\nusing this:\n  f x = y\n  x \\<in> S\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) x = y", "by (simp add: perm_restrict_simps)"], ["proof (state)\nthis:\n  perm_restrict f (S - A) x = y\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>x. perm_restrict f (S - A) x = y", "then"], ["proof (chain)\npicking this:\n  perm_restrict f (S - A) x = y", "show ?thesis"], ["proof (prove)\nusing this:\n  perm_restrict f (S - A) x = y\n\ngoal (1 subgoal):\n 1. \\<exists>x. perm_restrict f (S - A) x = y", ".."], ["proof (state)\nthis:\n  \\<exists>x. perm_restrict f (S - A) x = y\n\ngoal (1 subgoal):\n 1. y \\<notin> S - A \\<Longrightarrow>\n    \\<exists>x. perm_restrict f (S - A) x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin> S - A \\<Longrightarrow>\n    \\<exists>x. perm_restrict f (S - A) x = y", "assume \"y \\<notin> S - A\""], ["proof (state)\nthis:\n  y \\<notin> S - A\n\ngoal (1 subgoal):\n 1. y \\<notin> S - A \\<Longrightarrow>\n    \\<exists>x. perm_restrict f (S - A) x = y", "then"], ["proof (chain)\npicking this:\n  y \\<notin> S - A", "have \"perm_restrict f (S - A) y = y\""], ["proof (prove)\nusing this:\n  y \\<notin> S - A\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) y = y", "by (simp add: perm_restrict_simps)"], ["proof (state)\nthis:\n  perm_restrict f (S - A) y = y\n\ngoal (1 subgoal):\n 1. y \\<notin> S - A \\<Longrightarrow>\n    \\<exists>x. perm_restrict f (S - A) x = y", "then"], ["proof (chain)\npicking this:\n  perm_restrict f (S - A) y = y", "show ?thesis"], ["proof (prove)\nusing this:\n  perm_restrict f (S - A) y = y\n\ngoal (1 subgoal):\n 1. \\<exists>x. perm_restrict f (S - A) x = y", ".."], ["proof (state)\nthis:\n  \\<exists>x. perm_restrict f (S - A) x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x. perm_restrict f (S - A) x = y\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "}"], ["proof (state)\nthis:\n  \\<exists>x. perm_restrict f (S - A) x = ?y2\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "note X = this"], ["proof (state)\nthis:\n  \\<exists>x. perm_restrict f (S - A) x = ?y2\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "{"], ["proof (state)\nthis:\n  \\<exists>x. perm_restrict f (S - A) x = ?y2\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "assume \"perm_restrict f (S - A) x = perm_restrict f (S - A) y\""], ["proof (state)\nthis:\n  perm_restrict f (S - A) x = perm_restrict f (S - A) y\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "with assms"], ["proof (chain)\npicking this:\n  f permutes S\n  cyclic_on f A\n  perm_restrict f (S - A) x = perm_restrict f (S - A) y", "have \"x = y\""], ["proof (prove)\nusing this:\n  f permutes S\n  cyclic_on f A\n  perm_restrict f (S - A) x = perm_restrict f (S - A) y\n\ngoal (1 subgoal):\n 1. x = y", "by (auto simp: perm_restrict_def permutes_def split: if_splits intro: cyclic_on_f_in)"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "}"], ["proof (state)\nthis:\n  perm_restrict f (S - A) ?x2 =\n  perm_restrict f (S - A) ?y2 \\<Longrightarrow>\n  ?x2 = ?y2\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "note Y = this"], ["proof (state)\nthis:\n  perm_restrict f (S - A) ?x2 =\n  perm_restrict f (S - A) ?y2 \\<Longrightarrow>\n  ?x2 = ?y2\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_restrict f (S - A) permutes S - A", "by (auto simp: permutes_def perm_restrict_simps X intro: Y)"], ["proof (state)\nthis:\n  perm_restrict f (S - A) permutes S - A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma orbit_eqI:\n  \"y = f x \\<Longrightarrow> y \\<in> orbit f x\"\n  \"z = f y \\<Longrightarrow>y \\<in> orbit f x \\<Longrightarrow>z \\<in> orbit f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y = f x \\<Longrightarrow> y \\<in> orbit f x) &&&\n    (\\<lbrakk>z = f y; y \\<in> orbit f x\\<rbrakk>\n     \\<Longrightarrow> z \\<in> orbit f x)", "by (metis orbit.base) (metis orbit.step)"], ["", "lemma permutes_decompose:\n  assumes \"f permutes S\" \"finite S\"\n  shows \"\\<exists>C. (\\<forall>c \\<in> C. cyclic_on f c) \\<and> \\<Union>C = S \\<and> (\\<forall>c1 \\<in> C. \\<forall>c2 \\<in> C. c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       (\\<forall>c\\<in>C. cyclic_on f c) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "using assms(2,1)"], ["proof (prove)\nusing this:\n  finite S\n  f permutes S\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       (\\<forall>c\\<in>C. cyclic_on f c) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "proof (induction arbitrary: f rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A f.\n       \\<lbrakk>finite A;\n        \\<And>B f.\n           \\<lbrakk>B \\<subset> A; f permutes B\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                Ball C (cyclic_on f) \\<and>\n                                \\<Union> C = B \\<and>\n                                (\\<forall>c1\\<in>C.\n                                    \\<forall>c2\\<in>C.\n c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {});\n        f permutes A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            Ball C (cyclic_on f) \\<and>\n                            \\<Union> C = A \\<and>\n                            (\\<forall>c1\\<in>C.\n                                \\<forall>c2\\<in>C.\n                                   c1 \\<noteq> c2 \\<longrightarrow>\n                                   c1 \\<inter> c2 = {})", "case (psubset S)"], ["proof (state)\nthis:\n  finite S\n  \\<lbrakk>?B \\<subset> S; ?f permutes ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C.\n                       (\\<forall>a\\<in>C. cyclic_on ?f a) \\<and>\n                       \\<Union> C = ?B \\<and>\n                       (\\<forall>c1\\<in>C.\n                           \\<forall>c2\\<in>C.\n                              c1 \\<noteq> c2 \\<longrightarrow>\n                              c1 \\<inter> c2 = {})\n  f permutes S\n\ngoal (1 subgoal):\n 1. \\<And>A f.\n       \\<lbrakk>finite A;\n        \\<And>B f.\n           \\<lbrakk>B \\<subset> A; f permutes B\\<rbrakk>\n           \\<Longrightarrow> \\<exists>C.\n                                Ball C (cyclic_on f) \\<and>\n                                \\<Union> C = B \\<and>\n                                (\\<forall>c1\\<in>C.\n                                    \\<forall>c2\\<in>C.\n c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {});\n        f permutes A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C.\n                            Ball C (cyclic_on f) \\<and>\n                            \\<Union> C = A \\<and>\n                            (\\<forall>c1\\<in>C.\n                                \\<forall>c2\\<in>C.\n                                   c1 \\<noteq> c2 \\<longrightarrow>\n                                   c1 \\<inter> c2 = {})", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "proof (cases \"S = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})\n 2. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "case True"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})\n 2. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "then"], ["proof (chain)\npicking this:\n  S = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "by (intro exI[where x=\"{}\"]) auto"], ["proof (state)\nthis:\n  \\<exists>C.\n     (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n     \\<Union> C = S \\<and>\n     (\\<forall>c1\\<in>C.\n         \\<forall>c2\\<in>C.\n            c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "case False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "obtain s where \"s \\<in> S\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>s. s \\<in> S \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "with \\<open>f permutes S\\<close>"], ["proof (chain)\npicking this:\n  f permutes S\n  s \\<in> S", "have \"orbit f s \\<subseteq> S\""], ["proof (prove)\nusing this:\n  f permutes S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. orbit f s \\<subseteq> S", "by (rule permutes_orbit_subset)"], ["proof (state)\nthis:\n  orbit f s \\<subseteq> S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "have cyclic_orbit: \"cyclic_on f (orbit f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cyclic_on f (orbit f s)", "using \\<open>f permutes S\\<close> \\<open>finite S\\<close>"], ["proof (prove)\nusing this:\n  f permutes S\n  finite S\n\ngoal (1 subgoal):\n 1. cyclic_on f (orbit f s)", "by (rule cyclic_on_orbit)"], ["proof (state)\nthis:\n  cyclic_on f (orbit f s)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "let ?f' = \"perm_restrict f (S - orbit f s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "have \"f s \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f s \\<in> S", "using \\<open>f permutes S\\<close> \\<open>s \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  f permutes S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. f s \\<in> S", "by (auto simp: permutes_in_image)"], ["proof (state)\nthis:\n  f s \\<in> S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "then"], ["proof (chain)\npicking this:\n  f s \\<in> S", "have \"S - orbit f s \\<subset> S\""], ["proof (prove)\nusing this:\n  f s \\<in> S\n\ngoal (1 subgoal):\n 1. S - orbit f s \\<subset> S", "using orbit.base[of f s] \\<open>s \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  f s \\<in> S\n  f s \\<in> orbit f s\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. S - orbit f s \\<subset> S", "by blast"], ["proof (state)\nthis:\n  S - orbit f s \\<subset> S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "moreover"], ["proof (state)\nthis:\n  S - orbit f s \\<subset> S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "have \"?f' permutes (S - orbit f s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. perm_restrict f (S - orbit f s) permutes S - orbit f s", "using \\<open>f permutes S\\<close> cyclic_orbit"], ["proof (prove)\nusing this:\n  f permutes S\n  cyclic_on f (orbit f s)\n\ngoal (1 subgoal):\n 1. perm_restrict f (S - orbit f s) permutes S - orbit f s", "by (rule perm_restrict_diff_cyclic)"], ["proof (state)\nthis:\n  perm_restrict f (S - orbit f s) permutes S - orbit f s\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "ultimately"], ["proof (chain)\npicking this:\n  S - orbit f s \\<subset> S\n  perm_restrict f (S - orbit f s) permutes S - orbit f s", "obtain C where C: \"\\<And>c. c \\<in> C \\<Longrightarrow> cyclic_on ?f' c\" \"\\<Union>C = S - orbit f s\"\n        \"\\<forall>c1 \\<in> C. \\<forall>c2 \\<in> C. c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {}\""], ["proof (prove)\nusing this:\n  S - orbit f s \\<subset> S\n  perm_restrict f (S - orbit f s) permutes S - orbit f s\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>\\<And>c.\n                    c \\<in> C \\<Longrightarrow>\n                    cyclic_on (perm_restrict f (S - orbit f s)) c;\n         \\<Union> C = S - orbit f s;\n         \\<forall>c1\\<in>C.\n            \\<forall>c2\\<in>C.\n               c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using psubset.IH"], ["proof (prove)\nusing this:\n  S - orbit f s \\<subset> S\n  perm_restrict f (S - orbit f s) permutes S - orbit f s\n  \\<lbrakk>?B \\<subset> S; ?f permutes ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>C.\n                       (\\<forall>a\\<in>C. cyclic_on ?f a) \\<and>\n                       \\<Union> C = ?B \\<and>\n                       (\\<forall>c1\\<in>C.\n                           \\<forall>c2\\<in>C.\n                              c1 \\<noteq> c2 \\<longrightarrow>\n                              c1 \\<inter> c2 = {})\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>\\<And>c.\n                    c \\<in> C \\<Longrightarrow>\n                    cyclic_on (perm_restrict f (S - orbit f s)) c;\n         \\<Union> C = S - orbit f s;\n         \\<forall>c1\\<in>C.\n            \\<forall>c2\\<in>C.\n               c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?c \\<in> C \\<Longrightarrow>\n  cyclic_on (perm_restrict f (S - orbit f s)) ?c\n  \\<Union> C = S - orbit f s\n  \\<forall>c1\\<in>C.\n     \\<forall>c2\\<in>C. c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "{"], ["proof (state)\nthis:\n  ?c \\<in> C \\<Longrightarrow>\n  cyclic_on (perm_restrict f (S - orbit f s)) ?c\n  \\<Union> C = S - orbit f s\n  \\<forall>c1\\<in>C.\n     \\<forall>c2\\<in>C. c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "assume \"c \\<in> C\""], ["proof (state)\nthis:\n  c \\<in> C\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "then"], ["proof (chain)\npicking this:\n  c \\<in> C", "have *: \"\\<And>x. x \\<in> c \\<Longrightarrow> perm_restrict f (S - orbit f s) x = f x\""], ["proof (prove)\nusing this:\n  c \\<in> C\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> c \\<Longrightarrow> perm_restrict f (S - orbit f s) x = f x", "using C(2) \\<open>f permutes S\\<close>"], ["proof (prove)\nusing this:\n  c \\<in> C\n  \\<Union> C = S - orbit f s\n  f permutes S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> c \\<Longrightarrow> perm_restrict f (S - orbit f s) x = f x", "by (auto simp add: perm_restrict_def)"], ["proof (state)\nthis:\n  ?x \\<in> c \\<Longrightarrow> perm_restrict f (S - orbit f s) ?x = f ?x\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> c \\<Longrightarrow> perm_restrict f (S - orbit f s) ?x = f ?x", "have \"cyclic_on f c\""], ["proof (prove)\nusing this:\n  ?x \\<in> c \\<Longrightarrow> perm_restrict f (S - orbit f s) ?x = f ?x\n\ngoal (1 subgoal):\n 1. cyclic_on f c", "using C(1)[OF \\<open>c \\<in> C\\<close>]"], ["proof (prove)\nusing this:\n  ?x \\<in> c \\<Longrightarrow> perm_restrict f (S - orbit f s) ?x = f ?x\n  cyclic_on (perm_restrict f (S - orbit f s)) c\n\ngoal (1 subgoal):\n 1. cyclic_on f c", "by (simp cong: cyclic_cong add: *)"], ["proof (state)\nthis:\n  cyclic_on f c\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "}"], ["proof (state)\nthis:\n  ?c2 \\<in> C \\<Longrightarrow> cyclic_on f ?c2\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "note in_C_cyclic = this"], ["proof (state)\nthis:\n  ?c2 \\<in> C \\<Longrightarrow> cyclic_on f ?c2\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "have Un_ins: \"\\<Union>(insert (orbit f s) C) = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (insert (orbit f s) C) = S", "using \\<open>\\<Union>C = _\\<close>  \\<open>orbit f s \\<subseteq> S\\<close>"], ["proof (prove)\nusing this:\n  \\<Union> C = S - orbit f s\n  orbit f s \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<Union> (insert (orbit f s) C) = S", "by blast"], ["proof (state)\nthis:\n  \\<Union> (insert (orbit f s) C) = S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "have Disj_ins: \"(\\<forall>c1 \\<in> insert (orbit f s) C. \\<forall>c2 \\<in> insert (orbit f s) C. c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c1\\<in>insert (orbit f s) C.\n       \\<forall>c2\\<in>insert (orbit f s) C.\n          c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {}", "using C"], ["proof (prove)\nusing this:\n  ?c \\<in> C \\<Longrightarrow>\n  cyclic_on (perm_restrict f (S - orbit f s)) ?c\n  \\<Union> C = S - orbit f s\n  \\<forall>c1\\<in>C.\n     \\<forall>c2\\<in>C. c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {}\n\ngoal (1 subgoal):\n 1. \\<forall>c1\\<in>insert (orbit f s) C.\n       \\<forall>c2\\<in>insert (orbit f s) C.\n          c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {}", "by auto"], ["proof (state)\nthis:\n  \\<forall>c1\\<in>insert (orbit f s) C.\n     \\<forall>c2\\<in>insert (orbit f s) C.\n        c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C.\n       (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n       \\<Union> C = S \\<and>\n       (\\<forall>c1\\<in>C.\n           \\<forall>c2\\<in>C.\n              c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})", "by (intro conjI Un_ins Disj_ins exI[where x=\"insert (orbit f s) C\"])\n        (auto simp: cyclic_orbit in_C_cyclic)"], ["proof (state)\nthis:\n  \\<exists>C.\n     (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n     \\<Union> C = S \\<and>\n     (\\<forall>c1\\<in>C.\n         \\<forall>c2\\<in>C.\n            c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>C.\n     (\\<forall>a\\<in>C. cyclic_on f a) \\<and>\n     \\<Union> C = S \\<and>\n     (\\<forall>c1\\<in>C.\n         \\<forall>c2\\<in>C.\n            c1 \\<noteq> c2 \\<longrightarrow> c1 \\<inter> c2 = {})\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Funpow + Orbit\\<close>"], ["", "lemma funpow_dist_prop:\n  \"y \\<in> orbit f x \\<Longrightarrow> (f ^^ funpow_dist f x y) x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> orbit f x \\<Longrightarrow> (f ^^ funpow_dist f x y) x = y", "unfolding funpow_dist_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> orbit f x \\<Longrightarrow>\n    (f ^^ (LEAST n. (f ^^ n) x = y)) x = y", "by (rule LeastI_ex) (auto simp: orbit_altdef)"], ["", "lemma funpow_dist_0_eq:\n  assumes \"y \\<in> orbit f x\" shows \"funpow_dist f x y = 0 \\<longleftrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (funpow_dist f x y = 0) = (x = y)", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (funpow_dist f x y = 0) = (x = y)", "by (auto simp: funpow_dist_0 dest: funpow_dist_prop)"], ["", "lemma funpow_dist_step:\n  assumes \"x \\<noteq> y\" \"y \\<in> orbit f x\" shows \"funpow_dist f x y = Suc (funpow_dist f (f x) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. funpow_dist f x y = funpow_dist1 f x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. funpow_dist f x y = funpow_dist1 f x y", "from \\<open>y \\<in> _\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> orbit f x", "obtain n where \"(f ^^ n) x = y\""], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (\\<And>n. (f ^^ n) x = y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: orbit_altdef)"], ["proof (state)\nthis:\n  (f ^^ n) x = y\n\ngoal (1 subgoal):\n 1. funpow_dist f x y = funpow_dist1 f x y", "with \\<open>x \\<noteq> y\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> y\n  (f ^^ n) x = y", "obtain n' where [simp]: \"n = Suc n'\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  (f ^^ n) x = y\n\ngoal (1 subgoal):\n 1. (\\<And>n'. n = Suc n' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (cases n) auto"], ["proof (state)\nthis:\n  n = Suc n'\n\ngoal (1 subgoal):\n 1. funpow_dist f x y = funpow_dist1 f x y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. funpow_dist f x y = funpow_dist1 f x y", "unfolding funpow_dist_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (LEAST n. (f ^^ n) x = y) = Suc (LEAST n. (f ^^ n) (f x) = y)", "proof (rule Least_Suc2)"], ["proof (state)\ngoal (4 subgoals):\n 1. (f ^^ ?n) x = y\n 2. (f ^^ ?m) (f x) = y\n 3. (f ^^ 0) x \\<noteq> y\n 4. \\<forall>k. ((f ^^ Suc k) x = y) = ((f ^^ k) (f x) = y)", "show \"(f ^^ n) x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ n) x = y", "by fact"], ["proof (state)\nthis:\n  (f ^^ n) x = y\n\ngoal (3 subgoals):\n 1. (f ^^ ?m) (f x) = y\n 2. (f ^^ 0) x \\<noteq> y\n 3. \\<forall>k. ((f ^^ Suc k) x = y) = ((f ^^ k) (f x) = y)", "then"], ["proof (chain)\npicking this:\n  (f ^^ n) x = y", "show \"(f ^^ n') (f x) = y\""], ["proof (prove)\nusing this:\n  (f ^^ n) x = y\n\ngoal (1 subgoal):\n 1. (f ^^ n') (f x) = y", "by (simp add: funpow_swap1)"], ["proof (state)\nthis:\n  (f ^^ n') (f x) = y\n\ngoal (2 subgoals):\n 1. (f ^^ 0) x \\<noteq> y\n 2. \\<forall>k. ((f ^^ Suc k) x = y) = ((f ^^ k) (f x) = y)", "show \"(f ^^ 0) x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ 0) x \\<noteq> y", "using \\<open>x \\<noteq> y\\<close>"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (f ^^ 0) x \\<noteq> y", "by simp"], ["proof (state)\nthis:\n  (f ^^ 0) x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<forall>k. ((f ^^ Suc k) x = y) = ((f ^^ k) (f x) = y)", "show \"\\<forall>k. ((f ^^ Suc k) x = y) = ((f ^^ k) (f x) = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k. ((f ^^ Suc k) x = y) = ((f ^^ k) (f x) = y)", "by (simp add: funpow_swap1)"], ["proof (state)\nthis:\n  \\<forall>k. ((f ^^ Suc k) x = y) = ((f ^^ k) (f x) = y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  funpow_dist f x y = funpow_dist1 f x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma funpow_dist1_prop:\n  assumes \"y \\<in> orbit f x\" shows \"(f ^^ funpow_dist1 f x y) x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "by (metis assms funpow.simps(1) funpow_dist_0 funpow_dist_prop funpow_simp_l funpow_swap1 id_apply orbit_step)"], ["", "(*XXX simplify? *)"], ["", "lemma funpow_neq_less_funpow_dist:\n  assumes \"y \\<in> orbit f x\" \"m \\<le> funpow_dist f x y\" \"n \\<le> funpow_dist f x y\" \"m \\<noteq> n\"\n  shows \"(f ^^ m) x \\<noteq> (f ^^ n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ m) x \\<noteq> (f ^^ n) x", "proof (rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "assume A: \"(f ^^ m) x = (f ^^ n) x\""], ["proof (state)\nthis:\n  (f ^^ m) x = (f ^^ n) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "define m' n' where \"m' = min m n\" and \"n' = max m n\""], ["proof (state)\nthis:\n  m' = min m n\n  n' = max m n\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "with A assms"], ["proof (chain)\npicking this:\n  (f ^^ m) x = (f ^^ n) x\n  y \\<in> orbit f x\n  m \\<le> funpow_dist f x y\n  n \\<le> funpow_dist f x y\n  m \\<noteq> n\n  m' = min m n\n  n' = max m n", "have A': \"m' < n'\" \"(f ^^ m') x = (f ^^ n') x\" \"n' \\<le> funpow_dist f x y\""], ["proof (prove)\nusing this:\n  (f ^^ m) x = (f ^^ n) x\n  y \\<in> orbit f x\n  m \\<le> funpow_dist f x y\n  n \\<le> funpow_dist f x y\n  m \\<noteq> n\n  m' = min m n\n  n' = max m n\n\ngoal (1 subgoal):\n 1. m' < n' &&& (f ^^ m') x = (f ^^ n') x &&& n' \\<le> funpow_dist f x y", "by (auto simp: min_def max_def)"], ["proof (state)\nthis:\n  m' < n'\n  (f ^^ m') x = (f ^^ n') x\n  n' \\<le> funpow_dist f x y\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "have \"y = (f ^^ funpow_dist f x y) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = (f ^^ funpow_dist f x y) x", "using \\<open>y \\<in> _\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. y = (f ^^ funpow_dist f x y) x", "by (simp only: funpow_dist_prop)"], ["proof (state)\nthis:\n  y = (f ^^ funpow_dist f x y) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  y = (f ^^ funpow_dist f x y) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "have \"\\<dots> = (f ^^ ((funpow_dist f x y - n') + n')) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist f x y) x = (f ^^ (funpow_dist f x y - n' + n')) x", "using \\<open>n' \\<le> _\\<close>"], ["proof (prove)\nusing this:\n  n' \\<le> funpow_dist f x y\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist f x y) x = (f ^^ (funpow_dist f x y - n' + n')) x", "by simp"], ["proof (state)\nthis:\n  (f ^^ funpow_dist f x y) x = (f ^^ (funpow_dist f x y - n' + n')) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (f ^^ funpow_dist f x y) x = (f ^^ (funpow_dist f x y - n' + n')) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "have \"\\<dots> = (f ^^ ((funpow_dist f x y - n') + m')) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist f x y - n' + n')) x =\n    (f ^^ (funpow_dist f x y - n' + m')) x", "by (simp add: funpow_add \\<open>(f ^^ m') x = _\\<close>)"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist f x y - n' + n')) x =\n  (f ^^ (funpow_dist f x y - n' + m')) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist f x y - n' + n')) x =\n  (f ^^ (funpow_dist f x y - n' + m')) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "have \"(f ^^ ((funpow_dist f x y - n') + m')) x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist f x y - n' + m')) x \\<noteq> y", "using A'"], ["proof (prove)\nusing this:\n  m' < n'\n  (f ^^ m') x = (f ^^ n') x\n  n' \\<le> funpow_dist f x y\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist f x y - n' + m')) x \\<noteq> y", "by (intro funpow_dist_least) linarith"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist f x y - n' + m')) x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  y \\<noteq> y", "show \"False\""], ["proof (prove)\nusing this:\n  y \\<noteq> y\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "(* XXX reduce to funpow_neq_less_funpow_dist? *)"], ["", "lemma funpow_neq_less_funpow_dist1:\n  assumes \"y \\<in> orbit f x\" \"m < funpow_dist1 f x y\" \"n < funpow_dist1 f x y\" \"m \\<noteq> n\"\n  shows \"(f ^^ m) x \\<noteq> (f ^^ n) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ m) x \\<noteq> (f ^^ n) x", "proof (rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "assume A: \"(f ^^ m) x = (f ^^ n) x\""], ["proof (state)\nthis:\n  (f ^^ m) x = (f ^^ n) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "define m' n' where \"m' = min m n\" and \"n' = max m n\""], ["proof (state)\nthis:\n  m' = min m n\n  n' = max m n\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "with A assms"], ["proof (chain)\npicking this:\n  (f ^^ m) x = (f ^^ n) x\n  y \\<in> orbit f x\n  m < funpow_dist1 f x y\n  n < funpow_dist1 f x y\n  m \\<noteq> n\n  m' = min m n\n  n' = max m n", "have A': \"m' < n'\" \"(f ^^ m') x = (f ^^ n') x\" \"n' < funpow_dist1 f x y\""], ["proof (prove)\nusing this:\n  (f ^^ m) x = (f ^^ n) x\n  y \\<in> orbit f x\n  m < funpow_dist1 f x y\n  n < funpow_dist1 f x y\n  m \\<noteq> n\n  m' = min m n\n  n' = max m n\n\ngoal (1 subgoal):\n 1. m' < n' &&& (f ^^ m') x = (f ^^ n') x &&& n' < funpow_dist1 f x y", "by (auto simp: min_def max_def)"], ["proof (state)\nthis:\n  m' < n'\n  (f ^^ m') x = (f ^^ n') x\n  n' < funpow_dist1 f x y\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "have \"y = (f ^^ funpow_dist1 f x y) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = (f ^^ funpow_dist1 f x y) x", "using \\<open>y \\<in> _\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. y = (f ^^ funpow_dist1 f x y) x", "by (simp only: funpow_dist1_prop)"], ["proof (state)\nthis:\n  y = (f ^^ funpow_dist1 f x y) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  y = (f ^^ funpow_dist1 f x y) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "have \"\\<dots> = (f ^^ ((funpow_dist1 f x y - n') + n')) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y - n' + n')) x", "using \\<open>n' < _\\<close>"], ["proof (prove)\nusing this:\n  n' < funpow_dist1 f x y\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y - n' + n')) x", "by simp"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y - n' + n')) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y - n' + n')) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "have \"\\<dots> = (f ^^ ((funpow_dist1 f x y - n') + m')) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x y - n' + n')) x =\n    (f ^^ (funpow_dist1 f x y - n' + m')) x", "by (simp add: funpow_add \\<open>(f ^^ m') x = _\\<close>)"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x y - n' + n')) x =\n  (f ^^ (funpow_dist1 f x y - n' + m')) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x y - n' + n')) x =\n  (f ^^ (funpow_dist1 f x y - n' + m')) x\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "have \"(f ^^ ((funpow_dist1 f x y - n') + m')) x \\<noteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x y - n' + m')) x \\<noteq> y", "using A'"], ["proof (prove)\nusing this:\n  m' < n'\n  (f ^^ m') x = (f ^^ n') x\n  n' < funpow_dist1 f x y\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x y - n' + m')) x \\<noteq> y", "by (intro funpow_dist1_least) linarith+"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x y - n' + m')) x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (f ^^ m) x = (f ^^ n) x \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  y \\<noteq> y", "show \"False\""], ["proof (prove)\nusing this:\n  y \\<noteq> y\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj_on_funpow_dist:\n  assumes \"y \\<in> orbit f x\" shows \"inj_on (\\<lambda>n. (f ^^ n) x) {0..funpow_dist f x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>n. (f ^^ n) x) {0..funpow_dist f x y}", "using funpow_neq_less_funpow_dist[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?m \\<le> funpow_dist f x y; ?n \\<le> funpow_dist f x y;\n   ?m \\<noteq> ?n\\<rbrakk>\n  \\<Longrightarrow> (f ^^ ?m) x \\<noteq> (f ^^ ?n) x\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>n. (f ^^ n) x) {0..funpow_dist f x y}", "by (intro inj_onI) auto"], ["", "lemma inj_on_funpow_dist1:\n  assumes \"y \\<in> orbit f x\" shows \"inj_on (\\<lambda>n. (f ^^ n) x) {0..<funpow_dist1 f x y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>n. (f ^^ n) x) {0..<funpow_dist1 f x y}", "using funpow_neq_less_funpow_dist1[OF assms]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?m < funpow_dist1 f x y; ?n < funpow_dist1 f x y;\n   ?m \\<noteq> ?n\\<rbrakk>\n  \\<Longrightarrow> (f ^^ ?m) x \\<noteq> (f ^^ ?n) x\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>n. (f ^^ n) x) {0..<funpow_dist1 f x y}", "by (intro inj_onI) auto"], ["", "lemma orbit_conv_funpow_dist1:\n  assumes \"x \\<in> orbit f x\"\n  shows \"orbit f x = (\\<lambda>n. (f ^^ n) x) ` {0..<funpow_dist1 f x x}\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. orbit f x = (\\<lambda>n. (f ^^ n) x) ` {0..<funpow_dist1 f x x}", "using funpow_dist1_prop[OF assms]"], ["proof (prove)\nusing this:\n  (f ^^ funpow_dist1 f x x) x = x\n\ngoal (1 subgoal):\n 1. orbit f x = (\\<lambda>n. (f ^^ n) x) ` {0..<funpow_dist1 f x x}", "by (auto simp: orbit_altdef_bounded[where n=\"funpow_dist1 f x x\"])"], ["", "lemma funpow_dist1_prop1:\n  assumes \"(f ^^ n) x = y\" \"0 < n\" shows \"(f ^^ funpow_dist1 f x y) x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "from assms"], ["proof (chain)\npicking this:\n  (f ^^ n) x = y\n  0 < n", "have \"y \\<in> orbit f x\""], ["proof (prove)\nusing this:\n  (f ^^ n) x = y\n  0 < n\n\ngoal (1 subgoal):\n 1. y \\<in> orbit f x", "by (auto simp: orbit_altdef)"], ["proof (state)\nthis:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "then"], ["proof (chain)\npicking this:\n  y \\<in> orbit f x", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "by (rule funpow_dist1_prop)"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f x y) x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma funpow_dist1_dist:\n  assumes \"funpow_dist1 f x y < funpow_dist1 f x z\"\n  assumes \"{y,z} \\<subseteq> orbit f x\"\n  shows \"funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "have x_z: \"(f ^^ funpow_dist1 f x z) x = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x z) x = z", "using assms"], ["proof (prove)\nusing this:\n  funpow_dist1 f x y < funpow_dist1 f x z\n  {y, z} \\<subseteq> orbit f x\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x z) x = z", "by (blast intro: funpow_dist1_prop)"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f x z) x = z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "have x_y: \"(f ^^ funpow_dist1 f x y) x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "using assms"], ["proof (prove)\nusing this:\n  funpow_dist1 f x y < funpow_dist1 f x z\n  {y, z} \\<subseteq> orbit f x\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "by (blast intro: funpow_dist1_prop)"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f x y) x = y\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "have \"(f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y\n      = (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) ((f ^^ funpow_dist1 f x y) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y =\n    (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y))\n     ((f ^^ funpow_dist1 f x y) x)", "using x_y"], ["proof (prove)\nusing this:\n  (f ^^ funpow_dist1 f x y) x = y\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y =\n    (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y))\n     ((f ^^ funpow_dist1 f x y) x)", "by simp"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y =\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y))\n   ((f ^^ funpow_dist1 f x y) x)\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "also"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y =\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y))\n   ((f ^^ funpow_dist1 f x y) x)\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "have \"\\<dots> = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y))\n     ((f ^^ funpow_dist1 f x y) x) =\n    z", "using assms x_z"], ["proof (prove)\nusing this:\n  funpow_dist1 f x y < funpow_dist1 f x z\n  {y, z} \\<subseteq> orbit f x\n  (f ^^ funpow_dist1 f x z) x = z\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y))\n     ((f ^^ funpow_dist1 f x y) x) =\n    z", "by (simp del: funpow.simps add: funpow_add_app)"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y))\n   ((f ^^ funpow_dist1 f x y) x) =\n  z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "finally"], ["proof (chain)\npicking this:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z", "have y_z_diff: \"(f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z\""], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z", "."], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "then"], ["proof (chain)\npicking this:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z", "have \"(f ^^ funpow_dist1 f y z) y = z\""], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f y z) y = z", "using assms"], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z\n  funpow_dist1 f x y < funpow_dist1 f x z\n  {y, z} \\<subseteq> orbit f x\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f y z) y = z", "by (intro funpow_dist1_prop1) auto"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f y z) y = z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "then"], ["proof (chain)\npicking this:\n  (f ^^ funpow_dist1 f y z) y = z", "have \"(f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z\""], ["proof (prove)\nusing this:\n  (f ^^ funpow_dist1 f y z) y = z\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z", "using x_y"], ["proof (prove)\nusing this:\n  (f ^^ funpow_dist1 f y z) y = z\n  (f ^^ funpow_dist1 f x y) x = y\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z", "by simp"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "then"], ["proof (chain)\npicking this:\n  (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z", "have \"(f ^^ (funpow_dist1 f y z + funpow_dist1 f x y)) x = z\""], ["proof (prove)\nusing this:\n  (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f y z + funpow_dist1 f x y)) x = z", "by (simp del: funpow.simps add: funpow_add_app)"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f y z + funpow_dist1 f x y)) x = z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. funpow_dist1 f x z \\<le> funpow_dist1 f x y + funpow_dist1 f y z\n 2. funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z", "from y_z_diff"], ["proof (chain)\npicking this:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z", "have \"(f ^^ funpow_dist1 f y z) y = z\""], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f y z) y = z", "using assms"], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z\n  funpow_dist1 f x y < funpow_dist1 f x z\n  {y, z} \\<subseteq> orbit f x\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f y z) y = z", "by (intro funpow_dist1_prop1) auto"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f y z) y = z\n\ngoal (2 subgoals):\n 1. funpow_dist1 f x z \\<le> funpow_dist1 f x y + funpow_dist1 f y z\n 2. funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z", "then"], ["proof (chain)\npicking this:\n  (f ^^ funpow_dist1 f y z) y = z", "have \"(f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z\""], ["proof (prove)\nusing this:\n  (f ^^ funpow_dist1 f y z) y = z\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z", "using x_y"], ["proof (prove)\nusing this:\n  (f ^^ funpow_dist1 f y z) y = z\n  (f ^^ funpow_dist1 f x y) x = y\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z", "by simp"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z\n\ngoal (2 subgoals):\n 1. funpow_dist1 f x z \\<le> funpow_dist1 f x y + funpow_dist1 f y z\n 2. funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z", "then"], ["proof (chain)\npicking this:\n  (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z", "have \"(f ^^ (funpow_dist1 f y z + funpow_dist1 f x y)) x = z\""], ["proof (prove)\nusing this:\n  (f ^^ funpow_dist1 f y z) ((f ^^ funpow_dist1 f x y) x) = z\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f y z + funpow_dist1 f x y)) x = z", "by (simp del: funpow.simps add: funpow_add_app)"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f y z + funpow_dist1 f x y)) x = z\n\ngoal (2 subgoals):\n 1. funpow_dist1 f x z \\<le> funpow_dist1 f x y + funpow_dist1 f y z\n 2. funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z", "then"], ["proof (chain)\npicking this:\n  (f ^^ (funpow_dist1 f y z + funpow_dist1 f x y)) x = z", "have \"funpow_dist1 f x z \\<le> funpow_dist1 f y z + funpow_dist1 f x y\""], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f y z + funpow_dist1 f x y)) x = z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z \\<le> funpow_dist1 f y z + funpow_dist1 f x y", "using funpow_dist1_least not_less"], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f y z + funpow_dist1 f x y)) x = z\n  \\<lbrakk>0 < ?n; ?n < funpow_dist1 ?f ?x ?y\\<rbrakk>\n  \\<Longrightarrow> (?f ^^ ?n) ?x \\<noteq> ?y\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z \\<le> funpow_dist1 f y z + funpow_dist1 f x y", "by fastforce"], ["proof (state)\nthis:\n  funpow_dist1 f x z \\<le> funpow_dist1 f y z + funpow_dist1 f x y\n\ngoal (2 subgoals):\n 1. funpow_dist1 f x z \\<le> funpow_dist1 f x y + funpow_dist1 f y z\n 2. funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z", "then"], ["proof (chain)\npicking this:\n  funpow_dist1 f x z \\<le> funpow_dist1 f y z + funpow_dist1 f x y", "show \"?L \\<le> ?R\""], ["proof (prove)\nusing this:\n  funpow_dist1 f x z \\<le> funpow_dist1 f y z + funpow_dist1 f x y\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x z \\<le> funpow_dist1 f x y + funpow_dist1 f y z", "by presburger"], ["proof (state)\nthis:\n  funpow_dist1 f x z \\<le> funpow_dist1 f x y + funpow_dist1 f y z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z", "have \"funpow_dist1 f y z \\<le> funpow_dist1 f x z - funpow_dist1 f x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. funpow_dist1 f y z \\<le> funpow_dist1 f x z - funpow_dist1 f x y", "using y_z_diff assms(1)"], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f x z - funpow_dist1 f x y)) y = z\n  funpow_dist1 f x y < funpow_dist1 f x z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f y z \\<le> funpow_dist1 f x z - funpow_dist1 f x y", "by (metis not_less zero_less_diff funpow_dist1_least)"], ["proof (state)\nthis:\n  funpow_dist1 f y z \\<le> funpow_dist1 f x z - funpow_dist1 f x y\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z", "then"], ["proof (chain)\npicking this:\n  funpow_dist1 f y z \\<le> funpow_dist1 f x z - funpow_dist1 f x y", "show \"?R \\<le> ?L\""], ["proof (prove)\nusing this:\n  funpow_dist1 f y z \\<le> funpow_dist1 f x z - funpow_dist1 f x y\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z", "by linarith"], ["proof (state)\nthis:\n  funpow_dist1 f x y + funpow_dist1 f y z \\<le> funpow_dist1 f x z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  funpow_dist1 f x z = funpow_dist1 f x y + funpow_dist1 f y z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma funpow_dist1_le_self:\n  assumes \"(f ^^ m) x = x\" \"0 < m\" \"y \\<in> orbit f x\"\n  shows \"funpow_dist1 f x y \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. funpow_dist1 f x y \\<le> m", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> funpow_dist1 f x y \\<le> m\n 2. x \\<noteq> y \\<Longrightarrow> funpow_dist1 f x y \\<le> m", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> funpow_dist1 f x y \\<le> m\n 2. x \\<noteq> y \\<Longrightarrow> funpow_dist1 f x y \\<le> m", "with assms"], ["proof (chain)\npicking this:\n  (f ^^ m) x = x\n  0 < m\n  y \\<in> orbit f x\n  x = y", "show ?thesis"], ["proof (prove)\nusing this:\n  (f ^^ m) x = x\n  0 < m\n  y \\<in> orbit f x\n  x = y\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x y \\<le> m", "by (auto dest!: funpow_dist1_least)"], ["proof (state)\nthis:\n  funpow_dist1 f x y \\<le> m\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> funpow_dist1 f x y \\<le> m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> funpow_dist1 f x y \\<le> m", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> funpow_dist1 f x y \\<le> m", "have \"(f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y mod m)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y mod m)) x", "using assms"], ["proof (prove)\nusing this:\n  (f ^^ m) x = x\n  0 < m\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y mod m)) x", "by (simp add: funpow_mod_eq)"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y mod m)) x\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> funpow_dist1 f x y \\<le> m", "with False \\<open>y \\<in> orbit f x\\<close>"], ["proof (chain)\npicking this:\n  x \\<noteq> y\n  y \\<in> orbit f x\n  (f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y mod m)) x", "have \"funpow_dist1 f x y \\<le> funpow_dist1 f x y mod m\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  y \\<in> orbit f x\n  (f ^^ funpow_dist1 f x y) x = (f ^^ (funpow_dist1 f x y mod m)) x\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x y \\<le> funpow_dist1 f x y mod m", "by auto (metis funpow_dist_least funpow_dist_prop funpow_dist_step funpow_simp_l not_less)"], ["proof (state)\nthis:\n  funpow_dist1 f x y \\<le> funpow_dist1 f x y mod m\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> funpow_dist1 f x y \\<le> m", "with \\<open>m > 0\\<close>"], ["proof (chain)\npicking this:\n  0 < m\n  funpow_dist1 f x y \\<le> funpow_dist1 f x y mod m", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < m\n  funpow_dist1 f x y \\<le> funpow_dist1 f x y mod m\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x y \\<le> m", "by (auto intro: order_trans)"], ["proof (state)\nthis:\n  funpow_dist1 f x y \\<le> m\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Permutation Domains\\<close>"], ["", "definition has_dom :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"has_dom f S \\<equiv> \\<forall>s. s \\<notin> S \\<longrightarrow> f s = s\""], ["", "lemma permutes_conv_has_dom:\n  \"f permutes S \\<longleftrightarrow> bij f \\<and> has_dom f S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f permutes S) = (bij f \\<and> has_dom f S)", "by (auto simp: permutes_def has_dom_def bij_iff)"], ["", "section \\<open>Segments\\<close>"], ["", "inductive_set segment :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> 'a set\" for f a b where\n  base: \"f a \\<noteq> b \\<Longrightarrow> f a \\<in> segment f a b\" |\n  step: \"x \\<in> segment f a b \\<Longrightarrow> f x \\<noteq> b \\<Longrightarrow> f x \\<in> segment f a b\""], ["", "lemma segment_step_2D:\n  assumes \"x \\<in> segment f a (f b)\" shows \"x \\<in> segment f a b \\<or> x = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> segment f a b \\<or> x = b", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> segment f a (f b)\n\ngoal (1 subgoal):\n 1. x \\<in> segment f a b \\<or> x = b", "by induct (auto intro: segment.intros)"], ["", "lemma not_in_segment2D:\n  assumes \"x \\<in> segment f a b\" shows \"x \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> b", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> segment f a b\n\ngoal (1 subgoal):\n 1. x \\<noteq> b", "by induct auto"], ["", "lemma segment_altdef:\n  assumes \"b \\<in> orbit f a\"\n  shows \"segment f a b = (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. segment f a b = (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> segment f a b \\<Longrightarrow>\n       x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n 2. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> segment f a b \\<Longrightarrow>\n       x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n 2. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "assume \"x \\<in> ?L\""], ["proof (state)\nthis:\n  x \\<in> segment f a b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> segment f a b \\<Longrightarrow>\n       x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n 2. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "have \"f a \\<noteq>b \\<Longrightarrow> b \\<in> orbit f (f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a \\<noteq> b \\<Longrightarrow> b \\<in> orbit f (f a)", "using assms"], ["proof (prove)\nusing this:\n  b \\<in> orbit f a\n\ngoal (1 subgoal):\n 1. f a \\<noteq> b \\<Longrightarrow> b \\<in> orbit f (f a)", "by (simp add: orbit_step)"], ["proof (state)\nthis:\n  f a \\<noteq> b \\<Longrightarrow> b \\<in> orbit f (f a)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> segment f a b \\<Longrightarrow>\n       x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n 2. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "then"], ["proof (chain)\npicking this:\n  f a \\<noteq> b \\<Longrightarrow> b \\<in> orbit f (f a)", "have *: \"f a \\<noteq> b \\<Longrightarrow> 0 < funpow_dist f (f a) b\""], ["proof (prove)\nusing this:\n  f a \\<noteq> b \\<Longrightarrow> b \\<in> orbit f (f a)\n\ngoal (1 subgoal):\n 1. f a \\<noteq> b \\<Longrightarrow> 0 < funpow_dist f (f a) b", "using assms"], ["proof (prove)\nusing this:\n  f a \\<noteq> b \\<Longrightarrow> b \\<in> orbit f (f a)\n  b \\<in> orbit f a\n\ngoal (1 subgoal):\n 1. f a \\<noteq> b \\<Longrightarrow> 0 < funpow_dist f (f a) b", "using gr0I funpow_dist_0_eq[OF \\<open>_ \\<Longrightarrow> b \\<in> orbit f (f a)\\<close>]"], ["proof (prove)\nusing this:\n  f a \\<noteq> b \\<Longrightarrow> b \\<in> orbit f (f a)\n  b \\<in> orbit f a\n  (?n = 0 \\<Longrightarrow> False) \\<Longrightarrow> 0 < ?n\n  f a \\<noteq> b \\<Longrightarrow> (funpow_dist f (f a) b = 0) = (f a = b)\n\ngoal (1 subgoal):\n 1. f a \\<noteq> b \\<Longrightarrow> 0 < funpow_dist f (f a) b", "by (simp add: orbit.intros)"], ["proof (state)\nthis:\n  f a \\<noteq> b \\<Longrightarrow> 0 < funpow_dist f (f a) b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> segment f a b \\<Longrightarrow>\n       x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n 2. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "from \\<open>x \\<in> ?L\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> segment f a b", "show \"x \\<in> ?R\""], ["proof (prove)\nusing this:\n  x \\<in> segment f a b\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. f a \\<noteq> b \\<Longrightarrow>\n    f a \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> segment f a b;\n        x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b};\n        f x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> f x\n                         \\<in> (\\<lambda>n. (f ^^ n) a) `\n                               {1..<funpow_dist1 f a b}", "case base"], ["proof (state)\nthis:\n  f a \\<noteq> b\n\ngoal (2 subgoals):\n 1. f a \\<noteq> b \\<Longrightarrow>\n    f a \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> segment f a b;\n        x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b};\n        f x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> f x\n                         \\<in> (\\<lambda>n. (f ^^ n) a) `\n                               {1..<funpow_dist1 f a b}", "then"], ["proof (chain)\npicking this:\n  f a \\<noteq> b", "show ?case"], ["proof (prove)\nusing this:\n  f a \\<noteq> b\n\ngoal (1 subgoal):\n 1. f a \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}", "by (intro image_eqI[where x=1]) (auto simp: *)"], ["proof (state)\nthis:\n  f a \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> segment f a b;\n        x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b};\n        f x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> f x\n                         \\<in> (\\<lambda>n. (f ^^ n) a) `\n                               {1..<funpow_dist1 f a b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> segment f a b;\n        x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b};\n        f x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> f x\n                         \\<in> (\\<lambda>n. (f ^^ n) a) `\n                               {1..<funpow_dist1 f a b}", "case step"], ["proof (state)\nthis:\n  x_ \\<in> segment f a b\n  x_ \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n  f x_ \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> segment f a b;\n        x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b};\n        f x \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> f x\n                         \\<in> (\\<lambda>n. (f ^^ n) a) `\n                               {1..<funpow_dist1 f a b}", "then"], ["proof (chain)\npicking this:\n  x_ \\<in> segment f a b\n  x_ \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n  f x_ \\<noteq> b", "show ?case"], ["proof (prove)\nusing this:\n  x_ \\<in> segment f a b\n  x_ \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n  f x_ \\<noteq> b\n\ngoal (1 subgoal):\n 1. f x_ \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}", "using assms funpow_dist1_prop less_antisym"], ["proof (prove)\nusing this:\n  x_ \\<in> segment f a b\n  x_ \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n  f x_ \\<noteq> b\n  b \\<in> orbit f a\n  ?y \\<in> orbit ?f ?x \\<Longrightarrow>\n  (?f ^^ funpow_dist1 ?f ?x ?y) ?x = ?y\n  \\<lbrakk>\\<not> ?n < ?m; ?n < Suc ?m\\<rbrakk> \\<Longrightarrow> ?m = ?n\n\ngoal (1 subgoal):\n 1. f x_ \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}", "by (fastforce intro!: image_eqI[where x=\"Suc n\" for n])"], ["proof (state)\nthis:\n  f x_ \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "assume \"x \\<in> ?R\""], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}", "obtain n where \"(f ^^ n ) a = x\" \"0 < n\" \"n < funpow_dist1 f a b\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>n. (f ^^ n) a) ` {1..<funpow_dist1 f a b}\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>(f ^^ n) a = x; 0 < n; n < funpow_dist1 f a b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (f ^^ n) a = x\n  0 < n\n  n < funpow_dist1 f a b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>n. (f ^^ n) a) `\n               {1..<funpow_dist1 f a b} \\<Longrightarrow>\n       x \\<in> segment f a b", "then"], ["proof (chain)\npicking this:\n  (f ^^ n) a = x\n  0 < n\n  n < funpow_dist1 f a b", "show \"x \\<in> ?L\""], ["proof (prove)\nusing this:\n  (f ^^ n) a = x\n  0 < n\n  n < funpow_dist1 f a b\n\ngoal (1 subgoal):\n 1. x \\<in> segment f a b", "proof (induct n arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>(f ^^ 0) a = x; 0 < 0; 0 < funpow_dist1 f a b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> segment f a b\n 2. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>(f ^^ n) a = x; 0 < n;\n                    n < funpow_dist1 f a b\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> segment f a b;\n        (f ^^ Suc n) a = x; 0 < Suc n; Suc n < funpow_dist1 f a b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> segment f a b", "case 0"], ["proof (state)\nthis:\n  (f ^^ 0) a = x\n  0 < 0\n  0 < funpow_dist1 f a b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>(f ^^ 0) a = x; 0 < 0; 0 < funpow_dist1 f a b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> segment f a b\n 2. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>(f ^^ n) a = x; 0 < n;\n                    n < funpow_dist1 f a b\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> segment f a b;\n        (f ^^ Suc n) a = x; 0 < Suc n; Suc n < funpow_dist1 f a b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> segment f a b", "then"], ["proof (chain)\npicking this:\n  (f ^^ 0) a = x\n  0 < 0\n  0 < funpow_dist1 f a b", "show ?case"], ["proof (prove)\nusing this:\n  (f ^^ 0) a = x\n  0 < 0\n  0 < funpow_dist1 f a b\n\ngoal (1 subgoal):\n 1. x \\<in> segment f a b", "by simp"], ["proof (state)\nthis:\n  x \\<in> segment f a b\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>(f ^^ n) a = x; 0 < n;\n                    n < funpow_dist1 f a b\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> segment f a b;\n        (f ^^ Suc n) a = x; 0 < Suc n; Suc n < funpow_dist1 f a b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> segment f a b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>(f ^^ n) a = x; 0 < n;\n                    n < funpow_dist1 f a b\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> segment f a b;\n        (f ^^ Suc n) a = x; 0 < Suc n; Suc n < funpow_dist1 f a b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> segment f a b", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>(f ^^ n) a = ?x; 0 < n; n < funpow_dist1 f a b\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> segment f a b\n  (f ^^ Suc n) a = x\n  0 < Suc n\n  Suc n < funpow_dist1 f a b\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>(f ^^ n) a = x; 0 < n;\n                    n < funpow_dist1 f a b\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> segment f a b;\n        (f ^^ Suc n) a = x; 0 < Suc n; Suc n < funpow_dist1 f a b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> segment f a b", "have \"(f ^^ Suc n) a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ Suc n) a \\<noteq> b", "using Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>(f ^^ n) a = ?x; 0 < n; n < funpow_dist1 f a b\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> segment f a b\n  (f ^^ Suc n) a = x\n  0 < Suc n\n  Suc n < funpow_dist1 f a b\n\ngoal (1 subgoal):\n 1. (f ^^ Suc n) a \\<noteq> b", "by (meson funpow_dist1_least)"], ["proof (state)\nthis:\n  (f ^^ Suc n) a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   \\<lbrakk>(f ^^ n) a = x; 0 < n;\n                    n < funpow_dist1 f a b\\<rbrakk>\n                   \\<Longrightarrow> x \\<in> segment f a b;\n        (f ^^ Suc n) a = x; 0 < Suc n; Suc n < funpow_dist1 f a b\\<rbrakk>\n       \\<Longrightarrow> x \\<in> segment f a b", "with Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>(f ^^ n) a = ?x; 0 < n; n < funpow_dist1 f a b\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> segment f a b\n  (f ^^ Suc n) a = x\n  0 < Suc n\n  Suc n < funpow_dist1 f a b\n  (f ^^ Suc n) a \\<noteq> b", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>(f ^^ n) a = ?x; 0 < n; n < funpow_dist1 f a b\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> segment f a b\n  (f ^^ Suc n) a = x\n  0 < Suc n\n  Suc n < funpow_dist1 f a b\n  (f ^^ Suc n) a \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<in> segment f a b", "by (cases \"n = 0\") (auto intro: segment.intros)"], ["proof (state)\nthis:\n  x \\<in> segment f a b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> segment f a b\n\ngoal:\nNo subgoals!", "qed"], ["", "(*XXX move up*)"], ["", "lemma segmentD_orbit:\n  assumes \"x \\<in> segment f y z\" shows \"x \\<in> orbit f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> orbit f y", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> segment f y z\n\ngoal (1 subgoal):\n 1. x \\<in> orbit f y", "by induct (auto intro: orbit.intros)"], ["", "lemma segment1_empty: \"segment f x (f x) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. segment f x (f x) = {}", "by (auto simp: segment_altdef orbit.base funpow_dist_0)"], ["", "lemma segment_subset:\n  assumes \"y \\<in> segment f x z\"\n  assumes \"w \\<in> segment f x y\"\n  shows \"w \\<in> segment f x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> segment f x z", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> segment f x z\n  w \\<in> segment f x y\n\ngoal (1 subgoal):\n 1. w \\<in> segment f x z", "by (induct arbitrary: w) (auto simp: segment1_empty intro: segment.intros dest: segment_step_2D elim: segment.cases)"], ["", "(* XXX move up*)"], ["", "lemma not_in_segment1:\n  assumes \"y \\<in> orbit f x\" shows \"x \\<notin> segment f x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> segment f x y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> segment f x y \\<Longrightarrow> False", "assume \"x \\<in> segment f x y\""], ["proof (state)\nthis:\n  x \\<in> segment f x y\n\ngoal (1 subgoal):\n 1. x \\<in> segment f x y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> segment f x y", "obtain n where n: \"0 < n\" \"n < funpow_dist1 f x y\" \"(f ^^ n) x = x\""], ["proof (prove)\nusing this:\n  x \\<in> segment f x y\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>0 < n; n < funpow_dist1 f x y; (f ^^ n) x = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> segment f x y\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>0 < n; n < funpow_dist1 f x y; (f ^^ n) x = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: segment_altdef Suc_le_eq)"], ["proof (state)\nthis:\n  0 < n\n  n < funpow_dist1 f x y\n  (f ^^ n) x = x\n\ngoal (1 subgoal):\n 1. x \\<in> segment f x y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  0 < n\n  n < funpow_dist1 f x y\n  (f ^^ n) x = x", "have neq_y: \"(f ^^ (funpow_dist1 f x y - n)) x \\<noteq> y\""], ["proof (prove)\nusing this:\n  0 < n\n  n < funpow_dist1 f x y\n  (f ^^ n) x = x\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x y - n)) x \\<noteq> y", "by (simp add: funpow_dist1_least)"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x y - n)) x \\<noteq> y\n\ngoal (1 subgoal):\n 1. x \\<in> segment f x y \\<Longrightarrow> False", "have \"(f ^^ (funpow_dist1 f x y - n)) x = (f ^^ (funpow_dist1 f x y - n)) ((f ^^ n) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x y - n)) x =\n    (f ^^ (funpow_dist1 f x y - n)) ((f ^^ n) x)", "using n"], ["proof (prove)\nusing this:\n  0 < n\n  n < funpow_dist1 f x y\n  (f ^^ n) x = x\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x y - n)) x =\n    (f ^^ (funpow_dist1 f x y - n)) ((f ^^ n) x)", "by (simp add: funpow_add_app)"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x y - n)) x =\n  (f ^^ (funpow_dist1 f x y - n)) ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. x \\<in> segment f x y \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x y - n)) x =\n  (f ^^ (funpow_dist1 f x y - n)) ((f ^^ n) x)\n\ngoal (1 subgoal):\n 1. x \\<in> segment f x y \\<Longrightarrow> False", "have \"\\<dots> = (f ^^ funpow_dist1 f x y) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x y - n)) ((f ^^ n) x) =\n    (f ^^ funpow_dist1 f x y) x", "using \\<open>n < _\\<close>"], ["proof (prove)\nusing this:\n  n < funpow_dist1 f x y\n\ngoal (1 subgoal):\n 1. (f ^^ (funpow_dist1 f x y - n)) ((f ^^ n) x) =\n    (f ^^ funpow_dist1 f x y) x", "by (simp add: funpow_add_app)"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x y - n)) ((f ^^ n) x) = (f ^^ funpow_dist1 f x y) x\n\ngoal (1 subgoal):\n 1. x \\<in> segment f x y \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (f ^^ (funpow_dist1 f x y - n)) ((f ^^ n) x) = (f ^^ funpow_dist1 f x y) x\n\ngoal (1 subgoal):\n 1. x \\<in> segment f x y \\<Longrightarrow> False", "have \"\\<dots> = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "by (rule funpow_dist1_prop)"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f x y) x = y\n\ngoal (1 subgoal):\n 1. x \\<in> segment f x y \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  (f ^^ (funpow_dist1 f x y - n)) x = y", "show False"], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f x y - n)) x = y\n\ngoal (1 subgoal):\n 1. False", "using neq_y"], ["proof (prove)\nusing this:\n  (f ^^ (funpow_dist1 f x y - n)) x = y\n  (f ^^ (funpow_dist1 f x y - n)) x \\<noteq> y\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_in_segment2: \"y \\<notin> segment f x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> segment f x y", "using not_in_segment2D"], ["proof (prove)\nusing this:\n  ?x \\<in> segment ?f ?a ?b \\<Longrightarrow> ?x \\<noteq> ?b\n\ngoal (1 subgoal):\n 1. y \\<notin> segment f x y", "by metis"], ["", "(*XXX move*)"], ["", "lemma in_segmentE:\n  assumes \"y \\<in> segment f x z\" \"z \\<in> orbit f x\"\n  obtains \"(f ^^ funpow_dist1 f x y) x = y\" \"funpow_dist1 f x y < funpow_dist1 f x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>(f ^^ funpow_dist1 f x y) x = y;\n      funpow_dist1 f x y < funpow_dist1 f x z\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lbrakk>(f ^^ funpow_dist1 f x y) x = y;\n      funpow_dist1 f x y < funpow_dist1 f x z\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    (f ^^ funpow_dist1 f x y) x = y\n 2. (\\<lbrakk>(f ^^ funpow_dist1 f x y) x = y;\n      funpow_dist1 f x y < funpow_dist1 f x z\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    funpow_dist1 f x y < funpow_dist1 f x z", "from assms"], ["proof (chain)\npicking this:\n  y \\<in> segment f x z\n  z \\<in> orbit f x", "show \"(f ^^ funpow_dist1 f x y) x = y\""], ["proof (prove)\nusing this:\n  y \\<in> segment f x z\n  z \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (f ^^ funpow_dist1 f x y) x = y", "by (intro segmentD_orbit funpow_dist1_prop)"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f x y) x = y\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>(f ^^ funpow_dist1 f x y) x = y;\n      funpow_dist1 f x y < funpow_dist1 f x z\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    funpow_dist1 f x y < funpow_dist1 f x z", "moreover"], ["proof (state)\nthis:\n  (f ^^ funpow_dist1 f x y) x = y\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>(f ^^ funpow_dist1 f x y) x = y;\n      funpow_dist1 f x y < funpow_dist1 f x z\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    funpow_dist1 f x y < funpow_dist1 f x z", "obtain n where \"(f ^^ n) x = y\" \"0 < n\" \"n < funpow_dist1 f x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>(f ^^ n) x = y; 0 < n; n < funpow_dist1 f x z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> segment f x z\n  z \\<in> orbit f x\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>(f ^^ n) x = y; 0 < n; n < funpow_dist1 f x z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: segment_altdef)"], ["proof (state)\nthis:\n  (f ^^ n) x = y\n  0 < n\n  n < funpow_dist1 f x z\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>(f ^^ funpow_dist1 f x y) x = y;\n      funpow_dist1 f x y < funpow_dist1 f x z\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    funpow_dist1 f x y < funpow_dist1 f x z", "moreover"], ["proof (state)\nthis:\n  (f ^^ n) x = y\n  0 < n\n  n < funpow_dist1 f x z\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>(f ^^ funpow_dist1 f x y) x = y;\n      funpow_dist1 f x y < funpow_dist1 f x z\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    funpow_dist1 f x y < funpow_dist1 f x z", "then"], ["proof (chain)\npicking this:\n  (f ^^ n) x = y\n  0 < n\n  n < funpow_dist1 f x z", "have \"funpow_dist1 f x y \\<le> n\""], ["proof (prove)\nusing this:\n  (f ^^ n) x = y\n  0 < n\n  n < funpow_dist1 f x z\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x y \\<le> n", "by (meson funpow_dist1_least not_less)"], ["proof (state)\nthis:\n  funpow_dist1 f x y \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>(f ^^ funpow_dist1 f x y) x = y;\n      funpow_dist1 f x y < funpow_dist1 f x z\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    funpow_dist1 f x y < funpow_dist1 f x z", "ultimately"], ["proof (chain)\npicking this:\n  (f ^^ funpow_dist1 f x y) x = y\n  (f ^^ n) x = y\n  0 < n\n  n < funpow_dist1 f x z\n  funpow_dist1 f x y \\<le> n", "show \"funpow_dist1 f x y < funpow_dist1 f x z\""], ["proof (prove)\nusing this:\n  (f ^^ funpow_dist1 f x y) x = y\n  (f ^^ n) x = y\n  0 < n\n  n < funpow_dist1 f x z\n  funpow_dist1 f x y \\<le> n\n\ngoal (1 subgoal):\n 1. funpow_dist1 f x y < funpow_dist1 f x z", "by linarith"], ["proof (state)\nthis:\n  funpow_dist1 f x y < funpow_dist1 f x z\n\ngoal:\nNo subgoals!", "qed"], ["", "(*XXX move*)"], ["", "lemma cyclic_split_segment:\n  assumes S: \"cyclic_on f S\" \"a \\<in> S\" \"b \\<in> S\" and \"a \\<noteq> b\"\n  shows \"S = {a,b} \\<union> segment f a b \\<union> segment f b a\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. S = {a, b} \\<union> segment f a b \\<union> segment f b a", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       x \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n 2. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "fix c"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       x \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n 2. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "assume \"c \\<in> ?L\""], ["proof (state)\nthis:\n  c \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       x \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n 2. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "with S"], ["proof (chain)\npicking this:\n  cyclic_on f S\n  a \\<in> S\n  b \\<in> S\n  c \\<in> S", "have \"c \\<in> orbit f a\""], ["proof (prove)\nusing this:\n  cyclic_on f S\n  a \\<in> S\n  b \\<in> S\n  c \\<in> S\n\ngoal (1 subgoal):\n 1. c \\<in> orbit f a", "unfolding cyclic_on_alldef"], ["proof (prove)\nusing this:\n  S \\<noteq> {} \\<and> (\\<forall>s\\<in>S. S = orbit f s)\n  a \\<in> S\n  b \\<in> S\n  c \\<in> S\n\ngoal (1 subgoal):\n 1. c \\<in> orbit f a", "by auto"], ["proof (state)\nthis:\n  c \\<in> orbit f a\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S \\<Longrightarrow>\n       x \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n 2. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "then"], ["proof (chain)\npicking this:\n  c \\<in> orbit f a", "show \"c \\<in> ?R\""], ["proof (prove)\nusing this:\n  c \\<in> orbit f a\n\ngoal (1 subgoal):\n 1. c \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a", "by induct (auto intro: segment.intros)"], ["proof (state)\nthis:\n  c \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "assume \"c \\<in> ?R\""], ["proof (state)\nthis:\n  c \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "moreover"], ["proof (state)\nthis:\n  c \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "have \"segment f a b \\<subseteq> orbit f a\" \"segment f b a \\<subseteq> orbit f b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. segment f a b \\<subseteq> orbit f a &&&\n    segment f b a \\<subseteq> orbit f b", "by (auto dest: segmentD_orbit)"], ["proof (state)\nthis:\n  segment f a b \\<subseteq> orbit f a\n  segment f b a \\<subseteq> orbit f b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {a, b} \\<union> segment f a b \\<union>\n               segment f b a \\<Longrightarrow>\n       x \\<in> S", "ultimately"], ["proof (chain)\npicking this:\n  c \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n  segment f a b \\<subseteq> orbit f a\n  segment f b a \\<subseteq> orbit f b", "show \"c \\<in> ?L\""], ["proof (prove)\nusing this:\n  c \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n  segment f a b \\<subseteq> orbit f a\n  segment f b a \\<subseteq> orbit f b\n\ngoal (1 subgoal):\n 1. c \\<in> S", "using S"], ["proof (prove)\nusing this:\n  c \\<in> {a, b} \\<union> segment f a b \\<union> segment f b a\n  segment f a b \\<subseteq> orbit f a\n  segment f b a \\<subseteq> orbit f b\n  cyclic_on f S\n  a \\<in> S\n  b \\<in> S\n\ngoal (1 subgoal):\n 1. c \\<in> S", "by (auto simp: cyclic_on_alldef)"], ["proof (state)\nthis:\n  c \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "(*XXX move*)"], ["", "lemma segment_split:\n  assumes y_in_seg: \"y \\<in> segment f x z\"\n  shows \"segment f x z = segment f x y \\<union> {y} \\<union> segment f y z\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. segment f x z = segment f x y \\<union> {y} \\<union> segment f y z", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f x z \\<Longrightarrow>\n       xa \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n 2. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "fix w"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f x z \\<Longrightarrow>\n       xa \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n 2. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "assume \"w \\<in> ?L\""], ["proof (state)\nthis:\n  w \\<in> segment f x z\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f x z \\<Longrightarrow>\n       xa \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n 2. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "then"], ["proof (chain)\npicking this:\n  w \\<in> segment f x z", "show \"w \\<in> ?R\""], ["proof (prove)\nusing this:\n  w \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. w \\<in> segment f x y \\<union> {y} \\<union> segment f y z", "by induct (auto intro: segment.intros)"], ["proof (state)\nthis:\n  w \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "assume \"w \\<in> ?R\""], ["proof (state)\nthis:\n  w \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "moreover"], ["proof (state)\nthis:\n  w \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "{"], ["proof (state)\nthis:\n  w \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "assume \"w \\<in> segment f x y\""], ["proof (state)\nthis:\n  w \\<in> segment f x y\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "then"], ["proof (chain)\npicking this:\n  w \\<in> segment f x y", "have \"w \\<in> segment f x z\""], ["proof (prove)\nusing this:\n  w \\<in> segment f x y\n\ngoal (1 subgoal):\n 1. w \\<in> segment f x z", "using segment_subset[OF y_in_seg]"], ["proof (prove)\nusing this:\n  w \\<in> segment f x y\n  ?w \\<in> segment f x y \\<Longrightarrow> ?w \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. w \\<in> segment f x z", "by auto"], ["proof (state)\nthis:\n  w \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "}"], ["proof (state)\nthis:\n  w \\<in> segment f x y \\<Longrightarrow> w \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "moreover"], ["proof (state)\nthis:\n  w \\<in> segment f x y \\<Longrightarrow> w \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "{"], ["proof (state)\nthis:\n  w \\<in> segment f x y \\<Longrightarrow> w \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "assume \"w \\<in> segment f y z\""], ["proof (state)\nthis:\n  w \\<in> segment f y z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "then"], ["proof (chain)\npicking this:\n  w \\<in> segment f y z", "have \"w \\<in> segment f x z\""], ["proof (prove)\nusing this:\n  w \\<in> segment f y z\n\ngoal (1 subgoal):\n 1. w \\<in> segment f x z", "using y_in_seg"], ["proof (prove)\nusing this:\n  w \\<in> segment f y z\n  y \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. w \\<in> segment f x z", "by induct (auto intro: segment.intros)"], ["proof (state)\nthis:\n  w \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "}"], ["proof (state)\nthis:\n  w \\<in> segment f y z \\<Longrightarrow> w \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f x y \\<union> {y} \\<union>\n                segment f y z \\<Longrightarrow>\n       xa \\<in> segment f x z", "ultimately"], ["proof (chain)\npicking this:\n  w \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n  w \\<in> segment f x y \\<Longrightarrow> w \\<in> segment f x z\n  w \\<in> segment f y z \\<Longrightarrow> w \\<in> segment f x z", "show \"w \\<in> ?L\""], ["proof (prove)\nusing this:\n  w \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n  w \\<in> segment f x y \\<Longrightarrow> w \\<in> segment f x z\n  w \\<in> segment f y z \\<Longrightarrow> w \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. w \\<in> segment f x z", "using y_in_seg"], ["proof (prove)\nusing this:\n  w \\<in> segment f x y \\<union> {y} \\<union> segment f y z\n  w \\<in> segment f x y \\<Longrightarrow> w \\<in> segment f x z\n  w \\<in> segment f y z \\<Longrightarrow> w \\<in> segment f x z\n  y \\<in> segment f x z\n\ngoal (1 subgoal):\n 1. w \\<in> segment f x z", "by (auto intro: segment.intros)"], ["proof (state)\nthis:\n  w \\<in> segment f x z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma in_segmentD_inv:\n  assumes \"x \\<in> segment f a b\" \"x \\<noteq> f a\"\n  assumes \"inj f\"\n  shows \"inv f x \\<in> segment f a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv f x \\<in> segment f a b", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> segment f a b\n  x \\<noteq> f a\n  inj f\n\ngoal (1 subgoal):\n 1. inv f x \\<in> segment f a b", "by (auto elim: segment.cases)"], ["", "lemma in_orbit_invI:\n  assumes \"b \\<in> orbit f a\"\n  assumes \"inj f\"\n  shows \"a \\<in> orbit (inv f) b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> orbit (inv f) b", "using assms(1)"], ["proof (prove)\nusing this:\n  b \\<in> orbit f a\n\ngoal (1 subgoal):\n 1. a \\<in> orbit (inv f) b", "apply induct"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<in> orbit (inv f) (f a)\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a; a \\<in> orbit (inv f) y\\<rbrakk>\n       \\<Longrightarrow> a \\<in> orbit (inv f) (f y)", "apply (simp add: assms(2) orbit_eqI(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a; a \\<in> orbit (inv f) y\\<rbrakk>\n       \\<Longrightarrow> a \\<in> orbit (inv f) (f y)", "by (metis assms(2) inv_f_f orbit.base orbit_trans)"], ["", "lemma segment_step_2:\n  assumes A: \"x \\<in> segment f a b\" \"b \\<noteq> a\" and \"inj f\"\n  shows \"x \\<in> segment f a (f b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> segment f a (f b)", "using A"], ["proof (prove)\nusing this:\n  x \\<in> segment f a b\n  b \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<in> segment f a (f b)", "by induct (auto intro: segment.intros dest: not_in_segment2D injD[OF \\<open>inj f\\<close>])"], ["", "lemma inv_end_in_segment:\n  assumes \"b \\<in> orbit f a\" \"f a \\<noteq> b\" \"bij f\"\n  shows \"inv f b \\<in> segment f a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv f b \\<in> segment f a b", "using assms(1,2)"], ["proof (prove)\nusing this:\n  b \\<in> orbit f a\n  f a \\<noteq> b\n\ngoal (1 subgoal):\n 1. inv f b \\<in> segment f a b", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. f a \\<noteq> f a \\<Longrightarrow> inv f (f a) \\<in> segment f a (f a)\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "case base"], ["proof (state)\nthis:\n  f a \\<noteq> f a\n\ngoal (2 subgoals):\n 1. f a \\<noteq> f a \\<Longrightarrow> inv f (f a) \\<in> segment f a (f a)\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "then"], ["proof (chain)\npicking this:\n  f a \\<noteq> f a", "show ?case"], ["proof (prove)\nusing this:\n  f a \\<noteq> f a\n\ngoal (1 subgoal):\n 1. inv f (f a) \\<in> segment f a (f a)", "by simp"], ["proof (state)\nthis:\n  inv f (f a) \\<in> segment f a (f a)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "case (step x)"], ["proof (state)\nthis:\n  x \\<in> orbit f a\n  f a \\<noteq> x \\<Longrightarrow> inv f x \\<in> segment f a x\n  f a \\<noteq> f x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "moreover"], ["proof (state)\nthis:\n  x \\<in> orbit f a\n  f a \\<noteq> x \\<Longrightarrow> inv f x \\<in> segment f a x\n  f a \\<noteq> f x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "from \\<open>bij f\\<close>"], ["proof (chain)\npicking this:\n  bij f", "have \"inj f\""], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. inj f", "by (rule bij_is_inj)"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "moreover"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "then"], ["proof (chain)\npicking this:\n  inj f", "have \"x \\<noteq> f x \\<Longrightarrow> f a = x \\<Longrightarrow> x \\<in> segment f a (f x)\""], ["proof (prove)\nusing this:\n  inj f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> f x; f a = x\\<rbrakk>\n    \\<Longrightarrow> x \\<in> segment f a (f x)", "by (meson segment.simps)"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<noteq> f x; f a = x\\<rbrakk>\n  \\<Longrightarrow> x \\<in> segment f a (f x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<noteq> f x; f a = x\\<rbrakk>\n  \\<Longrightarrow> x \\<in> segment f a (f x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "have \"x \\<noteq> f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> f x", "using step \\<open>inj f\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> orbit f a\n  f a \\<noteq> x \\<Longrightarrow> inv f x \\<in> segment f a x\n  f a \\<noteq> f x\n  inj f\n\ngoal (1 subgoal):\n 1. x \\<noteq> f x", "by (metis in_orbit_invI inv_f_eq not_in_segment1 segment.base)"], ["proof (state)\nthis:\n  x \\<noteq> f x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> f x", "have \"inv f x \\<in> segment f a (f x) \\<Longrightarrow> x \\<in> segment f a (f x)\""], ["proof (prove)\nusing this:\n  x \\<noteq> f x\n\ngoal (1 subgoal):\n 1. inv f x \\<in> segment f a (f x) \\<Longrightarrow>\n    x \\<in> segment f a (f x)", "using \\<open>bij f\\<close> \\<open>inj f\\<close>"], ["proof (prove)\nusing this:\n  x \\<noteq> f x\n  bij f\n  inj f\n\ngoal (1 subgoal):\n 1. inv f x \\<in> segment f a (f x) \\<Longrightarrow>\n    x \\<in> segment f a (f x)", "by (auto dest: segment.step simp: surj_f_inv_f bij_is_surj)"], ["proof (state)\nthis:\n  inv f x \\<in> segment f a (f x) \\<Longrightarrow>\n  x \\<in> segment f a (f x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "then"], ["proof (chain)\npicking this:\n  inv f x \\<in> segment f a (f x) \\<Longrightarrow>\n  x \\<in> segment f a (f x)", "have \"inv f x \\<in> segment f a x \\<Longrightarrow> x \\<in> segment f a (f x)\""], ["proof (prove)\nusing this:\n  inv f x \\<in> segment f a (f x) \\<Longrightarrow>\n  x \\<in> segment f a (f x)\n\ngoal (1 subgoal):\n 1. inv f x \\<in> segment f a x \\<Longrightarrow> x \\<in> segment f a (f x)", "using \\<open>f a \\<noteq> f x\\<close> \\<open>inj f\\<close>"], ["proof (prove)\nusing this:\n  inv f x \\<in> segment f a (f x) \\<Longrightarrow>\n  x \\<in> segment f a (f x)\n  f a \\<noteq> f x\n  inj f\n\ngoal (1 subgoal):\n 1. inv f x \\<in> segment f a x \\<Longrightarrow> x \\<in> segment f a (f x)", "by (auto dest: segment_step_2 injD)"], ["proof (state)\nthis:\n  inv f x \\<in> segment f a x \\<Longrightarrow> x \\<in> segment f a (f x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        f a \\<noteq> y \\<Longrightarrow> inv f y \\<in> segment f a y;\n        f a \\<noteq> f y\\<rbrakk>\n       \\<Longrightarrow> inv f (f y) \\<in> segment f a (f y)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> orbit f a\n  f a \\<noteq> x \\<Longrightarrow> inv f x \\<in> segment f a x\n  f a \\<noteq> f x\n  inj f\n  \\<lbrakk>x \\<noteq> f x; f a = x\\<rbrakk>\n  \\<Longrightarrow> x \\<in> segment f a (f x)\n  inv f x \\<in> segment f a x \\<Longrightarrow> x \\<in> segment f a (f x)", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> orbit f a\n  f a \\<noteq> x \\<Longrightarrow> inv f x \\<in> segment f a x\n  f a \\<noteq> f x\n  inj f\n  \\<lbrakk>x \\<noteq> f x; f a = x\\<rbrakk>\n  \\<Longrightarrow> x \\<in> segment f a (f x)\n  inv f x \\<in> segment f a x \\<Longrightarrow> x \\<in> segment f a (f x)\n\ngoal (1 subgoal):\n 1. inv f (f x) \\<in> segment f a (f x)", "by (cases \"f a = x\") simp_all"], ["proof (state)\nthis:\n  inv f (f x) \\<in> segment f a (f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma segment_overlapping:\n  assumes \"x \\<in> orbit f a\" \"x \\<in> orbit f b\" \"bij f\"\n  shows \"segment f a x \\<subseteq> segment f b x \\<or> segment f b x \\<subseteq> segment f a x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. segment f a x \\<subseteq> segment f b x \\<or>\n    segment f b x \\<subseteq> segment f a x", "using assms(1,2)"], ["proof (prove)\nusing this:\n  x \\<in> orbit f a\n  x \\<in> orbit f b\n\ngoal (1 subgoal):\n 1. segment f a x \\<subseteq> segment f b x \\<or>\n    segment f b x \\<subseteq> segment f a x", "proof induction"], ["proof (state)\ngoal (2 subgoals):\n 1. f a \\<in> orbit f b \\<Longrightarrow>\n    segment f a (f a) \\<subseteq> segment f b (f a) \\<or>\n    segment f b (f a) \\<subseteq> segment f a (f a)\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "case base"], ["proof (state)\nthis:\n  f a \\<in> orbit f b\n\ngoal (2 subgoals):\n 1. f a \\<in> orbit f b \\<Longrightarrow>\n    segment f a (f a) \\<subseteq> segment f b (f a) \\<or>\n    segment f b (f a) \\<subseteq> segment f a (f a)\n 2. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "then"], ["proof (chain)\npicking this:\n  f a \\<in> orbit f b", "show ?case"], ["proof (prove)\nusing this:\n  f a \\<in> orbit f b\n\ngoal (1 subgoal):\n 1. segment f a (f a) \\<subseteq> segment f b (f a) \\<or>\n    segment f b (f a) \\<subseteq> segment f a (f a)", "by (simp add: segment1_empty)"], ["proof (state)\nthis:\n  segment f a (f a) \\<subseteq> segment f b (f a) \\<or>\n  segment f b (f a) \\<subseteq> segment f a (f a)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "case (step x)"], ["proof (state)\nthis:\n  x \\<in> orbit f a\n  x \\<in> orbit f b \\<Longrightarrow>\n  segment f a x \\<subseteq> segment f b x \\<or>\n  segment f b x \\<subseteq> segment f a x\n  f x \\<in> orbit f b\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "from \\<open>bij f\\<close>"], ["proof (chain)\npicking this:\n  bij f", "have \"inj f\""], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. inj f", "by (simp add: bij_is_inj)"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "have *: \"\\<And>f x y. y \\<in> segment f x (f x) \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f x y. y \\<in> segment f x (f x) \\<Longrightarrow> False", "by (simp add: segment1_empty)"], ["proof (state)\nthis:\n  ?y \\<in> segment ?f ?x (?f ?x) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "{"], ["proof (state)\nthis:\n  ?y \\<in> segment ?f ?x (?f ?x) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "fix y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "assume A: \"y \\<in> segment f b (f x)\" \"y \\<notin> segment f a (f x)\" \"z \\<in> segment f a (f x)\""], ["proof (state)\nthis:\n  y \\<in> segment f b (f x)\n  y \\<notin> segment f a (f x)\n  z \\<in> segment f a (f x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "from \\<open>x \\<in> orbit f a\\<close> \\<open>f x \\<in> orbit f b\\<close> \\<open>y \\<in> segment f b (f x)\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> orbit f a\n  f x \\<in> orbit f b\n  y \\<in> segment f b (f x)", "have \"x \\<in> orbit f b\""], ["proof (prove)\nusing this:\n  x \\<in> orbit f a\n  f x \\<in> orbit f b\n  y \\<in> segment f b (f x)\n\ngoal (1 subgoal):\n 1. x \\<in> orbit f b", "by (metis * inv_end_in_segment[OF _ _ \\<open>bij f\\<close>] inv_f_eq[OF \\<open>inj f\\<close>] segmentD_orbit)"], ["proof (state)\nthis:\n  x \\<in> orbit f b\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "moreover"], ["proof (state)\nthis:\n  x \\<in> orbit f b\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "with \\<open>x \\<in> orbit f a\\<close> step.IH"], ["proof (chain)\npicking this:\n  x \\<in> orbit f a\n  x \\<in> orbit f b \\<Longrightarrow>\n  segment f a x \\<subseteq> segment f b x \\<or>\n  segment f b x \\<subseteq> segment f a x\n  x \\<in> orbit f b", "have \"segment f a (f x) \\<subseteq> segment f b (f x) \\<or> segment f b (f x) \\<subseteq> segment f a (f x)\""], ["proof (prove)\nusing this:\n  x \\<in> orbit f a\n  x \\<in> orbit f b \\<Longrightarrow>\n  segment f a x \\<subseteq> segment f b x \\<or>\n  segment f b x \\<subseteq> segment f a x\n  x \\<in> orbit f b\n\ngoal (1 subgoal):\n 1. segment f a (f x) \\<subseteq> segment f b (f x) \\<or>\n    segment f b (f x) \\<subseteq> segment f a (f x)", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xaa.\n       \\<lbrakk>x \\<in> orbit f a; x \\<in> orbit f b;\n        x \\<in> segment f b (f x); x \\<notin> segment f a (f x);\n        xaa \\<in> segment f a (f x);\n        segment f a x \\<subseteq> segment f b x\\<rbrakk>\n       \\<Longrightarrow> xaa \\<in> segment f b (f x)\n 2. \\<And>x xaa.\n       \\<lbrakk>x \\<in> orbit f a; x \\<in> orbit f b;\n        x \\<in> segment f b (f x); x \\<notin> segment f a (f x);\n        xaa \\<in> segment f a (f x);\n        segment f b x \\<subseteq> segment f a x\\<rbrakk>\n       \\<Longrightarrow> xaa \\<in> segment f b (f x)", "apply (metis * inv_end_in_segment[OF _ _ \\<open>bij f\\<close>] inv_f_eq[OF \\<open>inj f\\<close>] segment_step_2D segment_subset step.prems subsetCE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xaa.\n       \\<lbrakk>x \\<in> orbit f a; x \\<in> orbit f b;\n        x \\<in> segment f b (f x); x \\<notin> segment f a (f x);\n        xaa \\<in> segment f a (f x);\n        segment f b x \\<subseteq> segment f a x\\<rbrakk>\n       \\<Longrightarrow> xaa \\<in> segment f b (f x)", "by (metis (no_types, lifting) \\<open>inj f\\<close> * inv_end_in_segment[OF _ _ \\<open>bij f\\<close>] inv_f_eq orbit_eqI(2) segment_step_2D segment_subset subsetCE)"], ["proof (state)\nthis:\n  segment f a (f x) \\<subseteq> segment f b (f x) \\<or>\n  segment f b (f x) \\<subseteq> segment f a (f x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> orbit f b\n  segment f a (f x) \\<subseteq> segment f b (f x) \\<or>\n  segment f b (f x) \\<subseteq> segment f a (f x)", "have \"segment f a (f x) \\<subseteq> segment f b (f x)\""], ["proof (prove)\nusing this:\n  x \\<in> orbit f b\n  segment f a (f x) \\<subseteq> segment f b (f x) \\<or>\n  segment f b (f x) \\<subseteq> segment f a (f x)\n\ngoal (1 subgoal):\n 1. segment f a (f x) \\<subseteq> segment f b (f x)", "using A"], ["proof (prove)\nusing this:\n  x \\<in> orbit f b\n  segment f a (f x) \\<subseteq> segment f b (f x) \\<or>\n  segment f b (f x) \\<subseteq> segment f a (f x)\n  y \\<in> segment f b (f x)\n  y \\<notin> segment f a (f x)\n  z \\<in> segment f a (f x)\n\ngoal (1 subgoal):\n 1. segment f a (f x) \\<subseteq> segment f b (f x)", "by auto"], ["proof (state)\nthis:\n  segment f a (f x) \\<subseteq> segment f b (f x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?y3 \\<in> segment f b (f x); ?y3 \\<notin> segment f a (f x);\n   ?z3 \\<in> segment f a (f x)\\<rbrakk>\n  \\<Longrightarrow> segment f a (f x) \\<subseteq> segment f b (f x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "note C = this"], ["proof (state)\nthis:\n  \\<lbrakk>?y3 \\<in> segment f b (f x); ?y3 \\<notin> segment f a (f x);\n   ?z3 \\<in> segment f a (f x)\\<rbrakk>\n  \\<Longrightarrow> segment f a (f x) \\<subseteq> segment f b (f x)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> orbit f a;\n        y \\<in> orbit f b \\<Longrightarrow>\n        segment f a y \\<subseteq> segment f b y \\<or>\n        segment f b y \\<subseteq> segment f a y;\n        f y \\<in> orbit f b\\<rbrakk>\n       \\<Longrightarrow> segment f a (f y)\n                         \\<subseteq> segment f b (f y) \\<or>\n                         segment f b (f y) \\<subseteq> segment f a (f y)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?y3 \\<in> segment f b (f x); ?y3 \\<notin> segment f a (f x);\n   ?z3 \\<in> segment f a (f x)\\<rbrakk>\n  \\<Longrightarrow> segment f a (f x) \\<subseteq> segment f b (f x)", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y3 \\<in> segment f b (f x); ?y3 \\<notin> segment f a (f x);\n   ?z3 \\<in> segment f a (f x)\\<rbrakk>\n  \\<Longrightarrow> segment f a (f x) \\<subseteq> segment f b (f x)\n\ngoal (1 subgoal):\n 1. segment f a (f x) \\<subseteq> segment f b (f x) \\<or>\n    segment f b (f x) \\<subseteq> segment f a (f x)", "by auto"], ["proof (state)\nthis:\n  segment f a (f x) \\<subseteq> segment f b (f x) \\<or>\n  segment f b (f x) \\<subseteq> segment f a (f x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma segment_disj:\n  assumes \"a \\<noteq> b\" \"bij f\"\n  shows \"segment f a b \\<inter> segment f b a = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a = {}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "assume \"\\<not>?thesis\""], ["proof (state)\nthis:\n  segment f a b \\<inter> segment f b a \\<noteq> {}\n\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  segment f a b \\<inter> segment f b a \\<noteq> {}", "obtain x where x: \"x \\<in> segment f a b\" \"x \\<in> segment f b a\""], ["proof (prove)\nusing this:\n  segment f a b \\<inter> segment f b a \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> segment f a b; x \\<in> segment f b a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> segment f a b\n  x \\<in> segment f b a\n\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<in> segment f a b\n  x \\<in> segment f b a", "have \"segment f a b = segment f a x \\<union> {x} \\<union> segment f x b\"\n      \"segment f b a = segment f b x \\<union> {x} \\<union> segment f x a\""], ["proof (prove)\nusing this:\n  x \\<in> segment f a b\n  x \\<in> segment f b a\n\ngoal (1 subgoal):\n 1. segment f a b = segment f a x \\<union> {x} \\<union> segment f x b &&&\n    segment f b a = segment f b x \\<union> {x} \\<union> segment f x a", "by (auto dest: segment_split)"], ["proof (state)\nthis:\n  segment f a b = segment f a x \\<union> {x} \\<union> segment f x b\n  segment f b a = segment f b x \\<union> {x} \\<union> segment f x a\n\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  segment f a b = segment f a x \\<union> {x} \\<union> segment f x b\n  segment f b a = segment f b x \\<union> {x} \\<union> segment f x a", "have o: \"x \\<in> orbit f a\" \"x \\<in> orbit f b\""], ["proof (prove)\nusing this:\n  segment f a b = segment f a x \\<union> {x} \\<union> segment f x b\n  segment f b a = segment f b x \\<union> {x} \\<union> segment f x a\n\ngoal (1 subgoal):\n 1. x \\<in> orbit f a &&& x \\<in> orbit f b", "by (auto dest: segmentD_orbit)"], ["proof (state)\nthis:\n  x \\<in> orbit f a\n  x \\<in> orbit f b\n\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "note * = segment_overlapping[OF o \\<open>bij f\\<close>]"], ["proof (state)\nthis:\n  segment f a x \\<subseteq> segment f b x \\<or>\n  segment f b x \\<subseteq> segment f a x\n\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "have \"inj f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj f", "using \\<open>bij f\\<close>"], ["proof (prove)\nusing this:\n  bij f\n\ngoal (1 subgoal):\n 1. inj f", "by (simp add: bij_is_inj)"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "have \"segment f a x = segment f b x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. segment f a x = segment f b x", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f a x \\<Longrightarrow> xa \\<in> segment f b x\n 2. \\<And>xa.\n       xa \\<in> segment f b x \\<Longrightarrow> xa \\<in> segment f a x", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f a x \\<Longrightarrow> xa \\<in> segment f b x\n 2. \\<And>xa.\n       xa \\<in> segment f b x \\<Longrightarrow> xa \\<in> segment f a x", "assume A: \"y \\<in> segment f b x\""], ["proof (state)\nthis:\n  y \\<in> segment f b x\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f a x \\<Longrightarrow> xa \\<in> segment f b x\n 2. \\<And>xa.\n       xa \\<in> segment f b x \\<Longrightarrow> xa \\<in> segment f a x", "then"], ["proof (chain)\npicking this:\n  y \\<in> segment f b x", "have \"y \\<in> segment f a x \\<or> f a \\<in> segment f b a\""], ["proof (prove)\nusing this:\n  y \\<in> segment f b x\n\ngoal (1 subgoal):\n 1. y \\<in> segment f a x \\<or> f a \\<in> segment f b a", "using * x(2)"], ["proof (prove)\nusing this:\n  y \\<in> segment f b x\n  segment f a x \\<subseteq> segment f b x \\<or>\n  segment f b x \\<subseteq> segment f a x\n  x \\<in> segment f b a\n\ngoal (1 subgoal):\n 1. y \\<in> segment f a x \\<or> f a \\<in> segment f b a", "by (auto intro: segment.base segment_subset)"], ["proof (state)\nthis:\n  y \\<in> segment f a x \\<or> f a \\<in> segment f b a\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f a x \\<Longrightarrow> xa \\<in> segment f b x\n 2. \\<And>xa.\n       xa \\<in> segment f b x \\<Longrightarrow> xa \\<in> segment f a x", "then"], ["proof (chain)\npicking this:\n  y \\<in> segment f a x \\<or> f a \\<in> segment f b a", "show \"y \\<in> segment f a x\""], ["proof (prove)\nusing this:\n  y \\<in> segment f a x \\<or> f a \\<in> segment f b a\n\ngoal (1 subgoal):\n 1. y \\<in> segment f a x", "using \\<open>inj f\\<close> A"], ["proof (prove)\nusing this:\n  y \\<in> segment f a x \\<or> f a \\<in> segment f b a\n  inj f\n  y \\<in> segment f b x\n\ngoal (1 subgoal):\n 1. y \\<in> segment f a x", "by (metis (no_types) not_in_segment2 segment_step_2)"], ["proof (state)\nthis:\n  y \\<in> segment f a x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f a x \\<Longrightarrow> xa \\<in> segment f b x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f a x \\<Longrightarrow> xa \\<in> segment f b x", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f a x \\<Longrightarrow> xa \\<in> segment f b x", "assume A: \"y \\<in> segment f a x \""], ["proof (state)\nthis:\n  y \\<in> segment f a x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f a x \\<Longrightarrow> xa \\<in> segment f b x", "then"], ["proof (chain)\npicking this:\n  y \\<in> segment f a x", "have \"y \\<in> segment f b x \\<or> f b \\<in> segment f a b\""], ["proof (prove)\nusing this:\n  y \\<in> segment f a x\n\ngoal (1 subgoal):\n 1. y \\<in> segment f b x \\<or> f b \\<in> segment f a b", "using * x(1)"], ["proof (prove)\nusing this:\n  y \\<in> segment f a x\n  segment f a x \\<subseteq> segment f b x \\<or>\n  segment f b x \\<subseteq> segment f a x\n  x \\<in> segment f a b\n\ngoal (1 subgoal):\n 1. y \\<in> segment f b x \\<or> f b \\<in> segment f a b", "by (auto intro: segment.base segment_subset)"], ["proof (state)\nthis:\n  y \\<in> segment f b x \\<or> f b \\<in> segment f a b\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> segment f a x \\<Longrightarrow> xa \\<in> segment f b x", "then"], ["proof (chain)\npicking this:\n  y \\<in> segment f b x \\<or> f b \\<in> segment f a b", "show \"y \\<in> segment f b x\""], ["proof (prove)\nusing this:\n  y \\<in> segment f b x \\<or> f b \\<in> segment f a b\n\ngoal (1 subgoal):\n 1. y \\<in> segment f b x", "using \\<open>inj f\\<close> A"], ["proof (prove)\nusing this:\n  y \\<in> segment f b x \\<or> f b \\<in> segment f a b\n  inj f\n  y \\<in> segment f a x\n\ngoal (1 subgoal):\n 1. y \\<in> segment f b x", "by (metis (no_types) not_in_segment2 segment_step_2)"], ["proof (state)\nthis:\n  y \\<in> segment f b x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  segment f a x = segment f b x\n\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  segment f a x = segment f b x\n\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "have \"segment f a x \\<noteq> segment f b x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. segment f a x \\<noteq> segment f b x", "by (metis assms bij_is_inj not_in_segment2 segment.base segment_step_2 segment_subset x(1))"], ["proof (state)\nthis:\n  segment f a x \\<noteq> segment f b x\n\ngoal (1 subgoal):\n 1. segment f a b \\<inter> segment f b a \\<noteq> {} \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  segment f a x = segment f b x\n  segment f a x \\<noteq> segment f b x", "show False"], ["proof (prove)\nusing this:\n  segment f a x = segment f b x\n  segment f a x \\<noteq> segment f b x\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma segment_x_x_eq:\n  assumes \"permutation f\"\n  shows \"segment f x x = orbit f x - {x}\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. segment f x x = orbit f x - {x}", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f x x \\<Longrightarrow> xa \\<in> orbit f x - {x}\n 2. \\<And>xa.\n       xa \\<in> orbit f x - {x} \\<Longrightarrow> xa \\<in> segment f x x", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f x x \\<Longrightarrow> xa \\<in> orbit f x - {x}\n 2. \\<And>xa.\n       xa \\<in> orbit f x - {x} \\<Longrightarrow> xa \\<in> segment f x x", "assume \"y \\<in> ?L\""], ["proof (state)\nthis:\n  y \\<in> segment f x x\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> segment f x x \\<Longrightarrow> xa \\<in> orbit f x - {x}\n 2. \\<And>xa.\n       xa \\<in> orbit f x - {x} \\<Longrightarrow> xa \\<in> segment f x x", "then"], ["proof (chain)\npicking this:\n  y \\<in> segment f x x", "show \"y \\<in> ?R\""], ["proof (prove)\nusing this:\n  y \\<in> segment f x x\n\ngoal (1 subgoal):\n 1. y \\<in> orbit f x - {x}", "by (auto dest: segmentD_orbit simp: not_in_segment2)"], ["proof (state)\nthis:\n  y \\<in> orbit f x - {x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {x} \\<Longrightarrow> xa \\<in> segment f x x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {x} \\<Longrightarrow> xa \\<in> segment f x x", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {x} \\<Longrightarrow> xa \\<in> segment f x x", "assume \"y \\<in> ?R\""], ["proof (state)\nthis:\n  y \\<in> orbit f x - {x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {x} \\<Longrightarrow> xa \\<in> segment f x x", "then"], ["proof (chain)\npicking this:\n  y \\<in> orbit f x - {x}", "have \"y \\<in> orbit f x\" \"y \\<noteq> x\""], ["proof (prove)\nusing this:\n  y \\<in> orbit f x - {x}\n\ngoal (1 subgoal):\n 1. y \\<in> orbit f x &&& y \\<noteq> x", "by auto"], ["proof (state)\nthis:\n  y \\<in> orbit f x\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> orbit f x - {x} \\<Longrightarrow> xa \\<in> segment f x x", "then"], ["proof (chain)\npicking this:\n  y \\<in> orbit f x\n  y \\<noteq> x", "show \"y \\<in> ?L\""], ["proof (prove)\nusing this:\n  y \\<in> orbit f x\n  y \\<noteq> x\n\ngoal (1 subgoal):\n 1. y \\<in> segment f x x", "by induct (auto intro: segment.intros)"], ["proof (state)\nthis:\n  y \\<in> segment f x x\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Lists of Powers\\<close>"], ["", "definition iterate :: \"nat \\<Rightarrow> nat \\<Rightarrow> ('a \\<Rightarrow> 'a ) \\<Rightarrow> 'a \\<Rightarrow> 'a list\" where\n  \"iterate m n f x = map (\\<lambda>n. (f^^n) x) [m..<n]\""], ["", "lemma set_iterate:\n  \"set (iterate m n f x) = (\\<lambda>k. (f ^^ k) x) ` {m..<n} \""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (iterate m n f x) = (\\<lambda>k. (f ^^ k) x) ` {m..<n}", "by (auto simp: iterate_def)"], ["", "lemma iterate_empty[simp]: \"iterate n m f x = [] \\<longleftrightarrow> m \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (iterate n m f x = []) = (m \\<le> n)", "by (auto simp: iterate_def)"], ["", "lemma iterate_length[simp]:\n  \"length (iterate m n f x) = n - m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (iterate m n f x) = n - m", "by (auto simp: iterate_def)"], ["", "lemma iterate_nth[simp]:\n  assumes \"k < n - m\" shows \"iterate m n f x ! k = (f^^(m+k)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iterate m n f x ! k = (f ^^ (m + k)) x", "using assms"], ["proof (prove)\nusing this:\n  k < n - m\n\ngoal (1 subgoal):\n 1. iterate m n f x ! k = (f ^^ (m + k)) x", "by (induct k arbitrary: m) (auto simp: iterate_def)"], ["", "lemma iterate_applied:\n  \"iterate n m f (f x) = iterate (Suc n) (Suc m) f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iterate n m f (f x) = iterate (Suc n) (Suc m) f x", "by (induct m arbitrary: n) (auto simp: iterate_def funpow_swap1)"], ["", "end"]]}