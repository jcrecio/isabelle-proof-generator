{"file_name": "/home/qj213/afp-2021-10-22/thys/Graph_Theory/Bidirected_Digraph.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Graph_Theory", "problem_names": ["lemma (in wf_digraph) bidirected_digraphI:\n  assumes arev_eq: \"\\<And>a. a \\<notin> arcs G \\<Longrightarrow> arev a = a\"\n  assumes arev_neq: \"\\<And>a. a \\<in> arcs G \\<Longrightarrow> arev a \\<noteq> a\"\n  assumes arev_arev_raw: \"\\<And>a. a \\<in> arcs G \\<Longrightarrow> arev (arev a) = a\"\n  assumes tail_arev: \"\\<And>a. a \\<in> arcs G \\<Longrightarrow> tail G (arev a) = head G a\"\n  shows \"bidirected_digraph G arev\"", "lemma bidirected_digraph[intro!]: \"bidirected_digraph G arev\"", "lemma arev_arev[simp]: \"arev (arev a) = a\"", "lemma arev_o_arev[simp]: \"arev o arev = id\"", "lemma arev_eq: \"a \\<notin> arcs G \\<Longrightarrow> arev a = a\"", "lemma arev_neq: \"a \\<in> arcs G \\<Longrightarrow> arev a \\<noteq> a\"", "lemma arev_in_arcs[simp]: \"a \\<in> arcs G \\<Longrightarrow> arev a \\<in> arcs G\"", "lemma head_arev[simp]:\n    assumes \"a \\<in> arcs G\" shows \"head G (arev a) = tail G a\"", "lemma ate_arev[simp]:\n    assumes \"a \\<in> arcs G\" shows \"arc_to_ends G (arev a) = prod.swap (arc_to_ends G a)\"", "lemma bij_arev: \"bij arev\"", "lemma arev_permutes_arcs: \"arev permutes arcs G\"", "lemma arev_eq_iff: \"\\<And>x y. arev x = arev y \\<longleftrightarrow> x = y\"", "lemma in_arcs_eq: \"in_arcs G w = arev ` out_arcs G w\"", "lemma inj_on_arev[intro!]: \"inj_on arev S\"", "lemma even_card_loops:\n    \"even (card (in_arcs G w \\<inter> out_arcs G w))\" (is \"even (card ?S)\")"], "translations": [["", "lemma (in wf_digraph) bidirected_digraphI:\n  assumes arev_eq: \"\\<And>a. a \\<notin> arcs G \\<Longrightarrow> arev a = a\"\n  assumes arev_neq: \"\\<And>a. a \\<in> arcs G \\<Longrightarrow> arev a \\<noteq> a\"\n  assumes arev_arev_raw: \"\\<And>a. a \\<in> arcs G \\<Longrightarrow> arev (arev a) = a\"\n  assumes tail_arev: \"\\<And>a. a \\<in> arcs G \\<Longrightarrow> tail G (arev a) = head G a\"\n  shows \"bidirected_digraph G arev\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bidirected_digraph G arev", "using assms"], ["proof (prove)\nusing this:\n  ?a \\<notin> arcs G \\<Longrightarrow> arev ?a = ?a\n  ?a \\<in> arcs G \\<Longrightarrow> arev ?a \\<noteq> ?a\n  ?a \\<in> arcs G \\<Longrightarrow> arev (arev ?a) = ?a\n  ?a \\<in> arcs G \\<Longrightarrow> tail G (arev ?a) = head G ?a\n\ngoal (1 subgoal):\n 1. bidirected_digraph G arev", "by unfold_locales (auto simp: permutes_def)"], ["", "context bidirected_digraph begin"], ["", "lemma bidirected_digraph[intro!]: \"bidirected_digraph G arev\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bidirected_digraph G arev", "by unfold_locales"], ["", "lemma arev_arev[simp]: \"arev (arev a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arev (arev a) = a", "using arev_dom"], ["proof (prove)\nusing this:\n  (?a \\<in> arcs G) = (arev ?a \\<noteq> ?a)\n\ngoal (1 subgoal):\n 1. arev (arev a) = a", "by (cases \"a \\<in> arcs G\") (auto simp: arev_arev_raw)"], ["", "lemma arev_o_arev[simp]: \"arev o arev = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arev \\<circ> arev = id", "by (simp add: fun_eq_iff)"], ["", "lemma arev_eq: \"a \\<notin> arcs G \\<Longrightarrow> arev a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> arcs G \\<Longrightarrow> arev a = a", "by (simp add: arev_dom)"], ["", "lemma arev_neq: \"a \\<in> arcs G \\<Longrightarrow> arev a \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> arcs G \\<Longrightarrow> arev a \\<noteq> a", "by (simp add: arev_dom)"], ["", "lemma arev_in_arcs[simp]: \"a \\<in> arcs G \\<Longrightarrow> arev a \\<in> arcs G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> arcs G \\<Longrightarrow> arev a \\<in> arcs G", "by (metis arev_arev arev_dom)"], ["", "lemma head_arev[simp]:\n    assumes \"a \\<in> arcs G\" shows \"head G (arev a) = tail G a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head G (arev a) = tail G a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. head G (arev a) = tail G a", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> arcs G", "have \"head G (arev a) = tail G (arev (arev a)) \""], ["proof (prove)\nusing this:\n  a \\<in> arcs G\n\ngoal (1 subgoal):\n 1. head G (arev a) = tail G (arev (arev a))", "by (simp only: tail_arev arev_in_arcs)"], ["proof (state)\nthis:\n  head G (arev a) = tail G (arev (arev a))\n\ngoal (1 subgoal):\n 1. head G (arev a) = tail G a", "then"], ["proof (chain)\npicking this:\n  head G (arev a) = tail G (arev (arev a))", "show ?thesis"], ["proof (prove)\nusing this:\n  head G (arev a) = tail G (arev (arev a))\n\ngoal (1 subgoal):\n 1. head G (arev a) = tail G a", "by simp"], ["proof (state)\nthis:\n  head G (arev a) = tail G a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ate_arev[simp]:\n    assumes \"a \\<in> arcs G\" shows \"arc_to_ends G (arev a) = prod.swap (arc_to_ends G a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arc_to_ends G (arev a) = prod.swap (arc_to_ends G a)", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> arcs G\n\ngoal (1 subgoal):\n 1. arc_to_ends G (arev a) = prod.swap (arc_to_ends G a)", "by (auto simp: arc_to_ends_def)"], ["", "lemma bij_arev: \"bij arev\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij arev", "using arev_arev"], ["proof (prove)\nusing this:\n  arev (arev ?a) = ?a\n\ngoal (1 subgoal):\n 1. bij arev", "by (metis bij_betw_imageI inj_on_inverseI surjI)"], ["", "lemma arev_permutes_arcs: \"arev permutes arcs G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arev permutes arcs G", "using arev_dom bij_arev"], ["proof (prove)\nusing this:\n  (?a \\<in> arcs G) = (arev ?a \\<noteq> ?a)\n  bij arev\n\ngoal (1 subgoal):\n 1. arev permutes arcs G", "by (auto simp: permutes_def bij_iff)"], ["", "lemma arev_eq_iff: \"\\<And>x y. arev x = arev y \\<longleftrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. (arev x = arev y) = (x = y)", "by (metis arev_arev)"], ["", "lemma in_arcs_eq: \"in_arcs G w = arev ` out_arcs G w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. in_arcs G w = arev ` out_arcs G w", "by auto (metis arev_arev arev_in_arcs image_eqI in_out_arcs_conv tail_arev)"], ["", "lemma inj_on_arev[intro!]: \"inj_on arev S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on arev S", "by (metis arev_arev inj_on_inverseI)"], ["", "lemma even_card_loops:\n    \"even (card (in_arcs G w \\<inter> out_arcs G w))\" (is \"even (card ?S)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "assume \"\\<not>finite ?S\""], ["proof (state)\nthis:\n  infinite (in_arcs G w \\<inter> out_arcs G w)\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "then"], ["proof (chain)\npicking this:\n  infinite (in_arcs G w \\<inter> out_arcs G w)", "have ?thesis"], ["proof (prove)\nusing this:\n  infinite (in_arcs G w \\<inter> out_arcs G w)\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "by simp"], ["proof (state)\nthis:\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "}"], ["proof (state)\nthis:\n  infinite (in_arcs G w \\<inter> out_arcs G w) \\<Longrightarrow>\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "moreover"], ["proof (state)\nthis:\n  infinite (in_arcs G w \\<inter> out_arcs G w) \\<Longrightarrow>\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "{"], ["proof (state)\nthis:\n  infinite (in_arcs G w \\<inter> out_arcs G w) \\<Longrightarrow>\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "assume A:\"finite ?S\""], ["proof (state)\nthis:\n  finite (in_arcs G w \\<inter> out_arcs G w)\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "have \"card ?S = card (\\<Union>{{a,arev a} | a. a \\<in> ?S})\" (is \"_ = card (\\<Union> ?T)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (in_arcs G w \\<inter> out_arcs G w) =\n    card\n     (\\<Union> {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w})", "by (rule arg_cong[where f=card]) (auto intro!: exI[where x=\"{x, arev x}\" for x])"], ["proof (state)\nthis:\n  card (in_arcs G w \\<inter> out_arcs G w) =\n  card\n   (\\<Union> {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w})\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "also"], ["proof (state)\nthis:\n  card (in_arcs G w \\<inter> out_arcs G w) =\n  card\n   (\\<Union> {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w})\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "have \"\\<dots>= sum card ?T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}) =\n    sum card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}", "proof (rule card_Union_disjoint)"], ["proof (state)\ngoal (2 subgoals):\n 1. disjoint {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}\n 2. \\<And>A.\n       A \\<in> {{a, arev a} |a.\n                a \\<in> in_arcs G w \\<inter> out_arcs G w} \\<Longrightarrow>\n       finite A", "show \"\\<And>A. A\\<in>{{a, arev a} |a. a \\<in> ?S} \\<Longrightarrow> finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       A \\<in> {{a, arev a} |a.\n                a \\<in> in_arcs G w \\<inter> out_arcs G w} \\<Longrightarrow>\n       finite A", "by auto"], ["proof (state)\nthis:\n  ?A \\<in> {{a, arev a} |a.\n            a \\<in> in_arcs G w \\<inter> out_arcs G w} \\<Longrightarrow>\n  finite ?A\n\ngoal (1 subgoal):\n 1. disjoint {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}", "show \"pairwise disjnt {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. disjoint {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}", "unfolding pairwise_def disjnt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{{a, arev a} |a.\n                    a \\<in> in_arcs G w \\<inter> out_arcs G w}.\n       \\<forall>y\\<in>{{a, arev a} |a.\n                       a \\<in> in_arcs G w \\<inter> out_arcs G w}.\n          x \\<noteq> y \\<longrightarrow> x \\<inter> y = {}", "by safe (simp_all add: arev_eq_iff)"], ["proof (state)\nthis:\n  disjoint {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   (\\<Union> {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}) =\n  sum card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "also"], ["proof (state)\nthis:\n  card\n   (\\<Union> {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}) =\n  sum card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "have \"\\<dots> = sum (\\<lambda>a. 2) ?T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w} =\n    (\\<Sum>a\\<in>{{a, arev a} |a.\n                  a \\<in> in_arcs G w \\<inter> out_arcs G w}.\n       2)", "by (intro sum.cong) (auto simp: card_insert_if dest: arev_neq)"], ["proof (state)\nthis:\n  sum card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w} =\n  (\\<Sum>a\\<in>{{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}.\n     2)\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "also"], ["proof (state)\nthis:\n  sum card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w} =\n  (\\<Sum>a\\<in>{{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}.\n     2)\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "have \"\\<dots> = 2 * card ?T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>{{a, arev a} |a.\n                  a \\<in> in_arcs G w \\<inter> out_arcs G w}.\n       2) =\n    2 * card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>{{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}.\n     2) =\n  2 * card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "finally"], ["proof (chain)\npicking this:\n  card (in_arcs G w \\<inter> out_arcs G w) =\n  2 * card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}", "have ?thesis"], ["proof (prove)\nusing this:\n  card (in_arcs G w \\<inter> out_arcs G w) =\n  2 * card {{a, arev a} |a. a \\<in> in_arcs G w \\<inter> out_arcs G w}\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "by simp"], ["proof (state)\nthis:\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "}"], ["proof (state)\nthis:\n  finite (in_arcs G w \\<inter> out_arcs G w) \\<Longrightarrow>\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "ultimately"], ["proof (chain)\npicking this:\n  infinite (in_arcs G w \\<inter> out_arcs G w) \\<Longrightarrow>\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n  finite (in_arcs G w \\<inter> out_arcs G w) \\<Longrightarrow>\n  even (card (in_arcs G w \\<inter> out_arcs G w))", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite (in_arcs G w \\<inter> out_arcs G w) \\<Longrightarrow>\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n  finite (in_arcs G w \\<inter> out_arcs G w) \\<Longrightarrow>\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n\ngoal (1 subgoal):\n 1. even (card (in_arcs G w \\<inter> out_arcs G w))", "by blast"], ["proof (state)\nthis:\n  even (card (in_arcs G w \\<inter> out_arcs G w))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(*XXX*)"], ["", "sublocale bidirected_digraph \\<subseteq> sym_digraph"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym_digraph G", "proof (unfold_locales, unfold symmetric_def, intro symI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<rightarrow>\\<^bsub>G\\<^esub> b \\<Longrightarrow>\n       b \\<rightarrow>\\<^bsub>G\\<^esub> a", "fix u v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<rightarrow>\\<^bsub>G\\<^esub> b \\<Longrightarrow>\n       b \\<rightarrow>\\<^bsub>G\\<^esub> a", "assume \"u \\<rightarrow>\\<^bsub>G\\<^esub> v\""], ["proof (state)\nthis:\n  u \\<rightarrow>\\<^bsub>G\\<^esub> v\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<rightarrow>\\<^bsub>G\\<^esub> b \\<Longrightarrow>\n       b \\<rightarrow>\\<^bsub>G\\<^esub> a", "then"], ["proof (chain)\npicking this:\n  u \\<rightarrow>\\<^bsub>G\\<^esub> v", "obtain a where \"a \\<in> arcs G\" \"arc_to_ends G a = (u,v)\""], ["proof (prove)\nusing this:\n  u \\<rightarrow>\\<^bsub>G\\<^esub> v\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> arcs G; arc_to_ends G a = (u, v)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: arcs_ends_def)"], ["proof (state)\nthis:\n  a \\<in> arcs G\n  arc_to_ends G a = (u, v)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<rightarrow>\\<^bsub>G\\<^esub> b \\<Longrightarrow>\n       b \\<rightarrow>\\<^bsub>G\\<^esub> a", "then"], ["proof (chain)\npicking this:\n  a \\<in> arcs G\n  arc_to_ends G a = (u, v)", "have \"arev a \\<in> arcs G\" \"arc_to_ends G (arev a) = (v,u)\""], ["proof (prove)\nusing this:\n  a \\<in> arcs G\n  arc_to_ends G a = (u, v)\n\ngoal (1 subgoal):\n 1. arev a \\<in> arcs G &&& arc_to_ends G (arev a) = (v, u)", "by (auto simp: arc_to_ends_def)"], ["proof (state)\nthis:\n  arev a \\<in> arcs G\n  arc_to_ends G (arev a) = (v, u)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       a \\<rightarrow>\\<^bsub>G\\<^esub> b \\<Longrightarrow>\n       b \\<rightarrow>\\<^bsub>G\\<^esub> a", "then"], ["proof (chain)\npicking this:\n  arev a \\<in> arcs G\n  arc_to_ends G (arev a) = (v, u)", "show \"v \\<rightarrow>\\<^bsub>G\\<^esub> u\""], ["proof (prove)\nusing this:\n  arev a \\<in> arcs G\n  arc_to_ends G (arev a) = (v, u)\n\ngoal (1 subgoal):\n 1. v \\<rightarrow>\\<^bsub>G\\<^esub> u", "by (auto simp: arcs_ends_def intro: rev_image_eqI)"], ["proof (state)\nthis:\n  v \\<rightarrow>\\<^bsub>G\\<^esub> u\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}