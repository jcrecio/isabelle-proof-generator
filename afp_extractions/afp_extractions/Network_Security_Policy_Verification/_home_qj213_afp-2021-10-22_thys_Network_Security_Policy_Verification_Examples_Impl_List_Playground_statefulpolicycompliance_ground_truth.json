{"file_name": "/home/qj213/afp-2021-10-22/thys/Network_Security_Policy_Verification/Examples/Impl_List_Playground_statefulpolicycompliance.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Network_Security_Policy_Verification", "problem_names": ["lemma \"set (flows_stateL ChairNetwork_stateful_IFS) \\<subseteq>\n       (set (flows_fixL ChairNetwork_stateful_IFS))\"", "lemma \"set (flows_stateL ChairNetwork_stateful_ACS) \\<subseteq> (set (flows_fixL ChairNetwork_stateful_ACS))\"", "lemma \"set (flows_fixL (generate_valid_stateful_policy_IFSACS ChairNetwork ChairSecurityRequirements)) =\n       set (flows_fixL (generate_valid_stateful_policy_IFSACS_2 ChairNetwork ChairSecurityRequirements))\"", "lemma \"set (flows_stateL (generate_valid_stateful_policy_IFSACS ChairNetwork ChairSecurityRequirements)) =\n       set (flows_stateL (generate_valid_stateful_policy_IFSACS_2 ChairNetwork ChairSecurityRequirements))\""], "translations": [["", "lemma \"set (flows_stateL ChairNetwork_stateful_IFS) \\<subseteq>\n       (set (flows_fixL ChairNetwork_stateful_IFS))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (flows_stateL ChairNetwork_stateful_IFS)\n    \\<subseteq> set (flows_fixL ChairNetwork_stateful_IFS)", "by eval"], ["", "(*must always hold*)"], ["", "value \"(set (flows_fixL ChairNetwork_stateful_IFS)) - set (flows_stateL ChairNetwork_stateful_IFS)\""], ["", "(*only problems: printers!!!*)"], ["", "value \"stateful_list_policy_to_list_graph ChairNetwork_stateful_IFS\""], ["", "definition \"ChairNetwork_stateful_ACS =\n  \\<lparr> hostsL = nodesL ChairNetwork,\n   flows_fixL = edgesL ChairNetwork,\n   flows_stateL = filter_compliant_stateful_ACS ChairNetwork ChairSecurityRequirements \\<rparr>\""], ["", "value \"edgesL ChairNetwork\""], ["", "value \"filter_compliant_stateful_ACS ChairNetwork ChairSecurityRequirements\""], ["", "value \"ChairNetwork_stateful_ACS\""], ["", "lemma \"set (flows_stateL ChairNetwork_stateful_ACS) \\<subseteq> (set (flows_fixL ChairNetwork_stateful_ACS))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (flows_stateL ChairNetwork_stateful_ACS)\n    \\<subseteq> set (flows_fixL ChairNetwork_stateful_ACS)", "by eval"], ["", "(*must always hold*)"], ["", "value \"(set (flows_fixL ChairNetwork_stateful_ACS)) - set (flows_stateL ChairNetwork_stateful_ACS)\""], ["", "(*TODO: lemma \\<dots> = X by eval*)\n\n(*flows that are already allowed in both directions are not marked as stateful*)"], ["", "value \"((set (flows_fixL ChairNetwork_stateful_ACS)) - set (flows_stateL ChairNetwork_stateful_ACS)) - set (backlinks (flows_fixL ChairNetwork_stateful_ACS))\""], ["", "(*the new backflows*)"], ["", "value \"set (edgesL (stateful_list_policy_to_list_graph ChairNetwork_stateful_ACS)) - (set (edgesL ChairNetwork))\""], ["", "(*the resulting ACS graph*)"], ["", "value \"stateful_list_policy_to_list_graph ChairNetwork_stateful_ACS\""], ["", "value \"generate_valid_stateful_policy_IFSACS ChairNetwork ChairSecurityRequirements\""], ["", "value \"generate_valid_stateful_policy_IFSACS_2 ChairNetwork ChairSecurityRequirements\""], ["", "lemma \"set (flows_fixL (generate_valid_stateful_policy_IFSACS ChairNetwork ChairSecurityRequirements)) =\n       set (flows_fixL (generate_valid_stateful_policy_IFSACS_2 ChairNetwork ChairSecurityRequirements))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (flows_fixL\n          (TopoS_Stateful_Policy_impl.generate_valid_stateful_policy_IFSACS\n            ChairNetwork ChairSecurityRequirements)) =\n    set (flows_fixL\n          (TopoS_Stateful_Policy_impl.generate_valid_stateful_policy_IFSACS_2\n            ChairNetwork ChairSecurityRequirements))", "by eval"], ["", "lemma \"set (flows_stateL (generate_valid_stateful_policy_IFSACS ChairNetwork ChairSecurityRequirements)) =\n       set (flows_stateL (generate_valid_stateful_policy_IFSACS_2 ChairNetwork ChairSecurityRequirements))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (flows_stateL\n          (TopoS_Stateful_Policy_impl.generate_valid_stateful_policy_IFSACS\n            ChairNetwork ChairSecurityRequirements)) =\n    set (flows_stateL\n          (TopoS_Stateful_Policy_impl.generate_valid_stateful_policy_IFSACS_2\n            ChairNetwork ChairSecurityRequirements))", "by eval"], ["", "definition \"ChairNetwork_stateful = generate_valid_stateful_policy_IFSACS ChairNetwork ChairSecurityRequirements\""], ["", "ML_val\\<open>\nvisualize_edges @{context} @{term \"flows_fixL ChairNetwork_stateful\"} \n  [(\"edge [dir=\\\"arrow\\\", style=dashed, color=\\\"#FF8822\\\", constraint=false]\",\n   @{term \"flows_stateL ChairNetwork_stateful\"})] \"\"; \n\\<close>"], ["", "end"]]}