{"file_name": "/home/qj213/afp-2021-10-22/thys/Network_Security_Policy_Verification/Security_Invariants/METASINVAR_SystemBoundary.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Network_Security_Policy_Verification", "problem_names": ["lemma system_components_to_subnets:\n      \"SINVAR_SubnetsInGW.allowed_subnet_flow\n        SINVAR_SubnetsInGW.default_node_properties\n        (system_components_to_subnets c) \\<longleftrightarrow>\n       c = SystemBoundaryInput \\<or> c = SystemBoundaryInputOutput\"", "lemma system_components_to_blp:\n      \"(\\<not> trusted SINVAR_BLPtrusted.default_node_properties \\<longrightarrow>\n       security_level (system_components_to_blp c) \\<le> security_level SINVAR_BLPtrusted.default_node_properties)\n       \\<longleftrightarrow>\n       c = SystemBoundaryOutput \\<or> c = SystemBoundaryInputOutput\"", "lemma \"all_security_requirements_fulfilled (new_meta_system_boundary C description) G \\<longleftrightarrow>\n       (\\<forall>(v\\<^sub>1, v\\<^sub>2) \\<in> set (edgesL G). case ((map_of C) v\\<^sub>1, (map_of C) v\\<^sub>2)\n          of \n          \\<comment> \\<open>No restrictions outside of the component\\<close>\n             (None, None) \\<Rightarrow> True\n\n          \\<comment> \\<open>no restrictions inside the component\\<close>\n          |  (Some c1, Some c2) \\<Rightarrow> True\n\n          \\<comment> \\<open>System Boundaries Input\\<close>\n          |  (None, Some SystemBoundaryInputOutput) \\<Rightarrow> True\n          |  (None, Some SystemBoundaryInput) \\<Rightarrow> True\n\n          \\<comment> \\<open>System Boundaries Output\\<close>\n          |  (Some SystemBoundaryOutput, None) \\<Rightarrow> True\n          |  (Some SystemBoundaryInputOutput, None) \\<Rightarrow> True\n\n          \\<comment> \\<open>everything else is prohibited\\<close>\n          |  _ \\<Rightarrow> False\n       )\""], "translations": [["", "lemma system_components_to_subnets:\n      \"SINVAR_SubnetsInGW.allowed_subnet_flow\n        SINVAR_SubnetsInGW.default_node_properties\n        (system_components_to_subnets c) \\<longleftrightarrow>\n       c = SystemBoundaryInput \\<or> c = SystemBoundaryInputOutput\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allowed_subnet_flow SINVAR_SubnetsInGW.default_node_properties\n     (system_components_to_subnets c) =\n    (c = SystemBoundaryInput \\<or> c = SystemBoundaryInputOutput)", "by(cases c)(simp_all add: SINVAR_SubnetsInGW.default_node_properties_def)"], ["", "lemma system_components_to_blp:\n      \"(\\<not> trusted SINVAR_BLPtrusted.default_node_properties \\<longrightarrow>\n       security_level (system_components_to_blp c) \\<le> security_level SINVAR_BLPtrusted.default_node_properties)\n       \\<longleftrightarrow>\n       c = SystemBoundaryOutput \\<or> c = SystemBoundaryInputOutput\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> trusted\n             SINVAR_BLPtrusted.default_node_properties \\<longrightarrow>\n     security_level (system_components_to_blp c)\n     \\<le> security_level SINVAR_BLPtrusted.default_node_properties) =\n    (c = SystemBoundaryOutput \\<or> c = SystemBoundaryInputOutput)", "by(cases c)(simp_all add: SINVAR_BLPtrusted.default_node_properties_def)"], ["", "lemma \"all_security_requirements_fulfilled (new_meta_system_boundary C description) G \\<longleftrightarrow>\n       (\\<forall>(v\\<^sub>1, v\\<^sub>2) \\<in> set (edgesL G). case ((map_of C) v\\<^sub>1, (map_of C) v\\<^sub>2)\n          of \n          \\<comment> \\<open>No restrictions outside of the component\\<close>\n             (None, None) \\<Rightarrow> True\n\n          \\<comment> \\<open>no restrictions inside the component\\<close>\n          |  (Some c1, Some c2) \\<Rightarrow> True\n\n          \\<comment> \\<open>System Boundaries Input\\<close>\n          |  (None, Some SystemBoundaryInputOutput) \\<Rightarrow> True\n          |  (None, Some SystemBoundaryInput) \\<Rightarrow> True\n\n          \\<comment> \\<open>System Boundaries Output\\<close>\n          |  (Some SystemBoundaryOutput, None) \\<Rightarrow> True\n          |  (Some SystemBoundaryInputOutput, None) \\<Rightarrow> True\n\n          \\<comment> \\<open>everything else is prohibited\\<close>\n          |  _ \\<Rightarrow> False\n       )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. TopoS_Composition_Theory_impl.all_security_requirements_fulfilled\n     (new_meta_system_boundary C description) G =\n    (\\<forall>(v\\<^sub>1, v\\<^sub>2)\\<in>set (edgesL G).\n        case (map_of C v\\<^sub>1, map_of C v\\<^sub>2) of\n        (None, None) \\<Rightarrow> True\n        | (None, Some SystemBoundaryInput) \\<Rightarrow> True\n        | (None, Some SystemBoundaryInputOutput) \\<Rightarrow> True\n        | (None, Some _) \\<Rightarrow> False\n        | (Some SystemBoundaryOutput, None) \\<Rightarrow> True\n        | (Some SystemBoundaryOutput, _) \\<Rightarrow> True\n        | (Some SystemBoundaryInputOutput, None) \\<Rightarrow> True\n        | (Some SystemBoundaryInputOutput, _) \\<Rightarrow> True\n        | (Some _, None) \\<Rightarrow> False\n        | (Some _, Some c2) \\<Rightarrow> True)", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. TopoS_Composition_Theory_impl.all_security_requirements_fulfilled\n     (new_meta_system_boundary C description) G =\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n          case map_of C v\\<^sub>1 of\n          None \\<Rightarrow>\n            case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n            | Some SystemBoundaryInput \\<Rightarrow> True\n            | Some SystemBoundaryInputOutput \\<Rightarrow> True\n            | Some _ \\<Rightarrow> False\n          | Some SystemBoundaryOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some SystemBoundaryInputOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some _ \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n              | Some c2 \\<Rightarrow> True)", "apply(simp add: new_meta_system_boundary_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. TopoS_Composition_Theory_impl.all_security_requirements_fulfilled\n     [let nP = nm_node_props SINVAR_LIB_SubnetsInGW\n                \\<lparr>node_properties =\n                          map_of\n                           (map (\\<lambda>(v, c).\n                                    (v, system_components_to_subnets c))\n                             C)\\<rparr>\n      in \\<lparr>implc_type = nm_name SINVAR_LIB_SubnetsInGW,\n            implc_description = description @ '' (ACS)'',\n            implc_sinvar =\n              \\<lambda>G. nm_sinvar SINVAR_LIB_SubnetsInGW G nP,\n            implc_offending_flows =\n              \\<lambda>G. nm_offending_flows SINVAR_LIB_SubnetsInGW G nP,\n            implc_isIFS =\n              nm_receiver_violation SINVAR_LIB_SubnetsInGW\\<rparr>,\n      let nP = nm_node_props SINVAR_LIB_BLPtrusted\n                \\<lparr>node_properties =\n                          map_of\n                           (map (\\<lambda>(v, c).\n                                    (v, system_components_to_blp c))\n                             C)\\<rparr>\n      in \\<lparr>implc_type = nm_name SINVAR_LIB_BLPtrusted,\n            implc_description = description @ '' (IFS)'',\n            implc_sinvar = \\<lambda>G. nm_sinvar SINVAR_LIB_BLPtrusted G nP,\n            implc_offending_flows =\n              \\<lambda>G. nm_offending_flows SINVAR_LIB_BLPtrusted G nP,\n            implc_isIFS =\n              nm_receiver_violation SINVAR_LIB_BLPtrusted\\<rparr>]\n     G =\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n          case map_of C v\\<^sub>1 of\n          None \\<Rightarrow>\n            case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n            | Some SystemBoundaryInput \\<Rightarrow> True\n            | Some SystemBoundaryInputOutput \\<Rightarrow> True\n            | Some _ \\<Rightarrow> False\n          | Some SystemBoundaryOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some SystemBoundaryInputOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some _ \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n              | Some c2 \\<Rightarrow> True)", "apply(simp add: all_security_requirements_fulfilled_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (implc_sinvar\n      (let nP = nm_node_props SINVAR_LIB_SubnetsInGW\n                 \\<lparr>node_properties =\n                           map_of\n                            (map (\\<lambda>(v, c).\n                                     (v, system_components_to_subnets c))\n                              C)\\<rparr>\n       in \\<lparr>implc_type = nm_name SINVAR_LIB_SubnetsInGW,\n             implc_description = description @ '' (ACS)'',\n             implc_sinvar =\n               \\<lambda>G. nm_sinvar SINVAR_LIB_SubnetsInGW G nP,\n             implc_offending_flows =\n               \\<lambda>G. nm_offending_flows SINVAR_LIB_SubnetsInGW G nP,\n             implc_isIFS =\n               nm_receiver_violation SINVAR_LIB_SubnetsInGW\\<rparr>)\n      G \\<and>\n     implc_sinvar\n      (let nP = nm_node_props SINVAR_LIB_BLPtrusted\n                 \\<lparr>node_properties =\n                           map_of\n                            (map (\\<lambda>(v, c).\n                                     (v, system_components_to_blp c))\n                              C)\\<rparr>\n       in \\<lparr>implc_type = nm_name SINVAR_LIB_BLPtrusted,\n             implc_description = description @ '' (IFS)'',\n             implc_sinvar =\n               \\<lambda>G. nm_sinvar SINVAR_LIB_BLPtrusted G nP,\n             implc_offending_flows =\n               \\<lambda>G. nm_offending_flows SINVAR_LIB_BLPtrusted G nP,\n             implc_isIFS =\n               nm_receiver_violation SINVAR_LIB_BLPtrusted\\<rparr>)\n      G) =\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n          case map_of C v\\<^sub>1 of\n          None \\<Rightarrow>\n            case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n            | Some SystemBoundaryInput \\<Rightarrow> True\n            | Some SystemBoundaryInputOutput \\<Rightarrow> True\n            | Some _ \\<Rightarrow> False\n          | Some SystemBoundaryOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some SystemBoundaryInputOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some _ \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n              | Some c2 \\<Rightarrow> True)", "apply(simp add: Let_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (nm_sinvar SINVAR_LIB_SubnetsInGW G\n      (nm_node_props SINVAR_LIB_SubnetsInGW\n        \\<lparr>node_properties =\n                  map_of\n                   (map (\\<lambda>(v, c).\n                            (v, system_components_to_subnets c))\n                     C)\\<rparr>) \\<and>\n     nm_sinvar SINVAR_LIB_BLPtrusted G\n      (nm_node_props SINVAR_LIB_BLPtrusted\n        \\<lparr>node_properties =\n                  map_of\n                   (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                     C)\\<rparr>)) =\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n          case map_of C v\\<^sub>1 of\n          None \\<Rightarrow>\n            case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n            | Some SystemBoundaryInput \\<Rightarrow> True\n            | Some SystemBoundaryInputOutput \\<Rightarrow> True\n            | Some _ \\<Rightarrow> False\n          | Some SystemBoundaryOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some SystemBoundaryInputOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some _ \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n              | Some c2 \\<Rightarrow> True)", "apply(simp add: SINVAR_LIB_SubnetsInGW_def SINVAR_LIB_BLPtrusted_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>x\\<in>set (edgesL G).\n         case x of\n         (e1, e2) \\<Rightarrow>\n           allowed_subnet_flow\n            (SINVAR_SubnetsInGW_impl.NetModel_node_props\n              \\<lparr>node_properties =\n                        map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_subnets c))\n                           C)\\<rparr>\n              e1)\n            (SINVAR_SubnetsInGW_impl.NetModel_node_props\n              \\<lparr>node_properties =\n                        map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_subnets c))\n                           C)\\<rparr>\n              e2)) \\<and>\n     (\\<forall>x\\<in>set (edgesL G).\n         case x of\n         (e1, e2) \\<Rightarrow>\n           \\<not> trusted\n                   (SINVAR_BLPtrusted_impl.NetModel_node_props\n                     \\<lparr>node_properties =\n                               map_of\n                                (map (\\<lambda>(v, c).\n   (v, system_components_to_blp c))\n                                  C)\\<rparr>\n                     e2) \\<longrightarrow>\n           security_level\n            (SINVAR_BLPtrusted_impl.NetModel_node_props\n              \\<lparr>node_properties =\n                        map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_blp c))\n                           C)\\<rparr>\n              e1)\n           \\<le> security_level\n                  (SINVAR_BLPtrusted_impl.NetModel_node_props\n                    \\<lparr>node_properties =\n                              map_of\n                               (map (\\<lambda>(v, c).\n  (v, system_components_to_blp c))\n                                 C)\\<rparr>\n                    e2))) =\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n          case map_of C v\\<^sub>1 of\n          None \\<Rightarrow>\n            case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n            | Some SystemBoundaryInput \\<Rightarrow> True\n            | Some SystemBoundaryInputOutput \\<Rightarrow> True\n            | Some _ \\<Rightarrow> False\n          | Some SystemBoundaryOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some SystemBoundaryInputOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some _ \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n              | Some c2 \\<Rightarrow> True)", "apply(simp add: SINVAR_SubnetsInGW_impl.NetModel_node_props_def SINVAR_BLPtrusted_impl.NetModel_node_props_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>x\\<in>set (edgesL G).\n         case x of\n         (e1, e2) \\<Rightarrow>\n           allowed_subnet_flow\n            (case map_of\n                   (map (\\<lambda>(v, c).\n                            (v, system_components_to_subnets c))\n                     C)\n                   e1 of\n             None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n             | Some property \\<Rightarrow> property)\n            (case map_of\n                   (map (\\<lambda>(v, c).\n                            (v, system_components_to_subnets c))\n                     C)\n                   e2 of\n             None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n             | Some property \\<Rightarrow> property)) \\<and>\n     (\\<forall>x\\<in>set (edgesL G).\n         case x of\n         (e1, e2) \\<Rightarrow>\n           \\<not> trusted\n                   (case map_of\n                          (map (\\<lambda>(v, c).\n                                   (v, system_components_to_blp c))\n                            C)\n                          e2 of\n                    None \\<Rightarrow>\n                      SINVAR_BLPtrusted.default_node_properties\n                    | Some property \\<Rightarrow>\n                        property) \\<longrightarrow>\n           security_level\n            (case map_of\n                   (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                     C)\n                   e1 of\n             None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n             | Some property \\<Rightarrow> property)\n           \\<le> security_level\n                  (case map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_blp c))\n                           C)\n                         e2 of\n                   None \\<Rightarrow>\n                     SINVAR_BLPtrusted.default_node_properties\n                   | Some property \\<Rightarrow> property))) =\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n          case map_of C v\\<^sub>1 of\n          None \\<Rightarrow>\n            case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n            | Some SystemBoundaryInput \\<Rightarrow> True\n            | Some SystemBoundaryInputOutput \\<Rightarrow> True\n            | Some _ \\<Rightarrow> False\n          | Some SystemBoundaryOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some SystemBoundaryInputOutput \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n              | _ \\<Rightarrow> True\n          | Some _ \\<Rightarrow>\n              case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n              | Some c2 \\<Rightarrow> True)", "apply(rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          allowed_subnet_flow\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property)\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e2 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property)) \\<and>\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          \\<not> trusted\n                  (case map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_blp c))\n                           C)\n                         e2 of\n                   None \\<Rightarrow>\n                     SINVAR_BLPtrusted.default_node_properties\n                   | Some property \\<Rightarrow> property) \\<longrightarrow>\n          security_level\n           (case map_of\n                  (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n            | Some property \\<Rightarrow> property)\n          \\<le> security_level\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property)) \\<Longrightarrow>\n    \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True\n 2. \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True \\<Longrightarrow>\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          allowed_subnet_flow\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property)\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e2 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property)) \\<and>\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          \\<not> trusted\n                  (case map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_blp c))\n                           C)\n                         e2 of\n                   None \\<Rightarrow>\n                     SINVAR_BLPtrusted.default_node_properties\n                   | Some property \\<Rightarrow> property) \\<longrightarrow>\n          security_level\n           (case map_of\n                  (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n            | Some property \\<Rightarrow> property)\n          \\<le> security_level\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property))", "apply(clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        \\<forall>x\\<in>set (edgesL G).\n           case x of\n           (e1, e2) \\<Rightarrow>\n             allowed_subnet_flow\n              (case map_of\n                     (map (\\<lambda>(v, c).\n                              (v, system_components_to_subnets c))\n                       C)\n                     e1 of\n               None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n               | Some property \\<Rightarrow> property)\n              (case map_of\n                     (map (\\<lambda>(v, c).\n                              (v, system_components_to_subnets c))\n                       C)\n                     e2 of\n               None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n               | Some property \\<Rightarrow> property);\n        \\<forall>x\\<in>set (edgesL G).\n           case x of\n           (e1, e2) \\<Rightarrow>\n             \\<not> trusted\n                     (case map_of\n                            (map (\\<lambda>(v, c).\n                                     (v, system_components_to_blp c))\n                              C)\n                            e2 of\n                      None \\<Rightarrow>\n                        SINVAR_BLPtrusted.default_node_properties\n                      | Some property \\<Rightarrow>\n                          property) \\<longrightarrow>\n             security_level\n              (case map_of\n                     (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                       C)\n                     e1 of\n               None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n               | Some property \\<Rightarrow> property)\n             \\<le> security_level\n                    (case map_of\n                           (map (\\<lambda>(v, c).\n                                    (v, system_components_to_blp c))\n                             C)\n                           e2 of\n                     None \\<Rightarrow>\n                       SINVAR_BLPtrusted.default_node_properties\n                     | Some property \\<Rightarrow> property)\\<rbrakk>\n       \\<Longrightarrow> case map_of C a of\n                         None \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | Some SystemBoundaryInput \\<Rightarrow> True\n                           | Some SystemBoundaryInputOutput \\<Rightarrow>\n                               True\n                           | Some _ \\<Rightarrow> False\n                         | Some SystemBoundaryOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | Some SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | Some _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True\n 2. \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True \\<Longrightarrow>\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          allowed_subnet_flow\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property)\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e2 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property)) \\<and>\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          \\<not> trusted\n                  (case map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_blp c))\n                           C)\n                         e2 of\n                   None \\<Rightarrow>\n                     SINVAR_BLPtrusted.default_node_properties\n                   | Some property \\<Rightarrow> property) \\<longrightarrow>\n          security_level\n           (case map_of\n                  (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n            | Some property \\<Rightarrow> property)\n          \\<le> security_level\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property))", "subgoal for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     \\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          allowed_subnet_flow\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property)\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e2 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property);\n     \\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          \\<not> trusted\n                  (case map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_blp c))\n                           C)\n                         e2 of\n                   None \\<Rightarrow>\n                     SINVAR_BLPtrusted.default_node_properties\n                   | Some property \\<Rightarrow> property) \\<longrightarrow>\n          security_level\n           (case map_of\n                  (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n            | Some property \\<Rightarrow> property)\n          \\<le> security_level\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property)\\<rbrakk>\n    \\<Longrightarrow> case map_of C a of\n                      None \\<Rightarrow>\n                        case map_of C b of None \\<Rightarrow> True\n                        | Some SystemBoundaryInput \\<Rightarrow> True\n                        | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                        | Some _ \\<Rightarrow> False\n                      | Some SystemBoundaryOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some SystemBoundaryInputOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some _ \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> False\n                          | Some c2 \\<Rightarrow> True", "apply(erule_tac x=\"(a,b)\" in ballE)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     case (a, b) of\n     (e1, e2) \\<Rightarrow>\n       allowed_subnet_flow\n        (case map_of\n               (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                 C)\n               e1 of\n         None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n         | Some property \\<Rightarrow> property)\n        (case map_of\n               (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                 C)\n               e2 of\n         None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n         | Some property \\<Rightarrow> property);\n     case (a, b) of\n     (e1, e2) \\<Rightarrow>\n       \\<not> trusted\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      e2 of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property) \\<longrightarrow>\n       security_level\n        (case map_of\n               (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n               e1 of\n         None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n         | Some property \\<Rightarrow> property)\n       \\<le> security_level\n              (case map_of\n                     (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                       C)\n                     e2 of\n               None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n               | Some property \\<Rightarrow> property)\\<rbrakk>\n    \\<Longrightarrow> case map_of C a of\n                      None \\<Rightarrow>\n                        case map_of C b of None \\<Rightarrow> True\n                        | Some SystemBoundaryInput \\<Rightarrow> True\n                        | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                        | Some _ \\<Rightarrow> False\n                      | Some SystemBoundaryOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some SystemBoundaryInputOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some _ \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> False\n                          | Some c2 \\<Rightarrow> True\n 2. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     case (a, b) of\n     (e1, e2) \\<Rightarrow>\n       allowed_subnet_flow\n        (case map_of\n               (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                 C)\n               e1 of\n         None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n         | Some property \\<Rightarrow> property)\n        (case map_of\n               (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                 C)\n               e2 of\n         None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n         | Some property \\<Rightarrow> property);\n     (a, b) \\<notin> set (edgesL G)\\<rbrakk>\n    \\<Longrightarrow> case map_of C a of\n                      None \\<Rightarrow>\n                        case map_of C b of None \\<Rightarrow> True\n                        | Some SystemBoundaryInput \\<Rightarrow> True\n                        | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                        | Some _ \\<Rightarrow> False\n                      | Some SystemBoundaryOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some SystemBoundaryInputOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some _ \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> False\n                          | Some c2 \\<Rightarrow> True\n 3. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     \\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          \\<not> trusted\n                  (case map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_blp c))\n                           C)\n                         e2 of\n                   None \\<Rightarrow>\n                     SINVAR_BLPtrusted.default_node_properties\n                   | Some property \\<Rightarrow> property) \\<longrightarrow>\n          security_level\n           (case map_of\n                  (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n            | Some property \\<Rightarrow> property)\n          \\<le> security_level\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property);\n     (a, b) \\<notin> set (edgesL G)\\<rbrakk>\n    \\<Longrightarrow> case map_of C a of\n                      None \\<Rightarrow>\n                        case map_of C b of None \\<Rightarrow> True\n                        | Some SystemBoundaryInput \\<Rightarrow> True\n                        | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                        | Some _ \\<Rightarrow> False\n                      | Some SystemBoundaryOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some SystemBoundaryInputOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some _ \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> False\n                          | Some c2 \\<Rightarrow> True", "apply(simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     allowed_subnet_flow\n      (case map_of\n             (map (\\<lambda>(v, c). (v, system_components_to_subnets c)) C)\n             a of\n       None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n       | Some property \\<Rightarrow> property)\n      (case map_of\n             (map (\\<lambda>(v, c). (v, system_components_to_subnets c)) C)\n             b of\n       None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n       | Some property \\<Rightarrow> property);\n     \\<not> trusted\n             (case map_of\n                    (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                      C)\n                    b of\n              None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n              | Some property \\<Rightarrow> property) \\<longrightarrow>\n     security_level\n      (case map_of\n             (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C) a of\n       None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n       | Some property \\<Rightarrow> property)\n     \\<le> security_level\n            (case map_of\n                   (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                     C)\n                   b of\n             None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n             | Some property \\<Rightarrow> property)\\<rbrakk>\n    \\<Longrightarrow> case map_of C a of\n                      None \\<Rightarrow>\n                        case map_of C b of None \\<Rightarrow> True\n                        | Some SystemBoundaryInput \\<Rightarrow> True\n                        | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                        | Some _ \\<Rightarrow> False\n                      | Some SystemBoundaryOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some SystemBoundaryInputOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some _ \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> False\n                          | Some c2 \\<Rightarrow> True", "apply(case_tac \"map_of C a\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     allowed_subnet_flow\n      (case map_of\n             (map (\\<lambda>(v, c). (v, system_components_to_subnets c)) C)\n             a of\n       None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n       | Some property \\<Rightarrow> property)\n      (case map_of\n             (map (\\<lambda>(v, c). (v, system_components_to_subnets c)) C)\n             b of\n       None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n       | Some property \\<Rightarrow> property);\n     \\<not> trusted\n             (case map_of\n                    (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                      C)\n                    b of\n              None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n              | Some property \\<Rightarrow> property) \\<longrightarrow>\n     security_level\n      (case map_of\n             (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C) a of\n       None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n       | Some property \\<Rightarrow> property)\n     \\<le> security_level\n            (case map_of\n                   (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                     C)\n                   b of\n             None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n             | Some property \\<Rightarrow> property);\n     map_of C a = None\\<rbrakk>\n    \\<Longrightarrow> case map_of C a of\n                      None \\<Rightarrow>\n                        case map_of C b of None \\<Rightarrow> True\n                        | Some SystemBoundaryInput \\<Rightarrow> True\n                        | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                        | Some _ \\<Rightarrow> False\n                      | Some SystemBoundaryOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some SystemBoundaryInputOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some _ \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> False\n                          | Some c2 \\<Rightarrow> True\n 2. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa\\<rbrakk>\n       \\<Longrightarrow> case map_of C a of\n                         None \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | Some SystemBoundaryInput \\<Rightarrow> True\n                           | Some SystemBoundaryInputOutput \\<Rightarrow>\n                               True\n                           | Some _ \\<Rightarrow> False\n                         | Some SystemBoundaryOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | Some SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | Some _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(case_tac \"map_of C b\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     allowed_subnet_flow\n      (case map_of\n             (map (\\<lambda>(v, c). (v, system_components_to_subnets c)) C)\n             a of\n       None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n       | Some property \\<Rightarrow> property)\n      (case map_of\n             (map (\\<lambda>(v, c). (v, system_components_to_subnets c)) C)\n             b of\n       None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n       | Some property \\<Rightarrow> property);\n     \\<not> trusted\n             (case map_of\n                    (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                      C)\n                    b of\n              None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n              | Some property \\<Rightarrow> property) \\<longrightarrow>\n     security_level\n      (case map_of\n             (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C) a of\n       None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n       | Some property \\<Rightarrow> property)\n     \\<le> security_level\n            (case map_of\n                   (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                     C)\n                   b of\n             None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n             | Some property \\<Rightarrow> property);\n     map_of C a = None; map_of C b = None\\<rbrakk>\n    \\<Longrightarrow> case map_of C a of\n                      None \\<Rightarrow>\n                        case map_of C b of None \\<Rightarrow> True\n                        | Some SystemBoundaryInput \\<Rightarrow> True\n                        | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                        | Some _ \\<Rightarrow> False\n                      | Some SystemBoundaryOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some SystemBoundaryInputOutput \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> True\n                          | _ \\<Rightarrow> True\n                      | Some _ \\<Rightarrow>\n                          case map_of C b of None \\<Rightarrow> False\n                          | Some c2 \\<Rightarrow> True\n 2. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = None; map_of C b = Some aa\\<rbrakk>\n       \\<Longrightarrow> case map_of C a of\n                         None \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | Some SystemBoundaryInput \\<Rightarrow> True\n                           | Some SystemBoundaryInputOutput \\<Rightarrow>\n                               True\n                           | Some _ \\<Rightarrow> False\n                         | Some SystemBoundaryOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | Some SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | Some _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True\n 3. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa\\<rbrakk>\n       \\<Longrightarrow> case map_of C a of\n                         None \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | Some SystemBoundaryInput \\<Rightarrow> True\n                           | Some SystemBoundaryInputOutput \\<Rightarrow>\n                               True\n                           | Some _ \\<Rightarrow> False\n                         | Some SystemBoundaryOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | Some SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | Some _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(simp_all)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = None; map_of C b = Some aa\\<rbrakk>\n       \\<Longrightarrow> case aa of SystemBoundaryInput \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow> True\n                         | _ \\<Rightarrow> False\n 2. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(simp add: map_of_map)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow SINVAR_SubnetsInGW.default_node_properties\n         (system_components_to_subnets aa);\n        \\<not> trusted (system_components_to_blp aa) \\<longrightarrow>\n        security_level SINVAR_BLPtrusted.default_node_properties\n        \\<le> security_level (system_components_to_blp aa);\n        map_of C a = None; map_of C b = Some aa\\<rbrakk>\n       \\<Longrightarrow> case aa of SystemBoundaryInput \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow> True\n                         | _ \\<Rightarrow> False\n 2. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(simp split: system_components.split)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow SINVAR_SubnetsInGW.default_node_properties\n         (system_components_to_subnets aa);\n        \\<not> trusted (system_components_to_blp aa) \\<longrightarrow>\n        security_level SINVAR_BLPtrusted.default_node_properties\n        \\<le> security_level (system_components_to_blp aa);\n        map_of C a = None; map_of C b = Some aa\\<rbrakk>\n       \\<Longrightarrow> aa \\<noteq> SystemComponent \\<and>\n                         aa \\<noteq> SystemBoundaryOutput\n 2. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(simp add: system_components_to_subnets)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        aa = SystemBoundaryInput \\<or> aa = SystemBoundaryInputOutput;\n        \\<not> trusted (system_components_to_blp aa) \\<longrightarrow>\n        security_level SINVAR_BLPtrusted.default_node_properties\n        \\<le> security_level (system_components_to_blp aa);\n        map_of C a = None; map_of C b = Some aa\\<rbrakk>\n       \\<Longrightarrow> aa \\<noteq> SystemComponent \\<and>\n                         aa \\<noteq> SystemBoundaryOutput\n 2. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(case_tac \"map_of C b\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa; map_of C b = None\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True\n 2. \\<And>aa aaa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa; map_of C b = Some aaa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(simp add: map_of_map)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow (system_components_to_subnets aa)\n         SINVAR_SubnetsInGW.default_node_properties;\n        \\<not> trusted\n                SINVAR_BLPtrusted.default_node_properties \\<longrightarrow>\n        security_level (system_components_to_blp aa)\n        \\<le> security_level SINVAR_BLPtrusted.default_node_properties;\n        map_of C a = Some aa; map_of C b = None\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True\n 2. \\<And>aa aaa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa; map_of C b = Some aaa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(simp split: system_components.split)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow (system_components_to_subnets aa)\n         SINVAR_SubnetsInGW.default_node_properties;\n        \\<not> trusted\n                SINVAR_BLPtrusted.default_node_properties \\<longrightarrow>\n        security_level (system_components_to_blp aa)\n        \\<le> security_level SINVAR_BLPtrusted.default_node_properties;\n        map_of C a = Some aa; map_of C b = None\\<rbrakk>\n       \\<Longrightarrow> aa \\<noteq> SystemComponent \\<and>\n                         aa \\<noteq> SystemBoundaryInput\n 2. \\<And>aa aaa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa; map_of C b = Some aaa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(simp add: system_components_to_blp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow (system_components_to_subnets aa)\n         SINVAR_SubnetsInGW.default_node_properties;\n        aa = SystemBoundaryOutput \\<or> aa = SystemBoundaryInputOutput;\n        map_of C a = Some aa; map_of C b = None\\<rbrakk>\n       \\<Longrightarrow> aa \\<noteq> SystemComponent \\<and>\n                         aa \\<noteq> SystemBoundaryInput\n 2. \\<And>aa aaa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa; map_of C b = Some aaa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa aaa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                a of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property)\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                  C)\n                b of\n          None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n          | Some property \\<Rightarrow> property);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property) \\<longrightarrow>\n        security_level\n         (case map_of\n                (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                a of\n          None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n          | Some property \\<Rightarrow> property)\n        \\<le> security_level\n               (case map_of\n                      (map (\\<lambda>(v, c).\n                               (v, system_components_to_blp c))\n                        C)\n                      b of\n                None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n                | Some property \\<Rightarrow> property);\n        map_of C a = Some aa; map_of C b = Some aaa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(simp add: map_of_map)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa aaa.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        allowed_subnet_flow (system_components_to_subnets aa)\n         (system_components_to_subnets aaa);\n        \\<not> trusted (system_components_to_blp aaa) \\<longrightarrow>\n        security_level (system_components_to_blp aa)\n        \\<le> security_level (system_components_to_blp aaa);\n        map_of C a = Some aa; map_of C b = Some aaa\\<rbrakk>\n       \\<Longrightarrow> case aa of\n                         SystemBoundaryOutput \\<Rightarrow>\n                           case map_of C b of None \\<Rightarrow> True\n                           | _ \\<Rightarrow> True\n                         | SystemBoundaryInputOutput \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> True\n                             | _ \\<Rightarrow> True\n                         | _ \\<Rightarrow>\n                             case map_of C b of None \\<Rightarrow> False\n                             | Some c2 \\<Rightarrow> True", "apply(simp split: system_components.split; fail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True \\<Longrightarrow>\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          allowed_subnet_flow\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property)\n           (case map_of\n                  (map (\\<lambda>(v, c).\n                           (v, system_components_to_subnets c))\n                    C)\n                  e2 of\n            None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n            | Some property \\<Rightarrow> property)) \\<and>\n    (\\<forall>x\\<in>set (edgesL G).\n        case x of\n        (e1, e2) \\<Rightarrow>\n          \\<not> trusted\n                  (case map_of\n                         (map (\\<lambda>(v, c).\n                                  (v, system_components_to_blp c))\n                           C)\n                         e2 of\n                   None \\<Rightarrow>\n                     SINVAR_BLPtrusted.default_node_properties\n                   | Some property \\<Rightarrow> property) \\<longrightarrow>\n          security_level\n           (case map_of\n                  (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                  e1 of\n            None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n            | Some property \\<Rightarrow> property)\n          \\<le> security_level\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property))", "apply(intro conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True \\<Longrightarrow>\n    \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (e1, e2) \\<Rightarrow>\n         allowed_subnet_flow\n          (case map_of\n                 (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                   C)\n                 e1 of\n           None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n           | Some property \\<Rightarrow> property)\n          (case map_of\n                 (map (\\<lambda>(v, c). (v, system_components_to_subnets c))\n                   C)\n                 e2 of\n           None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n           | Some property \\<Rightarrow> property)\n 2. \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True \\<Longrightarrow>\n    \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (e1, e2) \\<Rightarrow>\n         \\<not> trusted\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property) \\<longrightarrow>\n         security_level\n          (case map_of\n                 (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                 e1 of\n           None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n           | Some property \\<Rightarrow> property)\n         \\<le> security_level\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       e2 of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property)", "apply(simp add: map_of_map)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True \\<Longrightarrow>\n    \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (e1, e2) \\<Rightarrow>\n         allowed_subnet_flow\n          (case map_of C e1 of\n           None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n           | Some x \\<Rightarrow>\n               ((\\<lambda>property. property) \\<circ>\n                system_components_to_subnets)\n                x)\n          (case map_of C e2 of\n           None \\<Rightarrow> SINVAR_SubnetsInGW.default_node_properties\n           | Some x \\<Rightarrow>\n               ((\\<lambda>property. property) \\<circ>\n                system_components_to_subnets)\n                x)\n 2. \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True \\<Longrightarrow>\n    \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (e1, e2) \\<Rightarrow>\n         \\<not> trusted\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property) \\<longrightarrow>\n         security_level\n          (case map_of\n                 (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                 e1 of\n           None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n           | Some property \\<Rightarrow> property)\n         \\<le> security_level\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       e2 of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property)", "apply(clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>set (edgesL G).\n                   case x of\n                   (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n                     case map_of C v\\<^sub>1 of\n                     None \\<Rightarrow>\n                       case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                       | Some SystemBoundaryInput \\<Rightarrow> True\n                       | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                       | Some _ \\<Rightarrow> False\n                     | Some SystemBoundaryOutput \\<Rightarrow>\n                         case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                         | _ \\<Rightarrow> True\n                     | Some SystemBoundaryInputOutput \\<Rightarrow>\n                         case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                         | _ \\<Rightarrow> True\n                     | Some _ \\<Rightarrow>\n                         case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n                         | Some c2 \\<Rightarrow> True;\n        (a, b) \\<in> set (edgesL G)\\<rbrakk>\n       \\<Longrightarrow> allowed_subnet_flow\n                          (case map_of C a of\n                           None \\<Rightarrow>\n                             SINVAR_SubnetsInGW.default_node_properties\n                           | Some x \\<Rightarrow>\n                               ((\\<lambda>property. property) \\<circ>\n                                system_components_to_subnets)\n                                x)\n                          (case map_of C b of\n                           None \\<Rightarrow>\n                             SINVAR_SubnetsInGW.default_node_properties\n                           | Some x \\<Rightarrow>\n                               ((\\<lambda>property. property) \\<circ>\n                                system_components_to_subnets)\n                                x)\n 2. \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True \\<Longrightarrow>\n    \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (e1, e2) \\<Rightarrow>\n         \\<not> trusted\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property) \\<longrightarrow>\n         security_level\n          (case map_of\n                 (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                 e1 of\n           None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n           | Some property \\<Rightarrow> property)\n         \\<le> security_level\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       e2 of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property)", "subgoal for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>set (edgesL G).\n                case x of\n                (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n                  case map_of C v\\<^sub>1 of\n                  None \\<Rightarrow>\n                    case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                    | Some SystemBoundaryInput \\<Rightarrow> True\n                    | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                    | Some _ \\<Rightarrow> False\n                  | Some SystemBoundaryOutput \\<Rightarrow>\n                      case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                      | _ \\<Rightarrow> True\n                  | Some SystemBoundaryInputOutput \\<Rightarrow>\n                      case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                      | _ \\<Rightarrow> True\n                  | Some _ \\<Rightarrow>\n                      case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n                      | Some c2 \\<Rightarrow> True;\n     (a, b) \\<in> set (edgesL G)\\<rbrakk>\n    \\<Longrightarrow> allowed_subnet_flow\n                       (case map_of C a of\n                        None \\<Rightarrow>\n                          SINVAR_SubnetsInGW.default_node_properties\n                        | Some x \\<Rightarrow>\n                            ((\\<lambda>property. property) \\<circ>\n                             system_components_to_subnets)\n                             x)\n                       (case map_of C b of\n                        None \\<Rightarrow>\n                          SINVAR_SubnetsInGW.default_node_properties\n                        | Some x \\<Rightarrow>\n                            ((\\<lambda>property. property) \\<circ>\n                             system_components_to_subnets)\n                             x)", "apply(erule_tac x=\"(a,b)\" in ballE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     case (a, b) of\n     (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n       case map_of C v\\<^sub>1 of\n       None \\<Rightarrow>\n         case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n         | Some SystemBoundaryInput \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow> True\n         | Some _ \\<Rightarrow> False\n       | Some SystemBoundaryOutput \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | _ \\<Rightarrow> True\n       | Some SystemBoundaryInputOutput \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | _ \\<Rightarrow> True\n       | Some _ \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n           | Some c2 \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> allowed_subnet_flow\n                       (case map_of C a of\n                        None \\<Rightarrow>\n                          SINVAR_SubnetsInGW.default_node_properties\n                        | Some x \\<Rightarrow>\n                            ((\\<lambda>property. property) \\<circ>\n                             system_components_to_subnets)\n                             x)\n                       (case map_of C b of\n                        None \\<Rightarrow>\n                          SINVAR_SubnetsInGW.default_node_properties\n                        | Some x \\<Rightarrow>\n                            ((\\<lambda>property. property) \\<circ>\n                             system_components_to_subnets)\n                             x)\n 2. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     (a, b) \\<notin> set (edgesL G)\\<rbrakk>\n    \\<Longrightarrow> allowed_subnet_flow\n                       (case map_of C a of\n                        None \\<Rightarrow>\n                          SINVAR_SubnetsInGW.default_node_properties\n                        | Some x \\<Rightarrow>\n                            ((\\<lambda>property. property) \\<circ>\n                             system_components_to_subnets)\n                             x)\n                       (case map_of C b of\n                        None \\<Rightarrow>\n                          SINVAR_SubnetsInGW.default_node_properties\n                        | Some x \\<Rightarrow>\n                            ((\\<lambda>property. property) \\<circ>\n                             system_components_to_subnets)\n                             x)", "apply(simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     case map_of C a of\n     None \\<Rightarrow>\n       case map_of C b of None \\<Rightarrow> True\n       | Some SystemBoundaryInput \\<Rightarrow> True\n       | Some SystemBoundaryInputOutput \\<Rightarrow> True\n       | Some _ \\<Rightarrow> False\n     | Some SystemBoundaryOutput \\<Rightarrow>\n         case map_of C b of None \\<Rightarrow> True | _ \\<Rightarrow> True\n     | Some SystemBoundaryInputOutput \\<Rightarrow>\n         case map_of C b of None \\<Rightarrow> True | _ \\<Rightarrow> True\n     | Some _ \\<Rightarrow>\n         case map_of C b of None \\<Rightarrow> False\n         | Some c2 \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> allowed_subnet_flow\n                       (case map_of C a of\n                        None \\<Rightarrow>\n                          SINVAR_SubnetsInGW.default_node_properties\n                        | Some x \\<Rightarrow>\n                            ((\\<lambda>property. property) \\<circ>\n                             system_components_to_subnets)\n                             x)\n                       (case map_of C b of\n                        None \\<Rightarrow>\n                          SINVAR_SubnetsInGW.default_node_properties\n                        | Some x \\<Rightarrow>\n                            ((\\<lambda>property. property) \\<circ>\n                             system_components_to_subnets)\n                             x)", "apply(simp split: option.split_asm system_components.split_asm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G); map_of C a = None;\n     map_of C b = None\\<rbrakk>\n    \\<Longrightarrow> allowed_subnet_flow\n                       SINVAR_SubnetsInGW.default_node_properties\n                       SINVAR_SubnetsInGW.default_node_properties\n 2. \\<And>x2.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G); map_of C a = None;\n        map_of C b = Some SystemBoundaryInput;\n        x2 = SystemBoundaryInput\\<rbrakk>\n       \\<Longrightarrow> allowed_subnet_flow\n                          SINVAR_SubnetsInGW.default_node_properties\n                          InboundGateway\n 3. \\<And>x2.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G); map_of C a = None;\n        map_of C b = Some SystemBoundaryInputOutput;\n        x2 = SystemBoundaryInputOutput\\<rbrakk>\n       \\<Longrightarrow> allowed_subnet_flow\n                          SINVAR_SubnetsInGW.default_node_properties\n                          InboundGateway", "by(simp_all add: SINVAR_SubnetsInGW.default_node_properties_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n         case map_of C v\\<^sub>1 of\n         None \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | Some SystemBoundaryInput \\<Rightarrow> True\n           | Some SystemBoundaryInputOutput \\<Rightarrow> True\n           | Some _ \\<Rightarrow> False\n         | Some SystemBoundaryOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n             | _ \\<Rightarrow> True\n         | Some _ \\<Rightarrow>\n             case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n             | Some c2 \\<Rightarrow> True \\<Longrightarrow>\n    \\<forall>x\\<in>set (edgesL G).\n       case x of\n       (e1, e2) \\<Rightarrow>\n         \\<not> trusted\n                 (case map_of\n                        (map (\\<lambda>(v, c).\n                                 (v, system_components_to_blp c))\n                          C)\n                        e2 of\n                  None \\<Rightarrow>\n                    SINVAR_BLPtrusted.default_node_properties\n                  | Some property \\<Rightarrow> property) \\<longrightarrow>\n         security_level\n          (case map_of\n                 (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                 e1 of\n           None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n           | Some property \\<Rightarrow> property)\n         \\<le> security_level\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       e2 of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property)", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<forall>x\\<in>set (edgesL G).\n                   case x of\n                   (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n                     case map_of C v\\<^sub>1 of\n                     None \\<Rightarrow>\n                       case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                       | Some SystemBoundaryInput \\<Rightarrow> True\n                       | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                       | Some _ \\<Rightarrow> False\n                     | Some SystemBoundaryOutput \\<Rightarrow>\n                         case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                         | _ \\<Rightarrow> True\n                     | Some SystemBoundaryInputOutput \\<Rightarrow>\n                         case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                         | _ \\<Rightarrow> True\n                     | Some _ \\<Rightarrow>\n                         case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n                         | Some c2 \\<Rightarrow> True;\n        (a, b) \\<in> set (edgesL G);\n        \\<not> trusted\n                (case map_of\n                       (map (\\<lambda>(v, c).\n                                (v, system_components_to_blp c))\n                         C)\n                       b of\n                 None \\<Rightarrow>\n                   SINVAR_BLPtrusted.default_node_properties\n                 | Some property \\<Rightarrow> property)\\<rbrakk>\n       \\<Longrightarrow> security_level\n                          (case map_of\n                                 (map (\\<lambda>(v, c).\n    (v, system_components_to_blp c))\n                                   C)\n                                 a of\n                           None \\<Rightarrow>\n                             SINVAR_BLPtrusted.default_node_properties\n                           | Some property \\<Rightarrow> property)\n                         \\<le> security_level\n                                (case map_of\n (map (\\<lambda>(v, c). (v, system_components_to_blp c)) C) b of\n                                 None \\<Rightarrow>\n                                   SINVAR_BLPtrusted.default_node_properties\n                                 | Some property \\<Rightarrow> property)", "subgoal for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x\\<in>set (edgesL G).\n                case x of\n                (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n                  case map_of C v\\<^sub>1 of\n                  None \\<Rightarrow>\n                    case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                    | Some SystemBoundaryInput \\<Rightarrow> True\n                    | Some SystemBoundaryInputOutput \\<Rightarrow> True\n                    | Some _ \\<Rightarrow> False\n                  | Some SystemBoundaryOutput \\<Rightarrow>\n                      case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                      | _ \\<Rightarrow> True\n                  | Some SystemBoundaryInputOutput \\<Rightarrow>\n                      case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n                      | _ \\<Rightarrow> True\n                  | Some _ \\<Rightarrow>\n                      case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n                      | Some c2 \\<Rightarrow> True;\n     (a, b) \\<in> set (edgesL G);\n     \\<not> trusted\n             (case map_of\n                    (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                      C)\n                    b of\n              None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n              | Some property \\<Rightarrow> property)\\<rbrakk>\n    \\<Longrightarrow> security_level\n                       (case map_of\n                              (map (\\<lambda>(v, c).\n (v, system_components_to_blp c))\n                                C)\n                              a of\n                        None \\<Rightarrow>\n                          SINVAR_BLPtrusted.default_node_properties\n                        | Some property \\<Rightarrow> property)\n                      \\<le> security_level\n                             (case map_of\n                                    (map\n(\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                                    b of\n                              None \\<Rightarrow>\n                                SINVAR_BLPtrusted.default_node_properties\n                              | Some property \\<Rightarrow> property)", "apply(erule_tac x=\"(a,b)\" in ballE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     \\<not> trusted\n             (case map_of\n                    (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                      C)\n                    b of\n              None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n              | Some property \\<Rightarrow> property);\n     case (a, b) of\n     (v\\<^sub>1, v\\<^sub>2) \\<Rightarrow>\n       case map_of C v\\<^sub>1 of\n       None \\<Rightarrow>\n         case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n         | Some SystemBoundaryInput \\<Rightarrow> True\n         | Some SystemBoundaryInputOutput \\<Rightarrow> True\n         | Some _ \\<Rightarrow> False\n       | Some SystemBoundaryOutput \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | _ \\<Rightarrow> True\n       | Some SystemBoundaryInputOutput \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> True\n           | _ \\<Rightarrow> True\n       | Some _ \\<Rightarrow>\n           case map_of C v\\<^sub>2 of None \\<Rightarrow> False\n           | Some c2 \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> security_level\n                       (case map_of\n                              (map (\\<lambda>(v, c).\n (v, system_components_to_blp c))\n                                C)\n                              a of\n                        None \\<Rightarrow>\n                          SINVAR_BLPtrusted.default_node_properties\n                        | Some property \\<Rightarrow> property)\n                      \\<le> security_level\n                             (case map_of\n                                    (map\n(\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                                    b of\n                              None \\<Rightarrow>\n                                SINVAR_BLPtrusted.default_node_properties\n                              | Some property \\<Rightarrow> property)\n 2. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     \\<not> trusted\n             (case map_of\n                    (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                      C)\n                    b of\n              None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n              | Some property \\<Rightarrow> property);\n     (a, b) \\<notin> set (edgesL G)\\<rbrakk>\n    \\<Longrightarrow> security_level\n                       (case map_of\n                              (map (\\<lambda>(v, c).\n (v, system_components_to_blp c))\n                                C)\n                              a of\n                        None \\<Rightarrow>\n                          SINVAR_BLPtrusted.default_node_properties\n                        | Some property \\<Rightarrow> property)\n                      \\<le> security_level\n                             (case map_of\n                                    (map\n(\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                                    b of\n                              None \\<Rightarrow>\n                                SINVAR_BLPtrusted.default_node_properties\n                              | Some property \\<Rightarrow> property)", "apply(simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     \\<not> trusted\n             (case map_of\n                    (map (\\<lambda>(v, c). (v, system_components_to_blp c))\n                      C)\n                    b of\n              None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n              | Some property \\<Rightarrow> property);\n     case map_of C a of\n     None \\<Rightarrow>\n       case map_of C b of None \\<Rightarrow> True\n       | Some SystemBoundaryInput \\<Rightarrow> True\n       | Some SystemBoundaryInputOutput \\<Rightarrow> True\n       | Some _ \\<Rightarrow> False\n     | Some SystemBoundaryOutput \\<Rightarrow>\n         case map_of C b of None \\<Rightarrow> True | _ \\<Rightarrow> True\n     | Some SystemBoundaryInputOutput \\<Rightarrow>\n         case map_of C b of None \\<Rightarrow> True | _ \\<Rightarrow> True\n     | Some _ \\<Rightarrow>\n         case map_of C b of None \\<Rightarrow> False\n         | Some c2 \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> security_level\n                       (case map_of\n                              (map (\\<lambda>(v, c).\n (v, system_components_to_blp c))\n                                C)\n                              a of\n                        None \\<Rightarrow>\n                          SINVAR_BLPtrusted.default_node_properties\n                        | Some property \\<Rightarrow> property)\n                      \\<le> security_level\n                             (case map_of\n                                    (map\n(\\<lambda>(v, c). (v, system_components_to_blp c)) C)\n                                    b of\n                              None \\<Rightarrow>\n                                SINVAR_BLPtrusted.default_node_properties\n                              | Some property \\<Rightarrow> property)", "apply(simp add: map_of_map)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, b) \\<in> set (edgesL G);\n     \\<not> trusted\n             (case map_of C b of\n              None \\<Rightarrow> SINVAR_BLPtrusted.default_node_properties\n              | Some x \\<Rightarrow>\n                  ((\\<lambda>property. property) \\<circ>\n                   system_components_to_blp)\n                   x);\n     case map_of C a of\n     None \\<Rightarrow>\n       case map_of C b of None \\<Rightarrow> True\n       | Some SystemBoundaryInput \\<Rightarrow> True\n       | Some SystemBoundaryInputOutput \\<Rightarrow> True\n       | Some _ \\<Rightarrow> False\n     | Some SystemBoundaryOutput \\<Rightarrow>\n         case map_of C b of None \\<Rightarrow> True | _ \\<Rightarrow> True\n     | Some SystemBoundaryInputOutput \\<Rightarrow>\n         case map_of C b of None \\<Rightarrow> True | _ \\<Rightarrow> True\n     | Some _ \\<Rightarrow>\n         case map_of C b of None \\<Rightarrow> False\n         | Some c2 \\<Rightarrow> True\\<rbrakk>\n    \\<Longrightarrow> security_level\n                       (case map_of C a of\n                        None \\<Rightarrow>\n                          SINVAR_BLPtrusted.default_node_properties\n                        | Some x \\<Rightarrow>\n                            ((\\<lambda>property. property) \\<circ>\n                             system_components_to_blp)\n                             x)\n                      \\<le> security_level\n                             (case map_of C b of\n                              None \\<Rightarrow>\n                                SINVAR_BLPtrusted.default_node_properties\n                              | Some x \\<Rightarrow>\n                                  ((\\<lambda>property. property) \\<circ>\n                                   system_components_to_blp)\n                                   x)", "apply(simp split: option.split_asm system_components.split_asm)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x2.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G);\n        map_of C b = Some SystemBoundaryInput; map_of C a = None;\n        x2 = SystemBoundaryInput\\<rbrakk>\n       \\<Longrightarrow> security_level\n                          SINVAR_BLPtrusted.default_node_properties\n                         \\<le> Suc 0\n 2. \\<And>x2 x2a x2b x2c.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G); x2b = x2;\n        \\<not> trusted (system_components_to_blp x2);\n        map_of C a = Some SystemComponent; x2c = x2; map_of C b = Some x2;\n        x2a = SystemComponent\\<rbrakk>\n       \\<Longrightarrow> Suc 0\n                         \\<le> security_level (system_components_to_blp x2)\n 3. \\<And>x2 x2a x2b x2c.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G); x2b = x2;\n        \\<not> trusted (system_components_to_blp x2);\n        map_of C a = Some SystemBoundaryInput; x2c = x2;\n        map_of C b = Some x2; x2a = SystemBoundaryInput\\<rbrakk>\n       \\<Longrightarrow> Suc 0\n                         \\<le> security_level (system_components_to_blp x2)", "apply(simp add: SINVAR_BLPtrusted.default_node_properties_def; fail)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x2 x2a x2b x2c.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G); x2b = x2;\n        \\<not> trusted (system_components_to_blp x2);\n        map_of C a = Some SystemComponent; x2c = x2; map_of C b = Some x2;\n        x2a = SystemComponent\\<rbrakk>\n       \\<Longrightarrow> Suc 0\n                         \\<le> security_level (system_components_to_blp x2)\n 2. \\<And>x2 x2a x2b x2c.\n       \\<lbrakk>(a, b) \\<in> set (edgesL G); x2b = x2;\n        \\<not> trusted (system_components_to_blp x2);\n        map_of C a = Some SystemBoundaryInput; x2c = x2;\n        map_of C b = Some x2; x2a = SystemBoundaryInput\\<rbrakk>\n       \\<Longrightarrow> Suc 0\n                         \\<le> security_level (system_components_to_blp x2)", "apply(rename_tac x, case_tac x, simp_all)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "value[code] \"let nodes = [1,2,3,4,8,9,10];\n           sinvars = new_meta_system_boundary\n              [(1::int, SystemBoundaryInput),\n               (2, SystemComponent),\n               (3, SystemBoundaryOutput),\n               (4, SystemBoundaryInputOutput)\n               ] ''foobar''\n       in generate_valid_topology sinvars \\<lparr>nodesL = nodes, edgesL = List.product nodes nodes \\<rparr>\""], ["", "end"]]}