{"file_name": "/home/qj213/afp-2021-10-22/thys/Network_Security_Policy_Verification/Examples/Impl_List_Playground.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Network_Security_Policy_Verification", "problem_names": ["lemma \"wf_list_graph testGraph\""], "translations": [["", "lemma \"wf_list_graph testGraph\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_list_graph testGraph", "by eval"], ["", "definition req1 ::\"(string SecurityInvariant)\" where\n  \"req1 \\<equiv> new_configured_list_SecurityInvariant SINVAR_SecGwExt_impl.SINVAR_LIB_PolEnforcePointExtended \\<lparr> \n      node_properties = [''Master'' \\<mapsto> PolEnforcePoint,\n                         ''Slave1'' \\<mapsto> DomainMember,\n                         ''Slave2'' \\<mapsto> DomainMember]\n      \\<rparr> ''req1''\""], ["", "definition \"req2 \\<equiv> new_configured_list_SecurityInvariant SINVAR_NoRefl_impl.SINVAR_LIB_NoRefl \\<lparr> \n      node_properties = [''Master'' \\<mapsto> Refl,\n                         ''other1'' \\<mapsto> Refl,\n                         ''other2'' \\<mapsto> Refl]\n      \\<rparr> ''req2''\""], ["", "definition \"reqs = [req1, req2]\""], ["", "definition \"max_network = generate_valid_topology reqs \n      \\<lparr>nodesL = nodesL testGraph, edgesL = List.product (nodesL testGraph) (nodesL testGraph) \\<rparr>\""], ["", "value \"max_network\""], ["", "ML\\<open>\nvisualize_graph @{context} @{term \"reqs\"} @{term \"max_network\"};\n\\<close>"], ["", "end"]]}