{"file_name": "/home/qj213/afp-2021-10-22/thys/Transformer_Semantics/Kleisli_Transformers.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Transformer_Semantics", "problem_names": ["lemma fbd_set: \"bd\\<^sub>\\<F> f X = {y. \\<exists>x. y \\<in> f x \\<and> x \\<in> X}\"", "lemma ifbd_set: \"bd\\<^sup>-\\<^sub>\\<F> \\<phi> x = {y. y \\<in> \\<phi> {x}}\"", "lemma fbd_ifbd_inv2: \"Sup_pres \\<phi> \\<Longrightarrow> (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>\"", "lemma fbd_ifbd_inv2_inv: \"(bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi> \\<Longrightarrow> Sup_pres \\<phi>\"", "lemma fbd_ifbd_inv2_iff: \"((bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>) = (Sup_pres \\<phi>)\"", "lemma fbd_inj: \"inj bd\\<^sub>\\<F>\"", "lemma fbd_inj_iff: \"(bd\\<^sub>\\<F> f = bd\\<^sub>\\<F> g) = (f = g)\"", "lemma ifbd_inj: \"Sup_pres \\<phi> \\<Longrightarrow> Sup_pres \\<psi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi> \\<Longrightarrow> \\<phi> = \\<psi>\"", "lemma ifbd_inj_iff: \"Sup_pres \\<phi> \\<Longrightarrow> Sup_pres \\<psi> \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi>) = (\\<phi> = \\<psi>)\"", "lemma fbd_ifbd_galois: \"Sup_pres \\<phi> \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = (bd\\<^sub>\\<F> f = \\<phi>)\"", "lemma fbd_surj: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<exists>f. bd\\<^sub>\\<F> f = \\<phi>)\"", "lemma ifbd_surj: \"surj bd\\<^sup>-\\<^sub>\\<F>\"", "lemma fbd_comp_pres: \"bd\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) = bd\\<^sub>\\<F> g \\<circ> bd\\<^sub>\\<F> f\"", "lemma fbd_Sup_pres: \"Sup_pres bd\\<^sub>\\<F>\"", "lemma fbd_sup_pres: \"sup_pres bd\\<^sub>\\<F>\"", "lemma fbd_Disj: \"Sup_pres (bd\\<^sub>\\<F> f)\"", "lemma fbd_disj: \"sup_pres (bd\\<^sub>\\<F> f)\"", "lemma fbd_bot_pres: \"bot_pres bd\\<^sub>\\<F>\"", "lemma fbd_zero_pres2 [simp]: \"bd\\<^sub>\\<F> f {} = {}\"", "lemma fbd_iso: \"X \\<subseteq> Y \\<longrightarrow> bd\\<^sub>\\<F> f X \\<subseteq> bd\\<^sub>\\<F> f Y\"", "lemma \"top_pres bd\\<^sub>\\<F>\"", "lemma \"inf_pres bd\\<^sub>\\<F>\"", "lemma ifbd_comp_pres: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<circ> \\<psi>) = bd\\<^sup>-\\<^sub>\\<F> \\<psi> \\<circ>\\<^sub>K bd\\<^sup>-\\<^sub>\\<F> \\<phi>\"", "lemma ifbd_Sup_pres: \"Sup_pres bd\\<^sup>-\\<^sub>\\<F>\"", "lemma ifbd_sup_pres: \"sup_pres bd\\<^sup>-\\<^sub>\\<F>\"", "lemma ifbd_Inf_pres: \"Inf_pres bd\\<^sup>-\\<^sub>\\<F>\"", "lemma ifbd_inf_pres: \"inf_pres bd\\<^sup>-\\<^sub>\\<F>\"", "lemma ifbd_bot_pres: \"bot_pres bd\\<^sup>-\\<^sub>\\<F>\"", "lemma ifbd_top_pres: \"top_pres bd\\<^sup>-\\<^sub>\\<F>\"", "lemma rbd_Im: \"bd\\<^sub>\\<R> = (``)\"", "lemma rbd_set: \"bd\\<^sub>\\<R> R X = {y. \\<exists>x \\<in> X. (x,y) \\<in> R}\"", "lemma irbd_set: \"bd\\<^sup>-\\<^sub>\\<R> \\<phi> = {(x,y). y \\<in> (\\<phi> \\<circ> \\<eta>) x}\"", "lemma irbd_set_var: \"bd\\<^sup>-\\<^sub>\\<R> \\<phi> = {(x,y). y \\<in> \\<phi> {x}}\"", "lemma rbd_irbd_inv1 [simp]: \"bd\\<^sup>-\\<^sub>\\<R> \\<circ> bd\\<^sub>\\<R> = id\"", "lemma irbd_rbd_inv2: \"Sup_pres \\<phi> \\<Longrightarrow> (bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>\"", "lemma irbd_rbd_inv2_inv: \"(bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi> \\<Longrightarrow> Sup_pres \\<phi>\"", "lemma irbd_rbd_inv2_iff: \"((bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>) = (Sup_pres \\<phi>)\"", "lemma rbd_inj: \"inj bd\\<^sub>\\<R>\"", "lemma rbd_translate: \"(bd\\<^sub>\\<R> R = bd\\<^sub>\\<R> S) = (R = S)\"", "lemma irbd_inj: \"Sup_pres \\<phi> \\<Longrightarrow> Sup_pres \\<psi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<R> \\<phi> = bd\\<^sup>-\\<^sub>\\<R> \\<psi> \\<Longrightarrow> \\<phi> = \\<psi>\"", "lemma irbd_inj_iff: \"Sup_pres \\<phi> \\<Longrightarrow> Sup_pres \\<psi> \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<R> \\<phi> = bd\\<^sup>-\\<^sub>\\<R> \\<psi>) = (\\<phi> = \\<psi>)\"", "lemma rbd_surj: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<exists>R. bd\\<^sub>\\<R> R = \\<phi>)\"", "lemma irbd_surj: \"surj bd\\<^sup>-\\<^sub>\\<R>\"", "lemma rbd_irbd_galois: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<phi> = bd\\<^sub>\\<R> R) = (R = bd\\<^sup>-\\<^sub>\\<R> \\<phi>)\"", "lemma rbd_comp_pres: \"bd\\<^sub>\\<R> (R ; S) = bd\\<^sub>\\<R> S \\<circ> bd\\<^sub>\\<R> R\"", "lemma rbd_Id_pres: \"bd\\<^sub>\\<R> Id = id\"", "lemma rbd_Un_pres: \"Sup_pres bd\\<^sub>\\<R>\"", "lemma rbd_un_pres: \"sup_pres bd\\<^sub>\\<R>\"", "lemma \"inf_pres bd\\<^sub>\\<R>\"", "lemma rbd_disj: \"Sup_pres (bd\\<^sub>\\<R> R)\"", "lemma rbd_disj2: \"sup_pres (bd\\<^sub>\\<R> R)\"", "lemma rbd_bot_pres: \"bot_pres bd\\<^sub>\\<R>\"", "lemma rbd_zero_pres2 [simp]: \"bd\\<^sub>\\<R> R {} = {}\"", "lemma rbd_univ: \"bd\\<^sub>\\<R> R UNIV = Range R\"", "lemma rbd_iso: \"X \\<subseteq> Y \\<Longrightarrow> bd\\<^sub>\\<R> R X \\<subseteq> bd\\<^sub>\\<R> R Y\"", "lemma irbd_comp_pres: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<R> (\\<phi> \\<circ> \\<psi>) = bd\\<^sup>-\\<^sub>\\<R> \\<psi> ; bd\\<^sup>-\\<^sub>\\<R> \\<phi>\"", "lemma irbd_id_pres [simp]: \"bd\\<^sup>-\\<^sub>\\<R> id = Id\"", "lemma irbd_Sup_pres: \"Sup_pres bd\\<^sup>-\\<^sub>\\<R>\"", "lemma irbd_sup_pres: \"sup_pres bd\\<^sup>-\\<^sub>\\<R>\"", "lemma irbd_Inf_pres: \"Inf_pres bd\\<^sup>-\\<^sub>\\<R>\"", "lemma irbd_inf_pres: \"inf_pres bd\\<^sup>-\\<^sub>\\<R>\"", "lemma irbd_bot_pres: \"bot_pres bd\\<^sup>-\\<^sub>\\<R>\"", "lemma ffb_prop: \"fb\\<^sub>\\<F> f = \\<partial> \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\"", "lemma ffb_prop_var: \"fb\\<^sub>\\<F> f = uminus \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> uminus\"", "lemma ffb_fbd_dual: \"\\<partial> \\<circ> fb\\<^sub>\\<F> f = bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\"", "lemma ffb_set: \"fb\\<^sub>\\<F> f = (\\<lambda>Y. {x. f x \\<subseteq> Y})\"", "lemma ffb_fbd_galois: \"(bd\\<^sub>\\<F> f) \\<stileturn> (fb\\<^sub>\\<F> f)\"", "lemma iffb_inv1: \"fb\\<^sup>-\\<^sub>\\<F> \\<circ> fb\\<^sub>\\<F> = id\"", "lemma iffb_inv2_aux: \"Inf_pres \\<phi> \\<Longrightarrow> \\<Sqinter>{X. x \\<in> \\<phi> X} \\<subseteq> Y \\<Longrightarrow> x \\<in> \\<phi> Y\"", "lemma iffb_inv2: \"Inf_pres \\<phi> \\<Longrightarrow> (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>\"", "lemma iffb_inv2_inv: \"(fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi> \\<Longrightarrow> Inf_pres \\<phi>\"", "lemma iffb_inv2_iff: \"((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>) = (Inf_pres \\<phi>)\"", "lemma ffb_inj: \"inj fb\\<^sub>\\<F>\"", "lemma ffb_inj_iff: \"(fb\\<^sub>\\<F> f = fb\\<^sub>\\<F> g) = (f = g)\"", "lemma ffb_iffb_galois: \"Inf_pres \\<phi> \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = (fb\\<^sub>\\<F> f = \\<phi>)\"", "lemma iffb_inj: \"Inf_pres \\<phi> \\<Longrightarrow> Inf_pres \\<psi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<F> \\<phi> = fb\\<^sup>-\\<^sub>\\<F> \\<psi>  \\<Longrightarrow> \\<phi> = \\<psi>\"", "lemma iffb_inj_iff: \"Inf_pres \\<phi> \\<Longrightarrow> Inf_pres \\<psi> \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = fb\\<^sup>-\\<^sub>\\<F> \\<psi>) = (\\<phi> = \\<psi>)\"", "lemma ffb_surj: \"Inf_pres \\<phi>  \\<Longrightarrow> (\\<exists>f. fb\\<^sub>\\<F> f = \\<phi>)\"", "lemma iffb_surj: \"surj fb\\<^sup>-\\<^sub>\\<F>\"", "lemma iffb_ifbd_dual: \"Inf_pres \\<phi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<F> \\<phi> = (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma fbd_ffb_dual: \"\\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K = bd\\<^sub>\\<F>\"", "lemma ffbd_ffb_dual_var: \"\\<partial> \\<circ> bd\\<^sub>\\<F> f = fb\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\"", "lemma ifbd_iffb_dual: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<F> \\<phi> = (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma ffb_kcomp_pres: \"fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) = fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g\"", "lemma ffb_eta_pres: \"fb\\<^sub>\\<F> \\<eta> = id\"", "lemma ffb_Sup_dual: \"Sup_dual fb\\<^sub>\\<F>\"", "lemma ffb_Sup_dual_var: \"fb\\<^sub>\\<F> (\\<Squnion>F) = (\\<Sqinter>f \\<in> F. fb\\<^sub>\\<F> f)\"", "lemma ffb_sup_dual: \"sup_dual fb\\<^sub>\\<F>\"", "lemma ffb_zero_dual: \"fb\\<^sub>\\<F> \\<zeta> = (\\<lambda>X. UNIV)\"", "lemma \"inf_dual ffb\"", "lemma iffb_comp_pres:\n  assumes \"Inf_pres \\<phi>\"\n  assumes \"Inf_pres \\<psi>\"\n  shows \"fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<circ> \\<psi>) = fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<circ>\\<^sub>K fb\\<^sup>-\\<^sub>\\<F> \\<psi>\"", "lemma iffb_id_pres: \"fb\\<^sup>-\\<^sub>\\<F> id = \\<eta>\"", "lemma iffb_Inf_dual: \n  assumes \"\\<forall>\\<phi> \\<in> \\<Phi>. Inf_pres \\<phi>\"\n  shows \"(fb\\<^sup>-\\<^sub>\\<F> \\<circ> Inf) \\<Phi> = (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>\"", "lemma iffb_Sup_dual: \"Sup_dual fb\\<^sup>-\\<^sub>\\<F>\"", "lemma iffb_inf_dual: \n  assumes \"Inf_pres \\<phi>\" \n  and \"Inf_pres \\<psi>\"\nshows \"fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<sqinter> \\<psi>) = fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<F> \\<psi>\"", "lemma  iffb_sup_dual: \"fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<squnion> \\<psi>) = fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<sqinter> fb\\<^sup>-\\<^sub>\\<F> \\<psi>\"", "lemma iffb_top_pres [simp]: \"fb\\<^sup>-\\<^sub>\\<F> \\<top> = \\<zeta>\"", "lemma rfb_rbd_dual: \"fb\\<^sub>\\<R> R = \\<partial>\\<^sub>F (bd\\<^sub>\\<R> (R\\<inverse>))\"", "lemma rbd_rfb_dual: \"bd\\<^sub>\\<R> R = \\<partial>\\<^sub>F (fb\\<^sub>\\<R> (R\\<inverse>))\"", "lemma irfb_irbd_dual: \"Inf_pres \\<phi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<R> \\<phi> = ((\\<smile>) \\<circ> bd\\<^sup>-\\<^sub>\\<R>  \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma irbd_irfb_dual: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<R> \\<phi> = ((\\<smile>) \\<circ> fb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma rfb_set: \"fb\\<^sub>\\<R> R Y = {x. \\<forall>y. (x,y) \\<in> R \\<longrightarrow> y \\<in> Y}\"", "lemma rfb_rbd_galois: \"(bd\\<^sub>\\<R> R) \\<stileturn> (fb\\<^sub>\\<R> R)\"", "lemma irfb_set: \"fb\\<^sup>-\\<^sub>\\<R> \\<phi> = {(x, y). \\<forall>Y. x \\<in> \\<phi> Y \\<longrightarrow> y \\<in> Y}\"", "lemma irfb_inv1 [simp]: \"fb\\<^sup>-\\<^sub>\\<R> \\<circ> fb\\<^sub>\\<R> = id\"", "lemma irfb_inv2: \"Inf_pres \\<phi> \\<Longrightarrow> (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>\"", "lemma rfb_inj: \"inj fb\\<^sub>\\<R>\"", "lemma rfb_inj_iff: \"(fb\\<^sub>\\<R> R = fb\\<^sub>\\<R> S) = (R = S)\"", "lemma irfb_inj: \"Inf_pres \\<phi> \\<Longrightarrow> Inf_pres \\<psi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<R> \\<phi> = fb\\<^sup>-\\<^sub>\\<R> \\<psi> \\<Longrightarrow> \\<phi> = \\<psi>\"", "lemma irfb_inf_iff: \"Inf_pres \\<phi> \\<Longrightarrow> Inf_pres \\<psi> \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<R> \\<phi> = fb\\<^sup>-\\<^sub>\\<R> \\<psi>) = (\\<phi> = \\<psi>)\"", "lemma rfb_surj: \"Inf_pres \\<phi> \\<Longrightarrow> (\\<exists>R. fb\\<^sub>\\<R> R = \\<phi>)\"", "lemma irfb_surj: \"surj fb\\<^sup>-\\<^sub>\\<R>\"", "lemma rfb_irfb_galois: \"Inf_pres \\<phi> \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<R> \\<phi> = R) = (fb\\<^sub>\\<R> R = \\<phi>)\"", "lemma rfb_comp_pres: \"fb\\<^sub>\\<R> (R ; S) = fb\\<^sub>\\<R> R \\<circ> fb\\<^sub>\\<R> S\"", "lemma rfb_Id_pres [simp]: \"fb\\<^sub>\\<R> Id = id\"", "lemma rfb_Sup_dual: \"Sup_dual fb\\<^sub>\\<R>\"", "lemma rfb_Sup_dual_var: \"fb\\<^sub>\\<R> (\\<Squnion>\\<phi>) = \\<Sqinter>(\\<P> fb\\<^sub>\\<R>) \\<phi>\"", "lemma rfb_sup_dual: \"sup_dual fb\\<^sub>\\<R>\"", "lemma \"inf_dual fb\\<^sub>\\<R>\"", "lemma rfb_Inf_pres: \"Inf_pres (fb\\<^sub>\\<R> R)\"", "lemma rfb_inf_pres: \"inf_pres (fb\\<^sub>\\<R> R)\"", "lemma rfb_zero_pres [simp]: \"fb\\<^sub>\\<R> {} X = UNIV\"", "lemma rfb_zero_pres2 [simp]: \"fb\\<^sub>\\<R> R {} = - Domain R\"", "lemma rfb_univ [simp]: \"fb\\<^sub>\\<R> R UNIV = UNIV\"", "lemma rfb_iso: \"X \\<subseteq> Y \\<Longrightarrow> fb\\<^sub>\\<R> R X \\<subseteq> fb\\<^sub>\\<R> R Y\"", "lemma irfb_comp_pres: \n  assumes \"Inf_pres \\<phi>\"\n  assumes \"Inf_pres \\<psi>\"\n  shows \"fb\\<^sup>-\\<^sub>\\<R> (\\<phi> \\<circ> \\<psi>) = fb\\<^sup>-\\<^sub>\\<R> \\<phi> ; fb\\<^sup>-\\<^sub>\\<R> \\<psi>\"", "lemma irfb_id_pres [simp]: \"fb\\<^sup>-\\<^sub>\\<R> id = Id\"", "lemma irfb_Sup_dual: \"Sup_dual fb\\<^sup>-\\<^sub>\\<R>\"", "lemma irfb_Inf_dual: \n  assumes \"\\<forall>\\<phi> \\<in> \\<Phi>. Inf_pres \\<phi>\"\n  shows \"(fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> = (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>\"", "lemma irfb_sup_dual: \"sup_dual fb\\<^sup>-\\<^sub>\\<R>\"", "lemma irfb_inf_dual: \n  assumes \"Inf_pres \\<phi>\" \n  and \"Inf_pres \\<psi>\"\n  shows \"fb\\<^sup>-\\<^sub>\\<R> (\\<phi> \\<sqinter> \\<psi>) = fb\\<^sup>-\\<^sub>\\<R> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<R> \\<psi>\"", "lemma irfb_top_pres [simp]: \"bd\\<^sup>-\\<^sub>\\<R> \\<top> = UNIV\"", "lemma ffb_fbd_galois_var: \"(bd\\<^sub>\\<F> f X \\<subseteq> Y) = (X \\<subseteq> fb\\<^sub>\\<F> f Y)\"", "lemma rfb_rbd_galois_var: \"(bd\\<^sub>\\<R> R X \\<subseteq> Y) = (X \\<subseteq> fb\\<^sub>\\<R> R Y)\"", "lemma ffb_fbd: \"fb\\<^sub>\\<F> f Y = \\<Union>{X. bd\\<^sub>\\<F> f X \\<subseteq> Y}\"", "lemma rfb_rbd: \"fb\\<^sub>\\<R> R Y = \\<Union>{X. bd\\<^sub>\\<R> R X \\<subseteq> Y}\"", "lemma fbd_ffb: \"bd\\<^sub>\\<F> f X = \\<Inter>{Y. X \\<subseteq> fb\\<^sub>\\<F> f Y}\"", "lemma rbd_rfb: \"bd\\<^sub>\\<R> R X = \\<Inter>{Y. X \\<subseteq> fb\\<^sub>\\<R> R Y}\"", "lemma rfd_rbd: \"fd\\<^sub>\\<R> = bd\\<^sub>\\<R> \\<circ> (\\<smile>)\"", "lemma irfd_irbd: \"fd\\<^sup>-\\<^sub>\\<R> = (\\<smile>) \\<circ> bd\\<^sup>-\\<^sub>\\<R>\"", "lemma fbd_ffd: \"bd\\<^sub>\\<F> = fd\\<^sub>\\<F> \\<circ> op\\<^sub>K\"", "lemma rbb_rfb: \"bb\\<^sub>\\<R> = fb\\<^sub>\\<R> \\<circ> (\\<smile>)\"", "lemma irbb_irfb: \"bb\\<^sup>-\\<^sub>\\<R> = (\\<smile>) \\<circ> fb\\<^sup>-\\<^sub>\\<R>\"", "lemma ffd_ffb_demorgan: \"\\<partial> \\<circ> fd\\<^sub>\\<F> f = fb\\<^sub>\\<F> f \\<circ> \\<partial>\"", "lemma iffd_iffb_demorgan: \"Sup_pres \\<phi> \\<Longrightarrow> fd\\<^sup>-\\<^sub>\\<F> \\<phi> = (fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma ffb_ffd_demorgan: \"\\<partial> \\<circ> fb\\<^sub>\\<F> f = fd\\<^sub>\\<F> f \\<circ> \\<partial>\"", "lemma iffb_iffd_demorgan: \"Inf_pres \\<phi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<F> \\<phi> = (fd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma rfd_rfb_demorgan: \"\\<partial> \\<circ> fd\\<^sub>\\<R> R = fb\\<^sub>\\<R> R \\<circ> \\<partial>\"", "lemma irfd_irfb_demorgan: \"Sup_pres \\<phi> \\<Longrightarrow> fd\\<^sup>-\\<^sub>\\<R> \\<phi> = (fb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma rfb_rfd_demorgan: \"\\<partial> \\<circ> fb\\<^sub>\\<R> R = fd\\<^sub>\\<R> R \\<circ> \\<partial>\"", "lemma irfb_irfd_demorgan: \"Inf_pres \\<phi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<R> \\<phi>  = (fd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma fbd_fbb_demorgan: \"\\<partial> \\<circ> bd\\<^sub>\\<F> f = bb\\<^sub>\\<F> f \\<circ> \\<partial>\"", "lemma ifbd_ifbb_demorgan: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<F> \\<phi> = (bb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma fbb_fbd_demorgan: \"\\<partial> \\<circ> bb\\<^sub>\\<F> R = bd\\<^sub>\\<F> R \\<circ> \\<partial>\"", "lemma ifbb_ifbd_demorgan: \"Inf_pres \\<phi> \\<Longrightarrow> bb\\<^sup>-\\<^sub>\\<F> \\<phi> = (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma rbd_rbb_demorgan: \"\\<partial> \\<circ> bd\\<^sub>\\<R> R = bb\\<^sub>\\<R> R \\<circ> \\<partial>\"", "lemma irbd_irbb_demorgan: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<R> \\<phi> = (bb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma rbb_rbd_demorgan: \"\\<partial> \\<circ> bb\\<^sub>\\<R> R = bd\\<^sub>\\<R> R \\<circ> \\<partial>\"", "lemma irbb_irbd_demorgan: \"Inf_pres \\<phi> \\<Longrightarrow> bb\\<^sup>-\\<^sub>\\<R> \\<phi> = (bd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma ffd_fbb_dual: \"\\<partial> \\<circ> fd\\<^sub>\\<F> f = bb\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\"", "lemma iffd_ifbb_dual: \"Sup_pres \\<phi> \\<Longrightarrow> fd\\<^sup>-\\<^sub>\\<F> \\<phi> = (op\\<^sub>K \\<circ> bb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma fbb_ffd_dual: \"\\<partial> \\<circ> bb\\<^sub>\\<F> f = fd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\"", "lemma ifbb_iffd_dual: \"Inf_pres \\<phi> \\<Longrightarrow> bb\\<^sup>-\\<^sub>\\<F> \\<phi> = (op\\<^sub>K \\<circ> fd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma rfd_rbb_dual: \"\\<partial> \\<circ> fd\\<^sub>\\<R> R = bb\\<^sub>\\<R> (R\\<inverse>) \\<circ> \\<partial>\"", "lemma ifd_ibb_dual: \"Sup_pres \\<phi> \\<Longrightarrow> fd\\<^sup>-\\<^sub>\\<R> \\<phi> = ((\\<smile>) \\<circ> bb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma rbb_rfd_dual: \"\\<partial> \\<circ> bb\\<^sub>\\<R> R = fd\\<^sub>\\<R> (R\\<inverse>) \\<circ> \\<partial>\"", "lemma irbb_irfd_dual: \"Inf_pres \\<phi> \\<Longrightarrow> bb\\<^sup>-\\<^sub>\\<R> \\<phi> = ((\\<smile>) \\<circ> fd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\"", "lemma ffd_iffd_galois: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<phi> = fd\\<^sub>\\<F> f) = (f = fd\\<^sup>-\\<^sub>\\<F> \\<phi>)\"", "lemma rfd_irfd_galois: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<phi> = fd\\<^sub>\\<R> R) = (R = fd\\<^sup>-\\<^sub>\\<R> \\<phi>)\"", "lemma fbb_ifbb_galois: \"Inf_pres \\<phi> \\<Longrightarrow> (\\<phi> = bb\\<^sub>\\<F> f) = (f = bb\\<^sup>-\\<^sub>\\<F> \\<phi>)\"", "lemma rbb_irbb_galois: \"Inf_pres \\<phi> \\<Longrightarrow> (\\<phi> = bb\\<^sub>\\<R> R) = (R = bb\\<^sup>-\\<^sub>\\<R> \\<phi>)\"", "lemma ffd_ffb_adj: \"fd\\<^sub>\\<F> f \\<stileturn> bb\\<^sub>\\<F> f\"", "lemma ffd_fbb_galois: \"(fd\\<^sub>\\<F> f X \\<subseteq> Y) = (X \\<subseteq> bb\\<^sub>\\<F> f Y)\"", "lemma rfd_rfb_adj: \"fd\\<^sub>\\<R> f \\<stileturn> bb\\<^sub>\\<R> f\"", "lemma rfd_rbb_galois: \"(fd\\<^sub>\\<R> R X \\<subseteq> Y) = (X \\<subseteq> bb\\<^sub>\\<R> R Y)\"", "lemma ffd_fbd_conjugation: \"(fd\\<^sub>\\<F> f X \\<inter> Y = {}) = (X \\<inter> bd\\<^sub>\\<F> f Y = {})\"", "lemma rfd_rbd_conjugation: \"((fd\\<^sub>\\<R> R X) \\<inter> Y = {}) = (X \\<inter> (bd\\<^sub>\\<R> R Y) = {})\"", "lemma ffb_fbb_conjugation: \"((fb\\<^sub>\\<F> f X) \\<union> Y = UNIV) = (X \\<union> (bb\\<^sub>\\<F> f Y) = UNIV)\"", "lemma rfb_rbb_conjugation: \"((fb\\<^sub>\\<R> R X) \\<union> Y = UNIV) = (X \\<union> (bb\\<^sub>\\<R> R Y) = UNIV)\""], "translations": [["", "lemma fbd_set: \"bd\\<^sub>\\<F> f X = {y. \\<exists>x. y \\<in> f x \\<and> x \\<in> X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<F> f X = {y. \\<exists>x. s2p (f x) y \\<and> s2p X x}", "by (force simp: klift_prop)"], ["", "lemma ifbd_set: \"bd\\<^sup>-\\<^sub>\\<F> \\<phi> x = {y. y \\<in> \\<phi> {x}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sup>-\\<^sub>\\<F> \\<phi> x = {y. s2p (\\<phi> (\\<eta> x)) y}", "by simp"], ["", "text \\<open>The two functors form a bijective pair.\\<close>"], ["", "lemma fbd_ifbd_inv2: \"Sup_pres \\<phi> \\<Longrightarrow> (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "assume h: \"Sup_pres \\<phi>\""], ["proof (state)\nthis:\n  Sup_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "have \"(bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = Sup \\<circ> \\<P> (\\<phi> \\<circ> \\<eta>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n    \\<mu> \\<circ> \\<P> (bd\\<^sup>-\\<^sub>\\<F> \\<phi>)", "unfolding klift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>f. \\<mu> \\<circ> \\<P> f) \\<circ> bd\\<^sup>-\\<^sub>\\<F>)\n     \\<phi> =\n    \\<mu> \\<circ> \\<P> (bd\\<^sup>-\\<^sub>\\<F> \\<phi>)", "by simp"], ["proof (state)\nthis:\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n  \\<mu> \\<circ> \\<P> (bd\\<^sup>-\\<^sub>\\<F> \\<phi>)\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "also"], ["proof (state)\nthis:\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n  \\<mu> \\<circ> \\<P> (bd\\<^sup>-\\<^sub>\\<F> \\<phi>)\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "have \"... = Sup \\<circ> \\<P> \\<phi> \\<circ> \\<P> \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> \\<circ> \\<P> (bd\\<^sup>-\\<^sub>\\<F> \\<phi>) =\n    \\<mu> \\<circ> \\<P> \\<phi> \\<circ> \\<P> \\<eta>", "by (simp add: comp_assoc P_func1)"], ["proof (state)\nthis:\n  \\<mu> \\<circ> \\<P> (bd\\<^sup>-\\<^sub>\\<F> \\<phi>) =\n  \\<mu> \\<circ> \\<P> \\<phi> \\<circ> \\<P> \\<eta>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "also"], ["proof (state)\nthis:\n  \\<mu> \\<circ> \\<P> (bd\\<^sup>-\\<^sub>\\<F> \\<phi>) =\n  \\<mu> \\<circ> \\<P> \\<phi> \\<circ> \\<P> \\<eta>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "have \"... = \\<phi> \\<circ> Sup \\<circ> \\<P> \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> \\<circ> \\<P> \\<phi> \\<circ> \\<P> \\<eta> =\n    \\<phi> \\<circ> \\<mu> \\<circ> \\<P> \\<eta>", "by (simp add: h)"], ["proof (state)\nthis:\n  \\<mu> \\<circ> \\<P> \\<phi> \\<circ> \\<P> \\<eta> =\n  \\<phi> \\<circ> \\<mu> \\<circ> \\<P> \\<eta>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "also"], ["proof (state)\nthis:\n  \\<mu> \\<circ> \\<P> \\<phi> \\<circ> \\<P> \\<eta> =\n  \\<phi> \\<circ> \\<mu> \\<circ> \\<P> \\<eta>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "have \"... = \\<phi> \\<circ> id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<circ> \\<mu> \\<circ> \\<P> \\<eta> = \\<phi> \\<circ> id", "by force"], ["proof (state)\nthis:\n  \\<phi> \\<circ> \\<mu> \\<circ> \\<P> \\<eta> = \\<phi> \\<circ> id\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "finally"], ["proof (chain)\npicking this:\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi> \\<circ> id", "show ?thesis"], ["proof (prove)\nusing this:\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi> \\<circ> id\n\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "by simp"], ["proof (state)\nthis:\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fbd_ifbd_inv2_inv: \"(bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi> \\<Longrightarrow> Sup_pres \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n    \\<phi> \\<Longrightarrow>\n    Sup_pres \\<phi>", "unfolding fun_eq_iff comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       bd\\<^sub>\\<F> (\\<lambda>x. \\<phi> (\\<eta> x)) x =\n       \\<phi> x \\<Longrightarrow>\n    \\<forall>x. \\<phi> (\\<mu> x) = \\<mu> (\\<P> \\<phi> x)", "by (metis (no_types, lifting) Inf.INF_cong UN_extend_simps(8) klift_prop)"], ["", "lemma fbd_ifbd_inv2_iff: \"((bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>) = (Sup_pres \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>) =\n    Sup_pres \\<phi>", "using fbd_ifbd_inv2 fbd_ifbd_inv2_inv"], ["proof (prove)\nusing this:\n  Sup_pres ?\\<phi> \\<Longrightarrow>\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) ?\\<phi> = ?\\<phi>\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) ?\\<phi> =\n  ?\\<phi> \\<Longrightarrow>\n  Sup_pres ?\\<phi>\n\ngoal (1 subgoal):\n 1. ((bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>) =\n    Sup_pres \\<phi>", "by force"], ["", "lemma fbd_inj: \"inj bd\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj bd\\<^sub>\\<F>", "by (meson inj_on_inverseI klift_eta_inv1)"], ["", "lemma fbd_inj_iff: \"(bd\\<^sub>\\<F> f = bd\\<^sub>\\<F> g) = (f = g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<F> f = bd\\<^sub>\\<F> g) = (f = g)", "by (meson injD fbd_inj)"], ["", "lemma ifbd_inj: \"Sup_pres \\<phi> \\<Longrightarrow> Sup_pres \\<psi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi> \\<Longrightarrow> \\<phi> = \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Sup_pres \\<phi>; Sup_pres \\<psi>;\n     bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi>\\<rbrakk>\n    \\<Longrightarrow> \\<phi> = \\<psi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Sup_pres \\<phi>; Sup_pres \\<psi>;\n     bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi>\\<rbrakk>\n    \\<Longrightarrow> \\<phi> = \\<psi>", "assume h1: \"Sup_pres \\<phi>\"\n  and h2: \"Sup_pres \\<psi>\" \n  and \"bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi>\""], ["proof (state)\nthis:\n  Sup_pres \\<phi>\n  Sup_pres \\<psi>\n  bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Sup_pres \\<phi>; Sup_pres \\<psi>;\n     bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi>\\<rbrakk>\n    \\<Longrightarrow> \\<phi> = \\<psi>", "hence \"(bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> = (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<psi>\""], ["proof (prove)\nusing this:\n  Sup_pres \\<phi>\n  Sup_pres \\<psi>\n  bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi>\n\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n    (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<psi>", "by simp"], ["proof (state)\nthis:\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<psi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Sup_pres \\<phi>; Sup_pres \\<psi>;\n     bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi>\\<rbrakk>\n    \\<Longrightarrow> \\<phi> = \\<psi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<psi>\n\ngoal (1 subgoal):\n 1. \\<phi> = \\<psi>", "by (metis h1 h2 fbd_ifbd_inv2)"], ["proof (state)\nthis:\n  \\<phi> = \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ifbd_inj_iff: \"Sup_pres \\<phi> \\<Longrightarrow> Sup_pres \\<psi> \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<F> \\<phi> = bd\\<^sup>-\\<^sub>\\<F> \\<psi>) = (\\<phi> = \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Sup_pres \\<phi>; Sup_pres \\<psi>\\<rbrakk>\n    \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n                       bd\\<^sup>-\\<^sub>\\<F> \\<psi>) =\n                      (\\<phi> = \\<psi>)", "using ifbd_inj"], ["proof (prove)\nusing this:\n  \\<lbrakk>Sup_pres ?\\<phi>; Sup_pres ?\\<psi>;\n   bd\\<^sup>-\\<^sub>\\<F> ?\\<phi> = bd\\<^sup>-\\<^sub>\\<F> ?\\<psi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<phi> = ?\\<psi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Sup_pres \\<phi>; Sup_pres \\<psi>\\<rbrakk>\n    \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n                       bd\\<^sup>-\\<^sub>\\<F> \\<psi>) =\n                      (\\<phi> = \\<psi>)", "by force"], ["", "lemma fbd_ifbd_galois: \"Sup_pres \\<phi> \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = (bd\\<^sub>\\<F> f = \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = (bd\\<^sub>\\<F> f = \\<phi>)", "using fbd_ifbd_inv2"], ["proof (prove)\nusing this:\n  Sup_pres ?\\<phi> \\<Longrightarrow>\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) ?\\<phi> = ?\\<phi>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = (bd\\<^sub>\\<F> f = \\<phi>)", "by force"], ["", "lemma fbd_surj: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<exists>f. bd\\<^sub>\\<F> f = \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow> \\<exists>f. bd\\<^sub>\\<F> f = \\<phi>", "using fbd_ifbd_inv2"], ["proof (prove)\nusing this:\n  Sup_pres ?\\<phi> \\<Longrightarrow>\n  (bd\\<^sub>\\<F> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) ?\\<phi> = ?\\<phi>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow> \\<exists>f. bd\\<^sub>\\<F> f = \\<phi>", "by auto"], ["", "lemma ifbd_surj: \"surj bd\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres (\\<P> bd\\<^sup>-\\<^sub>\\<F>)", "unfolding surj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y. \\<exists>x. y = bd\\<^sup>-\\<^sub>\\<F> x", "by (metis klift_eta_inv1)"], ["", "text \\<open>In addition they preserve the Sup-quantale structure of the powerset algebra. This means that\nmorphisms preserve compositions, units and Sups, but not Infs, hence also bottom but not top.\\<close>"], ["", "lemma fbd_comp_pres: \"bd\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) = bd\\<^sub>\\<F> g \\<circ> bd\\<^sub>\\<F> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    bd\\<^sub>\\<F> g \\<circ> bd\\<^sub>\\<F> f", "unfolding kcomp_klift klift_prop1"], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<F> g \\<circ> bd\\<^sub>\\<F> f =\n    bd\\<^sub>\\<F> g \\<circ> bd\\<^sub>\\<F> f", "by simp"], ["", "lemma fbd_Sup_pres: \"Sup_pres bd\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres bd\\<^sub>\\<F>", "by (force simp: fun_eq_iff klift_def)"], ["", "lemma fbd_sup_pres: \"sup_pres bd\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_pres bd\\<^sub>\\<F>", "using Sup_sup_pres fbd_Sup_pres"], ["proof (prove)\nusing this:\n  Sup_pres ?f \\<Longrightarrow> sup_pres ?f\n  Sup_pres bd\\<^sub>\\<F>\n\ngoal (1 subgoal):\n 1. sup_pres bd\\<^sub>\\<F>", "by blast"], ["", "lemma fbd_Disj: \"Sup_pres (bd\\<^sub>\\<F> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres (bd\\<^sub>\\<F> f)", "by (simp add: fbd_ifbd_inv2_inv)"], ["", "lemma fbd_disj: \"sup_pres (bd\\<^sub>\\<F> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_pres (bd\\<^sub>\\<F> f)", "by (simp add: klift_prop)"], ["", "lemma fbd_bot_pres: \"bot_pres bd\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot_pres bd\\<^sub>\\<F>", "unfolding klift_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> \\<circ> \\<P> \\<bottom> = \\<bottom>", "by fastforce"], ["", "lemma fbd_zero_pres2 [simp]: \"bd\\<^sub>\\<F> f {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot_pres (bd\\<^sub>\\<F> f)", "by (simp add: klift_prop)"], ["", "lemma fbd_iso: \"X \\<subseteq> Y \\<longrightarrow> bd\\<^sub>\\<F> f X \\<subseteq> bd\\<^sub>\\<F> f Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> Y \\<longrightarrow>\n    bd\\<^sub>\\<F> f X \\<subseteq> bd\\<^sub>\\<F> f Y", "by (metis fbd_disj le_iff_sup)"], ["", "text \\<open>The following counterexamples show that Infs are not preserved.\\<close>"], ["", "lemma \"top_pres bd\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres bd\\<^sub>\\<F>", "(*nitpick*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres bd\\<^sub>\\<F>", "oops"], ["", "lemma \"inf_pres bd\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_pres bd\\<^sub>\\<F>", "(*nitpick*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_pres bd\\<^sub>\\<F>", "oops"], ["", "text \\<open>Dual preservation statements hold for ifbd ... and even Inf-preservation.\\<close>"], ["", "lemma ifbd_comp_pres: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<circ> \\<psi>) = bd\\<^sup>-\\<^sub>\\<F> \\<psi> \\<circ>\\<^sub>K bd\\<^sup>-\\<^sub>\\<F> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<circ> \\<psi>) =\n    bd\\<^sup>-\\<^sub>\\<F> \\<psi> \\<circ>\\<^sub>K\n    bd\\<^sup>-\\<^sub>\\<F> \\<phi>", "by (smt fbd_ifbd_galois fun.map_comp kcomp_def klift_def)"], ["", "lemma ifbd_Sup_pres: \"Sup_pres bd\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres bd\\<^sup>-\\<^sub>\\<F>", "by (simp add: fun_eq_iff)"], ["", "lemma ifbd_sup_pres: \"sup_pres bd\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_pres bd\\<^sup>-\\<^sub>\\<F>", "by force"], ["", "lemma ifbd_Inf_pres: \"Inf_pres bd\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres bd\\<^sup>-\\<^sub>\\<F>", "by (simp add: fun_eq_iff)"], ["", "lemma ifbd_inf_pres: \"inf_pres bd\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_pres bd\\<^sup>-\\<^sub>\\<F>", "by force"], ["", "lemma ifbd_bot_pres: \"bot_pres bd\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot_pres bd\\<^sup>-\\<^sub>\\<F>", "by auto"], ["", "lemma ifbd_top_pres: \"top_pres bd\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres bd\\<^sup>-\\<^sub>\\<F>", "by auto"], ["", "text \\<open>Preservation of units by the Kleisli lifting has been proved in klift-prop3.\\<close>"], ["", "text \\<open>These results estabilish the isomorphism between state and predicate transformers given by backward diamonds.\nThe isomorphism preserves the Sup-quantale structure, but not Infs.\\<close>"], ["", "subsection \\<open>Backward Diamonds from Relations\\<close>"], ["", "text \\<open>Using the isomorphism between binary relations and Kleisli arrows (or state transformers), it is straightforward\nto define backward diamonds from relations, by composing isomorphisms. It follows that Sup-quantales of binary relations \n(under relational composition, the identity relation and Sups) are isomorphic to the Sup-quantales of predicate transformers.\nOnce again, Infs are not preserved.\\<close>"], ["", "definition rbd :: \"('a \\<times> 'b) set \\<Rightarrow> 'a set \\<Rightarrow> 'b set\"  (\"bd\\<^sub>\\<R>\") where\n  \"bd\\<^sub>\\<R> = bd\\<^sub>\\<F> \\<circ> \\<F>\""], ["", "definition irbd :: \"('a set \\<Rightarrow> 'b set) \\<Rightarrow> ('a \\<times> 'b) set\"  (\"bd\\<^sup>-\\<^sub>\\<R>\") where\n  \"bd\\<^sup>-\\<^sub>\\<R> = \\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<F>\""], ["", "lemma rbd_Im: \"bd\\<^sub>\\<R> = (``)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<R> = (``)", "unfolding rbd_def klift_def r2f_def fun_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n       ((\\<lambda>f. \\<mu> \\<circ> \\<P> f) \\<circ>\n        (\\<lambda>R. bd\\<^sup>-\\<^sub>\\<F> ((``) R)))\n        x xa =\n       x `` xa", "by force"], ["", "lemma rbd_set: \"bd\\<^sub>\\<R> R X = {y. \\<exists>x \\<in> X. (x,y) \\<in> R}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<R> R X = {y. \\<exists>x\\<in>X. s2p R (x, y)}", "by (force simp: rbd_Im Image_def)"], ["", "lemma irbd_set: \"bd\\<^sup>-\\<^sub>\\<R> \\<phi> = {(x,y). y \\<in> (\\<phi> \\<circ> \\<eta>) x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    {(x, y). s2p (bd\\<^sup>-\\<^sub>\\<F> \\<phi> x) y}", "by (simp add: irbd_def f2r_def o_def)"], ["", "lemma irbd_set_var: \"bd\\<^sup>-\\<^sub>\\<R> \\<phi> = {(x,y). y \\<in> \\<phi> {x}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sup>-\\<^sub>\\<R> \\<phi> = {(x, y). s2p (\\<phi> (\\<eta> x)) y}", "by (simp add: irbd_def f2r_def o_def)"], ["", "lemma rbd_irbd_inv1 [simp]: \"bd\\<^sup>-\\<^sub>\\<R> \\<circ> bd\\<^sub>\\<R> = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sup>-\\<^sub>\\<R> \\<circ> bd\\<^sub>\\<R> = id", "by (metis (no_types, lifting) comp_eq_dest_lhs eq_id_iff fbd_Disj fbd_ifbd_galois irbd_def r2f_f2r_galois rbd_def)"], ["", "lemma irbd_rbd_inv2: \"Sup_pres \\<phi> \\<Longrightarrow> (bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>", "by (metis comp_apply fbd_ifbd_galois irbd_def r2f_f2r_galois rbd_def)"], ["", "lemma irbd_rbd_inv2_inv: \"(bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi> \\<Longrightarrow> Sup_pres \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> =\n    \\<phi> \\<Longrightarrow>\n    Sup_pres \\<phi>", "by (simp add: rbd_def irbd_def, metis fbd_Disj)"], ["", "lemma irbd_rbd_inv2_iff: \"((bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>) = (Sup_pres \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>) =\n    Sup_pres \\<phi>", "using irbd_rbd_inv2 irbd_rbd_inv2_inv"], ["proof (prove)\nusing this:\n  Sup_pres ?\\<phi> \\<Longrightarrow>\n  (bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) ?\\<phi> = ?\\<phi>\n  (bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) ?\\<phi> =\n  ?\\<phi> \\<Longrightarrow>\n  Sup_pres ?\\<phi>\n\ngoal (1 subgoal):\n 1. ((bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>) =\n    Sup_pres \\<phi>", "by blast"], ["", "lemma rbd_inj: \"inj bd\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj bd\\<^sub>\\<R>", "by (simp add: fbd_inj inj_compose r2f_inj rbd_def)"], ["", "lemma rbd_translate: \"(bd\\<^sub>\\<R> R = bd\\<^sub>\\<R> S) = (R = S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<R> R = bd\\<^sub>\\<R> S) = (R = S)", "by (simp add: rbd_inj inj_eq)"], ["", "lemma irbd_inj: \"Sup_pres \\<phi> \\<Longrightarrow> Sup_pres \\<psi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<R> \\<phi> = bd\\<^sup>-\\<^sub>\\<R> \\<psi> \\<Longrightarrow> \\<phi> = \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Sup_pres \\<phi>; Sup_pres \\<psi>;\n     bd\\<^sup>-\\<^sub>\\<R> \\<phi> = bd\\<^sup>-\\<^sub>\\<R> \\<psi>\\<rbrakk>\n    \\<Longrightarrow> \\<phi> = \\<psi>", "by (metis rbd_Im comp_eq_dest_lhs irbd_rbd_inv2)"], ["", "lemma irbd_inj_iff: \"Sup_pres \\<phi> \\<Longrightarrow> Sup_pres \\<psi> \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<R> \\<phi> = bd\\<^sup>-\\<^sub>\\<R> \\<psi>) = (\\<phi> = \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Sup_pres \\<phi>; Sup_pres \\<psi>\\<rbrakk>\n    \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<R> \\<phi> =\n                       bd\\<^sup>-\\<^sub>\\<R> \\<psi>) =\n                      (\\<phi> = \\<psi>)", "using irbd_inj"], ["proof (prove)\nusing this:\n  \\<lbrakk>Sup_pres ?\\<phi>; Sup_pres ?\\<psi>;\n   bd\\<^sup>-\\<^sub>\\<R> ?\\<phi> = bd\\<^sup>-\\<^sub>\\<R> ?\\<psi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<phi> = ?\\<psi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Sup_pres \\<phi>; Sup_pres \\<psi>\\<rbrakk>\n    \\<Longrightarrow> (bd\\<^sup>-\\<^sub>\\<R> \\<phi> =\n                       bd\\<^sup>-\\<^sub>\\<R> \\<psi>) =\n                      (\\<phi> = \\<psi>)", "by force"], ["", "lemma rbd_surj: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<exists>R. bd\\<^sub>\\<R> R = \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow> \\<exists>R. bd\\<^sub>\\<R> R = \\<phi>", "using irbd_rbd_inv2"], ["proof (prove)\nusing this:\n  Sup_pres ?\\<phi> \\<Longrightarrow>\n  (bd\\<^sub>\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<R>) ?\\<phi> = ?\\<phi>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow> \\<exists>R. bd\\<^sub>\\<R> R = \\<phi>", "by force"], ["", "lemma irbd_surj: \"surj bd\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres (\\<P> bd\\<^sup>-\\<^sub>\\<R>)", "by (metis UNIV_I fun.set_map imageE rbd_irbd_inv1 surj_def surj_id)"], ["", "lemma rbd_irbd_galois: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<phi> = bd\\<^sub>\\<R> R) = (R = bd\\<^sup>-\\<^sub>\\<R> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = bd\\<^sub>\\<R> R) = (R = bd\\<^sup>-\\<^sub>\\<R> \\<phi>)", "by (smt comp_apply fbd_ifbd_galois irbd_def r2f_f2r_galois rbd_def)"], ["", "lemma rbd_comp_pres: \"bd\\<^sub>\\<R> (R ; S) = bd\\<^sub>\\<R> S \\<circ> bd\\<^sub>\\<R> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<R> (R ; S) = bd\\<^sub>\\<R> S \\<circ> bd\\<^sub>\\<R> R", "by (simp add: rbd_def r2f_comp_pres fbd_comp_pres)"], ["", "lemma rbd_Id_pres: \"bd\\<^sub>\\<R> Id = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<R> Id = id", "unfolding rbd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<F> \\<circ> \\<F>) Id = id", "by simp"], ["", "lemma rbd_Un_pres: \"Sup_pres bd\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres bd\\<^sub>\\<R>", "by (simp add: rbd_def Sup_pres_comp fbd_Sup_pres r2f_Sup_pres)"], ["", "lemma rbd_un_pres: \"sup_pres bd\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_pres bd\\<^sub>\\<R>", "by (simp add: rbd_def fbd_sup_pres r2f_sup_pres)"], ["", "lemma \"inf_pres bd\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_pres bd\\<^sub>\\<R>", "(*nitpick*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_pres bd\\<^sub>\\<R>", "oops"], ["", "lemma rbd_disj: \"Sup_pres (bd\\<^sub>\\<R> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres (bd\\<^sub>\\<R> R)", "by (simp add: rbd_def fbd_Disj)"], ["", "lemma rbd_disj2: \"sup_pres (bd\\<^sub>\\<R> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_pres (bd\\<^sub>\\<R> R)", "by (simp add: Image_Un rbd_Im)"], ["", "lemma rbd_bot_pres: \"bot_pres bd\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot_pres bd\\<^sub>\\<R>", "by (simp add: fbd_bot_pres r2f_bot_pres rbd_def)"], ["", "lemma rbd_zero_pres2 [simp]: \"bd\\<^sub>\\<R> R {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot_pres (bd\\<^sub>\\<R> R)", "by (simp add: rbd_Im)"], ["", "lemma rbd_univ: \"bd\\<^sub>\\<R> R UNIV = Range R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<R> R UNIV = Range R", "unfolding rbd_def fun_eq_iff klift_def r2f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>f. \\<mu> \\<circ> \\<P> f) \\<circ>\n     (\\<lambda>R. bd\\<^sup>-\\<^sub>\\<F> ((``) R)))\n     R UNIV =\n    Range R", "by force"], ["", "lemma rbd_iso: \"X \\<subseteq> Y \\<Longrightarrow> bd\\<^sub>\\<R> R X \\<subseteq> bd\\<^sub>\\<R> R Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> Y \\<Longrightarrow>\n    bd\\<^sub>\\<R> R X \\<subseteq> bd\\<^sub>\\<R> R Y", "by (metis le_iff_sup rbd_disj2)"], ["", "lemma irbd_comp_pres: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<R> (\\<phi> \\<circ> \\<psi>) = bd\\<^sup>-\\<^sub>\\<R> \\<psi> ; bd\\<^sup>-\\<^sub>\\<R> \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<R> (\\<phi> \\<circ> \\<psi>) =\n    bd\\<^sup>-\\<^sub>\\<R> \\<psi> ; bd\\<^sup>-\\<^sub>\\<R> \\<phi>", "by (simp add: ifbd_comp_pres f2r_kcomp_pres irbd_def)"], ["", "lemma irbd_id_pres [simp]: \"bd\\<^sup>-\\<^sub>\\<R> id = Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sup>-\\<^sub>\\<R> id = Id", "unfolding irbd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<R> \\<circ> bd\\<^sup>-\\<^sub>\\<F>) id = Id", "by simp"], ["", "lemma irbd_Sup_pres: \"Sup_pres bd\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres bd\\<^sup>-\\<^sub>\\<R>", "by (simp add: irbd_def Sup_pres_comp ifbd_Sup_pres f2r_Sup_pres)"], ["", "lemma irbd_sup_pres: \"sup_pres bd\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_pres bd\\<^sup>-\\<^sub>\\<R>", "by (simp add: irbd_def ifbd_sup_pres f2r_sup_pres)"], ["", "lemma irbd_Inf_pres: \"Inf_pres bd\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres bd\\<^sup>-\\<^sub>\\<R>", "by (auto simp: fun_eq_iff irbd_def f2r_def)"], ["", "lemma irbd_inf_pres: \"inf_pres bd\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_pres bd\\<^sup>-\\<^sub>\\<R>", "by (auto simp: fun_eq_iff irbd_def f2r_def)"], ["", "lemma irbd_bot_pres: \"bot_pres bd\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot_pres bd\\<^sup>-\\<^sub>\\<R>", "by (metis comp_def ifbd_bot_pres f2r_bot_pres irbd_def)"], ["", "text \\<open>This shows that relations are isomorphic to disjunctive forward predicate transformers. In many cases Isabelle picks up\nthe composition of morphisms in proofs.\\<close>"], ["", "subsection \\<open>Forward Boxes on Kleisli Arrows\\<close>"], ["", "text \\<open>Forward box operators correspond to weakest liberal preconditions in program semantics. Here, \nKleisli arrows are mapped to the opposite of the Eilenberg-Moore category, that is, Inf-lattices. \nIt follows that the Inf-quantale structure is preserved. Modelling opposition is based on the fact \nthat Kleisli arrows can be swapped by going through relations.\\<close>"], ["", "definition ffb :: \"('a \\<Rightarrow> 'b set) \\<Rightarrow> 'b set \\<Rightarrow> 'a set\" (\"fb\\<^sub>\\<F>\") where\n  \"fb\\<^sub>\\<F> = \\<partial>\\<^sub>F \\<circ> bd\\<^sub>\\<F> \\<circ> op\\<^sub>K\""], ["", "text \\<open>Here, $\\partial_F$ is map-dual, which amounts to De Morgan duality. Hence the forward box operator is\nobtained from the backward diamond by taking the opposite Kleisli arrow, applying the backward diamond, and then De Morgan\nduality.\\<close>"], ["", "lemma ffb_prop: \"fb\\<^sub>\\<F> f = \\<partial> \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> f =\n    \\<partial> \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>", "by (simp add: ffb_def map_dual_def)"], ["", "lemma ffb_prop_var: \"fb\\<^sub>\\<F> f = uminus \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> f =\n    uminus \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> uminus", "by (simp add: dual_set_def ffb_prop)"], ["", "lemma ffb_fbd_dual: \"\\<partial> \\<circ> fb\\<^sub>\\<F> f = bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> fb\\<^sub>\\<F> f =\n    bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>", "by (simp add: ffb_prop o_assoc)"], ["", "text \\<open>I give a set-theoretic definition of iffb, because the algebraic one below depends on Inf-preservation.\\<close>"], ["", "definition iffb :: \"('b set \\<Rightarrow> 'a set) \\<Rightarrow> 'a \\<Rightarrow> 'b set\" (\"fb\\<^sup>-\\<^sub>\\<F>\") where\n  \"fb\\<^sup>-\\<^sub>\\<F> \\<phi> = (\\<lambda>x. \\<Inter>{X. x \\<in> \\<phi> X})\""], ["", "lemma ffb_set: \"fb\\<^sub>\\<F> f = (\\<lambda>Y. {x. f x \\<subseteq> Y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> f = (\\<lambda>Y. {x. f x \\<subseteq> Y})", "by (force simp: fun_eq_iff ffb_prop_var kop_def klift_def f2r_def r2f_def)"], ["", "text \\<open>Forward boxes and backward diamonds are adjoints.\\<close>"], ["", "lemma ffb_fbd_galois: \"(bd\\<^sub>\\<F> f) \\<stileturn> (fb\\<^sub>\\<F> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<F> f \\<stileturn> fb\\<^sub>\\<F> f", "unfolding adj_def ffb_set klift_prop"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       (\\<mu> (\\<P> f x) \\<subseteq> y) =\n       (x \\<subseteq> {x. f x \\<subseteq> y})", "by blast"], ["", "lemma iffb_inv1: \"fb\\<^sup>-\\<^sub>\\<F> \\<circ> fb\\<^sub>\\<F> = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> \\<circ> fb\\<^sub>\\<F> = id", "unfolding fun_eq_iff ffb_set iffb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n       ((\\<lambda>\\<phi> x. \\<Inter> {X. s2p (\\<phi> X) x}) \\<circ>\n        (\\<lambda>f Y. {x. f x \\<subseteq> Y}))\n        x xa =\n       id x xa", "by force"], ["", "lemma iffb_inv2_aux: \"Inf_pres \\<phi> \\<Longrightarrow> \\<Sqinter>{X. x \\<in> \\<phi> X} \\<subseteq> Y \\<Longrightarrow> x \\<in> \\<phi> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>;\n     \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y\\<rbrakk>\n    \\<Longrightarrow> s2p (\\<phi> Y) x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>;\n     \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y\\<rbrakk>\n    \\<Longrightarrow> s2p (\\<phi> Y) x", "assume \"Inf_pres \\<phi>\"\n    and h1: \"\\<Sqinter>{X. x \\<in> \\<phi> X} \\<subseteq> Y\""], ["proof (state)\nthis:\n  Inf_pres \\<phi>\n  \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>;\n     \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y\\<rbrakk>\n    \\<Longrightarrow> s2p (\\<phi> Y) x", "hence h2: \"\\<forall>X. \\<phi> (\\<Sqinter>X) = (\\<Inter>x \\<in> X. \\<phi> x)\""], ["proof (prove)\nusing this:\n  Inf_pres \\<phi>\n  \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. \\<forall>X. \\<phi> (\\<Inter> X) = \\<Inter> (\\<P> \\<phi> X)", "by (metis comp_eq_dest)"], ["proof (state)\nthis:\n  \\<forall>X. \\<phi> (\\<Inter> X) = \\<Inter> (\\<P> \\<phi> X)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>;\n     \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y\\<rbrakk>\n    \\<Longrightarrow> s2p (\\<phi> Y) x", "hence \"\\<phi> (\\<Sqinter>{X. x \\<in> \\<phi> X}) \\<subseteq> \\<phi> Y\""], ["proof (prove)\nusing this:\n  \\<forall>X. \\<phi> (\\<Inter> X) = \\<Inter> (\\<P> \\<phi> X)\n\ngoal (1 subgoal):\n 1. \\<phi> (\\<Inter> {X. s2p (\\<phi> X) x}) \\<subseteq> \\<phi> Y", "by (metis h1 INF_lower2 cInf_eq_minimum mem_Collect_eq order_refl)"], ["proof (state)\nthis:\n  \\<phi> (\\<Inter> {X. s2p (\\<phi> X) x}) \\<subseteq> \\<phi> Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>;\n     \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y\\<rbrakk>\n    \\<Longrightarrow> s2p (\\<phi> Y) x", "hence \"(\\<Sqinter>{\\<phi> X |X. x \\<in> \\<phi> X}) \\<subseteq> \\<phi> Y\""], ["proof (prove)\nusing this:\n  \\<phi> (\\<Inter> {X. s2p (\\<phi> X) x}) \\<subseteq> \\<phi> Y\n\ngoal (1 subgoal):\n 1. \\<Inter> {\\<phi> X |X. s2p (\\<phi> X) x} \\<subseteq> \\<phi> Y", "by (metis h2 setcompr_eq_image)"], ["proof (state)\nthis:\n  \\<Inter> {\\<phi> X |X. s2p (\\<phi> X) x} \\<subseteq> \\<phi> Y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>;\n     \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y\\<rbrakk>\n    \\<Longrightarrow> s2p (\\<phi> Y) x", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Inter> {\\<phi> X |X. s2p (\\<phi> X) x} \\<subseteq> \\<phi> Y\n\ngoal (1 subgoal):\n 1. s2p (\\<phi> Y) x", "by (force simp add: subset_iff)"], ["proof (state)\nthis:\n  s2p (\\<phi> Y) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iffb_inv2: \"Inf_pres \\<phi> \\<Longrightarrow> (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "assume h: \"Inf_pres \\<phi>\""], ["proof (state)\nthis:\n  Inf_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "{"], ["proof (state)\nthis:\n  Inf_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "fix Y"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "have \"(fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y = {x. \\<Sqinter>{X. x \\<in> \\<phi> X} \\<subseteq> Y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y =\n    {x. \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y}", "by (simp add: ffb_set iffb_def)"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y =\n  {x. \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y}\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "hence \"\\<And>x. x \\<in> (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y \\<longleftrightarrow> \\<Sqinter>{X. x \\<in> \\<phi> X} \\<subseteq> Y\""], ["proof (prove)\nusing this:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y =\n  {x. \\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       s2p ((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y) x =\n       (\\<Inter> {X. s2p (\\<phi> X) x} \\<subseteq> Y)", "by auto"], ["proof (state)\nthis:\n  s2p ((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y) ?x =\n  (\\<Inter> {X. s2p (\\<phi> X) ?x} \\<subseteq> Y)\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "hence \"\\<And>x. x \\<in> (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y \\<longleftrightarrow> x \\<in> \\<phi> Y\""], ["proof (prove)\nusing this:\n  s2p ((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y) ?x =\n  (\\<Inter> {X. s2p (\\<phi> X) ?x} \\<subseteq> Y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       s2p ((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y) x =\n       s2p (\\<phi> Y) x", "by (auto simp: h iffb_inv2_aux)"], ["proof (state)\nthis:\n  s2p ((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y) ?x =\n  s2p (\\<phi> Y) ?x\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "hence  \"(fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y = \\<phi> Y\""], ["proof (prove)\nusing this:\n  s2p ((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y) ?x =\n  s2p (\\<phi> Y) ?x\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y = \\<phi> Y", "by (simp add: fun_eq_iff set_eq_iff)"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> Y = \\<phi> Y\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "}"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> ?Y2 = \\<phi> ?Y2\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> ?Y2 = \\<phi> ?Y2\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>", "unfolding fun_eq_iff"], ["proof (prove)\nusing this:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> ?Y2 = \\<phi> ?Y2\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> x = \\<phi> x", "by simp"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iffb_inv2_inv: \"(fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi> \\<Longrightarrow> Inf_pres \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n    \\<phi> \\<Longrightarrow>\n    Inf_pres \\<phi>", "by (auto simp: fun_eq_iff ffb_set iffb_def)"], ["", "lemma iffb_inv2_iff: \"((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>) = (Inf_pres \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>) =\n    Inf_pres \\<phi>", "using iffb_inv2 iffb_inv2_inv"], ["proof (prove)\nusing this:\n  Inf_pres ?\\<phi> \\<Longrightarrow>\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) ?\\<phi> = ?\\<phi>\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) ?\\<phi> =\n  ?\\<phi> \\<Longrightarrow>\n  Inf_pres ?\\<phi>\n\ngoal (1 subgoal):\n 1. ((fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> = \\<phi>) =\n    Inf_pres \\<phi>", "by blast"], ["", "lemma ffb_inj: \"inj fb\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj fb\\<^sub>\\<F>", "unfolding inj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y. fb\\<^sub>\\<F> x = fb\\<^sub>\\<F> y \\<longrightarrow> x = y", "by (metis iffb_inv1 pointfree_idE)"], ["", "lemma ffb_inj_iff: \"(fb\\<^sub>\\<F> f = fb\\<^sub>\\<F> g) = (f = g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f = fb\\<^sub>\\<F> g) = (f = g)", "by (simp add: ffb_inj inj_eq)"], ["", "lemma ffb_iffb_galois: \"Inf_pres \\<phi> \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = (fb\\<^sub>\\<F> f = \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = (fb\\<^sub>\\<F> f = \\<phi>)", "using ffb_inj_iff iffb_inv2"], ["proof (prove)\nusing this:\n  (fb\\<^sub>\\<F> ?f = fb\\<^sub>\\<F> ?g) = (?f = ?g)\n  Inf_pres ?\\<phi> \\<Longrightarrow>\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) ?\\<phi> = ?\\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = (fb\\<^sub>\\<F> f = \\<phi>)", "by force"], ["", "lemma iffb_inj: \"Inf_pres \\<phi> \\<Longrightarrow> Inf_pres \\<psi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<F> \\<phi> = fb\\<^sup>-\\<^sub>\\<F> \\<psi>  \\<Longrightarrow> \\<phi> = \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>; Inf_pres \\<psi>;\n     fb\\<^sup>-\\<^sub>\\<F> \\<phi> = fb\\<^sup>-\\<^sub>\\<F> \\<psi>\\<rbrakk>\n    \\<Longrightarrow> \\<phi> = \\<psi>", "by (metis ffb_iffb_galois)"], ["", "lemma iffb_inj_iff: \"Inf_pres \\<phi> \\<Longrightarrow> Inf_pres \\<psi> \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = fb\\<^sup>-\\<^sub>\\<F> \\<psi>) = (\\<phi> = \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>; Inf_pres \\<psi>\\<rbrakk>\n    \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n                       fb\\<^sup>-\\<^sub>\\<F> \\<psi>) =\n                      (\\<phi> = \\<psi>)", "using iffb_inj"], ["proof (prove)\nusing this:\n  \\<lbrakk>Inf_pres ?\\<phi>; Inf_pres ?\\<psi>;\n   fb\\<^sup>-\\<^sub>\\<F> ?\\<phi> = fb\\<^sup>-\\<^sub>\\<F> ?\\<psi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<phi> = ?\\<psi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>; Inf_pres \\<psi>\\<rbrakk>\n    \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n                       fb\\<^sup>-\\<^sub>\\<F> \\<psi>) =\n                      (\\<phi> = \\<psi>)", "by blast"], ["", "lemma ffb_surj: \"Inf_pres \\<phi>  \\<Longrightarrow> (\\<exists>f. fb\\<^sub>\\<F> f = \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow> \\<exists>f. fb\\<^sub>\\<F> f = \\<phi>", "using iffb_inv2"], ["proof (prove)\nusing this:\n  Inf_pres ?\\<phi> \\<Longrightarrow>\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) ?\\<phi> = ?\\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow> \\<exists>f. fb\\<^sub>\\<F> f = \\<phi>", "by auto"], ["", "lemma iffb_surj: \"surj fb\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres (\\<P> fb\\<^sup>-\\<^sub>\\<F>)", "using surj_def"], ["proof (prove)\nusing this:\n  top_pres (\\<P> ?f) = (\\<forall>y. \\<exists>x. y = ?f x)\n\ngoal (1 subgoal):\n 1. top_pres (\\<P> fb\\<^sup>-\\<^sub>\\<F>)", "by (metis comp_apply iffb_inv1 surj_id)"], ["", "text \\<open>This is now the explicit \"definition\" of iffb, for Inf-preserving transformers.\\<close>"], ["", "lemma iffb_ifbd_dual: \"Inf_pres \\<phi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<F> \\<phi> = (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "assume h: \"Inf_pres \\<phi>\""], ["proof (state)\nthis:\n  Inf_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "{"], ["proof (state)\nthis:\n  Inf_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "have \"(fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = ((\\<partial>\\<^sub>F \\<circ> bd\\<^sub>\\<F> \\<circ> op\\<^sub>K) f = \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) =\n    ((\\<partial>\\<^sub>F \\<circ> bd\\<^sub>\\<F> \\<circ> op\\<^sub>K) f =\n     \\<phi>)", "by (simp add: ffb_def ffb_iffb_galois h)"], ["proof (state)\nthis:\n  (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) =\n  ((\\<partial>\\<^sub>F \\<circ> bd\\<^sub>\\<F> \\<circ> op\\<^sub>K) f = \\<phi>)\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "also"], ["proof (state)\nthis:\n  (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) =\n  ((\\<partial>\\<^sub>F \\<circ> bd\\<^sub>\\<F> \\<circ> op\\<^sub>K) f = \\<phi>)\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "have \"... = (op\\<^sub>K f = (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<partial>\\<^sub>F \\<circ> bd\\<^sub>\\<F> \\<circ> op\\<^sub>K) f =\n     \\<phi>) =\n    (op\\<^sub>K f =\n     (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>)", "by (metis (mono_tags, lifting) comp_apply map_dual_dual ffb_def ffb_surj h klift_eta_inv1 map_dual_dual)"], ["proof (state)\nthis:\n  ((\\<partial>\\<^sub>F \\<circ> bd\\<^sub>\\<F> \\<circ> op\\<^sub>K) f =\n   \\<phi>) =\n  (op\\<^sub>K f = (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>)\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "finally"], ["proof (chain)\npicking this:\n  (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) =\n  (op\\<^sub>K f = (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>)", "have \"(fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) = (f = (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>)\""], ["proof (prove)\nusing this:\n  (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) =\n  (op\\<^sub>K f = (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>)\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) =\n    (f =\n     (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n      \\<phi>)", "using kop_galois"], ["proof (prove)\nusing this:\n  (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) =\n  (op\\<^sub>K f = (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>)\n  (op\\<^sub>K ?f = ?g) = (op\\<^sub>K ?g = ?f)\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) =\n    (f =\n     (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n      \\<phi>)", "by auto"], ["proof (state)\nthis:\n  (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = f) =\n  (f =\n   (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n    \\<phi>)\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "}"], ["proof (state)\nthis:\n  (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = ?f2) =\n  (?f2 =\n   (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n    \\<phi>)\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (fb\\<^sup>-\\<^sub>\\<F> \\<phi> = ?f2) =\n  (?f2 =\n   (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n    \\<phi>)\n\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "by blast"], ["proof (state)\nthis:\n  fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n  (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n   \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fbd_ffb_dual: \"\\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K = bd\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K =\n    bd\\<^sub>\\<F>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K =\n    bd\\<^sub>\\<F>", "have \"\\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K = \\<partial>\\<^sub>F \\<circ> \\<partial>\\<^sub>F \\<circ> bd\\<^sub>\\<F> \\<circ> (op\\<^sub>K \\<circ> op\\<^sub>K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K =\n    \\<partial>\\<^sub>F \\<circ> \\<partial>\\<^sub>F \\<circ>\n    bd\\<^sub>\\<F> \\<circ>\n    (op\\<^sub>K \\<circ> op\\<^sub>K)", "by (simp add: comp_def ffb_def)"], ["proof (state)\nthis:\n  \\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K =\n  \\<partial>\\<^sub>F \\<circ> \\<partial>\\<^sub>F \\<circ>\n  bd\\<^sub>\\<F> \\<circ>\n  (op\\<^sub>K \\<circ> op\\<^sub>K)\n\ngoal (1 subgoal):\n 1. \\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K =\n    bd\\<^sub>\\<F>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K =\n  \\<partial>\\<^sub>F \\<circ> \\<partial>\\<^sub>F \\<circ>\n  bd\\<^sub>\\<F> \\<circ>\n  (op\\<^sub>K \\<circ> op\\<^sub>K)\n\ngoal (1 subgoal):\n 1. \\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K =\n    bd\\<^sub>\\<F>", "by simp"], ["proof (state)\nthis:\n  \\<partial>\\<^sub>F \\<circ> fb\\<^sub>\\<F> \\<circ> op\\<^sub>K =\n  bd\\<^sub>\\<F>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ffbd_ffb_dual_var: \"\\<partial> \\<circ> bd\\<^sub>\\<F> f = fb\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> bd\\<^sub>\\<F> f =\n    fb\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>", "by (metis ffb_prop fun_dual1 kop_galois)"], ["", "lemma ifbd_iffb_dual: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<F> \\<phi> = (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "assume h: \"Sup_pres \\<phi>\""], ["proof (state)\nthis:\n  Sup_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "hence \"Inf_pres (\\<partial>\\<^sub>F \\<phi>)\""], ["proof (prove)\nusing this:\n  Sup_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres (\\<partial>\\<^sub>F \\<phi>)", "using Sup_pres_Inf_pres"], ["proof (prove)\nusing this:\n  Sup_pres \\<phi>\n  Sup_pres ?f = Inf_pres (\\<partial>\\<^sub>F ?f)\n\ngoal (1 subgoal):\n 1. Inf_pres (\\<partial>\\<^sub>F \\<phi>)", "by blast"], ["proof (state)\nthis:\n  Inf_pres (\\<partial>\\<^sub>F \\<phi>)\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "hence \"(op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi> = (op\\<^sub>K \\<circ> (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\nusing this:\n  Inf_pres (\\<partial>\\<^sub>F \\<phi>)\n\ngoal (1 subgoal):\n 1. (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi> =\n    (op\\<^sub>K \\<circ>\n     (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ>\n      \\<partial>\\<^sub>F) \\<circ>\n     \\<partial>\\<^sub>F)\n     \\<phi>", "by (simp add: iffb_ifbd_dual)"], ["proof (state)\nthis:\n  (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n   \\<phi> =\n  (op\\<^sub>K \\<circ>\n   (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ>\n    \\<partial>\\<^sub>F) \\<circ>\n   \\<partial>\\<^sub>F)\n   \\<phi>\n\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n   \\<phi> =\n  (op\\<^sub>K \\<circ>\n   (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F> \\<circ>\n    \\<partial>\\<^sub>F) \\<circ>\n   \\<partial>\\<^sub>F)\n   \\<phi>\n\ngoal (1 subgoal):\n 1. bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "by (metis comp_def kop_galois map_dual_dual)"], ["proof (state)\nthis:\n  bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n  (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n   \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ffb_kcomp_pres: \"fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) = fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "have \"fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) = \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K (f \\<circ>\\<^sub>K g)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K (f \\<circ>\\<^sub>K g)))", "by (simp add: ffb_def)"], ["proof (state)\nthis:\n  fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K (f \\<circ>\\<^sub>K g)))\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "also"], ["proof (state)\nthis:\n  fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K (f \\<circ>\\<^sub>K g)))\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "have \"... = \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K g \\<circ>\\<^sub>K op\\<^sub>K f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K (f \\<circ>\\<^sub>K g))) =\n    \\<partial>\\<^sub>F\n     (bd\\<^sub>\\<F> (op\\<^sub>K g \\<circ>\\<^sub>K op\\<^sub>K f))", "by (simp add: kop_contrav)"], ["proof (state)\nthis:\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K (f \\<circ>\\<^sub>K g))) =\n  \\<partial>\\<^sub>F\n   (bd\\<^sub>\\<F> (op\\<^sub>K g \\<circ>\\<^sub>K op\\<^sub>K f))\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "also"], ["proof (state)\nthis:\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K (f \\<circ>\\<^sub>K g))) =\n  \\<partial>\\<^sub>F\n   (bd\\<^sub>\\<F> (op\\<^sub>K g \\<circ>\\<^sub>K op\\<^sub>K f))\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "have \"... = \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial>\\<^sub>F\n     (bd\\<^sub>\\<F> (op\\<^sub>K g \\<circ>\\<^sub>K op\\<^sub>K f)) =\n    \\<partial>\\<^sub>F\n     (bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K g))", "by (simp add: fbd_comp_pres)"], ["proof (state)\nthis:\n  \\<partial>\\<^sub>F\n   (bd\\<^sub>\\<F> (op\\<^sub>K g \\<circ>\\<^sub>K op\\<^sub>K f)) =\n  \\<partial>\\<^sub>F\n   (bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K g))\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "also"], ["proof (state)\nthis:\n  \\<partial>\\<^sub>F\n   (bd\\<^sub>\\<F> (op\\<^sub>K g \\<circ>\\<^sub>K op\\<^sub>K f)) =\n  \\<partial>\\<^sub>F\n   (bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K g))\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "have \"... = \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K f)) \\<circ> \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial>\\<^sub>F\n     (bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K g)) =\n    \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K f)) \\<circ>\n    \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K g))", "by (simp add: map_dual_func1)"], ["proof (state)\nthis:\n  \\<partial>\\<^sub>F\n   (bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K g)) =\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K f)) \\<circ>\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K g))\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "finally"], ["proof (chain)\npicking this:\n  fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K f)) \\<circ>\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K g))", "show ?thesis"], ["proof (prove)\nusing this:\n  fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K f)) \\<circ>\n  \\<partial>\\<^sub>F (bd\\<^sub>\\<F> (op\\<^sub>K g))\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n    fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g", "by (simp add: ffb_def)"], ["proof (state)\nthis:\n  fb\\<^sub>\\<F> (f \\<circ>\\<^sub>K g) =\n  fb\\<^sub>\\<F> f \\<circ> fb\\<^sub>\\<F> g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ffb_eta_pres: \"fb\\<^sub>\\<F> \\<eta> = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> \\<eta> = id", "unfolding ffb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<partial>\\<^sub>F \\<circ> bd\\<^sub>\\<F> \\<circ> op\\<^sub>K) \\<eta> =\n    id", "by simp"], ["", "lemma ffb_Sup_dual: \"Sup_dual fb\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<F>", "unfolding ffb_prop_var comp_def fun_eq_iff klift_prop kop_def f2r_def r2f_def converse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n       - \\<mu>\n          (\\<P>\n            (\\<lambda>xa.\n                {(xa, y).\n                 (\\<lambda>xa xb.\n                     s2p {(xa, y). s2p ((\\<Squnion> x) xa) y}\n                      (xa, xb))\\<inverse>\\<inverse>\n                  xa y} ``\n                \\<eta> xa)\n            (- xa)) =\n       (\\<Sqinter>f\\<in>x.\n           (\\<lambda>x.\n               - \\<mu>\n                  (\\<P>\n                    (\\<lambda>x.\n                        {(x, y).\n                         (\\<lambda>x xa.\n                             s2p {(x, y). s2p (f x) y}\n                              (x, xa))\\<inverse>\\<inverse>\n                          x y} ``\n                        \\<eta> x)\n                    (- x))))\n        xa", "by fastforce"], ["", "lemma ffb_Sup_dual_var: \"fb\\<^sub>\\<F> (\\<Squnion>F) = (\\<Sqinter>f \\<in> F. fb\\<^sub>\\<F> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> (\\<Squnion> F) = \\<Sqinter> \\<P> fb\\<^sub>\\<F> F", "unfolding ffb_prop_var comp_def fun_eq_iff klift_prop kop_def f2r_def r2f_def converse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       - \\<mu>\n          (\\<P>\n            (\\<lambda>x.\n                {(x, y).\n                 (\\<lambda>x xa.\n                     s2p {(x, y). s2p ((\\<Squnion> F) x) y}\n                      (x, xa))\\<inverse>\\<inverse>\n                  x y} ``\n                \\<eta> x)\n            (- x)) =\n       (\\<Sqinter>f\\<in>F.\n           (\\<lambda>x.\n               - \\<mu>\n                  (\\<P>\n                    (\\<lambda>x.\n                        {(x, y).\n                         (\\<lambda>x xa.\n                             s2p {(x, y). s2p (f x) y}\n                              (x, xa))\\<inverse>\\<inverse>\n                          x y} ``\n                        \\<eta> x)\n                    (- x))))\n        x", "by fastforce"], ["", "lemma ffb_sup_dual: \"sup_dual fb\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_dual fb\\<^sub>\\<F>", "using ffb_Sup_dual Sup_sup_dual"], ["proof (prove)\nusing this:\n  Sup_dual fb\\<^sub>\\<F>\n  Sup_dual ?f \\<Longrightarrow> sup_dual ?f\n\ngoal (1 subgoal):\n 1. sup_dual fb\\<^sub>\\<F>", "by force"], ["", "lemma ffb_zero_dual: \"fb\\<^sub>\\<F> \\<zeta> = (\\<lambda>X. UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> \\<zeta> = (\\<lambda>X. UNIV)", "unfolding ffb_prop_var kop_def klift_prop fun_eq_iff f2r_def r2f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (uminus \\<circ>\n        (\\<lambda>X.\n            \\<mu>\n             (\\<P>\n               (((\\<lambda>R. bd\\<^sup>-\\<^sub>\\<F> ((``) R)) \\<circ>\n                 \\<smile> \\<circ>\n                 (\\<lambda>f. {(x, y). s2p (f x) y}))\n                 \\<zeta>)\n               X)) \\<circ>\n        uminus)\n        x =\n       UNIV", "by simp"], ["", "lemma \"inf_dual ffb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_dual fb\\<^sub>\\<F>", "(*nitpick*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_dual fb\\<^sub>\\<F>", "oops"], ["", "text \\<open>Once again, only the Sup-quantale structure is preserved.\\<close>"], ["", "lemma iffb_comp_pres:\n  assumes \"Inf_pres \\<phi>\"\n  assumes \"Inf_pres \\<psi>\"\n  shows \"fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<circ> \\<psi>) = fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<circ>\\<^sub>K fb\\<^sup>-\\<^sub>\\<F> \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<circ> \\<psi>) =\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<circ>\\<^sub>K\n    fb\\<^sup>-\\<^sub>\\<F> \\<psi>", "by (metis assms Inf_pres_comp ffb_iffb_galois ffb_kcomp_pres)"], ["", "lemma iffb_id_pres: \"fb\\<^sup>-\\<^sub>\\<F> id = \\<eta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> id = \\<eta>", "unfolding iffb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Inter> {X. s2p (id X) x}) = \\<eta>", "by force"], ["", "lemma iffb_Inf_dual: \n  assumes \"\\<forall>\\<phi> \\<in> \\<Phi>. Inf_pres \\<phi>\"\n  shows \"(fb\\<^sup>-\\<^sub>\\<F> \\<circ> Inf) \\<Phi> = (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<F> \\<circ> Inf) \\<Phi> =\n    (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<F> \\<circ> Inf) \\<Phi> =\n    (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>", "have \"Inf_pres (\\<Sqinter>\\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres (\\<Sqinter> \\<Phi>)", "using Inf_pres_Inf assms"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>?F. Inf_pres f \\<Longrightarrow> Inf_pres (\\<Sqinter> ?F)\n  \\<forall>\\<phi>\\<in>\\<Phi>. Inf_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres (\\<Sqinter> \\<Phi>)", "by blast"], ["proof (state)\nthis:\n  Inf_pres (\\<Sqinter> \\<Phi>)\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<F> \\<circ> Inf) \\<Phi> =\n    (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>", "hence \"(fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) (\\<Sqinter>\\<Phi>) = \\<Sqinter>(\\<P> (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>)\""], ["proof (prove)\nusing this:\n  Inf_pres (\\<Sqinter> \\<Phi>)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) (\\<Sqinter> \\<Phi>) =\n    \\<Sqinter> \\<P> (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>", "by (metis (mono_tags, lifting) INF_cong INF_identity_eq assms iffb_inv2)"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) (\\<Sqinter> \\<Phi>) =\n  \\<Sqinter> \\<P> (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<F> \\<circ> Inf) \\<Phi> =\n    (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>", "hence \"(fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) (\\<Sqinter>\\<Phi>) = fb\\<^sub>\\<F> (\\<Squnion>(\\<P> fb\\<^sup>-\\<^sub>\\<F> \\<Phi>))\""], ["proof (prove)\nusing this:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) (\\<Sqinter> \\<Phi>) =\n  \\<Sqinter> \\<P> (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) (\\<Sqinter> \\<Phi>) =\n    fb\\<^sub>\\<F> (\\<Squnion> \\<P> fb\\<^sup>-\\<^sub>\\<F> \\<Phi>)", "by (simp add: Setcompr_eq_image ffb_Sup_dual_var image_comp)"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) (\\<Sqinter> \\<Phi>) =\n  fb\\<^sub>\\<F> (\\<Squnion> \\<P> fb\\<^sup>-\\<^sub>\\<F> \\<Phi>)\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<F> \\<circ> Inf) \\<Phi> =\n    (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) (\\<Sqinter> \\<Phi>) =\n  fb\\<^sub>\\<F> (\\<Squnion> \\<P> fb\\<^sup>-\\<^sub>\\<F> \\<Phi>)\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<F> \\<circ> Inf) \\<Phi> =\n    (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>", "by (simp add: ffb_inj_iff)"], ["proof (state)\nthis:\n  (fb\\<^sup>-\\<^sub>\\<F> \\<circ> Inf) \\<Phi> =\n  (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<F>) \\<Phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iffb_Sup_dual: \"Sup_dual fb\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sup>-\\<^sub>\\<F>", "by (auto simp: iffb_def fun_eq_iff)"], ["", "lemma iffb_inf_dual: \n  assumes \"Inf_pres \\<phi>\" \n  and \"Inf_pres \\<psi>\"\nshows \"fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<sqinter> \\<psi>) = fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<F> \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<sqinter> \\<psi>) =\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<F> \\<psi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<sqinter> \\<psi>) =\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<F> \\<psi>", "have f1: \"\\<phi> \\<sqinter> \\<psi> = fb\\<^sub>\\<F> (fb\\<^sup>-\\<^sub>\\<F> \\<phi>) \\<sqinter> fb\\<^sub>\\<F> (fb\\<^sup>-\\<^sub>\\<F> \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> \\<sqinter> \\<psi> =\n    fb\\<^sub>\\<F> (fb\\<^sup>-\\<^sub>\\<F> \\<phi>) \\<sqinter>\n    fb\\<^sub>\\<F> (fb\\<^sup>-\\<^sub>\\<F> \\<psi>)", "using assms iffb_inv2"], ["proof (prove)\nusing this:\n  Inf_pres \\<phi>\n  Inf_pres \\<psi>\n  Inf_pres ?\\<phi> \\<Longrightarrow>\n  (fb\\<^sub>\\<F> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) ?\\<phi> = ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<phi> \\<sqinter> \\<psi> =\n    fb\\<^sub>\\<F> (fb\\<^sup>-\\<^sub>\\<F> \\<phi>) \\<sqinter>\n    fb\\<^sub>\\<F> (fb\\<^sup>-\\<^sub>\\<F> \\<psi>)", "by fastforce"], ["proof (state)\nthis:\n  \\<phi> \\<sqinter> \\<psi> =\n  fb\\<^sub>\\<F> (fb\\<^sup>-\\<^sub>\\<F> \\<phi>) \\<sqinter>\n  fb\\<^sub>\\<F> (fb\\<^sup>-\\<^sub>\\<F> \\<psi>)\n\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<sqinter> \\<psi>) =\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<F> \\<psi>", "have \"\\<phi> \\<sqinter> \\<psi> \\<circ> Inter = Inter \\<circ> \\<P> (\\<phi> \\<sqinter> \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres (\\<phi> \\<sqinter> \\<psi>)", "using assms Inf_pres_inf"], ["proof (prove)\nusing this:\n  Inf_pres \\<phi>\n  Inf_pres \\<psi>\n  \\<lbrakk>Inf_pres ?f; Inf_pres ?g\\<rbrakk>\n  \\<Longrightarrow> Inf_pres (?f \\<sqinter> ?g)\n\ngoal (1 subgoal):\n 1. Inf_pres (\\<phi> \\<sqinter> \\<psi>)", "by blast"], ["proof (state)\nthis:\n  Inf_pres (\\<phi> \\<sqinter> \\<psi>)\n\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<sqinter> \\<psi>) =\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<F> \\<psi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  Inf_pres (\\<phi> \\<sqinter> \\<psi>)\n\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<sqinter> \\<psi>) =\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<F> \\<psi>", "by (simp add: f1 ffb_iffb_galois ffb_sup_dual)"], ["proof (state)\nthis:\n  fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<sqinter> \\<psi>) =\n  fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<F> \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  iffb_sup_dual: \"fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<squnion> \\<psi>) = fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<sqinter> fb\\<^sup>-\\<^sub>\\<F> \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> (\\<phi> \\<squnion> \\<psi>) =\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> \\<sqinter> fb\\<^sup>-\\<^sub>\\<F> \\<psi>", "unfolding iffb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Inter> {X. s2p ((\\<phi> \\<squnion> \\<psi>) X) x}) =\n    (\\<lambda>x. \\<Inter> {X. s2p (\\<phi> X) x}) \\<sqinter>\n    (\\<lambda>x. \\<Inter> {X. s2p (\\<psi> X) x})", "by fastforce"], ["", "lemma iffb_top_pres [simp]: \"fb\\<^sup>-\\<^sub>\\<F> \\<top> = \\<zeta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<F> \\<top> = \\<zeta>", "unfolding iffb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<Inter> {X. s2p (\\<top> X) x}) = \\<zeta>", "by simp"], ["", "text \\<open>This establishes the duality between state transformers and weakest liberal preconditions.\\<close>"], ["", "subsection \\<open>Forward Box Operators from Relations\\<close>"], ["", "text \\<open>Once again one can compose isomorphisms, linking weakest liberal preconditions with relational semantics.\nThe isomorphism obtained should by now be obvious.\\<close>"], ["", "definition rfb :: \"('a \\<times> 'b) set \\<Rightarrow> 'b set \\<Rightarrow> 'a set\"  (\"fb\\<^sub>\\<R>\") where\n  \"fb\\<^sub>\\<R> = fb\\<^sub>\\<F> \\<circ> \\<F>\""], ["", "definition irfb :: \"('b set \\<Rightarrow> 'a set) \\<Rightarrow> ('a \\<times> 'b) set\" (\"fb\\<^sup>-\\<^sub>\\<R>\") where\n  \"fb\\<^sup>-\\<^sub>\\<R> = \\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<F>\""], ["", "lemma rfb_rbd_dual: \"fb\\<^sub>\\<R> R = \\<partial>\\<^sub>F (bd\\<^sub>\\<R> (R\\<inverse>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> R = \\<partial>\\<^sub>F (bd\\<^sub>\\<R> (\\<smile> R))", "by (simp add: rfb_def rbd_def kop_def ffb_def, metis r2f_f2r_galois)"], ["", "lemma rbd_rfb_dual: \"bd\\<^sub>\\<R> R = \\<partial>\\<^sub>F (fb\\<^sub>\\<R> (R\\<inverse>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<R> R = \\<partial>\\<^sub>F (fb\\<^sub>\\<R> (\\<smile> R))", "by (simp add: rfb_def rbd_def kop_def ffb_def, metis converse_converse map_dual_dual r2f_f2r_galois)"], ["", "lemma irfb_irbd_dual: \"Inf_pres \\<phi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<R> \\<phi> = ((\\<smile>) \\<circ> bd\\<^sup>-\\<^sub>\\<R>  \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    (\\<smile> \\<circ> bd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "by (simp add: irfb_def irbd_def iffb_ifbd_dual kop_def r2f_f2r_galois)"], ["", "lemma irbd_irfb_dual: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<R> \\<phi> = ((\\<smile>) \\<circ> fb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    (\\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "by (simp add: irfb_def irbd_def ifbd_iffb_dual kop_def r2f_f2r_galois)"], ["", "lemma rfb_set: \"fb\\<^sub>\\<R> R Y = {x. \\<forall>y. (x,y) \\<in> R \\<longrightarrow> y \\<in> Y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> R Y =\n    {x. \\<forall>y. s2p R (x, y) \\<longrightarrow> s2p Y y}", "unfolding rfb_def ffb_prop_var comp_def klift_def f2r_def r2f_def kop_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<mu>\n       (\\<P>\n         (\\<lambda>x. \\<smile> {(x, y). s2p (R `` \\<eta> x) y} `` \\<eta> x)\n         (- Y)) =\n    {x. \\<forall>y. s2p R (x, y) \\<longrightarrow> s2p Y y}", "by force"], ["", "lemma rfb_rbd_galois: \"(bd\\<^sub>\\<R> R) \\<stileturn> (fb\\<^sub>\\<R> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<R> R \\<stileturn> fb\\<^sub>\\<R> R", "by (simp add: ffb_fbd_galois rbd_def rfb_def)"], ["", "lemma irfb_set: \"fb\\<^sup>-\\<^sub>\\<R> \\<phi> = {(x, y). \\<forall>Y. x \\<in> \\<phi> Y \\<longrightarrow> y \\<in> Y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    {(x, y). \\<forall>Y. s2p (\\<phi> Y) x \\<longrightarrow> s2p Y y}", "by (simp add: irfb_def iffb_def f2r_def)"], ["", "lemma irfb_inv1 [simp]: \"fb\\<^sup>-\\<^sub>\\<R> \\<circ> fb\\<^sub>\\<R> = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<R> \\<circ> fb\\<^sub>\\<R> = id", "by (simp add: fun_eq_iff rfb_def irfb_def iffb_inv1 pointfree_idE)"], ["", "lemma irfb_inv2: \"Inf_pres \\<phi> \\<Longrightarrow> (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<phi> = \\<phi>", "by (simp add: rfb_def irfb_def, metis ffb_iffb_galois r2f_f2r_galois)"], ["", "lemma rfb_inj: \"inj fb\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj fb\\<^sub>\\<R>", "by (simp add: rfb_def ffb_inj inj_compose r2f_inj)"], ["", "lemma rfb_inj_iff: \"(fb\\<^sub>\\<R> R = fb\\<^sub>\\<R> S) = (R = S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<R> R = fb\\<^sub>\\<R> S) = (R = S)", "by (simp add: rfb_inj inj_eq)"], ["", "lemma irfb_inj: \"Inf_pres \\<phi> \\<Longrightarrow> Inf_pres \\<psi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<R> \\<phi> = fb\\<^sup>-\\<^sub>\\<R> \\<psi> \\<Longrightarrow> \\<phi> = \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>; Inf_pres \\<psi>;\n     fb\\<^sup>-\\<^sub>\\<R> \\<phi> = fb\\<^sup>-\\<^sub>\\<R> \\<psi>\\<rbrakk>\n    \\<Longrightarrow> \\<phi> = \\<psi>", "unfolding irfb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>; Inf_pres \\<psi>;\n     (\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n     (\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<psi>\\<rbrakk>\n    \\<Longrightarrow> \\<phi> = \\<psi>", "using iffb_inj r2f_inj_iff"], ["proof (prove)\nusing this:\n  \\<lbrakk>Inf_pres ?\\<phi>; Inf_pres ?\\<psi>;\n   fb\\<^sup>-\\<^sub>\\<F> ?\\<phi> = fb\\<^sup>-\\<^sub>\\<F> ?\\<psi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<phi> = ?\\<psi>\n  (\\<R> ?f = \\<R> ?g) = (?f = ?g)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>; Inf_pres \\<psi>;\n     (\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n     (\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<psi>\\<rbrakk>\n    \\<Longrightarrow> \\<phi> = \\<psi>", "by fastforce"], ["", "lemma irfb_inf_iff: \"Inf_pres \\<phi> \\<Longrightarrow> Inf_pres \\<psi> \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<R> \\<phi> = fb\\<^sup>-\\<^sub>\\<R> \\<psi>) = (\\<phi> = \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>; Inf_pres \\<psi>\\<rbrakk>\n    \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<R> \\<phi> =\n                       fb\\<^sup>-\\<^sub>\\<R> \\<psi>) =\n                      (\\<phi> = \\<psi>)", "using irfb_inj"], ["proof (prove)\nusing this:\n  \\<lbrakk>Inf_pres ?\\<phi>; Inf_pres ?\\<psi>;\n   fb\\<^sup>-\\<^sub>\\<R> ?\\<phi> = fb\\<^sup>-\\<^sub>\\<R> ?\\<psi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<phi> = ?\\<psi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Inf_pres \\<phi>; Inf_pres \\<psi>\\<rbrakk>\n    \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<R> \\<phi> =\n                       fb\\<^sup>-\\<^sub>\\<R> \\<psi>) =\n                      (\\<phi> = \\<psi>)", "by auto"], ["", "lemma rfb_surj: \"Inf_pres \\<phi> \\<Longrightarrow> (\\<exists>R. fb\\<^sub>\\<R> R = \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow> \\<exists>R. fb\\<^sub>\\<R> R = \\<phi>", "using irfb_inv2"], ["proof (prove)\nusing this:\n  Inf_pres ?\\<phi> \\<Longrightarrow>\n  (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) ?\\<phi> = ?\\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow> \\<exists>R. fb\\<^sub>\\<R> R = \\<phi>", "by fastforce"], ["", "lemma irfb_surj: \"surj fb\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres (\\<P> fb\\<^sup>-\\<^sub>\\<R>)", "by (simp add: irfb_def comp_surj f2r_surj iffb_surj cong del: image_cong_simp)"], ["", "lemma rfb_irfb_galois: \"Inf_pres \\<phi> \\<Longrightarrow> (fb\\<^sup>-\\<^sub>\\<R> \\<phi> = R) = (fb\\<^sub>\\<R> R = \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (fb\\<^sup>-\\<^sub>\\<R> \\<phi> = R) = (fb\\<^sub>\\<R> R = \\<phi>)", "by (simp add: irfb_def rfb_def, metis ffb_iffb_galois r2f_f2r_galois)"], ["", "lemma rfb_comp_pres: \"fb\\<^sub>\\<R> (R ; S) = fb\\<^sub>\\<R> R \\<circ> fb\\<^sub>\\<R> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> (R ; S) = fb\\<^sub>\\<R> R \\<circ> fb\\<^sub>\\<R> S", "by (simp add: ffb_kcomp_pres r2f_comp_pres rfb_def)"], ["", "lemma rfb_Id_pres [simp]: \"fb\\<^sub>\\<R> Id = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> Id = id", "unfolding rfb_def ffb_prop"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>f.\n         \\<partial> \\<circ> bd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ>\n         \\<partial>) \\<circ>\n     \\<F>)\n     Id =\n    id", "by force"], ["", "lemma rfb_Sup_dual: \"Sup_dual fb\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "have \"fb\\<^sub>\\<R> \\<circ> \\<mu> = fb\\<^sub>\\<F> \\<circ> \\<F> \\<circ> Sup\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> \\<circ> \\<mu> = fb\\<^sub>\\<F> \\<circ> \\<F> \\<circ> \\<mu>", "by (simp add: rfb_def)"], ["proof (state)\nthis:\n  fb\\<^sub>\\<R> \\<circ> \\<mu> = fb\\<^sub>\\<F> \\<circ> \\<F> \\<circ> \\<mu>\n\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "also"], ["proof (state)\nthis:\n  fb\\<^sub>\\<R> \\<circ> \\<mu> = fb\\<^sub>\\<F> \\<circ> \\<F> \\<circ> \\<mu>\n\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "have \"... = fb\\<^sub>\\<F> \\<circ> Sup \\<circ> \\<P> \\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> \\<circ> \\<F> \\<circ> \\<mu> =\n    fb\\<^sub>\\<F> \\<circ> Sup \\<circ> \\<P> \\<F>", "by (metis fun.map_comp r2f_Sup_pres)"], ["proof (state)\nthis:\n  fb\\<^sub>\\<F> \\<circ> \\<F> \\<circ> \\<mu> =\n  fb\\<^sub>\\<F> \\<circ> Sup \\<circ> \\<P> \\<F>\n\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "also"], ["proof (state)\nthis:\n  fb\\<^sub>\\<F> \\<circ> \\<F> \\<circ> \\<mu> =\n  fb\\<^sub>\\<F> \\<circ> Sup \\<circ> \\<P> \\<F>\n\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "have \"... = Inf \\<circ> \\<P> fb\\<^sub>\\<F> \\<circ> \\<P> \\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> \\<circ> Sup \\<circ> \\<P> \\<F> =\n    Inf \\<circ> \\<P> fb\\<^sub>\\<F> \\<circ> \\<P> \\<F>", "by (simp add: ffb_Sup_dual)"], ["proof (state)\nthis:\n  fb\\<^sub>\\<F> \\<circ> Sup \\<circ> \\<P> \\<F> =\n  Inf \\<circ> \\<P> fb\\<^sub>\\<F> \\<circ> \\<P> \\<F>\n\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "also"], ["proof (state)\nthis:\n  fb\\<^sub>\\<F> \\<circ> Sup \\<circ> \\<P> \\<F> =\n  Inf \\<circ> \\<P> fb\\<^sub>\\<F> \\<circ> \\<P> \\<F>\n\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "have \"... = Inf \\<circ> \\<P> (fb\\<^sub>\\<F> \\<circ> \\<F>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf \\<circ> \\<P> fb\\<^sub>\\<F> \\<circ> \\<P> \\<F> =\n    Inf \\<circ> \\<P> (fb\\<^sub>\\<F> \\<circ> \\<F>)", "by (simp add: P_func1 comp_assoc)"], ["proof (state)\nthis:\n  Inf \\<circ> \\<P> fb\\<^sub>\\<F> \\<circ> \\<P> \\<F> =\n  Inf \\<circ> \\<P> (fb\\<^sub>\\<F> \\<circ> \\<F>)\n\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "finally"], ["proof (chain)\npicking this:\n  fb\\<^sub>\\<R> \\<circ> \\<mu> =\n  Inf \\<circ> \\<P> (fb\\<^sub>\\<F> \\<circ> \\<F>)", "show ?thesis"], ["proof (prove)\nusing this:\n  fb\\<^sub>\\<R> \\<circ> \\<mu> =\n  Inf \\<circ> \\<P> (fb\\<^sub>\\<F> \\<circ> \\<F>)\n\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sub>\\<R>", "by (simp add: rfb_def)"], ["proof (state)\nthis:\n  Sup_dual fb\\<^sub>\\<R>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rfb_Sup_dual_var: \"fb\\<^sub>\\<R> (\\<Squnion>\\<phi>) = \\<Sqinter>(\\<P> fb\\<^sub>\\<R>) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> (\\<mu> \\<phi>) = \\<Sqinter> \\<P> fb\\<^sub>\\<R> \\<phi>", "by (meson comp_eq_dest rfb_Sup_dual)"], ["", "lemma rfb_sup_dual: \"sup_dual fb\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_dual fb\\<^sub>\\<R>", "by (simp add: rfb_def ffb_sup_dual r2f_sup_pres)"], ["", "lemma \"inf_dual fb\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_dual fb\\<^sub>\\<R>", "(*nitpick*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_dual fb\\<^sub>\\<R>", "oops"], ["", "lemma rfb_Inf_pres: \"Inf_pres (fb\\<^sub>\\<R> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres (fb\\<^sub>\\<R> R)", "unfolding rfb_def ffb_prop_var comp_def fun_eq_iff klift_def kop_def f2r_def r2f_def converse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       - \\<mu>\n          (\\<P>\n            (\\<lambda>x.\n                {(x, y).\n                 (\\<lambda>x xa.\n                     s2p {(x, y). s2p (R `` \\<eta> x) y}\n                      (x, xa))\\<inverse>\\<inverse>\n                  x y} ``\n                \\<eta> x)\n            (- \\<Inter> x)) =\n       (\\<Inter>x\\<in>x.\n           - \\<mu>\n              (\\<P>\n                (\\<lambda>x.\n                    {(x, y).\n                     (\\<lambda>x xa.\n                         s2p {(x, y). s2p (R `` \\<eta> x) y}\n                          (x, xa))\\<inverse>\\<inverse>\n                      x y} ``\n                    \\<eta> x)\n                (- x)))", "by auto"], ["", "lemma rfb_inf_pres: \"inf_pres (fb\\<^sub>\\<R> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_pres (fb\\<^sub>\\<R> R)", "unfolding rfb_def ffb_prop_var comp_def fun_eq_iff klift_def kop_def f2r_def r2f_def converse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       - \\<mu>\n          (\\<P>\n            (\\<lambda>x.\n                {(x, y).\n                 (\\<lambda>x xa.\n                     s2p {(x, y). s2p (R `` \\<eta> x) y}\n                      (x, xa))\\<inverse>\\<inverse>\n                  x y} ``\n                \\<eta> x)\n            (- (x \\<inter> y))) =\n       - \\<mu>\n          (\\<P>\n            (\\<lambda>x.\n                {(x, y).\n                 (\\<lambda>x xa.\n                     s2p {(x, y). s2p (R `` \\<eta> x) y}\n                      (x, xa))\\<inverse>\\<inverse>\n                  x y} ``\n                \\<eta> x)\n            (- x)) \\<inter>\n       - \\<mu>\n          (\\<P>\n            (\\<lambda>x.\n                {(x, y).\n                 (\\<lambda>x xa.\n                     s2p {(x, y). s2p (R `` \\<eta> x) y}\n                      (x, xa))\\<inverse>\\<inverse>\n                  x y} ``\n                \\<eta> x)\n            (- y))", "by auto"], ["", "lemma rfb_zero_pres [simp]: \"fb\\<^sub>\\<R> {} X = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> {} X = UNIV", "unfolding rfb_def ffb_prop_var comp_def fun_eq_iff klift_def kop_def f2r_def r2f_def converse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<mu>\n       (\\<P>\n         (\\<lambda>x.\n             {(x, y).\n              (\\<lambda>x xa.\n                  s2p {(x, y). s2p ({} `` \\<eta> x) y}\n                   (x, xa))\\<inverse>\\<inverse>\n               x y} ``\n             \\<eta> x)\n         (- X)) =\n    UNIV", "by auto"], ["", "lemma rfb_zero_pres2 [simp]: \"fb\\<^sub>\\<R> R {} = - Domain R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> R {} = - Domain R", "unfolding rfb_def ffb_prop_var comp_def fun_eq_iff klift_def kop_def f2r_def r2f_def converse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<mu>\n       (\\<P>\n         (\\<lambda>x.\n             {(x, y).\n              (\\<lambda>x xa.\n                  s2p {(x, y). s2p (R `` \\<eta> x) y}\n                   (x, xa))\\<inverse>\\<inverse>\n               x y} ``\n             \\<eta> x)\n         (- {})) =\n    - Domain R", "by auto"], ["", "lemma rfb_univ [simp]: \"fb\\<^sub>\\<R> R UNIV = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres (fb\\<^sub>\\<R> R)", "unfolding rfb_def ffb_prop_var comp_def fun_eq_iff klift_def kop_def f2r_def r2f_def converse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<mu>\n       (\\<P>\n         (\\<lambda>x.\n             {(x, y).\n              (\\<lambda>x xa.\n                  s2p {(x, y). s2p (R `` \\<eta> x) y}\n                   (x, xa))\\<inverse>\\<inverse>\n               x y} ``\n             \\<eta> x)\n         (- UNIV)) =\n    UNIV", "by auto"], ["", "lemma rfb_iso: \"X \\<subseteq> Y \\<Longrightarrow> fb\\<^sub>\\<R> R X \\<subseteq> fb\\<^sub>\\<R> R Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> Y \\<Longrightarrow>\n    fb\\<^sub>\\<R> R X \\<subseteq> fb\\<^sub>\\<R> R Y", "unfolding rfb_def ffb_prop_var comp_def fun_eq_iff klift_def kop_def f2r_def r2f_def converse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> Y \\<Longrightarrow>\n    - \\<mu>\n       (\\<P>\n         (\\<lambda>x.\n             {(x, y).\n              (\\<lambda>x xa.\n                  s2p {(x, y). s2p (R `` \\<eta> x) y}\n                   (x, xa))\\<inverse>\\<inverse>\n               x y} ``\n             \\<eta> x)\n         (- X))\n    \\<subseteq> - \\<mu>\n                   (\\<P>\n                     (\\<lambda>x.\n                         {(x, y).\n                          (\\<lambda>x xa.\n                              s2p {(x, y). s2p (R `` \\<eta> x) y}\n                               (x, xa))\\<inverse>\\<inverse>\n                           x y} ``\n                         \\<eta> x)\n                     (- Y))", "by auto"], ["", "lemma irfb_comp_pres: \n  assumes \"Inf_pres \\<phi>\"\n  assumes \"Inf_pres \\<psi>\"\n  shows \"fb\\<^sup>-\\<^sub>\\<R> (\\<phi> \\<circ> \\<psi>) = fb\\<^sup>-\\<^sub>\\<R> \\<phi> ; fb\\<^sup>-\\<^sub>\\<R> \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<R> (\\<phi> \\<circ> \\<psi>) =\n    fb\\<^sup>-\\<^sub>\\<R> \\<phi> ; fb\\<^sup>-\\<^sub>\\<R> \\<psi>", "by (metis assms rfb_Inf_pres rfb_comp_pres rfb_irfb_galois)"], ["", "lemma irfb_id_pres [simp]: \"fb\\<^sup>-\\<^sub>\\<R> id = Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<R> id = Id", "by (simp add: rfb_irfb_galois)"], ["", "lemma irfb_Sup_dual: \"Sup_dual fb\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_dual fb\\<^sup>-\\<^sub>\\<R>", "by (auto simp: fun_eq_iff irfb_def iffb_def f2r_def)"], ["", "lemma irfb_Inf_dual: \n  assumes \"\\<forall>\\<phi> \\<in> \\<Phi>. Inf_pres \\<phi>\"\n  shows \"(fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> = (Sup \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "have \"Inf_pres (\\<Sqinter>\\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres (\\<Sqinter> \\<Phi>)", "using Inf_pres_Inf assms"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>?F. Inf_pres f \\<Longrightarrow> Inf_pres (\\<Sqinter> ?F)\n  \\<forall>\\<phi>\\<in>\\<Phi>. Inf_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres (\\<Sqinter> \\<Phi>)", "by blast"], ["proof (state)\nthis:\n  Inf_pres (\\<Sqinter> \\<Phi>)\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "hence  \"(fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter>\\<Phi>) = \\<Sqinter>(\\<P> (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>)\""], ["proof (prove)\nusing this:\n  Inf_pres (\\<Sqinter> \\<Phi>)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter> \\<Phi>) =\n    \\<Sqinter> \\<P> (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "by (smt INF_identity_eq Sup.SUP_cong assms irfb_inv2)"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter> \\<Phi>) =\n  \\<Sqinter> \\<P> (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "also"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter> \\<Phi>) =\n  \\<Sqinter> \\<P> (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "have \"... = \\<Sqinter>(\\<P> fb\\<^sub>\\<R> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> \\<P> (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi> =\n    \\<Sqinter> \\<P> fb\\<^sub>\\<R> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>)", "by (simp add: image_comp)"], ["proof (state)\nthis:\n  \\<Sqinter> \\<P> (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi> =\n  \\<Sqinter> \\<P> fb\\<^sub>\\<R> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>)\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "also"], ["proof (state)\nthis:\n  \\<Sqinter> \\<P> (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi> =\n  \\<Sqinter> \\<P> fb\\<^sub>\\<R> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>)\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "have \"... = fb\\<^sub>\\<R> (\\<Squnion>(\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> \\<P> fb\\<^sub>\\<R> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>) =\n    fb\\<^sub>\\<R> (\\<mu> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))", "by (simp add: rfb_Sup_dual_var)"], ["proof (state)\nthis:\n  \\<Sqinter> \\<P> fb\\<^sub>\\<R> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>) =\n  fb\\<^sub>\\<R> (\\<mu> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "finally"], ["proof (chain)\npicking this:\n  (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter> \\<Phi>) =\n  fb\\<^sub>\\<R> (\\<mu> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))", "have \"(fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter>\\<Phi>) = fb\\<^sub>\\<R> (\\<Squnion>(\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))\""], ["proof (prove)\nusing this:\n  (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter> \\<Phi>) =\n  fb\\<^sub>\\<R> (\\<mu> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter> \\<Phi>) =\n    fb\\<^sub>\\<R> (\\<mu> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))", "."], ["proof (state)\nthis:\n  (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter> \\<Phi>) =\n  fb\\<^sub>\\<R> (\\<mu> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (fb\\<^sub>\\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<R>) (\\<Sqinter> \\<Phi>) =\n  fb\\<^sub>\\<R> (\\<mu> (\\<P> fb\\<^sup>-\\<^sub>\\<R> \\<Phi>))\n\ngoal (1 subgoal):\n 1. (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n    (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>", "by (simp add: rfb_inj_iff)"], ["proof (state)\nthis:\n  (fb\\<^sup>-\\<^sub>\\<R> \\<circ> Inf) \\<Phi> =\n  (\\<mu> \\<circ> \\<P> fb\\<^sup>-\\<^sub>\\<R>) \\<Phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma irfb_sup_dual: \"sup_dual fb\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_dual fb\\<^sup>-\\<^sub>\\<R>", "by (force simp: fun_eq_iff irfb_def iffb_def f2r_def)"], ["", "lemma irfb_inf_dual: \n  assumes \"Inf_pres \\<phi>\" \n  and \"Inf_pres \\<psi>\"\n  shows \"fb\\<^sup>-\\<^sub>\\<R> (\\<phi> \\<sqinter> \\<psi>) = fb\\<^sup>-\\<^sub>\\<R> \\<phi> \\<squnion> fb\\<^sup>-\\<^sub>\\<R> \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sup>-\\<^sub>\\<R> (\\<phi> \\<sqinter> \\<psi>) =\n    fb\\<^sup>-\\<^sub>\\<R> \\<phi> \\<union> fb\\<^sup>-\\<^sub>\\<R> \\<psi>", "by (metis assms rfb_Inf_pres rfb_irfb_galois rfb_sup_dual)"], ["", "lemma irfb_top_pres [simp]: \"bd\\<^sup>-\\<^sub>\\<R> \\<top> = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres bd\\<^sup>-\\<^sub>\\<R>", "unfolding irbd_def f2r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. top_pres\n     ((\\<lambda>f. {(x, y). s2p (f x) y}) \\<circ> bd\\<^sup>-\\<^sub>\\<F>)", "by auto"], ["", "text \\<open>Finally, the adjunctions between the predicate transformers considered so far are revisited.\\<close>"], ["", "lemma ffb_fbd_galois_var: \"(bd\\<^sub>\\<F> f X \\<subseteq> Y) = (X \\<subseteq> fb\\<^sub>\\<F> f Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<F> f X \\<subseteq> Y) = (X \\<subseteq> fb\\<^sub>\\<F> f Y)", "by (meson adj_def ffb_fbd_galois)"], ["", "lemma rfb_rbd_galois_var: \"(bd\\<^sub>\\<R> R X \\<subseteq> Y) = (X \\<subseteq> fb\\<^sub>\\<R> R Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<R> R X \\<subseteq> Y) = (X \\<subseteq> fb\\<^sub>\\<R> R Y)", "by (meson adj_def rfb_rbd_galois)"], ["", "lemma ffb_fbd: \"fb\\<^sub>\\<F> f Y = \\<Union>{X. bd\\<^sub>\\<F> f X \\<subseteq> Y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> f Y = \\<mu> {X. bd\\<^sub>\\<F> f X \\<subseteq> Y}", "using ffb_fbd_galois_var"], ["proof (prove)\nusing this:\n  (bd\\<^sub>\\<F> ?f ?X \\<subseteq> ?Y) =\n  (?X \\<subseteq> fb\\<^sub>\\<F> ?f ?Y)\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<F> f Y = \\<mu> {X. bd\\<^sub>\\<F> f X \\<subseteq> Y}", "by fastforce"], ["", "lemma rfb_rbd: \"fb\\<^sub>\\<R> R Y = \\<Union>{X. bd\\<^sub>\\<R> R X \\<subseteq> Y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> R Y = \\<mu> {X. bd\\<^sub>\\<R> R X \\<subseteq> Y}", "using rfb_rbd_galois_var"], ["proof (prove)\nusing this:\n  (bd\\<^sub>\\<R> ?R ?X \\<subseteq> ?Y) =\n  (?X \\<subseteq> fb\\<^sub>\\<R> ?R ?Y)\n\ngoal (1 subgoal):\n 1. fb\\<^sub>\\<R> R Y = \\<mu> {X. bd\\<^sub>\\<R> R X \\<subseteq> Y}", "by fastforce"], ["", "lemma fbd_ffb: \"bd\\<^sub>\\<F> f X = \\<Inter>{Y. X \\<subseteq> fb\\<^sub>\\<F> f Y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<F> f X = \\<Inter> {Y. X \\<subseteq> fb\\<^sub>\\<F> f Y}", "using ffb_fbd_galois_var"], ["proof (prove)\nusing this:\n  (bd\\<^sub>\\<F> ?f ?X \\<subseteq> ?Y) =\n  (?X \\<subseteq> fb\\<^sub>\\<F> ?f ?Y)\n\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<F> f X = \\<Inter> {Y. X \\<subseteq> fb\\<^sub>\\<F> f Y}", "by fastforce"], ["", "lemma rbd_rfb: \"bd\\<^sub>\\<R> R X = \\<Inter>{Y. X \\<subseteq> fb\\<^sub>\\<R> R Y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<R> R X = \\<Inter> {Y. X \\<subseteq> fb\\<^sub>\\<R> R Y}", "using rfb_rbd_galois_var"], ["proof (prove)\nusing this:\n  (bd\\<^sub>\\<R> ?R ?X \\<subseteq> ?Y) =\n  (?X \\<subseteq> fb\\<^sub>\\<R> ?R ?Y)\n\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<R> R X = \\<Inter> {Y. X \\<subseteq> fb\\<^sub>\\<R> R Y}", "by fastforce"], ["", "subsection \\<open>The Remaining Modalities\\<close>"], ["", "text \\<open>Finally I set up the remaining dual transformers: forward diamonds and backward boxes. \nMost properties are not repeated, only some symmetries and dualities are spelled out.\\<close>"], ["", "text \\<open>First, forward diamond operators are introduced, from state transformers and relations; together\nwith their inverses.\\<close>"], ["", "definition ffd :: \"('a \\<Rightarrow> 'b set) \\<Rightarrow> 'b set \\<Rightarrow> 'a set\" (\"fd\\<^sub>\\<F>\") where \n  \"fd\\<^sub>\\<F> = bd\\<^sub>\\<F> \\<circ> op\\<^sub>K\""], ["", "definition iffd :: \"('b set \\<Rightarrow> 'a set) \\<Rightarrow> 'a \\<Rightarrow> 'b set\" (\"fd\\<^sup>-\\<^sub>\\<F>\") where \n  \"fd\\<^sup>-\\<^sub>\\<F> = op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F>\""], ["", "definition rfd :: \"('a \\<times> 'b) set \\<Rightarrow> 'b set \\<Rightarrow> 'a set\" (\"fd\\<^sub>\\<R>\") where \n  \"fd\\<^sub>\\<R> = fd\\<^sub>\\<F> \\<circ> \\<F>\""], ["", "definition irfd :: \"('b set \\<Rightarrow> 'a set) \\<Rightarrow> ('a \\<times> 'b) set\" (\"fd\\<^sup>-\\<^sub>\\<R>\") where \n  \"fd\\<^sup>-\\<^sub>\\<R> = \\<R> \\<circ> fd\\<^sup>-\\<^sub>\\<F>\""], ["", "text \\<open>Second, I introduce forward boxes and their inverses.\\<close>"], ["", "definition fbb :: \"('a \\<Rightarrow> 'b set) \\<Rightarrow> 'a set \\<Rightarrow> 'b set\" (\"bb\\<^sub>\\<F>\") where \n  \"bb\\<^sub>\\<F> = fb\\<^sub>\\<F> \\<circ> op\\<^sub>K\""], ["", "definition ifbb :: \"('a  set \\<Rightarrow> 'b set) \\<Rightarrow> 'a \\<Rightarrow> 'b set\" (\"bb\\<^sup>-\\<^sub>\\<F>\") where \n \"bb\\<^sup>-\\<^sub>\\<F> = op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>\""], ["", "definition rbb :: \"('a \\<times> 'b) set \\<Rightarrow> 'a set \\<Rightarrow> 'b set\" (\"bb\\<^sub>\\<R>\") where \n  \"bb\\<^sub>\\<R> = bb\\<^sub>\\<F> \\<circ> \\<F>\""], ["", "definition irbb :: \"('a  set \\<Rightarrow> 'b set) \\<Rightarrow> ('a \\<times> 'b) set\" (\"bb\\<^sup>-\\<^sub>\\<R>\") where \n  \"bb\\<^sup>-\\<^sub>\\<R> = \\<R> \\<circ> bb\\<^sup>-\\<^sub>\\<F>\""], ["", "text \\<open>Forward and backward operators of the same type (box or diamond) are related by opposition.\\<close>"], ["", "lemma rfd_rbd: \"fd\\<^sub>\\<R> = bd\\<^sub>\\<R> \\<circ> (\\<smile>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fd\\<^sub>\\<R> = bd\\<^sub>\\<R> \\<circ> \\<smile>", "by (simp add: rfd_def rbd_def ffd_def kop_def comp_assoc)"], ["", "lemma irfd_irbd: \"fd\\<^sup>-\\<^sub>\\<R> = (\\<smile>) \\<circ> bd\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fd\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> bd\\<^sup>-\\<^sub>\\<R>", "by (simp add: irfd_def iffd_def kop_def irbd_def comp_assoc[symmetric])"], ["", "lemma fbd_ffd: \"bd\\<^sub>\\<F> = fd\\<^sub>\\<F> \\<circ> op\\<^sub>K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd\\<^sub>\\<F> = fd\\<^sub>\\<F> \\<circ> op\\<^sub>K", "by (simp add: ffd_def kop_def converse_def f2r_def r2f_def klift_def fun_eq_iff)"], ["", "lemma rbb_rfb: \"bb\\<^sub>\\<R> = fb\\<^sub>\\<R> \\<circ> (\\<smile>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bb\\<^sub>\\<R> = fb\\<^sub>\\<R> \\<circ> \\<smile>", "by (simp add: rfb_def rbb_def, metis fbb_def kop_def r2f_f2r_galois_var2 rewriteR_comp_comp2)"], ["", "lemma irbb_irfb: \"bb\\<^sup>-\\<^sub>\\<R> = (\\<smile>) \\<circ> fb\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "have \"bb\\<^sup>-\\<^sub>\\<R> = \\<R> \\<circ> op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<R> =\n    \\<R> \\<circ> op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>", "by (simp add: irbb_def ifbb_def o_assoc)"], ["proof (state)\nthis:\n  bb\\<^sup>-\\<^sub>\\<R> =\n  \\<R> \\<circ> op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>\n\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "also"], ["proof (state)\nthis:\n  bb\\<^sup>-\\<^sub>\\<R> =\n  \\<R> \\<circ> op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>\n\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "have \"... = \\<R> \\<circ> \\<F> \\<circ> (\\<smile>) \\<circ> \\<R> \\<circ> fb\\<^sup>-\\<^sub>\\<F>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R> \\<circ> op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> =\n    \\<R> \\<circ> \\<F> \\<circ> \\<smile> \\<circ> \\<R> \\<circ>\n    fb\\<^sup>-\\<^sub>\\<F>", "by (simp add: kop_def o_assoc)"], ["proof (state)\nthis:\n  \\<R> \\<circ> op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> =\n  \\<R> \\<circ> \\<F> \\<circ> \\<smile> \\<circ> \\<R> \\<circ>\n  fb\\<^sup>-\\<^sub>\\<F>\n\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "also"], ["proof (state)\nthis:\n  \\<R> \\<circ> op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F> =\n  \\<R> \\<circ> \\<F> \\<circ> \\<smile> \\<circ> \\<R> \\<circ>\n  fb\\<^sup>-\\<^sub>\\<F>\n\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "have \"... = (\\<smile>) \\<circ> fb\\<^sup>-\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R> \\<circ> \\<F> \\<circ> \\<smile> \\<circ> \\<R> \\<circ>\n    fb\\<^sup>-\\<^sub>\\<F> =\n    \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "by (simp add: comp_assoc irfb_def)"], ["proof (state)\nthis:\n  \\<R> \\<circ> \\<F> \\<circ> \\<smile> \\<circ> \\<R> \\<circ>\n  fb\\<^sup>-\\<^sub>\\<F> =\n  \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>\n\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "finally"], ["proof (chain)\npicking this:\n  bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "show ?thesis"], ["proof (prove)\nusing this:\n  bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>\n\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>", "."], ["proof (state)\nthis:\n  bb\\<^sup>-\\<^sub>\\<R> = \\<smile> \\<circ> fb\\<^sup>-\\<^sub>\\<R>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Complementation is a natural isomorphism between forwards and backward operators of different type.\\<close>"], ["", "lemma ffd_ffb_demorgan: \"\\<partial> \\<circ> fd\\<^sub>\\<F> f = fb\\<^sub>\\<F> f \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> fd\\<^sub>\\<F> f = fb\\<^sub>\\<F> f \\<circ> \\<partial>", "by (simp add: comp_assoc ffb_prop ffd_def)"], ["", "lemma iffd_iffb_demorgan: \"Sup_pres \\<phi> \\<Longrightarrow> fd\\<^sup>-\\<^sub>\\<F> \\<phi> = (fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    fd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (fb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "by (smt Sup_pres_Inf_pres comp_apply iffb_ifbd_dual iffd_def map_dual_dual)"], ["", "lemma ffb_ffd_demorgan: \"\\<partial> \\<circ> fb\\<^sub>\\<F> f = fd\\<^sub>\\<F> f \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> fb\\<^sub>\\<F> f = fd\\<^sub>\\<F> f \\<circ> \\<partial>", "by (simp add: ffb_prop ffd_def rewriteL_comp_comp)"], ["", "lemma iffb_iffd_demorgan: \"Inf_pres \\<phi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<F> \\<phi> = (fd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (fd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "by (simp add: iffb_ifbd_dual iffd_def)"], ["", "lemma rfd_rfb_demorgan: \"\\<partial> \\<circ> fd\\<^sub>\\<R> R = fb\\<^sub>\\<R> R \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> fd\\<^sub>\\<R> R = fb\\<^sub>\\<R> R \\<circ> \\<partial>", "by (simp add: rfb_def rfd_def ffd_ffb_demorgan)"], ["", "lemma irfd_irfb_demorgan: \"Sup_pres \\<phi> \\<Longrightarrow> fd\\<^sup>-\\<^sub>\\<R> \\<phi> = (fb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    fd\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    (fb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "by (simp add: irfb_def irfd_def iffd_iffb_demorgan)"], ["", "lemma rfb_rfd_demorgan: \"\\<partial> \\<circ> fb\\<^sub>\\<R> R = fd\\<^sub>\\<R> R \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> fb\\<^sub>\\<R> R = fd\\<^sub>\\<R> R \\<circ> \\<partial>", "by (simp add: ffb_ffd_demorgan rfb_def rfd_def)"], ["", "lemma irfb_irfd_demorgan: \"Inf_pres \\<phi> \\<Longrightarrow> fb\\<^sup>-\\<^sub>\\<R> \\<phi>  = (fd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    fb\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    (fd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "by (simp add: irfb_irbd_dual irfd_irbd)"], ["", "lemma fbd_fbb_demorgan: \"\\<partial> \\<circ> bd\\<^sub>\\<F> f = bb\\<^sub>\\<F> f \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> bd\\<^sub>\\<F> f = bb\\<^sub>\\<F> f \\<circ> \\<partial>", "by (simp add: fbb_def fbd_ffd ffd_ffb_demorgan)"], ["", "lemma ifbd_ifbb_demorgan: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<F> \\<phi> = (bb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "by (simp add: ifbd_iffb_dual ifbb_def)"], ["", "lemma fbb_fbd_demorgan: \"\\<partial> \\<circ> bb\\<^sub>\\<F> R = bd\\<^sub>\\<F> R \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> bb\\<^sub>\\<F> R = bd\\<^sub>\\<F> R \\<circ> \\<partial>", "by (simp add: fbb_def fbd_ffd ffb_ffd_demorgan)"], ["", "lemma ifbb_ifbd_demorgan: \"Inf_pres \\<phi> \\<Longrightarrow> bb\\<^sup>-\\<^sub>\\<F> \\<phi> = (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "assume h: \"Inf_pres \\<phi>\""], ["proof (state)\nthis:\n  Inf_pres \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "have \"bb\\<^sup>-\\<^sub>\\<F> \\<phi> = (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi>", "by (simp add: ifbb_def)"], ["proof (state)\nthis:\n  bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n  (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "also"], ["proof (state)\nthis:\n  bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n  (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "have \"... = (op\\<^sub>K \\<circ> op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F>) (\\<partial>\\<^sub>F \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n    (op\\<^sub>K \\<circ> op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F>)\n     (\\<partial>\\<^sub>F \\<phi>)", "by (metis comp_apply h iffb_ifbd_dual)"], ["proof (state)\nthis:\n  (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n  (op\\<^sub>K \\<circ> op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F>)\n   (\\<partial>\\<^sub>F \\<phi>)\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "also"], ["proof (state)\nthis:\n  (op\\<^sub>K \\<circ> fb\\<^sup>-\\<^sub>\\<F>) \\<phi> =\n  (op\\<^sub>K \\<circ> op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F>)\n   (\\<partial>\\<^sub>F \\<phi>)\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "have \"... = (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (op\\<^sub>K \\<circ> op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F>)\n     (\\<partial>\\<^sub>F \\<phi>) =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "by auto"], ["proof (state)\nthis:\n  (op\\<^sub>K \\<circ> op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F>)\n   (\\<partial>\\<^sub>F \\<phi>) =\n  (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "finally"], ["proof (chain)\npicking this:\n  bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n  (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "show ?thesis"], ["proof (prove)\nusing this:\n  bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n  (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\n\ngoal (1 subgoal):\n 1. bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "."], ["proof (state)\nthis:\n  bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n  (bd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rbd_rbb_demorgan: \"\\<partial> \\<circ> bd\\<^sub>\\<R> R = bb\\<^sub>\\<R> R \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> bd\\<^sub>\\<R> R = bb\\<^sub>\\<R> R \\<circ> \\<partial>", "by (simp add: rbb_def rbd_def fbd_fbb_demorgan)"], ["", "lemma irbd_irbb_demorgan: \"Sup_pres \\<phi> \\<Longrightarrow> bd\\<^sup>-\\<^sub>\\<R> \\<phi> = (bb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    bd\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    (bb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "by (simp add: irbb_irfb irbd_irfb_dual)"], ["", "lemma rbb_rbd_demorgan: \"\\<partial> \\<circ> bb\\<^sub>\\<R> R = bd\\<^sub>\\<R> R \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> bb\\<^sub>\\<R> R = bd\\<^sub>\\<R> R \\<circ> \\<partial>", "by (simp add: rbb_def rbd_def fbb_fbd_demorgan)"], ["", "lemma irbb_irbd_demorgan: \"Inf_pres \\<phi> \\<Longrightarrow> bb\\<^sup>-\\<^sub>\\<R> \\<phi> = (bd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    (bd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>", "by (simp add: irbb_def irbd_def ifbb_ifbd_demorgan)"], ["", "text \\<open>Further symmetries arise by combination.\\<close>"], ["", "lemma ffd_fbb_dual: \"\\<partial> \\<circ> fd\\<^sub>\\<F> f = bb\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> fd\\<^sub>\\<F> f =\n    bb\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>", "by (simp add: fbd_fbb_demorgan ffd_def)"], ["", "lemma iffd_ifbb_dual: \"Sup_pres \\<phi> \\<Longrightarrow> fd\\<^sup>-\\<^sub>\\<F> \\<phi> = (op\\<^sub>K \\<circ> bb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    fd\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> bb\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "by (simp add: ifbd_ifbb_demorgan iffd_def)"], ["", "lemma fbb_ffd_dual: \"\\<partial> \\<circ> bb\\<^sub>\\<F> f = fd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> bb\\<^sub>\\<F> f =\n    fd\\<^sub>\\<F> (op\\<^sub>K f) \\<circ> \\<partial>", "by (simp add: fbd_ffd fbb_fbd_demorgan)"], ["", "lemma ifbb_iffd_dual: \"Inf_pres \\<phi> \\<Longrightarrow> bb\\<^sup>-\\<^sub>\\<F> \\<phi> = (op\\<^sub>K \\<circ> fd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<F> \\<phi> =\n    (op\\<^sub>K \\<circ> fd\\<^sup>-\\<^sub>\\<F> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "by (simp add: ifbb_def iffb_iffd_demorgan)"], ["", "lemma rfd_rbb_dual: \"\\<partial> \\<circ> fd\\<^sub>\\<R> R = bb\\<^sub>\\<R> (R\\<inverse>) \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> fd\\<^sub>\\<R> R =\n    bb\\<^sub>\\<R> (\\<smile> R) \\<circ> \\<partial>", "by (metis fun_dual1 map_dual_def rbd_rbb_demorgan rfb_rbd_dual rfd_rfb_demorgan)"], ["", "lemma ifd_ibb_dual: \"Sup_pres \\<phi> \\<Longrightarrow> fd\\<^sup>-\\<^sub>\\<R> \\<phi> = ((\\<smile>) \\<circ> bb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    fd\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    (\\<smile> \\<circ> bb\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "by (simp add: irbb_irfb irbd_irfb_dual irfd_irbd)"], ["", "lemma rbb_rfd_dual: \"\\<partial> \\<circ> bb\\<^sub>\\<R> R = fd\\<^sub>\\<R> (R\\<inverse>) \\<circ> \\<partial>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<partial> \\<circ> bb\\<^sub>\\<R> R =\n    fd\\<^sub>\\<R> (\\<smile> R) \\<circ> \\<partial>", "by (simp add: rbb_rfb rfb_rfd_demorgan)"], ["", "lemma irbb_irfd_dual: \"Inf_pres \\<phi> \\<Longrightarrow> bb\\<^sup>-\\<^sub>\\<R> \\<phi> = ((\\<smile>) \\<circ> fd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F) \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    bb\\<^sup>-\\<^sub>\\<R> \\<phi> =\n    (\\<smile> \\<circ> fd\\<^sup>-\\<^sub>\\<R> \\<circ> \\<partial>\\<^sub>F)\n     \\<phi>", "by (simp add: irbb_irfb irfb_irbd_dual irfd_irbd)"], ["", "lemma ffd_iffd_galois: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<phi> = fd\\<^sub>\\<F> f) = (f = fd\\<^sup>-\\<^sub>\\<F> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = fd\\<^sub>\\<F> f) = (f = fd\\<^sup>-\\<^sub>\\<F> \\<phi>)", "unfolding ffd_def iffd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = (bd\\<^sub>\\<F> \\<circ> op\\<^sub>K) f) =\n    (f = (op\\<^sub>K \\<circ> bd\\<^sup>-\\<^sub>\\<F>) \\<phi>)", "by (metis comp_apply fbd_surj klift_eta_inv1 kop_galois)"], ["", "lemma rfd_irfd_galois: \"Sup_pres \\<phi> \\<Longrightarrow> (\\<phi> = fd\\<^sub>\\<R> R) = (R = fd\\<^sup>-\\<^sub>\\<R> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = fd\\<^sub>\\<R> R) = (R = fd\\<^sup>-\\<^sub>\\<R> \\<phi>)", "unfolding irfd_def rfd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = (fd\\<^sub>\\<F> \\<circ> \\<F>) R) =\n    (R = (\\<R> \\<circ> fd\\<^sup>-\\<^sub>\\<F>) \\<phi>)", "by (metis comp_apply ffd_iffd_galois r2f_f2r_galois)"], ["", "lemma fbb_ifbb_galois: \"Inf_pres \\<phi> \\<Longrightarrow> (\\<phi> = bb\\<^sub>\\<F> f) = (f = bb\\<^sup>-\\<^sub>\\<F> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = bb\\<^sub>\\<F> f) = (f = bb\\<^sup>-\\<^sub>\\<F> \\<phi>)", "unfolding fbb_def iffb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = (fb\\<^sub>\\<F> \\<circ> op\\<^sub>K) f) =\n    (f = bb\\<^sup>-\\<^sub>\\<F> \\<phi>)", "by (metis (no_types, lifting) comp_apply ffb_iffb_galois ifbb_ifbd_demorgan iffb_ifbd_dual kop_galois)"], ["", "lemma rbb_irbb_galois: \"Inf_pres \\<phi> \\<Longrightarrow> (\\<phi> = bb\\<^sub>\\<R> R) = (R = bb\\<^sup>-\\<^sub>\\<R> \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = bb\\<^sub>\\<R> R) = (R = bb\\<^sup>-\\<^sub>\\<R> \\<phi>)", "apply (simp add: rbb_def irbb_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = bb\\<^sub>\\<F> (\\<F> R)) =\n    (R = \\<R> (bb\\<^sup>-\\<^sub>\\<F> \\<phi>))", "using fbb_ifbb_galois r2f_f2r_galois"], ["proof (prove)\nusing this:\n  Inf_pres ?\\<phi> \\<Longrightarrow>\n  (?\\<phi> = bb\\<^sub>\\<F> ?f) = (?f = bb\\<^sup>-\\<^sub>\\<F> ?\\<phi>)\n  (\\<R> ?f = ?R) = (\\<F> ?R = ?f)\n\ngoal (1 subgoal):\n 1. Inf_pres \\<phi> \\<Longrightarrow>\n    (\\<phi> = bb\\<^sub>\\<F> (\\<F> R)) =\n    (R = \\<R> (bb\\<^sup>-\\<^sub>\\<F> \\<phi>))", "by blast"], ["", "text \\<open>Next I spell out the missing adjunctions.\\<close>"], ["", "lemma ffd_ffb_adj: \"fd\\<^sub>\\<F> f \\<stileturn> bb\\<^sub>\\<F> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fd\\<^sub>\\<F> f \\<stileturn> bb\\<^sub>\\<F> f", "by (simp add: fbb_def ffb_fbd_galois ffd_def)"], ["", "lemma ffd_fbb_galois: \"(fd\\<^sub>\\<F> f X \\<subseteq> Y) = (X \\<subseteq> bb\\<^sub>\\<F> f Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<subseteq> Y) = (X \\<subseteq> bb\\<^sub>\\<F> f Y)", "by (simp add: fbb_def ffb_fbd_galois_var ffd_def)"], ["", "lemma rfd_rfb_adj: \"fd\\<^sub>\\<R> f \\<stileturn> bb\\<^sub>\\<R> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fd\\<^sub>\\<R> f \\<stileturn> bb\\<^sub>\\<R> f", "by (simp add: ffd_ffb_adj rbb_def rfd_def)"], ["", "lemma rfd_rbb_galois: \"(fd\\<^sub>\\<R> R X \\<subseteq> Y) = (X \\<subseteq> bb\\<^sub>\\<R> R Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<R> R X \\<subseteq> Y) = (X \\<subseteq> bb\\<^sub>\\<R> R Y)", "by (simp add: ffd_fbb_galois rbb_def rfd_def)"], ["", "text \\<open>Finally, forward and backward operators of the same type are linked by conjugation.\\<close>"], ["", "lemma ffd_fbd_conjugation: \"(fd\\<^sub>\\<F> f X \\<inter> Y = {}) = (X \\<inter> bd\\<^sub>\\<F> f Y = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "have \"(fd\\<^sub>\\<F> f X \\<inter> Y = {}) = (fd\\<^sub>\\<F> f X \\<subseteq> -Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (fd\\<^sub>\\<F> f X \\<subseteq> - Y)", "by (simp add: disjoint_eq_subset_Compl)"], ["proof (state)\nthis:\n  (fd\\<^sub>\\<F> f X \\<inter> Y = {}) = (fd\\<^sub>\\<F> f X \\<subseteq> - Y)\n\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "also"], ["proof (state)\nthis:\n  (fd\\<^sub>\\<F> f X \\<inter> Y = {}) = (fd\\<^sub>\\<F> f X \\<subseteq> - Y)\n\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "have \"... = (X \\<subseteq> bb\\<^sub>\\<F> f (-Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<subseteq> - Y) =\n    (X \\<subseteq> bb\\<^sub>\\<F> f (- Y))", "by (simp add: ffd_fbb_galois)"], ["proof (state)\nthis:\n  (fd\\<^sub>\\<F> f X \\<subseteq> - Y) =\n  (X \\<subseteq> bb\\<^sub>\\<F> f (- Y))\n\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "also"], ["proof (state)\nthis:\n  (fd\\<^sub>\\<F> f X \\<subseteq> - Y) =\n  (X \\<subseteq> bb\\<^sub>\\<F> f (- Y))\n\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "have \"... = (X \\<inter> - bb\\<^sub>\\<F> f (-Y) = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X \\<subseteq> bb\\<^sub>\\<F> f (- Y)) =\n    (X \\<inter> - bb\\<^sub>\\<F> f (- Y) = {})", "by (simp add: disjoint_eq_subset_Compl)"], ["proof (state)\nthis:\n  (X \\<subseteq> bb\\<^sub>\\<F> f (- Y)) =\n  (X \\<inter> - bb\\<^sub>\\<F> f (- Y) = {})\n\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "also"], ["proof (state)\nthis:\n  (X \\<subseteq> bb\\<^sub>\\<F> f (- Y)) =\n  (X \\<inter> - bb\\<^sub>\\<F> f (- Y) = {})\n\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "have \"... = (X \\<inter> \\<partial> (bb\\<^sub>\\<F> f (\\<partial> Y)) = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X \\<inter> - bb\\<^sub>\\<F> f (- Y) = {}) =\n    (X \\<inter> \\<partial> (bb\\<^sub>\\<F> f (\\<partial> Y)) = {})", "by (simp add: dual_set_def)"], ["proof (state)\nthis:\n  (X \\<inter> - bb\\<^sub>\\<F> f (- Y) = {}) =\n  (X \\<inter> \\<partial> (bb\\<^sub>\\<F> f (\\<partial> Y)) = {})\n\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "finally"], ["proof (chain)\npicking this:\n  (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n  (X \\<inter> \\<partial> (bb\\<^sub>\\<F> f (\\<partial> Y)) = {})", "show ?thesis"], ["proof (prove)\nusing this:\n  (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n  (X \\<inter> \\<partial> (bb\\<^sub>\\<F> f (\\<partial> Y)) = {})\n\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<F> f X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<F> f Y = {})", "by (metis (no_types, hide_lams) comp_apply fbb_fbd_demorgan invol_dual_var)"], ["proof (state)\nthis:\n  (fd\\<^sub>\\<F> f X \\<inter> Y = {}) = (X \\<inter> bd\\<^sub>\\<F> f Y = {})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rfd_rbd_conjugation: \"((fd\\<^sub>\\<R> R X) \\<inter> Y = {}) = (X \\<inter> (bd\\<^sub>\\<R> R Y) = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fd\\<^sub>\\<R> R X \\<inter> Y = {}) =\n    (X \\<inter> bd\\<^sub>\\<R> R Y = {})", "by (simp add: rbd_def rfd_def ffd_fbd_conjugation)"], ["", "lemma ffb_fbb_conjugation: \"((fb\\<^sub>\\<F> f X) \\<union> Y = UNIV) = (X \\<union> (bb\\<^sub>\\<F> f Y) = UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "have \"((fb\\<^sub>\\<F> f X) \\<union> Y = UNIV) = (-Y \\<subseteq> fb\\<^sub>\\<F> f X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (- Y \\<subseteq> fb\\<^sub>\\<F> f X)", "by blast"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n  (- Y \\<subseteq> fb\\<^sub>\\<F> f X)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "also"], ["proof (state)\nthis:\n  (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n  (- Y \\<subseteq> fb\\<^sub>\\<F> f X)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "have \"... = (bd\\<^sub>\\<F> f (\\<partial> Y) \\<subseteq> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- Y \\<subseteq> fb\\<^sub>\\<F> f X) =\n    (bd\\<^sub>\\<F> f (\\<partial> Y) \\<subseteq> X)", "by (simp add: ffb_fbd_galois_var dual_set_def)"], ["proof (state)\nthis:\n  (- Y \\<subseteq> fb\\<^sub>\\<F> f X) =\n  (bd\\<^sub>\\<F> f (\\<partial> Y) \\<subseteq> X)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "also"], ["proof (state)\nthis:\n  (- Y \\<subseteq> fb\\<^sub>\\<F> f X) =\n  (bd\\<^sub>\\<F> f (\\<partial> Y) \\<subseteq> X)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "have \"... = (\\<partial> (bb\\<^sub>\\<F> f Y) \\<subseteq> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bd\\<^sub>\\<F> f (\\<partial> Y) \\<subseteq> X) =\n    (\\<partial> (bb\\<^sub>\\<F> f Y) \\<subseteq> X)", "by (metis comp_def fbb_fbd_demorgan)"], ["proof (state)\nthis:\n  (bd\\<^sub>\\<F> f (\\<partial> Y) \\<subseteq> X) =\n  (\\<partial> (bb\\<^sub>\\<F> f Y) \\<subseteq> X)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "also"], ["proof (state)\nthis:\n  (bd\\<^sub>\\<F> f (\\<partial> Y) \\<subseteq> X) =\n  (\\<partial> (bb\\<^sub>\\<F> f Y) \\<subseteq> X)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "have \"... = (X \\<union> (bb\\<^sub>\\<F> f Y) = UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<partial> (bb\\<^sub>\\<F> f Y) \\<subseteq> X) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "by (metis compl_le_swap2 dual_set_def join_shunt)"], ["proof (state)\nthis:\n  (\\<partial> (bb\\<^sub>\\<F> f Y) \\<subseteq> X) =\n  (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "finally"], ["proof (chain)\npicking this:\n  (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n  (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "show ?thesis"], ["proof (prove)\nusing this:\n  (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n  (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)\n\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)", "."], ["proof (state)\nthis:\n  (fb\\<^sub>\\<F> f X \\<union> Y = UNIV) =\n  (X \\<union> bb\\<^sub>\\<F> f Y = UNIV)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rfb_rbb_conjugation: \"((fb\\<^sub>\\<R> R X) \\<union> Y = UNIV) = (X \\<union> (bb\\<^sub>\\<R> R Y) = UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (fb\\<^sub>\\<R> R X \\<union> Y = UNIV) =\n    (X \\<union> bb\\<^sub>\\<R> R Y = UNIV)", "by (simp add: rfb_def rbb_def ffb_fbb_conjugation)"], ["", "end"]]}