{"file_name": "/home/qj213/afp-2021-10-22/thys/Native_Word/Native_Word_Test_Emu.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Native_Word", "problem_names": ["lemma \"x AND y = x OR (y :: uint16)\""], "translations": [["", "lemma \"x AND y = x OR (y :: uint16)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x AND y = x OR y", "quickcheck[random, expect=counterexample]"], ["proof (prove)\ngoal (1 subgoal):\n 1. x AND y = x OR y", "quickcheck[exhaustive, expect=counterexample]"], ["proof (prove)\ngoal (1 subgoal):\n 1. x AND y = x OR y", "oops"], ["", "subsection \\<open>Tests for @{typ uint8}\\<close>"], ["", "text \\<open>\n  Test that @{typ uint8} is emulated for OCaml via @{typ \"8 word\"} \n  if @{theory Native_Word.Code_Target_Bits_Int} is imported.\n\\<close>"], ["", "definition test_uint8_emulation :: bool where\n  \"test_uint8_emulation \\<longleftrightarrow> (0xFFF - 0x10 = (0xEF :: uint8))\""], ["", "export_code test_uint8_emulation checking OCaml?\n  \\<comment> \\<open>test the other target languages as well\\<close> SML Haskell? Scala"], ["", "end"]]}