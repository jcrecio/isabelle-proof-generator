{"file_name": "/home/qj213/afp-2021-10-22/thys/Projective_Geometry/Pascal_Property.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Projective_Geometry", "problem_names": ["lemma inters_is_singleton:\n  assumes \"l \\<noteq> m\" and \"P \\<in> inters l m\" and \"Q \\<in> inters l m\"\n  shows \"P = Q\"", "lemma uniq_inter:\n  assumes \"l \\<noteq> m\" and \"incid P l\" and \"incid P m\"\n  shows \"inter l m = P\"", "lemma col_rot_CW:\n  assumes \"col P Q R\"\n  shows \"col R P Q\"", "lemma col_2cycle: \n  assumes \"col P Q R\"\n  shows \"col P R Q\"", "lemma distinct6_rot_CW:\n  assumes \"distinct6 A B C D E F\"\n  shows \"distinct6 F A B C D E\"", "lemma lines_comm: \"lines P Q = lines Q P\"", "lemma line_comm:\n  assumes \"P \\<noteq> Q\"\n  shows \"line P Q = line Q P\"", "lemma inters_comm: \"inters l m = inters m l\"", "lemma inter_comm: \"inter l m = inter m l\"", "lemma inter_line_line_comm:\n  assumes \"C \\<noteq> D\"\n  shows \"inter (line A B) (line C D) = inter (line A B) (line D C)\"", "lemma inter_line_comm_line:\n  assumes \"A \\<noteq> B\"\n  shows \"inter (line A B) (line C D) = inter (line B A) (line C D)\"", "lemma inter_comm_line_line_comm:\n  assumes \"C \\<noteq> D\" and \"line A B \\<noteq> line C D\"\n  shows \"inter (line A B) (line C D) = inter (line D C) (line A B)\"", "lemma is_pascal_rot_CW:\n  assumes \"is_pascal A B C D E F\"\n  shows \"is_pascal F A B C D E\"", "lemma incid_C_AB: \n  assumes \"A \\<noteq> B\" and \"incid A l\" and \"incid B l\" and \"incid C l\"\n  shows \"incid C (line A B)\"", "lemma incid_inters_left: \n  assumes \"P \\<in> inters l m\"\n  shows \"incid P l\"", "lemma incid_inters_right:\n  assumes \"P \\<in> inters l m\"\n  shows \"incid P m\"", "lemma inter_in_inters: \"inter l m \\<in> inters l m\"", "lemma incid_inter_left: \"incid (inter l m) l\"", "lemma incid_inter_right: \"incid (inter l m) m\"", "lemma col_A_B_ABl: \"col A B (inter (line A B) l)\"", "lemma col_A_B_lAB: \"col A B (inter l (line A B))\"", "lemma inter_is_a_intersec: \"is_a_intersec (inter (line A B) (line C D)) A B C D\"", "lemma line_left_inter_1: \n  assumes \"P \\<in> line_ext l\" and \"P \\<notin> line_ext m\"\n  shows \"line (inter l m) P = l\"", "lemma line_left_inter_2:\n  assumes \"P \\<in> line_ext m\" and \"P \\<notin> line_ext l\"\n  shows \"line (inter l m) P = m\"", "lemma line_right_inter_1:\n  assumes \"P \\<in> line_ext l\" and \"P \\<notin> line_ext m\"\n  shows \"line P (inter l m) = l\"", "lemma line_right_inter_2:\n  assumes \"P \\<in> line_ext m\" and \"P \\<notin> line_ext l\"\n  shows \"line P (inter l m) = m\"", "lemma inter_ABC_1: \n  assumes \"line A B \\<noteq> line C A\"\n  shows \"inter (line A B) (line C A) = A\"", "lemma line_inter_2:\n  assumes \"inter l m \\<noteq> inter l' m\" \n  shows \"line (inter l m) (inter l' m) = m\"", "lemma col_line_ext_1:\n  assumes \"col A B C\" and \"A \\<noteq> C\"\n  shows \"B \\<in> line_ext (line A C)\"", "lemma inter_line_ext_1:\n  assumes \"inter l m \\<in> line_ext n\" and \"l \\<noteq> m\" and \"l \\<noteq> n\"\n  shows \"inter l m = inter l n\"", "lemma inter_line_ext_2:\n  assumes \"inter l m \\<in> line_ext n\" and \"l \\<noteq> m\" and \"m \\<noteq> n\"\n  shows \"inter l m = inter m n\"", "lemma pappus_pascal:\n  assumes \"is_pappus\"\n  shows \"pascal_prop\"", "lemma is_pascal_under_alternate_vertices:\n  assumes \"pascal_prop\" and \"is_pascal A B C A' B' C'\"\n  shows \"is_pascal A B' C A' B C'\"", "lemma col_inter:\n  assumes \"distinct6 A B C D E F\" and \"col A B C\" and \"col D E F\"\n  shows \"inter (line B C) (line E F) = inter (line A B) (line D E)\"", "lemma pascal_pappus1:\n  assumes \"pascal_prop\"\n  shows \"is_pappus1 A B C A' B' C' P Q R\"", "lemma pascal_pappus:\n  assumes \"pascal_prop\"\n  shows \"is_pappus\"", "theorem pappus_iff_pascal: \"is_pappus = pascal_prop\""], "translations": [["", "lemma inters_is_singleton:\n  assumes \"l \\<noteq> m\" and \"P \\<in> inters l m\" and \"Q \\<in> inters l m\"\n  shows \"P = Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = Q", "using assms ax_uniqueness inters_def"], ["proof (prove)\nusing this:\n  l \\<noteq> m\n  P \\<in> inters l m\n  Q \\<in> inters l m\n  incid ?P ?l \\<longrightarrow>\n  incid ?Q ?l \\<longrightarrow>\n  incid ?P ?m \\<longrightarrow>\n  incid ?Q ?m \\<longrightarrow> ?P = ?Q \\<or> ?l = ?m\n  inters ?l ?m \\<equiv> {P. incid P ?l \\<and> incid P ?m}\n\ngoal (1 subgoal):\n 1. P = Q", "by blast"], ["", "definition inter :: \"Lines \\<Rightarrow> Lines \\<Rightarrow> Points\" where\n\"inter l m \\<equiv> @P. P \\<in> inters l m\""], ["", "lemma uniq_inter:\n  assumes \"l \\<noteq> m\" and \"incid P l\" and \"incid P m\"\n  shows \"inter l m = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = P", "have \"P \\<in> inters l m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> inters l m", "by (simp add: assms(2) assms(3) inters_def)"], ["proof (state)\nthis:\n  P \\<in> inters l m\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = P", "have \"\\<forall>Q. Q \\<in> inters l m \\<longrightarrow> Q = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Q. Q \\<in> inters l m \\<longrightarrow> Q = P", "using \\<open>P \\<in> inters l m\\<close> assms(1) inters_is_singleton"], ["proof (prove)\nusing this:\n  P \\<in> inters l m\n  l \\<noteq> m\n  \\<lbrakk>?l \\<noteq> ?m; ?P \\<in> inters ?l ?m;\n   ?Q \\<in> inters ?l ?m\\<rbrakk>\n  \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. \\<forall>Q. Q \\<in> inters l m \\<longrightarrow> Q = P", "by blast"], ["proof (state)\nthis:\n  \\<forall>Q. Q \\<in> inters l m \\<longrightarrow> Q = P\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = P", "show \"inter l m = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = P", "using \\<open>P \\<in> inters l m\\<close> assms(1) inter_def inters_is_singleton"], ["proof (prove)\nusing this:\n  P \\<in> inters l m\n  l \\<noteq> m\n  Pascal_Property.inter ?l ?m \\<equiv> SOME P. P \\<in> inters ?l ?m\n  \\<lbrakk>?l \\<noteq> ?m; ?P \\<in> inters ?l ?m;\n   ?Q \\<in> inters ?l ?m\\<rbrakk>\n  \\<Longrightarrow> ?P = ?Q\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = P", "by auto"], ["proof (state)\nthis:\n  Pascal_Property.inter l m = P\n\ngoal:\nNo subgoals!", "qed"], ["", "(* The configuration of a hexagon where the three pairs of opposite sides meet in \ncollinear points *)"], ["", "definition is_pascal :: \"[Points, Points, Points, Points, Points, Points] \\<Rightarrow> bool\" where\n\"is_pascal A B C D E F \\<equiv> distinct6 A B C D E F \\<longrightarrow> line B C \\<noteq> line E F \\<longrightarrow> line C D \\<noteq> line A F\n\\<longrightarrow> line A B \\<noteq> line D E \\<longrightarrow> \n(let P = inter (line B C) (line E F) in\nlet Q = inter (line C D) (line A F) in\nlet R = inter (line A B) (line D E) in \ncol P Q R)\""], ["", "lemma col_rot_CW:\n  assumes \"col P Q R\"\n  shows \"col R P Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col R P Q", "using assms col_def"], ["proof (prove)\nusing this:\n  col P Q R\n  col ?A ?B ?C \\<equiv>\n  \\<exists>l. incid ?A l \\<and> incid ?B l \\<and> incid ?C l\n\ngoal (1 subgoal):\n 1. col R P Q", "by auto"], ["", "lemma col_2cycle: \n  assumes \"col P Q R\"\n  shows \"col P R Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col P R Q", "using assms col_def"], ["proof (prove)\nusing this:\n  col P Q R\n  col ?A ?B ?C \\<equiv>\n  \\<exists>l. incid ?A l \\<and> incid ?B l \\<and> incid ?C l\n\ngoal (1 subgoal):\n 1. col P R Q", "by auto"], ["", "lemma distinct6_rot_CW:\n  assumes \"distinct6 A B C D E F\"\n  shows \"distinct6 F A B C D E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct6 F A B C D E", "using assms distinct6_def"], ["proof (prove)\nusing this:\n  distinct6 A B C D E F\n  distinct6 ?A ?B ?C ?D ?E ?F \\<equiv>\n  ?A \\<noteq> ?B \\<and>\n  ?A \\<noteq> ?C \\<and>\n  ?A \\<noteq> ?D \\<and>\n  ?A \\<noteq> ?E \\<and>\n  ?A \\<noteq> ?F \\<and>\n  ?B \\<noteq> ?C \\<and>\n  ?B \\<noteq> ?D \\<and>\n  ?B \\<noteq> ?E \\<and>\n  ?B \\<noteq> ?F \\<and>\n  ?C \\<noteq> ?D \\<and>\n  ?C \\<noteq> ?E \\<and>\n  ?C \\<noteq> ?F \\<and>\n  ?D \\<noteq> ?E \\<and> ?D \\<noteq> ?F \\<and> ?E \\<noteq> ?F\n\ngoal (1 subgoal):\n 1. distinct6 F A B C D E", "by auto"], ["", "lemma lines_comm: \"lines P Q = lines Q P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lines P Q = lines Q P", "using lines_def"], ["proof (prove)\nusing this:\n  lines ?P ?Q \\<equiv> {l. incid ?P l \\<and> incid ?Q l}\n\ngoal (1 subgoal):\n 1. lines P Q = lines Q P", "by auto"], ["", "lemma line_comm:\n  assumes \"P \\<noteq> Q\"\n  shows \"line P Q = line Q P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. line P Q = line Q P", "by (metis ax_uniqueness incidA_lAB incidB_lAB)"], ["", "lemma inters_comm: \"inters l m = inters m l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inters l m = inters m l", "using inters_def"], ["proof (prove)\nusing this:\n  inters ?l ?m \\<equiv> {P. incid P ?l \\<and> incid P ?m}\n\ngoal (1 subgoal):\n 1. inters l m = inters m l", "by auto"], ["", "lemma inter_comm: \"inter l m = inter m l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = Pascal_Property.inter m l", "by (simp add: inter_def inters_comm)"], ["", "lemma inter_line_line_comm:\n  assumes \"C \\<noteq> D\"\n  shows \"inter (line A B) (line C D) = inter (line A B) (line D C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line A B) (line C D) =\n    Pascal_Property.inter (line A B) (line D C)", "using assms line_comm"], ["proof (prove)\nusing this:\n  C \\<noteq> D\n  ?P \\<noteq> ?Q \\<Longrightarrow> line ?P ?Q = line ?Q ?P\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line A B) (line C D) =\n    Pascal_Property.inter (line A B) (line D C)", "by auto"], ["", "lemma inter_line_comm_line:\n  assumes \"A \\<noteq> B\"\n  shows \"inter (line A B) (line C D) = inter (line B A) (line C D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line A B) (line C D) =\n    Pascal_Property.inter (line B A) (line C D)", "using assms line_comm"], ["proof (prove)\nusing this:\n  A \\<noteq> B\n  ?P \\<noteq> ?Q \\<Longrightarrow> line ?P ?Q = line ?Q ?P\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line A B) (line C D) =\n    Pascal_Property.inter (line B A) (line C D)", "by auto"], ["", "lemma inter_comm_line_line_comm:\n  assumes \"C \\<noteq> D\" and \"line A B \\<noteq> line C D\"\n  shows \"inter (line A B) (line C D) = inter (line D C) (line A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line A B) (line C D) =\n    Pascal_Property.inter (line D C) (line A B)", "by (metis inter_comm line_comm)"], ["", "(* Pascal's property is stable under the 6-cycle [A B C D E F] *)"], ["", "lemma is_pascal_rot_CW:\n  assumes \"is_pascal A B C D E F\"\n  shows \"is_pascal F A B C D E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pascal F A B C D E", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_pascal F A B C D E", "define P Q R where \"P = inter (line A B) (line D E)\" and \"Q = inter (line B C) (line E F)\" and\n    \"R = inter (line F A) (line C D)\""], ["proof (state)\nthis:\n  P = Pascal_Property.inter (line A B) (line D E)\n  Q = Pascal_Property.inter (line B C) (line E F)\n  R = Pascal_Property.inter (line F A) (line C D)\n\ngoal (1 subgoal):\n 1. is_pascal F A B C D E", "have \"col P Q R\" if \"distinct6 F A B C D E\" and \"line A B \\<noteq> line D E\" and \"line B C \\<noteq> line E F\" \n    and \"line F A \\<noteq> line C D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col P Q R", "using P_def Q_def R_def assms col_rot_CW distinct6_def inter_comm is_pascal_def line_comm \n      that(1) that(2) that(3) that(4)"], ["proof (prove)\nusing this:\n  P = Pascal_Property.inter (line A B) (line D E)\n  Q = Pascal_Property.inter (line B C) (line E F)\n  R = Pascal_Property.inter (line F A) (line C D)\n  is_pascal A B C D E F\n  col ?P ?Q ?R \\<Longrightarrow> col ?R ?P ?Q\n  distinct6 ?A ?B ?C ?D ?E ?F \\<equiv>\n  ?A \\<noteq> ?B \\<and>\n  ?A \\<noteq> ?C \\<and>\n  ?A \\<noteq> ?D \\<and>\n  ?A \\<noteq> ?E \\<and>\n  ?A \\<noteq> ?F \\<and>\n  ?B \\<noteq> ?C \\<and>\n  ?B \\<noteq> ?D \\<and>\n  ?B \\<noteq> ?E \\<and>\n  ?B \\<noteq> ?F \\<and>\n  ?C \\<noteq> ?D \\<and>\n  ?C \\<noteq> ?E \\<and>\n  ?C \\<noteq> ?F \\<and>\n  ?D \\<noteq> ?E \\<and> ?D \\<noteq> ?F \\<and> ?E \\<noteq> ?F\n  Pascal_Property.inter ?l ?m = Pascal_Property.inter ?m ?l\n  is_pascal ?A ?B ?C ?D ?E ?F \\<equiv>\n  distinct6 ?A ?B ?C ?D ?E ?F \\<longrightarrow>\n  line ?B ?C \\<noteq> line ?E ?F \\<longrightarrow>\n  line ?C ?D \\<noteq> line ?A ?F \\<longrightarrow>\n  line ?A ?B \\<noteq> line ?D ?E \\<longrightarrow>\n  (let P = Pascal_Property.inter (line ?B ?C) (line ?E ?F);\n       Q = Pascal_Property.inter (line ?C ?D) (line ?A ?F)\n   in Let (Pascal_Property.inter (line ?A ?B) (line ?D ?E)) (col P Q))\n  ?P \\<noteq> ?Q \\<Longrightarrow> line ?P ?Q = line ?Q ?P\n  distinct6 F A B C D E\n  line A B \\<noteq> line D E\n  line B C \\<noteq> line E F\n  line F A \\<noteq> line C D\n\ngoal (1 subgoal):\n 1. col P Q R", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>distinct6 F A B C D E; line A B \\<noteq> line D E;\n   line B C \\<noteq> line E F; line F A \\<noteq> line C D\\<rbrakk>\n  \\<Longrightarrow> col P Q R\n\ngoal (1 subgoal):\n 1. is_pascal F A B C D E", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>distinct6 F A B C D E; line A B \\<noteq> line D E;\n   line B C \\<noteq> line E F; line F A \\<noteq> line C D\\<rbrakk>\n  \\<Longrightarrow> col P Q R", "show \"is_pascal F A B C D E\""], ["proof (prove)\nusing this:\n  \\<lbrakk>distinct6 F A B C D E; line A B \\<noteq> line D E;\n   line B C \\<noteq> line E F; line F A \\<noteq> line C D\\<rbrakk>\n  \\<Longrightarrow> col P Q R\n\ngoal (1 subgoal):\n 1. is_pascal F A B C D E", "by (metis P_def Q_def R_def is_pascal_def line_comm)"], ["proof (state)\nthis:\n  is_pascal F A B C D E\n\ngoal:\nNo subgoals!", "qed"], ["", "(* We recall that the group of permutations S_6 is generated by the 2-cycle [1 2]\nand the 6-cycle [1 2 3 4 5 6] *)\n\n(* Assuming Pappus's property, Pascal's property is stable under the 2-cycle [A B] *)"], ["", "lemma incid_C_AB: \n  assumes \"A \\<noteq> B\" and \"incid A l\" and \"incid B l\" and \"incid C l\"\n  shows \"incid C (line A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. incid C (line A B)", "using assms ax_uniqueness incidA_lAB incidB_lAB"], ["proof (prove)\nusing this:\n  A \\<noteq> B\n  incid A l\n  incid B l\n  incid C l\n  incid ?P ?l \\<longrightarrow>\n  incid ?Q ?l \\<longrightarrow>\n  incid ?P ?m \\<longrightarrow>\n  incid ?Q ?m \\<longrightarrow> ?P = ?Q \\<or> ?l = ?m\n  incid ?A (line ?A ?B)\n  incid ?B (line ?A ?B)\n\ngoal (1 subgoal):\n 1. incid C (line A B)", "by blast"], ["", "lemma incid_inters_left: \n  assumes \"P \\<in> inters l m\"\n  shows \"incid P l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. incid P l", "using assms inters_def"], ["proof (prove)\nusing this:\n  P \\<in> inters l m\n  inters ?l ?m \\<equiv> {P. incid P ?l \\<and> incid P ?m}\n\ngoal (1 subgoal):\n 1. incid P l", "by auto"], ["", "lemma incid_inters_right:\n  assumes \"P \\<in> inters l m\"\n  shows \"incid P m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. incid P m", "using assms incid_inters_left inters_comm"], ["proof (prove)\nusing this:\n  P \\<in> inters l m\n  ?P \\<in> inters ?l ?m \\<Longrightarrow> incid ?P ?l\n  inters ?l ?m = inters ?m ?l\n\ngoal (1 subgoal):\n 1. incid P m", "by blast"], ["", "lemma inter_in_inters: \"inter l m \\<in> inters l m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m \\<in> inters l m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m \\<in> inters l m", "have \"\\<exists>P. P \\<in> inters l m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>P. P \\<in> inters l m", "using inters_def ax2"], ["proof (prove)\nusing this:\n  inters ?l ?m \\<equiv> {P. incid P ?l \\<and> incid P ?m}\n  \\<exists>P. incid P ?l \\<and> incid P ?m\n\ngoal (1 subgoal):\n 1. \\<exists>P. P \\<in> inters l m", "by auto"], ["proof (state)\nthis:\n  \\<exists>P. P \\<in> inters l m\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m \\<in> inters l m", "show \"inter l m \\<in> inters l m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m \\<in> inters l m", "by (metis \\<open>\\<exists>P. P \\<in> inters l m\\<close> inter_def some_eq_ex)"], ["proof (state)\nthis:\n  Pascal_Property.inter l m \\<in> inters l m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma incid_inter_left: \"incid (inter l m) l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. incid (Pascal_Property.inter l m) l", "using incid_inters_left inter_in_inters"], ["proof (prove)\nusing this:\n  ?P \\<in> inters ?l ?m \\<Longrightarrow> incid ?P ?l\n  Pascal_Property.inter ?l ?m \\<in> inters ?l ?m\n\ngoal (1 subgoal):\n 1. incid (Pascal_Property.inter l m) l", "by blast"], ["", "lemma incid_inter_right: \"incid (inter l m) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. incid (Pascal_Property.inter l m) m", "using incid_inter_left inter_comm"], ["proof (prove)\nusing this:\n  incid (Pascal_Property.inter ?l ?m) ?l\n  Pascal_Property.inter ?l ?m = Pascal_Property.inter ?m ?l\n\ngoal (1 subgoal):\n 1. incid (Pascal_Property.inter l m) m", "by fastforce"], ["", "lemma col_A_B_ABl: \"col A B (inter (line A B) l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col A B (Pascal_Property.inter (line A B) l)", "using col_def incidA_lAB incidB_lAB incid_inter_left"], ["proof (prove)\nusing this:\n  col ?A ?B ?C \\<equiv>\n  \\<exists>l. incid ?A l \\<and> incid ?B l \\<and> incid ?C l\n  incid ?A (line ?A ?B)\n  incid ?B (line ?A ?B)\n  incid (Pascal_Property.inter ?l ?m) ?l\n\ngoal (1 subgoal):\n 1. col A B (Pascal_Property.inter (line A B) l)", "by blast"], ["", "lemma col_A_B_lAB: \"col A B (inter l (line A B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col A B (Pascal_Property.inter l (line A B))", "using col_A_B_ABl inter_comm"], ["proof (prove)\nusing this:\n  col ?A ?B (Pascal_Property.inter (line ?A ?B) ?l)\n  Pascal_Property.inter ?l ?m = Pascal_Property.inter ?m ?l\n\ngoal (1 subgoal):\n 1. col A B (Pascal_Property.inter l (line A B))", "by auto"], ["", "lemma inter_is_a_intersec: \"is_a_intersec (inter (line A B) (line C D)) A B C D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_a_intersec (Pascal_Property.inter (line A B) (line C D)) A B C D", "by (simp add: col_A_B_ABl col_A_B_lAB col_rot_CW is_a_intersec_def)"], ["", "definition line_ext :: \"Lines \\<Rightarrow> Points set\" where\n\"line_ext l \\<equiv> {P. incid P l}\""], ["", "lemma line_left_inter_1: \n  assumes \"P \\<in> line_ext l\" and \"P \\<notin> line_ext m\"\n  shows \"line (inter l m) P = l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. line (Pascal_Property.inter l m) P = l", "by (metis CollectD CollectI assms(1) assms(2) incidA_lAB incidB_lAB incid_inter_left \n      incid_inter_right line_ext_def uniq_inter)"], ["", "lemma line_left_inter_2:\n  assumes \"P \\<in> line_ext m\" and \"P \\<notin> line_ext l\"\n  shows \"line (inter l m) P = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. line (Pascal_Property.inter l m) P = m", "using assms inter_comm line_left_inter_1"], ["proof (prove)\nusing this:\n  P \\<in> line_ext m\n  P \\<notin> line_ext l\n  Pascal_Property.inter ?l ?m = Pascal_Property.inter ?m ?l\n  \\<lbrakk>?P \\<in> line_ext ?l; ?P \\<notin> line_ext ?m\\<rbrakk>\n  \\<Longrightarrow> line (Pascal_Property.inter ?l ?m) ?P = ?l\n\ngoal (1 subgoal):\n 1. line (Pascal_Property.inter l m) P = m", "by fastforce"], ["", "lemma line_right_inter_1:\n  assumes \"P \\<in> line_ext l\" and \"P \\<notin> line_ext m\"\n  shows \"line P (inter l m) = l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. line P (Pascal_Property.inter l m) = l", "by (metis assms line_comm line_left_inter_1)"], ["", "lemma line_right_inter_2:\n  assumes \"P \\<in> line_ext m\" and \"P \\<notin> line_ext l\"\n  shows \"line P (inter l m) = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. line P (Pascal_Property.inter l m) = m", "by (metis assms inter_comm line_comm line_left_inter_1)"], ["", "lemma inter_ABC_1: \n  assumes \"line A B \\<noteq> line C A\"\n  shows \"inter (line A B) (line C A) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line A B) (line C A) = A", "using assms ax_uniqueness incidA_lAB incidB_lAB incid_inter_left incid_inter_right"], ["proof (prove)\nusing this:\n  line A B \\<noteq> line C A\n  incid ?P ?l \\<longrightarrow>\n  incid ?Q ?l \\<longrightarrow>\n  incid ?P ?m \\<longrightarrow>\n  incid ?Q ?m \\<longrightarrow> ?P = ?Q \\<or> ?l = ?m\n  incid ?A (line ?A ?B)\n  incid ?B (line ?A ?B)\n  incid (Pascal_Property.inter ?l ?m) ?l\n  incid (Pascal_Property.inter ?l ?m) ?m\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line A B) (line C A) = A", "by blast"], ["", "lemma line_inter_2:\n  assumes \"inter l m \\<noteq> inter l' m\" \n  shows \"line (inter l m) (inter l' m) = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. line (Pascal_Property.inter l m) (Pascal_Property.inter l' m) = m", "using assms ax_uniqueness incidA_lAB incidB_lAB incid_inter_right"], ["proof (prove)\nusing this:\n  Pascal_Property.inter l m \\<noteq> Pascal_Property.inter l' m\n  incid ?P ?l \\<longrightarrow>\n  incid ?Q ?l \\<longrightarrow>\n  incid ?P ?m \\<longrightarrow>\n  incid ?Q ?m \\<longrightarrow> ?P = ?Q \\<or> ?l = ?m\n  incid ?A (line ?A ?B)\n  incid ?B (line ?A ?B)\n  incid (Pascal_Property.inter ?l ?m) ?m\n\ngoal (1 subgoal):\n 1. line (Pascal_Property.inter l m) (Pascal_Property.inter l' m) = m", "by blast"], ["", "lemma col_line_ext_1:\n  assumes \"col A B C\" and \"A \\<noteq> C\"\n  shows \"B \\<in> line_ext (line A C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> line_ext (line A C)", "by (metis CollectI assms ax_uniqueness col_def incidA_lAB incidB_lAB line_ext_def)"], ["", "lemma inter_line_ext_1:\n  assumes \"inter l m \\<in> line_ext n\" and \"l \\<noteq> m\" and \"l \\<noteq> n\"\n  shows \"inter l m = inter l n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = Pascal_Property.inter l n", "using assms(1) assms(3) ax_uniqueness incid_inter_left incid_inter_right line_ext_def"], ["proof (prove)\nusing this:\n  Pascal_Property.inter l m \\<in> line_ext n\n  l \\<noteq> n\n  incid ?P ?l \\<longrightarrow>\n  incid ?Q ?l \\<longrightarrow>\n  incid ?P ?m \\<longrightarrow>\n  incid ?Q ?m \\<longrightarrow> ?P = ?Q \\<or> ?l = ?m\n  incid (Pascal_Property.inter ?l ?m) ?l\n  incid (Pascal_Property.inter ?l ?m) ?m\n  line_ext ?l \\<equiv> {P. incid P ?l}\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = Pascal_Property.inter l n", "by blast"], ["", "lemma inter_line_ext_2:\n  assumes \"inter l m \\<in> line_ext n\" and \"l \\<noteq> m\" and \"m \\<noteq> n\"\n  shows \"inter l m = inter m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter l m = Pascal_Property.inter m n", "by (metis assms inter_comm inter_line_ext_1)"], ["", "definition pascal_prop :: \"bool\" where\n\"pascal_prop \\<equiv> \\<forall>A B C D E F. is_pascal A B C D E F \\<longrightarrow> is_pascal B A C D E F\""], ["", "lemma pappus_pascal:\n  assumes \"is_pappus\"\n  shows \"pascal_prop\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pascal_prop", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. pascal_prop", "have \"is_pascal B A C D E F\" if \"is_pascal A B C D E F\" for A B C D E F"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pascal B A C D E F", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. is_pascal B A C D E F", "define X Y Z where \"X = inter (line A C) (line E F)\" and \"Y = inter (line C D) (line B F)\"\n      and \"Z = inter (line B A) (line D E)\""], ["proof (state)\nthis:\n  X = Pascal_Property.inter (line A C) (line E F)\n  Y = Pascal_Property.inter (line C D) (line B F)\n  Z = Pascal_Property.inter (line B A) (line D E)\n\ngoal (1 subgoal):\n 1. is_pascal B A C D E F", "have \"col X Y Z\" if \"distinct6 B A C D E F\" and \"line A C \\<noteq> line E F\" and \"line C D \\<noteq> line B F\" \n      and \"line B A \\<noteq> line D E\" and \"line B C = line E F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt X_def Y_def ax_uniqueness col_ABA col_rot_CW distinct6_def incidB_lAB incid_inter_left \n          incid_inter_right line_comm that(1) that(2) that(3) that(5))"], ["proof (state)\nthis:\n  \\<lbrakk>distinct6 B A C D E F; line A C \\<noteq> line E F;\n   line C D \\<noteq> line B F; line B A \\<noteq> line D E;\n   line B C = line E F\\<rbrakk>\n  \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. is_pascal B A C D E F", "have \"col X Y Z\" if \"distinct6 B A C D E F\" and \"line A C \\<noteq> line E F\" and \"line C D \\<noteq> line B F\" \n      and \"line B A \\<noteq> line D E\" and \"line C D = line A F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (metis X_def Y_def col_ABA col_rot_CW distinct6_def inter_ABC_1 line_comm that(1) that(2) \n          that(3) that(5))"], ["proof (state)\nthis:\n  \\<lbrakk>distinct6 B A C D E F; line A C \\<noteq> line E F;\n   line C D \\<noteq> line B F; line B A \\<noteq> line D E;\n   line C D = line A F\\<rbrakk>\n  \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. is_pascal B A C D E F", "have \"col X Y Z\" if \"distinct6 B A C D E F\" and \"line A C \\<noteq> line E F\" and \"line C D \\<noteq> line B F\" \n      and \"line B A \\<noteq> line D E\" and \"line B C \\<noteq> line E F\" and \"line C D \\<noteq> line A F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. col X Y Z", "define W where \"W = inter (line A C) (line E F)\""], ["proof (state)\nthis:\n  W = Pascal_Property.inter (line A C) (line E F)\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col A C W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col A C W", "by (simp add: col_A_B_ABl W_def)"], ["proof (state)\nthis:\n  col A C W\n\ngoal (1 subgoal):\n 1. col X Y Z", "define P Q R where \"P = inter (line B C) (line E F)\"\n        and \"Q = inter (line A B) (line D E)\"\n        and \"R = inter (line C D) (line A F)\""], ["proof (state)\nthis:\n  P = Pascal_Property.inter (line B C) (line E F)\n  Q = Pascal_Property.inter (line A B) (line D E)\n  R = Pascal_Property.inter (line C D) (line A F)\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col P Q R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col P Q R", "using P_def Q_def R_def \\<open>is_pascal A B C D E F\\<close> col_2cycle distinct6_def is_pascal_def \n          line_comm that(1) that(4) that(5) that(6)"], ["proof (prove)\nusing this:\n  P = Pascal_Property.inter (line B C) (line E F)\n  Q = Pascal_Property.inter (line A B) (line D E)\n  R = Pascal_Property.inter (line C D) (line A F)\n  is_pascal A B C D E F\n  col ?P ?Q ?R \\<Longrightarrow> col ?P ?R ?Q\n  distinct6 ?A ?B ?C ?D ?E ?F \\<equiv>\n  ?A \\<noteq> ?B \\<and>\n  ?A \\<noteq> ?C \\<and>\n  ?A \\<noteq> ?D \\<and>\n  ?A \\<noteq> ?E \\<and>\n  ?A \\<noteq> ?F \\<and>\n  ?B \\<noteq> ?C \\<and>\n  ?B \\<noteq> ?D \\<and>\n  ?B \\<noteq> ?E \\<and>\n  ?B \\<noteq> ?F \\<and>\n  ?C \\<noteq> ?D \\<and>\n  ?C \\<noteq> ?E \\<and>\n  ?C \\<noteq> ?F \\<and>\n  ?D \\<noteq> ?E \\<and> ?D \\<noteq> ?F \\<and> ?E \\<noteq> ?F\n  is_pascal ?A ?B ?C ?D ?E ?F \\<equiv>\n  distinct6 ?A ?B ?C ?D ?E ?F \\<longrightarrow>\n  line ?B ?C \\<noteq> line ?E ?F \\<longrightarrow>\n  line ?C ?D \\<noteq> line ?A ?F \\<longrightarrow>\n  line ?A ?B \\<noteq> line ?D ?E \\<longrightarrow>\n  (let P = Pascal_Property.inter (line ?B ?C) (line ?E ?F);\n       Q = Pascal_Property.inter (line ?C ?D) (line ?A ?F)\n   in Let (Pascal_Property.inter (line ?A ?B) (line ?D ?E)) (col P Q))\n  ?P \\<noteq> ?Q \\<Longrightarrow> line ?P ?Q = line ?Q ?P\n  distinct6 B A C D E F\n  line B A \\<noteq> line D E\n  line B C \\<noteq> line E F\n  line C D \\<noteq> line A F\n\ngoal (1 subgoal):\n 1. col P Q R", "by auto"], ["proof (state)\nthis:\n  col P Q R\n\ngoal (1 subgoal):\n 1. col X Y Z", "(* Below we take care of a few degenerate cases *)"], ["proof (state)\nthis:\n  col P Q R\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"P = Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt P_def Q_def X_def Y_def Z_def \\<open>distinct6 B A C D E F\\<close> ax_uniqueness col_ABA col_def \n            distinct6_def incidA_lAB incidB_lAB incid_inter_left inter_comm that)"], ["proof (state)\nthis:\n  P = Q \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"P = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt P_def R_def X_def Y_def Z_def \\<open>distinct6 B A C D E F\\<close> \\<open>line A C \\<noteq> line E F\\<close> \n            \\<open>line C D \\<noteq> line B F\\<close> col_2cycle col_A_B_ABl col_rot_CW distinct6_def incidA_lAB \n            incidB_lAB incid_inter_left incid_inter_right that uniq_inter)"], ["proof (state)\nthis:\n  P = R \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"P = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt P_def Q_def R_def X_def Y_def Z_def \\<open>P = Q \\<Longrightarrow> col X Y Z\\<close> \\<open>P = R \\<Longrightarrow> col X Y Z\\<close> \n            \\<open>col P Q R\\<close> \\<open>line B C \\<noteq> line E F\\<close> ax_uniqueness col_def incidA_lAB incid_inter_left \n            incid_inter_right line_comm that)"], ["proof (state)\nthis:\n  P = A \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"P = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt P_def Q_def R_def X_def Y_def Z_def \\<open>P = R \\<Longrightarrow> col X Y Z\\<close> \\<open>col P Q R\\<close> \n            \\<open>line A C \\<noteq> line E F\\<close> ax_uniqueness col_def incidA_lAB incid_inter_left \n            incid_inter_right line_comm that)"], ["proof (state)\nthis:\n  P = C \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"P = W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt P_def Q_def R_def W_def X_def Y_def Z_def \\<open>P = C \\<Longrightarrow> col X Y Z\\<close> \\<open>P = Q \\<Longrightarrow> col X Y Z\\<close> \n            \\<open>col P Q R\\<close> \\<open>distinct6 B A C D E F\\<close> ax_uniqueness col_def distinct6_def incidB_lAB \n            incid_inter_left incid_inter_right line_comm that)"], ["proof (state)\nthis:\n  P = W \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"Q = R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt Q_def R_def X_def Y_def Z_def \\<open>distinct6 B A C D E F\\<close> ax_uniqueness col_A_B_lAB \n            col_rot_CW distinct6_def incidB_lAB incid_inter_right inter_comm line_comm that)"], ["proof (state)\nthis:\n  Q = R \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"Q = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt P_def Q_def R_def X_def Y_def Z_def \\<open>col P Q R\\<close> \\<open>distinct6 B A C D E F\\<close> \n            \\<open>line C D \\<noteq> line B F\\<close> ax_uniqueness col_ABA col_def distinct6_def incidA_lAB incidB_lAB \n            incid_inter_left incid_inter_right that)"], ["proof (state)\nthis:\n  Q = A \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"Q = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (metis P_def Q_def W_def \\<open>P = W \\<Longrightarrow> col X Y Z\\<close> \\<open>distinct6 B A C D E F\\<close> ax_uniqueness \n            distinct6_def incidA_lAB incid_inter_left line_comm that)"], ["proof (state)\nthis:\n  Q = C \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"Q = W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (metis Q_def W_def X_def Z_def col_ABA line_comm that)"], ["proof (state)\nthis:\n  Q = W \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"R = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt P_def Q_def R_def W_def X_def Y_def \\<open>P = W \\<Longrightarrow> col X Y Z\\<close> \\<open>Q = A \\<Longrightarrow> col X Y Z\\<close> \n            \\<open>col P Q R\\<close> \\<open>distinct6 B A C D E F\\<close> ax_uniqueness col_ABA col_def col_rot_CW distinct6_def \n            incidA_lAB incidB_lAB incid_inter_right inter_comm that)"], ["proof (state)\nthis:\n  R = A \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"R = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt P_def Q_def R_def X_def Y_def Z_def \\<open>col P Q R\\<close> \\<open>distinct6 B A C D E F\\<close> \n            \\<open>line A C \\<noteq> line E F\\<close> ax_uniqueness col_def distinct6_def incidA_lAB incidB_lAB \n            incid_inter_left inter_comm that)"], ["proof (state)\nthis:\n  R = C \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"R = W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (metis R_def W_def \\<open>R = A \\<Longrightarrow> col X Y Z\\<close> \\<open>R = C \\<Longrightarrow> col X Y Z\\<close> \\<open>line C D \\<noteq> line A F\\<close> \n            ax_uniqueness incidA_lAB incidB_lAB incid_inter_left incid_inter_right that)"], ["proof (state)\nthis:\n  R = W \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"A = W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (smt P_def Q_def R_def W_def X_def Y_def Z_def \\<open>P = R \\<Longrightarrow> col X Y Z\\<close> \\<open>Q = A \\<Longrightarrow> col X Y Z\\<close> \n            \\<open>col P Q R\\<close> \\<open>distinct6 B A C D E F\\<close> ax_uniqueness col_def distinct6_def incidA_lAB \n            incidB_lAB incid_inter_left incid_inter_right that)"], ["proof (state)\nthis:\n  A = W \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"C = W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (metis P_def W_def \\<open>P = C \\<Longrightarrow> col X Y Z\\<close> \\<open>line B C \\<noteq> line E F\\<close> ax_uniqueness incidB_lAB \n            incid_inter_left incid_inter_right that)"], ["proof (state)\nthis:\n  C = W \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have f1:\"col (inter (line P C) (line A Q)) (inter (line Q W) (line C R)) \n      (inter (line P W) (line A R))\" if \"distinct6 P Q R A C W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col (Pascal_Property.inter (line P C) (line A Q))\n     (Pascal_Property.inter (line Q W) (line C R))\n     (Pascal_Property.inter (line P W) (line A R))", "using assms(1) is_pappus_def is_pappus2_def \\<open>distinct6 P Q R A C W\\<close> \\<open>col P Q R\\<close>\n          \\<open>col A C W\\<close> inter_is_a_intersec inter_line_line_comm"], ["proof (prove)\nusing this:\n  is_pappus\n  is_pappus \\<equiv>\n  \\<forall>A B C D E F P Q R. is_pappus2 A B C D E F P Q R\n  is_pappus2 ?A ?B ?C ?A' ?B' ?C' ?P ?Q ?R \\<equiv>\n  distinct6 ?A ?B ?C ?A' ?B' ?C' \\<or>\n  ?A \\<noteq> ?B' \\<and>\n  ?A' \\<noteq> ?B \\<and>\n  line ?A ?B' \\<noteq> line ?A' ?B \\<and>\n  ?B \\<noteq> ?C' \\<and>\n  ?B' \\<noteq> ?C \\<and>\n  line ?B ?C' \\<noteq> line ?B' ?C \\<and>\n  ?A \\<noteq> ?C' \\<and>\n  ?A' \\<noteq> ?C \\<and> line ?A ?C' \\<noteq> line ?A' ?C \\<longrightarrow>\n  col ?A ?B ?C \\<longrightarrow>\n  col ?A' ?B' ?C' \\<longrightarrow>\n  is_a_intersec ?P ?A ?B' ?A' ?B \\<longrightarrow>\n  is_a_intersec ?Q ?B ?C' ?B' ?C \\<longrightarrow>\n  is_a_intersec ?R ?A ?C' ?A' ?C \\<longrightarrow> col ?P ?Q ?R\n  distinct6 P Q R A C W\n  col P Q R\n  col A C W\n  is_a_intersec (Pascal_Property.inter (line ?A ?B) (line ?C ?D)) ?A ?B ?C\n   ?D\n  ?C \\<noteq> ?D \\<Longrightarrow>\n  Pascal_Property.inter (line ?A ?B) (line ?C ?D) =\n  Pascal_Property.inter (line ?A ?B) (line ?D ?C)\n\ngoal (1 subgoal):\n 1. col (Pascal_Property.inter (line P C) (line A Q))\n     (Pascal_Property.inter (line Q W) (line C R))\n     (Pascal_Property.inter (line P W) (line A R))", "by metis"], ["proof (state)\nthis:\n  distinct6 P Q R A C W \\<Longrightarrow>\n  col (Pascal_Property.inter (line P C) (line A Q))\n   (Pascal_Property.inter (line Q W) (line C R))\n   (Pascal_Property.inter (line P W) (line A R))\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"C \\<in> line_ext (line E F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "using P_def \\<open>P = C \\<Longrightarrow> col X Y Z\\<close> \\<open>line B C \\<noteq> line E F\\<close> incidB_lAB line_ext_def that uniq_inter"], ["proof (prove)\nusing this:\n  P = Pascal_Property.inter (line B C) (line E F)\n  P = C \\<Longrightarrow> col X Y Z\n  line B C \\<noteq> line E F\n  incid ?B (line ?A ?B)\n  line_ext ?l \\<equiv> {P. incid P ?l}\n  C \\<in> line_ext (line E F)\n  \\<lbrakk>?l \\<noteq> ?m; incid ?P ?l; incid ?P ?m\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter ?l ?m = ?P\n\ngoal (1 subgoal):\n 1. col X Y Z", "by auto"], ["proof (state)\nthis:\n  C \\<in> line_ext (line E F) \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"A \\<in> line_ext (line D E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (metis Q_def \\<open>Q = A \\<Longrightarrow> col X Y Z\\<close> \\<open>line B A \\<noteq> line D E\\<close> ax_uniqueness incidA_lAB \n            incid_inter_left incid_inter_right line_comm line_ext_def mem_Collect_eq that)"], ["proof (state)\nthis:\n  A \\<in> line_ext (line D E) \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"line B C = line A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (metis P_def W_def \\<open>P = W \\<Longrightarrow> col X Y Z\\<close> \\<open>distinct6 B A C D E F\\<close> ax_uniqueness \n            distinct6_def incidA_lAB incidB_lAB that)"], ["proof (state)\nthis:\n  line B C = line A B \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "(* We can resume our proof with the non-degenerate case *)"], ["proof (state)\nthis:\n  line B C = line A B \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have f2:\"inter (line P C) (line A Q) = B\" if\n        \"C \\<notin> line_ext (line E F)\" and \"A \\<notin> line_ext (line D E)\" and \"line B C \\<noteq> line A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line P C) (line A Q) = B", "by (smt CollectI P_def Q_def ax_uniqueness incidA_lAB incidB_lAB incid_inter_left \n            incid_inter_right line_ext_def that(1) that(2) that(3))"], ["proof (state)\nthis:\n  \\<lbrakk>C \\<notin> line_ext (line E F); A \\<notin> line_ext (line D E);\n   line B C \\<noteq> line A B\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line P C) (line A Q) = B\n\ngoal (1 subgoal):\n 1. col X Y Z", "(* Again, we need to take care of a few particular cases *)"], ["proof (state)\nthis:\n  \\<lbrakk>C \\<notin> line_ext (line E F); A \\<notin> line_ext (line D E);\n   line B C \\<noteq> line A B\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line P C) (line A Q) = B\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"line E F = line A F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (metis W_def \\<open>A = W \\<Longrightarrow> col X Y Z\\<close> \\<open>line A C \\<noteq> line E F\\<close> inter_ABC_1 inter_comm that)"], ["proof (state)\nthis:\n  line E F = line A F \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"A \\<in> line_ext (line C D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "using R_def \\<open>R = A \\<Longrightarrow> col X Y Z\\<close> \\<open>line C D \\<noteq> line A F\\<close> ax_uniqueness incidA_lAB \n          incid_inter_left incid_inter_right line_ext_def that"], ["proof (prove)\nusing this:\n  R = Pascal_Property.inter (line C D) (line A F)\n  R = A \\<Longrightarrow> col X Y Z\n  line C D \\<noteq> line A F\n  incid ?P ?l \\<longrightarrow>\n  incid ?Q ?l \\<longrightarrow>\n  incid ?P ?m \\<longrightarrow>\n  incid ?Q ?m \\<longrightarrow> ?P = ?Q \\<or> ?l = ?m\n  incid ?A (line ?A ?B)\n  incid (Pascal_Property.inter ?l ?m) ?l\n  incid (Pascal_Property.inter ?l ?m) ?m\n  line_ext ?l \\<equiv> {P. incid P ?l}\n  A \\<in> line_ext (line C D)\n\ngoal (1 subgoal):\n 1. col X Y Z", "by blast"], ["proof (state)\nthis:\n  A \\<in> line_ext (line C D) \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"inter (line B C) (line E F) = inter (line A C) (line E F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (simp add: P_def W_def \\<open>P = W \\<Longrightarrow> col X Y Z\\<close> that)"], ["proof (state)\nthis:\n  Pascal_Property.inter (line B C) (line E F) =\n  Pascal_Property.inter (line A C) (line E F) \\<Longrightarrow>\n  col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "(* We resume the general case *)"], ["proof (state)\nthis:\n  Pascal_Property.inter (line B C) (line E F) =\n  Pascal_Property.inter (line A C) (line E F) \\<Longrightarrow>\n  col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have f3:\"inter (line P W) (line A R) = F\" if \"line E F \\<noteq> line A F\" and \"A \\<notin> line_ext (line C D)\"\n        and \"inter (line B C) (line E F) \\<noteq> inter (line A C) (line E F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line P W) (line A R) = F", "by (smt CollectI P_def R_def W_def ax_uniqueness incidA_lAB incidB_lAB incid_inter_left \n            incid_inter_right line_ext_def that(1) that(2) that(3))"], ["proof (state)\nthis:\n  \\<lbrakk>line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line P W) (line A R) = F\n\ngoal (1 subgoal):\n 1. col X Y Z", "(* Once again, first we need to handle a particular case, namely C \\<in> AF, then \n            we resume the general case *)"], ["proof (state)\nthis:\n  \\<lbrakk>line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line P W) (line A R) = F\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"col X Y Z\" if \"C \\<in> line_ext (line A F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "using R_def \\<open>R = C \\<Longrightarrow> col X Y Z\\<close> \\<open>line C D \\<noteq> line A F\\<close> ax_uniqueness incidA_lAB \n          incid_inter_left incid_inter_right line_ext_def that"], ["proof (prove)\nusing this:\n  R = Pascal_Property.inter (line C D) (line A F)\n  R = C \\<Longrightarrow> col X Y Z\n  line C D \\<noteq> line A F\n  incid ?P ?l \\<longrightarrow>\n  incid ?Q ?l \\<longrightarrow>\n  incid ?P ?m \\<longrightarrow>\n  incid ?Q ?m \\<longrightarrow> ?P = ?Q \\<or> ?l = ?m\n  incid ?A (line ?A ?B)\n  incid (Pascal_Property.inter ?l ?m) ?l\n  incid (Pascal_Property.inter ?l ?m) ?m\n  line_ext ?l \\<equiv> {P. incid P ?l}\n  C \\<in> line_ext (line A F)\n\ngoal (1 subgoal):\n 1. col X Y Z", "by blast"], ["proof (state)\nthis:\n  C \\<in> line_ext (line A F) \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. col X Y Z", "have f4:\"inter (line Q W) (line C R) = inter (line Q W) (line C D)\" if \"C \\<notin> line_ext (line A F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line Q W) (line C R) =\n    Pascal_Property.inter (line Q W) (line C D)", "using R_def incidA_lAB line_ext_def line_right_inter_1 that"], ["proof (prove)\nusing this:\n  R = Pascal_Property.inter (line C D) (line A F)\n  incid ?A (line ?A ?B)\n  line_ext ?l \\<equiv> {P. incid P ?l}\n  \\<lbrakk>?P \\<in> line_ext ?l; ?P \\<notin> line_ext ?m\\<rbrakk>\n  \\<Longrightarrow> line ?P (Pascal_Property.inter ?l ?m) = ?l\n  C \\<notin> line_ext (line A F)\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line Q W) (line C R) =\n    Pascal_Property.inter (line Q W) (line C D)", "by auto"], ["proof (state)\nthis:\n  C \\<notin> line_ext (line A F) \\<Longrightarrow>\n  Pascal_Property.inter (line Q W) (line C R) =\n  Pascal_Property.inter (line Q W) (line C D)\n\ngoal (1 subgoal):\n 1. col X Y Z", "then"], ["proof (chain)\npicking this:\n  C \\<notin> line_ext (line A F) \\<Longrightarrow>\n  Pascal_Property.inter (line Q W) (line C R) =\n  Pascal_Property.inter (line Q W) (line C D)", "have \"inter (line Q W) (line C D) \\<in> line_ext (line B F)\" if \"distinct6 P Q R A C W\"\n        and  \"C \\<notin> line_ext (line E F)\" and \"A \\<notin> line_ext (line D E)\" and \"line B C \\<noteq> line A B\"\n        and \"line E F \\<noteq> line A F\" and \"A \\<notin> line_ext (line C D)\"\n        and \"inter (line B C) (line E F) \\<noteq> inter (line A C) (line E F)\""], ["proof (prove)\nusing this:\n  C \\<notin> line_ext (line A F) \\<Longrightarrow>\n  Pascal_Property.inter (line Q W) (line C R) =\n  Pascal_Property.inter (line Q W) (line C D)\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line Q W) (line C D) \\<in> line_ext (line B F)", "by (smt R_def \\<open>distinct6 B A C D E F\\<close> ax_uniqueness col_line_ext_1 distinct6_def f1 f2 f3 \n            incidA_lAB incidB_lAB incid_inter_left that(1) that(2) that(3) that(5) that(6) that(7))"], ["proof (state)\nthis:\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line Q W) (line C D)\n                    \\<in> line_ext (line B F)\n\ngoal (1 subgoal):\n 1. col X Y Z", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line Q W) (line C D)\n                    \\<in> line_ext (line B F)", "have \"inter (line Q W) (line C D) = inter (line C D) (line B F)\" if \"distinct6 P Q R A C W\"\n        and  \"C \\<notin> line_ext (line E F)\" and \"A \\<notin> line_ext (line D E)\" and \"line B C \\<noteq> line A B\"\n        and \"line E F \\<noteq> line A F\" and \"A \\<notin> line_ext (line C D)\"\n        and \"inter (line B C) (line E F) \\<noteq> inter (line A C) (line E F)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line Q W) (line C D)\n                    \\<in> line_ext (line B F)\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line Q W) (line C D) =\n    Pascal_Property.inter (line C D) (line B F)", "by (smt W_def \\<open>distinct6 B A C D E F\\<close> \\<open>line C D \\<noteq> line B F\\<close> ax_uniqueness distinct6_def f2 \n            incidA_lAB incidB_lAB incid_inter_left incid_inter_right inter_line_ext_2 that(1) that(2) \n            that(3) that(5) that(6) that(7))"], ["proof (state)\nthis:\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line Q W) (line C D) =\n                    Pascal_Property.inter (line C D) (line B F)\n\ngoal (1 subgoal):\n 1. col X Y Z", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line Q W) (line C D) =\n                    Pascal_Property.inter (line C D) (line B F)\n\ngoal (1 subgoal):\n 1. col X Y Z", "have \"inter (line C D) (line B F) \\<in> line_ext (line Q W)\" if \"distinct6 P Q R A C W\"\n        and  \"C \\<notin> line_ext (line E F)\" and \"A \\<notin> line_ext (line D E)\" and \"line B C \\<noteq> line A B\"\n        and \"line E F \\<noteq> line A F\" and \"A \\<notin> line_ext (line C D)\"\n        and \"inter (line B C) (line E F) \\<noteq> inter (line A C) (line E F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line C D) (line B F) \\<in> line_ext (line Q W)", "by (metis calculation col_2cycle col_A_B_ABl col_line_ext_1 distinct6_def that(1) that(2) \n            that(3) that(4) that(5) that(6) that(7))"], ["proof (state)\nthis:\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line C D) (line B F)\n                    \\<in> line_ext (line Q W)\n\ngoal (1 subgoal):\n 1. col X Y Z", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line Q W) (line C D) =\n                    Pascal_Property.inter (line C D) (line B F)\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line C D) (line B F)\n                    \\<in> line_ext (line Q W)", "have \"col (inter (line A C) (line E F)) (inter (line C D) (line B F))\n      (inter (line A B) (line D E))\" if \"distinct6 P Q R A C W\"\n        and  \"C \\<notin> line_ext (line E F)\" and \"A \\<notin> line_ext (line D E)\" and \"line B C \\<noteq> line A B\"\n        and \"line E F \\<noteq> line A F\" and \"A \\<notin> line_ext (line C D)\"\n        and \"inter (line B C) (line E F) \\<noteq> inter (line A C) (line E F)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line Q W) (line C D) =\n                    Pascal_Property.inter (line C D) (line B F)\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line C D) (line B F)\n                    \\<in> line_ext (line Q W)\n\ngoal (1 subgoal):\n 1. col (Pascal_Property.inter (line A C) (line E F))\n     (Pascal_Property.inter (line C D) (line B F))\n     (Pascal_Property.inter (line A B) (line D E))", "by (metis Q_def W_def col_A_B_ABl col_rot_CW that(1) that(2) that(3) that(4) that(5) that(6) \n            that(7))"], ["proof (state)\nthis:\n  \\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F);\n   A \\<notin> line_ext (line D E); line B C \\<noteq> line A B;\n   line E F \\<noteq> line A F; A \\<notin> line_ext (line C D);\n   Pascal_Property.inter (line B C) (line E F) \\<noteq>\n   Pascal_Property.inter (line A C) (line E F)\\<rbrakk>\n  \\<Longrightarrow> col (Pascal_Property.inter (line A C) (line E F))\n                     (Pascal_Property.inter (line C D) (line B F))\n                     (Pascal_Property.inter (line A B) (line D E))\n\ngoal (1 subgoal):\n 1. col X Y Z", "show \"col X Y Z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col X Y Z", "by (metis P_def W_def X_def Y_def Z_def \\<open>A = W \\<Longrightarrow> col X Y Z\\<close> \\<open>A \\<in> line_ext (line C D) \\<Longrightarrow> col X Y Z\\<close> \n            \\<open>A \\<in> line_ext (line D E) \\<Longrightarrow> col X Y Z\\<close> \\<open>C = W \\<Longrightarrow> col X Y Z\\<close> \\<open>C \\<in> line_ext (line E F) \\<Longrightarrow> col X Y Z\\<close> \n            \\<open>P = A \\<Longrightarrow> col X Y Z\\<close> \\<open>P = C \\<Longrightarrow> col X Y Z\\<close> \\<open>P = Q \\<Longrightarrow> col X Y Z\\<close> \\<open>P = R \\<Longrightarrow> col X Y Z\\<close> \n            \\<open>Pascal_Property.inter (line B C) (line E F) = Pascal_Property.inter (line A C) (line E F) \\<Longrightarrow> col X Y Z\\<close> \n            \\<open>Q = A \\<Longrightarrow> col X Y Z\\<close> \\<open>Q = C \\<Longrightarrow> col X Y Z\\<close> \\<open>Q = R \\<Longrightarrow> col X Y Z\\<close> \\<open>Q = W \\<Longrightarrow> col X Y Z\\<close> \\<open>R = A \\<Longrightarrow> col X Y Z\\<close> \n            \\<open>R = C \\<Longrightarrow> col X Y Z\\<close> \\<open>R = W \\<Longrightarrow> col X Y Z\\<close> \\<open>\\<lbrakk>distinct6 P Q R A C W; C \\<notin> line_ext (line E F); A \\<notin> line_ext (line D E); line B C \\<noteq> line A B; line E F \\<noteq> line A F; A \\<notin> line_ext (line C D); Pascal_Property.inter (line B C) (line E F) \\<noteq> Pascal_Property.inter (line A C) (line E F)\\<rbrakk> \\<Longrightarrow> col (Pascal_Property.inter (line A C) (line E F)) (Pascal_Property.inter (line C D) (line B F)) (Pascal_Property.inter (line A B) (line D E))\\<close> \n            \\<open>line B C = line A B \\<Longrightarrow> col X Y Z\\<close> \\<open>line E F = line A F \\<Longrightarrow> col X Y Z\\<close> distinct6_def line_comm)"], ["proof (state)\nthis:\n  col X Y Z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>distinct6 B A C D E F; line A C \\<noteq> line E F;\n   line C D \\<noteq> line B F; line B A \\<noteq> line D E;\n   line B C \\<noteq> line E F; line C D \\<noteq> line A F\\<rbrakk>\n  \\<Longrightarrow> col X Y Z\n\ngoal (1 subgoal):\n 1. is_pascal B A C D E F", "show \"is_pascal B A C D E F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pascal B A C D E F", "using X_def Y_def Z_def \\<open>\\<lbrakk>distinct6 B A C D E F; line A C \\<noteq> line E F; line C D \\<noteq> line B F; line B A \\<noteq> line D E; line B C = line E F\\<rbrakk> \\<Longrightarrow> col X Y Z\\<close> \n         \\<open>\\<lbrakk>distinct6 B A C D E F; line A C \\<noteq> line E F; line C D \\<noteq> line B F; line B A \\<noteq> line D E; line B C \\<noteq> line E F; line C D \\<noteq> line A F\\<rbrakk> \\<Longrightarrow> col X Y Z\\<close> \n         \\<open>\\<lbrakk>distinct6 B A C D E F; line A C \\<noteq> line E F; line C D \\<noteq> line B F; line B A \\<noteq> line D E; line C D = line A F\\<rbrakk> \\<Longrightarrow> col X Y Z\\<close> \n         is_pascal_def"], ["proof (prove)\nusing this:\n  X = Pascal_Property.inter (line A C) (line E F)\n  Y = Pascal_Property.inter (line C D) (line B F)\n  Z = Pascal_Property.inter (line B A) (line D E)\n  \\<lbrakk>distinct6 B A C D E F; line A C \\<noteq> line E F;\n   line C D \\<noteq> line B F; line B A \\<noteq> line D E;\n   line B C = line E F\\<rbrakk>\n  \\<Longrightarrow> col X Y Z\n  \\<lbrakk>distinct6 B A C D E F; line A C \\<noteq> line E F;\n   line C D \\<noteq> line B F; line B A \\<noteq> line D E;\n   line B C \\<noteq> line E F; line C D \\<noteq> line A F\\<rbrakk>\n  \\<Longrightarrow> col X Y Z\n  \\<lbrakk>distinct6 B A C D E F; line A C \\<noteq> line E F;\n   line C D \\<noteq> line B F; line B A \\<noteq> line D E;\n   line C D = line A F\\<rbrakk>\n  \\<Longrightarrow> col X Y Z\n  is_pascal ?A ?B ?C ?D ?E ?F \\<equiv>\n  distinct6 ?A ?B ?C ?D ?E ?F \\<longrightarrow>\n  line ?B ?C \\<noteq> line ?E ?F \\<longrightarrow>\n  line ?C ?D \\<noteq> line ?A ?F \\<longrightarrow>\n  line ?A ?B \\<noteq> line ?D ?E \\<longrightarrow>\n  (let P = Pascal_Property.inter (line ?B ?C) (line ?E ?F);\n       Q = Pascal_Property.inter (line ?C ?D) (line ?A ?F)\n   in Let (Pascal_Property.inter (line ?A ?B) (line ?D ?E)) (col P Q))\n\ngoal (1 subgoal):\n 1. is_pascal B A C D E F", "by force"], ["proof (state)\nthis:\n  is_pascal B A C D E F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_pascal ?A ?B ?C ?D ?E ?F \\<Longrightarrow> is_pascal ?B ?A ?C ?D ?E ?F\n\ngoal (1 subgoal):\n 1. pascal_prop", "thus \"pascal_prop\""], ["proof (prove)\nusing this:\n  is_pascal ?A ?B ?C ?D ?E ?F \\<Longrightarrow> is_pascal ?B ?A ?C ?D ?E ?F\n\ngoal (1 subgoal):\n 1. pascal_prop", "using pascal_prop_def"], ["proof (prove)\nusing this:\n  is_pascal ?A ?B ?C ?D ?E ?F \\<Longrightarrow> is_pascal ?B ?A ?C ?D ?E ?F\n  pascal_prop \\<equiv>\n  \\<forall>A B C D E F.\n     is_pascal A B C D E F \\<longrightarrow> is_pascal B A C D E F\n\ngoal (1 subgoal):\n 1. pascal_prop", "by auto"], ["proof (state)\nthis:\n  pascal_prop\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_pascal_under_alternate_vertices:\n  assumes \"pascal_prop\" and \"is_pascal A B C A' B' C'\"\n  shows \"is_pascal A B' C A' B C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pascal A B' C A' B C'", "using assms pascal_prop_def is_pascal_rot_CW"], ["proof (prove)\nusing this:\n  pascal_prop\n  is_pascal A B C A' B' C'\n  pascal_prop \\<equiv>\n  \\<forall>A B C D E F.\n     is_pascal A B C D E F \\<longrightarrow> is_pascal B A C D E F\n  is_pascal ?A ?B ?C ?D ?E ?F \\<Longrightarrow> is_pascal ?F ?A ?B ?C ?D ?E\n\ngoal (1 subgoal):\n 1. is_pascal A B' C A' B C'", "by presburger"], ["", "lemma col_inter:\n  assumes \"distinct6 A B C D E F\" and \"col A B C\" and \"col D E F\"\n  shows \"inter (line B C) (line E F) = inter (line A B) (line D E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line B C) (line E F) =\n    Pascal_Property.inter (line A B) (line D E)", "by (smt assms ax_uniqueness col_def distinct6_def incidA_lAB incidB_lAB)"], ["", "lemma pascal_pappus1:\n  assumes \"pascal_prop\"\n  shows \"is_pappus1 A B C A' B' C' P Q R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pappus1 A B C A' B' C' P Q R", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. is_pappus1 A B C A' B' C' P Q R", "define a1 a2 a3 a4 a5 a6 where \"a1 = distinct6 A B C A' B' C'\"  and \"a2 = col A B C\" and \n\"a3 = col A' B' C'\" and \"a4 = is_a_proper_intersec P A B' A' B\" and \"a5 = is_a_proper_intersec Q B C' B' C\" \nand \"a6 = is_a_proper_intersec R A C' A' C\""], ["proof (state)\nthis:\n  a1 = distinct6 A B C A' B' C'\n  a2 = col A B C\n  a3 = col A' B' C'\n  a4 = is_a_proper_intersec P A B' A' B\n  a5 = is_a_proper_intersec Q B C' B' C\n  a6 = is_a_proper_intersec R A C' A' C\n\ngoal (1 subgoal):\n 1. is_pappus1 A B C A' B' C' P Q R", "(* i.e. we have assumed a Pappus configuration *)"], ["proof (state)\nthis:\n  a1 = distinct6 A B C A' B' C'\n  a2 = col A B C\n  a3 = col A' B' C'\n  a4 = is_a_proper_intersec P A B' A' B\n  a5 = is_a_proper_intersec Q B C' B' C\n  a6 = is_a_proper_intersec R A C' A' C\n\ngoal (1 subgoal):\n 1. is_pappus1 A B C A' B' C' P Q R", "have \"inter (line B C) (line B' C') = inter (line A B) (line A' B')\" if a1 a2 a3 a4 a5 a6"], ["proof (prove)\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line B C) (line B' C') =\n    Pascal_Property.inter (line A B) (line A' B')", "using a1_def a2_def a3_def col_inter that(1) that(2) that(3)"], ["proof (prove)\nusing this:\n  a1 = distinct6 A B C A' B' C'\n  a2 = col A B C\n  a3 = col A' B' C'\n  \\<lbrakk>distinct6 ?A ?B ?C ?D ?E ?F; col ?A ?B ?C; col ?D ?E ?F\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line ?B ?C) (line ?E ?F) =\n                    Pascal_Property.inter (line ?A ?B) (line ?D ?E)\n  a1\n  a2\n  a3\n\ngoal (1 subgoal):\n 1. Pascal_Property.inter (line B C) (line B' C') =\n    Pascal_Property.inter (line A B) (line A' B')", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line B C) (line B' C') =\n                    Pascal_Property.inter (line A B) (line A' B')\n\ngoal (1 subgoal):\n 1. is_pappus1 A B C A' B' C' P Q R", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line B C) (line B' C') =\n                    Pascal_Property.inter (line A B) (line A' B')", "have \"is_pascal A B C A' B' C'\" if a1 a2 a3 a4 a5 a6"], ["proof (prove)\nusing this:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line B C) (line B' C') =\n                    Pascal_Property.inter (line A B) (line A' B')\n\ngoal (1 subgoal):\n 1. is_pascal A B C A' B' C'", "using a1_def col_ABA is_pascal_def that(1) that(2) that(3) that(4) that(5) that(6)"], ["proof (prove)\nusing this:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> Pascal_Property.inter (line B C) (line B' C') =\n                    Pascal_Property.inter (line A B) (line A' B')\n  a1 = distinct6 A B C A' B' C'\n  col ?A ?B ?A\n  is_pascal ?A ?B ?C ?D ?E ?F \\<equiv>\n  distinct6 ?A ?B ?C ?D ?E ?F \\<longrightarrow>\n  line ?B ?C \\<noteq> line ?E ?F \\<longrightarrow>\n  line ?C ?D \\<noteq> line ?A ?F \\<longrightarrow>\n  line ?A ?B \\<noteq> line ?D ?E \\<longrightarrow>\n  (let P = Pascal_Property.inter (line ?B ?C) (line ?E ?F);\n       Q = Pascal_Property.inter (line ?C ?D) (line ?A ?F)\n   in Let (Pascal_Property.inter (line ?A ?B) (line ?D ?E)) (col P Q))\n  a1\n  a2\n  a3\n  a4\n  a5\n  a6\n\ngoal (1 subgoal):\n 1. is_pascal A B C A' B' C'", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> is_pascal A B C A' B' C'\n\ngoal (1 subgoal):\n 1. is_pappus1 A B C A' B' C' P Q R", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> is_pascal A B C A' B' C'", "have \"is_pascal A B' C A' B C'\" if a1 a2 a3 a4 a5 a6"], ["proof (prove)\nusing this:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> is_pascal A B C A' B' C'\n\ngoal (1 subgoal):\n 1. is_pascal A B' C A' B C'", "using assms is_pascal_under_alternate_vertices that(1) that(2) that(3) that(4) that(5) that(6)"], ["proof (prove)\nusing this:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> is_pascal A B C A' B' C'\n  pascal_prop\n  \\<lbrakk>pascal_prop; is_pascal ?A ?B ?C ?A' ?B' ?C'\\<rbrakk>\n  \\<Longrightarrow> is_pascal ?A ?B' ?C ?A' ?B ?C'\n  a1\n  a2\n  a3\n  a4\n  a5\n  a6\n\ngoal (1 subgoal):\n 1. is_pascal A B' C A' B C'", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> is_pascal A B' C A' B C'\n\ngoal (1 subgoal):\n 1. is_pappus1 A B C A' B' C' P Q R", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> is_pascal A B' C A' B C'", "have \"col P Q R\" if a1 a2 a3 a4 a5 a6"], ["proof (prove)\nusing this:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk>\n  \\<Longrightarrow> is_pascal A B' C A' B C'\n\ngoal (1 subgoal):\n 1. col P Q R", "by (smt a1_def a4_def a5_def a6_def ax_uniqueness col_def distinct6_def incidB_lAB incid_inter_left \n        incid_inter_right is_a_proper_intersec_def is_pascal_def line_comm that(1) that(2) that(3) \n        that(4) that(5) that(6))"], ["proof (state)\nthis:\n  \\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk> \\<Longrightarrow> col P Q R\n\ngoal (1 subgoal):\n 1. is_pappus1 A B C A' B' C' P Q R", "show \"is_pappus1 A B C A' B' C' P Q R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pappus1 A B C A' B' C' P Q R", "by (simp add: \\<open>\\<lbrakk>a1; a2; a3; a4; a5; a6\\<rbrakk> \\<Longrightarrow> col P Q R\\<close> a1_def a2_def a3_def a4_def a5_def a6_def \n        is_pappus1_def)"], ["proof (state)\nthis:\n  is_pappus1 A B C A' B' C' P Q R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pascal_pappus:\n  assumes \"pascal_prop\"\n  shows \"is_pappus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pappus", "by (simp add: assms is_pappus_def pappus12 pascal_pappus1)"], ["", "theorem pappus_iff_pascal: \"is_pappus = pascal_prop\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_pappus = pascal_prop", "using pappus_pascal pascal_pappus"], ["proof (prove)\nusing this:\n  is_pappus \\<Longrightarrow> pascal_prop\n  pascal_prop \\<Longrightarrow> is_pappus\n\ngoal (1 subgoal):\n 1. is_pappus = pascal_prop", "by blast"], ["", "end"]]}