{"file_name": "/home/qj213/afp-2021-10-22/thys/Stochastic_Matrices/Stochastic_Matrix_Perron_Frobenius.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stochastic_Matrices", "problem_names": ["lemma pf_nonneg_mat_st_mat: \"pf_nonneg_mat (st_mat A)\"", "lemma stoch_non_neg_vec_norm1: assumes \"stoch_vec (v :: real ^ 'n)\" \"non_neg_vec v\" \n  shows \"norm1 v = 1\"", "lemma stationary_distribution_exists: \"\\<exists> v. A *st v = v\"", "lemma stationary_distribution_unique: \n  assumes \"fixed_mat.irreducible (st_mat A)\" \n  shows \"\\<exists>! v. A *st v = v\"", "lemma stationary_distribution_exists: \n  \"\\<exists> x. stationary_distribution (pmf_of_st_vec x)\"", "lemma stationary_distribution_unique: assumes \"fixed_mat.irreducible (st_mat A)\" \n  shows \"\\<exists>! N. stationary_distribution N\""], "translations": [["", "lemma pf_nonneg_mat_st_mat: \"pf_nonneg_mat (st_mat A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pf_nonneg_mat (st_mat A)", "by (unfold_locales, auto simp: non_neg_mat_st_mat)"], ["", "lemma stoch_non_neg_vec_norm1: assumes \"stoch_vec (v :: real ^ 'n)\" \"non_neg_vec v\" \n  shows \"norm1 v = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm1 v = 1", "unfolding assms(1)[unfolded stoch_vec_def, symmetric] norm1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>UNIV. norm (v $h i)) = sum (($h) v) UNIV", "by (rule sum.cong, insert assms(2)[unfolded non_neg_vec_def], auto)"], ["", "lemma stationary_distribution_exists: \"\\<exists> v. A *st v = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "let ?A = \"st_mat A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "let ?c = \"complex_of_real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "let ?B = \"\\<chi> i j. ?c (?A $ i $ j)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "have \"real_non_neg_mat ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_non_neg_mat (\\<chi>i j. complex_of_real (st_mat A $h i $h j))", "using non_neg_mat_st_mat[of A]"], ["proof (prove)\nusing this:\n  non_neg_mat (st_mat A)\n\ngoal (1 subgoal):\n 1. real_non_neg_mat (\\<chi>i j. complex_of_real (st_mat A $h i $h j))", "unfolding real_non_neg_mat_def elements_mat_h_def non_neg_mat_def"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>range (\\<lambda>(i, y). st_mat A $h i $h y). 0 \\<le> a\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>range\n                    (\\<lambda>(i, y).\n                        (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) $h\n                        i $h\n                        y).\n       a \\<in> \\<real> \\<and> 0 \\<le> Re a", "by auto"], ["proof (state)\nthis:\n  real_non_neg_mat (\\<chi>i j. complex_of_real (st_mat A $h i $h j))\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from Perron_Frobenius.perron_frobenius_both[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>v.\n     eigen_vector (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) v\n      (complex_of_real\n        (HMA_Connect.spectral_radius\n          (\\<chi>i j. complex_of_real (st_mat A $h i $h j)))) \\<and>\n     real_non_neg_vec v", "obtain v a where \n    ev: \"eigen_vector ?B v (?c a)\" and nn: \"real_non_neg_vec v\" \n    and a: \"a = HMA_Connect.spectral_radius ?B\""], ["proof (prove)\nusing this:\n  \\<exists>v.\n     eigen_vector (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) v\n      (complex_of_real\n        (HMA_Connect.spectral_radius\n          (\\<chi>i j. complex_of_real (st_mat A $h i $h j)))) \\<and>\n     real_non_neg_vec v\n\ngoal (1 subgoal):\n 1. (\\<And>v a.\n        \\<lbrakk>eigen_vector\n                  (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) v\n                  (complex_of_real a);\n         real_non_neg_vec v;\n         a =\n         HMA_Connect.spectral_radius\n          (\\<chi>i j. complex_of_real (st_mat A $h i $h j))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  eigen_vector (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) v\n   (complex_of_real a)\n  real_non_neg_vec v\n  a =\n  HMA_Connect.spectral_radius\n   (\\<chi>i j. complex_of_real (st_mat A $h i $h j))\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from spectral_radius_ev[of ?B, folded a]"], ["proof (chain)\npicking this:\n  \\<exists>ev v.\n     eigen_vector (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) v\n      ev \\<and>\n     cmod ev = a", "have a0: \"a \\<ge> 0\""], ["proof (prove)\nusing this:\n  \\<exists>ev v.\n     eigen_vector (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) v\n      ev \\<and>\n     cmod ev = a\n\ngoal (1 subgoal):\n 1. 0 \\<le> a", "by auto"], ["proof (state)\nthis:\n  0 \\<le> a\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "define w where \"w = (\\<chi> i. Re (v $ i))\""], ["proof (state)\nthis:\n  w = (\\<chi>i. Re (v $h i))\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from nn"], ["proof (chain)\npicking this:\n  real_non_neg_vec v", "have vw: \"v = (\\<chi> i. ?c (w $ i))\""], ["proof (prove)\nusing this:\n  real_non_neg_vec v\n\ngoal (1 subgoal):\n 1. v = (\\<chi>i. complex_of_real (w $h i))", "unfolding real_non_neg_vec_def w_def"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>vec_elements_h v. a \\<in> \\<real> \\<and> 0 \\<le> Re a\n\ngoal (1 subgoal):\n 1. v = (\\<chi>i. complex_of_real ((\\<chi>i. Re (v $h i)) $h i))", "by (auto simp: vec_elements_h_def)"], ["proof (state)\nthis:\n  v = (\\<chi>i. complex_of_real (w $h i))\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from ev[unfolded eigen_vector_def]"], ["proof (chain)\npicking this:\n  v \\<noteq> 0 \\<and>\n  (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v =\n  complex_of_real a *s v", "have v0: \"v \\<noteq> 0\" and ev: \"?B *v v = ?c a *s v\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0 \\<and>\n  (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v =\n  complex_of_real a *s v\n\ngoal (1 subgoal):\n 1. v \\<noteq> 0 &&&\n    (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v =\n    complex_of_real a *s v", "by auto"], ["proof (state)\nthis:\n  v \\<noteq> 0\n  (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v =\n  complex_of_real a *s v\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from v0"], ["proof (chain)\npicking this:\n  v \\<noteq> 0", "have w0: \"w \\<noteq> 0\""], ["proof (prove)\nusing this:\n  v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. w \\<noteq> 0", "unfolding vw"], ["proof (prove)\nusing this:\n  (\\<chi>i. complex_of_real (w $h i)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. w \\<noteq> 0", "by (auto simp: Finite_Cartesian_Product.vec_eq_iff)"], ["proof (state)\nthis:\n  w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "{"], ["proof (state)\nthis:\n  w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from ev"], ["proof (chain)\npicking this:\n  (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v =\n  complex_of_real a *s v", "have \"Re ((?B *v v) $ i) = Re ((?c a *s v) $ i)\""], ["proof (prove)\nusing this:\n  (\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v =\n  complex_of_real a *s v\n\ngoal (1 subgoal):\n 1. Re (((\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v) $h i) =\n    Re ((complex_of_real a *s v) $h i)", "by simp"], ["proof (state)\nthis:\n  Re (((\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v) $h i) =\n  Re ((complex_of_real a *s v) $h i)\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "also"], ["proof (state)\nthis:\n  Re (((\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v) $h i) =\n  Re ((complex_of_real a *s v) $h i)\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "have \"Re ((?c a *s v) $ i) = (a *s w) $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re ((complex_of_real a *s v) $h i) = (a *s w) $h i", "unfolding vw"], ["proof (prove)\ngoal (1 subgoal):\n 1. Re ((complex_of_real a *s (\\<chi>i. complex_of_real (w $h i))) $h i) =\n    (a *s w) $h i", "by simp"], ["proof (state)\nthis:\n  Re ((complex_of_real a *s v) $h i) = (a *s w) $h i\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "also"], ["proof (state)\nthis:\n  Re ((complex_of_real a *s v) $h i) = (a *s w) $h i\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "have \"Re ((?B *v v) $ i) = (?A *v w) $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (((\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v) $h i) =\n    (st_mat A *v w) $h i", "unfolding vw"], ["proof (prove)\ngoal (1 subgoal):\n 1. Re (((\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v\n         (\\<chi>i. complex_of_real (w $h i))) $h\n        i) =\n    (st_mat A *v w) $h i", "by (simp add: matrix_vector_mult_def)"], ["proof (state)\nthis:\n  Re (((\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v) $h i) =\n  (st_mat A *v w) $h i\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "also"], ["proof (state)\nthis:\n  Re (((\\<chi>i j. complex_of_real (st_mat A $h i $h j)) *v v) $h i) =\n  (st_mat A *v w) $h i\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "note calculation"], ["proof (state)\nthis:\n  (st_mat A *v w) $h i = (a *s w) $h i\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "}"], ["proof (state)\nthis:\n  (st_mat A *v w) $h ?i2 = (a *s w) $h ?i2\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "hence ev: \"?A *v w = a *s w\""], ["proof (prove)\nusing this:\n  (st_mat A *v w) $h ?i2 = (a *s w) $h ?i2\n\ngoal (1 subgoal):\n 1. st_mat A *v w = a *s w", "by (auto simp: Finite_Cartesian_Product.vec_eq_iff)"], ["proof (state)\nthis:\n  st_mat A *v w = a *s w\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from nn"], ["proof (chain)\npicking this:\n  real_non_neg_vec v", "have nn: \"non_neg_vec w\""], ["proof (prove)\nusing this:\n  real_non_neg_vec v\n\ngoal (1 subgoal):\n 1. non_neg_vec w", "unfolding vw"], ["proof (prove)\nusing this:\n  real_non_neg_vec (\\<chi>i. complex_of_real (w $h i))\n\ngoal (1 subgoal):\n 1. non_neg_vec w", "by (auto simp: real_non_neg_vec_def non_neg_vec_def vec_elements_h_def)"], ["proof (state)\nthis:\n  non_neg_vec w\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "(* we now mainly have to prove that a = 1 *)"], ["proof (state)\nthis:\n  non_neg_vec w\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "let ?n = \"norm1 w\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from w0"], ["proof (chain)\npicking this:\n  w \\<noteq> 0", "have n0: \"?n \\<noteq> 0\""], ["proof (prove)\nusing this:\n  w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. norm1 w \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  norm1 w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "hence n_pos: \"?n > 0\""], ["proof (prove)\nusing this:\n  norm1 w \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < norm1 w", "using norm1_ge_0[of w]"], ["proof (prove)\nusing this:\n  norm1 w \\<noteq> 0\n  0 \\<le> norm1 w\n\ngoal (1 subgoal):\n 1. 0 < norm1 w", "by linarith"], ["proof (state)\nthis:\n  0 < norm1 w\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "define u where \"u = inverse ?n *s w\""], ["proof (state)\nthis:\n  u = inverse (norm1 w) *s w\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "have nn: \"non_neg_vec u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. non_neg_vec u", "using nn n_pos"], ["proof (prove)\nusing this:\n  non_neg_vec w\n  0 < norm1 w\n\ngoal (1 subgoal):\n 1. non_neg_vec u", "unfolding u_def non_neg_vec_def"], ["proof (prove)\nusing this:\n  \\<forall>i. 0 \\<le> w $h i\n  0 < norm1 w\n\ngoal (1 subgoal):\n 1. \\<forall>i. 0 \\<le> (inverse (norm1 w) *s w) $h i", "by auto"], ["proof (state)\nthis:\n  non_neg_vec u\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "have nu: \"norm1 u = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm1 u = 1", "unfolding u_def scalar_mult_eq_scaleR norm1_scaleR"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>inverse (norm1 w)\\<bar> * norm1 w = 1", "using n_pos"], ["proof (prove)\nusing this:\n  0 < norm1 w\n\ngoal (1 subgoal):\n 1. \\<bar>inverse (norm1 w)\\<bar> * norm1 w = 1", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  norm1 u = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "have 1: \"stoch_vec u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_vec u", "unfolding stoch_vec_def nu[symmetric] norm1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (($h) u) UNIV = (\\<Sum>i\\<in>UNIV. norm (u $h i))", "by (rule sum.cong, insert nn[unfolded non_neg_vec_def], auto)"], ["proof (state)\nthis:\n  stoch_vec u\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from arg_cong[OF ev, of \"\\<lambda> x. inverse ?n *s x\"]"], ["proof (chain)\npicking this:\n  inverse (norm1 w) *s (st_mat A *v w) = inverse (norm1 w) *s (a *s w)", "have ev: \"?A *v u = a *s u\""], ["proof (prove)\nusing this:\n  inverse (norm1 w) *s (st_mat A *v w) = inverse (norm1 w) *s (a *s w)\n\ngoal (1 subgoal):\n 1. st_mat A *v u = a *s u", "unfolding u_def"], ["proof (prove)\nusing this:\n  inverse (norm1 w) *s (st_mat A *v w) = inverse (norm1 w) *s (a *s w)\n\ngoal (1 subgoal):\n 1. st_mat A *v (inverse (norm1 w) *s w) = a *s (inverse (norm1 w) *s w)", "by (auto simp: ac_simps vector_smult_distrib matrix_vect_scaleR)"], ["proof (state)\nthis:\n  st_mat A *v u = a *s u\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from right_stoch_mat_mult_stoch_vec[OF right_stoch_mat_st_mat[of A] 1, unfolded ev]"], ["proof (chain)\npicking this:\n  stoch_vec (a *s u)", "have st: \"stoch_vec (a *s u)\""], ["proof (prove)\nusing this:\n  stoch_vec (a *s u)\n\ngoal (1 subgoal):\n 1. stoch_vec (a *s u)", "."], ["proof (state)\nthis:\n  stoch_vec (a *s u)\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from non_neg_mat_mult_non_neg_vec[OF non_neg_mat_st_mat[of A] nn, unfolded ev]"], ["proof (chain)\npicking this:\n  non_neg_vec (a *s u)", "have nn': \"non_neg_vec (a *s u)\""], ["proof (prove)\nusing this:\n  non_neg_vec (a *s u)\n\ngoal (1 subgoal):\n 1. non_neg_vec (a *s u)", "."], ["proof (state)\nthis:\n  non_neg_vec (a *s u)\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "from stoch_non_neg_vec_norm1[OF st nn', unfolded scalar_mult_eq_scaleR norm1_scaleR nu] a0"], ["proof (chain)\npicking this:\n  \\<bar>a\\<bar> * 1 = 1\n  0 \\<le> a", "have \"a = 1\""], ["proof (prove)\nusing this:\n  \\<bar>a\\<bar> * 1 = 1\n  0 \\<le> a\n\ngoal (1 subgoal):\n 1. a = 1", "by auto"], ["proof (state)\nthis:\n  a = 1\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "with ev st"], ["proof (chain)\npicking this:\n  st_mat A *v u = a *s u\n  stoch_vec (a *s u)\n  a = 1", "have ev: \"?A *v u = u\" and st: \"stoch_vec u\""], ["proof (prove)\nusing this:\n  st_mat A *v u = a *s u\n  stoch_vec (a *s u)\n  a = 1\n\ngoal (1 subgoal):\n 1. st_mat A *v u = u &&& stoch_vec u", "by auto"], ["proof (state)\nthis:\n  st_mat A *v u = u\n  stoch_vec u\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "using ev st nn"], ["proof (prove)\nusing this:\n  st_mat A *v u = u\n  stoch_vec u\n  non_neg_vec u\n\ngoal (1 subgoal):\n 1. \\<exists>v. A *st v = v", "by (intro exI[of _ \"to_st_vec u\"], transfer, auto)"], ["proof (state)\nthis:\n  \\<exists>v. A *st v = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stationary_distribution_unique: \n  assumes \"fixed_mat.irreducible (st_mat A)\" \n  shows \"\\<exists>! v. A *st v = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!v. A *st v = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!v. A *st v = v", "from stationary_distribution_exists"], ["proof (chain)\npicking this:\n  \\<exists>v. ?A *st v = v", "obtain v where ev: \"A *st v = v\""], ["proof (prove)\nusing this:\n  \\<exists>v. ?A *st v = v\n\ngoal (1 subgoal):\n 1. (\\<And>v. A *st v = v \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  A *st v = v\n\ngoal (1 subgoal):\n 1. \\<exists>!v. A *st v = v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!v. A *st v = v", "proof (intro ex1I, rule ev)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>va. A *st va = va \\<Longrightarrow> va = v", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>va. A *st va = va \\<Longrightarrow> va = v", "assume \"A *st w = w\""], ["proof (state)\nthis:\n  A *st w = w\n\ngoal (1 subgoal):\n 1. \\<And>va. A *st va = va \\<Longrightarrow> va = v", "thus \"w = v\""], ["proof (prove)\nusing this:\n  A *st w = w\n\ngoal (1 subgoal):\n 1. w = v", "using ev assms"], ["proof (prove)\nusing this:\n  A *st w = w\n  A *st v = v\n  fixed_mat.irreducible (st_mat A)\n\ngoal (1 subgoal):\n 1. w = v", "proof (transfer, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "case (1 A w v)"], ["proof (state)\nthis:\n  non_neg_mat A \\<and> right_stoch_mat A\n  non_neg_vec w \\<and> stoch_vec w\n  A *v w = w\n  non_neg_vec v \\<and> stoch_vec v\n  A *v v = v\n  fixed_mat.irreducible A\n\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "interpret perron_frobenius A"], ["proof (prove)\ngoal (1 subgoal):\n 1. perron_frobenius A", "by (unfold_locales, insert 1, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "from 1"], ["proof (chain)\npicking this:\n  non_neg_mat A \\<and> right_stoch_mat A\n  non_neg_vec w \\<and> stoch_vec w\n  A *v w = w\n  non_neg_vec v \\<and> stoch_vec v\n  A *v v = v\n  local.irreducible", "have *: \"eigen_vector A v 1\" \"le_vec 0 v\" \"eigen_vector A w 1\""], ["proof (prove)\nusing this:\n  non_neg_mat A \\<and> right_stoch_mat A\n  non_neg_vec w \\<and> stoch_vec w\n  A *v w = w\n  non_neg_vec v \\<and> stoch_vec v\n  A *v v = v\n  local.irreducible\n\ngoal (1 subgoal):\n 1. eigen_vector A v 1 &&& le_vec 0 v &&& eigen_vector A w 1", "by (auto simp: eigen_vector_def stoch_vec_def non_neg_vec_def)"], ["proof (state)\nthis:\n  eigen_vector A v 1\n  le_vec 0 v\n  eigen_vector A w 1\n\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "from nonnegative_eigenvector_has_ev_sr[OF *(1-2)]"], ["proof (chain)\npicking this:\n  1 = sr", "have sr1: \"sr = 1\""], ["proof (prove)\nusing this:\n  1 = sr\n\ngoal (1 subgoal):\n 1. sr = 1", "by auto"], ["proof (state)\nthis:\n  sr = 1\n\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "from multiplicity_sr_1[unfolded sr1]"], ["proof (chain)\npicking this:\n  order 1 (charpoly A) = 1", "have \"order 1 (charpoly A) = 1\""], ["proof (prove)\nusing this:\n  order 1 (charpoly A) = 1\n\ngoal (1 subgoal):\n 1. order 1 (charpoly A) = 1", "."], ["proof (state)\nthis:\n  order 1 (charpoly A) = 1\n\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "from unique_eigen_vector_real[OF this *(1,3)]"], ["proof (chain)\npicking this:\n  \\<exists>a. v = a *s w", "obtain a where \n        vw: \"v = a *s w\""], ["proof (prove)\nusing this:\n  \\<exists>a. v = a *s w\n\ngoal (1 subgoal):\n 1. (\\<And>a. v = a *s w \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  v = a *s w\n\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "from 1(2,4)[unfolded stoch_vec_def]"], ["proof (chain)\npicking this:\n  non_neg_vec w \\<and> sum (($h) w) UNIV = 1\n  non_neg_vec v \\<and> sum (($h) v) UNIV = 1", "have \"sum (($h) v) UNIV = sum (($h) w) UNIV\""], ["proof (prove)\nusing this:\n  non_neg_vec w \\<and> sum (($h) w) UNIV = 1\n  non_neg_vec v \\<and> sum (($h) v) UNIV = 1\n\ngoal (1 subgoal):\n 1. sum (($h) v) UNIV = sum (($h) w) UNIV", "by auto"], ["proof (state)\nthis:\n  sum (($h) v) UNIV = sum (($h) w) UNIV\n\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "also"], ["proof (state)\nthis:\n  sum (($h) v) UNIV = sum (($h) w) UNIV\n\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "have \"sum (($h) v) UNIV = a * sum (($h) w) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (($h) v) UNIV = a * sum (($h) w) UNIV", "unfolding vw"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (($h) (a *s w)) UNIV = a * sum (($h) w) UNIV", "by (auto simp: sum_distrib_left)"], ["proof (state)\nthis:\n  sum (($h) v) UNIV = a * sum (($h) w) UNIV\n\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "finally"], ["proof (chain)\npicking this:\n  a * sum (($h) w) UNIV = sum (($h) w) UNIV", "have \"a = 1\""], ["proof (prove)\nusing this:\n  a * sum (($h) w) UNIV = sum (($h) w) UNIV\n\ngoal (1 subgoal):\n 1. a = 1", "using 1(2)[unfolded stoch_vec_def]"], ["proof (prove)\nusing this:\n  a * sum (($h) w) UNIV = sum (($h) w) UNIV\n  non_neg_vec w \\<and> sum (($h) w) UNIV = 1\n\ngoal (1 subgoal):\n 1. a = 1", "by auto"], ["proof (state)\nthis:\n  a = 1\n\ngoal (1 subgoal):\n 1. \\<And>A w v.\n       \\<lbrakk>non_neg_mat A \\<and> right_stoch_mat A;\n        non_neg_vec w \\<and> stoch_vec w; A *v w = w;\n        non_neg_vec v \\<and> stoch_vec v; A *v v = v;\n        fixed_mat.irreducible A\\<rbrakk>\n       \\<Longrightarrow> w = v", "with vw"], ["proof (chain)\npicking this:\n  v = a *s w\n  a = 1", "show \"v = w\""], ["proof (prove)\nusing this:\n  v = a *s w\n  a = 1\n\ngoal (1 subgoal):\n 1. v = w", "by auto"], ["proof (state)\nthis:\n  v = w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!v. A *st v = v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Let us now convert the stationary distribution results from matrices to Markov chains.\\<close>"], ["", "context transition_matrix\nbegin"], ["", "lemma stationary_distribution_exists: \n  \"\\<exists> x. stationary_distribution (pmf_of_st_vec x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. stationary_distribution (pmf_of_st_vec x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x. stationary_distribution (pmf_of_st_vec x)", "from stationary_distribution_exists"], ["proof (chain)\npicking this:\n  \\<exists>v. ?A *st v = v", "obtain x where ev: \"A *st x = x\""], ["proof (prove)\nusing this:\n  \\<exists>v. ?A *st v = v\n\ngoal (1 subgoal):\n 1. (\\<And>x. A *st x = x \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  A *st x = x\n\ngoal (1 subgoal):\n 1. \\<exists>x. stationary_distribution (pmf_of_st_vec x)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. stationary_distribution (pmf_of_st_vec x)", "by (intro exI[of _ x], unfold stationary_distribution_pmf_of_st_vec,\n    simp add: ev)"], ["proof (state)\nthis:\n  \\<exists>x. stationary_distribution (pmf_of_st_vec x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma stationary_distribution_unique: assumes \"fixed_mat.irreducible (st_mat A)\" \n  shows \"\\<exists>! N. stationary_distribution N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex1 stationary_distribution", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Ex1 stationary_distribution", "from stationary_distribution_exists"], ["proof (chain)\npicking this:\n  \\<exists>x. stationary_distribution (pmf_of_st_vec x)", "obtain x where\n    st: \"stationary_distribution (pmf_of_st_vec x)\""], ["proof (prove)\nusing this:\n  \\<exists>x. stationary_distribution (pmf_of_st_vec x)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        stationary_distribution (pmf_of_st_vec x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  stationary_distribution (pmf_of_st_vec x)\n\ngoal (1 subgoal):\n 1. Ex1 stationary_distribution", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex1 stationary_distribution", "proof (rule ex1I, rule st)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N. stationary_distribution N \\<Longrightarrow> N = pmf_of_st_vec x", "fix N"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>N. stationary_distribution N \\<Longrightarrow> N = pmf_of_st_vec x", "assume st': \"stationary_distribution N\""], ["proof (state)\nthis:\n  stationary_distribution N\n\ngoal (1 subgoal):\n 1. \\<And>N. stationary_distribution N \\<Longrightarrow> N = pmf_of_st_vec x", "from stationary_distribution_implies_pmf_of_st_vec[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>x. N = pmf_of_st_vec x", "obtain y where \n      N: \"N = pmf_of_st_vec y\""], ["proof (prove)\nusing this:\n  \\<exists>x. N = pmf_of_st_vec x\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        N = pmf_of_st_vec y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  N = pmf_of_st_vec y\n\ngoal (1 subgoal):\n 1. \\<And>N. stationary_distribution N \\<Longrightarrow> N = pmf_of_st_vec x", "from st'[unfolded N] st"], ["proof (chain)\npicking this:\n  stationary_distribution (pmf_of_st_vec y)\n  stationary_distribution (pmf_of_st_vec x)", "have \"A *st x = x\" \"A *st y = y\""], ["proof (prove)\nusing this:\n  stationary_distribution (pmf_of_st_vec y)\n  stationary_distribution (pmf_of_st_vec x)\n\ngoal (1 subgoal):\n 1. A *st x = x &&& A *st y = y", "unfolding stationary_distribution_pmf_of_st_vec"], ["proof (prove)\nusing this:\n  A *st y = y\n  A *st x = x\n\ngoal (1 subgoal):\n 1. A *st x = x &&& A *st y = y", "by auto"], ["proof (state)\nthis:\n  A *st x = x\n  A *st y = y\n\ngoal (1 subgoal):\n 1. \\<And>N. stationary_distribution N \\<Longrightarrow> N = pmf_of_st_vec x", "from stationary_distribution_unique[OF assms] this"], ["proof (chain)\npicking this:\n  \\<exists>!v. A *st v = v\n  A *st x = x\n  A *st y = y", "have \"x = y\""], ["proof (prove)\nusing this:\n  \\<exists>!v. A *st v = v\n  A *st x = x\n  A *st y = y\n\ngoal (1 subgoal):\n 1. x = y", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal (1 subgoal):\n 1. \\<And>N. stationary_distribution N \\<Longrightarrow> N = pmf_of_st_vec x", "with N"], ["proof (chain)\npicking this:\n  N = pmf_of_st_vec y\n  x = y", "show \"N = pmf_of_st_vec x\""], ["proof (prove)\nusing this:\n  N = pmf_of_st_vec y\n  x = y\n\ngoal (1 subgoal):\n 1. N = pmf_of_st_vec x", "by auto"], ["proof (state)\nthis:\n  N = pmf_of_st_vec x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Ex1 stationary_distribution\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}