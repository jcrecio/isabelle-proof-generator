{"file_name": "/home/qj213/afp-2021-10-22/thys/Stochastic_Matrices/Eigenspace.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stochastic_Matrices", "problem_names": ["lemma dim_gen_eigenspace_order_char_poly: assumes jnf: \"jordan_nf A n_as\"\n  shows \"dim_gen_eigenspace A lam k \\<le> order lam (char_poly A)\"", "lemma eigenvector_mat_kernel_char_matrix: assumes A: \"A \\<in> carrier_mat n n\" \n  and ev: \"eigenvector A v lam\" \nshows \"v \\<in> mat_kernel (char_matrix A lam)\"", "lemma unique_eigenvector_jnf: assumes jnf: \"jordan_nf (A :: 'a :: field mat) n_as\" \n  and ord: \"order lam (char_poly A) = 1\" \n  and ev: \"eigenvector A v lam\" \"eigenvector A w lam\" \nshows \"\\<exists> a. v = a \\<cdot>\\<^sub>v w\"", "lemma unique_eigenvector_complex: assumes A: \"A \\<in> carrier_mat n n\" \n  and ord: \"order lam (char_poly A :: complex poly) = 1\" \n  and ev: \"eigenvector A v lam\" \"eigenvector A w lam\" \nshows \"\\<exists> a. v = a \\<cdot>\\<^sub>v w\"", "lemma unique_eigenvector_real: assumes A: \"A \\<in> carrier_mat n n\" \n  and ord: \"order lam (char_poly A :: real poly) = 1\" \n  and ev: \"eigenvector A v lam\" \"eigenvector A w lam\" \nshows \"\\<exists> a. v = a \\<cdot>\\<^sub>v w\"", "lemma unique_eigen_vector_real: assumes ord: \"order lam (charpoly A :: real poly) = 1\" \n  and ev: \"eigen_vector A v lam\" \"eigen_vector A w lam\" \nshows \"\\<exists> a. v = a *s w\""], "translations": [["", "lemma dim_gen_eigenspace_order_char_poly: assumes jnf: \"jordan_nf A n_as\"\n  shows \"dim_gen_eigenspace A lam k \\<le> order lam (char_poly A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_gen_eigenspace A lam k \\<le> order lam (char_poly A)", "unfolding jordan_nf_order[OF jnf]  dim_gen_eigenspace[OF jnf]"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list\n     (map (min k) (map fst (filter (\\<lambda>(n, e). e = lam) n_as)))\n    \\<le> sum_list (map fst (filter (\\<lambda>na. snd na = lam) n_as))", "by (induct n_as, auto)"], ["", "text \\<open>Every eigenvector is contained in the eigenspace.\\<close>"], ["", "lemma eigenvector_mat_kernel_char_matrix: assumes A: \"A \\<in> carrier_mat n n\" \n  and ev: \"eigenvector A v lam\" \nshows \"v \\<in> mat_kernel (char_matrix A lam)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> mat_kernel (char_matrix A lam)", "using ev[unfolded eigenvector_char_matrix[OF A]] A"], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec n \\<and>\n  v \\<noteq> 0\\<^sub>v n \\<and> char_matrix A lam *\\<^sub>v v = 0\\<^sub>v n\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. v \\<in> mat_kernel (char_matrix A lam)", "unfolding mat_kernel_def"], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec n \\<and>\n  v \\<noteq> 0\\<^sub>v n \\<and> char_matrix A lam *\\<^sub>v v = 0\\<^sub>v n\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. v \\<in> {v \\<in> carrier_vec (dim_col (char_matrix A lam)).\n             char_matrix A lam *\\<^sub>v v =\n             0\\<^sub>v (dim_row (char_matrix A lam))}", "by (auto simp: char_matrix_def)"], ["", "text \\<open>If the algebraic multiplicity is one, then every two eigenvectors are\n  scalar multiples of each other.\\<close>"], ["", "lemma unique_eigenvector_jnf: assumes jnf: \"jordan_nf (A :: 'a :: field mat) n_as\" \n  and ord: \"order lam (char_poly A) = 1\" \n  and ev: \"eigenvector A v lam\" \"eigenvector A w lam\" \nshows \"\\<exists> a. v = a \\<cdot>\\<^sub>v w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "let ?cA = \"char_matrix A lam\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from similar_matD jnf[unfolded jordan_nf_def]"], ["proof (chain)\npicking this:\n  similar_mat ?A ?B \\<Longrightarrow>\n  \\<exists>n P Q.\n     {?A, ?B, P, Q} \\<subseteq> carrier_mat n n \\<and>\n     P * Q = 1\\<^sub>m n \\<and> Q * P = 1\\<^sub>m n \\<and> ?A = P * ?B * Q\n  0 \\<notin> fst ` set n_as \\<and> similar_mat A (jordan_matrix n_as)", "obtain n where \n    A: \"A \\<in> carrier_mat n n\""], ["proof (prove)\nusing this:\n  similar_mat ?A ?B \\<Longrightarrow>\n  \\<exists>n P Q.\n     {?A, ?B, P, Q} \\<subseteq> carrier_mat n n \\<and>\n     P * Q = 1\\<^sub>m n \\<and> Q * P = 1\\<^sub>m n \\<and> ?A = P * ?B * Q\n  0 \\<notin> fst ` set n_as \\<and> similar_mat A (jordan_matrix n_as)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        A \\<in> carrier_mat n n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from dim_gen_eigenspace_order_char_poly[OF jnf, of lam 1, unfolded ord]"], ["proof (chain)\npicking this:\n  dim_gen_eigenspace A lam 1 \\<le> 1", "have dim: \"kernel_dim ?cA \\<le> 1\""], ["proof (prove)\nusing this:\n  dim_gen_eigenspace A lam 1 \\<le> 1\n\ngoal (1 subgoal):\n 1. kernel_dim (char_matrix A lam) \\<le> 1", "unfolding dim_gen_eigenspace_def"], ["proof (prove)\nusing this:\n  kernel_dim (char_matrix A lam ^\\<^sub>m 1) \\<le> 1\n\ngoal (1 subgoal):\n 1. kernel_dim (char_matrix A lam) \\<le> 1", "by auto"], ["proof (state)\nthis:\n  kernel_dim (char_matrix A lam) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from eigenvector_mat_kernel_char_matrix[OF A ev(1)]"], ["proof (chain)\npicking this:\n  v \\<in> mat_kernel (char_matrix A lam)", "have vk: \"v \\<in> mat_kernel ?cA\""], ["proof (prove)\nusing this:\n  v \\<in> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. v \\<in> mat_kernel (char_matrix A lam)", "."], ["proof (state)\nthis:\n  v \\<in> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from eigenvector_mat_kernel_char_matrix[OF A ev(2)]"], ["proof (chain)\npicking this:\n  w \\<in> mat_kernel (char_matrix A lam)", "have wk: \"w \\<in> mat_kernel ?cA\""], ["proof (prove)\nusing this:\n  w \\<in> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. w \\<in> mat_kernel (char_matrix A lam)", "."], ["proof (state)\nthis:\n  w \\<in> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from ev[unfolded eigenvector_def] A"], ["proof (chain)\npicking this:\n  v \\<in> carrier_vec (dim_row A) \\<and>\n  v \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v v = lam \\<cdot>\\<^sub>v v\n  w \\<in> carrier_vec (dim_row A) \\<and>\n  w \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v w = lam \\<cdot>\\<^sub>v w\n  A \\<in> carrier_mat n n", "have \n    v: \"v \\<in> carrier_vec n\" \"v \\<noteq> 0\\<^sub>v n\" and\n    w: \"w \\<in> carrier_vec n\" \"w \\<noteq> 0\\<^sub>v n\""], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec (dim_row A) \\<and>\n  v \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v v = lam \\<cdot>\\<^sub>v v\n  w \\<in> carrier_vec (dim_row A) \\<and>\n  w \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v w = lam \\<cdot>\\<^sub>v w\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. (v \\<in> carrier_vec n &&& v \\<noteq> 0\\<^sub>v n) &&&\n    w \\<in> carrier_vec n &&& w \\<noteq> 0\\<^sub>v n", "by auto"], ["proof (state)\nthis:\n  v \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n\n  w \\<in> carrier_vec n\n  w \\<noteq> 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "have cA: \"?cA \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. char_matrix A lam \\<in> carrier_mat n n", "using A"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. char_matrix A lam \\<in> carrier_mat n n", "unfolding char_matrix_def"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. A + - lam \\<cdot>\\<^sub>m 1\\<^sub>m (dim_row A) \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  char_matrix A lam \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "interpret kernel n n ?cA"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix_Kernel.kernel n n (char_matrix A lam)", "by (unfold_locales, rule cA)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from kernel_basis_exists[OF A]"], ["proof (chain)\npicking this:\n  \\<exists>B. finite B \\<and> basis B", "obtain B where B: \"finite B\" \"basis B\""], ["proof (prove)\nusing this:\n  \\<exists>B. finite B \\<and> basis B\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>finite B; basis B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite B\n  basis B\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from this[unfolded Ker.basis_def]"], ["proof (chain)\npicking this:\n  finite B\n  lin_indpt B \\<and>\n  local.span B = mat_kernel (char_matrix A lam) \\<and>\n  B \\<subseteq> mat_kernel (char_matrix A lam)", "have basis: \"mat_kernel ?cA = span B\""], ["proof (prove)\nusing this:\n  finite B\n  lin_indpt B \\<and>\n  local.span B = mat_kernel (char_matrix A lam) \\<and>\n  B \\<subseteq> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. mat_kernel (char_matrix A lam) = local.span B", "by auto"], ["proof (state)\nthis:\n  mat_kernel (char_matrix A lam) = local.span B\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "{"], ["proof (state)\nthis:\n  mat_kernel (char_matrix A lam) = local.span B\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "assume \"card B = 0\""], ["proof (state)\nthis:\n  card B = 0\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "with B basis"], ["proof (chain)\npicking this:\n  finite B\n  basis B\n  mat_kernel (char_matrix A lam) = local.span B\n  card B = 0", "have bas: \"mat_kernel ?cA = local.span {}\""], ["proof (prove)\nusing this:\n  finite B\n  basis B\n  mat_kernel (char_matrix A lam) = local.span B\n  card B = 0\n\ngoal (1 subgoal):\n 1. mat_kernel (char_matrix A lam) = local.span {}", "by auto"], ["proof (state)\nthis:\n  mat_kernel (char_matrix A lam) = local.span {}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "also"], ["proof (state)\nthis:\n  mat_kernel (char_matrix A lam) = local.span {}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "have \"\\<dots> = {0\\<^sub>v n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.span {} = {0\\<^sub>v n}", "unfolding Ker.span_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {lincomb a A |a A.\n     finite A \\<and> A \\<subseteq> {} \\<and> a \\<in> A \\<rightarrow> UNIV} =\n    {0\\<^sub>v n}", "by auto"], ["proof (state)\nthis:\n  local.span {} = {0\\<^sub>v n}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "finally"], ["proof (chain)\npicking this:\n  mat_kernel (char_matrix A lam) = {0\\<^sub>v n}", "have False"], ["proof (prove)\nusing this:\n  mat_kernel (char_matrix A lam) = {0\\<^sub>v n}\n\ngoal (1 subgoal):\n 1. False", "using v vk"], ["proof (prove)\nusing this:\n  mat_kernel (char_matrix A lam) = {0\\<^sub>v n}\n  v \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n\n  v \\<in> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "}"], ["proof (state)\nthis:\n  card B = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "with Ker.dim_basis[OF B] dim"], ["proof (chain)\npicking this:\n  local.dim = card B\n  kernel_dim (char_matrix A lam) \\<le> 1\n  card B = 0 \\<Longrightarrow> False", "have \"card B = Suc 0\""], ["proof (prove)\nusing this:\n  local.dim = card B\n  kernel_dim (char_matrix A lam) \\<le> 1\n  card B = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. card B = Suc 0", "by (cases \"card B\", auto)"], ["proof (state)\nthis:\n  card B = Suc 0\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "hence \"\\<exists> b. B = {b}\""], ["proof (prove)\nusing this:\n  card B = Suc 0\n\ngoal (1 subgoal):\n 1. \\<exists>b. B = {b}", "using card_eq_SucD"], ["proof (prove)\nusing this:\n  card B = Suc 0\n  card ?A = Suc ?k \\<Longrightarrow>\n  \\<exists>b B.\n     ?A = insert b B \\<and>\n     b \\<notin> B \\<and>\n     card B = ?k \\<and> (?k = 0 \\<longrightarrow> B = {})\n\ngoal (1 subgoal):\n 1. \\<exists>b. B = {b}", "by blast"], ["proof (state)\nthis:\n  \\<exists>b. B = {b}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "then"], ["proof (chain)\npicking this:\n  \\<exists>b. B = {b}", "obtain b where Bb: \"B = {b}\""], ["proof (prove)\nusing this:\n  \\<exists>b. B = {b}\n\ngoal (1 subgoal):\n 1. (\\<And>b. B = {b} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  B = {b}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from B(2)[unfolded Bb Ker.basis_def]"], ["proof (chain)\npicking this:\n  lin_indpt {b} \\<and>\n  local.span {b} = mat_kernel (char_matrix A lam) \\<and>\n  {b} \\<subseteq> mat_kernel (char_matrix A lam)", "have bk: \"b \\<in> mat_kernel ?cA\""], ["proof (prove)\nusing this:\n  lin_indpt {b} \\<and>\n  local.span {b} = mat_kernel (char_matrix A lam) \\<and>\n  {b} \\<subseteq> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. b \\<in> mat_kernel (char_matrix A lam)", "by auto"], ["proof (state)\nthis:\n  b \\<in> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "hence b: \"b \\<in> carrier_vec n\""], ["proof (prove)\nusing this:\n  b \\<in> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. b \\<in> carrier_vec n", "using cA mat_kernelD(1)"], ["proof (prove)\nusing this:\n  b \\<in> mat_kernel (char_matrix A lam)\n  char_matrix A lam \\<in> carrier_mat n n\n  \\<lbrakk>?A \\<in> carrier_mat ?nr ?nc; ?v \\<in> mat_kernel ?A\\<rbrakk>\n  \\<Longrightarrow> ?v \\<in> carrier_vec ?nc\n\ngoal (1 subgoal):\n 1. b \\<in> carrier_vec n", "by blast"], ["proof (state)\nthis:\n  b \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from Bb basis"], ["proof (chain)\npicking this:\n  B = {b}\n  mat_kernel (char_matrix A lam) = local.span B", "have \"mat_kernel ?cA = span {b}\""], ["proof (prove)\nusing this:\n  B = {b}\n  mat_kernel (char_matrix A lam) = local.span B\n\ngoal (1 subgoal):\n 1. mat_kernel (char_matrix A lam) = local.span {b}", "by auto"], ["proof (state)\nthis:\n  mat_kernel (char_matrix A lam) = local.span {b}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "also"], ["proof (state)\nthis:\n  mat_kernel (char_matrix A lam) = local.span {b}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "have \"\\<dots> = NC.span {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.span {b} = NC.span {b}", "by (rule span_same, insert bk, auto)"], ["proof (state)\nthis:\n  local.span {b} = NC.span {b}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "also"], ["proof (state)\nthis:\n  local.span {b} = NC.span {b}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "have \"\\<dots> \\<subseteq> { a \\<cdot>\\<^sub>v b | a. True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "assume \"x \\<in> NC.span {b}\""], ["proof (state)\nthis:\n  x \\<in> NC.span {b}\n\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "from this[unfolded NC.span_def]"], ["proof (chain)\npicking this:\n  x \\<in> {NC.lincomb a A |a A. finite A \\<and> A \\<subseteq> {b}}", "obtain a A \n        where x: \"x = NC.lincomb a A\" and A: \"A \\<subseteq> {b}\""], ["proof (prove)\nusing this:\n  x \\<in> {NC.lincomb a A |a A. finite A \\<and> A \\<subseteq> {b}}\n\ngoal (1 subgoal):\n 1. (\\<And>a A.\n        \\<lbrakk>x = NC.lincomb a A; A \\<subseteq> {b}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = NC.lincomb a A\n  A \\<subseteq> {b}\n\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "hence \"A = {} \\<or> A = {b}\""], ["proof (prove)\nusing this:\n  x = NC.lincomb a A\n  A \\<subseteq> {b}\n\ngoal (1 subgoal):\n 1. A = {} \\<or> A = {b}", "by auto"], ["proof (state)\nthis:\n  A = {} \\<or> A = {b}\n\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "hence \"\\<exists> a. x = a \\<cdot>\\<^sub>v b\""], ["proof (prove)\nusing this:\n  A = {} \\<or> A = {b}\n\ngoal (1 subgoal):\n 1. \\<exists>a. x = a \\<cdot>\\<^sub>v b", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow> \\<exists>a. x = a \\<cdot>\\<^sub>v b\n 2. A = {b} \\<Longrightarrow> \\<exists>a. x = a \\<cdot>\\<^sub>v b", "assume \"A = {}\""], ["proof (state)\nthis:\n  A = {}\n\ngoal (2 subgoals):\n 1. A = {} \\<Longrightarrow> \\<exists>a. x = a \\<cdot>\\<^sub>v b\n 2. A = {b} \\<Longrightarrow> \\<exists>a. x = a \\<cdot>\\<^sub>v b", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. \\<exists>a. x = a \\<cdot>\\<^sub>v b", "unfolding x"], ["proof (prove)\nusing this:\n  A = {}\n\ngoal (1 subgoal):\n 1. \\<exists>aa. NC.lincomb a A = aa \\<cdot>\\<^sub>v b", "using b"], ["proof (prove)\nusing this:\n  A = {}\n  b \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>aa. NC.lincomb a A = aa \\<cdot>\\<^sub>v b", "by (intro exI[of _ 0], auto)"], ["proof (state)\nthis:\n  \\<exists>a. x = a \\<cdot>\\<^sub>v b\n\ngoal (1 subgoal):\n 1. A = {b} \\<Longrightarrow> \\<exists>a. x = a \\<cdot>\\<^sub>v b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A = {b} \\<Longrightarrow> \\<exists>a. x = a \\<cdot>\\<^sub>v b", "assume \"A = {b}\""], ["proof (state)\nthis:\n  A = {b}\n\ngoal (1 subgoal):\n 1. A = {b} \\<Longrightarrow> \\<exists>a. x = a \\<cdot>\\<^sub>v b", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = {b}\n\ngoal (1 subgoal):\n 1. \\<exists>a. x = a \\<cdot>\\<^sub>v b", "unfolding x"], ["proof (prove)\nusing this:\n  A = {b}\n\ngoal (1 subgoal):\n 1. \\<exists>aa. NC.lincomb a A = aa \\<cdot>\\<^sub>v b", "using b"], ["proof (prove)\nusing this:\n  A = {b}\n  b \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<exists>aa. NC.lincomb a A = aa \\<cdot>\\<^sub>v b", "by (intro exI[of _ \"a b\"], auto simp: NC.lincomb_def)"], ["proof (state)\nthis:\n  \\<exists>a. x = a \\<cdot>\\<^sub>v b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a. x = a \\<cdot>\\<^sub>v b\n\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "}"], ["proof (state)\nthis:\n  ?x3 \\<in> NC.span {b} \\<Longrightarrow>\n  \\<exists>a. ?x3 = a \\<cdot>\\<^sub>v b\n\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x3 \\<in> NC.span {b} \\<Longrightarrow>\n  \\<exists>a. ?x3 = a \\<cdot>\\<^sub>v b\n\ngoal (1 subgoal):\n 1. NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "by auto"], ["proof (state)\nthis:\n  NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  NC.span {b} \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "finally"], ["proof (chain)\npicking this:\n  mat_kernel (char_matrix A lam) \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}", "obtain vv ww where vb: \"v = vv \\<cdot>\\<^sub>v b\" and wb: \"w = ww \\<cdot>\\<^sub>v b\""], ["proof (prove)\nusing this:\n  mat_kernel (char_matrix A lam) \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}\n\ngoal (1 subgoal):\n 1. (\\<And>vv ww.\n        \\<lbrakk>v = vv \\<cdot>\\<^sub>v b; w = ww \\<cdot>\\<^sub>v b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using vk wk"], ["proof (prove)\nusing this:\n  mat_kernel (char_matrix A lam) \\<subseteq> {a \\<cdot>\\<^sub>v b |a. True}\n  v \\<in> mat_kernel (char_matrix A lam)\n  w \\<in> mat_kernel (char_matrix A lam)\n\ngoal (1 subgoal):\n 1. (\\<And>vv ww.\n        \\<lbrakk>v = vv \\<cdot>\\<^sub>v b; w = ww \\<cdot>\\<^sub>v b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force+"], ["proof (state)\nthis:\n  v = vv \\<cdot>\\<^sub>v b\n  w = ww \\<cdot>\\<^sub>v b\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from wb w b"], ["proof (chain)\npicking this:\n  w = ww \\<cdot>\\<^sub>v b\n  w \\<in> carrier_vec n\n  w \\<noteq> 0\\<^sub>v n\n  b \\<in> carrier_vec n", "have ww: \"ww \\<noteq> 0\""], ["proof (prove)\nusing this:\n  w = ww \\<cdot>\\<^sub>v b\n  w \\<in> carrier_vec n\n  w \\<noteq> 0\\<^sub>v n\n  b \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. ww \\<noteq> (0::'a)", "by auto"], ["proof (state)\nthis:\n  ww \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from arg_cong[OF wb, of \"\\<lambda> x. inverse ww \\<cdot>\\<^sub>v x\"] w ww b"], ["proof (chain)\npicking this:\n  inverse ww \\<cdot>\\<^sub>v w =\n  inverse ww \\<cdot>\\<^sub>v (ww \\<cdot>\\<^sub>v b)\n  w \\<in> carrier_vec n\n  w \\<noteq> 0\\<^sub>v n\n  ww \\<noteq> (0::'a)\n  b \\<in> carrier_vec n", "have \"b = inverse ww \\<cdot>\\<^sub>v w\""], ["proof (prove)\nusing this:\n  inverse ww \\<cdot>\\<^sub>v w =\n  inverse ww \\<cdot>\\<^sub>v (ww \\<cdot>\\<^sub>v b)\n  w \\<in> carrier_vec n\n  w \\<noteq> 0\\<^sub>v n\n  ww \\<noteq> (0::'a)\n  b \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. b = inverse ww \\<cdot>\\<^sub>v w", "by (auto simp: smult_smult_assoc)"], ["proof (state)\nthis:\n  b = inverse ww \\<cdot>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from vb[unfolded this smult_smult_assoc]"], ["proof (chain)\npicking this:\n  v = vv * inverse ww \\<cdot>\\<^sub>v w", "show ?thesis"], ["proof (prove)\nusing this:\n  v = vv * inverse ww \\<cdot>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. v = a \\<cdot>\\<^sub>v w\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Getting rid of the JNF-assumption for complex matrices.\\<close>"], ["", "lemma unique_eigenvector_complex: assumes A: \"A \\<in> carrier_mat n n\" \n  and ord: \"order lam (char_poly A :: complex poly) = 1\" \n  and ev: \"eigenvector A v lam\" \"eigenvector A w lam\" \nshows \"\\<exists> a. v = a \\<cdot>\\<^sub>v w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from jordan_nf_exists[OF A] char_poly_factorized[OF A]"], ["proof (chain)\npicking this:\n  char_poly A = (\\<Prod>a\\<leftarrow>?as. [:- a, 1:]) \\<Longrightarrow>\n  \\<exists>n_as. jordan_nf A n_as\n  \\<exists>as.\n     char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = n", "obtain n_as\n    where \"jordan_nf A n_as\""], ["proof (prove)\nusing this:\n  char_poly A = (\\<Prod>a\\<leftarrow>?as. [:- a, 1:]) \\<Longrightarrow>\n  \\<exists>n_as. jordan_nf A n_as\n  \\<exists>as.\n     char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = n\n\ngoal (1 subgoal):\n 1. (\\<And>n_as.\n        jordan_nf A n_as \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  jordan_nf A n_as\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from unique_eigenvector_jnf[OF this ord ev]"], ["proof (chain)\npicking this:\n  \\<exists>a. v = a \\<cdot>\\<^sub>v w", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>a. v = a \\<cdot>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "."], ["proof (state)\nthis:\n  \\<exists>a. v = a \\<cdot>\\<^sub>v w\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Convert the result to real matrices via homomorphisms.\\<close>"], ["", "lemma unique_eigenvector_real: assumes A: \"A \\<in> carrier_mat n n\" \n  and ord: \"order lam (char_poly A :: real poly) = 1\" \n  and ev: \"eigenvector A v lam\" \"eigenvector A w lam\" \nshows \"\\<exists> a. v = a \\<cdot>\\<^sub>v w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "let ?c = complex_of_real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "let ?A = \"map_mat ?c A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from A"], ["proof (chain)\npicking this:\n  A \\<in> carrier_mat n n", "have cA: \"?A \\<in> carrier_mat n n\""], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. of_real_hom.mat_hom A \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  of_real_hom.mat_hom A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "have ord: \"order (?c lam) (char_poly ?A) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order (complex_of_real lam) (char_poly (of_real_hom.mat_hom A)) = 1", "unfolding of_real_hom.char_poly_hom[OF A]"], ["proof (prove)\ngoal (1 subgoal):\n 1. order (complex_of_real lam) (map_poly complex_of_real (char_poly A)) = 1", "by (subst map_poly_inj_idom_divide_hom.order_hom, unfold_locales, rule ord)"], ["proof (state)\nthis:\n  order (complex_of_real lam) (char_poly (of_real_hom.mat_hom A)) = 1\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "note evc = of_real_hom.eigenvector_hom[OF A]"], ["proof (state)\nthis:\n  eigenvector A ?v ?ev \\<Longrightarrow>\n  eigenvector (of_real_hom.mat_hom A) (of_real_hom.vec_hom ?v) (of_real ?ev)\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from unique_eigenvector_complex[OF cA ord evc evc, OF ev]"], ["proof (chain)\npicking this:\n  \\<exists>a.\n     of_real_hom.vec_hom v = a \\<cdot>\\<^sub>v of_real_hom.vec_hom w", "obtain a :: complex \n    where id: \"map_vec ?c v = a \\<cdot>\\<^sub>v map_vec ?c w\""], ["proof (prove)\nusing this:\n  \\<exists>a.\n     of_real_hom.vec_hom v = a \\<cdot>\\<^sub>v of_real_hom.vec_hom w\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        of_real_hom.vec_hom v =\n        a \\<cdot>\\<^sub>v of_real_hom.vec_hom w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  of_real_hom.vec_hom v = a \\<cdot>\\<^sub>v of_real_hom.vec_hom w\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "(* now prove that a is real *)"], ["proof (state)\nthis:\n  of_real_hom.vec_hom v = a \\<cdot>\\<^sub>v of_real_hom.vec_hom w\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from ev[unfolded eigenvector_def] A"], ["proof (chain)\npicking this:\n  v \\<in> carrier_vec (dim_row A) \\<and>\n  v \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v v = lam \\<cdot>\\<^sub>v v\n  w \\<in> carrier_vec (dim_row A) \\<and>\n  w \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v w = lam \\<cdot>\\<^sub>v w\n  A \\<in> carrier_mat n n", "have carr: \"v \\<in> carrier_vec n\" \"w \\<in> carrier_vec n\" \n    \"v \\<noteq> 0\\<^sub>v n\""], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec (dim_row A) \\<and>\n  v \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v v = lam \\<cdot>\\<^sub>v v\n  w \\<in> carrier_vec (dim_row A) \\<and>\n  w \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v w = lam \\<cdot>\\<^sub>v w\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. v \\<in> carrier_vec n &&&\n    w \\<in> carrier_vec n &&& v \\<noteq> 0\\<^sub>v n", "by auto"], ["proof (state)\nthis:\n  v \\<in> carrier_vec n\n  w \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "then"], ["proof (chain)\npicking this:\n  v \\<in> carrier_vec n\n  w \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n", "obtain i where i: \"i < n\" \"v $ i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec n\n  w \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < n; v $v i \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Matrix.vec_eq_iff"], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec n\n  w \\<in> carrier_vec n\n  \\<not> (dim_vec v = dim_vec (0\\<^sub>v n) \\<and>\n          (\\<forall>i<dim_vec (0\\<^sub>v n). v $v i = 0\\<^sub>v n $v i))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i < n; v $v i \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < n\n  v $v i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from arg_cong[OF id, of \"\\<lambda> x. x $ i\"] carr i"], ["proof (chain)\npicking this:\n  of_real_hom.vec_hom v $v i =\n  (a \\<cdot>\\<^sub>v of_real_hom.vec_hom w) $v i\n  v \\<in> carrier_vec n\n  w \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n\n  i < n\n  v $v i \\<noteq> 0", "have \"?c (v $ i) = a * ?c (w $ i)\""], ["proof (prove)\nusing this:\n  of_real_hom.vec_hom v $v i =\n  (a \\<cdot>\\<^sub>v of_real_hom.vec_hom w) $v i\n  v \\<in> carrier_vec n\n  w \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n\n  i < n\n  v $v i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. complex_of_real (v $v i) = a * complex_of_real (w $v i)", "by auto"], ["proof (state)\nthis:\n  complex_of_real (v $v i) = a * complex_of_real (w $v i)\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "with i(2)"], ["proof (chain)\npicking this:\n  v $v i \\<noteq> 0\n  complex_of_real (v $v i) = a * complex_of_real (w $v i)", "have \"a \\<in> Reals\""], ["proof (prove)\nusing this:\n  v $v i \\<noteq> 0\n  complex_of_real (v $v i) = a * complex_of_real (w $v i)\n\ngoal (1 subgoal):\n 1. a \\<in> \\<real>", "by (metis Reals_cnj_iff complex_cnj_complex_of_real complex_cnj_mult mult_cancel_right\n        mult_eq_0_iff of_real_hom.hom_zero of_real_hom.injectivity)"], ["proof (state)\nthis:\n  a \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "then"], ["proof (chain)\npicking this:\n  a \\<in> \\<real>", "obtain b where a: \"a = ?c b\""], ["proof (prove)\nusing this:\n  a \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        a = complex_of_real b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule Reals_cases)"], ["proof (state)\nthis:\n  a = complex_of_real b\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "from id[unfolded a]"], ["proof (chain)\npicking this:\n  of_real_hom.vec_hom v =\n  complex_of_real b \\<cdot>\\<^sub>v of_real_hom.vec_hom w", "have \"map_vec ?c v = map_vec ?c (b \\<cdot>\\<^sub>v w)\""], ["proof (prove)\nusing this:\n  of_real_hom.vec_hom v =\n  complex_of_real b \\<cdot>\\<^sub>v of_real_hom.vec_hom w\n\ngoal (1 subgoal):\n 1. of_real_hom.vec_hom v = of_real_hom.vec_hom (b \\<cdot>\\<^sub>v w)", "by auto"], ["proof (state)\nthis:\n  of_real_hom.vec_hom v = of_real_hom.vec_hom (b \\<cdot>\\<^sub>v w)\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "hence \"v = b \\<cdot>\\<^sub>v w\""], ["proof (prove)\nusing this:\n  of_real_hom.vec_hom v = of_real_hom.vec_hom (b \\<cdot>\\<^sub>v w)\n\ngoal (1 subgoal):\n 1. v = b \\<cdot>\\<^sub>v w", "by (rule of_real_hom.vec_hom_inj)"], ["proof (state)\nthis:\n  v = b \\<cdot>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "thus ?thesis"], ["proof (prove)\nusing this:\n  v = b \\<cdot>\\<^sub>v w\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. v = a \\<cdot>\\<^sub>v w\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Finally, the statement converted to HMA-world.\\<close>"], ["", "lemma unique_eigen_vector_real: assumes ord: \"order lam (charpoly A :: real poly) = 1\" \n  and ev: \"eigen_vector A v lam\" \"eigen_vector A w lam\" \nshows \"\\<exists> a. v = a *s w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a *s w", "using assms"], ["proof (prove)\nusing this:\n  order lam (charpoly A) = 1\n  eigen_vector A v lam\n  eigen_vector A w lam\n\ngoal (1 subgoal):\n 1. \\<exists>a. v = a *s w", "proof (transfer, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>lam A v w.\n       \\<lbrakk>A \\<in> carrier_mat CARD('a) CARD('a);\n        order lam (char_poly A) = 1; v \\<in> carrier_vec CARD('a);\n        eigenvector A v lam; w \\<in> carrier_vec CARD('a);\n        eigenvector A w lam\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. v = a \\<cdot>\\<^sub>v w", "case (1 lam A v w)"], ["proof (state)\nthis:\n  A \\<in> carrier_mat CARD('a) CARD('a)\n  order lam (char_poly A) = 1\n  v \\<in> carrier_vec CARD('a)\n  eigenvector A v lam\n  w \\<in> carrier_vec CARD('a)\n  eigenvector A w lam\n\ngoal (1 subgoal):\n 1. \\<And>lam A v w.\n       \\<lbrakk>A \\<in> carrier_mat CARD('a) CARD('a);\n        order lam (char_poly A) = 1; v \\<in> carrier_vec CARD('a);\n        eigenvector A v lam; w \\<in> carrier_vec CARD('a);\n        eigenvector A w lam\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a. v = a \\<cdot>\\<^sub>v w", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. v = a \\<cdot>\\<^sub>v w", "by (rule unique_eigenvector_real[OF 1(1-2,4,6)])"], ["proof (state)\nthis:\n  \\<exists>a. v = a \\<cdot>\\<^sub>v w\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}