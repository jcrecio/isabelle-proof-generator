{"file_name": "/home/qj213/afp-2021-10-22/thys/Stochastic_Matrices/Stochastic_Vector_PMF.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stochastic_Matrices", "problem_names": ["lemma sigma_algebra_UNIV_finite[simp]: \"sigma_algebra (UNIV :: 'a :: finite set) UNIV\"", "lemma positive_measure_of_st_vec'[simp]: \"positive A (measure_of_st_vec' x)\"", "lemma measure_space_measure_of_st_vec': \"measure_space UNIV UNIV (measure_of_st_vec' x)\"", "lemma sets_measure_of_st_vec[simp]: \"sets (measure_of_st_vec x) = UNIV\"", "lemma space_measure_of_st_vec[simp]: \"space (measure_of_st_vec x) = UNIV\"", "lemma emeasure_measure_of_st_vec[simp]: \"emeasure (measure_of_st_vec x) I = \n  sum (\\<lambda> i. st_vec x $ i) I\"", "lemma prob_space_measure_of_st_vec: \"prob_space (measure_of_st_vec x)\"", "lemma st_vec_st_vec_of_pmf[simp]:\n  \"st_vec (st_vec_of_pmf x) $ i = pmf x i\"", "lemma pmf_pmf_of_st_vec[simp]: \"pmf (pmf_of_st_vec x) i = st_vec x $ i\"", "lemma st_vec_of_pmf_pmf_of_st_vec[simp]: \"st_vec_of_pmf (pmf_of_st_vec x) = x\"", "lemma pmf_of_st_vec_inj: \"(pmf_of_st_vec x = pmf_of_st_vec y) = (x = y)\""], "translations": [["", "lemma sigma_algebra_UNIV_finite[simp]: \"sigma_algebra (UNIV :: 'a :: finite set) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra UNIV UNIV", "proof (unfold_locales, goal_cases)"], ["proof (state)\ngoal (7 subgoals):\n 1. UNIV \\<subseteq> Pow UNIV\n 2. {} \\<in> UNIV\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> UNIV; b \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> UNIV\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> UNIV; b \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C\\<subseteq>UNIV.\n                            finite C \\<and>\n                            disjoint C \\<and> a - b = \\<Union> C\n 5. \\<And>a b.\n       \\<lbrakk>a \\<in> UNIV; b \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> a \\<union> b \\<in> UNIV\n 6. UNIV \\<in> UNIV\n 7. \\<And>A.\n       range A \\<subseteq> UNIV \\<Longrightarrow>\n       \\<Union> (range A) \\<in> UNIV", "case (4 a b)"], ["proof (state)\nthis:\n  a \\<in> UNIV\n  b \\<in> UNIV\n\ngoal (7 subgoals):\n 1. UNIV \\<subseteq> Pow UNIV\n 2. {} \\<in> UNIV\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> UNIV; b \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> UNIV\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> UNIV; b \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<exists>C\\<subseteq>UNIV.\n                            finite C \\<and>\n                            disjoint C \\<and> a - b = \\<Union> C\n 5. \\<And>a b.\n       \\<lbrakk>a \\<in> UNIV; b \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> a \\<union> b \\<in> UNIV\n 6. UNIV \\<in> UNIV\n 7. \\<And>A.\n       range A \\<subseteq> UNIV \\<Longrightarrow>\n       \\<Union> (range A) \\<in> UNIV", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>C\\<subseteq>UNIV.\n       finite C \\<and> disjoint C \\<and> a - b = \\<Union> C", "by (intro exI[of _ \"{a-b}\"], auto)"], ["proof (state)\nthis:\n  \\<exists>C\\<subseteq>UNIV.\n     finite C \\<and> disjoint C \\<and> a - b = \\<Union> C\n\ngoal (6 subgoals):\n 1. UNIV \\<subseteq> Pow UNIV\n 2. {} \\<in> UNIV\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> UNIV; b \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> a \\<inter> b \\<in> UNIV\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> UNIV; b \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> a \\<union> b \\<in> UNIV\n 5. UNIV \\<in> UNIV\n 6. \\<And>A.\n       range A \\<subseteq> UNIV \\<Longrightarrow>\n       \\<Union> (range A) \\<in> UNIV", "qed auto"], ["", "definition measure_of_st_vec' :: \"'a st_vec \\<Rightarrow> 'a :: finite set \\<Rightarrow> ennreal\" where\n  \"measure_of_st_vec' x I = sum (\\<lambda> i. st_vec x $ i) I\""], ["", "lemma positive_measure_of_st_vec'[simp]: \"positive A (measure_of_st_vec' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. positive A (measure_of_st_vec' x)", "unfolding measure_of_st_vec'_def positive_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (sum (($h) (st_vec x)) {}) = 0", "by auto"], ["", "lemma measure_space_measure_of_st_vec': \"measure_space UNIV UNIV (measure_of_st_vec' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_space UNIV UNIV (measure_of_st_vec' x)", "unfolding measure_space_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sigma_algebra UNIV UNIV \\<and>\n    positive UNIV (measure_of_st_vec' x) \\<and>\n    countably_additive UNIV (measure_of_st_vec' x)", "proof (simp, simp add: countably_additive_def measure_of_st_vec'_def disjoint_family_on_def,\n  clarify, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "case (1 A)"], ["proof (state)\nthis:\n  \\<forall>m n. m \\<noteq> n \\<longrightarrow> A m \\<inter> A n = {}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "let ?x = \"st_vec x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "define N where \"N = {i. A i \\<noteq> {}}\""], ["proof (state)\nthis:\n  N = {i. A i \\<noteq> {}}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "let ?A = \"\\<Union>(A ` N)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "have \"finite B \\<Longrightarrow> B \\<subseteq> ?A \\<Longrightarrow> \\<exists> K. finite K \\<and> K \\<subseteq> N \\<and> B \\<subseteq> \\<Union>(A ` K)\" for B"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B; B \\<subseteq> \\<Union> (A ` N)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>K.\n                         finite K \\<and>\n                         K \\<subseteq> N \\<and>\n                         B \\<subseteq> \\<Union> (A ` K)", "proof (induct rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n    \\<exists>K.\n       finite K \\<and>\n       K \\<subseteq> N \\<and> {} \\<subseteq> \\<Union> (A ` K)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n        \\<exists>K.\n           finite K \\<and>\n           K \\<subseteq> N \\<and> F \\<subseteq> \\<Union> (A ` K);\n        insert x F \\<subseteq> \\<Union> (A ` N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>K.\n                            finite K \\<and>\n                            K \\<subseteq> N \\<and>\n                            insert x F \\<subseteq> \\<Union> (A ` K)", "case (insert b B)"], ["proof (state)\nthis:\n  finite B\n  b \\<notin> B\n  B \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n  \\<exists>K.\n     finite K \\<and> K \\<subseteq> N \\<and> B \\<subseteq> \\<Union> (A ` K)\n  insert b B \\<subseteq> \\<Union> (A ` N)\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n    \\<exists>K.\n       finite K \\<and>\n       K \\<subseteq> N \\<and> {} \\<subseteq> \\<Union> (A ` K)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n        \\<exists>K.\n           finite K \\<and>\n           K \\<subseteq> N \\<and> F \\<subseteq> \\<Union> (A ` K);\n        insert x F \\<subseteq> \\<Union> (A ` N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>K.\n                            finite K \\<and>\n                            K \\<subseteq> N \\<and>\n                            insert x F \\<subseteq> \\<Union> (A ` K)", "from insert(3-4)"], ["proof (chain)\npicking this:\n  B \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n  \\<exists>K.\n     finite K \\<and> K \\<subseteq> N \\<and> B \\<subseteq> \\<Union> (A ` K)\n  insert b B \\<subseteq> \\<Union> (A ` N)", "obtain K where K: \"finite K\" \"K \\<subseteq> N\" \"B \\<subseteq> \\<Union>(A ` K)\""], ["proof (prove)\nusing this:\n  B \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n  \\<exists>K.\n     finite K \\<and> K \\<subseteq> N \\<and> B \\<subseteq> \\<Union> (A ` K)\n  insert b B \\<subseteq> \\<Union> (A ` N)\n\ngoal (1 subgoal):\n 1. (\\<And>K.\n        \\<lbrakk>finite K; K \\<subseteq> N;\n         B \\<subseteq> \\<Union> (A ` K)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite K\n  K \\<subseteq> N\n  B \\<subseteq> \\<Union> (A ` K)\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n    \\<exists>K.\n       finite K \\<and>\n       K \\<subseteq> N \\<and> {} \\<subseteq> \\<Union> (A ` K)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n        \\<exists>K.\n           finite K \\<and>\n           K \\<subseteq> N \\<and> F \\<subseteq> \\<Union> (A ` K);\n        insert x F \\<subseteq> \\<Union> (A ` N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>K.\n                            finite K \\<and>\n                            K \\<subseteq> N \\<and>\n                            insert x F \\<subseteq> \\<Union> (A ` K)", "from insert(4)"], ["proof (chain)\npicking this:\n  insert b B \\<subseteq> \\<Union> (A ` N)", "obtain a where a: \"a \\<in> N\" \"b \\<in> A a\""], ["proof (prove)\nusing this:\n  insert b B \\<subseteq> \\<Union> (A ` N)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> N; b \\<in> A a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> N\n  b \\<in> A a\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n    \\<exists>K.\n       finite K \\<and>\n       K \\<subseteq> N \\<and> {} \\<subseteq> \\<Union> (A ` K)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n        \\<exists>K.\n           finite K \\<and>\n           K \\<subseteq> N \\<and> F \\<subseteq> \\<Union> (A ` K);\n        insert x F \\<subseteq> \\<Union> (A ` N)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>K.\n                            finite K \\<and>\n                            K \\<subseteq> N \\<and>\n                            insert x F \\<subseteq> \\<Union> (A ` K)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>K.\n       finite K \\<and>\n       K \\<subseteq> N \\<and> insert b B \\<subseteq> \\<Union> (A ` K)", "by (intro exI[of _ \"insert a K\"], insert a K, auto)"], ["proof (state)\nthis:\n  \\<exists>K.\n     finite K \\<and>\n     K \\<subseteq> N \\<and> insert b B \\<subseteq> \\<Union> (A ` K)\n\ngoal (1 subgoal):\n 1. {} \\<subseteq> \\<Union> (A ` N) \\<Longrightarrow>\n    \\<exists>K.\n       finite K \\<and>\n       K \\<subseteq> N \\<and> {} \\<subseteq> \\<Union> (A ` K)", "qed auto"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?B; ?B \\<subseteq> \\<Union> (A ` N)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>K.\n                       finite K \\<and>\n                       K \\<subseteq> N \\<and>\n                       ?B \\<subseteq> \\<Union> (A ` K)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "from this[OF _ subset_refl]"], ["proof (chain)\npicking this:\n  finite (\\<Union> (A ` N)) \\<Longrightarrow>\n  \\<exists>K.\n     finite K \\<and>\n     K \\<subseteq> N \\<and> \\<Union> (A ` N) \\<subseteq> \\<Union> (A ` K)", "obtain K where *: \"finite K\" \"K \\<subseteq> N\" \"\\<Union>(A ` K) = ?A\""], ["proof (prove)\nusing this:\n  finite (\\<Union> (A ` N)) \\<Longrightarrow>\n  \\<exists>K.\n     finite K \\<and>\n     K \\<subseteq> N \\<and> \\<Union> (A ` N) \\<subseteq> \\<Union> (A ` K)\n\ngoal (1 subgoal):\n 1. (\\<And>K.\n        \\<lbrakk>finite K; K \\<subseteq> N;\n         \\<Union> (A ` K) = \\<Union> (A ` N)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite K\n  K \\<subseteq> N\n  \\<Union> (A ` K) = \\<Union> (A ` N)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "{"], ["proof (state)\nthis:\n  finite K\n  K \\<subseteq> N\n  \\<Union> (A ` K) = \\<Union> (A ` N)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "assume \"K \\<subset> N\""], ["proof (state)\nthis:\n  K \\<subset> N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "then"], ["proof (chain)\npicking this:\n  K \\<subset> N", "obtain n where **: \"n \\<in> N\" \"n \\<notin> K\""], ["proof (prove)\nusing this:\n  K \\<subset> N\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> N; n \\<notin> K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<in> N\n  n \\<notin> K\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "from this[unfolded N_def]"], ["proof (chain)\npicking this:\n  n \\<in> {i. A i \\<noteq> {}}\n  n \\<notin> K", "obtain a where a: \"a \\<in> A n\""], ["proof (prove)\nusing this:\n  n \\<in> {i. A i \\<noteq> {}}\n  n \\<notin> K\n\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> A n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> A n\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "with ** *"], ["proof (chain)\npicking this:\n  n \\<in> N\n  n \\<notin> K\n  finite K\n  K \\<subseteq> N\n  \\<Union> (A ` K) = \\<Union> (A ` N)\n  a \\<in> A n", "obtain k where ***: \"k \\<in> K\" \"a \\<in> A k\""], ["proof (prove)\nusing this:\n  n \\<in> N\n  n \\<notin> K\n  finite K\n  K \\<subseteq> N\n  \\<Union> (A ` K) = \\<Union> (A ` N)\n  a \\<in> A n\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> K; a \\<in> A k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  k \\<in> K\n  a \\<in> A k\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "from ** ***"], ["proof (chain)\npicking this:\n  n \\<in> N\n  n \\<notin> K\n  k \\<in> K\n  a \\<in> A k", "have \"n \\<noteq> k\""], ["proof (prove)\nusing this:\n  n \\<in> N\n  n \\<notin> K\n  k \\<in> K\n  a \\<in> A k\n\ngoal (1 subgoal):\n 1. n \\<noteq> k", "by auto"], ["proof (state)\nthis:\n  n \\<noteq> k\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "from 1[rule_format, OF this]"], ["proof (chain)\npicking this:\n  A n \\<inter> A k = {}", "have \"A n \\<inter> A k = {}\""], ["proof (prove)\nusing this:\n  A n \\<inter> A k = {}\n\ngoal (1 subgoal):\n 1. A n \\<inter> A k = {}", "by auto"], ["proof (state)\nthis:\n  A n \\<inter> A k = {}\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "with *** a"], ["proof (chain)\npicking this:\n  k \\<in> K\n  a \\<in> A k\n  a \\<in> A n\n  A n \\<inter> A k = {}", "have False"], ["proof (prove)\nusing this:\n  k \\<in> K\n  a \\<in> A k\n  a \\<in> A n\n  A n \\<inter> A k = {}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "}"], ["proof (state)\nthis:\n  K \\<subset> N \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "with *"], ["proof (chain)\npicking this:\n  finite K\n  K \\<subseteq> N\n  \\<Union> (A ` K) = \\<Union> (A ` N)\n  K \\<subset> N \\<Longrightarrow> False", "have fin: \"finite N\""], ["proof (prove)\nusing this:\n  finite K\n  K \\<subseteq> N\n  \\<Union> (A ` K) = \\<Union> (A ` N)\n  K \\<subset> N \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. finite N", "by auto"], ["proof (state)\nthis:\n  finite N\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "have id: \"\\<Union>(A ` UNIV) = ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range A) = \\<Union> (A ` N)", "unfolding N_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (range A) = \\<Union> (A ` {i. A i \\<noteq> {}})", "by auto"], ["proof (state)\nthis:\n  \\<Union> (range A) = \\<Union> (A ` N)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<forall>m n.\n          m \\<noteq> n \\<longrightarrow>\n          A m \\<inter> A n = {} \\<Longrightarrow>\n       (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n       ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "show \"(\\<Sum>i. ennreal (sum (($h) ?x) (A i))) =\n    ennreal (sum (($h) ?x) (\\<Union>(A ` UNIV)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n    ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n    ennreal (sum (($h) (st_vec x)) (\\<Union> (A ` N)))", "apply (subst suminf_finite[OF fin], (auto simp: N_def)[1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>N. ennreal (sum (($h) (st_vec x)) (A n))) =\n    ennreal (sum (($h) (st_vec x)) (\\<Union> (A ` N)))", "apply (subst sum_ennreal, (insert non_neg_vec_st_vec[of x], auto simp: non_neg_vec_def intro!: sum_nonneg)[1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (\\<Sum>n\\<in>N. sum (($h) (st_vec x)) (A n)) =\n    ennreal (sum (($h) (st_vec x)) (\\<Union> (A ` N)))", "apply (rule arg_cong[of _ _ ennreal])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n\\<in>N. sum (($h) (st_vec x)) (A n)) =\n    sum (($h) (st_vec x)) (\\<Union> (A ` N))", "apply (subst sum.UNION_disjoint[OF fin], insert 1, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<Sum>i. ennreal (sum (($h) (st_vec x)) (A i))) =\n  ennreal (sum (($h) (st_vec x)) (\\<Union> (range A)))\n\ngoal:\nNo subgoals!", "qed"], ["", "context begin"], ["", "setup_lifting type_definition_measure"], ["", "lift_definition measure_of_st_vec :: \"'a st_vec \\<Rightarrow> 'a :: finite measure\" is\n  \"\\<lambda> x. (UNIV, UNIV, measure_of_st_vec' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>st_vec.\n       (UNIV, UNIV, measure_of_st_vec' st_vec)\n       \\<in> {(\\<Omega>, A, \\<mu>).\n              (\\<forall>a\\<in>- A. \\<mu> a = 0) \\<and>\n              measure_space \\<Omega> A \\<mu>}", "by (auto simp: measure_space_measure_of_st_vec')"], ["", "lemma sets_measure_of_st_vec[simp]: \"sets (measure_of_st_vec x) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (measure_of_st_vec x) = UNIV", "unfolding sets_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (Rep_measure (measure_of_st_vec x))) = UNIV", "by (transfer, auto)"], ["", "lemma space_measure_of_st_vec[simp]: \"space (measure_of_st_vec x) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (measure_of_st_vec x) = UNIV", "unfolding space_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (Rep_measure (measure_of_st_vec x)) = UNIV", "by (transfer, auto)"], ["", "lemma emeasure_measure_of_st_vec[simp]: \"emeasure (measure_of_st_vec x) I = \n  sum (\\<lambda> i. st_vec x $ i) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (measure_of_st_vec x) I = ennreal (sum (($h) (st_vec x)) I)", "unfolding emeasure_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (Rep_measure (measure_of_st_vec x))) I =\n    ennreal (sum (($h) (st_vec x)) I)", "by (transfer', auto simp: measure_of_st_vec'_def)"], ["", "lemma prob_space_measure_of_st_vec: \"prob_space (measure_of_st_vec x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space (measure_of_st_vec x)", "by (unfold_locales, intro exI[of _ UNIV], auto, transfer, auto simp: stoch_vec_def)"], ["", "end"], ["", "lift_definition st_vec_of_pmf :: \"'i :: finite pmf \\<Rightarrow> 'i st_vec\" is\n  \"\\<lambda> pmF. vec_lambda (pmf pmF)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>pmfa.\n       non_neg_vec (vec_lambda (pmf pmfa)) \\<and>\n       stoch_vec (vec_lambda (pmf pmfa))", "proof (intro conjI, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>pmfa. non_neg_vec (vec_lambda (pmf pmfa))\n 2. \\<And>pmfa. stoch_vec (vec_lambda (pmf pmfa))", "case (2 pmF)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>pmfa. non_neg_vec (vec_lambda (pmf pmfa))\n 2. \\<And>pmfa. stoch_vec (vec_lambda (pmf pmfa))", "show \"stoch_vec (vec_lambda (pmf pmF))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stoch_vec (vec_lambda (pmf pmF))", "unfolding stoch_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (($h) (vec_lambda (pmf pmF))) UNIV = 1", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (pmf pmF) UNIV = 1", "apply (unfold measure_pmf_UNIV[of pmF, symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (pmf pmF) UNIV = measure_pmf.prob pmF UNIV", "by (simp add: measure_pmf_conv_infsetsum)"], ["proof (state)\nthis:\n  stoch_vec (vec_lambda (pmf pmF))\n\ngoal (1 subgoal):\n 1. \\<And>pmfa. non_neg_vec (vec_lambda (pmf pmfa))", "qed (auto simp: non_neg_vec_def stoch_vec_def)"], ["", "context pmf_as_measure\nbegin"], ["", "lift_definition pmf_of_st_vec :: \"'a :: finite st_vec \\<Rightarrow> 'a pmf\" is measure_of_st_vec"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>st_vec.\n       prob_space (measure_of_st_vec st_vec) \\<and>\n       sets (measure_of_st_vec st_vec) = UNIV \\<and>\n       (AE x in measure_of_st_vec\n                 st_vec. Sigma_Algebra.measure (measure_of_st_vec st_vec)\n                          {x} \\<noteq>\n                         0)", "proof (goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>st_vec.\n       prob_space (measure_of_st_vec st_vec) \\<and>\n       sets (measure_of_st_vec st_vec) = UNIV \\<and>\n       (AE x in measure_of_st_vec\n                 st_vec. Sigma_Algebra.measure (measure_of_st_vec st_vec)\n                          {x} \\<noteq>\n                         0)", "case (1 x)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>st_vec.\n       prob_space (measure_of_st_vec st_vec) \\<and>\n       sets (measure_of_st_vec st_vec) = UNIV \\<and>\n       (AE x in measure_of_st_vec\n                 st_vec. Sigma_Algebra.measure (measure_of_st_vec st_vec)\n                          {x} \\<noteq>\n                         0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space (measure_of_st_vec x) \\<and>\n    sets (measure_of_st_vec x) = UNIV \\<and>\n    (AE xa in measure_of_st_vec\n               x. Sigma_Algebra.measure (measure_of_st_vec x) {xa} \\<noteq>\n                  0)", "by (auto simp: prob_space_measure_of_st_vec measure_def)\n      (rule AE_I[where N = \"{i. st_vec x $ i = 0}\"], auto)"], ["proof (state)\nthis:\n  prob_space (measure_of_st_vec x) \\<and>\n  sets (measure_of_st_vec x) = UNIV \\<and>\n  (AE xa in measure_of_st_vec\n             x. Sigma_Algebra.measure (measure_of_st_vec x) {xa} \\<noteq> 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma st_vec_st_vec_of_pmf[simp]:\n  \"st_vec (st_vec_of_pmf x) $ i = pmf x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. st_vec (st_vec_of_pmf x) $h i = pmf x i", "by (simp add: st_vec_of_pmf.rep_eq)"], ["", "lemma pmf_pmf_of_st_vec[simp]: \"pmf (pmf_of_st_vec x) i = st_vec x $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf (pmf_of_st_vec x) i = st_vec x $h i", "by (transfer, auto simp: measure_def)"], ["", "lemma st_vec_of_pmf_pmf_of_st_vec[simp]: \"st_vec_of_pmf (pmf_of_st_vec x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. st_vec_of_pmf (pmf_of_st_vec x) = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. st_vec_of_pmf (pmf_of_st_vec x) = x", "have \"st_vec (st_vec_of_pmf (pmf_of_st_vec x)) = st_vec x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. st_vec (st_vec_of_pmf (pmf_of_st_vec x)) = st_vec x", "unfolding vec_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       st_vec (st_vec_of_pmf (pmf_of_st_vec x)) $h i = st_vec x $h i", "by auto"], ["proof (state)\nthis:\n  st_vec (st_vec_of_pmf (pmf_of_st_vec x)) = st_vec x\n\ngoal (1 subgoal):\n 1. st_vec_of_pmf (pmf_of_st_vec x) = x", "thus ?thesis"], ["proof (prove)\nusing this:\n  st_vec (st_vec_of_pmf (pmf_of_st_vec x)) = st_vec x\n\ngoal (1 subgoal):\n 1. st_vec_of_pmf (pmf_of_st_vec x) = x", "using st_vec_inject"], ["proof (prove)\nusing this:\n  st_vec (st_vec_of_pmf (pmf_of_st_vec x)) = st_vec x\n  (st_vec ?x = st_vec ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. st_vec_of_pmf (pmf_of_st_vec x) = x", "by blast"], ["proof (state)\nthis:\n  st_vec_of_pmf (pmf_of_st_vec x) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pmf_of_st_vec_inj: \"(pmf_of_st_vec x = pmf_of_st_vec y) = (x = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pmf_of_st_vec x = pmf_of_st_vec y) = (x = y)", "by (metis st_vec_of_pmf_pmf_of_st_vec)"], ["", "end"], ["", "end"]]}