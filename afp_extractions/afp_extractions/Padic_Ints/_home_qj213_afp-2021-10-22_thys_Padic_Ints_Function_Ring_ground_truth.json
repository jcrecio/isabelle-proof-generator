{"file_name": "/home/qj213/afp-2021-10-22/thys/Padic_Ints/Function_Ring.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Padic_Ints", "problem_names": ["lemma(in ring_functions) function_ring_defs:\n\"carrier F = extensional_funcset S (carrier R)\"\n\"(\\<otimes>\\<^bsub>F\\<^esub>) = (function_mult S R)\"\n\"(\\<oplus>\\<^bsub>F\\<^esub>) = (function_add S R)\"\n\"\\<one>\\<^bsub>F\\<^esub> = function_one S R\"\n\"\\<zero>\\<^bsub>F\\<^esub> = function_zero S R\"\n\"(\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\"", "lemma(in ring_functions) function_ring_car_memE:\n  assumes \"a \\<in> carrier F\"\n  shows \"a \\<in> extensional S\"\n        \"a \\<in> S \\<rightarrow> carrier R\"", "lemma(in ring_functions) function_ring_car_closed:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"f a \\<in> carrier R\"", "lemma(in ring_functions)  function_ring_not_car:\n  assumes \"a \\<notin> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"f a = undefined\"", "lemma(in ring_functions)  function_ring_car_eqI:\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  assumes \"\\<And>a. a \\<in> S \\<Longrightarrow> f a = g a\"\n  shows \"f = g\"", "lemma(in ring_functions) function_ring_car_memI:\n  assumes \"\\<And>a. a \\<in> S \\<Longrightarrow> f a \\<in> carrier R\"\n  assumes \"\\<And> a. a \\<notin> S\\<Longrightarrow> f a = undefined\"\n  shows \"f \\<in> carrier F\"", "lemma(in ring) function_ring_car_memI:\n  assumes \"\\<And>a. a \\<in> S \\<Longrightarrow> f a \\<in> carrier R\"\n  assumes \"\\<And> a. a \\<notin> S\\<Longrightarrow> f a = undefined\"\n  shows \"f \\<in> carrier (function_ring S R)\"", "lemma(in ring_functions) function_mult_eval_car:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(f \\<otimes>\\<^bsub>F\\<^esub> g) a = (f a) \\<otimes> (g a)\"", "lemma(in ring_functions) function_mult_eval_closed:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(f \\<otimes>\\<^bsub>F\\<^esub> g) a \\<in> carrier R\"", "lemma(in ring_functions) fun_mult_closed:\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"f \\<otimes>\\<^bsub>F\\<^esub> g \\<in> carrier F\"", "lemma(in ring_functions) fun_mult_eval_assoc:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  assumes \" z \\<in> carrier F\"\n  assumes \"a \\<in> S\"\n  shows \"(x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a = (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a\"", "lemma(in ring_functions) fun_mult_assoc:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  assumes \"z \\<in> carrier F\"\n  shows \"(x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) = (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z))\"", "lemma(in ring_functions) fun_add_eval_car:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(f \\<oplus>\\<^bsub>F\\<^esub> g) a = (f a) \\<oplus> (g a)\"", "lemma(in ring_functions) fun_add_eval_closed:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(f \\<oplus>\\<^bsub>F\\<^esub> g) a \\<in> carrier R\"", "lemma(in ring_functions) fun_add_closed:\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"f \\<oplus>\\<^bsub>F\\<^esub> g \\<in> carrier F\"", "lemma(in ring_functions) fun_add_eval_assoc:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  assumes \" z \\<in> carrier F\"\n  assumes \"a \\<in> S\"\n  shows \"(x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a = (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a\"", "lemma(in ring_functions) fun_add_assoc:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  assumes \" z \\<in> carrier F\"\n  shows \"x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z = x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)\"", "lemma(in ring_functions) fun_add_eval_comm:\n  assumes \"a \\<in> S\"\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  shows \"(x \\<oplus>\\<^bsub>F\\<^esub> y) a = (y \\<oplus>\\<^bsub>F\\<^esub> x) a\"", "lemma(in ring_functions) fun_add_comm:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  shows \"x \\<oplus>\\<^bsub>F\\<^esub> y = y \\<oplus>\\<^bsub>F\\<^esub> x\"", "lemma(in ring_functions) function_one_eval:\n  assumes \"a \\<in> S\"\n  shows \"\\<one>\\<^bsub>F\\<^esub> a = \\<one>\"", "lemma(in ring_functions) function_one_closed:\n\"\\<one>\\<^bsub>F\\<^esub> \\<in>carrier F\"", "lemma(in ring_functions) function_times_one_l:\n  assumes \"a \\<in> carrier F\"\n  shows \"\\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a = a\"", "lemma(in ring_functions) function_times_one_r:\n  assumes \"a \\<in> carrier F\"\n  shows \"a\\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub>  = a\"", "lemma(in ring_functions) function_zero_eval:\n  assumes \"a \\<in> S\"\n  shows \"\\<zero>\\<^bsub>F\\<^esub> a = \\<zero>\"", "lemma(in ring_functions) function_zero_closed:\n\"\\<zero>\\<^bsub>F\\<^esub> \\<in>carrier F\"", "lemma(in ring_functions) fun_add_zeroL:\n  assumes \"a \\<in> carrier F\"\n  shows \"\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a = a\"", "lemma(in ring_functions) fun_add_zeroR:\n  assumes \"a \\<in> carrier F\"\n  shows \"a \\<oplus>\\<^bsub>F\\<^esub> \\<zero>\\<^bsub>F\\<^esub> = a\"", "lemma(in ring_functions) function_mult_r_distr: \n  assumes \"x \\<in> carrier F\"\n  assumes\" y \\<in> carrier F\"\n  assumes \" z \\<in> carrier F\"\n  shows \" (x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z = x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z\"", "lemma(in ring_functions) function_mult_l_distr:\n  assumes \"x \\<in> carrier F\"\n  assumes\" y \\<in> carrier F\"\n  assumes \" z \\<in> carrier F\"\n  shows \"z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y) = z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub> z \\<otimes>\\<^bsub>F\\<^esub> y\"", "lemma(in ring_functions) function_uminus_closed:\n  assumes \"f \\<in> carrier F\"\n  shows \"function_uminus S R f \\<in> carrier F\"", "lemma(in ring_functions) function_uminus_eval:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"(function_uminus S R f) a = \\<ominus> (f a)\"", "lemma(in ring_functions) function_uminus_add_r:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"f \\<oplus>\\<^bsub>F\\<^esub> function_uminus S R f = \\<zero>\\<^bsub>F\\<^esub>\"", "lemma(in ring_functions) function_uminus_add_l:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"function_uminus S R f \\<oplus>\\<^bsub>F\\<^esub> f = \\<zero>\\<^bsub>F\\<^esub>\"", "lemma(in ring_functions) function_smult_eval:\n  assumes \"a \\<in> carrier R\"\n  assumes  \"f \\<in> carrier F\"\n  assumes \"b \\<in> S\"\n  shows \"(a \\<odot>\\<^bsub>F\\<^esub> f) b = a \\<otimes> (f b)\"", "lemma(in ring_functions) function_smult_closed:\n  assumes \"a \\<in> carrier R\"\n  assumes  \"f \\<in> carrier F\"\n  shows \"a \\<odot>\\<^bsub>F\\<^esub> f \\<in> carrier F\"", "lemma(in ring_functions) function_smult_assoc1:\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  assumes  \"f \\<in> carrier F\"\n  shows \"b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f)  = (b \\<otimes> a)\\<odot>\\<^bsub>F\\<^esub>f\"", "lemma(in ring_functions) function_smult_assoc2:\n  assumes \"a \\<in> carrier R\"\n  assumes  \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(a \\<odot>\\<^bsub>F\\<^esub> f)\\<otimes>\\<^bsub>F\\<^esub>g  = a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)\"", "lemma(in ring_functions) function_smult_one:\n  assumes  \"f \\<in> carrier F\"\n  shows \"\\<one>\\<odot>\\<^bsub>F\\<^esub>f = f\"", "lemma(in ring_functions) function_smult_l_distr:\n\"[| a \\<in> carrier R; b \\<in> carrier R; x \\<in> carrier F |] ==>\n      (a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x = a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub> b \\<odot>\\<^bsub>F\\<^esub> x\"", "lemma(in ring_functions) function_smult_r_distr:\n \"[| a \\<in> carrier R; x \\<in> carrier F; y \\<in> carrier F |] ==>\n      a \\<odot>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y) = a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub> a \\<odot>\\<^bsub>F\\<^esub> y\"", "lemma(in ring_functions) function_ring_is_abelian_group:\n\"abelian_group F\"", "lemma(in ring_functions) function_ring_is_monoid:\n\"monoid F\"", "lemma(in ring_functions) function_ring_is_ring:\n\"ring F\"", "lemma(in cring_functions) function_mult_comm: \n  assumes \"x \\<in> carrier F\"\n  assumes\" y \\<in> carrier F\"\n  shows \"x \\<otimes>\\<^bsub>F\\<^esub> y = y \\<otimes>\\<^bsub>F\\<^esub> x\"", "lemma(in cring_functions) function_ring_is_comm_monoid:\n\"comm_monoid F\"", "lemma(in cring_functions) function_ring_is_cring:\n\"cring F\"", "lemma(in cring_functions) function_ring_is_algebra:\n\"algebra R F\"", "lemma(in ring_functions) function_uminus:\n  assumes \"f \\<in> carrier F\"\n  shows \"\\<ominus>\\<^bsub>F\\<^esub> f = (function_uminus S R) f\"", "lemma(in ring_functions) function_uminus_eval':\n  assumes \"f \\<in> carrier F\"\n  assumes \"a \\<in> S\"\n  shows \"(\\<ominus>\\<^bsub>F\\<^esub> f) a = (function_uminus S R) f a\"", "lemma(in ring_functions) function_uminus_eval'':\n  assumes \"f \\<in> carrier F\"\n  assumes \"a \\<in> S\"\n  shows \"(\\<ominus>\\<^bsub>F\\<^esub> f) a = \\<ominus> (f a)\"", "lemma(in ring_functions) constant_function_closed:\n  assumes \"a \\<in> carrier R\"\n  shows \"const a \\<in> carrier F\"", "lemma(in ring_functions) constant_functionE: \n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> S\"\n  shows \"const a b = a\"", "lemma(in ring_functions) constant_function_add: \n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  shows \"const (a \\<oplus>\\<^bsub>R\\<^esub> b) = (const a) \\<oplus>\\<^bsub>F\\<^esub> (const b) \"", "lemma(in ring_functions) constant_function_mult: \n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  shows \"const (a \\<otimes>\\<^bsub>R\\<^esub> b) = (const a) \\<otimes>\\<^bsub>F\\<^esub> (const b)\"", "lemma(in ring_functions) constant_function_minus: \n  assumes \"a \\<in> carrier R\"\n  shows \"\\<ominus>\\<^bsub>F\\<^esub>(const a) = (const (\\<ominus>\\<^bsub>R\\<^esub> a)) \"", "lemma(in ring_functions) function_one_is_constant:\n\"const \\<one> = \\<one>\\<^bsub>F\\<^esub>\"", "lemma(in ring_functions) function_zero_is_constant:\n\"const \\<zero> = \\<zero>\\<^bsub>F\\<^esub>\"", "lemma(in U_function_ring) ring_function_ring_comp:\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"g \\<in> carrier (Fun R)\"\n  shows \"ring_compose f g \\<in> carrier (Fun R)\"", "lemma(in ring_functions) function_nat_pow_eval:\n  assumes \"f \\<in> carrier F\"\n  assumes \"s \\<in> S\"\n  shows \"(f[^]\\<^bsub>F\\<^esub>(n::nat)) s = (f s)[^]n\"", "lemma a_translate_functions:\n  assumes \"c \\<in> carrier R\"\n  shows \"a_translate c \\<in> carrier (Fun R)\"", "lemma m_translate_functions:\n  assumes \"c \\<in> carrier R\"\n  shows \"m_translate c \\<in> carrier (Fun R)\"", "lemma nat_power_functions:\n  shows \"nat_power n \\<in> carrier (Fun R)\"", "lemma a_translate_eq:\n  assumes \"c \\<in> carrier R\"\n  assumes \"a \\<in> carrier R\"\n  shows \"a_translate c a = c \\<oplus> a\"", "lemma a_translate_eq':\n  assumes \"c \\<in> carrier R\"\n  assumes \"a \\<notin> carrier R\"\n  shows \"a_translate c a = undefined\"", "lemma a_translate_eq'':\n  assumes \"c \\<notin> carrier R\"\n  shows \"a_translate c = undefined\"", "lemma m_translate_eq:\n  assumes \"c \\<in> carrier R\"\n  assumes \"a \\<in> carrier R\"\n  shows \"m_translate c a = c \\<otimes> a\"", "lemma m_translate_eq':\n  assumes \"c \\<in> carrier R\"\n  assumes \"a \\<notin> carrier R\"\n  shows \"m_translate c a = undefined \"", "lemma m_translate_eq'':\n  assumes \"c \\<notin> carrier R\"\n  shows \"m_translate c = undefined\"", "lemma nat_power_eq:\n  assumes \"a \\<in> carrier R\"\n  shows \"nat_power n a = a[^]\\<^bsub>R\\<^esub> n\"", "lemma nat_power_eq':\n  assumes \"a \\<notin> carrier R\"\n  shows \"nat_power n a = undefined\"", "lemma constant_function_eq:\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  shows \"\\<cc>\\<^bsub>a\\<^esub> b = a\"", "lemma constant_function_eq':\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<notin> carrier R\"\n  shows \"\\<cc>\\<^bsub>a\\<^esub> b = undefined\"", "lemma monomial_functions:\n  assumes \"c \\<in> carrier R\"\n  shows \"monomial c n \\<in> carrier (Fun R)\"", "lemma ring_id_closed[simp]:\n\"ring_id \\<in> carrier (Fun R)\"", "lemma ring_id_eval:\n  assumes \"a \\<in> carrier R\"\n  shows \"ring_id a = a\"", "lemma constant_a_trans: \n  assumes \"a \\<in>carrier R\"\n  shows \"m_translate a  = \\<cc>\\<^bsub>a\\<^esub> \\<otimes>\\<^bsub>Fun R\\<^esub> ring_id\"", "lemma polynomial_induct_lemma:\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"a \\<in> carrier R\"\n  shows \"(\\<lambda>x \\<in> carrier R. a \\<oplus> x \\<otimes> (f x)) \\<in> carrier (Fun R)\"", "lemma polynomial_function: \n  shows \"set as \\<subseteq> carrier R \\<Longrightarrow> polynomial as \\<in> carrier (Fun R)\"", "lemma polynomial_constant:\n  assumes \"a \\<in> carrier R\"\n  shows \"polynomial [a] = \\<cc>\\<^bsub>a\\<^esub>\"", "lemma closed_seqs_memI:\n  assumes \"\\<And>k. s k \\<in> carrier R\"\n  shows \"s \\<in> closed_seqs R\"", "lemma closed_seqs_memE:\n  assumes \"s \\<in> closed_seqs R\"\n  shows \"s k \\<in> carrier R\"", "lemma is_constant_seqI:\n  fixes a\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"\\<And>k. s k = a\"\n  shows \"is_constant_seq R s\"", "lemma is_constant_seqE:\n  assumes \"is_constant_seq R s\"\n  assumes \"s k = a\"\n  shows \"s n = a\"", "lemma is_constant_seq_imp_closed:\n  assumes \"is_constant_seq R s\"\n  shows \"s \\<in> closed_seqs R\"", "lemma seq_plus_closed:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"s' \\<in> closed_seqs R\"\n  shows \"s \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s' \\<in> closed_seqs R\"", "lemma seq_mult_closed:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"s' \\<in> closed_seqs R\"\n  shows \"s \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s' \\<in> closed_seqs R\"", "lemma constant_function_comp_is_closed_seq:\n  assumes \"a \\<in> carrier R\"\n  assumes \"s \\<in> closed_seqs R\"\n  shows \"(const a \\<circ> s) \\<in> closed_seqs R\"", "lemma constant_function_comp_is_constant_seq:\n  assumes \"a \\<in> carrier R\"\n  assumes \"s \\<in> closed_seqs R\"\n  shows \"is_constant_seq R ((const a) \\<circ> s)\"", "lemma function_comp_is_closed_seq:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"f \\<in> carrier (Fun R)\"\n  shows \"f \\<circ> s \\<in> closed_seqs R\"", "lemma function_sum_comp_is_seq_sum:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"g \\<in> carrier (Fun R)\"\n  shows \"(f \\<oplus>\\<^bsub>Fun R\\<^esub> g) \\<circ> s = (f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> (g \\<circ> s)\"", "lemma function_mult_comp_is_seq_mult:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"g \\<in> carrier (Fun R)\"\n  shows \"(f \\<otimes>\\<^bsub>Fun R\\<^esub> g) \\<circ> s = (f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> (g \\<circ> s)\"", "lemma seq_plus_simp:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"t \\<in> closed_seqs R\"\n  shows \"(s \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> t) k = s k \\<oplus> t k\"", "lemma seq_mult_simp:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"t \\<in> closed_seqs R\"\n  shows \"(s \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> t) k = s k \\<otimes> t k\"", "lemma seq_one_simp:\n\"\\<one>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> k = \\<one>\"", "lemma seq_zero_simp:\n\"\\<zero>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> k = \\<zero>\"", "lemma(in U_function_ring) ring_id_seq_comp:\n  assumes \"s \\<in> closed_seqs R\"\n  shows \"ring_id \\<circ> s = s\"", "lemma(in U_function_ring) ring_seq_smult_closed:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"a \\<in> carrier R\"\n  shows \"a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s \\<in> closed_seqs R\"", "lemma(in U_function_ring) ring_seq_smult_eval:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"a \\<in> carrier R\"\n  shows \"(a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s) k = a \\<otimes> (s k)\"", "lemma(in U_function_ring) ring_seq_smult_comp_assoc:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"a \\<in> carrier R\"\n  shows \"((a \\<odot>\\<^bsub>Fun R\\<^esub> f) \\<circ> s) = a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> (f \\<circ> s)\"", "lemma to_struct_map_closed:\n  assumes \"f \\<in> (carrier T) \\<rightarrow> (carrier S)\"\n  shows \"to_struct_map T f \\<in> (struct_maps T S)\"", "lemma struct_maps_memI:\n  assumes \"\\<And> x. x \\<in> carrier T \\<Longrightarrow> f x \\<in> carrier S\"\n  assumes \"\\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined\"\n  shows \"f \\<in> struct_maps T S\"", "lemma struct_maps_memE:\n  assumes \"f \\<in> struct_maps T S\"\n  shows  \"\\<And> x. x \\<in> carrier T \\<Longrightarrow> f x \\<in> carrier S\"\n         \"\\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined\"", "lemma struct_map_comp:\n  assumes \"g \\<in> (struct_maps T S)\"\n  assumes \"f \\<in> (struct_maps S U)\"\n  shows \"rcomp (carrier T) f g \\<in> (struct_maps T U)\"", "lemma r_comp_is_compose:\n  assumes \"g \\<in> (struct_maps T S)\"\n  assumes \"f \\<in> (struct_maps S U)\"\n  assumes \"a \\<in> (carrier T)\"\n  shows \"(rcomp (carrier T) f g) a = (f \\<circ> g) a\"", "lemma r_comp_not_in_car:\n  assumes \"g \\<in> (struct_maps T S)\"\n  assumes \"f \\<in> (struct_maps S U)\"\n  assumes \"a \\<notin> (carrier T)\"\n  shows \"(rcomp (carrier T) f g) a = undefined\"", "lemma pullback_closed:\n  assumes \"f \\<in> (struct_maps T S)\"\n  assumes \"g \\<in> (struct_maps S U)\"\n  shows \"pullback T f g \\<in> (struct_maps T U)\"", "lemma pushforward_closed:\n  assumes \"g \\<in> (struct_maps T S)\"\n  assumes \"f \\<in> (struct_maps S U)\"\n  shows \"pushforward T f g \\<in> (struct_maps T U)\""], "translations": [["", "lemma(in ring_functions) function_ring_defs:\n\"carrier F = extensional_funcset S (carrier R)\"\n\"(\\<otimes>\\<^bsub>F\\<^esub>) = (function_mult S R)\"\n\"(\\<oplus>\\<^bsub>F\\<^esub>) = (function_add S R)\"\n\"\\<one>\\<^bsub>F\\<^esub> = function_one S R\"\n\"\\<zero>\\<^bsub>F\\<^esub> = function_zero S R\"\n\"(\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (carrier F = S \\<rightarrow>\\<^sub>E carrier R &&&\n     (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R &&&\n     (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R) &&&\n    \\<one>\\<^bsub>F\\<^esub> = function_one S R &&&\n    \\<zero>\\<^bsub>F\\<^esub> = function_zero S R &&&\n    (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (carrier (function_ring S R) = S \\<rightarrow>\\<^sub>E carrier R &&&\n     (\\<otimes>\\<^bsub>function_ring S R\\<^esub>) = function_mult S R &&&\n     (\\<oplus>\\<^bsub>function_ring S R\\<^esub>) = function_add S R) &&&\n    \\<one>\\<^bsub>function_ring S R\\<^esub> = function_one S R &&&\n    \\<zero>\\<^bsub>function_ring S R\\<^esub> = function_zero S R &&&\n    (\\<odot>\\<^bsub>function_ring S R\\<^esub>) = function_scalar_mult S R", "by ( auto simp add: function_ring_def)"], ["", "lemma(in ring_functions) function_ring_car_memE:\n  assumes \"a \\<in> carrier F\"\n  shows \"a \\<in> extensional S\"\n        \"a \\<in> S \\<rightarrow> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> extensional S &&& a \\<in> S \\<rightarrow> carrier R", "using assms function_ring_defs"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n\ngoal (1 subgoal):\n 1. a \\<in> extensional S &&& a \\<in> S \\<rightarrow> carrier R", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n     carrier F = S \\<rightarrow>\\<^sub>E carrier R;\n     (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R;\n     (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R;\n     \\<one>\\<^bsub>F\\<^esub> = function_one S R;\n     \\<zero>\\<^bsub>F\\<^esub> = function_zero S R;\n     (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\\<rbrakk>\n    \\<Longrightarrow> a \\<in> extensional S\n 2. a \\<in> S \\<rightarrow> carrier R", "using assms function_ring_defs  PiE_iff"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n  (?f \\<in> Pi\\<^sub>E ?I ?X) =\n  ((\\<forall>i\\<in>?I. ?f i \\<in> ?X i) \\<and> ?f \\<in> extensional ?I)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> S \\<rightarrow>\\<^sub>E carrier R;\n     carrier F = S \\<rightarrow>\\<^sub>E carrier R;\n     (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R;\n     (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R;\n     \\<one>\\<^bsub>F\\<^esub> = function_one S R;\n     \\<zero>\\<^bsub>F\\<^esub> = function_zero S R;\n     (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\\<rbrakk>\n    \\<Longrightarrow> a \\<in> extensional S\n 2. a \\<in> S \\<rightarrow> carrier R", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> S \\<rightarrow> carrier R", "using assms  function_ring_defs(1)"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n\ngoal (1 subgoal):\n 1. a \\<in> S \\<rightarrow> carrier R", "by fastforce"], ["", "lemma(in ring_functions) function_ring_car_closed:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"f a \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a \\<in> carrier R", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n\ngoal (1 subgoal):\n 1. f a \\<in> carrier R", "unfolding function_ring_def F_def"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier\n           \\<lparr>carrier = S \\<rightarrow>\\<^sub>E carrier R,\n              mult = function_mult S R, one = function_one S R,\n              zero = function_zero S R, add = function_add S R,\n              smult = function_scalar_mult S R\\<rparr>\n\ngoal (1 subgoal):\n 1. f a \\<in> carrier R", "by auto"], ["", "lemma(in ring_functions)  function_ring_not_car:\n  assumes \"a \\<notin> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"f a = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a = undefined", "using assms"], ["proof (prove)\nusing this:\n  a \\<notin> S\n  f \\<in> carrier F\n\ngoal (1 subgoal):\n 1. f a = undefined", "unfolding function_ring_def F_def"], ["proof (prove)\nusing this:\n  a \\<notin> S\n  f \\<in> carrier\n           \\<lparr>carrier = S \\<rightarrow>\\<^sub>E carrier R,\n              mult = function_mult S R, one = function_one S R,\n              zero = function_zero S R, add = function_add S R,\n              smult = function_scalar_mult S R\\<rparr>\n\ngoal (1 subgoal):\n 1. f a = undefined", "by auto"], ["", "lemma(in ring_functions)  function_ring_car_eqI:\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  assumes \"\\<And>a. a \\<in> S \\<Longrightarrow> f a = g a\"\n  shows \"f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = g", "using assms(1) assms(2) assms(3) extensionalityI function_ring_car_memE(1)"], ["proof (prove)\nusing this:\n  f \\<in> carrier F\n  g \\<in> carrier F\n  ?a \\<in> S \\<Longrightarrow> f ?a = g ?a\n  \\<lbrakk>?f \\<in> extensional ?A; ?g \\<in> extensional ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> ?f x = ?g x\\<rbrakk>\n  \\<Longrightarrow> ?f = ?g\n  ?a \\<in> carrier F \\<Longrightarrow> ?a \\<in> extensional S\n\ngoal (1 subgoal):\n 1. f = g", "by blast"], ["", "lemma(in ring_functions) function_ring_car_memI:\n  assumes \"\\<And>a. a \\<in> S \\<Longrightarrow> f a \\<in> carrier R\"\n  assumes \"\\<And> a. a \\<notin> S\\<Longrightarrow> f a = undefined\"\n  shows \"f \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> carrier F", "using function_ring_defs assms"], ["proof (prove)\nusing this:\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n  ?a \\<in> S \\<Longrightarrow> f ?a \\<in> carrier R\n  ?a \\<notin> S \\<Longrightarrow> f ?a = undefined\n\ngoal (1 subgoal):\n 1. f \\<in> carrier F", "unfolding extensional_funcset_def"], ["proof (prove)\nusing this:\n  carrier F = (S \\<rightarrow> carrier R) \\<inter> extensional S\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n  ?a \\<in> S \\<Longrightarrow> f ?a \\<in> carrier R\n  ?a \\<notin> S \\<Longrightarrow> f ?a = undefined\n\ngoal (1 subgoal):\n 1. f \\<in> carrier F", "by (simp add: \\<open>\\<And>a. a \\<in> S \\<Longrightarrow> f a \\<in> carrier R\\<close> extensional_def)"], ["", "lemma(in ring) function_ring_car_memI:\n  assumes \"\\<And>a. a \\<in> S \\<Longrightarrow> f a \\<in> carrier R\"\n  assumes \"\\<And> a. a \\<notin> S\\<Longrightarrow> f a = undefined\"\n  shows \"f \\<in> carrier (function_ring S R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> carrier (function_ring S R)", "by (simp add: assms(1) assms(2) local.ring_axioms ring_functions.function_ring_car_memI ring_functions.intro)"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>Basic Multiplication Facts\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "lemma(in ring_functions) function_mult_eval_car:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(f \\<otimes>\\<^bsub>F\\<^esub> g) a = (f a) \\<otimes> (g a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<otimes>\\<^bsub>F\\<^esub> g) a = f a \\<otimes> g a", "using assms function_ring_defs"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n  g \\<in> carrier F\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n\ngoal (1 subgoal):\n 1. (f \\<otimes>\\<^bsub>F\\<^esub> g) a = f a \\<otimes> g a", "unfolding function_mult_def"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n  g \\<in> carrier F\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) =\n  (\\<lambda>f g. \\<lambda>x\\<in>S. f x \\<otimes> g x)\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n\ngoal (1 subgoal):\n 1. (f \\<otimes>\\<^bsub>F\\<^esub> g) a = f a \\<otimes> g a", "by simp"], ["", "lemma(in ring_functions) function_mult_eval_closed:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(f \\<otimes>\\<^bsub>F\\<^esub> g) a \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<otimes>\\<^bsub>F\\<^esub> g) a \\<in> carrier R", "using assms function_mult_eval_car"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n  g \\<in> carrier F\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (?f \\<otimes>\\<^bsub>F\\<^esub> ?g) ?a =\n                    ?f ?a \\<otimes> ?g ?a\n\ngoal (1 subgoal):\n 1. (f \\<otimes>\\<^bsub>F\\<^esub> g) a \\<in> carrier R", "using F_def ring_functions.function_ring_car_closed ring_functions_axioms"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n  g \\<in> carrier F\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (?f \\<otimes>\\<^bsub>F\\<^esub> ?g) ?a =\n                    ?f ?a \\<otimes> ?g ?a\n  F \\<equiv> function_ring S R\n  \\<lbrakk>ring_functions ?R; ?a \\<in> ?S;\n   ?f \\<in> carrier (function_ring ?S ?R)\\<rbrakk>\n  \\<Longrightarrow> ?f ?a \\<in> carrier ?R\n  ring_functions R\n\ngoal (1 subgoal):\n 1. (f \\<otimes>\\<^bsub>F\\<^esub> g) a \\<in> carrier R", "by fastforce"], ["", "lemma(in ring_functions) fun_mult_closed:\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"f \\<otimes>\\<^bsub>F\\<^esub> g \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<otimes>\\<^bsub>F\\<^esub> g \\<in> carrier F", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<otimes>\\<^bsub>F\\<^esub> g) a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow>\n       (f \\<otimes>\\<^bsub>F\\<^esub> g) a = undefined", "apply (simp add: assms(1) assms(2) function_mult_eval_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> S \\<Longrightarrow>\n       (f \\<otimes>\\<^bsub>F\\<^esub> g) a = undefined", "by (simp add: function_mult_def function_ring_defs(2))"], ["", "lemma(in ring_functions) fun_mult_eval_assoc:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  assumes \" z \\<in> carrier F\"\n  assumes \"a \\<in> S\"\n  shows \"(x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a = (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a", "have 0: \"(x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a = (x a) \\<otimes> (y a) \\<otimes> (z a) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    x a \\<otimes> y a \\<otimes> z a", "by (simp add: assms(1) assms(2) assms(3) assms(4) fun_mult_closed function_mult_eval_car)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n  x a \\<otimes> y a \\<otimes> z a\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a", "have 1: \"(x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a = (x a) \\<otimes> ((y a) \\<otimes> (z a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a =\n    x a \\<otimes> (y a \\<otimes> z a)", "by (simp add: assms(1) assms(2) assms(3) assms(4) fun_mult_closed function_mult_eval_car)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a =\n  x a \\<otimes> (y a \\<otimes> z a)\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a", "have 2:\"(x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a = (x a) \\<otimes> (y a) \\<otimes> (z a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a =\n    x a \\<otimes> y a \\<otimes> z a", "using 1 assms"], ["proof (prove)\nusing this:\n  (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a =\n  x a \\<otimes> (y a \\<otimes> z a)\n  x \\<in> carrier F\n  y \\<in> carrier F\n  z \\<in> carrier F\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a =\n    x a \\<otimes> y a \\<otimes> z a", "by (simp add: function_ring_car_closed m_assoc)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a =\n  x a \\<otimes> y a \\<otimes> z a\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a", "using 0 2"], ["proof (prove)\nusing this:\n  (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n  x a \\<otimes> y a \\<otimes> z a\n  (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a =\n  x a \\<otimes> y a \\<otimes> z a\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a", "by auto"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a =\n  (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)) a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in ring_functions) fun_mult_assoc:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  assumes \"z \\<in> carrier F\"\n  shows \"(x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) = (x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z =\n    x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)", "using fun_mult_eval_assoc[of x]"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> carrier F; ?y \\<in> carrier F; ?z \\<in> carrier F;\n   ?a \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (x \\<otimes>\\<^bsub>F\\<^esub>\n                     ?y \\<otimes>\\<^bsub>F\\<^esub>\n                     ?z)\n                     ?a =\n                    (x \\<otimes>\\<^bsub>F\\<^esub>\n                     (?y \\<otimes>\\<^bsub>F\\<^esub> ?z))\n                     ?a\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z =\n    x \\<otimes>\\<^bsub>F\\<^esub> (y \\<otimes>\\<^bsub>F\\<^esub> z)", "by (simp add: assms(1) assms(2) assms(3) fun_mult_closed function_ring_car_eqI)"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>Basic Addition Facts\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "lemma(in ring_functions) fun_add_eval_car:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(f \\<oplus>\\<^bsub>F\\<^esub> g) a = (f a) \\<oplus> (g a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<oplus>\\<^bsub>F\\<^esub> g) a = f a \\<oplus> g a", "by (simp add: assms(1) function_add_def function_ring_defs(3))"], ["", "lemma(in ring_functions) fun_add_eval_closed:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(f \\<oplus>\\<^bsub>F\\<^esub> g) a \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<oplus>\\<^bsub>F\\<^esub> g) a \\<in> carrier R", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n  g \\<in> carrier F\n\ngoal (1 subgoal):\n 1. (f \\<oplus>\\<^bsub>F\\<^esub> g) a \\<in> carrier R", "unfolding F_def"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier (function_ring S R)\n  g \\<in> carrier (function_ring S R)\n\ngoal (1 subgoal):\n 1. (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> g) a \\<in> carrier R", "using F_def fun_add_eval_car function_ring_car_closed"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier (function_ring S R)\n  g \\<in> carrier (function_ring S R)\n  F \\<equiv> function_ring S R\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (?f \\<oplus>\\<^bsub>F\\<^esub> ?g) ?a =\n                    ?f ?a \\<oplus> ?g ?a\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f ?a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> g) a \\<in> carrier R", "by auto"], ["", "lemma(in ring_functions) fun_add_closed:\n  assumes \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"f \\<oplus>\\<^bsub>F\\<^esub> g \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<oplus>\\<^bsub>F\\<^esub> g \\<in> carrier F", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>F\\<^esub> g) a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>F\\<^esub> g) a = undefined", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> carrier F\n  g \\<in> carrier F\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>F\\<^esub> g) a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>F\\<^esub> g) a = undefined", "unfolding F_def"], ["proof (prove)\nusing this:\n  f \\<in> carrier (function_ring S R)\n  g \\<in> carrier (function_ring S R)\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> g) a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> g) a = undefined", "using F_def fun_add_eval_closed"], ["proof (prove)\nusing this:\n  f \\<in> carrier (function_ring S R)\n  g \\<in> carrier (function_ring S R)\n  F \\<equiv> function_ring S R\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (?f \\<oplus>\\<^bsub>F\\<^esub> ?g) ?a \\<in> carrier R\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> g) a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> g) a = undefined", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> g) a = undefined", "by (simp add: function_add_def function_ring_def)"], ["", "lemma(in ring_functions) fun_add_eval_assoc:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  assumes \" z \\<in> carrier F\"\n  assumes \"a \\<in> S\"\n  shows \"(x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a = (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n    (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n    (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "have 0: \"(x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a = (x a) \\<oplus> (y a) \\<oplus> (z a) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n    x a \\<oplus> y a \\<oplus> z a", "by (simp add: assms(1) assms(2) assms(3) assms(4) fun_add_closed fun_add_eval_car)"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n  x a \\<oplus> y a \\<oplus> z a\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n    (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "have 1: \"(x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a = (x a) \\<oplus> ((y a) \\<oplus> (z a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a =\n    x a \\<oplus> (y a \\<oplus> z a)", "by (simp add: assms(1) assms(2) assms(3) assms(4) fun_add_closed fun_add_eval_car)"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a =\n  x a \\<oplus> (y a \\<oplus> z a)\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n    (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "have 2:\"(x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a = (x a) \\<oplus> (y a) \\<oplus> (z a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a =\n    x a \\<oplus> y a \\<oplus> z a", "using 1 assms"], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a =\n  x a \\<oplus> (y a \\<oplus> z a)\n  x \\<in> carrier F\n  y \\<in> carrier F\n  z \\<in> carrier F\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a =\n    x a \\<oplus> y a \\<oplus> z a", "by (simp add: add.m_assoc function_ring_car_closed)"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a =\n  x a \\<oplus> y a \\<oplus> z a\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n    (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n    (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "using 0 2"], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n  x a \\<oplus> y a \\<oplus> z a\n  (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a =\n  x a \\<oplus> y a \\<oplus> z a\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n    (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "by auto"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n  (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in ring_functions) fun_add_assoc:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  assumes \" z \\<in> carrier F\"\n  shows \"x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z = x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z =\n    x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z\n    \\<in> carrier F\n 2. x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)\n    \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n       (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier F\n  y \\<in> carrier F\n  z \\<in> carrier F\n\ngoal (3 subgoals):\n 1. x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z\n    \\<in> carrier F\n 2. x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)\n    \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n       (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "apply (simp add: fun_add_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)\n    \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n       (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "apply (simp add: assms(1) assms(2) assms(3) fun_add_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (x \\<oplus>\\<^bsub>F\\<^esub> y \\<oplus>\\<^bsub>F\\<^esub> z) a =\n       (x \\<oplus>\\<^bsub>F\\<^esub> (y \\<oplus>\\<^bsub>F\\<^esub> z)) a", "by (simp add: assms(1) assms(2) assms(3) fun_add_eval_assoc)"], ["", "lemma(in ring_functions) fun_add_eval_comm:\n  assumes \"a \\<in> S\"\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  shows \"(x \\<oplus>\\<^bsub>F\\<^esub> y) a = (y \\<oplus>\\<^bsub>F\\<^esub> x) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y) a = (y \\<oplus>\\<^bsub>F\\<^esub> x) a", "by (metis F_def assms(1) assms(2) assms(3) fun_add_eval_car ring.ring_simprules(10) ring_functions.function_ring_car_closed ring_functions_axioms ring_functions_def)"], ["", "lemma(in ring_functions) fun_add_comm:\n  assumes \"x \\<in> carrier F\"\n  assumes \"y \\<in> carrier F\" \n  shows \"x \\<oplus>\\<^bsub>F\\<^esub> y = y \\<oplus>\\<^bsub>F\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>F\\<^esub> y = y \\<oplus>\\<^bsub>F\\<^esub> x", "using fun_add_eval_comm assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> S; ?x \\<in> carrier F; ?y \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (?x \\<oplus>\\<^bsub>F\\<^esub> ?y) ?a =\n                    (?y \\<oplus>\\<^bsub>F\\<^esub> ?x) ?a\n  x \\<in> carrier F\n  y \\<in> carrier F\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>F\\<^esub> y = y \\<oplus>\\<^bsub>F\\<^esub> x", "by (metis (no_types, hide_lams) fun_add_closed function_ring_car_eqI)"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>Basic Facts About the Multiplicative Unit\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "lemma(in ring_functions) function_one_eval:\n  assumes \"a \\<in> S\"\n  shows \"\\<one>\\<^bsub>F\\<^esub> a = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>F\\<^esub> a = \\<one>", "using assms function_ring_defs"], ["proof (prove)\nusing this:\n  a \\<in> S\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>F\\<^esub> a = \\<one>", "unfolding function_one_def"], ["proof (prove)\nusing this:\n  a \\<in> S\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = (\\<lambda>x\\<in>S. \\<one>)\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>F\\<^esub> a = \\<one>", "by simp"], ["", "lemma(in ring_functions) function_one_closed:\n\"\\<one>\\<^bsub>F\\<^esub> \\<in>carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> a = undefined", "using function_ring_defs"], ["proof (prove)\nusing this:\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> a = undefined", "using function_one_eval"], ["proof (prove)\nusing this:\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n  ?a \\<in> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> ?a = \\<one>\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> a = undefined", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> a = undefined", "by (simp add: function_one_def function_ring_defs(4))"], ["", "lemma(in ring_functions) function_times_one_l:\n  assumes \"a \\<in> carrier F\"\n  shows \"\\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a = a", "proof(rule function_ring_car_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a \\<in> carrier F\n 2. a \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a) aa = a aa", "show \"\\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a \\<in> carrier F", "using assms fun_mult_closed function_one_closed"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n  \\<lbrakk>?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f \\<otimes>\\<^bsub>F\\<^esub> ?g \\<in> carrier F\n  \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a \\<in> carrier F", "by blast"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a \\<in> carrier F\n\ngoal (2 subgoals):\n 1. a \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a) aa = a aa", "show \" a \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier F", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n\ngoal (1 subgoal):\n 1. a \\<in> carrier F", "by simp"], ["proof (state)\nthis:\n  a \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a) aa = a aa", "show \"\\<And>c. c \\<in> S \\<Longrightarrow> (\\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a) c = a c \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       c \\<in> S \\<Longrightarrow>\n       (\\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a) c = a c", "by (simp add: assms function_mult_eval_car function_one_eval function_one_closed function_ring_car_closed)"], ["proof (state)\nthis:\n  ?c \\<in> S \\<Longrightarrow>\n  (\\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> a) ?c = a ?c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in ring_functions) function_times_one_r:\n  assumes \"a \\<in> carrier F\"\n  shows \"a\\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub>  = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> = a", "proof(rule function_ring_car_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n 2. a \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub>) aa = a aa", "show \"a\\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F", "using assms fun_mult_closed function_one_closed"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n  \\<lbrakk>?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f \\<otimes>\\<^bsub>F\\<^esub> ?g \\<in> carrier F\n  \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F", "by blast"], ["proof (state)\nthis:\n  a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n\ngoal (2 subgoals):\n 1. a \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub>) aa = a aa", "show \" a \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier F", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n\ngoal (1 subgoal):\n 1. a \\<in> carrier F", "by simp"], ["proof (state)\nthis:\n  a \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub>) aa = a aa", "show \"\\<And>c. c \\<in> S \\<Longrightarrow> (a\\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub>) c = a c \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       c \\<in> S \\<Longrightarrow>\n       (a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub>) c = a c", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       c \\<in> S \\<Longrightarrow>\n       (a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub>) c = a c", "by (simp add: function_mult_eval_car function_one_eval function_one_closed function_ring_car_closed)"], ["proof (state)\nthis:\n  ?c \\<in> S \\<Longrightarrow>\n  (a \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub>) ?c = a ?c\n\ngoal:\nNo subgoals!", "qed"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>Basic Facts About the Additive Unit\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "lemma(in ring_functions) function_zero_eval:\n  assumes \"a \\<in> S\"\n  shows \"\\<zero>\\<^bsub>F\\<^esub> a = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>F\\<^esub> a = \\<zero>", "using assms function_ring_defs"], ["proof (prove)\nusing this:\n  a \\<in> S\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>F\\<^esub> a = \\<zero>", "unfolding function_zero_def"], ["proof (prove)\nusing this:\n  a \\<in> S\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = (\\<lambda>x\\<in>S. \\<zero>)\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>F\\<^esub> a = \\<zero>", "by simp"], ["", "lemma(in ring_functions) function_zero_closed:\n\"\\<zero>\\<^bsub>F\\<^esub> \\<in>carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       \\<zero>\\<^bsub>F\\<^esub> a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow> \\<zero>\\<^bsub>F\\<^esub> a = undefined", "apply (simp add: function_zero_eval)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> S \\<Longrightarrow> \\<zero>\\<^bsub>F\\<^esub> a = undefined", "by (simp add: function_ring_defs(5) function_zero_def)"], ["", "lemma(in ring_functions) fun_add_zeroL:\n  assumes \"a \\<in> carrier F\"\n  shows \"\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a = a", "proof(rule function_ring_car_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a \\<in> carrier F\n 2. a \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a) aa = a aa", "show \"\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a \\<in> carrier F", "using assms fun_add_closed function_zero_closed"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n  \\<lbrakk>?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f \\<oplus>\\<^bsub>F\\<^esub> ?g \\<in> carrier F\n  \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a \\<in> carrier F", "by blast"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a \\<in> carrier F\n\ngoal (2 subgoals):\n 1. a \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a) aa = a aa", "show \"a \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier F", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n\ngoal (1 subgoal):\n 1. a \\<in> carrier F", "by simp"], ["proof (state)\nthis:\n  a \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a) aa = a aa", "show \"\\<And>c. c \\<in> S \\<Longrightarrow> (\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a) c = a c \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c.\n       c \\<in> S \\<Longrightarrow>\n       (\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a) c = a c", "using assms F_def fun_add_eval_car function_zero_closed \n      ring_functions.function_zero_eval ring_functions_axioms"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n  F \\<equiv> function_ring S R\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (?f \\<oplus>\\<^bsub>F\\<^esub> ?g) ?a =\n                    ?f ?a \\<oplus> ?g ?a\n  \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n  \\<lbrakk>ring_functions ?R; ?a \\<in> ?S\\<rbrakk>\n  \\<Longrightarrow> \\<zero>\\<^bsub>function_ring ?S ?R\\<^esub> ?a =\n                    \\<zero>\\<^bsub>?R\\<^esub>\n  ring_functions R\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       c \\<in> S \\<Longrightarrow>\n       (\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a) c = a c", "by (simp add: ring_functions.function_zero_eval function_ring_car_closed)"], ["proof (state)\nthis:\n  ?c \\<in> S \\<Longrightarrow>\n  (\\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> a) ?c = a ?c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in ring_functions) fun_add_zeroR:\n  assumes \"a \\<in> carrier F\"\n  shows \"a \\<oplus>\\<^bsub>F\\<^esub> \\<zero>\\<^bsub>F\\<^esub> = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<oplus>\\<^bsub>F\\<^esub> \\<zero>\\<^bsub>F\\<^esub> = a", "using assms fun_add_comm fun_add_zeroL"], ["proof (prove)\nusing this:\n  a \\<in> carrier F\n  \\<lbrakk>?x \\<in> carrier F; ?y \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>F\\<^esub> ?y =\n                    ?y \\<oplus>\\<^bsub>F\\<^esub> ?x\n  ?a \\<in> carrier F \\<Longrightarrow>\n  \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> ?a = ?a\n\ngoal (1 subgoal):\n 1. a \\<oplus>\\<^bsub>F\\<^esub> \\<zero>\\<^bsub>F\\<^esub> = a", "by (simp add: function_zero_closed)"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>Distributive Laws\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "lemma(in ring_functions) function_mult_r_distr: \n  assumes \"x \\<in> carrier F\"\n  assumes\" y \\<in> carrier F\"\n  assumes \" z \\<in> carrier F\"\n  shows \" (x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z = x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z =\n    x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n    y \\<otimes>\\<^bsub>F\\<^esub> z", "proof(rule function_ring_car_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z\n    \\<in> carrier F\n 2. x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n    y \\<otimes>\\<^bsub>F\\<^esub> z\n    \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n       (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n        y \\<otimes>\\<^bsub>F\\<^esub> z)\n        a", "show \"(x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z\n    \\<in> carrier F", "by (simp add: assms(1) assms(2) assms(3) fun_add_closed fun_mult_closed)"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z\n  \\<in> carrier F\n\ngoal (2 subgoals):\n 1. x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n    y \\<otimes>\\<^bsub>F\\<^esub> z\n    \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n       (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n        y \\<otimes>\\<^bsub>F\\<^esub> z)\n        a", "show \"x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n    y \\<otimes>\\<^bsub>F\\<^esub> z\n    \\<in> carrier F", "by (simp add: assms(1) assms(2) assms(3) fun_add_closed fun_mult_closed)"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n  y \\<otimes>\\<^bsub>F\\<^esub> z\n  \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n       (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n        y \\<otimes>\\<^bsub>F\\<^esub> z)\n        a", "show  \"\\<And>a. a \\<in> S \\<Longrightarrow> ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a = (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n       (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n        y \\<otimes>\\<^bsub>F\\<^esub> z)\n        a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n       (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n        y \\<otimes>\\<^bsub>F\\<^esub> z)\n        a", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n       (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n        y \\<otimes>\\<^bsub>F\\<^esub> z)\n        a", "assume A: \"a \\<in> S\""], ["proof (state)\nthis:\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n       (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n        y \\<otimes>\\<^bsub>F\\<^esub> z)\n        a", "show \"((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a = (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub> y \\<otimes>\\<^bsub>F\\<^esub> z) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n     y \\<otimes>\\<^bsub>F\\<^esub> z)\n     a", "using A assms fun_add_eval_car[of a x y]  fun_add_eval_car[of a \"x \\<otimes>\\<^bsub>F\\<^esub>z\" \"y \\<otimes>\\<^bsub>F\\<^esub> z\"] \n            function_mult_eval_car[of a \"x \\<oplus>\\<^bsub>F\\<^esub> y\" z] semiring_simprules(10) \n            F_def"], ["proof (prove)\nusing this:\n  a \\<in> S\n  x \\<in> carrier F\n  y \\<in> carrier F\n  z \\<in> carrier F\n  \\<lbrakk>a \\<in> S; x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (x \\<oplus>\\<^bsub>F\\<^esub> y) a = x a \\<oplus> y a\n  \\<lbrakk>a \\<in> S; x \\<otimes>\\<^bsub>F\\<^esub> z \\<in> carrier F;\n   y \\<otimes>\\<^bsub>F\\<^esub> z \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (x \\<otimes>\\<^bsub>F\\<^esub>\n                     z \\<oplus>\\<^bsub>F\\<^esub>\n                     y \\<otimes>\\<^bsub>F\\<^esub> z)\n                     a =\n                    (x \\<otimes>\\<^bsub>F\\<^esub> z) a \\<oplus>\n                    (y \\<otimes>\\<^bsub>F\\<^esub> z) a\n  \\<lbrakk>a \\<in> S; x \\<oplus>\\<^bsub>F\\<^esub> y \\<in> carrier F;\n   z \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ((x \\<oplus>\\<^bsub>F\\<^esub>\n                      y) \\<otimes>\\<^bsub>F\\<^esub>\n                     z)\n                     a =\n                    (x \\<oplus>\\<^bsub>F\\<^esub> y) a \\<otimes> z a\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R;\n   ?z \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> (?x \\<oplus> ?y) \\<otimes> ?z =\n                    ?x \\<otimes> ?z \\<oplus> ?y \\<otimes> ?z\n  F \\<equiv> function_ring S R\n\ngoal (1 subgoal):\n 1. ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n    (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n     y \\<otimes>\\<^bsub>F\\<^esub> z)\n     a", "by (smt fun_add_closed function_mult_eval_car function_ring_car_closed \n          ring_functions.fun_mult_closed ring_functions_axioms)"], ["proof (state)\nthis:\n  ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) a =\n  (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n   y \\<otimes>\\<^bsub>F\\<^esub> z)\n   a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a \\<in> S \\<Longrightarrow>\n  ((x \\<oplus>\\<^bsub>F\\<^esub> y) \\<otimes>\\<^bsub>F\\<^esub> z) ?a =\n  (x \\<otimes>\\<^bsub>F\\<^esub> z \\<oplus>\\<^bsub>F\\<^esub>\n   y \\<otimes>\\<^bsub>F\\<^esub> z)\n   ?a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in ring_functions) function_mult_l_distr:\n  assumes \"x \\<in> carrier F\"\n  assumes\" y \\<in> carrier F\"\n  assumes \" z \\<in> carrier F\"\n  shows \"z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y) = z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub> z \\<otimes>\\<^bsub>F\\<^esub> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n    z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n    z \\<otimes>\\<^bsub>F\\<^esub> y", "proof(rule function_ring_car_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)\n    \\<in> carrier F\n 2. z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n    z \\<otimes>\\<^bsub>F\\<^esub> y\n    \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n       (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n        z \\<otimes>\\<^bsub>F\\<^esub> y)\n        a", "show \"z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y) \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)\n    \\<in> carrier F", "by (simp add: assms(1) assms(2) assms(3) fun_add_closed fun_mult_closed)"], ["proof (state)\nthis:\n  z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)\n  \\<in> carrier F\n\ngoal (2 subgoals):\n 1. z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n    z \\<otimes>\\<^bsub>F\\<^esub> y\n    \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n       (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n        z \\<otimes>\\<^bsub>F\\<^esub> y)\n        a", "show \"z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub> z \\<otimes>\\<^bsub>F\\<^esub> y \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n    z \\<otimes>\\<^bsub>F\\<^esub> y\n    \\<in> carrier F", "by (simp add: assms(1) assms(2) assms(3) fun_add_closed fun_mult_closed)"], ["proof (state)\nthis:\n  z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n  z \\<otimes>\\<^bsub>F\\<^esub> y\n  \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n       (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n        z \\<otimes>\\<^bsub>F\\<^esub> y)\n        a", "show  \"\\<And>a. a \\<in> S \\<Longrightarrow> (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a = (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub> z \\<otimes>\\<^bsub>F\\<^esub> y) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n       (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n        z \\<otimes>\\<^bsub>F\\<^esub> y)\n        a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n       (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n        z \\<otimes>\\<^bsub>F\\<^esub> y)\n        a", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n       (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n        z \\<otimes>\\<^bsub>F\\<^esub> y)\n        a", "assume A: \"a \\<in> S\""], ["proof (state)\nthis:\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n       (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n        z \\<otimes>\\<^bsub>F\\<^esub> y)\n        a", "show \"(z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a = (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub> z \\<otimes>\\<^bsub>F\\<^esub> y) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n    (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n     z \\<otimes>\\<^bsub>F\\<^esub> y)\n     a", "using A assms function_ring_defs fun_add_closed fun_mult_closed \n            function_mult_eval_car[of a z \"x \\<oplus>\\<^bsub>F\\<^esub> y\"] \n            function_mult_eval_car[of a z x] \n            function_mult_eval_car[of a z y] \n            fun_add_eval_car[of a x y]\n            semiring_simprules(13) \n            fun_add_eval_car function_ring_car_closed"], ["proof (prove)\nusing this:\n  a \\<in> S\n  x \\<in> carrier F\n  y \\<in> carrier F\n  z \\<in> carrier F\n  carrier F = S \\<rightarrow>\\<^sub>E carrier R\n  (\\<otimes>\\<^bsub>F\\<^esub>) = function_mult S R\n  (\\<oplus>\\<^bsub>F\\<^esub>) = function_add S R\n  \\<one>\\<^bsub>F\\<^esub> = function_one S R\n  \\<zero>\\<^bsub>F\\<^esub> = function_zero S R\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n  \\<lbrakk>?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f \\<oplus>\\<^bsub>F\\<^esub> ?g \\<in> carrier F\n  \\<lbrakk>?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f \\<otimes>\\<^bsub>F\\<^esub> ?g \\<in> carrier F\n  \\<lbrakk>a \\<in> S; z \\<in> carrier F;\n   x \\<oplus>\\<^bsub>F\\<^esub> y \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (z \\<otimes>\\<^bsub>F\\<^esub>\n                     (x \\<oplus>\\<^bsub>F\\<^esub> y))\n                     a =\n                    z a \\<otimes> (x \\<oplus>\\<^bsub>F\\<^esub> y) a\n  \\<lbrakk>a \\<in> S; z \\<in> carrier F; x \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (z \\<otimes>\\<^bsub>F\\<^esub> x) a = z a \\<otimes> x a\n  \\<lbrakk>a \\<in> S; z \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (z \\<otimes>\\<^bsub>F\\<^esub> y) a = z a \\<otimes> y a\n  \\<lbrakk>a \\<in> S; x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (x \\<oplus>\\<^bsub>F\\<^esub> y) a = x a \\<oplus> y a\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R;\n   ?z \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?z \\<otimes> (?x \\<oplus> ?y) =\n                    ?z \\<otimes> ?x \\<oplus> ?z \\<otimes> ?y\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (?f \\<oplus>\\<^bsub>F\\<^esub> ?g) ?a =\n                    ?f ?a \\<oplus> ?g ?a\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f ?a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n    (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n     z \\<otimes>\\<^bsub>F\\<^esub> y)\n     a", "by auto"], ["proof (state)\nthis:\n  (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) a =\n  (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n   z \\<otimes>\\<^bsub>F\\<^esub> y)\n   a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a \\<in> S \\<Longrightarrow>\n  (z \\<otimes>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y)) ?a =\n  (z \\<otimes>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n   z \\<otimes>\\<^bsub>F\\<^esub> y)\n   ?a\n\ngoal:\nNo subgoals!", "qed"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>Additive Inverses\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "lemma(in ring_functions) function_uminus_closed:\n  assumes \"f \\<in> carrier F\"\n  shows \"function_uminus S R f \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_uminus S R f \\<in> carrier F", "proof(rule function_ring_car_memI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> function_uminus S R f a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> S \\<Longrightarrow> function_uminus S R f a = undefined", "show \"\\<And>a. a \\<in> S \\<Longrightarrow> function_uminus S R f a \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> function_uminus S R f a \\<in> carrier R", "using assms function_ring_car_closed[of _ f]"], ["proof (prove)\nusing this:\n  f \\<in> carrier F\n  \\<lbrakk>?a \\<in> S; f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> f ?a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow> function_uminus S R f a \\<in> carrier R", "unfolding function_uminus_def"], ["proof (prove)\nusing this:\n  f \\<in> carrier F\n  \\<lbrakk>?a \\<in> S; f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> f ?a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (\\<lambda>x\\<in>S. \\<ominus> f x) a \\<in> carrier R", "by simp"], ["proof (state)\nthis:\n  ?a \\<in> S \\<Longrightarrow> function_uminus S R f ?a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> S \\<Longrightarrow> function_uminus S R f a = undefined", "show \"\\<And>a. a \\<notin> S \\<Longrightarrow> function_uminus S R f a = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> S \\<Longrightarrow> function_uminus S R f a = undefined", "by (simp add: function_uminus_def)"], ["proof (state)\nthis:\n  ?a \\<notin> S \\<Longrightarrow> function_uminus S R f ?a = undefined\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in ring_functions) function_uminus_eval:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"(function_uminus S R f) a = \\<ominus> (f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_uminus S R f a = \\<ominus> f a", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n\ngoal (1 subgoal):\n 1. function_uminus S R f a = \\<ominus> f a", "unfolding function_uminus_def"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>S. \\<ominus> f x) a = \\<ominus> f a", "by simp"], ["", "lemma(in ring_functions) function_uminus_add_r:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"f \\<oplus>\\<^bsub>F\\<^esub> function_uminus S R f = \\<zero>\\<^bsub>F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<oplus>\\<^bsub>F\\<^esub> function_uminus S R f =\n    \\<zero>\\<^bsub>F\\<^esub>", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f \\<oplus>\\<^bsub>F\\<^esub> function_uminus S R f \\<in> carrier F\n 2. \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>F\\<^esub> function_uminus S R f) a =\n       \\<zero>\\<^bsub>F\\<^esub> a", "using assms  fun_add_closed function_uminus_closed"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n  \\<lbrakk>?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f \\<oplus>\\<^bsub>F\\<^esub> ?g \\<in> carrier F\n  ?f \\<in> carrier F \\<Longrightarrow>\n  function_uminus S R ?f \\<in> carrier F\n\ngoal (3 subgoals):\n 1. f \\<oplus>\\<^bsub>F\\<^esub> function_uminus S R f \\<in> carrier F\n 2. \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>F\\<^esub> function_uminus S R f) a =\n       \\<zero>\\<^bsub>F\\<^esub> a", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>F\\<^esub> function_uminus S R f) a =\n       \\<zero>\\<^bsub>F\\<^esub> a", "unfolding F_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<zero>\\<^bsub>function_ring S R\\<^esub>\n    \\<in> carrier (function_ring S R)\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> function_uminus S R f)\n        a =\n       \\<zero>\\<^bsub>function_ring S R\\<^esub> a", "using F_def function_zero_closed"], ["proof (prove)\nusing this:\n  F \\<equiv> function_ring S R\n  \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n\ngoal (2 subgoals):\n 1. \\<zero>\\<^bsub>function_ring S R\\<^esub>\n    \\<in> carrier (function_ring S R)\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> function_uminus S R f)\n        a =\n       \\<zero>\\<^bsub>function_ring S R\\<^esub> a", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> function_uminus S R f)\n        a =\n       \\<zero>\\<^bsub>function_ring S R\\<^esub> a", "using F_def assms(2) fun_add_eval_car function_ring_car_closed function_uminus_closed \n      function_uminus_eval function_zero_eval r_neg"], ["proof (prove)\nusing this:\n  F \\<equiv> function_ring S R\n  f \\<in> carrier F\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> (?f \\<oplus>\\<^bsub>F\\<^esub> ?g) ?a =\n                    ?f ?a \\<oplus> ?g ?a\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f ?a \\<in> carrier R\n  ?f \\<in> carrier F \\<Longrightarrow>\n  function_uminus S R ?f \\<in> carrier F\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> function_uminus S R ?f ?a = \\<ominus> ?f ?a\n  ?a \\<in> S \\<Longrightarrow> \\<zero>\\<^bsub>F\\<^esub> ?a = \\<zero>\n  ?x \\<in> carrier R \\<Longrightarrow> ?x \\<oplus> \\<ominus> ?x = \\<zero>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring S R\\<^esub> function_uminus S R f)\n        a =\n       \\<zero>\\<^bsub>function_ring S R\\<^esub> a", "by auto"], ["", "lemma(in ring_functions) function_uminus_add_l:\n  assumes \"a \\<in> S\"\n  assumes \"f \\<in> carrier F\"\n  shows \"function_uminus S R f \\<oplus>\\<^bsub>F\\<^esub> f = \\<zero>\\<^bsub>F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. function_uminus S R f \\<oplus>\\<^bsub>F\\<^esub> f =\n    \\<zero>\\<^bsub>F\\<^esub>", "using assms(1) assms(2) fun_add_comm function_uminus_add_r function_uminus_closed"], ["proof (prove)\nusing this:\n  a \\<in> S\n  f \\<in> carrier F\n  \\<lbrakk>?x \\<in> carrier F; ?y \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>F\\<^esub> ?y =\n                    ?y \\<oplus>\\<^bsub>F\\<^esub> ?x\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f \\<oplus>\\<^bsub>F\\<^esub> function_uminus S R ?f =\n                    \\<zero>\\<^bsub>F\\<^esub>\n  ?f \\<in> carrier F \\<Longrightarrow>\n  function_uminus S R ?f \\<in> carrier F\n\ngoal (1 subgoal):\n 1. function_uminus S R f \\<oplus>\\<^bsub>F\\<^esub> f =\n    \\<zero>\\<^bsub>F\\<^esub>", "by auto"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>Scalar Multiplication\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "lemma(in ring_functions) function_smult_eval:\n  assumes \"a \\<in> carrier R\"\n  assumes  \"f \\<in> carrier F\"\n  assumes \"b \\<in> S\"\n  shows \"(a \\<odot>\\<^bsub>F\\<^esub> f) b = a \\<otimes> (f b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<odot>\\<^bsub>F\\<^esub> f) b = a \\<otimes> f b", "using function_ring_defs(6)"], ["proof (prove)\nusing this:\n  (\\<odot>\\<^bsub>F\\<^esub>) = function_scalar_mult S R\n\ngoal (1 subgoal):\n 1. (a \\<odot>\\<^bsub>F\\<^esub> f) b = a \\<otimes> f b", "unfolding function_scalar_mult_def"], ["proof (prove)\nusing this:\n  (\\<odot>\\<^bsub>F\\<^esub>) =\n  (\\<lambda>a f. \\<lambda>x\\<in>S. a \\<otimes> f x)\n\ngoal (1 subgoal):\n 1. (a \\<odot>\\<^bsub>F\\<^esub> f) b = a \\<otimes> f b", "by(simp add: assms)"], ["", "lemma(in ring_functions) function_smult_closed:\n  assumes \"a \\<in> carrier R\"\n  assumes  \"f \\<in> carrier F\"\n  shows \"a \\<odot>\\<^bsub>F\\<^esub> f \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<odot>\\<^bsub>F\\<^esub> f \\<in> carrier F", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f) aa \\<in> carrier R\n 2. \\<And>aa.\n       aa \\<notin> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f) aa = undefined", "using function_smult_eval assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> carrier R; ?f \\<in> carrier F; ?b \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (?a \\<odot>\\<^bsub>F\\<^esub> ?f) ?b = ?a \\<otimes> ?f ?b\n  a \\<in> carrier R\n  f \\<in> carrier F\n\ngoal (2 subgoals):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f) aa \\<in> carrier R\n 2. \\<And>aa.\n       aa \\<notin> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f) aa = undefined", "apply (simp add: function_ring_car_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<notin> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f) aa = undefined", "using function_scalar_mult_def F_def"], ["proof (prove)\nusing this:\n  function_scalar_mult ?S ?R ?a ?f =\n  (\\<lambda>x\\<in>?S. ?a \\<otimes>\\<^bsub>?R\\<^esub> ?f x)\n  F \\<equiv> function_ring S R\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<notin> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f) aa = undefined", "by (metis function_ring_defs(6) restrict_apply)"], ["", "lemma(in ring_functions) function_smult_assoc1:\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  assumes  \"f \\<in> carrier F\"\n  shows \"b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f)  = (b \\<otimes> a)\\<odot>\\<^bsub>F\\<^esub>f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f) =\n    b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f)\n    \\<in> carrier F\n 2. b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f)) aa =\n       (b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f) aa", "using assms function_smult_closed"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  b \\<in> carrier R\n  f \\<in> carrier F\n  \\<lbrakk>?a \\<in> carrier R; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?a \\<odot>\\<^bsub>F\\<^esub> ?f \\<in> carrier F\n\ngoal (3 subgoals):\n 1. b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f)\n    \\<in> carrier F\n 2. b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f)) aa =\n       (b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f) aa", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f)) aa =\n       (b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f) aa", "using assms function_smult_closed"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  b \\<in> carrier R\n  f \\<in> carrier F\n  \\<lbrakk>?a \\<in> carrier R; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?a \\<odot>\\<^bsub>F\\<^esub> ?f \\<in> carrier F\n\ngoal (2 subgoals):\n 1. b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f)) aa =\n       (b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f) aa", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (b \\<odot>\\<^bsub>F\\<^esub> (a \\<odot>\\<^bsub>F\\<^esub> f)) aa =\n       (b \\<otimes> a \\<odot>\\<^bsub>F\\<^esub> f) aa", "by (metis F_def assms(1) assms(2) assms(3) function_mult_eval_closed function_one_closed\n        function_smult_eval function_times_one_r m_assoc m_closed ring_functions.function_smult_closed ring_functions_axioms)"], ["", "lemma(in ring_functions) function_smult_assoc2:\n  assumes \"a \\<in> carrier R\"\n  assumes  \"f \\<in> carrier F\"\n  assumes \"g \\<in> carrier F\"\n  shows \"(a \\<odot>\\<^bsub>F\\<^esub> f)\\<otimes>\\<^bsub>F\\<^esub>g  = a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<odot>\\<^bsub>F\\<^esub> f \\<otimes>\\<^bsub>F\\<^esub> g =\n    a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<odot>\\<^bsub>F\\<^esub> f \\<otimes>\\<^bsub>F\\<^esub> g\n    \\<in> carrier F\n 2. a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)\n    \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f \\<otimes>\\<^bsub>F\\<^esub> g) aa =\n       (a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)) aa", "using assms function_smult_closed"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  f \\<in> carrier F\n  g \\<in> carrier F\n  \\<lbrakk>?a \\<in> carrier R; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?a \\<odot>\\<^bsub>F\\<^esub> ?f \\<in> carrier F\n\ngoal (3 subgoals):\n 1. a \\<odot>\\<^bsub>F\\<^esub> f \\<otimes>\\<^bsub>F\\<^esub> g\n    \\<in> carrier F\n 2. a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)\n    \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f \\<otimes>\\<^bsub>F\\<^esub> g) aa =\n       (a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)) aa", "apply (simp add: fun_mult_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)\n    \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f \\<otimes>\\<^bsub>F\\<^esub> g) aa =\n       (a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)) aa", "apply (simp add: assms(1) assms(2) assms(3) fun_mult_closed function_smult_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (a \\<odot>\\<^bsub>F\\<^esub> f \\<otimes>\\<^bsub>F\\<^esub> g) aa =\n       (a \\<odot>\\<^bsub>F\\<^esub> (f \\<otimes>\\<^bsub>F\\<^esub> g)) aa", "by (metis (full_types) F_def assms(1) assms(2) assms(3) fun_mult_closed \n      function_mult_eval_car function_smult_closed function_smult_eval m_assoc ring_functions.function_ring_car_closed ring_functions_axioms)"], ["", "lemma(in ring_functions) function_smult_one:\n  assumes  \"f \\<in> carrier F\"\n  shows \"\\<one>\\<odot>\\<^bsub>F\\<^esub>f = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<odot>\\<^bsub>F\\<^esub> f = f", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<one> \\<odot>\\<^bsub>F\\<^esub> f \\<in> carrier F\n 2. f \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (\\<one> \\<odot>\\<^bsub>F\\<^esub> f) a = f a", "apply (simp add: assms function_smult_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. f \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (\\<one> \\<odot>\\<^bsub>F\\<^esub> f) a = f a", "apply (simp add: assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (\\<one> \\<odot>\\<^bsub>F\\<^esub> f) a = f a", "by (simp add: assms function_ring_car_closed function_smult_eval)"], ["", "lemma(in ring_functions) function_smult_l_distr:\n\"[| a \\<in> carrier R; b \\<in> carrier R; x \\<in> carrier F |] ==>\n      (a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x = a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub> b \\<odot>\\<^bsub>F\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n     x \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x =\n                      a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n                      b \\<odot>\\<^bsub>F\\<^esub> x", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n     x \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> (a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x\n                      \\<in> carrier F\n 2. \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n     x \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n                      b \\<odot>\\<^bsub>F\\<^esub> x\n                      \\<in> carrier F\n 3. \\<And>aa.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R; x \\<in> carrier F;\n        aa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ((a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x) aa =\n                         (a \\<odot>\\<^bsub>F\\<^esub>\n                          x \\<oplus>\\<^bsub>F\\<^esub>\n                          b \\<odot>\\<^bsub>F\\<^esub> x)\n                          aa", "apply (simp add: function_smult_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n     x \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n                      b \\<odot>\\<^bsub>F\\<^esub> x\n                      \\<in> carrier F\n 2. \\<And>aa.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R; x \\<in> carrier F;\n        aa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ((a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x) aa =\n                         (a \\<odot>\\<^bsub>F\\<^esub>\n                          x \\<oplus>\\<^bsub>F\\<^esub>\n                          b \\<odot>\\<^bsub>F\\<^esub> x)\n                          aa", "apply (simp add: fun_add_closed function_smult_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R; x \\<in> carrier F;\n        aa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ((a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x) aa =\n                         (a \\<odot>\\<^bsub>F\\<^esub>\n                          x \\<oplus>\\<^bsub>F\\<^esub>\n                          b \\<odot>\\<^bsub>F\\<^esub> x)\n                          aa", "using function_smult_eval"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> carrier R; ?f \\<in> carrier F; ?b \\<in> S\\<rbrakk>\n  \\<Longrightarrow> (?a \\<odot>\\<^bsub>F\\<^esub> ?f) ?b = ?a \\<otimes> ?f ?b\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R; x \\<in> carrier F;\n        aa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ((a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x) aa =\n                         (a \\<odot>\\<^bsub>F\\<^esub>\n                          x \\<oplus>\\<^bsub>F\\<^esub>\n                          b \\<odot>\\<^bsub>F\\<^esub> x)\n                          aa", "by (simp add: fun_add_eval_car function_ring_car_closed function_smult_closed l_distr)"], ["", "lemma(in ring_functions) function_smult_r_distr:\n \"[| a \\<in> carrier R; x \\<in> carrier F; y \\<in> carrier F |] ==>\n      a \\<odot>\\<^bsub>F\\<^esub> (x \\<oplus>\\<^bsub>F\\<^esub> y) = a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub> a \\<odot>\\<^bsub>F\\<^esub> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n     y \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                      (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                      a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n                      a \\<odot>\\<^bsub>F\\<^esub> y", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n     y \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                      (x \\<oplus>\\<^bsub>F\\<^esub> y)\n                      \\<in> carrier F\n 2. \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n     y \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n                      a \\<odot>\\<^bsub>F\\<^esub> y\n                      \\<in> carrier F\n 3. \\<And>aa.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F; y \\<in> carrier F;\n        aa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<odot>\\<^bsub>F\\<^esub>\n                          (x \\<oplus>\\<^bsub>F\\<^esub> y))\n                          aa =\n                         (a \\<odot>\\<^bsub>F\\<^esub>\n                          x \\<oplus>\\<^bsub>F\\<^esub>\n                          a \\<odot>\\<^bsub>F\\<^esub> y)\n                          aa", "apply (simp add: fun_add_closed function_smult_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n     y \\<in> carrier F\\<rbrakk>\n    \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub> x \\<oplus>\\<^bsub>F\\<^esub>\n                      a \\<odot>\\<^bsub>F\\<^esub> y\n                      \\<in> carrier F\n 2. \\<And>aa.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F; y \\<in> carrier F;\n        aa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<odot>\\<^bsub>F\\<^esub>\n                          (x \\<oplus>\\<^bsub>F\\<^esub> y))\n                          aa =\n                         (a \\<odot>\\<^bsub>F\\<^esub>\n                          x \\<oplus>\\<^bsub>F\\<^esub>\n                          a \\<odot>\\<^bsub>F\\<^esub> y)\n                          aa", "apply (simp add: fun_add_closed function_smult_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F; y \\<in> carrier F;\n        aa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> (a \\<odot>\\<^bsub>F\\<^esub>\n                          (x \\<oplus>\\<^bsub>F\\<^esub> y))\n                          aa =\n                         (a \\<odot>\\<^bsub>F\\<^esub>\n                          x \\<oplus>\\<^bsub>F\\<^esub>\n                          a \\<odot>\\<^bsub>F\\<^esub> y)\n                          aa", "by (simp add: fun_add_closed fun_add_eval_car function_ring_car_closed function_smult_closed function_smult_eval r_distr)"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>The Ring of Functions Forms an Algebra\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "lemma(in ring_functions) function_ring_is_abelian_group:\n\"abelian_group F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abelian_group F", "apply(rule abelian_groupI)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub> y \\<in> carrier F\n 2. \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<oplus>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         (y \\<oplus>\\<^bsub>F\\<^esub> z)\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub> y =\n                         y \\<oplus>\\<^bsub>F\\<^esub> x\n 5. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> x = x\n 6. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<exists>y\\<in>carrier F.\n          y \\<oplus>\\<^bsub>F\\<^esub> x = \\<zero>\\<^bsub>F\\<^esub>", "apply (simp add: fun_add_closed)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<oplus>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         (y \\<oplus>\\<^bsub>F\\<^esub> z)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub> y =\n                         y \\<oplus>\\<^bsub>F\\<^esub> x\n 4. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> x = x\n 5. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<exists>y\\<in>carrier F.\n          y \\<oplus>\\<^bsub>F\\<^esub> x = \\<zero>\\<^bsub>F\\<^esub>", "apply (simp add: function_zero_closed)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<oplus>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         (y \\<oplus>\\<^bsub>F\\<^esub> z)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub> y =\n                         y \\<oplus>\\<^bsub>F\\<^esub> x\n 3. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> x = x\n 4. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<exists>y\\<in>carrier F.\n          y \\<oplus>\\<^bsub>F\\<^esub> x = \\<zero>\\<^bsub>F\\<^esub>", "using fun_add_assoc"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier F; ?y \\<in> carrier F;\n   ?z \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>F\\<^esub>\n                    ?y \\<oplus>\\<^bsub>F\\<^esub>\n                    ?z =\n                    ?x \\<oplus>\\<^bsub>F\\<^esub>\n                    (?y \\<oplus>\\<^bsub>F\\<^esub> ?z)\n\ngoal (4 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<oplus>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         (y \\<oplus>\\<^bsub>F\\<^esub> z)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub> y =\n                         y \\<oplus>\\<^bsub>F\\<^esub> x\n 3. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> x = x\n 4. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<exists>y\\<in>carrier F.\n          y \\<oplus>\\<^bsub>F\\<^esub> x = \\<zero>\\<^bsub>F\\<^esub>", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>F\\<^esub> y =\n                         y \\<oplus>\\<^bsub>F\\<^esub> x\n 2. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> x = x\n 3. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<exists>y\\<in>carrier F.\n          y \\<oplus>\\<^bsub>F\\<^esub> x = \\<zero>\\<^bsub>F\\<^esub>", "apply (simp add: fun_add_comm)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> x = x\n 2. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<exists>y\\<in>carrier F.\n          y \\<oplus>\\<^bsub>F\\<^esub> x = \\<zero>\\<^bsub>F\\<^esub>", "apply (simp add: fun_add_comm fun_add_zeroR function_zero_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<exists>y\\<in>carrier F.\n          y \\<oplus>\\<^bsub>F\\<^esub> x = \\<zero>\\<^bsub>F\\<^esub>", "using fun_add_zeroL function_ring_car_eqI function_uminus_add_l \n                  function_uminus_closed function_zero_closed"], ["proof (prove)\nusing this:\n  ?a \\<in> carrier F \\<Longrightarrow>\n  \\<zero>\\<^bsub>F\\<^esub> \\<oplus>\\<^bsub>F\\<^esub> ?a = ?a\n  \\<lbrakk>?f \\<in> carrier F; ?g \\<in> carrier F;\n   \\<And>a. a \\<in> S \\<Longrightarrow> ?f a = ?g a\\<rbrakk>\n  \\<Longrightarrow> ?f = ?g\n  \\<lbrakk>?a \\<in> S; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> function_uminus S R ?f \\<oplus>\\<^bsub>F\\<^esub> ?f =\n                    \\<zero>\\<^bsub>F\\<^esub>\n  ?f \\<in> carrier F \\<Longrightarrow>\n  function_uminus S R ?f \\<in> carrier F\n  \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<exists>y\\<in>carrier F.\n          y \\<oplus>\\<^bsub>F\\<^esub> x = \\<zero>\\<^bsub>F\\<^esub>", "by blast"], ["", "lemma(in ring_functions) function_ring_is_monoid:\n\"monoid F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.monoid F", "apply(rule monoidI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> carrier F\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         (y \\<otimes>\\<^bsub>F\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> x = x\n 5. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> = x", "apply (simp add: fun_mult_closed)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         (y \\<otimes>\\<^bsub>F\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> x = x\n 4. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> = x", "apply (simp add: function_one_closed)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         (y \\<otimes>\\<^bsub>F\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> x = x\n 3. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> = x", "apply (simp add: fun_mult_assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> x = x\n 2. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> = x", "apply (simp add: function_times_one_l)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>F\\<^esub> \\<one>\\<^bsub>F\\<^esub> = x", "by (simp add: function_times_one_r)"], ["", "lemma(in ring_functions) function_ring_is_ring:\n\"ring F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ring F", "apply(rule ringI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. abelian_group F\n 2. Group.monoid F\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>F\\<^esub>\n                          y) \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         z \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub> z\n 4. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         z \\<otimes>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         z \\<otimes>\\<^bsub>F\\<^esub> y", "apply (simp add: function_ring_is_abelian_group)"], ["proof (prove)\ngoal (3 subgoals):\n 1. Group.monoid F\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>F\\<^esub>\n                          y) \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         z \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub> z\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         z \\<otimes>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         z \\<otimes>\\<^bsub>F\\<^esub> y", "apply (simp add: function_ring_is_monoid)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>F\\<^esub>\n                          y) \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         z \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub> z\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         z \\<otimes>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         z \\<otimes>\\<^bsub>F\\<^esub> y", "apply (simp add: function_mult_r_distr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> z \\<otimes>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         z \\<otimes>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         z \\<otimes>\\<^bsub>F\\<^esub> y", "by (simp add: function_mult_l_distr)"], ["", "sublocale ring_functions < F?: ring F"], ["proof (prove)\ngoal (1 subgoal):\n 1. ring F", "by (rule function_ring_is_ring)"], ["", "lemma(in cring_functions) function_mult_comm: \n  assumes \"x \\<in> carrier F\"\n  assumes\" y \\<in> carrier F\"\n  shows \"x \\<otimes>\\<^bsub>F\\<^esub> y = y \\<otimes>\\<^bsub>F\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>F\\<^esub> y = y \\<otimes>\\<^bsub>F\\<^esub> x", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> carrier F\n 2. y \\<otimes>\\<^bsub>F\\<^esub> x \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>F\\<^esub> y) a =\n       (y \\<otimes>\\<^bsub>F\\<^esub> x) a", "apply (simp add: assms(1) assms(2) fun_mult_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. y \\<otimes>\\<^bsub>F\\<^esub> x \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>F\\<^esub> y) a =\n       (y \\<otimes>\\<^bsub>F\\<^esub> x) a", "apply (simp add: assms(1) assms(2) fun_mult_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>F\\<^esub> y) a =\n       (y \\<otimes>\\<^bsub>F\\<^esub> x) a", "by (simp add: assms(1) assms(2) function_mult_eval_car function_ring_car_closed m_comm)"], ["", "lemma(in cring_functions) function_ring_is_comm_monoid:\n\"comm_monoid F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.comm_monoid F", "apply(rule comm_monoidI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> carrier F\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         (y \\<otimes>\\<^bsub>F\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> x = x\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y =\n                         y \\<otimes>\\<^bsub>F\\<^esub> x", "using fun_mult_assoc function_one_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier F; ?y \\<in> carrier F;\n   ?z \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>F\\<^esub>\n                    ?y \\<otimes>\\<^bsub>F\\<^esub>\n                    ?z =\n                    ?x \\<otimes>\\<^bsub>F\\<^esub>\n                    (?y \\<otimes>\\<^bsub>F\\<^esub> ?z)\n  \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y \\<in> carrier F\n 2. \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         (y \\<otimes>\\<^bsub>F\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> x = x\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y =\n                         y \\<otimes>\\<^bsub>F\\<^esub> x", "apply (simp add: fun_mult_closed)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         (y \\<otimes>\\<^bsub>F\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> x = x\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y =\n                         y \\<otimes>\\<^bsub>F\\<^esub> x", "apply (simp add: function_one_closed)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         (y \\<otimes>\\<^bsub>F\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> x = x\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y =\n                         y \\<otimes>\\<^bsub>F\\<^esub> x", "apply (simp add: fun_mult_assoc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one>\\<^bsub>F\\<^esub> \\<otimes>\\<^bsub>F\\<^esub> x = x\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y =\n                         y \\<otimes>\\<^bsub>F\\<^esub> x", "apply (simp add: function_times_one_l)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>F\\<^esub> y =\n                         y \\<otimes>\\<^bsub>F\\<^esub> x", "by (simp add: function_mult_comm)"], ["", "lemma(in cring_functions) function_ring_is_cring:\n\"cring F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring F", "apply(rule cringI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. abelian_group F\n 2. Group.comm_monoid F\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>F\\<^esub>\n                          y) \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         z \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub> z", "apply (simp add: function_ring_is_abelian_group)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Group.comm_monoid F\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>F\\<^esub>\n                          y) \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         z \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub> z", "apply (simp add: function_ring_is_comm_monoid)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier F; y \\<in> carrier F;\n        z \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>F\\<^esub>\n                          y) \\<otimes>\\<^bsub>F\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         z \\<oplus>\\<^bsub>F\\<^esub>\n                         y \\<otimes>\\<^bsub>F\\<^esub> z", "by (simp add: function_mult_r_distr)"], ["", "lemma(in cring_functions) function_ring_is_algebra:\n\"algebra R F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. algebra R F", "apply(rule algebraI)"], ["proof (prove)\ngoal (8 subgoals):\n 1. cring R\n 2. cring F\n 3. \\<And>a x.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub> x \\<in> carrier F\n 4. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         b \\<odot>\\<^bsub>F\\<^esub> x\n 5. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         a \\<odot>\\<^bsub>F\\<^esub> y\n 6. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (b \\<odot>\\<^bsub>F\\<^esub> x)\n 7. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one> \\<odot>\\<^bsub>F\\<^esub> x = x\n 8. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         y =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<otimes>\\<^bsub>F\\<^esub> y)", "apply (simp add: is_cring)"], ["proof (prove)\ngoal (7 subgoals):\n 1. cring F\n 2. \\<And>a x.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub> x \\<in> carrier F\n 3. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         b \\<odot>\\<^bsub>F\\<^esub> x\n 4. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         a \\<odot>\\<^bsub>F\\<^esub> y\n 5. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (b \\<odot>\\<^bsub>F\\<^esub> x)\n 6. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one> \\<odot>\\<^bsub>F\\<^esub> x = x\n 7. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         y =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<otimes>\\<^bsub>F\\<^esub> y)", "apply (simp add: function_ring_is_cring)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a x.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub> x \\<in> carrier F\n 2. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         b \\<odot>\\<^bsub>F\\<^esub> x\n 3. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         a \\<odot>\\<^bsub>F\\<^esub> y\n 4. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (b \\<odot>\\<^bsub>F\\<^esub> x)\n 5. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one> \\<odot>\\<^bsub>F\\<^esub> x = x\n 6. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         y =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<otimes>\\<^bsub>F\\<^esub> y)", "using function_smult_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> carrier R; ?f \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?a \\<odot>\\<^bsub>F\\<^esub> ?f \\<in> carrier F\n\ngoal (6 subgoals):\n 1. \\<And>a x.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub> x \\<in> carrier F\n 2. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         b \\<odot>\\<^bsub>F\\<^esub> x\n 3. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         a \\<odot>\\<^bsub>F\\<^esub> y\n 4. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (b \\<odot>\\<^bsub>F\\<^esub> x)\n 5. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one> \\<odot>\\<^bsub>F\\<^esub> x = x\n 6. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         y =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<otimes>\\<^bsub>F\\<^esub> y)", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> (a \\<oplus> b) \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         b \\<odot>\\<^bsub>F\\<^esub> x\n 2. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         a \\<odot>\\<^bsub>F\\<^esub> y\n 3. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (b \\<odot>\\<^bsub>F\\<^esub> x)\n 4. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one> \\<odot>\\<^bsub>F\\<^esub> x = x\n 5. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         y =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<otimes>\\<^bsub>F\\<^esub> y)", "apply (simp add: function_smult_l_distr)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<oplus>\\<^bsub>F\\<^esub> y) =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<oplus>\\<^bsub>F\\<^esub>\n                         a \\<odot>\\<^bsub>F\\<^esub> y\n 2. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (b \\<odot>\\<^bsub>F\\<^esub> x)\n 3. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one> \\<odot>\\<^bsub>F\\<^esub> x = x\n 4. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         y =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<otimes>\\<^bsub>F\\<^esub> y)", "apply (simp add: function_smult_r_distr)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b x.\n       \\<lbrakk>a \\<in> carrier R; b \\<in> carrier R;\n        x \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<otimes> b \\<odot>\\<^bsub>F\\<^esub> x =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (b \\<odot>\\<^bsub>F\\<^esub> x)\n 2. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one> \\<odot>\\<^bsub>F\\<^esub> x = x\n 3. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         y =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<otimes>\\<^bsub>F\\<^esub> y)", "apply (simp add: function_smult_assoc1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier F \\<Longrightarrow>\n       \\<one> \\<odot>\\<^bsub>F\\<^esub> x = x\n 2. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         y =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<otimes>\\<^bsub>F\\<^esub> y)", "apply (simp add: function_smult_one)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a x y.\n       \\<lbrakk>a \\<in> carrier R; x \\<in> carrier F;\n        y \\<in> carrier F\\<rbrakk>\n       \\<Longrightarrow> a \\<odot>\\<^bsub>F\\<^esub>\n                         x \\<otimes>\\<^bsub>F\\<^esub>\n                         y =\n                         a \\<odot>\\<^bsub>F\\<^esub>\n                         (x \\<otimes>\\<^bsub>F\\<^esub> y)", "by (simp add: function_smult_assoc2)"], ["", "lemma(in ring_functions) function_uminus:\n  assumes \"f \\<in> carrier F\"\n  shows \"\\<ominus>\\<^bsub>F\\<^esub> f = (function_uminus S R) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>F\\<^esub> f = function_uminus S R f", "using assms a_inv_def[of F]"], ["proof (prove)\nusing this:\n  f \\<in> carrier F\n  a_inv F = m_inv (add_monoid F)\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>F\\<^esub> f = function_uminus S R f", "by (metis F_def abelian_group.a_group abelian_group.r_neg function_uminus_add_r function_uminus_closed group.inv_closed partial_object.select_convs(1) ring.ring_simprules(18) ring_functions.function_ring_car_eqI ring_functions.function_ring_is_abelian_group ring_functions.function_ring_is_ring ring_functions_axioms)"], ["", "lemma(in ring_functions) function_uminus_eval':\n  assumes \"f \\<in> carrier F\"\n  assumes \"a \\<in> S\"\n  shows \"(\\<ominus>\\<^bsub>F\\<^esub> f) a = (function_uminus S R) f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>F\\<^esub> f) a = function_uminus S R f a", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> carrier F\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>F\\<^esub> f) a = function_uminus S R f a", "by (simp add: function_uminus)"], ["", "lemma(in ring_functions) function_uminus_eval'':\n  assumes \"f \\<in> carrier F\"\n  assumes \"a \\<in> S\"\n  shows \"(\\<ominus>\\<^bsub>F\\<^esub> f) a = \\<ominus> (f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>F\\<^esub> f) a = \\<ominus> f a", "using assms(1) assms(2) function_uminus"], ["proof (prove)\nusing this:\n  f \\<in> carrier F\n  a \\<in> S\n  ?f \\<in> carrier F \\<Longrightarrow>\n  \\<ominus>\\<^bsub>F\\<^esub> ?f = function_uminus S R ?f\n\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>F\\<^esub> f) a = \\<ominus> f a", "by (simp add: function_uminus_eval)"], ["", "sublocale cring_functions < F?: algebra R F"], ["proof (prove)\ngoal (1 subgoal):\n 1. algebra R F", "using function_ring_is_algebra"], ["proof (prove)\nusing this:\n  algebra R F\n\ngoal (1 subgoal):\n 1. algebra R F", "by auto"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsection\\<open>Constant Functions\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "definition constant_function  where\n\"constant_function S a =(\\<lambda>x \\<in> S. a)\""], ["", "abbreviation(in ring_functions)(input) const   where\n\"const \\<equiv> constant_function S\""], ["", "lemma(in ring_functions) constant_function_closed:\n  assumes \"a \\<in> carrier R\"\n  shows \"const a \\<in> carrier F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function S a \\<in> carrier F", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow> constant_function S a aa \\<in> carrier R\n 2. \\<And>aa.\n       aa \\<notin> S \\<Longrightarrow> constant_function S a aa = undefined", "unfolding constant_function_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow> (\\<lambda>x\\<in>S. a) aa \\<in> carrier R\n 2. \\<And>aa.\n       aa \\<notin> S \\<Longrightarrow> (\\<lambda>x\\<in>S. a) aa = undefined", "apply (simp add: assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<notin> S \\<Longrightarrow> (\\<lambda>x\\<in>S. a) aa = undefined", "by simp"], ["", "lemma(in ring_functions) constant_functionE: \n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> S\"\n  shows \"const a b = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function S a b = a", "by (simp add: assms(2) constant_function_def)"], ["", "lemma(in ring_functions) constant_function_add: \n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  shows \"const (a \\<oplus>\\<^bsub>R\\<^esub> b) = (const a) \\<oplus>\\<^bsub>F\\<^esub> (const b) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function S (a \\<oplus> b) =\n    constant_function S a \\<oplus>\\<^bsub>F\\<^esub> constant_function S b", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. constant_function S (a \\<oplus> b) \\<in> carrier F\n 2. constant_function S a \\<oplus>\\<^bsub>F\\<^esub> constant_function S b\n    \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       constant_function S (a \\<oplus> b) aa =\n       (constant_function S a \\<oplus>\\<^bsub>F\\<^esub>\n        constant_function S b)\n        aa", "apply (simp add: constant_function_closed assms(1) assms(2))"], ["proof (prove)\ngoal (2 subgoals):\n 1. constant_function S a \\<oplus>\\<^bsub>F\\<^esub> constant_function S b\n    \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       constant_function S (a \\<oplus> b) aa =\n       (constant_function S a \\<oplus>\\<^bsub>F\\<^esub>\n        constant_function S b)\n        aa", "using assms(1) constant_function_closed assms(2) fun_add_closed"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  ?a \\<in> carrier R \\<Longrightarrow>\n  constant_function S ?a \\<in> carrier F\n  b \\<in> carrier R\n  \\<lbrakk>?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f \\<oplus>\\<^bsub>F\\<^esub> ?g \\<in> carrier F\n\ngoal (2 subgoals):\n 1. constant_function S a \\<oplus>\\<^bsub>F\\<^esub> constant_function S b\n    \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       constant_function S (a \\<oplus> b) aa =\n       (constant_function S a \\<oplus>\\<^bsub>F\\<^esub>\n        constant_function S b)\n        aa", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       constant_function S (a \\<oplus> b) aa =\n       (constant_function S a \\<oplus>\\<^bsub>F\\<^esub>\n        constant_function S b)\n        aa", "by (simp add: assms(1) assms(2) constant_function_closed constant_functionE fun_add_eval_car)"], ["", "lemma(in ring_functions) constant_function_mult: \n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  shows \"const (a \\<otimes>\\<^bsub>R\\<^esub> b) = (const a) \\<otimes>\\<^bsub>F\\<^esub> (const b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function S (a \\<otimes> b) =\n    constant_function S a \\<otimes>\\<^bsub>F\\<^esub> constant_function S b", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. constant_function S (a \\<otimes> b) \\<in> carrier F\n 2. constant_function S a \\<otimes>\\<^bsub>F\\<^esub> constant_function S b\n    \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       constant_function S (a \\<otimes> b) aa =\n       (constant_function S a \\<otimes>\\<^bsub>F\\<^esub>\n        constant_function S b)\n        aa", "apply (simp add: constant_function_closed assms(1) assms(2))"], ["proof (prove)\ngoal (2 subgoals):\n 1. constant_function S a \\<otimes>\\<^bsub>F\\<^esub> constant_function S b\n    \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       constant_function S (a \\<otimes> b) aa =\n       (constant_function S a \\<otimes>\\<^bsub>F\\<^esub>\n        constant_function S b)\n        aa", "using assms(1) constant_function_closed assms(2) fun_mult_closed"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  ?a \\<in> carrier R \\<Longrightarrow>\n  constant_function S ?a \\<in> carrier F\n  b \\<in> carrier R\n  \\<lbrakk>?f \\<in> carrier F; ?g \\<in> carrier F\\<rbrakk>\n  \\<Longrightarrow> ?f \\<otimes>\\<^bsub>F\\<^esub> ?g \\<in> carrier F\n\ngoal (2 subgoals):\n 1. constant_function S a \\<otimes>\\<^bsub>F\\<^esub> constant_function S b\n    \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       constant_function S (a \\<otimes> b) aa =\n       (constant_function S a \\<otimes>\\<^bsub>F\\<^esub>\n        constant_function S b)\n        aa", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       constant_function S (a \\<otimes> b) aa =\n       (constant_function S a \\<otimes>\\<^bsub>F\\<^esub>\n        constant_function S b)\n        aa", "by (simp add: constant_function_closed assms(1) assms(2) constant_functionE function_mult_eval_car)"], ["", "lemma(in ring_functions) constant_function_minus: \n  assumes \"a \\<in> carrier R\"\n  shows \"\\<ominus>\\<^bsub>F\\<^esub>(const a) = (const (\\<ominus>\\<^bsub>R\\<^esub> a)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>F\\<^esub> constant_function S a =\n    constant_function S (\\<ominus> a)", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<ominus>\\<^bsub>F\\<^esub> constant_function S a \\<in> carrier F\n 2. constant_function S (\\<ominus> a) \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<ominus>\\<^bsub>F\\<^esub> constant_function S a) aa =\n       constant_function S (\\<ominus> a) aa", "apply (simp add: constant_function_closed assms local.function_uminus)"], ["proof (prove)\ngoal (3 subgoals):\n 1. function_uminus S R (constant_function S a) \\<in> carrier F\n 2. constant_function S (\\<ominus> a) \\<in> carrier F\n 3. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<ominus>\\<^bsub>F\\<^esub> constant_function S a) aa =\n       constant_function S (\\<ominus> a) aa", "apply (simp add: constant_function_closed assms function_uminus_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. constant_function S (\\<ominus> a) \\<in> carrier F\n 2. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<ominus>\\<^bsub>F\\<^esub> constant_function S a) aa =\n       constant_function S (\\<ominus> a) aa", "apply (simp add: constant_function_closed assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> S \\<Longrightarrow>\n       (\\<ominus>\\<^bsub>F\\<^esub> constant_function S a) aa =\n       constant_function S (\\<ominus> a) aa", "by (simp add: constant_function_closed assms constant_functionE function_uminus_eval'')"], ["", "lemma(in ring_functions) function_one_is_constant:\n\"const \\<one> = \\<one>\\<^bsub>F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function S \\<one> = \\<one>\\<^bsub>F\\<^esub>", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function S \\<one> = \\<one>\\<^bsub>function_ring S R\\<^esub>", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. constant_function S \\<one> \\<in> carrier F\n 2. \\<one>\\<^bsub>function_ring S R\\<^esub> \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<one> a =\n       \\<one>\\<^bsub>function_ring S R\\<^esub> a", "apply (simp add: constant_function_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<one>\\<^bsub>function_ring S R\\<^esub> \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<one> a =\n       \\<one>\\<^bsub>function_ring S R\\<^esub> a", "using F_def function_one_closed"], ["proof (prove)\nusing this:\n  F \\<equiv> function_ring S R\n  \\<one>\\<^bsub>F\\<^esub> \\<in> carrier F\n\ngoal (2 subgoals):\n 1. \\<one>\\<^bsub>function_ring S R\\<^esub> \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<one> a =\n       \\<one>\\<^bsub>function_ring S R\\<^esub> a", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<one> a =\n       \\<one>\\<^bsub>function_ring S R\\<^esub> a", "using F_def constant_functionE function_one_eval"], ["proof (prove)\nusing this:\n  F \\<equiv> function_ring S R\n  \\<lbrakk>?a \\<in> carrier R; ?b \\<in> S\\<rbrakk>\n  \\<Longrightarrow> constant_function S ?a ?b = ?a\n  ?a \\<in> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> ?a = \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<one> a =\n       \\<one>\\<^bsub>function_ring S R\\<^esub> a", "by auto"], ["", "lemma(in ring_functions) function_zero_is_constant:\n\"const \\<zero> = \\<zero>\\<^bsub>F\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function S \\<zero> = \\<zero>\\<^bsub>F\\<^esub>", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. constant_function S \\<zero> \\<in> carrier F\n 2. \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n 3. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<zero> a = \\<zero>\\<^bsub>F\\<^esub> a", "apply (simp add: constant_function_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<zero> a = \\<zero>\\<^bsub>F\\<^esub> a", "using F_def function_zero_closed"], ["proof (prove)\nusing this:\n  F \\<equiv> function_ring S R\n  \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n\ngoal (2 subgoals):\n 1. \\<zero>\\<^bsub>F\\<^esub> \\<in> carrier F\n 2. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<zero> a = \\<zero>\\<^bsub>F\\<^esub> a", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<zero> a = \\<zero>\\<^bsub>F\\<^esub> a", "using F_def constant_functionE function_zero_eval"], ["proof (prove)\nusing this:\n  F \\<equiv> function_ring S R\n  \\<lbrakk>?a \\<in> carrier R; ?b \\<in> S\\<rbrakk>\n  \\<Longrightarrow> constant_function S ?a ?b = ?a\n  ?a \\<in> S \\<Longrightarrow> \\<zero>\\<^bsub>F\\<^esub> ?a = \\<zero>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S \\<Longrightarrow>\n       constant_function S \\<zero> a = \\<zero>\\<^bsub>F\\<^esub> a", "by auto"], ["", "(**************************************************************************************************)\n  (**************************************************************************************************)"], ["", "subsection\\<open>Special Examples of Functions Rings\\<close>"], ["", "(**************************************************************************************************)\n  (**************************************************************************************************)\n\n    (**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>Functions from the Carrier of a Ring to Itself\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "locale U_function_ring = ring"], ["", "locale U_function_cring = U_function_ring + cring"], ["", "sublocale U_function_ring <  S?: struct_functions R \"carrier R\""], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "sublocale U_function_ring  <  FunR?: ring_functions R \"carrier R\" \"Fun R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ring_functions R &&&\n    function_ring (carrier R) R \\<equiv> function_ring (carrier R) R", "apply (simp add: local.ring_axioms ring_functions.intro)"], ["proof (prove)\ngoal (1 subgoal):\n 1. function_ring (carrier R) R \\<equiv> function_ring (carrier R) R", "by simp"], ["", "sublocale U_function_cring <  FunR?: cring_functions R \"carrier R\" \"Fun R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring_functions R &&&\n    function_ring (carrier R) R \\<equiv> function_ring (carrier R) R", "apply (simp add: cring_functions_def is_cring ring_functions_axioms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. function_ring (carrier R) R \\<equiv> function_ring (carrier R) R", "by simp"], ["", "abbreviation(in U_function_ring)(input) ring_compose :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> ('a \\<Rightarrow> 'a) \\<Rightarrow> ('a \\<Rightarrow> 'a)\" where\n\"ring_compose \\<equiv> compose (carrier R)\""], ["", "lemma(in U_function_ring) ring_function_ring_comp:\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"g \\<in> carrier (Fun R)\"\n  shows \"ring_compose f g \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose (carrier R) f g \\<in> carrier (function_ring (carrier R) R)", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> carrier R \\<Longrightarrow>\n       compose (carrier R) f g a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow>\n       compose (carrier R) f g a = undefined", "apply (simp add: assms(1) assms(2) compose_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> carrier R \\<Longrightarrow> f (g a) \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow>\n       compose (carrier R) f g a = undefined", "apply (simp add: assms(1) assms(2) function_ring_car_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow>\n       compose (carrier R) f g a = undefined", "by (meson compose_extensional extensional_arb)"], ["", "abbreviation(in U_function_ring)(input) ring_const (\"\\<cc>\\<index>\") where\n\"ring_const \\<equiv> constant_function (carrier R)\""], ["", "lemma(in ring_functions) function_nat_pow_eval:\n  assumes \"f \\<in> carrier F\"\n  assumes \"s \\<in> S\"\n  shows \"(f[^]\\<^bsub>F\\<^esub>(n::nat)) s = (f s)[^]n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f [^]\\<^bsub>F\\<^esub> n) s = f s [^] n", "apply(induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (f [^]\\<^bsub>F\\<^esub> 0) s = f s [^] 0\n 2. \\<And>n.\n       (f [^]\\<^bsub>F\\<^esub> n) s = f s [^] n \\<Longrightarrow>\n       (f [^]\\<^bsub>F\\<^esub> Suc n) s = f s [^] Suc n", "using assms(2) function_one_eval"], ["proof (prove)\nusing this:\n  s \\<in> S\n  ?a \\<in> S \\<Longrightarrow> \\<one>\\<^bsub>F\\<^esub> ?a = \\<one>\n\ngoal (2 subgoals):\n 1. (f [^]\\<^bsub>F\\<^esub> 0) s = f s [^] 0\n 2. \\<And>n.\n       (f [^]\\<^bsub>F\\<^esub> n) s = f s [^] n \\<Longrightarrow>\n       (f [^]\\<^bsub>F\\<^esub> Suc n) s = f s [^] Suc n", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (f [^]\\<^bsub>F\\<^esub> n) s = f s [^] n \\<Longrightarrow>\n       (f [^]\\<^bsub>F\\<^esub> Suc n) s = f s [^] Suc n", "by (simp add: assms(1) assms(2) function_mult_eval_car function_ring_is_monoid monoid.nat_pow_closed)"], ["", "context U_function_ring \nbegin"], ["", "definition a_translate :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n\"a_translate = (\\<lambda> r \\<in> carrier R. restrict ((add R) r) (carrier R))\""], ["", "definition m_translate :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n\"m_translate  = (\\<lambda> r \\<in> carrier R. restrict ((mult R) r) (carrier R))\""], ["", "definition nat_power :: \"nat \\<Rightarrow> 'a \\<Rightarrow> 'a\" where \n\"nat_power = (\\<lambda>(n::nat). restrict (\\<lambda>a.  a[^]\\<^bsub>R\\<^esub>n) (carrier R)) \""], ["", "text\\<open>Restricted operations are in Fs\\<close>"], ["", "lemma a_translate_functions:\n  assumes \"c \\<in> carrier R\"\n  shows \"a_translate c \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_translate c \\<in> carrier (function_ring (carrier R) R)", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> carrier R \\<Longrightarrow> a_translate c a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> a_translate c a = undefined", "using assms a_translate_def"], ["proof (prove)\nusing this:\n  c \\<in> carrier R\n  a_translate =\n  (\\<lambda>r\\<in>carrier R. restrict ((\\<oplus>) r) (carrier R))\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> carrier R \\<Longrightarrow> a_translate c a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> a_translate c a = undefined", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> a_translate c a = undefined", "using assms a_translate_def"], ["proof (prove)\nusing this:\n  c \\<in> carrier R\n  a_translate =\n  (\\<lambda>r\\<in>carrier R. restrict ((\\<oplus>) r) (carrier R))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> a_translate c a = undefined", "by simp"], ["", "lemma m_translate_functions:\n  assumes \"c \\<in> carrier R\"\n  shows \"m_translate c \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m_translate c \\<in> carrier (function_ring (carrier R) R)", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> carrier R \\<Longrightarrow> m_translate c a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> m_translate c a = undefined", "using assms m_translate_def"], ["proof (prove)\nusing this:\n  c \\<in> carrier R\n  m_translate =\n  (\\<lambda>r\\<in>carrier R. restrict ((\\<otimes>) r) (carrier R))\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> carrier R \\<Longrightarrow> m_translate c a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> m_translate c a = undefined", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> m_translate c a = undefined", "using assms m_translate_def"], ["proof (prove)\nusing this:\n  c \\<in> carrier R\n  m_translate =\n  (\\<lambda>r\\<in>carrier R. restrict ((\\<otimes>) r) (carrier R))\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> m_translate c a = undefined", "by simp"], ["", "lemma nat_power_functions:\n  shows \"nat_power n \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_power n \\<in> carrier (function_ring (carrier R) R)", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> carrier R \\<Longrightarrow> nat_power n a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> nat_power n a = undefined", "using  nat_power_def"], ["proof (prove)\nusing this:\n  nat_power = (\\<lambda>n. \\<lambda>a\\<in>carrier R. a [^] n)\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> carrier R \\<Longrightarrow> nat_power n a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> nat_power n a = undefined", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> nat_power n a = undefined", "by (simp add: nat_power_def)"], ["", "text\\<open>Restricted operations simps\\<close>"], ["", "lemma a_translate_eq:\n  assumes \"c \\<in> carrier R\"\n  assumes \"a \\<in> carrier R\"\n  shows \"a_translate c a = c \\<oplus> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_translate c a = c \\<oplus> a", "by (simp add: a_translate_def assms(1) assms(2))"], ["", "lemma a_translate_eq':\n  assumes \"c \\<in> carrier R\"\n  assumes \"a \\<notin> carrier R\"\n  shows \"a_translate c a = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_translate c a = undefined", "by (meson a_translate_functions assms(1) assms(2) function_ring_not_car)"], ["", "lemma a_translate_eq'':\n  assumes \"c \\<notin> carrier R\"\n  shows \"a_translate c = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a_translate c = undefined", "by (simp add: a_translate_def assms)"], ["", "lemma m_translate_eq:\n  assumes \"c \\<in> carrier R\"\n  assumes \"a \\<in> carrier R\"\n  shows \"m_translate c a = c \\<otimes> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m_translate c a = c \\<otimes> a", "by (simp add: m_translate_def assms(1) assms(2))"], ["", "lemma m_translate_eq':\n  assumes \"c \\<in> carrier R\"\n  assumes \"a \\<notin> carrier R\"\n  shows \"m_translate c a = undefined \""], ["proof (prove)\ngoal (1 subgoal):\n 1. m_translate c a = undefined", "by (meson m_translate_functions assms(1) assms(2) function_ring_not_car)"], ["", "lemma m_translate_eq'':\n  assumes \"c \\<notin> carrier R\"\n  shows \"m_translate c = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m_translate c = undefined", "by (simp add: m_translate_def assms)"], ["", "lemma nat_power_eq:\n  assumes \"a \\<in> carrier R\"\n  shows \"nat_power n a = a[^]\\<^bsub>R\\<^esub> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_power n a = a [^] n", "by (simp add: assms nat_power_def)"], ["", "lemma nat_power_eq':\n  assumes \"a \\<notin> carrier R\"\n  shows \"nat_power n a = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat_power n a = undefined", "by (simp add: assms nat_power_def)"], ["", "text\\<open>Constant ring\\_function properties\\<close>"], ["", "lemma constant_function_eq:\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  shows \"\\<cc>\\<^bsub>a\\<^esub> b = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function (carrier R) a b = a", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  b \\<in> carrier R\n\ngoal (1 subgoal):\n 1. constant_function (carrier R) a b = a", "by (simp add: constant_functionE)"], ["", "lemma constant_function_eq':\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<notin> carrier R\"\n  shows \"\\<cc>\\<^bsub>a\\<^esub> b = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function (carrier R) a b = undefined", "by (simp add: constant_function_closed assms(1) assms(2) function_ring_not_car)"], ["", "text\\<open>Compound expressions from algebraic operations\\<close>"], ["", "end"], ["", "definition monomial_function where\n\"monomial_function R c (n::nat) = (\\<lambda> x \\<in> carrier R. c \\<otimes>\\<^bsub>R\\<^esub> (x[^]\\<^bsub>R\\<^esub>n))\""], ["", "context U_function_ring\nbegin"], ["", "abbreviation monomial where\n\"monomial \\<equiv> monomial_function R\""], ["", "lemma monomial_functions:\n  assumes \"c \\<in> carrier R\"\n  shows \"monomial c n \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monomial c n \\<in> carrier (function_ring (carrier R) R)", "apply(rule function_ring_car_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> carrier R \\<Longrightarrow> monomial c n a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow> monomial c n a = undefined", "unfolding monomial_function_def"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. c \\<otimes> x [^] n) a \\<in> carrier R\n 2. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. c \\<otimes> x [^] n) a = undefined", "apply (simp add: assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<notin> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. c \\<otimes> x [^] n) a = undefined", "by simp"], ["", "definition ring_id  where\n\"ring_id \\<equiv> restrict (\\<lambda>x. x) (carrier R) \""], ["", "lemma ring_id_closed[simp]:\n\"ring_id \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ring_id \\<in> carrier (function_ring (carrier R) R)", "by (simp add: function_ring_car_memI ring_id_def)"], ["", "lemma ring_id_eval:\n  assumes \"a \\<in> carrier R\"\n  shows \"ring_id a = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ring_id a = a", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. ring_id a = a", "unfolding ring_id_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>carrier R. x) a = a", "by simp"], ["", "lemma constant_a_trans: \n  assumes \"a \\<in>carrier R\"\n  shows \"m_translate a  = \\<cc>\\<^bsub>a\\<^esub> \\<otimes>\\<^bsub>Fun R\\<^esub> ring_id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m_translate a =\n    constant_function (carrier R)\n     a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n    ring_id", "proof(rule function_ring_car_eqI)"], ["proof (state)\ngoal (3 subgoals):\n 1. m_translate a \\<in> carrier (function_ring (carrier R) R)\n 2. constant_function (carrier R)\n     a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n    ring_id\n    \\<in> carrier (function_ring (carrier R) R)\n 3. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       m_translate a aa =\n       (constant_function (carrier R)\n         a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n        ring_id)\n        aa", "show \"m_translate a \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m_translate a \\<in> carrier (function_ring (carrier R) R)", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. m_translate a \\<in> carrier (function_ring (carrier R) R)", "using m_translate_functions"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  ?c \\<in> carrier R \\<Longrightarrow>\n  m_translate ?c \\<in> carrier (function_ring (carrier R) R)\n\ngoal (1 subgoal):\n 1. m_translate a \\<in> carrier (function_ring (carrier R) R)", "by blast"], ["proof (state)\nthis:\n  m_translate a \\<in> carrier (function_ring (carrier R) R)\n\ngoal (2 subgoals):\n 1. constant_function (carrier R)\n     a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n    ring_id\n    \\<in> carrier (function_ring (carrier R) R)\n 2. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       m_translate a aa =\n       (constant_function (carrier R)\n         a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n        ring_id)\n        aa", "show \"\\<cc>\\<^bsub>a\\<^esub> \\<otimes>\\<^bsub>Fun R\\<^esub> ring_id \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function (carrier R)\n     a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n    ring_id\n    \\<in> carrier (function_ring (carrier R) R)", "unfolding ring_id_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function (carrier R)\n     a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n    (\\<lambda>x\\<in>carrier R. x)\n    \\<in> carrier (function_ring (carrier R) R)", "using assms ring_id_closed ring_id_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  ring_id \\<in> carrier (function_ring (carrier R) R)\n  ring_id \\<equiv> \\<lambda>x\\<in>carrier R. x\n\ngoal (1 subgoal):\n 1. constant_function (carrier R)\n     a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n    (\\<lambda>x\\<in>carrier R. x)\n    \\<in> carrier (function_ring (carrier R) R)", "by (simp add: constant_function_closed fun_mult_closed)"], ["proof (state)\nthis:\n  constant_function (carrier R)\n   a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n  ring_id\n  \\<in> carrier (function_ring (carrier R) R)\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       m_translate a aa =\n       (constant_function (carrier R)\n         a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n        ring_id)\n        aa", "show \"\\<And>x. x \\<in> carrier R \\<Longrightarrow> m_translate a x = (\\<cc>\\<^bsub>a\\<^esub> \\<otimes>\\<^bsub>Fun R\\<^esub> ring_id) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier R \\<Longrightarrow>\n       m_translate a x =\n       (constant_function (carrier R)\n         a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n        ring_id)\n        x", "by (simp add: constant_function_closed assms constant_function_eq function_mult_eval_car m_translate_eq ring_id_eval)"], ["proof (state)\nthis:\n  ?x2 \\<in> carrier R \\<Longrightarrow>\n  m_translate a ?x2 =\n  (constant_function (carrier R)\n    a \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub>\n   ring_id)\n   ?x2\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>polynomials in one variable\\<close>"], ["", "fun polynomial :: \"'a list \\<Rightarrow> ('a \\<Rightarrow> 'a)\" where\n\"polynomial []  = \\<zero>\\<^bsub>Fun R\\<^esub> \"|\n\"polynomial (a#as) = (\\<lambda>x \\<in> carrier R. a \\<oplus> x \\<otimes> (polynomial as x))\""], ["", "lemma polynomial_induct_lemma:\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"a \\<in> carrier R\"\n  shows \"(\\<lambda>x \\<in> carrier R. a \\<oplus> x \\<otimes> (f x)) \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x)\n    \\<in> carrier (function_ring (carrier R) R)", "proof(rule function_ring_car_memI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa\n       \\<in> carrier R\n 2. \\<And>aa.\n       aa \\<notin> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa = undefined", "show \"\\<And>aa. aa \\<in> carrier R \\<Longrightarrow> (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa\n       \\<in> carrier R", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa\n       \\<in> carrier R", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa\n       \\<in> carrier R", "assume A: \"y \\<in> carrier R\""], ["proof (state)\nthis:\n  y \\<in> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa\n       \\<in> carrier R", "have \"a \\<oplus> y \\<otimes> f y \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<oplus> y \\<otimes> f y \\<in> carrier R", "using A assms(1) assms(2) function_ring_car_closed"], ["proof (prove)\nusing this:\n  y \\<in> carrier R\n  f \\<in> carrier (function_ring (carrier R) R)\n  a \\<in> carrier R\n  \\<lbrakk>?a \\<in> carrier R;\n   ?f \\<in> carrier (function_ring (carrier R) R)\\<rbrakk>\n  \\<Longrightarrow> ?f ?a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. a \\<oplus> y \\<otimes> f y \\<in> carrier R", "by blast"], ["proof (state)\nthis:\n  a \\<oplus> y \\<otimes> f y \\<in> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa\n       \\<in> carrier R", "thus \"(\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) y \\<in> carrier R\""], ["proof (prove)\nusing this:\n  a \\<oplus> y \\<otimes> f y \\<in> carrier R\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) y \\<in> carrier R", "using A"], ["proof (prove)\nusing this:\n  a \\<oplus> y \\<otimes> f y \\<in> carrier R\n  y \\<in> carrier R\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) y \\<in> carrier R", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) y \\<in> carrier R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?aa2 \\<in> carrier R \\<Longrightarrow>\n  (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) ?aa2\n  \\<in> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<notin> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa = undefined", "show \"\\<And>aa. aa \\<notin> carrier R \\<Longrightarrow> (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<notin> carrier R \\<Longrightarrow>\n       (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) aa = undefined", "by auto"], ["proof (state)\nthis:\n  ?aa2 \\<notin> carrier R \\<Longrightarrow>\n  (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> f x) ?aa2 = undefined\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma polynomial_function: \n  shows \"set as \\<subseteq> carrier R \\<Longrightarrow> polynomial as \\<in> carrier (Fun R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set as \\<subseteq> carrier R \\<Longrightarrow>\n    polynomial as \\<in> carrier (function_ring (carrier R) R)", "proof(induction as)"], ["proof (state)\ngoal (2 subgoals):\n 1. set [] \\<subseteq> carrier R \\<Longrightarrow>\n    polynomial [] \\<in> carrier (function_ring (carrier R) R)\n 2. \\<And>a as.\n       \\<lbrakk>set as \\<subseteq> carrier R \\<Longrightarrow>\n                polynomial as \\<in> carrier (function_ring (carrier R) R);\n        set (a # as) \\<subseteq> carrier R\\<rbrakk>\n       \\<Longrightarrow> polynomial (a # as)\n                         \\<in> carrier (function_ring (carrier R) R)", "case Nil"], ["proof (state)\nthis:\n  set [] \\<subseteq> carrier R\n\ngoal (2 subgoals):\n 1. set [] \\<subseteq> carrier R \\<Longrightarrow>\n    polynomial [] \\<in> carrier (function_ring (carrier R) R)\n 2. \\<And>a as.\n       \\<lbrakk>set as \\<subseteq> carrier R \\<Longrightarrow>\n                polynomial as \\<in> carrier (function_ring (carrier R) R);\n        set (a # as) \\<subseteq> carrier R\\<rbrakk>\n       \\<Longrightarrow> polynomial (a # as)\n                         \\<in> carrier (function_ring (carrier R) R)", "then"], ["proof (chain)\npicking this:\n  set [] \\<subseteq> carrier R", "show ?case"], ["proof (prove)\nusing this:\n  set [] \\<subseteq> carrier R\n\ngoal (1 subgoal):\n 1. polynomial [] \\<in> carrier (function_ring (carrier R) R)", "by (simp add: function_zero_closed)"], ["proof (state)\nthis:\n  polynomial [] \\<in> carrier (function_ring (carrier R) R)\n\ngoal (1 subgoal):\n 1. \\<And>a as.\n       \\<lbrakk>set as \\<subseteq> carrier R \\<Longrightarrow>\n                polynomial as \\<in> carrier (function_ring (carrier R) R);\n        set (a # as) \\<subseteq> carrier R\\<rbrakk>\n       \\<Longrightarrow> polynomial (a # as)\n                         \\<in> carrier (function_ring (carrier R) R)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a as.\n       \\<lbrakk>set as \\<subseteq> carrier R \\<Longrightarrow>\n                polynomial as \\<in> carrier (function_ring (carrier R) R);\n        set (a # as) \\<subseteq> carrier R\\<rbrakk>\n       \\<Longrightarrow> polynomial (a # as)\n                         \\<in> carrier (function_ring (carrier R) R)", "case (Cons a as)"], ["proof (state)\nthis:\n  set as \\<subseteq> carrier R \\<Longrightarrow>\n  polynomial as \\<in> carrier (function_ring (carrier R) R)\n  set (a # as) \\<subseteq> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>a as.\n       \\<lbrakk>set as \\<subseteq> carrier R \\<Longrightarrow>\n                polynomial as \\<in> carrier (function_ring (carrier R) R);\n        set (a # as) \\<subseteq> carrier R\\<rbrakk>\n       \\<Longrightarrow> polynomial (a # as)\n                         \\<in> carrier (function_ring (carrier R) R)", "then"], ["proof (chain)\npicking this:\n  set as \\<subseteq> carrier R \\<Longrightarrow>\n  polynomial as \\<in> carrier (function_ring (carrier R) R)\n  set (a # as) \\<subseteq> carrier R", "show \"polynomial (a # as) \\<in> carrier (function_ring (carrier R) R)\""], ["proof (prove)\nusing this:\n  set as \\<subseteq> carrier R \\<Longrightarrow>\n  polynomial as \\<in> carrier (function_ring (carrier R) R)\n  set (a # as) \\<subseteq> carrier R\n\ngoal (1 subgoal):\n 1. polynomial (a # as) \\<in> carrier (function_ring (carrier R) R)", "using polynomial.simps(2)[of a as] polynomial_induct_lemma[of \"polynomial as\" a]"], ["proof (prove)\nusing this:\n  set as \\<subseteq> carrier R \\<Longrightarrow>\n  polynomial as \\<in> carrier (function_ring (carrier R) R)\n  set (a # as) \\<subseteq> carrier R\n  polynomial (a # as) =\n  (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> polynomial as x)\n  \\<lbrakk>polynomial as \\<in> carrier (function_ring (carrier R) R);\n   a \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x\\<in>carrier R.\n                        a \\<oplus> x \\<otimes> polynomial as x)\n                    \\<in> carrier (function_ring (carrier R) R)\n\ngoal (1 subgoal):\n 1. polynomial (a # as) \\<in> carrier (function_ring (carrier R) R)", "by simp"], ["proof (state)\nthis:\n  polynomial (a # as) \\<in> carrier (function_ring (carrier R) R)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma polynomial_constant:\n  assumes \"a \\<in> carrier R\"\n  shows \"polynomial [a] = \\<cc>\\<^bsub>a\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. polynomial [a] = constant_function (carrier R) a", "apply(rule function_ring_car_eqI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. polynomial [a] \\<in> carrier (function_ring (carrier R) R)\n 2. constant_function (carrier R) a\n    \\<in> carrier (function_ring (carrier R) R)\n 3. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       polynomial [a] aa = constant_function (carrier R) a aa", "using assms polynomial_function"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  set ?as \\<subseteq> carrier R \\<Longrightarrow>\n  polynomial ?as \\<in> carrier (function_ring (carrier R) R)\n\ngoal (3 subgoals):\n 1. polynomial [a] \\<in> carrier (function_ring (carrier R) R)\n 2. constant_function (carrier R) a\n    \\<in> carrier (function_ring (carrier R) R)\n 3. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       polynomial [a] aa = constant_function (carrier R) a aa", "apply (metis (full_types) list.distinct(1) list.set_cases set_ConsD subset_code(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. constant_function (carrier R) a\n    \\<in> carrier (function_ring (carrier R) R)\n 2. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       polynomial [a] aa = constant_function (carrier R) a aa", "apply (simp add: constant_function_closed assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       polynomial [a] aa = constant_function (carrier R) a aa", "using polynomial.simps(2)[of a \"[]\"] polynomial.simps(1) assms"], ["proof (prove)\nusing this:\n  polynomial [a] =\n  (\\<lambda>x\\<in>carrier R. a \\<oplus> x \\<otimes> polynomial [] x)\n  polynomial [] = \\<zero>\\<^bsub>function_ring (carrier R) R\\<^esub>\n  a \\<in> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> carrier R \\<Longrightarrow>\n       polynomial [a] aa = constant_function (carrier R) a aa", "by (simp add: constant_function_eq function_zero_eval)"], ["", "end"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "subsubsection\\<open>Sequences Indexed by the Natural Numbers\\<close>"], ["", "(**************************************************************************************************)\n    (**************************************************************************************************)"], ["", "definition nat_seqs (\"_\\<^bsup>\\<omega>\\<^esup>\")where\n\"nat_seqs R \\<equiv> function_ring (UNIV::nat set) R\""], ["", "abbreviation(input) closed_seqs where\n\"closed_seqs R \\<equiv> carrier (R\\<^bsup>\\<omega>\\<^esup>)\""], ["", "lemma closed_seqs_memI:\n  assumes \"\\<And>k. s k \\<in> carrier R\"\n  shows \"s \\<in> closed_seqs R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>", "unfolding nat_seqs_def function_ring_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> carrier\n             \\<lparr>carrier = UNIV \\<rightarrow>\\<^sub>E carrier R,\n                mult = function_mult UNIV R, one = function_one UNIV R,\n                zero = function_zero UNIV R, add = function_add UNIV R,\n                smult = function_scalar_mult UNIV R\\<rparr>", "by (simp add: PiE_UNIV_domain assms)"], ["", "lemma closed_seqs_memE:\n  assumes \"s \\<in> closed_seqs R\"\n  shows \"s k \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s k \\<in> carrier R", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n\ngoal (1 subgoal):\n 1. s k \\<in> carrier R", "unfolding nat_seqs_def function_ring_def"], ["proof (prove)\nusing this:\n  s \\<in> carrier\n           \\<lparr>carrier = UNIV \\<rightarrow>\\<^sub>E carrier R,\n              mult = function_mult UNIV R, one = function_one UNIV R,\n              zero = function_zero UNIV R, add = function_add UNIV R,\n              smult = function_scalar_mult UNIV R\\<rparr>\n\ngoal (1 subgoal):\n 1. s k \\<in> carrier R", "by (simp add: PiE_iff)"], ["", "definition is_constant_fun  where\n\"is_constant_fun R f = (\\<exists>x \\<in> carrier R. f = constant_function (carrier R) R x)\""], ["", "definition is_constant_seq where\n\"is_constant_seq R s = (\\<exists>x \\<in> carrier R. s = constant_function (UNIV::nat set) x)\""], ["", "lemma is_constant_seqI:\n  fixes a\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"\\<And>k. s k = a\"\n  shows \"is_constant_seq R s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_constant_seq R s", "unfolding is_constant_seq_def constant_function_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>carrier R. s = (\\<lambda>xa\\<in>UNIV. x)", "by (metis assms(1) assms(2) closed_seqs_memE restrict_UNIV restrict_ext)"], ["", "lemma is_constant_seqE:\n  assumes \"is_constant_seq R s\"\n  assumes \"s k = a\"\n  shows \"s n = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s n = a", "using assms"], ["proof (prove)\nusing this:\n  is_constant_seq R s\n  s k = a\n\ngoal (1 subgoal):\n 1. s n = a", "unfolding is_constant_seq_def"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>carrier R. s = constant_function UNIV x\n  s k = a\n\ngoal (1 subgoal):\n 1. s n = a", "by (metis constant_function_def restrict_UNIV)"], ["", "lemma is_constant_seq_imp_closed:\n  assumes \"is_constant_seq R s\"\n  shows \"s \\<in> closed_seqs R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>", "apply(rule closed_seqs_memI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. s k \\<in> carrier R", "using assms"], ["proof (prove)\nusing this:\n  is_constant_seq R s\n\ngoal (1 subgoal):\n 1. \\<And>k. s k \\<in> carrier R", "unfolding is_constant_seq_def constant_function_def"], ["proof (prove)\nusing this:\n  \\<exists>x\\<in>carrier R. s = (\\<lambda>xa\\<in>UNIV. x)\n\ngoal (1 subgoal):\n 1. \\<And>k. s k \\<in> carrier R", "by auto"], ["", "context U_function_ring\nbegin"], ["", "text\\<open>Sequence sums and products are closed\\<close>"], ["", "lemma seq_plus_closed:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"s' \\<in> closed_seqs R\"\n  shows \"s \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s' \\<in> closed_seqs R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s'\n    \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>", "by (metis assms(1) assms(2) nat_seqs_def ring_functions.fun_add_closed ring_functions_axioms)"], ["", "lemma seq_mult_closed:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"s' \\<in> closed_seqs R\"\n  shows \"s \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s' \\<in> closed_seqs R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s'\n    \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>", "apply(rule closed_seqs_memI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       (s \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s') k\n       \\<in> carrier R", "by (metis assms(1) assms(2) closed_seqs_memE nat_seqs_def ring_functions.fun_mult_closed ring_functions_axioms)"], ["", "lemma constant_function_comp_is_closed_seq:\n  assumes \"a \\<in> carrier R\"\n  assumes \"s \\<in> closed_seqs R\"\n  shows \"(const a \\<circ> s) \\<in> closed_seqs R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constant_function (carrier R) a \\<circ> s\n    \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>", "by (simp add: constant_functionE assms(1) assms(2) closed_seqs_memE closed_seqs_memI)"], ["", "lemma constant_function_comp_is_constant_seq:\n  assumes \"a \\<in> carrier R\"\n  assumes \"s \\<in> closed_seqs R\"\n  shows \"is_constant_seq R ((const a) \\<circ> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_constant_seq R (constant_function (carrier R) a \\<circ> s)", "apply(rule is_constant_seqI[of _ _ a] )"], ["proof (prove)\ngoal (2 subgoals):\n 1. constant_function (carrier R) a \\<circ> s\n    \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n 2. \\<And>k. (constant_function (carrier R) a \\<circ> s) k = a", "apply (simp add: assms(1) assms(2) constant_function_comp_is_closed_seq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. (constant_function (carrier R) a \\<circ> s) k = a", "using assms(1) assms(2) closed_seqs_memE"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n  ?s \\<in> carrier ?R\\<^bsup>\\<omega>\\<^esup> \\<Longrightarrow>\n  ?s ?k \\<in> carrier ?R\n\ngoal (1 subgoal):\n 1. \\<And>k. (constant_function (carrier R) a \\<circ> s) k = a", "by (simp add: closed_seqs_memE constant_functionE)"], ["", "lemma function_comp_is_closed_seq:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"f \\<in> carrier (Fun R)\"\n  shows \"f \\<circ> s \\<in> closed_seqs R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ> s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>", "apply(rule closed_seqs_memI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k. (f \\<circ> s) k \\<in> carrier R", "using assms(1) assms(2) closed_seqs_memE"], ["proof (prove)\nusing this:\n  s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n  f \\<in> carrier (function_ring (carrier R) R)\n  ?s \\<in> carrier ?R\\<^bsup>\\<omega>\\<^esup> \\<Longrightarrow>\n  ?s ?k \\<in> carrier ?R\n\ngoal (1 subgoal):\n 1. \\<And>k. (f \\<circ> s) k \\<in> carrier R", "by (metis comp_apply fun_add_eval_closed fun_add_zeroR function_zero_closed)"], ["", "lemma function_sum_comp_is_seq_sum:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"g \\<in> carrier (Fun R)\"\n  shows \"(f \\<oplus>\\<^bsub>Fun R\\<^esub> g) \\<circ> s = (f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> (g \\<circ> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<oplus>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s =\n    (f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)", "apply(rule ring_functions.function_ring_car_eqI[of R _ \"UNIV :: nat set\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. ring_functions R\n 2. f \\<oplus>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s\n    \\<in> carrier (function_ring UNIV R)\n 3. (f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)\n    \\<in> carrier (function_ring UNIV R)\n 4. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "apply (simp add: ring_functions_axioms)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f \\<oplus>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s\n    \\<in> carrier (function_ring UNIV R)\n 2. (f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)\n    \\<in> carrier (function_ring UNIV R)\n 3. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "using function_comp_is_closed_seq"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>;\n   ?f \\<in> carrier (function_ring (carrier R) R)\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> ?s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n\ngoal (3 subgoals):\n 1. f \\<oplus>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s\n    \\<in> carrier (function_ring UNIV R)\n 2. (f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)\n    \\<in> carrier (function_ring UNIV R)\n 3. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "apply (metis assms(1) assms(2) assms(3) fun_add_closed nat_seqs_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)\n    \\<in> carrier (function_ring UNIV R)\n 2. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "apply (metis assms(1) assms(2) assms(3) function_comp_is_closed_seq nat_seqs_def seq_plus_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<oplus>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "by (smt UNIV_eq_I assms(1) assms(2) assms(3) closed_seqs_memE comp_apply function_comp_is_closed_seq nat_seqs_def ring_functions.fun_add_eval_car ring_functions_axioms)"], ["", "lemma function_mult_comp_is_seq_mult:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"g \\<in> carrier (Fun R)\"\n  shows \"(f \\<otimes>\\<^bsub>Fun R\\<^esub> g) \\<circ> s = (f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> (g \\<circ> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s =\n    (f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)", "apply(rule ring_functions.function_ring_car_eqI[of R _ \"UNIV :: nat set\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. ring_functions R\n 2. f \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s\n    \\<in> carrier (function_ring UNIV R)\n 3. (f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)\n    \\<in> carrier (function_ring UNIV R)\n 4. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "apply (simp add: ring_functions_axioms)"], ["proof (prove)\ngoal (3 subgoals):\n 1. f \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s\n    \\<in> carrier (function_ring UNIV R)\n 2. (f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)\n    \\<in> carrier (function_ring UNIV R)\n 3. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "using function_comp_is_closed_seq"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>;\n   ?f \\<in> carrier (function_ring (carrier R) R)\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> ?s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n\ngoal (3 subgoals):\n 1. f \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s\n    \\<in> carrier (function_ring UNIV R)\n 2. (f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)\n    \\<in> carrier (function_ring UNIV R)\n 3. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "apply (metis assms(1) assms(2) assms(3) fun_mult_closed nat_seqs_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n    (g \\<circ> s)\n    \\<in> carrier (function_ring UNIV R)\n 2. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "apply (metis assms(1) assms(2) assms(3) function_comp_is_closed_seq nat_seqs_def seq_mult_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> UNIV \\<Longrightarrow>\n       (f \\<otimes>\\<^bsub>function_ring (carrier R) R\\<^esub> g \\<circ> s)\n        a =\n       ((f \\<circ> s) \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n        (g \\<circ> s))\n        a", "by (metis (no_types, lifting) assms(1) assms(2) assms(3) comp_apply function_comp_is_closed_seq nat_seqs_def ring_functions.function_mult_eval_car ring_functions.function_ring_car_closed ring_functions_axioms)"], ["", "lemma seq_plus_simp:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"t \\<in> closed_seqs R\"\n  shows \"(s \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> t) k = s k \\<oplus> t k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> t) k =\n    s k \\<oplus> t k", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n  t \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n\ngoal (1 subgoal):\n 1. (s \\<oplus>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> t) k =\n    s k \\<oplus> t k", "unfolding nat_seqs_def"], ["proof (prove)\nusing this:\n  s \\<in> carrier (function_ring UNIV R)\n  t \\<in> carrier (function_ring UNIV R)\n\ngoal (1 subgoal):\n 1. (s \\<oplus>\\<^bsub>function_ring UNIV R\\<^esub> t) k = s k \\<oplus> t k", "by (simp add: ring_functions.fun_add_eval_car ring_functions_axioms)"], ["", "lemma seq_mult_simp:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"t \\<in> closed_seqs R\"\n  shows \"(s \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> t) k = s k \\<otimes> t k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> t) k =\n    s k \\<otimes> t k", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n  t \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>\n\ngoal (1 subgoal):\n 1. (s \\<otimes>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> t) k =\n    s k \\<otimes> t k", "unfolding nat_seqs_def"], ["proof (prove)\nusing this:\n  s \\<in> carrier (function_ring UNIV R)\n  t \\<in> carrier (function_ring UNIV R)\n\ngoal (1 subgoal):\n 1. (s \\<otimes>\\<^bsub>function_ring UNIV R\\<^esub> t) k =\n    s k \\<otimes> t k", "by (simp add: ring_functions.function_mult_eval_car ring_functions_axioms)"], ["", "lemma seq_one_simp:\n\"\\<one>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> k = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> k = \\<one>", "by (simp add: nat_seqs_def ring_functions.function_one_eval ring_functions_axioms)"], ["", "lemma seq_zero_simp:\n\"\\<zero>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> k = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> k = \\<zero>", "by (simp add: nat_seqs_def ring_functions.function_zero_eval ring_functions_axioms)"], ["", "lemma(in U_function_ring) ring_id_seq_comp:\n  assumes \"s \\<in> closed_seqs R\"\n  shows \"ring_id \\<circ> s = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ring_id \\<circ> s = s", "apply(rule ring_functions.function_ring_car_eqI[of R _ \"UNIV::nat set\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. ring_functions R\n 2. ring_id \\<circ> s \\<in> carrier (function_ring UNIV R)\n 3. s \\<in> carrier (function_ring UNIV R)\n 4. \\<And>a. a \\<in> UNIV \\<Longrightarrow> (ring_id \\<circ> s) a = s a", "using ring_functions_axioms"], ["proof (prove)\nusing this:\n  ring_functions R\n\ngoal (4 subgoals):\n 1. ring_functions R\n 2. ring_id \\<circ> s \\<in> carrier (function_ring UNIV R)\n 3. s \\<in> carrier (function_ring UNIV R)\n 4. \\<And>a. a \\<in> UNIV \\<Longrightarrow> (ring_id \\<circ> s) a = s a", "apply auto[1]"], ["proof (prove)\ngoal (3 subgoals):\n 1. ring_id \\<circ> s \\<in> carrier (function_ring UNIV R)\n 2. s \\<in> carrier (function_ring UNIV R)\n 3. \\<And>a. a \\<in> UNIV \\<Longrightarrow> (ring_id \\<circ> s) a = s a", "apply (metis assms function_comp_is_closed_seq nat_seqs_def ring_id_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. s \\<in> carrier (function_ring UNIV R)\n 2. \\<And>a. a \\<in> UNIV \\<Longrightarrow> (ring_id \\<circ> s) a = s a", "apply (metis assms nat_seqs_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> UNIV \\<Longrightarrow> (ring_id \\<circ> s) a = s a", "by (simp add: assms closed_seqs_memE ring_id_eval)"], ["", "lemma(in U_function_ring) ring_seq_smult_closed:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"a \\<in> carrier R\"\n  shows \"a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s \\<in> closed_seqs R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s\n    \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>", "apply(rule closed_seqs_memI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k.\n       (a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s) k\n       \\<in> carrier R", "by (metis assms(1) assms(2) closed_seqs_memE nat_seqs_def ring_functions.function_smult_closed ring_functions_axioms)"], ["", "lemma(in U_function_ring) ring_seq_smult_eval:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"a \\<in> carrier R\"\n  shows \"(a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s) k = a \\<otimes> (s k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> s) k =\n    a \\<otimes> s k", "by (metis UNIV_I assms(1) assms(2) nat_seqs_def ring_functions.function_smult_eval ring_functions_axioms)"], ["", "lemma(in U_function_ring) ring_seq_smult_comp_assoc:\n  assumes \"s \\<in> closed_seqs R\"\n  assumes \"f \\<in> carrier (Fun R)\"\n  assumes \"a \\<in> carrier R\"\n  shows \"((a \\<odot>\\<^bsub>Fun R\\<^esub> f) \\<circ> s) = a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> (f \\<circ> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<odot>\\<^bsub>function_ring (carrier R) R\\<^esub> f \\<circ> s =\n    a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> (f \\<circ> s)", "apply(rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (a \\<odot>\\<^bsub>function_ring (carrier R) R\\<^esub> f \\<circ> s)\n        x =\n       (a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> (f \\<circ> s)) x", "using function_smult_eval[of a f] ring_seq_smult_eval[of \"f \\<circ> s\" a]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<in> carrier R; f \\<in> carrier (function_ring (carrier R) R);\n   ?b \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> (a \\<odot>\\<^bsub>function_ring (carrier R) R\\<^esub> f)\n                     ?b =\n                    a \\<otimes> f ?b\n  \\<lbrakk>f \\<circ> s \\<in> carrier R\\<^bsup>\\<omega>\\<^esup>;\n   a \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> (a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub>\n                     (f \\<circ> s))\n                     ?k =\n                    a \\<otimes> (f \\<circ> s) ?k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (a \\<odot>\\<^bsub>function_ring (carrier R) R\\<^esub> f \\<circ> s)\n        x =\n       (a \\<odot>\\<^bsub>R\\<^bsup>\\<omega>\\<^esup>\\<^esub> (f \\<circ> s)) x", "by (simp add: assms(1) assms(2) assms(3) closed_seqs_memE function_comp_is_closed_seq)"], ["", "end"], ["", "(**************************************************************************************************)\n(**************************************************************************************************)"], ["", "section\\<open>Extensional Maps Between the Carriers of two Structures\\<close>"], ["", "(**************************************************************************************************)\n(**************************************************************************************************)"], ["", "definition struct_maps :: \"('a, 'c) partial_object_scheme \\<Rightarrow> ('b, 'd) partial_object_scheme \n                              \\<Rightarrow> ('a \\<Rightarrow> 'b) set\" where\n\"struct_maps T S = {f. (f \\<in> (carrier T) \\<rightarrow> (carrier S)) \\<and> f = restrict f (carrier T) }\""], ["", "definition to_struct_map where\n\"to_struct_map T f = restrict f (carrier T)\""], ["", "lemma to_struct_map_closed:\n  assumes \"f \\<in> (carrier T) \\<rightarrow> (carrier S)\"\n  shows \"to_struct_map T f \\<in> (struct_maps T S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_struct_map T f \\<in> struct_maps T S", "by (smt PiE_restrict Pi_iff assms mem_Collect_eq restrict_PiE struct_maps_def to_struct_map_def)"], ["", "lemma struct_maps_memI:\n  assumes \"\\<And> x. x \\<in> carrier T \\<Longrightarrow> f x \\<in> carrier S\"\n  assumes \"\\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined\"\n  shows \"f \\<in> struct_maps T S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> struct_maps T S", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> struct_maps T S", "have 0: \" (f \\<in> (carrier T) \\<rightarrow> (carrier S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> carrier T \\<rightarrow> carrier S", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier T \\<Longrightarrow> f ?x \\<in> carrier S\n  ?x \\<notin> carrier T \\<Longrightarrow> f ?x = undefined\n\ngoal (1 subgoal):\n 1. f \\<in> carrier T \\<rightarrow> carrier S", "by blast"], ["proof (state)\nthis:\n  f \\<in> carrier T \\<rightarrow> carrier S\n\ngoal (1 subgoal):\n 1. f \\<in> struct_maps T S", "have 1: \"f  = restrict f (carrier T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = restrict f (carrier T)", "using assms"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier T \\<Longrightarrow> f ?x \\<in> carrier S\n  ?x \\<notin> carrier T \\<Longrightarrow> f ?x = undefined\n\ngoal (1 subgoal):\n 1. f = restrict f (carrier T)", "by (simp add: extensional_def extensional_restrict)"], ["proof (state)\nthis:\n  f = restrict f (carrier T)\n\ngoal (1 subgoal):\n 1. f \\<in> struct_maps T S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> struct_maps T S", "using 0 1"], ["proof (prove)\nusing this:\n  f \\<in> carrier T \\<rightarrow> carrier S\n  f = restrict f (carrier T)\n\ngoal (1 subgoal):\n 1. f \\<in> struct_maps T S", "unfolding struct_maps_def"], ["proof (prove)\nusing this:\n  f \\<in> carrier T \\<rightarrow> carrier S\n  f = restrict f (carrier T)\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> carrier T \\<rightarrow> carrier S.\n             f = restrict f (carrier T)}", "by blast"], ["proof (state)\nthis:\n  f \\<in> struct_maps T S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma struct_maps_memE:\n  assumes \"f \\<in> struct_maps T S\"\n  shows  \"\\<And> x. x \\<in> carrier T \\<Longrightarrow> f x \\<in> carrier S\"\n         \"\\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> carrier T \\<Longrightarrow> f x \\<in> carrier S) &&&\n    (\\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> struct_maps T S\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> carrier T \\<Longrightarrow> f x \\<in> carrier S) &&&\n    (\\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined)", "unfolding struct_maps_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> carrier T \\<rightarrow> carrier S.\n           f = restrict f (carrier T)}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> carrier T \\<Longrightarrow> f x \\<in> carrier S) &&&\n    (\\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> struct_maps T S\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined", "unfolding struct_maps_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> carrier T \\<rightarrow> carrier S.\n           f = restrict f (carrier T)}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<notin> carrier T \\<Longrightarrow> f x = undefined", "by (metis (mono_tags, lifting) mem_Collect_eq restrict_apply)"], ["", "text\\<open>An abbreviation for restricted composition of function of functions. This is necessary for the composition of two struct maps to again be a struct map.\\<close>"], ["", "abbreviation(input) rcomp \n  where \"rcomp \\<equiv> FuncSet.compose\""], ["", "lemma struct_map_comp:\n  assumes \"g \\<in> (struct_maps T S)\"\n  assumes \"f \\<in> (struct_maps S U)\"\n  shows \"rcomp (carrier T) f g \\<in> (struct_maps T U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose (carrier T) f g \\<in> struct_maps T U", "proof(rule struct_maps_memI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier T \\<Longrightarrow>\n       compose (carrier T) f g x \\<in> carrier U\n 2. \\<And>x.\n       x \\<notin> carrier T \\<Longrightarrow>\n       compose (carrier T) f g x = undefined", "show \"\\<And>x. x \\<in> carrier T \\<Longrightarrow> rcomp (carrier T) f g x \\<in> carrier U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier T \\<Longrightarrow>\n       compose (carrier T) f g x \\<in> carrier U", "using assms struct_maps_memE(1)"], ["proof (prove)\nusing this:\n  g \\<in> struct_maps T S\n  f \\<in> struct_maps S U\n  \\<lbrakk>?f \\<in> struct_maps ?T ?S; ?x \\<in> carrier ?T\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<in> carrier ?S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier T \\<Longrightarrow>\n       compose (carrier T) f g x \\<in> carrier U", "by (metis compose_eq)"], ["proof (state)\nthis:\n  ?x \\<in> carrier T \\<Longrightarrow>\n  compose (carrier T) f g ?x \\<in> carrier U\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> carrier T \\<Longrightarrow>\n       compose (carrier T) f g x = undefined", "show \" \\<And>x. x \\<notin> carrier T \\<Longrightarrow> rcomp (carrier T) f g x = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<notin> carrier T \\<Longrightarrow>\n       compose (carrier T) f g x = undefined", "by (meson compose_extensional extensional_arb)"], ["proof (state)\nthis:\n  ?x \\<notin> carrier T \\<Longrightarrow>\n  compose (carrier T) f g ?x = undefined\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma r_comp_is_compose:\n  assumes \"g \\<in> (struct_maps T S)\"\n  assumes \"f \\<in> (struct_maps S U)\"\n  assumes \"a \\<in> (carrier T)\"\n  shows \"(rcomp (carrier T) f g) a = (f \\<circ> g) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose (carrier T) f g a = (f \\<circ> g) a", "by (simp add: FuncSet.compose_def assms(3))"], ["", "lemma r_comp_not_in_car:\n  assumes \"g \\<in> (struct_maps T S)\"\n  assumes \"f \\<in> (struct_maps S U)\"\n  assumes \"a \\<notin> (carrier T)\"\n  shows \"(rcomp (carrier T) f g) a = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compose (carrier T) f g a = undefined", "by (simp add: FuncSet.compose_def assms(3))"], ["", "text\\<open>The reverse composition of two struct maps:\\<close>"], ["", "definition pullback ::\n    \"('a, 'd) partial_object_scheme \\<Rightarrow> ('a \\<Rightarrow> 'b) \\<Rightarrow> ('b \\<Rightarrow> 'c) \\<Rightarrow> ('a \\<Rightarrow> 'c)\" where\n\"pullback T f g = rcomp (carrier T) g f\""], ["", "lemma pullback_closed:\n  assumes \"f \\<in> (struct_maps T S)\"\n  assumes \"g \\<in> (struct_maps S U)\"\n  shows \"pullback T f g \\<in> (struct_maps T U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pullback T f g \\<in> struct_maps T U", "by (metis assms(1) assms(2) pullback_def struct_map_comp)"], ["", "text\\<open>Composition of struct maps which takes the structure itself rather than the carrier as a parameter:\\<close>"], ["", "definition pushforward :: \n    \"('a, 'd) partial_object_scheme \\<Rightarrow> ('b \\<Rightarrow> 'c) \\<Rightarrow> ('a \\<Rightarrow> 'b)  \\<Rightarrow> ('a \\<Rightarrow> 'c)\" where\n\"pushforward T f g \\<equiv> rcomp (carrier T) f g\""], ["", "lemma pushforward_closed:\n  assumes \"g \\<in> (struct_maps T S)\"\n  assumes \"f \\<in> (struct_maps S U)\"\n  shows \"pushforward T f g \\<in> (struct_maps T U)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pushforward T f g \\<in> struct_maps T U", "using assms(1) assms(2) struct_map_comp"], ["proof (prove)\nusing this:\n  g \\<in> struct_maps T S\n  f \\<in> struct_maps S U\n  \\<lbrakk>?g \\<in> struct_maps ?T ?S; ?f \\<in> struct_maps ?S ?U\\<rbrakk>\n  \\<Longrightarrow> compose (carrier ?T) ?f ?g \\<in> struct_maps ?T ?U\n\ngoal (1 subgoal):\n 1. pushforward T f g \\<in> struct_maps T U", "by (metis pushforward_def)"], ["", "end"]]}