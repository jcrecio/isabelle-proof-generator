{"file_name": "/home/qj213/afp-2021-10-22/thys/Padic_Ints/Padic_Construction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Padic_Ints", "problem_names": ["lemma residue_is_hom_0:\n  assumes \"n > 1\"\n  shows \"residue n \\<in> ring_hom \\<Z> (residue_ring n)\"", "lemma residue_is_hom_1:\n  assumes \"n > 1\"\n  assumes \"m > 1\"\n  assumes \"n dvd m\"\n  shows \"residue n \\<in> ring_hom (residue_ring m) (residue_ring n)\"", "lemma residue_id:\n  assumes \"x \\<in> carrier (residue_ring n)\"\n  assumes \"n \\<ge>0\"\n  shows \"residue n x = x\"", "lemma residue_hom_p:\n  assumes \"(n::nat) \\<ge> m\"\n  assumes \"m >0\"\n  assumes \"prime (p::int)\"\n  shows \"residue (p^m) \\<in> ring_hom (residue_ring (p^n)) (residue_ring (p^m))\"", "lemma padic_set_res_closed:\n  assumes \"f \\<in> padic_set p\"\n  shows \"(f m) \\<in> (carrier (residue_ring (p^m)))\"", "lemma padic_set_res_coherent:\n  assumes \"f \\<in> padic_set p\"\n  assumes \"n \\<ge> m\"\n  assumes \"prime p\"\n  shows \"residue (p^m) (f n) = (f m)\"", "lemma padic_set_zero_res:\n  assumes \"prime p\"\n  assumes \"f \\<in> (padic_set p)\"\n  shows \"f 0 = 0\"", "lemma padic_set_memI:\n  fixes f :: \"padic_int\"\n  assumes \"\\<And>m. (f m) \\<in> (carrier (residue_ring (p^m)))\"\n  assumes \"(\\<And>(m::nat) n. (n > m \\<Longrightarrow> (residue (p^m) (f n) = (f m))))\"\n  shows \"f \\<in> padic_set (p::int)\"", "lemma padic_set_memI':\n  fixes f :: \"padic_int\"\n  assumes \"\\<And>m. (f m) \\<in> {0..<p^m}\"\n  assumes \"\\<And>(m::nat) n. n > m \\<Longrightarrow> (f n) mod p^m = (f m)\"\n  shows \"f \\<in> padic_set (p::int)\"", "lemma padic_add_res:\n\"(padic_add p f g) n = (f n) \\<oplus>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n)\"", "lemma padic_zero_simp:\n\"padic_zero p n = \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\"\n\"padic_zero p n = 0\"", "lemma padic_zero_in_padic_set:\n  assumes \"p > 0\"\n  shows \"padic_zero p \\<in> padic_set p\"", "lemma padic_a_inv_simp:\n\"padic_a_inv p f n\\<equiv> \\<ominus>\\<^bsub>residue_ring (p^n)\\<^esub> (f n)\"", "lemma padic_a_inv_simp':\n  assumes \"prime p\"\n  assumes \"f \\<in> padic_set p\"\n  assumes \"n >0\"\n  shows \"padic_a_inv p f n = (if n=0 then 0 else (- (f n)) mod (p^n))\"", "lemma residue_1_prop:\n\"\\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\"", "lemma residue_1_zero:\n  \"residue 1 n = 0\"", "lemma padic_a_inv_in_padic_set:\n  assumes \"f \\<in> padic_set p\"\n  assumes \"prime (p::int)\"\n  shows \"(padic_a_inv p f) \\<in> padic_set p\"", "lemma padic_mult_res: \n\"(padic_mult p f g) n = (f n) \\<otimes>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n)\"", "lemma padic_one_simp:\n  assumes \"n >0\"\n  shows \"padic_one p n =  \\<one>\\<^bsub>residue_ring (p^n)\\<^esub>\" \n        \"padic_one p n = 1\"", "lemma padic_one_in_padic_set:\n  assumes \"prime p\"\n  shows \"padic_one p \\<in> padic_set p\"", "lemma padic_simps:\n\"padic_zero p n = \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\" \n\"padic_a_inv p f n \\<equiv> \\<ominus>\\<^bsub>residue_ring (p^n)\\<^esub> (f n)\"\n\"(padic_mult p f g) n = (f n) \\<otimes>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n)\"\n\"(padic_add p f g) n = (f n) \\<oplus>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n)\"\n\"n>0 \\<Longrightarrow>padic_one p n =  \\<one>\\<^bsub>residue_ring (p^n)\\<^esub>\"", "lemma residue_1_mult:\n  assumes \"x \\<in> carrier (residue_ring 1)\"\n  assumes \"y \\<in> carrier (residue_ring 1)\"\n  shows \"x \\<otimes>\\<^bsub>residue_ring 1\\<^esub> y = 0\"", "lemma padic_mult_in_padic_set:\n  assumes \"f \\<in> (padic_set p)\"\n  assumes \"g \\<in> (padic_set p)\"\n  assumes \"prime p\"\n  shows \"(padic_mult p f g)\\<in> (padic_set p)\"", "lemma val_of_nonzero:\n  assumes \"f \\<in> padic_set p\"\n  assumes \"f \\<noteq> padic_zero p\"\n  assumes \"prime p\"\n  shows \"f (nat (padic_val p f) + 1) \\<noteq>  \\<zero>\\<^bsub>residue_ring (p^((nat (padic_val p f) + 1)))\\<^esub>\"\n        \"f (nat (padic_val p f)) =  \\<zero>\\<^bsub>residue_ring (p^((nat (padic_val p f))))\\<^esub>\"\n        \"f (nat (padic_val p f) + 1) \\<noteq> 0\"\n        \"f (nat (padic_val p f)) =  0\"", "lemma below_val_zero:\n  assumes \"prime p\"\n  assumes \"x \\<in> (padic_set p)\"\n  assumes \"x (Suc n) \\<noteq>  \\<zero>\\<^bsub>residue_ring (p^(Suc n))\\<^esub>\"\n  shows  \"int n \\<ge> (padic_val p x )\"", "lemma  zero_below_val:\n  assumes \"prime p\"\n  assumes \"x \\<in> padic_set p\"\n  assumes \"n \\<le> padic_val p x\"\n  shows  \"x n =  \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\"\n         \"x n = 0\"", "lemma val_zero:\n assumes P: \"f \\<in> (padic_set p)\"   \n shows \"padic_val p f = -1 \\<longleftrightarrow>  (f = (padic_zero p))\"", "lemma val_prod:\n  assumes \"prime p\"\n  assumes \"f \\<in> (padic_set p)\" \n  assumes \"g \\<in> (padic_set p)\"\n  assumes \"f \\<noteq> padic_zero p\"\n  assumes \"g \\<noteq> padic_zero p\"\n  shows \"padic_val p (padic_mult p f g) = padic_val p f + padic_val p g\"", "lemma padic_int_simps:\n \"\\<one>\\<^bsub>padic_int p\\<^esub> = padic_one p\"\n \"\\<zero>\\<^bsub>padic_int p\\<^esub> = padic_zero p\"\n \"(\\<oplus>\\<^bsub>padic_int p\\<^esub>) = padic_add p\"\n \"(\\<otimes>\\<^bsub>padic_int p\\<^esub>) = padic_mult p\"\n \"carrier (padic_int p) = padic_set p\"", "lemma residues_n:\n  assumes \"n \\<noteq> 0\"\n  assumes \"prime p\"\n  shows \"residues (p^n)\"", "lemma padic_mult_assoc:\nassumes \"prime p\"\nshows  \"\\<And>x y z.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       y \\<in> carrier (padic_int p) \\<Longrightarrow> \n       z \\<in> carrier (padic_int p) \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>padic_int p\\<^esub> y \\<otimes>\\<^bsub>padic_int p\\<^esub> z = x \\<otimes>\\<^bsub>padic_int p\\<^esub> (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\"", "lemma padic_add_closed:\n  assumes \"prime p\"\n  shows  \"\\<And>x y.\n         x \\<in> carrier (padic_int p) \\<Longrightarrow>\n         y \\<in> carrier (padic_int p) \\<Longrightarrow>\n         x \\<oplus>\\<^bsub>(padic_int p)\\<^esub> y \\<in> carrier (padic_int p)\"", "lemma padic_add_assoc:\nassumes \"prime p\"\nshows  \" \\<And>x y z.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       y \\<in> carrier (padic_int p) \\<Longrightarrow> z \\<in> carrier (padic_int p)\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<oplus>\\<^bsub>padic_int p\\<^esub> z = x \\<oplus>\\<^bsub>padic_int p\\<^esub> (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)\"", "lemma padic_add_comm:\n  assumes \"prime p\"\n  shows \" \\<And>x y. \n          x \\<in> carrier (padic_int p) \\<Longrightarrow> \n          y \\<in> carrier (padic_int p) \\<Longrightarrow> \n          x \\<oplus>\\<^bsub>padic_int p\\<^esub> y = y \\<oplus>\\<^bsub>padic_int p\\<^esub> x\"", "lemma padic_add_zero:\nassumes \"prime p\"\nshows \"\\<And>x. x \\<in> carrier (padic_int p) \\<Longrightarrow> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub> x = x\"", "lemma padic_add_inv:\nassumes \"prime p\"\nshows \"\\<And>x. x \\<in> carrier (padic_int p) \\<Longrightarrow>\n           \\<exists>y\\<in>carrier (padic_int p). y \\<oplus>\\<^bsub>padic_int p\\<^esub> x = \\<zero>\\<^bsub>padic_int p\\<^esub>\"", "lemma padic_is_abelian_group:\nassumes \"prime p\"\nshows \"abelian_group (padic_int p)\"", "lemma padic_one_id:\nassumes \"prime p\"\nassumes \"x \\<in> carrier (padic_int p)\"\nshows  \"\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub> x = x\"", "lemma padic_mult_comm:\nassumes \"prime p\"\nassumes \"x \\<in> carrier (padic_int p)\"\nassumes \"y \\<in> carrier (padic_int p)\"\nshows \"x \\<otimes>\\<^bsub>padic_int p\\<^esub> y = y \\<otimes>\\<^bsub>padic_int p\\<^esub> x\"", "lemma padic_is_comm_monoid:\nassumes \"prime p\"\nshows \"Group.comm_monoid (padic_int p)\"", "lemma padic_int_is_cring:\n  assumes \"prime p\"\n  shows \"cring (padic_int p)\"", "lemma padic_no_zero_divisors:\nassumes \"prime p\"\nassumes \"a \\<in> carrier (padic_int p)\"\nassumes \"b \\<in>carrier (padic_int p)\"\nassumes \"a \\<noteq>\\<zero>\\<^bsub>padic_int p\\<^esub> \"\nassumes \"b \\<noteq>\\<zero>\\<^bsub>padic_int p\\<^esub> \"\nshows \"a \\<otimes>\\<^bsub>padic_int p\\<^esub> b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \"", "lemma padic_int_is_domain:\n  assumes \"prime p\"\n  shows \"domain (padic_int p)\"", "lemma padic_val_ultrametric:\n  assumes \"prime p\"\n  assumes \"a \\<in> carrier (padic_int p) \"\n  assumes \"b \\<in> carrier (padic_int p) \"\n  assumes \"a \\<noteq> \\<zero>\\<^bsub>(padic_int p)\\<^esub>\"\n  assumes \"b \\<noteq> \\<zero>\\<^bsub>(padic_int p)\\<^esub>\"\n  assumes  \"a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b \\<noteq> \\<zero>\\<^bsub>(padic_int p)\\<^esub>\"\n  shows \"padic_val p (a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b) \\<ge> min (padic_val p a) (padic_val p b)\"", "lemma padic_a_inv:\n  assumes \"prime p\"\n  assumes \"a \\<in> carrier (padic_int p)\"\n  shows \"\\<ominus>\\<^bsub>padic_int p\\<^esub> a = (\\<lambda> n. \\<ominus>\\<^bsub>residue_ring (p^n)\\<^esub> (a n))\"", "lemma padic_val_a_inv:\n  assumes \"prime p\"\n  assumes \"a \\<in> carrier (padic_int p)\"\n  shows \"padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\""], "translations": [["", "lemma residue_is_hom_0:\n  assumes \"n > 1\"\n  shows \"residue n \\<in> ring_hom \\<Z> (residue_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue n \\<in> ring_hom \\<Z> (residue_ring n)", "proof(rule ring_hom_memI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier \\<Z> \\<Longrightarrow>\n       residue n x \\<in> carrier (residue_ring n)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier \\<Z>; y \\<in> carrier \\<Z>\\<rbrakk>\n       \\<Longrightarrow> residue n (x \\<otimes>\\<^bsub>\\<Z>\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier \\<Z>; y \\<in> carrier \\<Z>\\<rbrakk>\n       \\<Longrightarrow> residue n (x \\<oplus>\\<^bsub>\\<Z>\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 4. residue n \\<one>\\<^bsub>\\<Z>\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "have R: \"residues n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residues n", "by (simp add: assms residues_def)"], ["proof (state)\nthis:\n  residues n\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier \\<Z> \\<Longrightarrow>\n       residue n x \\<in> carrier (residue_ring n)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier \\<Z>; y \\<in> carrier \\<Z>\\<rbrakk>\n       \\<Longrightarrow> residue n (x \\<otimes>\\<^bsub>\\<Z>\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier \\<Z>; y \\<in> carrier \\<Z>\\<rbrakk>\n       \\<Longrightarrow> residue n (x \\<oplus>\\<^bsub>\\<Z>\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 4. residue n \\<one>\\<^bsub>\\<Z>\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "show \"\\<And>x. x \\<in> carrier \\<Z> \\<Longrightarrow> residue n x \\<in> carrier (residue_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Z> \\<Longrightarrow>\n       residue n x \\<in> carrier (residue_ring n)", "using assms residue_def residues.mod_in_carrier residues_def"], ["proof (prove)\nusing this:\n  1 < n\n  residue ?n ?m = ?m mod ?n\n  residues ?m \\<Longrightarrow> ?a mod ?m \\<in> carrier (residue_ring ?m)\n  residues ?m \\<equiv> 1 < ?m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier \\<Z> \\<Longrightarrow>\n       residue n x \\<in> carrier (residue_ring n)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> carrier \\<Z> \\<Longrightarrow>\n  residue n ?x \\<in> carrier (residue_ring n)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier \\<Z>; y \\<in> carrier \\<Z>\\<rbrakk>\n       \\<Longrightarrow> residue n (x \\<otimes>\\<^bsub>\\<Z>\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier \\<Z>; y \\<in> carrier \\<Z>\\<rbrakk>\n       \\<Longrightarrow> residue n (x \\<oplus>\\<^bsub>\\<Z>\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 3. residue n \\<one>\\<^bsub>\\<Z>\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "show \" \\<And>x y. x \\<in> carrier \\<Z> \\<Longrightarrow> y \\<in> carrier \\<Z> \\<Longrightarrow>\n   residue n (x \\<otimes>\\<^bsub>\\<Z>\\<^esub> y) = residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub> residue n y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier \\<Z>; y \\<in> carrier \\<Z>\\<rbrakk>\n       \\<Longrightarrow> residue n (x \\<otimes>\\<^bsub>\\<Z>\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y", "by (simp add: R residue_def residues.mult_cong)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier \\<Z>; ?y \\<in> carrier \\<Z>\\<rbrakk>\n  \\<Longrightarrow> residue n (?x \\<otimes>\\<^bsub>\\<Z>\\<^esub> ?y) =\n                    residue n ?x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                    residue n ?y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier \\<Z>; y \\<in> carrier \\<Z>\\<rbrakk>\n       \\<Longrightarrow> residue n (x \\<oplus>\\<^bsub>\\<Z>\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 2. residue n \\<one>\\<^bsub>\\<Z>\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "show \"\\<And>x y. x \\<in> carrier \\<Z> \\<Longrightarrow>\n               y \\<in> carrier \\<Z> \\<Longrightarrow>\n         residue n (x \\<oplus>\\<^bsub>\\<Z>\\<^esub> y) = residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub> residue n y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier \\<Z>; y \\<in> carrier \\<Z>\\<rbrakk>\n       \\<Longrightarrow> residue n (x \\<oplus>\\<^bsub>\\<Z>\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y", "by (simp add: R residue_def residues.res_to_cong_simps(1))"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier \\<Z>; ?y \\<in> carrier \\<Z>\\<rbrakk>\n  \\<Longrightarrow> residue n (?x \\<oplus>\\<^bsub>\\<Z>\\<^esub> ?y) =\n                    residue n ?x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                    residue n ?y\n\ngoal (1 subgoal):\n 1. residue n \\<one>\\<^bsub>\\<Z>\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "show \"residue n \\<one>\\<^bsub>\\<Z>\\<^esub> = \\<one>\\<^bsub>residue_ring n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue n \\<one>\\<^bsub>\\<Z>\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "by (simp add: R residue_def residues.res_to_cong_simps(4))"], ["proof (state)\nthis:\n  residue n \\<one>\\<^bsub>\\<Z>\\<^esub> =\n  \\<one>\\<^bsub>residue_ring n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The residue map is a ring homomorphism from $\\mathbb{Z}/m\\mathbb{Z} \\to \\mathbb{Z}/n\\mathbb{Z}$ when n divides m\\<close>"], ["", "lemma residue_is_hom_1:\n  assumes \"n > 1\"\n  assumes \"m > 1\"\n  assumes \"n dvd m\"\n  shows \"residue n \\<in> ring_hom (residue_ring m) (residue_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue n \\<in> ring_hom (residue_ring m) (residue_ring n)", "proof(rule ring_hom_memI)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (residue_ring m) \\<Longrightarrow>\n       residue n x \\<in> carrier (residue_ring n)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<otimes>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<oplus>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 4. residue n \\<one>\\<^bsub>residue_ring m\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "have 0: \"residues n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residues n", "by (simp add: assms(1) residues_def)"], ["proof (state)\nthis:\n  residues n\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (residue_ring m) \\<Longrightarrow>\n       residue n x \\<in> carrier (residue_ring n)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<otimes>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<oplus>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 4. residue n \\<one>\\<^bsub>residue_ring m\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "have 1: \"residues m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residues m", "by (simp add: assms(2) residues_def)"], ["proof (state)\nthis:\n  residues m\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (residue_ring m) \\<Longrightarrow>\n       residue n x \\<in> carrier (residue_ring n)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<otimes>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<oplus>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 4. residue n \\<one>\\<^bsub>residue_ring m\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "show \"\\<And>x. x \\<in> carrier (residue_ring m) \\<Longrightarrow> residue n x \\<in> carrier (residue_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (residue_ring m) \\<Longrightarrow>\n       residue n x \\<in> carrier (residue_ring n)", "using assms(1) residue_def residue_ring_def"], ["proof (prove)\nusing this:\n  1 < n\n  residue ?n ?m = ?m mod ?n\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (residue_ring m) \\<Longrightarrow>\n       residue n x \\<in> carrier (residue_ring n)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> carrier (residue_ring m) \\<Longrightarrow>\n  residue n ?x \\<in> carrier (residue_ring n)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<otimes>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<oplus>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 3. residue n \\<one>\\<^bsub>residue_ring m\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "show \"\\<And>x y. x \\<in> carrier (residue_ring m) \\<Longrightarrow>\n               y \\<in> carrier (residue_ring m) \\<Longrightarrow> \n          residue n (x \\<otimes>\\<^bsub>residue_ring m\\<^esub> y) = residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub> residue n y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<otimes>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y", "using 0 1 assms"], ["proof (prove)\nusing this:\n  residues n\n  residues m\n  1 < n\n  1 < m\n  n dvd m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<otimes>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y", "by (metis mod_mod_cancel residue_def residues.mult_cong residues.res_mult_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier (residue_ring m);\n   ?y \\<in> carrier (residue_ring m)\\<rbrakk>\n  \\<Longrightarrow> residue n\n                     (?x \\<otimes>\\<^bsub>residue_ring m\\<^esub> ?y) =\n                    residue n ?x \\<otimes>\\<^bsub>residue_ring n\\<^esub>\n                    residue n ?y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<oplus>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y\n 2. residue n \\<one>\\<^bsub>residue_ring m\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "show \"\\<And>x y. x \\<in> carrier (residue_ring m) \n        \\<Longrightarrow> y \\<in> carrier (residue_ring m) \n        \\<Longrightarrow> residue n (x \\<oplus>\\<^bsub>residue_ring m\\<^esub> y) = residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub> residue n y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<oplus>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y", "using 0 1 assms"], ["proof (prove)\nusing this:\n  residues n\n  residues m\n  1 < n\n  1 < m\n  n dvd m\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (residue_ring m);\n        y \\<in> carrier (residue_ring m)\\<rbrakk>\n       \\<Longrightarrow> residue n\n                          (x \\<oplus>\\<^bsub>residue_ring m\\<^esub> y) =\n                         residue n x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                         residue n y", "by (metis mod_mod_cancel residue_def residues.add_cong residues.res_add_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier (residue_ring m);\n   ?y \\<in> carrier (residue_ring m)\\<rbrakk>\n  \\<Longrightarrow> residue n\n                     (?x \\<oplus>\\<^bsub>residue_ring m\\<^esub> ?y) =\n                    residue n ?x \\<oplus>\\<^bsub>residue_ring n\\<^esub>\n                    residue n ?y\n\ngoal (1 subgoal):\n 1. residue n \\<one>\\<^bsub>residue_ring m\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "show \"residue n \\<one>\\<^bsub>residue_ring m\\<^esub> = \\<one>\\<^bsub>residue_ring n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue n \\<one>\\<^bsub>residue_ring m\\<^esub> =\n    \\<one>\\<^bsub>residue_ring n\\<^esub>", "by (simp add: assms(1) residue_def residue_ring_def)"], ["proof (state)\nthis:\n  residue n \\<one>\\<^bsub>residue_ring m\\<^esub> =\n  \\<one>\\<^bsub>residue_ring n\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma residue_id:\n  assumes \"x \\<in> carrier (residue_ring n)\"\n  assumes \"n \\<ge>0\"\n  shows \"residue n x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue n x = x", "proof(cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> residue n x = x\n 2. n \\<noteq> 0 \\<Longrightarrow> residue n x = x", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> residue n x = x\n 2. n \\<noteq> 0 \\<Longrightarrow> residue n x = x", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. residue n x = x", "by (simp add: residue_def)"], ["proof (state)\nthis:\n  residue n x = x\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> residue n x = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> residue n x = x", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> residue n x = x", "have 0: \"x \\<ge>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> x", "using assms(1)"], ["proof (prove)\nusing this:\n  x \\<in> carrier (residue_ring n)\n\ngoal (1 subgoal):\n 1. 0 \\<le> x", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> residue n x = x", "have 1: \"x < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < n", "using assms(1) residue_ring_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier (residue_ring n)\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. x < n", "by auto"], ["proof (state)\nthis:\n  x < n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> residue n x = x", "have \"x mod n = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x mod n = x", "using 0 1"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  x < n\n\ngoal (1 subgoal):\n 1. x mod n = x", "by simp"], ["proof (state)\nthis:\n  x mod n = x\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> residue n x = x", "then"], ["proof (chain)\npicking this:\n  x mod n = x", "show ?thesis"], ["proof (prove)\nusing this:\n  x mod n = x\n\ngoal (1 subgoal):\n 1. residue n x = x", "using residue_def"], ["proof (prove)\nusing this:\n  x mod n = x\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. residue n x = x", "by auto"], ["proof (state)\nthis:\n  residue n x = x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n  The residue map is a ring homomorphism from\n  $\\mathbb{Z}/p^n\\mathbb{Z} \\to \\mathbb{Z}/p^m\\mathbb{Z}$ when $n \\geq m$:\n\\<close>"], ["", "lemma residue_hom_p:\n  assumes \"(n::nat) \\<ge> m\"\n  assumes \"m >0\"\n  assumes \"prime (p::int)\"\n  shows \"residue (p^m) \\<in> ring_hom (residue_ring (p^n)) (residue_ring (p^m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m)\n    \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "proof(rule residue_is_hom_1)"], ["proof (state)\ngoal (3 subgoals):\n 1. 1 < p ^ m\n 2. 1 < p ^ n\n 3. p ^ m dvd p ^ n", "show \" 1 < p^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p ^ n", "using assms"], ["proof (prove)\nusing this:\n  m \\<le> n\n  0 < m\n  prime p\n\ngoal (1 subgoal):\n 1. 1 < p ^ n", "using prime_gt_1_int"], ["proof (prove)\nusing this:\n  m \\<le> n\n  0 < m\n  prime p\n  prime ?p \\<Longrightarrow> 1 < ?p\n\ngoal (1 subgoal):\n 1. 1 < p ^ n", "by auto"], ["proof (state)\nthis:\n  1 < p ^ n\n\ngoal (2 subgoals):\n 1. 1 < p ^ m\n 2. p ^ m dvd p ^ n", "show \"1 < p^m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p ^ m", "by (simp add: assms(2) assms(3) prime_gt_1_int)"], ["proof (state)\nthis:\n  1 < p ^ m\n\ngoal (1 subgoal):\n 1. p ^ m dvd p ^ n", "show \"p ^ m dvd p ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ m dvd p ^ n", "using assms(1)"], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. p ^ m dvd p ^ n", "by (simp add: dvd_power_le)"], ["proof (state)\nthis:\n  p ^ m dvd p ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Defining the Set of $p$-adic Integers\\<close>"], ["", "text\\<open>\n  The set of $p$-adic integers is the set of all maps $f: \\mathbb{N} \\to \\mathbb{Z}$ which maps\n  $n \\to \\{0,...,p^n -1\\}$ such that $f m \\mod p^{n} = f n$ when $m \\geq n$. A p-adic integer $x$\n  consists of the data of a residue map $x \\mapsto x\\mod p^n$ which commutes with further reduction\n  $\\mod p^m$. This formalization is specialized to just the $p$-adics, but this definition would\n  work essentially as-is for any family of rings and residue maps indexed by a partially\n  ordered type.\n\\<close>"], ["", "definition padic_set :: \"int \\<Rightarrow> padic_int set\" where\n\"padic_set p = {f::nat \\<Rightarrow> int .(\\<forall> m::nat. (f m) \\<in> carrier (residue_ring (p^m)))\n                  \n                   \\<and>(\\<forall>(n::nat) (m::nat). n > m \\<longrightarrow> residue (p^m) (f n) = (f m)) }\""], ["", "lemma padic_set_res_closed:\n  assumes \"f \\<in> padic_set p\"\n  shows \"(f m) \\<in> (carrier (residue_ring (p^m)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f m \\<in> carrier (residue_ring (p ^ m))", "using assms padic_set_def"], ["proof (prove)\nusing this:\n  f \\<in> padic_set p\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n\ngoal (1 subgoal):\n 1. f m \\<in> carrier (residue_ring (p ^ m))", "by auto"], ["", "lemma padic_set_res_coherent:\n  assumes \"f \\<in> padic_set p\"\n  assumes \"n \\<ge> m\"\n  assumes \"prime p\"\n  shows \"residue (p^m) (f n) = (f m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m) (f n) = f m", "proof(cases \"n=m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = m \\<Longrightarrow> residue (p ^ m) (f n) = f m\n 2. n \\<noteq> m \\<Longrightarrow> residue (p ^ m) (f n) = f m", "case True"], ["proof (state)\nthis:\n  n = m\n\ngoal (2 subgoals):\n 1. n = m \\<Longrightarrow> residue (p ^ m) (f n) = f m\n 2. n \\<noteq> m \\<Longrightarrow> residue (p ^ m) (f n) = f m", "have \"(f m) \\<in> carrier (residue_ring (p^m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f m \\<in> carrier (residue_ring (p ^ m))", "using assms padic_set_res_closed"], ["proof (prove)\nusing this:\n  f \\<in> padic_set p\n  m \\<le> n\n  prime p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. f m \\<in> carrier (residue_ring (p ^ m))", "by blast"], ["proof (state)\nthis:\n  f m \\<in> carrier (residue_ring (p ^ m))\n\ngoal (2 subgoals):\n 1. n = m \\<Longrightarrow> residue (p ^ m) (f n) = f m\n 2. n \\<noteq> m \\<Longrightarrow> residue (p ^ m) (f n) = f m", "then"], ["proof (chain)\npicking this:\n  f m \\<in> carrier (residue_ring (p ^ m))", "have \"residue (p^m) (f m) = (f m)\""], ["proof (prove)\nusing this:\n  f m \\<in> carrier (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (f m) = f m", "by (simp add: residue_def residue_ring_def)"], ["proof (state)\nthis:\n  residue (p ^ m) (f m) = f m\n\ngoal (2 subgoals):\n 1. n = m \\<Longrightarrow> residue (p ^ m) (f n) = f m\n 2. n \\<noteq> m \\<Longrightarrow> residue (p ^ m) (f n) = f m", "then"], ["proof (chain)\npicking this:\n  residue (p ^ m) (f m) = f m", "show ?thesis"], ["proof (prove)\nusing this:\n  residue (p ^ m) (f m) = f m\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (f n) = f m", "using True"], ["proof (prove)\nusing this:\n  residue (p ^ m) (f m) = f m\n  n = m\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (f n) = f m", "by blast"], ["proof (state)\nthis:\n  residue (p ^ m) (f n) = f m\n\ngoal (1 subgoal):\n 1. n \\<noteq> m \\<Longrightarrow> residue (p ^ m) (f n) = f m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> m \\<Longrightarrow> residue (p ^ m) (f n) = f m", "case False"], ["proof (state)\nthis:\n  n \\<noteq> m\n\ngoal (1 subgoal):\n 1. n \\<noteq> m \\<Longrightarrow> residue (p ^ m) (f n) = f m", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> m", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<noteq> m\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (f n) = f m", "using assms(1) assms(2) padic_set_def"], ["proof (prove)\nusing this:\n  n \\<noteq> m\n  f \\<in> padic_set p\n  m \\<le> n\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (f n) = f m", "by auto"], ["proof (state)\nthis:\n  residue (p ^ m) (f n) = f m\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n  A consequence of this formalization is that each $p$-adic number is trivially\n  defined to take a value of $0$ at $0$:\n\\<close>"], ["", "lemma padic_set_zero_res:\n  assumes \"prime p\"\n  assumes \"f \\<in> (padic_set p)\"\n  shows \"f 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f 0 = 0", "have \"f 0 \\<in> carrier (residue_ring 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 \\<in> carrier (residue_ring 1)", "using assms(1) padic_set_res_closed"], ["proof (prove)\nusing this:\n  prime p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. f 0 \\<in> carrier (residue_ring 1)", "by (metis assms(2)  power_0)"], ["proof (state)\nthis:\n  f 0 \\<in> carrier (residue_ring 1)\n\ngoal (1 subgoal):\n 1. f 0 = 0", "then"], ["proof (chain)\npicking this:\n  f 0 \\<in> carrier (residue_ring 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  f 0 \\<in> carrier (residue_ring 1)\n\ngoal (1 subgoal):\n 1. f 0 = 0", "using residue_ring_def"], ["proof (prove)\nusing this:\n  f 0 \\<in> carrier (residue_ring 1)\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. f 0 = 0", "by simp"], ["proof (state)\nthis:\n  f 0 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma padic_set_memI:\n  fixes f :: \"padic_int\"\n  assumes \"\\<And>m. (f m) \\<in> (carrier (residue_ring (p^m)))\"\n  assumes \"(\\<And>(m::nat) n. (n > m \\<Longrightarrow> (residue (p^m) (f n) = (f m))))\"\n  shows \"f \\<in> padic_set (p::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> padic_set p", "by (simp add: assms(1) assms(2) padic_set_def)"], ["", "lemma padic_set_memI':\n  fixes f :: \"padic_int\"\n  assumes \"\\<And>m. (f m) \\<in> {0..<p^m}\"\n  assumes \"\\<And>(m::nat) n. n > m \\<Longrightarrow> (f n) mod p^m = (f m)\"\n  shows \"f \\<in> padic_set (p::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> padic_set p", "apply(rule padic_set_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m. f m \\<in> carrier (residue_ring (p ^ m))\n 2. \\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (f n) = f m", "using assms(1) residue_ring_def"], ["proof (prove)\nusing this:\n  f ?m \\<in> {0..<p ^ ?m}\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<And>m. f m \\<in> carrier (residue_ring (p ^ m))\n 2. \\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (f n) = f m", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (f n) = f m", "by (simp add: assms(2) residue_def)"], ["", "section\\<open>The standard operations on the $p$-adic integers\\<close>"], ["", "(**********************************************************************************************)"], ["", "subsection\\<open>Addition\\<close>"], ["", "(**********************************************************************************************)"], ["", "text\\<open>Addition and multiplication are defined componentwise on residue rings:\\<close>"], ["", "definition padic_add :: \"int \\<Rightarrow> padic_int \\<Rightarrow> padic_int \\<Rightarrow> padic_int \" \n  where \"padic_add p f g \\<equiv> (\\<lambda> n. (f n) \\<oplus>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n))\""], ["", "lemma padic_add_res:\n\"(padic_add p f g) n = (f n) \\<oplus>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_add p f g n = f n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n", "by (simp add: padic_add_def)"], ["", "text\\<open>Definition of the $p$-adic additive unit:\\<close>"], ["", "definition padic_zero :: \"int \\<Rightarrow> padic_int\" where\n\"padic_zero p \\<equiv> (\\<lambda>n. 0)\""], ["", "lemma padic_zero_simp:\n\"padic_zero p n = \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\"\n\"padic_zero p n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_zero p n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> &&&\n    padic_zero p n = 0", "apply (simp add: padic_zero_def residue_ring_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_zero p n = 0", "using  padic_zero_def"], ["proof (prove)\nusing this:\n  padic_zero ?p \\<equiv> \\<lambda>n. 0\n\ngoal (1 subgoal):\n 1. padic_zero p n = 0", "by auto"], ["", "lemma padic_zero_in_padic_set:\n  assumes \"p > 0\"\n  shows \"padic_zero p \\<in> padic_set p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_zero p \\<in> padic_set p", "apply(rule padic_set_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m. padic_zero p m \\<in> carrier (residue_ring (p ^ m))\n 2. \\<And>m n.\n       m < n \\<Longrightarrow>\n       residue (p ^ m) (padic_zero p n) = padic_zero p m", "by(auto simp: assms padic_zero_def residue_def residue_ring_def)"], ["", "text\\<open>$p$-adic additive inverses:\\<close>"], ["", "definition padic_a_inv :: \"int \\<Rightarrow>  padic_int \\<Rightarrow>  padic_int\" where\n\"padic_a_inv p f \\<equiv> \\<lambda> n. \\<ominus>\\<^bsub>residue_ring (p^n)\\<^esub> (f n)\""], ["", "lemma padic_a_inv_simp:\n\"padic_a_inv p f n\\<equiv> \\<ominus>\\<^bsub>residue_ring (p^n)\\<^esub> (f n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_a_inv p f n \\<equiv>\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> f n", "by (simp add: padic_a_inv_def)"], ["", "lemma padic_a_inv_simp':\n  assumes \"prime p\"\n  assumes \"f \\<in> padic_set p\"\n  assumes \"n >0\"\n  shows \"padic_a_inv p f n = (if n=0 then 0 else (- (f n)) mod (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_a_inv p f n = (if n = 0 then 0 else - f n mod p ^ n)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_a_inv p f n = (if n = 0 then 0 else - f n mod p ^ n)", "have \"residues (p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residues (p ^ n)", "by (simp add: assms(1) assms(3) prime_gt_1_int residues.intro)"], ["proof (state)\nthis:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. padic_a_inv p f n = (if n = 0 then 0 else - f n mod p ^ n)", "then"], ["proof (chain)\npicking this:\n  residues (p ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. padic_a_inv p f n = (if n = 0 then 0 else - f n mod p ^ n)", "using residue_ring_def padic_a_inv_def residues.res_neg_eq"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n  padic_a_inv ?p ?f \\<equiv>\n  \\<lambda>n. \\<ominus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?f n\n  residues ?m \\<Longrightarrow>\n  \\<ominus>\\<^bsub>residue_ring ?m\\<^esub> ?x = - ?x mod ?m\n\ngoal (1 subgoal):\n 1. padic_a_inv p f n = (if n = 0 then 0 else - f n mod p ^ n)", "by auto"], ["proof (state)\nthis:\n  padic_a_inv p f n = (if n = 0 then 0 else - f n mod p ^ n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n  We show that \\<^const>\\<open>padic_set\\<close> is closed under additive inverses. Note that we have to treat the\n  case of residues at $0$ separately.\n\\<close>"], ["", "lemma residue_1_prop:\n\"\\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "let ?x = \"\\<zero>\\<^bsub>residue_ring 1\\<^esub>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "let ?y = \"\\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "let ?G = \"add_monoid (residue_ring 1)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "have P0:\" ?x \\<oplus>\\<^bsub>residue_ring 1\\<^esub> ?x =  ?x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<oplus>\\<^bsub>residue_ring 1\\<^esub>\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<oplus>\\<^bsub>residue_ring 1\\<^esub>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "have P1: \"?x \\<in> carrier (residue_ring 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<in> carrier (residue_ring 1)", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<in> carrier (residue_ring 1)\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "have \"?x \\<in> carrier ?G \\<and> ?x \\<otimes>\\<^bsub>?G\\<^esub> ?x = \\<one>\\<^bsub>?G\\<^esub> \\<and> ?x \\<otimes>\\<^bsub>?G\\<^esub> ?x = \\<one>\\<^bsub>?G\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n    \\<in> carrier (add_monoid (residue_ring 1)) \\<and>\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub> \\<and>\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>", "using P0 P1"], ["proof (prove)\nusing this:\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<oplus>\\<^bsub>residue_ring 1\\<^esub>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<in> carrier (residue_ring 1)\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n    \\<in> carrier (add_monoid (residue_ring 1)) \\<and>\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub> \\<and>\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n  \\<in> carrier (add_monoid (residue_ring 1)) \\<and>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub> \\<and>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "then"], ["proof (chain)\npicking this:\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n  \\<in> carrier (add_monoid (residue_ring 1)) \\<and>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub> \\<and>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n  \\<in> carrier (add_monoid (residue_ring 1)) \\<and>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub> \\<and>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> \\<otimes>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<one>\\<^bsub>add_monoid (residue_ring 1)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n    \\<zero>\\<^bsub>residue_ring 1\\<^esub>", "by (simp add: m_inv_def a_inv_def residue_ring_def)"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma residue_1_zero:\n  \"residue 1 n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue 1 n = 0", "by (simp add: residue_def)"], ["", "lemma padic_a_inv_in_padic_set:\n  assumes \"f \\<in> padic_set p\"\n  assumes \"prime (p::int)\"\n  shows \"(padic_a_inv p f) \\<in> padic_set p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_a_inv p f \\<in> padic_set p", "proof(rule padic_set_memI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m. padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))\n 2. \\<And>m n.\n       m < n \\<Longrightarrow>\n       residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "show \"\\<And>m. padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m. padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))", "show \"padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))", "have P0: \"padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p^m)\\<^esub> (f m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> f m", "using padic_a_inv_def"], ["proof (prove)\nusing this:\n  padic_a_inv ?p ?f \\<equiv>\n  \\<lambda>n. \\<ominus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?f n\n\ngoal (1 subgoal):\n 1. padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> f m", "by simp"], ["proof (state)\nthis:\n  padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> f m\n\ngoal (1 subgoal):\n 1. padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))", "then"], ["proof (chain)\npicking this:\n  padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> f m", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> f m\n\ngoal (1 subgoal):\n 1. padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))", "by (metis (no_types, lifting) assms(1) assms(2) cring.cring_simprules(3) neq0_conv \n            one_less_power padic_set_res_closed padic_set_zero_res power_0 prime_gt_1_int residue_1_prop\n            residue_ring_def residues.cring residues.intro ring.simps(1))"], ["proof (state)\nthis:\n  padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_a_inv p f m \\<in> carrier (residue_ring (p ^ m))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_a_inv p f ?m \\<in> carrier (residue_ring (p ^ ?m))\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "show \"\\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "fix m n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "assume \"m < n\""], ["proof (state)\nthis:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "show \"residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "proof(cases \"m=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "then"], ["proof (chain)\npicking this:\n  m = 0", "have 0: \"residue (p ^ m) (padic_a_inv p f n) = 0\""], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (padic_a_inv p f n) = 0", "using residue_1_zero"], ["proof (prove)\nusing this:\n  m = 0\n  residue 1 ?n = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (padic_a_inv p f n) = 0", "by simp"], ["proof (state)\nthis:\n  residue (p ^ m) (padic_a_inv p f n) = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "have \"f m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f m = 0", "using assms True padic_set_def residue_ring_def padic_set_zero_res"], ["proof (prove)\nusing this:\n  f \\<in> padic_set p\n  prime p\n  m = 0\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n  \\<lbrakk>prime ?p; ?f \\<in> padic_set ?p\\<rbrakk>\n  \\<Longrightarrow> ?f 0 = 0\n\ngoal (1 subgoal):\n 1. f m = 0", "by auto"], ["proof (state)\nthis:\n  f m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "then"], ["proof (chain)\npicking this:\n  f m = 0", "have 1: \"padic_a_inv p f m = 0\""], ["proof (prove)\nusing this:\n  f m = 0\n\ngoal (1 subgoal):\n 1. padic_a_inv p f m = 0", "using residue_1_prop assms"], ["proof (prove)\nusing this:\n  f m = 0\n  \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n  f \\<in> padic_set p\n  prime p\n\ngoal (1 subgoal):\n 1. padic_a_inv p f m = 0", "by (simp add: True padic_a_inv_def residue_ring_def)"], ["proof (state)\nthis:\n  padic_a_inv p f m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "then"], ["proof (chain)\npicking this:\n  padic_a_inv p f m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_a_inv p f m = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "using 0 1"], ["proof (prove)\nusing this:\n  padic_a_inv p f m = 0\n  residue (p ^ m) (padic_a_inv p f n) = 0\n  padic_a_inv p f m = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "by simp"], ["proof (state)\nthis:\n  residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "have 0: \"f n \\<in> carrier (residue_ring (p^n)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n \\<in> carrier (residue_ring (p ^ n))", "using assms(1) padic_set_res_closed"], ["proof (prove)\nusing this:\n  f \\<in> padic_set p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. f n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  f n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "have 1: \"padic_a_inv p f n = \\<ominus>\\<^bsub>residue_ring (p^n)\\<^esub> (f n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_a_inv p f n = \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> f n", "using padic_a_inv_def"], ["proof (prove)\nusing this:\n  padic_a_inv ?p ?f \\<equiv>\n  \\<lambda>n. \\<ominus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?f n\n\ngoal (1 subgoal):\n 1. padic_a_inv p f n = \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> f n", "by simp"], ["proof (state)\nthis:\n  padic_a_inv p f n = \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> f n\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "have 2: \"padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p^m)\\<^esub> (f m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> f m", "using  False padic_a_inv_def"], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n  padic_a_inv ?p ?f \\<equiv>\n  \\<lambda>n. \\<ominus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?f n\n\ngoal (1 subgoal):\n 1. padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> f m", "by simp"], ["proof (state)\nthis:\n  padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> f m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "have 3: \"residue (p ^ m) \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m)\n    \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "using residue_hom_p False \\<open>m < n\\<close> assms(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?m \\<le> ?n; 0 < ?m; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m)\n                    \\<in> ring_hom (residue_ring (?p ^ ?n))\n                           (residue_ring (?p ^ ?m))\n  m \\<noteq> 0\n  m < n\n  prime p\n\ngoal (1 subgoal):\n 1. residue (p ^ m)\n    \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "by auto"], ["proof (state)\nthis:\n  residue (p ^ m)\n  \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "have 4: \" cring (residue_ring (p ^ n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring (residue_ring (p ^ n))", "using \\<open>m < n\\<close> assms(2) prime_gt_1_int residues.cring residues.intro"], ["proof (prove)\nusing this:\n  m < n\n  prime p\n  prime ?p \\<Longrightarrow> 1 < ?p\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n  1 < ?m \\<Longrightarrow> residues ?m\n\ngoal (1 subgoal):\n 1. cring (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  cring (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "have 5: \" cring (residue_ring (p ^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring (residue_ring (p ^ m))", "using False assms(2) prime_gt_1_int residues.cring residues.intro"], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n  prime p\n  prime ?p \\<Longrightarrow> 1 < ?p\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n  1 < ?m \\<Longrightarrow> residues ?m\n\ngoal (1 subgoal):\n 1. cring (residue_ring (p ^ m))", "by auto"], ["proof (state)\nthis:\n  cring (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "have  \"ring_hom_cring (residue_ring (p ^ n))  (residue_ring (p ^ m)) (residue (p ^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ring_hom_cring (residue_ring (p ^ n)) (residue_ring (p ^ m))\n     (residue (p ^ m))", "using 3 4 5 UnivPoly.ring_hom_cringI"], ["proof (prove)\nusing this:\n  residue (p ^ m)\n  \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\n  cring (residue_ring (p ^ n))\n  cring (residue_ring (p ^ m))\n  \\<lbrakk>cring ?R; cring ?S; ?h \\<in> ring_hom ?R ?S\\<rbrakk>\n  \\<Longrightarrow> ring_hom_cring ?R ?S ?h\n\ngoal (1 subgoal):\n 1. ring_hom_cring (residue_ring (p ^ n)) (residue_ring (p ^ m))\n     (residue (p ^ m))", "by blast"], ["proof (state)\nthis:\n  ring_hom_cring (residue_ring (p ^ n)) (residue_ring (p ^ m))\n   (residue (p ^ m))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "then"], ["proof (chain)\npicking this:\n  ring_hom_cring (residue_ring (p ^ n)) (residue_ring (p ^ m))\n   (residue (p ^ m))", "show ?thesis"], ["proof (prove)\nusing this:\n  ring_hom_cring (residue_ring (p ^ n)) (residue_ring (p ^ m))\n   (residue (p ^ m))\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "using 0  1 2 ring_hom_cring.hom_a_inv"], ["proof (prove)\nusing this:\n  ring_hom_cring (residue_ring (p ^ n)) (residue_ring (p ^ m))\n   (residue (p ^ m))\n  f n \\<in> carrier (residue_ring (p ^ n))\n  padic_a_inv p f n = \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> f n\n  padic_a_inv p f m = \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> f m\n  \\<lbrakk>ring_hom_cring ?R ?S ?h; ?x \\<in> carrier ?R\\<rbrakk>\n  \\<Longrightarrow> ?h (\\<ominus>\\<^bsub>?R\\<^esub> ?x) =\n                    \\<ominus>\\<^bsub>?S\\<^esub> ?h ?x\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m", "by (metis \\<open>m < n\\<close> assms(1) assms(2) less_imp_le_nat padic_set_res_coherent)"], ["proof (state)\nthis:\n  residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  residue (p ^ m) (padic_a_inv p f n) = padic_a_inv p f m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?m < ?n \\<Longrightarrow>\n  residue (p ^ ?m) (padic_a_inv p f ?n) = padic_a_inv p f ?m\n\ngoal:\nNo subgoals!", "qed"], ["", "(**********************************************************************************************)"], ["", "subsection\\<open>Multiplication\\<close>"], ["", "(**********************************************************************************************)"], ["", "definition padic_mult :: \"int \\<Rightarrow> padic_int \\<Rightarrow> padic_int \\<Rightarrow> padic_int\" \n  where \"padic_mult p f g \\<equiv> (\\<lambda> n. (f n) \\<otimes>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n))\""], ["", "lemma padic_mult_res: \n\"(padic_mult p f g) n = (f n) \\<otimes>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g n =\n    f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n", "by (simp add: padic_mult_def)"], ["", "text\\<open>Definition of the $p$-adic multiplicative unit:\\<close>"], ["", "definition padic_one :: \"int \\<Rightarrow> padic_int\" where\n\"padic_one p \\<equiv> (\\<lambda>n.(if n=0 then 0 else 1))\""], ["", "lemma padic_one_simp:\n  assumes \"n >0\"\n  shows \"padic_one p n =  \\<one>\\<^bsub>residue_ring (p^n)\\<^esub>\" \n        \"padic_one p n = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_one p n = \\<one>\\<^bsub>residue_ring (p ^ n)\\<^esub> &&&\n    padic_one p n = 1", "apply (simp add: assms padic_one_def residue_ring_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_one p n = 1", "using assms padic_one_def"], ["proof (prove)\nusing this:\n  0 < n\n  padic_one ?p \\<equiv> \\<lambda>n. if n = 0 then 0 else 1\n\ngoal (1 subgoal):\n 1. padic_one p n = 1", "by auto"], ["", "lemma padic_one_in_padic_set:\n  assumes \"prime p\"\n  shows \"padic_one p \\<in> padic_set p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_one p \\<in> padic_set p", "apply(rule padic_set_memI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>m. padic_one p m \\<in> carrier (residue_ring (p ^ m))\n 2. \\<And>m n.\n       m < n \\<Longrightarrow>\n       residue (p ^ m) (padic_one p n) = padic_one p m", "by(auto simp : assms padic_one_def prime_gt_1_int residue_def residue_ring_def)"], ["", "lemma padic_simps:\n\"padic_zero p n = \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\" \n\"padic_a_inv p f n \\<equiv> \\<ominus>\\<^bsub>residue_ring (p^n)\\<^esub> (f n)\"\n\"(padic_mult p f g) n = (f n) \\<otimes>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n)\"\n\"(padic_add p f g) n = (f n) \\<oplus>\\<^bsub>(residue_ring (p^n))\\<^esub> (g n)\"\n\"n>0 \\<Longrightarrow>padic_one p n =  \\<one>\\<^bsub>residue_ring (p^n)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (padic_zero p n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> &&&\n     padic_a_inv p f n \\<equiv>\n     \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> f n) &&&\n    padic_mult p f g n =\n    f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n &&&\n    padic_add p f g n =\n    f n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n &&&\n    (0 < n \\<Longrightarrow>\n     padic_one p n = \\<one>\\<^bsub>residue_ring (p ^ n)\\<^esub>)", "apply (simp add: padic_zero_simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. padic_a_inv p f n \\<equiv>\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> f n\n 2. padic_mult p f g n =\n    f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n\n 3. padic_add p f g n = f n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n\n 4. 0 < n \\<Longrightarrow>\n    padic_one p n = \\<one>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "apply (simp add: padic_a_inv_simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. padic_mult p f g n =\n    f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n\n 2. padic_add p f g n = f n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n\n 3. 0 < n \\<Longrightarrow>\n    padic_one p n = \\<one>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "apply (simp add: padic_mult_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. padic_add p f g n = f n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n\n 2. 0 < n \\<Longrightarrow>\n    padic_one p n = \\<one>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "apply (simp add: padic_add_res)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    padic_one p n = \\<one>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "using padic_one_simp"], ["proof (prove)\nusing this:\n  0 < ?n \\<Longrightarrow>\n  padic_one ?p ?n = \\<one>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  0 < ?n \\<Longrightarrow> padic_one ?p ?n = 1\n\ngoal (1 subgoal):\n 1. 0 < n \\<Longrightarrow>\n    padic_one p n = \\<one>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "by auto"], ["", "lemma residue_1_mult:\n  assumes \"x \\<in> carrier (residue_ring 1)\"\n  assumes \"y \\<in> carrier (residue_ring 1)\"\n  shows \"x \\<otimes>\\<^bsub>residue_ring 1\\<^esub> y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring 1\\<^esub> y = 0", "by (simp add: residue_ring_def)"], ["", "lemma padic_mult_in_padic_set:\n  assumes \"f \\<in> (padic_set p)\"\n  assumes \"g \\<in> (padic_set p)\"\n  assumes \"prime p\"\n  shows \"(padic_mult p f g)\\<in> (padic_set p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g \\<in> padic_set p", "proof(rule padic_set_memI')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m. padic_mult p f g m \\<in> {0..<p ^ m}\n 2. \\<And>m n.\n       m < n \\<Longrightarrow>\n       padic_mult p f g n mod p ^ m = padic_mult p f g m", "show \"\\<And>m. padic_mult p f g m \\<in> {0..<p ^ m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m. padic_mult p f g m \\<in> {0..<p ^ m}", "unfolding padic_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       f m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> g m\n       \\<in> {0..<p ^ m}", "using assms residue_ring_def"], ["proof (prove)\nusing this:\n  f \\<in> padic_set p\n  g \\<in> padic_set p\n  prime p\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       f m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> g m\n       \\<in> {0..<p ^ m}", "by (simp add: prime_gt_0_int)"], ["proof (state)\nthis:\n  padic_mult p f g ?m \\<in> {0..<p ^ ?m}\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       padic_mult p f g n mod p ^ m = padic_mult p f g m", "show \"\\<And>m n. m < n \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       padic_mult p f g n mod p ^ m = padic_mult p f g m", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       padic_mult p f g n mod p ^ m = padic_mult p f g m", "fix m n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       padic_mult p f g n mod p ^ m = padic_mult p f g m", "assume A: \"m < n\""], ["proof (state)\nthis:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow>\n       padic_mult p f g n mod p ^ m = padic_mult p f g m", "then"], ["proof (chain)\npicking this:\n  m < n", "show \"padic_mult p f g n mod p ^ m = padic_mult p f g m\""], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. padic_mult p f g n mod p ^ m = padic_mult p f g m", "proof(cases \"m=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>m < n; m = 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m\n 2. \\<lbrakk>m < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>m < n; m = 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m\n 2. \\<lbrakk>m < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m", "then"], ["proof (chain)\npicking this:\n  m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. padic_mult p f g n mod p ^ m = padic_mult p f g m", "by (metis assms(1) assms(2) mod_by_1 padic_mult_def padic_set_res_closed power_0 residue_1_mult)"], ["proof (state)\nthis:\n  padic_mult p f g n mod p ^ m = padic_mult p f g m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m", "have 0:\"residue (p ^ m)  \\<in> ring_hom (residue_ring (p^n)) (residue_ring (p^m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m)\n    \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "using A residue_hom_p assms  False"], ["proof (prove)\nusing this:\n  m < n\n  \\<lbrakk>?m \\<le> ?n; 0 < ?m; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m)\n                    \\<in> ring_hom (residue_ring (?p ^ ?n))\n                           (residue_ring (?p ^ ?m))\n  f \\<in> padic_set p\n  g \\<in> padic_set p\n  prime p\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m)\n    \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "by auto"], ["proof (state)\nthis:\n  residue (p ^ m)\n  \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m", "have 1:\"f n \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n \\<in> carrier (residue_ring (p ^ n))", "using assms(1) padic_set_res_closed"], ["proof (prove)\nusing this:\n  f \\<in> padic_set p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. f n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  f n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m", "have 2:\"g n \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g n \\<in> carrier (residue_ring (p ^ n))", "using assms(2) padic_set_res_closed"], ["proof (prove)\nusing this:\n  g \\<in> padic_set p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. g n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  g n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m", "have 3: \"residue (p^m) (f n \\<otimes>\\<^bsub>residue_ring (p^n)\\<^esub> g n) \n                    = f m \\<otimes>\\<^bsub>residue_ring (p^m)\\<^esub> g m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m)\n     (f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n) =\n    f m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> g m", "using  \"0\" \"1\" \"2\" A assms(1) assms(2) assms(3) less_imp_le of_nat_power padic_set_res_coherent"], ["proof (prove)\nusing this:\n  residue (p ^ m)\n  \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\n  f n \\<in> carrier (residue_ring (p ^ n))\n  g n \\<in> carrier (residue_ring (p ^ n))\n  m < n\n  f \\<in> padic_set p\n  g \\<in> padic_set p\n  prime p\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n  of_nat (?m ^ ?n) = of_nat ?m ^ ?n\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n\ngoal (1 subgoal):\n 1. residue (p ^ m)\n     (f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n) =\n    f m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> g m", "by (simp add: assms(2) ring_hom_mult)"], ["proof (state)\nthis:\n  residue (p ^ m) (f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n) =\n  f m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> g m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>m < n; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g n mod p ^ m = padic_mult p f g m", "then"], ["proof (chain)\npicking this:\n  residue (p ^ m) (f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n) =\n  f m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> g m", "show ?thesis"], ["proof (prove)\nusing this:\n  residue (p ^ m) (f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n) =\n  f m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> g m\n\ngoal (1 subgoal):\n 1. padic_mult p f g n mod p ^ m = padic_mult p f g m", "using ring_hom_mult padic_simps[simp] residue_def"], ["proof (prove)\nusing this:\n  residue (p ^ m) (f n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> g n) =\n  f m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> g m\n  \\<lbrakk>?h \\<in> ring_hom ?R ?S; ?x \\<in> carrier ?R;\n   ?y \\<in> carrier ?R\\<rbrakk>\n  \\<Longrightarrow> ?h (?x \\<otimes>\\<^bsub>?R\\<^esub> ?y) =\n                    ?h ?x \\<otimes>\\<^bsub>?S\\<^esub> ?h ?y\n  padic_zero ?p ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  padic_a_inv ?p ?f ?n \\<equiv>\n  \\<ominus>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?f ?n\n  padic_mult ?p ?f ?g ?n =\n  ?f ?n \\<otimes>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n  padic_add ?p ?f ?g ?n =\n  ?f ?n \\<oplus>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n  0 < ?n \\<Longrightarrow>\n  padic_one ?p ?n = \\<one>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. padic_mult p f g n mod p ^ m = padic_mult p f g m", "by auto"], ["proof (state)\nthis:\n  padic_mult p f g n mod p ^ m = padic_mult p f g m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_mult p f g n mod p ^ m = padic_mult p f g m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?m < ?n \\<Longrightarrow>\n  padic_mult p f g ?n mod p ^ ?m = padic_mult p f g ?m\n\ngoal:\nNo subgoals!", "qed"], ["", "section\\<open>The $p$-adic Valuation\\<close>"], ["", "text\\<open>This section defines the integer-valued $p$-adic valuation. Maps $0$ to $-1$ for now, otherwise is correct. We want the valuation to be integer-valued, but in practice we know it will always be positive. When we extend the valuation from the $p$-adic integers to the $p$-adic field we will have elements of negative valuation. \\<close>"], ["", "definition padic_val :: \"int \\<Rightarrow>  padic_int \\<Rightarrow> int\"  where\n\"padic_val p f \\<equiv> if (f = padic_zero p) then -1 else int (LEAST k::nat. (f (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>)\""], ["", "text\\<open>Characterization of $padic\\_val$ on nonzero elements\\<close>"], ["", "lemma val_of_nonzero:\n  assumes \"f \\<in> padic_set p\"\n  assumes \"f \\<noteq> padic_zero p\"\n  assumes \"prime p\"\n  shows \"f (nat (padic_val p f) + 1) \\<noteq>  \\<zero>\\<^bsub>residue_ring (p^((nat (padic_val p f) + 1)))\\<^esub>\"\n        \"f (nat (padic_val p f)) =  \\<zero>\\<^bsub>residue_ring (p^((nat (padic_val p f))))\\<^esub>\"\n        \"f (nat (padic_val p f) + 1) \\<noteq> 0\"\n        \"f (nat (padic_val p f)) =  0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f (nat (padic_val p f) + 1) \\<noteq>\n     \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub> &&&\n     f (nat (padic_val p f)) =\n     \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>) &&&\n    f (nat (padic_val p f) + 1) \\<noteq> 0 &&& f (nat (padic_val p f)) = 0", "proof-"], ["proof (state)\ngoal (4 subgoals):\n 1. f (nat (padic_val p f) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n 2. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n 3. f (nat (padic_val p f) + 1) \\<noteq> 0\n 4. f (nat (padic_val p f)) = 0", "let ?vf = \"padic_val p f\""], ["proof (state)\ngoal (4 subgoals):\n 1. f (nat (padic_val p f) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n 2. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n 3. f (nat (padic_val p f) + 1) \\<noteq> 0\n 4. f (nat (padic_val p f)) = 0", "have 0: \"?vf =int (LEAST k::nat. (f (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p f =\n    int (LEAST k.\n            f (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "using assms(2) padic_val_def"], ["proof (prove)\nusing this:\n  f \\<noteq> padic_zero p\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p f =\n    int (LEAST k.\n            f (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  padic_val p f =\n  int (LEAST k.\n          f (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (4 subgoals):\n 1. f (nat (padic_val p f) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n 2. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n 3. f (nat (padic_val p f) + 1) \\<noteq> 0\n 4. f (nat (padic_val p f)) = 0", "have 1: \"(\\<exists> k::nat. (f (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k.\n       f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>", "obtain k where 1: \"(f k) \\<noteq> (padic_zero p k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f k \\<noteq> padic_zero p k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(2)"], ["proof (prove)\nusing this:\n  f \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f k \\<noteq> padic_zero p k \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson ext)"], ["proof (state)\nthis:\n  f k \\<noteq> padic_zero p k\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>", "have 2: \"k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> False", "assume \"k=0\""], ["proof (state)\nthis:\n  k = 0\n\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  k = 0", "have \"f k = 0\""], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. f k = 0", "using assms padic_set_zero_res"], ["proof (prove)\nusing this:\n  k = 0\n  f \\<in> padic_set p\n  f \\<noteq> padic_zero p\n  prime p\n  \\<lbrakk>prime ?p; ?f \\<in> padic_set ?p\\<rbrakk>\n  \\<Longrightarrow> ?f 0 = 0\n\ngoal (1 subgoal):\n 1. f k = 0", "by blast"], ["proof (state)\nthis:\n  f k = 0\n\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f k = 0", "show False"], ["proof (prove)\nusing this:\n  f k = 0\n\ngoal (1 subgoal):\n 1. False", "using padic_zero_def 1"], ["proof (prove)\nusing this:\n  f k = 0\n  padic_zero ?p \\<equiv> \\<lambda>n. 0\n  f k \\<noteq> padic_zero p k\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  k \\<noteq> 0", "obtain m where \"k = Suc m\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>m. k = Suc m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (meson lessI less_Suc_eq_0_disj)"], ["proof (state)\nthis:\n  k = Suc m\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  k = Suc m", "have \"(f (Suc m)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc m))\\<^esub>\""], ["proof (prove)\nusing this:\n  k = Suc m\n\ngoal (1 subgoal):\n 1. f (Suc m) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc m)\\<^esub>", "using \"1\" padic_zero_simp"], ["proof (prove)\nusing this:\n  k = Suc m\n  f k \\<noteq> padic_zero p k\n  padic_zero ?p ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  padic_zero ?p ?n = 0\n\ngoal (1 subgoal):\n 1. f (Suc m) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc m)\\<^esub>", "by simp"], ["proof (state)\nthis:\n  f (Suc m) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc m)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  f (Suc m) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc m)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Suc m) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc m)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<exists>k.\n     f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k.\n     f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>\n\ngoal (4 subgoals):\n 1. f (nat (padic_val p f) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n 2. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n 3. f (nat (padic_val p f) + 1) \\<noteq> 0\n 4. f (nat (padic_val p f)) = 0", "then"], ["proof (chain)\npicking this:\n  \\<exists>k.\n     f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>", "have \"(f (Suc (nat ?vf))) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc (nat ?vf)))\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<exists>k.\n     f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f))) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f)))\\<^esub>", "using 0"], ["proof (prove)\nusing this:\n  \\<exists>k.\n     f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>\n  padic_val p f =\n  int (LEAST k.\n          f (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f))) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f)))\\<^esub>", "by (metis (mono_tags, lifting) LeastI_ex nat_int)"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f)))\\<^esub>\n\ngoal (4 subgoals):\n 1. f (nat (padic_val p f) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n 2. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n 3. f (nat (padic_val p f) + 1) \\<noteq> 0\n 4. f (nat (padic_val p f)) = 0", "then"], ["proof (chain)\npicking this:\n  f (Suc (nat (padic_val p f))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f)))\\<^esub>", "show C0: \"f (nat (padic_val p f) + 1) \\<noteq>  \\<zero>\\<^bsub>residue_ring (p^((nat (padic_val p f) + 1)))\\<^esub>\""], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f)))\\<^esub>\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>", "using 0 1"], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f)))\\<^esub>\n  padic_val p f =\n  int (LEAST k.\n          f (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n  \\<exists>k.\n     f (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>", "by simp"], ["proof (state)\nthis:\n  f (nat (padic_val p f) + 1) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n\ngoal (3 subgoals):\n 1. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n 2. f (nat (padic_val p f) + 1) \\<noteq> 0\n 3. f (nat (padic_val p f)) = 0", "show C1: \"f (nat (padic_val p f)) =  \\<zero>\\<^bsub>residue_ring (p^((nat (padic_val p f))))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "proof(cases \"(padic_val p f) = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. padic_val p f = 0 \\<Longrightarrow>\n    f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n 2. padic_val p f \\<noteq> 0 \\<Longrightarrow>\n    f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "case True"], ["proof (state)\nthis:\n  padic_val p f = 0\n\ngoal (2 subgoals):\n 1. padic_val p f = 0 \\<Longrightarrow>\n    f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n 2. padic_val p f \\<noteq> 0 \\<Longrightarrow>\n    f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "then"], ["proof (chain)\npicking this:\n  padic_val p f = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_val p f = 0\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "using assms(1) assms(3) padic_set_zero_res residue_ring_def"], ["proof (prove)\nusing this:\n  padic_val p f = 0\n  f \\<in> padic_set p\n  prime p\n  \\<lbrakk>prime ?p; ?f \\<in> padic_set ?p\\<rbrakk>\n  \\<Longrightarrow> ?f 0 = 0\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "by auto"], ["proof (state)\nthis:\n  f (nat (padic_val p f)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p f \\<noteq> 0 \\<Longrightarrow>\n    f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p f \\<noteq> 0 \\<Longrightarrow>\n    f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "case False"], ["proof (state)\nthis:\n  padic_val p f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. padic_val p f \\<noteq> 0 \\<Longrightarrow>\n    f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "have \"\\<not> f (nat (padic_val p f)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> f (nat (padic_val p f)) \\<noteq>\n           \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub> \\<Longrightarrow>\n    False", "assume \"f (nat (padic_val p f)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\""], ["proof (state)\nthis:\n  f (nat (padic_val p f)) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub> \\<Longrightarrow>\n    False", "obtain k where \" (Suc k) = (nat (padic_val p f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        Suc k = nat (padic_val p f) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using False"], ["proof (prove)\nusing this:\n  padic_val p f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        Suc k = nat (padic_val p f) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \"0\" gr0_conv_Suc"], ["proof (prove)\nusing this:\n  padic_val p f \\<noteq> 0\n  padic_val p f =\n  int (LEAST k.\n          f (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n  (0 < ?n) = (\\<exists>m. ?n = Suc m)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        Suc k = nat (padic_val p f) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Suc k = nat (padic_val p f)\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  Suc k = nat (padic_val p f)", "have \"?vf  \\<noteq> int (LEAST k::nat. (f (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>)\""], ["proof (prove)\nusing this:\n  Suc k = nat (padic_val p f)\n\ngoal (1 subgoal):\n 1. padic_val p f \\<noteq>\n    int (LEAST k.\n            f (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "using False"], ["proof (prove)\nusing this:\n  Suc k = nat (padic_val p f)\n  padic_val p f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. padic_val p f \\<noteq>\n    int (LEAST k.\n            f (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "by (metis (mono_tags, lifting) Least_le \n          \\<open>f (nat (padic_val p f)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\\<close>\n            add_le_same_cancel2 nat_int not_one_le_zero plus_1_eq_Suc)"], ["proof (state)\nthis:\n  padic_val p f \\<noteq>\n  int (LEAST k.\n          f (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  padic_val p f \\<noteq>\n  int (LEAST k.\n          f (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "show False"], ["proof (prove)\nusing this:\n  padic_val p f \\<noteq>\n  int (LEAST k.\n          f (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. False", "using \"0\""], ["proof (prove)\nusing this:\n  padic_val p f \\<noteq>\n  int (LEAST k.\n          f (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n  padic_val p f =\n  int (LEAST k.\n          f (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> f (nat (padic_val p f)) \\<noteq>\n         \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p f \\<noteq> 0 \\<Longrightarrow>\n    f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "then"], ["proof (chain)\npicking this:\n  \\<not> f (nat (padic_val p f)) \\<noteq>\n         \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "show \"f (nat (padic_val p f)) = \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\""], ["proof (prove)\nusing this:\n  \\<not> f (nat (padic_val p f)) \\<noteq>\n         \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "by auto"], ["proof (state)\nthis:\n  f (nat (padic_val p f)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (nat (padic_val p f)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n\ngoal (2 subgoals):\n 1. f (nat (padic_val p f) + 1) \\<noteq> 0\n 2. f (nat (padic_val p f)) = 0", "show  \"f (nat (padic_val p f) + 1) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) \\<noteq> 0", "using C0  residue_ring_def"], ["proof (prove)\nusing this:\n  f (nat (padic_val p f) + 1) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  f (nat (padic_val p f) + 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) = 0", "show  \"f (nat (padic_val p f)) =  0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) = 0", "by (simp add: C1 residue_ring_def)"], ["proof (state)\nthis:\n  f (nat (padic_val p f)) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>If $x \\mod p^{n+1} \\neq 0$, then $n \\geq val x$.\\<close>"], ["", "lemma below_val_zero:\n  assumes \"prime p\"\n  assumes \"x \\<in> (padic_set p)\"\n  assumes \"x (Suc n) \\<noteq>  \\<zero>\\<^bsub>residue_ring (p^(Suc n))\\<^esub>\"\n  shows  \"int n \\<ge> (padic_val p x )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p x \\<le> int n", "proof(cases \"x = padic_zero p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = padic_zero p \\<Longrightarrow> padic_val p x \\<le> int n\n 2. x \\<noteq> padic_zero p \\<Longrightarrow> padic_val p x \\<le> int n", "case True"], ["proof (state)\nthis:\n  x = padic_zero p\n\ngoal (2 subgoals):\n 1. x = padic_zero p \\<Longrightarrow> padic_val p x \\<le> int n\n 2. x \\<noteq> padic_zero p \\<Longrightarrow> padic_val p x \\<le> int n", "then"], ["proof (chain)\npicking this:\n  x = padic_zero p", "show  ?thesis"], ["proof (prove)\nusing this:\n  x = padic_zero p\n\ngoal (1 subgoal):\n 1. padic_val p x \\<le> int n", "using assms(3) padic_zero_simp"], ["proof (prove)\nusing this:\n  x = padic_zero p\n  x (Suc n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc n)\\<^esub>\n  padic_zero ?p ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  padic_zero ?p ?n = 0\n\ngoal (1 subgoal):\n 1. padic_val p x \\<le> int n", "by blast"], ["proof (state)\nthis:\n  padic_val p x \\<le> int n\n\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p \\<Longrightarrow> padic_val p x \\<le> int n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p \\<Longrightarrow> padic_val p x \\<le> int n", "case False"], ["proof (state)\nthis:\n  x \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p \\<Longrightarrow> padic_val p x \\<le> int n", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> padic_zero p", "have \"padic_val p x = int (LEAST k::nat. x (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. padic_val p x =\n    int (LEAST k.\n            x (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "using padic_val_def"], ["proof (prove)\nusing this:\n  x \\<noteq> padic_zero p\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p x =\n    int (LEAST k.\n            x (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  padic_val p x =\n  int (LEAST k.\n          x (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p \\<Longrightarrow> padic_val p x \\<le> int n", "then"], ["proof (chain)\npicking this:\n  padic_val p x =\n  int (LEAST k.\n          x (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "show \"of_nat n \\<ge> (padic_val p x )\""], ["proof (prove)\nusing this:\n  padic_val p x =\n  int (LEAST k.\n          x (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p x \\<le> int n", "by (metis (mono_tags, lifting) Least_le assms(3) nat_int nat_le_iff)"], ["proof (state)\nthis:\n  padic_val p x \\<le> int n\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>If $n < val x$ then $x \\mod p^n = 0$:\\<close>"], ["", "lemma  zero_below_val:\n  assumes \"prime p\"\n  assumes \"x \\<in> padic_set p\"\n  assumes \"n \\<le> padic_val p x\"\n  shows  \"x n =  \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\"\n         \"x n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> &&& x n = 0", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n 2. x n = 0", "show \"x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "proof(cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  n = 0", "have  \"x 0 \\<in>carrier (residue_ring (p^0))\""], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. x 0 \\<in> carrier (residue_ring (p ^ 0))", "using assms(2) padic_set_res_closed"], ["proof (prove)\nusing this:\n  n = 0\n  x \\<in> padic_set p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. x 0 \\<in> carrier (residue_ring (p ^ 0))", "by blast"], ["proof (state)\nthis:\n  x 0 \\<in> carrier (residue_ring (p ^ 0))\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  x 0 \\<in> carrier (residue_ring (p ^ 0))", "show ?thesis"], ["proof (prove)\nusing this:\n  x 0 \\<in> carrier (residue_ring (p ^ 0))\n\ngoal (1 subgoal):\n 1. x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "by (simp add: True residue_ring_def)"], ["proof (state)\nthis:\n  x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "proof(cases \"x = padic_zero p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = padic_zero p \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n 2. x \\<noteq> padic_zero p \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "case True"], ["proof (state)\nthis:\n  x = padic_zero p\n\ngoal (2 subgoals):\n 1. x = padic_zero p \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n 2. x \\<noteq> padic_zero p \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  x = padic_zero p", "show ?thesis"], ["proof (prove)\nusing this:\n  x = padic_zero p\n\ngoal (1 subgoal):\n 1. x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "by (simp add: padic_zero_simp)"], ["proof (state)\nthis:\n  x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "case F: False"], ["proof (state)\nthis:\n  x \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> padic_zero p", "have A: \"padic_val p x = int (LEAST k::nat. (x (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. padic_val p x =\n    int (LEAST k.\n            x (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "using padic_val_def"], ["proof (prove)\nusing this:\n  x \\<noteq> padic_zero p\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p x =\n    int (LEAST k.\n            x (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  padic_val p x =\n  int (LEAST k.\n          x (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "have \"\\<not> (x n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> x n \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x n \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> \\<Longrightarrow>\n    False", "assume \"(x n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\""], ["proof (state)\nthis:\n  x n \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal (1 subgoal):\n 1. x n \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> \\<Longrightarrow>\n    False", "obtain k where \"n = Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. n = Suc k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using False old.nat.exhaust"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  \\<lbrakk>?y = 0 \\<Longrightarrow> ?P;\n   \\<And>nat. ?y = Suc nat \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>k. n = Suc k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  n = Suc k\n\ngoal (1 subgoal):\n 1. x n \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  n = Suc k", "have \"k \\<ge> padic_val p x\""], ["proof (prove)\nusing this:\n  n = Suc k\n\ngoal (1 subgoal):\n 1. padic_val p x \\<le> int k", "using A"], ["proof (prove)\nusing this:\n  n = Suc k\n  padic_val p x =\n  int (LEAST k.\n          x (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p x \\<le> int k", "using \\<open>x n \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\\<close> assms(1) assms(2) below_val_zero"], ["proof (prove)\nusing this:\n  n = Suc k\n  padic_val p x =\n  int (LEAST k.\n          x (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n  x n \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  prime p\n  x \\<in> padic_set p\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   ?x (Suc ?n) \\<noteq>\n   \\<zero>\\<^bsub>residue_ring (?p ^ Suc ?n)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> padic_val ?p ?x \\<le> int ?n\n\ngoal (1 subgoal):\n 1. padic_val p x \\<le> int k", "by blast"], ["proof (state)\nthis:\n  padic_val p x \\<le> int k\n\ngoal (1 subgoal):\n 1. x n \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  padic_val p x \\<le> int k", "have \"n > padic_val p x\""], ["proof (prove)\nusing this:\n  padic_val p x \\<le> int k\n\ngoal (1 subgoal):\n 1. padic_val p x < int n", "using \\<open>n = Suc k\\<close>"], ["proof (prove)\nusing this:\n  padic_val p x \\<le> int k\n  n = Suc k\n\ngoal (1 subgoal):\n 1. padic_val p x < int n", "by linarith"], ["proof (state)\nthis:\n  padic_val p x < int n\n\ngoal (1 subgoal):\n 1. x n \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  padic_val p x < int n", "show False"], ["proof (prove)\nusing this:\n  padic_val p x < int n\n\ngoal (1 subgoal):\n 1. False", "using assms(3)"], ["proof (prove)\nusing this:\n  padic_val p x < int n\n  int n \\<le> padic_val p x\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> x n \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p \\<Longrightarrow>\n    x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  \\<not> x n \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x n \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal (1 subgoal):\n 1. x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "by simp"], ["proof (state)\nthis:\n  x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal (1 subgoal):\n 1. x n = 0", "show \"x n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n = 0", "by (simp add: \\<open>x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\\<close> residue_ring_def)"], ["proof (state)\nthis:\n  x n = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Zero is the only element with valuation equal to $-1$:\\<close>"], ["", "lemma val_zero:\n assumes P: \"f \\<in> (padic_set p)\"   \n shows \"padic_val p f = -1 \\<longleftrightarrow>  (f = (padic_zero p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (padic_val p f = - 1) = (f = padic_zero p)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. padic_val p f = - 1 \\<Longrightarrow> f = padic_zero p\n 2. f = padic_zero p \\<Longrightarrow> padic_val p f = - 1", "show \"padic_val p f = -1 \\<Longrightarrow>  (f = (padic_zero p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p f = - 1 \\<Longrightarrow> f = padic_zero p", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. padic_val p f = - 1 \\<Longrightarrow> f x = padic_zero p x", "assume A:\"padic_val p f = -1\""], ["proof (state)\nthis:\n  padic_val p f = - 1\n\ngoal (1 subgoal):\n 1. \\<And>x. padic_val p f = - 1 \\<Longrightarrow> f x = padic_zero p x", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. padic_val p f = - 1 \\<Longrightarrow> f x = padic_zero p x", "show \"f k = padic_zero p k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k = padic_zero p k", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f k = padic_zero p k", "have  \"f k \\<noteq> padic_zero p k \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k \\<noteq> padic_zero p k \\<Longrightarrow> False", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f k \\<noteq> padic_zero p k \\<Longrightarrow> False", "assume A0: \" f k \\<noteq> padic_zero p k\""], ["proof (state)\nthis:\n  f k \\<noteq> padic_zero p k\n\ngoal (1 subgoal):\n 1. f k \\<noteq> padic_zero p k \\<Longrightarrow> False", "have False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have \"f 0 \\<in> carrier (residue_ring 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 \\<in> carrier (residue_ring 1)", "using P padic_set_def"], ["proof (prove)\nusing this:\n  f \\<in> padic_set p\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n\ngoal (1 subgoal):\n 1. f 0 \\<in> carrier (residue_ring 1)", "by (metis (no_types, lifting) mem_Collect_eq power_0)"], ["proof (state)\nthis:\n  f 0 \\<in> carrier (residue_ring 1)\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  f 0 \\<in> carrier (residue_ring 1)", "have \"f 0 = \\<zero>\\<^bsub>residue_ring (p^0)\\<^esub>\""], ["proof (prove)\nusing this:\n  f 0 \\<in> carrier (residue_ring 1)\n\ngoal (1 subgoal):\n 1. f 0 = \\<zero>\\<^bsub>residue_ring (p ^ 0)\\<^esub>", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  f 0 = \\<zero>\\<^bsub>residue_ring (p ^ 0)\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  f 0 = \\<zero>\\<^bsub>residue_ring (p ^ 0)\\<^esub>", "have \"k>0\""], ["proof (prove)\nusing this:\n  f 0 = \\<zero>\\<^bsub>residue_ring (p ^ 0)\\<^esub>\n\ngoal (1 subgoal):\n 1. 0 < k", "using A0 gr0I padic_zero_def"], ["proof (prove)\nusing this:\n  f 0 = \\<zero>\\<^bsub>residue_ring (p ^ 0)\\<^esub>\n  f k \\<noteq> padic_zero p k\n  (?n = 0 \\<Longrightarrow> False) \\<Longrightarrow> 0 < ?n\n  padic_zero ?p \\<equiv> \\<lambda>n. 0\n\ngoal (1 subgoal):\n 1. 0 < k", "by (metis padic_zero_simp)"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  0 < k", "have \"(LEAST k. 0 < k \\<and> f (Suc k) \\<noteq> padic_zero p (Suc k)) \\<ge>0 \""], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. 0 \\<le> (LEAST k. 0 < k \\<and> f (Suc k) \\<noteq> padic_zero p (Suc k))", "by simp"], ["proof (state)\nthis:\n  0 \\<le> (LEAST k. 0 < k \\<and> f (Suc k) \\<noteq> padic_zero p (Suc k))\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  0 \\<le> (LEAST k. 0 < k \\<and> f (Suc k) \\<noteq> padic_zero p (Suc k))", "have \"padic_val p f \\<ge>0\""], ["proof (prove)\nusing this:\n  0 \\<le> (LEAST k. 0 < k \\<and> f (Suc k) \\<noteq> padic_zero p (Suc k))\n\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p f", "using A0 padic_val_def"], ["proof (prove)\nusing this:\n  0 \\<le> (LEAST k. 0 < k \\<and> f (Suc k) \\<noteq> padic_zero p (Suc k))\n  f k \\<noteq> padic_zero p k\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p f", "by auto"], ["proof (state)\nthis:\n  0 \\<le> padic_val p f\n\ngoal (1 subgoal):\n 1. False", "then"], ["proof (chain)\npicking this:\n  0 \\<le> padic_val p f", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> padic_val p f\n\ngoal (1 subgoal):\n 1. False", "using A0"], ["proof (prove)\nusing this:\n  0 \\<le> padic_val p f\n  f k \\<noteq> padic_zero p k\n\ngoal (1 subgoal):\n 1. False", "by (simp add: A)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. f k \\<noteq> padic_zero p k \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  False", "show ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f k \\<noteq> padic_zero p k \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. f k = padic_zero p k", "then"], ["proof (chain)\npicking this:\n  f k \\<noteq> padic_zero p k \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  f k \\<noteq> padic_zero p k \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. f k = padic_zero p k", "by blast"], ["proof (state)\nthis:\n  f k = padic_zero p k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f k = padic_zero p k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_val p f = - 1 \\<Longrightarrow> f = padic_zero p\n\ngoal (1 subgoal):\n 1. f = padic_zero p \\<Longrightarrow> padic_val p f = - 1", "assume B: \"f = padic_zero p\""], ["proof (state)\nthis:\n  f = padic_zero p\n\ngoal (1 subgoal):\n 1. f = padic_zero p \\<Longrightarrow> padic_val p f = - 1", "then"], ["proof (chain)\npicking this:\n  f = padic_zero p", "show \"padic_val p f = -1\""], ["proof (prove)\nusing this:\n  f = padic_zero p\n\ngoal (1 subgoal):\n 1. padic_val p f = - 1", "using padic_val_def"], ["proof (prove)\nusing this:\n  f = padic_zero p\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p f = - 1", "by simp"], ["proof (state)\nthis:\n  padic_val p f = - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n  The valuation turns multiplication into integer addition on nonzero elements. Note that this i\n  the first instance where we need to explicity use the fact that $p$ is a prime.\n\\<close>"], ["", "lemma val_prod:\n  assumes \"prime p\"\n  assumes \"f \\<in> (padic_set p)\" \n  assumes \"g \\<in> (padic_set p)\"\n  assumes \"f \\<noteq> padic_zero p\"\n  assumes \"g \\<noteq> padic_zero p\"\n  shows \"padic_val p (padic_mult p f g) = padic_val p f + padic_val p g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "let ?vp = \"padic_val p (padic_mult p f g)\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "let ?vf = \"padic_val p f\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "let ?vg = \"padic_val p g\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 0: \"f (nat ?vf + 1) \\<noteq>  \\<zero>\\<^bsub>residue_ring (p^(nat ?vf + 1))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>", "using assms(2) assms(4) val_of_nonzero  assms(1)"], ["proof (prove)\nusing this:\n  f \\<in> padic_set p\n  f \\<noteq> padic_zero p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f) + 1) \\<noteq>\n                    \\<zero>\\<^bsub>residue_ring (?p ^ (nat (padic_val ?p ?f) + 1))\\<^esub>\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f)) =\n                    \\<zero>\\<^bsub>residue_ring (?p ^ nat (padic_val ?p ?f))\\<^esub>\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f) + 1) \\<noteq> 0\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f)) = 0\n  prime p\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>", "by blast"], ["proof (state)\nthis:\n  f (nat (padic_val p f) + 1) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 1: \"g (nat ?vg + 1) \\<noteq>  \\<zero>\\<^bsub>residue_ring (p^(nat ?vg + 1))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p g) + 1))\\<^esub>", "using assms(3) assms(5) val_of_nonzero assms(1)"], ["proof (prove)\nusing this:\n  g \\<in> padic_set p\n  g \\<noteq> padic_zero p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f) + 1) \\<noteq>\n                    \\<zero>\\<^bsub>residue_ring (?p ^ (nat (padic_val ?p ?f) + 1))\\<^esub>\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f)) =\n                    \\<zero>\\<^bsub>residue_ring (?p ^ nat (padic_val ?p ?f))\\<^esub>\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f) + 1) \\<noteq> 0\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f)) = 0\n  prime p\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p g) + 1))\\<^esub>", "by blast"], ["proof (state)\nthis:\n  g (nat (padic_val p g) + 1) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p g) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 2: \"f (nat ?vf) =  \\<zero>\\<^bsub>residue_ring (p^(nat ?vf))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "using assms(1) assms(2) assms(4) val_of_nonzero(2)"], ["proof (prove)\nusing this:\n  prime p\n  f \\<in> padic_set p\n  f \\<noteq> padic_zero p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f)) =\n                    \\<zero>\\<^bsub>residue_ring (?p ^ nat (padic_val ?p ?f))\\<^esub>\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>", "by blast"], ["proof (state)\nthis:\n  f (nat (padic_val p f)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p f))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 3: \"g (nat ?vg) =  \\<zero>\\<^bsub>residue_ring (p^(nat ?vg))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p g))\\<^esub>", "using assms(1) assms(3) assms(5) val_of_nonzero(2)"], ["proof (prove)\nusing this:\n  prime p\n  g \\<in> padic_set p\n  g \\<noteq> padic_zero p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f)) =\n                    \\<zero>\\<^bsub>residue_ring (?p ^ nat (padic_val ?p ?f))\\<^esub>\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p g))\\<^esub>", "by blast"], ["proof (state)\nthis:\n  g (nat (padic_val p g)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ nat (padic_val p g))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "let ?nm = \"((padic_mult p f g) (Suc (nat (?vf + ?vg))))\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "let ?n = \"(f (Suc (nat (?vf + ?vg))))\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "let ?m = \"(g (Suc (nat (?vf + ?vg))))\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have A: \"?nm = ?n \\<otimes>\\<^bsub>residue_ring (p^((Suc (nat (?vf + ?vg))))) \\<^esub> ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n    f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n    g (Suc (nat (padic_val p f + padic_val p g)))", "using padic_mult_def"], ["proof (prove)\nusing this:\n  padic_mult ?p ?f ?g \\<equiv>\n  \\<lambda>n. ?f n \\<otimes>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?g n\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n    f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n    g (Suc (nat (padic_val p f + padic_val p g)))", "by simp"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n  f (Suc (nat (padic_val p f +\n               padic_val p\n                g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  g (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 5: \"f (nat ?vf + 1) = residue (p^(nat ?vf + 1)) ?n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) =\n    residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g))))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) =\n    residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g))))", "have \"(Suc (nat (?vf + ?vg))) \\<ge> (nat ?vf + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat (padic_val p f) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))", "by (simp add: assms(5) padic_val_def)"], ["proof (state)\nthis:\n  nat (padic_val p f) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) =\n    residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g))))", "then"], ["proof (chain)\npicking this:\n  nat (padic_val p f) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))", "have \"f (nat ?vf + 1) =  residue (p^(nat ?vf + 1)) (f (Suc (nat (?vf + ?vg))))\""], ["proof (prove)\nusing this:\n  nat (padic_val p f) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) =\n    residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g))))", "using assms(1) assms(2) padic_set_res_coherent"], ["proof (prove)\nusing this:\n  nat (padic_val p f) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))\n  prime p\n  f \\<in> padic_set p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) =\n    residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g))))", "by presburger"], ["proof (state)\nthis:\n  f (nat (padic_val p f) + 1) =\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) =\n    residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g))))", "then"], ["proof (chain)\npicking this:\n  f (nat (padic_val p f) + 1) =\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g))))", "show ?thesis"], ["proof (prove)\nusing this:\n  f (nat (padic_val p f) + 1) =\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) =\n    residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g))))", "by auto"], ["proof (state)\nthis:\n  f (nat (padic_val p f) + 1) =\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (nat (padic_val p f) + 1) =\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 6: \"f (nat ?vf) = residue (p^(nat ?vf)) ?n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) =\n    residue (p ^ nat (padic_val p f))\n     (f (Suc (nat (padic_val p f + padic_val p g))))", "using add.commute assms(1) assms(2) assms(5) int_nat_eq nat_int \n        nat_le_iff not_less_eq_eq padic_set_res_coherent padic_val_def plus_1_eq_Suc"], ["proof (prove)\nusing this:\n  ?a + ?b = ?b + ?a\n  prime p\n  f \\<in> padic_set p\n  g \\<noteq> padic_zero p\n  int (nat ?z) = (if 0 \\<le> ?z then ?z else 0)\n  nat (int ?n) = ?n\n  (nat ?x \\<le> ?n) = (?x \\<le> int ?n)\n  (\\<not> ?m \\<le> ?n) = (Suc ?n \\<le> ?m)\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n  (+) 1 = Suc\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) =\n    residue (p ^ nat (padic_val p f))\n     (f (Suc (nat (padic_val p f + padic_val p g))))", "by auto"], ["proof (state)\nthis:\n  f (nat (padic_val p f)) =\n  residue (p ^ nat (padic_val p f))\n   (f (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 7: \"g (nat ?vg + 1) = residue (p^(nat ?vg + 1)) ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) =\n    residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) =\n    residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "have \"(Suc (nat (?vf + ?vg))) \\<ge> (nat ?vg + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat (padic_val p g) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))", "by (simp add: assms(4) padic_val_def)"], ["proof (state)\nthis:\n  nat (padic_val p g) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) =\n    residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "then"], ["proof (chain)\npicking this:\n  nat (padic_val p g) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))", "have \"g (nat ?vg + 1) =  residue (p^(nat ?vg + 1)) (g (Suc (nat (?vf + ?vg))))\""], ["proof (prove)\nusing this:\n  nat (padic_val p g) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) =\n    residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "using assms(1) assms(3) padic_set_res_coherent"], ["proof (prove)\nusing this:\n  nat (padic_val p g) + 1 \\<le> Suc (nat (padic_val p f + padic_val p g))\n  prime p\n  g \\<in> padic_set p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) =\n    residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "by presburger"], ["proof (state)\nthis:\n  g (nat (padic_val p g) + 1) =\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) =\n    residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "then"], ["proof (chain)\npicking this:\n  g (nat (padic_val p g) + 1) =\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g))))", "show ?thesis"], ["proof (prove)\nusing this:\n  g (nat (padic_val p g) + 1) =\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) =\n    residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "by auto"], ["proof (state)\nthis:\n  g (nat (padic_val p g) + 1) =\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g (nat (padic_val p g) + 1) =\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 8: \"g (nat ?vg) = residue (p^(nat ?vg)) ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) =\n    residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) =\n    residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "have \"(Suc (nat (?vf + ?vg))) \\<ge> (nat ?vg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat (padic_val p g) \\<le> Suc (nat (padic_val p f + padic_val p g))", "by (simp add: assms(4) padic_val_def)"], ["proof (state)\nthis:\n  nat (padic_val p g) \\<le> Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) =\n    residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "then"], ["proof (chain)\npicking this:\n  nat (padic_val p g) \\<le> Suc (nat (padic_val p f + padic_val p g))", "have \"g (nat ?vg) =  residue (p^(nat ?vg)) (g (Suc (nat (?vf + ?vg))))\""], ["proof (prove)\nusing this:\n  nat (padic_val p g) \\<le> Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) =\n    residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "using assms(1) assms(3) padic_set_res_coherent"], ["proof (prove)\nusing this:\n  nat (padic_val p g) \\<le> Suc (nat (padic_val p f + padic_val p g))\n  prime p\n  g \\<in> padic_set p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) =\n    residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "by presburger"], ["proof (state)\nthis:\n  g (nat (padic_val p g)) =\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) =\n    residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "then"], ["proof (chain)\npicking this:\n  g (nat (padic_val p g)) =\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g))))", "show ?thesis"], ["proof (prove)\nusing this:\n  g (nat (padic_val p g)) =\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) =\n    residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "by auto"], ["proof (state)\nthis:\n  g (nat (padic_val p g)) =\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g (nat (padic_val p g)) =\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 9: \"f (nat ?vf) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f)) = 0", "by (simp add: \"2\" residue_ring_def)"], ["proof (state)\nthis:\n  f (nat (padic_val p f)) = 0\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 10: \"g (nat ?vg) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (nat (padic_val p g)) = 0", "by (simp add: \"3\" residue_ring_def)"], ["proof (state)\nthis:\n  g (nat (padic_val p g)) = 0\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 11: \"f (nat ?vf + 1) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) \\<noteq> 0", "using \"0\" residue_ring_def"], ["proof (prove)\nusing this:\n  f (nat (padic_val p f) + 1) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. f (nat (padic_val p f) + 1) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  f (nat (padic_val p f) + 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 12: \"g (nat ?vg + 1) \\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) \\<noteq> 0", "using \"1\" residue_ring_def"], ["proof (prove)\nusing this:\n  g (nat (padic_val p g) + 1) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p g) + 1))\\<^esub>\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. g (nat (padic_val p g) + 1) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  g (nat (padic_val p g) + 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 13:\"\\<exists>i. ?n = i*p^(nat ?vf) \\<and> \\<not> p dvd (nat i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "have  \"residue (p^(nat ?vf)) (?n) = f (nat ?vf)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ nat (padic_val p f))\n     (f (Suc (nat (padic_val p f + padic_val p g)))) =\n    f (nat (padic_val p f))", "by (simp add: \"6\")"], ["proof (state)\nthis:\n  residue (p ^ nat (padic_val p f))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  f (nat (padic_val p f))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  residue (p ^ nat (padic_val p f))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  f (nat (padic_val p f))", "have P0: \"residue (p^(nat ?vf)) (?n) = 0\""], ["proof (prove)\nusing this:\n  residue (p ^ nat (padic_val p f))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  f (nat (padic_val p f))\n\ngoal (1 subgoal):\n 1. residue (p ^ nat (padic_val p f))\n     (f (Suc (nat (padic_val p f + padic_val p g)))) =\n    0", "using \"9\""], ["proof (prove)\nusing this:\n  residue (p ^ nat (padic_val p f))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  f (nat (padic_val p f))\n  f (nat (padic_val p f)) = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ nat (padic_val p f))\n     (f (Suc (nat (padic_val p f + padic_val p g)))) =\n    0", "by linarith"], ["proof (state)\nthis:\n  residue (p ^ nat (padic_val p f))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "have \"residue (p^(nat ?vf + 1)) (?n) = f (nat ?vf + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g)))) =\n    f (nat (padic_val p f) + 1)", "using \"5\""], ["proof (prove)\nusing this:\n  f (nat (padic_val p f) + 1) =\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g)))) =\n    f (nat (padic_val p f) + 1)", "by linarith"], ["proof (state)\nthis:\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  f (nat (padic_val p f) + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  f (nat (padic_val p f) + 1)", "have P1: \"residue (p^(nat ?vf + 1)) (?n) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  f (nat (padic_val p f) + 1)\n\ngoal (1 subgoal):\n 1. residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g)))) \\<noteq>\n    0", "using \"11\""], ["proof (prove)\nusing this:\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  f (nat (padic_val p f) + 1)\n  f (nat (padic_val p f) + 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residue (p ^ (nat (padic_val p f) + 1))\n     (f (Suc (nat (padic_val p f + padic_val p g)))) \\<noteq>\n    0", "by linarith"], ["proof (state)\nthis:\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "have P2: \"?n mod (p^(nat ?vf)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ nat (padic_val p f) =\n    0", "using P0 residue_def"], ["proof (prove)\nusing this:\n  residue (p ^ nat (padic_val p f))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) =\n  0\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ nat (padic_val p f) =\n    0", "by auto"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ nat (padic_val p f) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "have P3: \"?n mod (p^(nat ?vf + 1)) \\<noteq>  0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ (nat (padic_val p f) + 1) \\<noteq>\n    0", "using P1 residue_def"], ["proof (prove)\nusing this:\n  residue (p ^ (nat (padic_val p f) + 1))\n   (f (Suc (nat (padic_val p f + padic_val p g)))) \\<noteq>\n  0\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ (nat (padic_val p f) + 1) \\<noteq>\n    0", "by auto"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ (nat (padic_val p f) + 1) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "have \"p^(nat ?vf) dvd ?n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ nat (padic_val p f) dvd\n    f (Suc (nat (padic_val p f + padic_val p g)))", "using P2"], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ nat (padic_val p f) =\n  0\n\ngoal (1 subgoal):\n 1. p ^ nat (padic_val p f) dvd\n    f (Suc (nat (padic_val p f + padic_val p g)))", "by auto"], ["proof (state)\nthis:\n  p ^ nat (padic_val p f) dvd f (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  p ^ nat (padic_val p f) dvd f (Suc (nat (padic_val p f + padic_val p g)))", "obtain i where A0:\"?n = i*(p^(nat ?vf))\""], ["proof (prove)\nusing this:\n  p ^ nat (padic_val p f) dvd f (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        f (Suc (nat (padic_val p f + padic_val p g))) =\n        i * p ^ nat (padic_val p f) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  i * p ^ nat (padic_val p f)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "have \"?n \\<in> carrier (residue_ring (p^(Suc (nat (?vf + ?vg)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g)))\n    \\<in> carrier\n           (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))", "using assms(2) padic_set_res_closed"], ["proof (prove)\nusing this:\n  f \\<in> padic_set p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g)))\n    \\<in> carrier\n           (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))", "by blast"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f + padic_val p g)))\n  \\<in> carrier\n         (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  f (Suc (nat (padic_val p f + padic_val p g)))\n  \\<in> carrier\n         (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))", "have \"?n \\<ge>0\""], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f + padic_val p g)))\n  \\<in> carrier\n         (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. 0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))", "have NN:\"i \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> i", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> f (Suc (nat (padic_val p f + padic_val p g))) \\<Longrightarrow>\n    0 \\<le> i", "have S0:\"?n \\<ge>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))", "using \\<open>0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))", "by blast"], ["proof (state)\nthis:\n  0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> f (Suc (nat (padic_val p f + padic_val p g))) \\<Longrightarrow>\n    0 \\<le> i", "have S1:\"(p^(nat ?vf)) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p ^ nat (padic_val p f)", "using assms(1) prime_gt_0_int zero_less_power"], ["proof (prove)\nusing this:\n  prime p\n  prime ?p \\<Longrightarrow> 0 < ?p\n  (0::?'a) < ?a \\<Longrightarrow> (0::?'a) < ?a ^ ?n\n\ngoal (1 subgoal):\n 1. 0 < p ^ nat (padic_val p f)", "by blast"], ["proof (state)\nthis:\n  0 < p ^ nat (padic_val p f)\n\ngoal (1 subgoal):\n 1. 0 \\<le> f (Suc (nat (padic_val p f + padic_val p g))) \\<Longrightarrow>\n    0 \\<le> i", "have \"\\<not> i<0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> i < 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. i < 0 \\<Longrightarrow> False", "assume \"i < 0\""], ["proof (state)\nthis:\n  i < 0\n\ngoal (1 subgoal):\n 1. i < 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  i < 0", "have \"?n < 0\""], ["proof (prove)\nusing this:\n  i < 0\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g))) < 0", "using S1 A0"], ["proof (prove)\nusing this:\n  i < 0\n  0 < p ^ nat (padic_val p f)\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  i * p ^ nat (padic_val p f)\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g))) < 0", "by (metis mult.commute times_int_code(1) zmult_zless_mono2)"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f + padic_val p g))) < 0\n\ngoal (1 subgoal):\n 1. i < 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f (Suc (nat (padic_val p f + padic_val p g))) < 0", "show False"], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f + padic_val p g))) < 0\n\ngoal (1 subgoal):\n 1. False", "using S0"], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f + padic_val p g))) < 0\n  0 \\<le> f (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> i < 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> f (Suc (nat (padic_val p f + padic_val p g))) \\<Longrightarrow>\n    0 \\<le> i", "then"], ["proof (chain)\npicking this:\n  \\<not> i < 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i < 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> i", "by auto"], ["proof (state)\nthis:\n  0 \\<le> i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "have A1: \"\\<not> p dvd (nat i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p dvd int (nat i)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. p dvd int (nat i) \\<Longrightarrow> False", "assume \"p dvd nat i\""], ["proof (state)\nthis:\n  p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. p dvd int (nat i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p dvd int (nat i)", "obtain j where \"nat i = j*p\""], ["proof (prove)\nusing this:\n  p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        int (nat i) = j * p \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  int (nat i) = j * p\n\ngoal (1 subgoal):\n 1. p dvd int (nat i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  int (nat i) = j * p", "have \"?n = j*p*(p^(nat ?vf))\""], ["proof (prove)\nusing this:\n  int (nat i) = j * p\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g))) =\n    j * p * p ^ nat (padic_val p f)", "using A0 NN"], ["proof (prove)\nusing this:\n  int (nat i) = j * p\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  i * p ^ nat (padic_val p f)\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f + padic_val p g))) =\n    j * p * p ^ nat (padic_val p f)", "by simp"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p * p ^ nat (padic_val p f)\n\ngoal (1 subgoal):\n 1. p dvd int (nat i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p * p ^ nat (padic_val p f)", "show False"], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p * p ^ nat (padic_val p f)\n\ngoal (1 subgoal):\n 1. False", "using P3"], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p * p ^ nat (padic_val p f)\n  f (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ (nat (padic_val p f) + 1) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  \\<not> p dvd int (nat i)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "using A0"], ["proof (prove)\nusing this:\n  \\<not> p dvd int (nat i)\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  i * p ^ nat (padic_val p f)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       f (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p f) \\<and>\n       \\<not> p dvd int (nat i)", "by blast"], ["proof (state)\nthis:\n  \\<exists>i.\n     f (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p f) \\<and>\n     \\<not> p dvd int (nat i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i.\n     f (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p f) \\<and>\n     \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 14:\"\\<exists> i. ?m = i*p^(nat ?vg) \\<and> \\<not> p dvd (nat i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "have  \"residue (p^(nat ?vg)) (?m) = g (nat ?vg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g)))) =\n    g (nat (padic_val p g))", "by (simp add: \"8\")"], ["proof (state)\nthis:\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  g (nat (padic_val p g))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  g (nat (padic_val p g))", "have P0: \"residue (p^(nat ?vg)) (?m) = 0\""], ["proof (prove)\nusing this:\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  g (nat (padic_val p g))\n\ngoal (1 subgoal):\n 1. residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g)))) =\n    0", "using \"10\""], ["proof (prove)\nusing this:\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  g (nat (padic_val p g))\n  g (nat (padic_val p g)) = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ nat (padic_val p g))\n     (g (Suc (nat (padic_val p f + padic_val p g)))) =\n    0", "by linarith"], ["proof (state)\nthis:\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "have \"residue (p^(nat ?vg + 1)) (?m) = g (nat ?vg + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g)))) =\n    g (nat (padic_val p g) + 1)", "using \"7\""], ["proof (prove)\nusing this:\n  g (nat (padic_val p g) + 1) =\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g)))) =\n    g (nat (padic_val p g) + 1)", "by auto"], ["proof (state)\nthis:\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  g (nat (padic_val p g) + 1)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  g (nat (padic_val p g) + 1)", "have P1: \"residue (p^(nat ?vg + 1)) (?m) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  g (nat (padic_val p g) + 1)\n\ngoal (1 subgoal):\n 1. residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g)))) \\<noteq>\n    0", "using \"12\""], ["proof (prove)\nusing this:\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  g (nat (padic_val p g) + 1)\n  g (nat (padic_val p g) + 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residue (p ^ (nat (padic_val p g) + 1))\n     (g (Suc (nat (padic_val p f + padic_val p g)))) \\<noteq>\n    0", "by linarith"], ["proof (state)\nthis:\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "have P2: \"?m mod (p^(nat ?vg)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ nat (padic_val p g) =\n    0", "using P0 residue_def"], ["proof (prove)\nusing this:\n  residue (p ^ nat (padic_val p g))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) =\n  0\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ nat (padic_val p g) =\n    0", "by auto"], ["proof (state)\nthis:\n  g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ nat (padic_val p g) =\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "have P3: \"?m mod (p^(nat ?vg + 1)) \\<noteq>  0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ (nat (padic_val p g) + 1) \\<noteq>\n    0", "using P1 residue_def"], ["proof (prove)\nusing this:\n  residue (p ^ (nat (padic_val p g) + 1))\n   (g (Suc (nat (padic_val p f + padic_val p g)))) \\<noteq>\n  0\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ (nat (padic_val p g) + 1) \\<noteq>\n    0", "by auto"], ["proof (state)\nthis:\n  g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ (nat (padic_val p g) + 1) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "have \"p^(nat ?vg) dvd ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ nat (padic_val p g) dvd\n    g (Suc (nat (padic_val p f + padic_val p g)))", "using P2"], ["proof (prove)\nusing this:\n  g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ nat (padic_val p g) =\n  0\n\ngoal (1 subgoal):\n 1. p ^ nat (padic_val p g) dvd\n    g (Suc (nat (padic_val p f + padic_val p g)))", "by auto"], ["proof (state)\nthis:\n  p ^ nat (padic_val p g) dvd g (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  p ^ nat (padic_val p g) dvd g (Suc (nat (padic_val p f + padic_val p g)))", "obtain i where A0:\"?m = i*(p^(nat ?vg))\""], ["proof (prove)\nusing this:\n  p ^ nat (padic_val p g) dvd g (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        g (Suc (nat (padic_val p f + padic_val p g))) =\n        i * p ^ nat (padic_val p g) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  i * p ^ nat (padic_val p g)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "have \"?m \\<in> carrier (residue_ring (p^(Suc (nat (?vf + ?vg)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (Suc (nat (padic_val p f + padic_val p g)))\n    \\<in> carrier\n           (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))", "using assms(3) padic_set_res_closed"], ["proof (prove)\nusing this:\n  g \\<in> padic_set p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. g (Suc (nat (padic_val p f + padic_val p g)))\n    \\<in> carrier\n           (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))", "by blast"], ["proof (state)\nthis:\n  g (Suc (nat (padic_val p f + padic_val p g)))\n  \\<in> carrier\n         (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  g (Suc (nat (padic_val p f + padic_val p g)))\n  \\<in> carrier\n         (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))", "have S0: \"?m \\<ge>0\""], ["proof (prove)\nusing this:\n  g (Suc (nat (padic_val p f + padic_val p g)))\n  \\<in> carrier\n         (residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. 0 \\<le> g (Suc (nat (padic_val p f + padic_val p g)))", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  0 \\<le> g (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  0 \\<le> g (Suc (nat (padic_val p f + padic_val p g)))", "have NN:\"i \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> g (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> i", "using 0 assms(1) prime_gt_0_int[of p] zero_le_mult_iff zero_less_power[of p]"], ["proof (prove)\nusing this:\n  0 \\<le> g (Suc (nat (padic_val p f + padic_val p g)))\n  f (nat (padic_val p f) + 1) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + 1))\\<^esub>\n  prime p\n  prime p \\<Longrightarrow> 0 < p\n  ((0::?'a) \\<le> ?a * ?b) =\n  ((0::?'a) \\<le> ?a \\<and> (0::?'a) \\<le> ?b \\<or>\n   ?a \\<le> (0::?'a) \\<and> ?b \\<le> (0::?'a))\n  0 < p \\<Longrightarrow> 0 < p ^ ?n\n\ngoal (1 subgoal):\n 1. 0 \\<le> i", "by (metis A0 linorder_not_less)"], ["proof (state)\nthis:\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "have A1: \"\\<not> p dvd (nat i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p dvd int (nat i)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. p dvd int (nat i) \\<Longrightarrow> False", "assume \"p dvd nat i\""], ["proof (state)\nthis:\n  p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. p dvd int (nat i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p dvd int (nat i)", "obtain j where \"nat i = j*p\""], ["proof (prove)\nusing this:\n  p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        int (nat i) = j * p \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  int (nat i) = j * p\n\ngoal (1 subgoal):\n 1. p dvd int (nat i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  int (nat i) = j * p", "have \"?m = j*p*(p^(nat ?vg))\""], ["proof (prove)\nusing this:\n  int (nat i) = j * p\n\ngoal (1 subgoal):\n 1. g (Suc (nat (padic_val p f + padic_val p g))) =\n    j * p * p ^ nat (padic_val p g)", "using A0 NN"], ["proof (prove)\nusing this:\n  int (nat i) = j * p\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  i * p ^ nat (padic_val p g)\n  0 \\<le> i\n\ngoal (1 subgoal):\n 1. g (Suc (nat (padic_val p f + padic_val p g))) =\n    j * p * p ^ nat (padic_val p g)", "by (metis int_nat_eq )"], ["proof (state)\nthis:\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p * p ^ nat (padic_val p g)\n\ngoal (1 subgoal):\n 1. p dvd int (nat i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p * p ^ nat (padic_val p g)", "show False"], ["proof (prove)\nusing this:\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p * p ^ nat (padic_val p g)\n\ngoal (1 subgoal):\n 1. False", "using P3"], ["proof (prove)\nusing this:\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p * p ^ nat (padic_val p g)\n  g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ (nat (padic_val p g) + 1) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "then"], ["proof (chain)\npicking this:\n  \\<not> p dvd int (nat i)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       g (Suc (nat (padic_val p f + padic_val p g))) =\n       i * p ^ nat (padic_val p g) \\<and>\n       \\<not> p dvd int (nat i)", "by (metis (no_types, lifting) A0)"], ["proof (state)\nthis:\n  \\<exists>i.\n     g (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p g) \\<and>\n     \\<not> p dvd int (nat i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i.\n     g (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p g) \\<and>\n     \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "obtain i where I:\"?n = i*p^(nat ?vf) \\<and> \\<not> p dvd (nat i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        f (Suc (nat (padic_val p f + padic_val p g))) =\n        i * p ^ nat (padic_val p f) \\<and>\n        \\<not> p dvd int (nat i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \"13\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     f (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p f) \\<and>\n     \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        f (Suc (nat (padic_val p f + padic_val p g))) =\n        i * p ^ nat (padic_val p f) \\<and>\n        \\<not> p dvd int (nat i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  i * p ^ nat (padic_val p f) \\<and>\n  \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "obtain j where J:\"?m = j*p^(nat ?vg) \\<and> \\<not> p dvd (nat j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>j.\n        g (Suc (nat (padic_val p f + padic_val p g))) =\n        j * p ^ nat (padic_val p g) \\<and>\n        \\<not> p dvd int (nat j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \"14\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     g (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p g) \\<and>\n     \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        g (Suc (nat (padic_val p f + padic_val p g))) =\n        j * p ^ nat (padic_val p g) \\<and>\n        \\<not> p dvd int (nat j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p ^ nat (padic_val p g) \\<and>\n  \\<not> p dvd int (nat j)\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "let ?i = \"(p^(Suc (nat (?vf + ?vg))))\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have P:\"?nm mod ?i = ?n*?m mod ?i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) =\n    f (Suc (nat (padic_val p f + padic_val p g))) *\n    g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) =\n    f (Suc (nat (padic_val p f + padic_val p g))) *\n    g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g))", "have P1:\"?nm = (?n \\<otimes>\\<^bsub>residue_ring ?i \\<^esub> ?m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n    f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n    g (Suc (nat (padic_val p f + padic_val p g)))", "using A"], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n  f (Suc (nat (padic_val p f +\n               padic_val p\n                g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  g (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n    f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n    g (Suc (nat (padic_val p f + padic_val p g)))", "by simp"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n  f (Suc (nat (padic_val p f +\n               padic_val p\n                g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  g (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) =\n    f (Suc (nat (padic_val p f + padic_val p g))) *\n    g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g))", "have P2:\"(?n \\<otimes>\\<^bsub>residue_ring ?i \\<^esub> ?m) = (residue ?i (?n)) \\<otimes>\\<^bsub>residue_ring ?i\\<^esub>   (residue ?i (?m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n    g (Suc (nat (padic_val p f + padic_val p g))) =\n    residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n     (f (Suc (nat (padic_val p f +\n                   padic_val p\n                    g)))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n    residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "using assms(1) assms(2) assms(3) padic_set_res_closed prime_ge_0_int residue_id"], ["proof (prove)\nusing this:\n  prime p\n  f \\<in> padic_set p\n  g \\<in> padic_set p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  prime ?p \\<Longrightarrow> 0 \\<le> ?p\n  \\<lbrakk>?x \\<in> carrier (residue_ring ?n); 0 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> residue ?n ?x = ?x\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n    g (Suc (nat (padic_val p f + padic_val p g))) =\n    residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n     (f (Suc (nat (padic_val p f +\n                   padic_val p\n                    g)))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n    residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n     (g (Suc (nat (padic_val p f + padic_val p g))))", "by presburger"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f +\n               padic_val p\n                g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n   (f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g)))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) =\n    f (Suc (nat (padic_val p f + padic_val p g))) *\n    g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g))", "then"], ["proof (chain)\npicking this:\n  f (Suc (nat (padic_val p f +\n               padic_val p\n                g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n   (f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g)))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n   (g (Suc (nat (padic_val p f + padic_val p g))))", "have P3:\"(?n \\<otimes>\\<^bsub>residue_ring ?i \\<^esub> ?m) = (residue ?i (?n*?m))\""], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f +\n               padic_val p\n                g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n   (f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g)))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n   (g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. f (Suc (nat (padic_val p f +\n                 padic_val p\n                  g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n    g (Suc (nat (padic_val p f + padic_val p g))) =\n    residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n     (f (Suc (nat (padic_val p f + padic_val p g))) *\n      g (Suc (nat (padic_val p f + padic_val p g))))", "by (metis monoid.simps(1) residue_def residue_ring_def)"], ["proof (state)\nthis:\n  f (Suc (nat (padic_val p f +\n               padic_val p\n                g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n   (f (Suc (nat (padic_val p f + padic_val p g))) *\n    g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) =\n    f (Suc (nat (padic_val p f + padic_val p g))) *\n    g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g))", "then"], ["proof (chain)\npicking this:\n  f (Suc (nat (padic_val p f +\n               padic_val p\n                g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n   (f (Suc (nat (padic_val p f + padic_val p g))) *\n    g (Suc (nat (padic_val p f + padic_val p g))))", "show ?thesis"], ["proof (prove)\nusing this:\n  f (Suc (nat (padic_val p f +\n               padic_val p\n                g))) \\<otimes>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  residue (p ^ Suc (nat (padic_val p f + padic_val p g)))\n   (f (Suc (nat (padic_val p f + padic_val p g))) *\n    g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) =\n    f (Suc (nat (padic_val p f + padic_val p g))) *\n    g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g))", "by (simp add: P1 residue_def)"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) =\n  f (Suc (nat (padic_val p f + padic_val p g))) *\n  g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) =\n  f (Suc (nat (padic_val p f + padic_val p g))) *\n  g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) =\n  f (Suc (nat (padic_val p f + padic_val p g))) *\n  g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g))", "have 15: \"?nm mod ?i =  i*j*p^((nat ?vf) +(nat ?vg)) mod ?i\""], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) =\n  f (Suc (nat (padic_val p f + padic_val p g))) *\n  g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) =\n    i * j * p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g))", "by (simp add: I J mult.assoc mult.left_commute power_add)"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) =\n  i * j * p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 16: \"\\<not> p dvd (i*j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p dvd i * j", "using 13 14"], ["proof (prove)\nusing this:\n  \\<exists>i.\n     f (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p f) \\<and>\n     \\<not> p dvd int (nat i)\n  \\<exists>i.\n     g (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p g) \\<and>\n     \\<not> p dvd int (nat i)\n\ngoal (1 subgoal):\n 1. \\<not> p dvd i * j", "using I J assms(1) prime_dvd_mult_iff"], ["proof (prove)\nusing this:\n  \\<exists>i.\n     f (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p f) \\<and>\n     \\<not> p dvd int (nat i)\n  \\<exists>i.\n     g (Suc (nat (padic_val p f + padic_val p g))) =\n     i * p ^ nat (padic_val p g) \\<and>\n     \\<not> p dvd int (nat i)\n  f (Suc (nat (padic_val p f + padic_val p g))) =\n  i * p ^ nat (padic_val p f) \\<and>\n  \\<not> p dvd int (nat i)\n  g (Suc (nat (padic_val p f + padic_val p g))) =\n  j * p ^ nat (padic_val p g) \\<and>\n  \\<not> p dvd int (nat j)\n  prime p\n  prime ?p \\<Longrightarrow> (?p dvd ?a * ?b) = (?p dvd ?a \\<or> ?p dvd ?b)\n\ngoal (1 subgoal):\n 1. \\<not> p dvd i * j", "by (metis dvd_0_right int_nat_eq)"], ["proof (state)\nthis:\n  \\<not> p dvd i * j\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 17: \"((nat ?vf) +(nat ?vg)) < (Suc (nat (?vf + ?vg)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat (padic_val p f) + nat (padic_val p g)\n    < Suc (nat (padic_val p f + padic_val p g))", "by (simp add: assms(4) assms(5) nat_add_distrib padic_val_def)"], ["proof (state)\nthis:\n  nat (padic_val p f) + nat (padic_val p g)\n  < Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 18:\"?nm mod ?i \\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n    0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n    0", "have A0:\"\\<not>  p^((Suc (nat (?vf + ?vg)))) dvd p^((nat ?vf) +(nat ?vg)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n           p ^ (nat (padic_val p f) + nat (padic_val p g))", "using 17"], ["proof (prove)\nusing this:\n  nat (padic_val p f) + nat (padic_val p g)\n  < Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n           p ^ (nat (padic_val p f) + nat (padic_val p g))", "by (metis \"16\" assms(1) dvd_power_iff dvd_trans less_int_code(1) linorder_not_less one_dvd prime_gt_0_int)"], ["proof (state)\nthis:\n  \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n         p ^ (nat (padic_val p f) + nat (padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n    0", "then"], ["proof (chain)\npicking this:\n  \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n         p ^ (nat (padic_val p f) + nat (padic_val p g))", "have A1: \"p^((nat ?vf) +(nat ?vg)) mod ?i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n         p ^ (nat (padic_val p f) + nat (padic_val p g))\n\ngoal (1 subgoal):\n 1. p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n    0", "using dvd_eq_mod_eq_0"], ["proof (prove)\nusing this:\n  \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n         p ^ (nat (padic_val p f) + nat (padic_val p g))\n  (?a dvd ?b) = (?b mod ?a = (0::?'a))\n\ngoal (1 subgoal):\n 1. p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n    0", "by auto"], ["proof (state)\nthis:\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n    0", "have \"\\<not>  p^((Suc (nat (?vf + ?vg)))) dvd i*j*p^((nat ?vf) +(nat ?vg)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n           i * j * p ^ (nat (padic_val p f) + nat (padic_val p g))", "using 16 A0 assms(1) assms(4) assms(5) nat_int_add padic_val_def"], ["proof (prove)\nusing this:\n  \\<not> p dvd i * j\n  \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n         p ^ (nat (padic_val p f) + nat (padic_val p g))\n  prime p\n  f \\<noteq> padic_zero p\n  g \\<noteq> padic_zero p\n  nat (int ?a + int ?b) = ?a + ?b\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n           i * j * p ^ (nat (padic_val p f) + nat (padic_val p g))", "by auto"], ["proof (state)\nthis:\n  \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n         i * j * p ^ (nat (padic_val p f) + nat (padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n    0", "then"], ["proof (chain)\npicking this:\n  \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n         i * j * p ^ (nat (padic_val p f) + nat (padic_val p g))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n         i * j * p ^ (nat (padic_val p f) + nat (padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n    0", "using \"15\""], ["proof (prove)\nusing this:\n  \\<not> p ^ Suc (nat (padic_val p f + padic_val p g)) dvd\n         i * j * p ^ (nat (padic_val p f) + nat (padic_val p g))\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) =\n  i * j * p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n    0", "by force"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 19: \"(?nm mod ?i ) mod (p^(nat ?vf + nat ?vg)) = i*j*p^((nat ?vf) +(nat ?vg)) mod (p^(nat ?vf + nat ?vg))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n    i * j * p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g))", "using 15"], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) =\n  i * j * p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n    i * j * p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g))", "by (simp add: assms(4) assms(5) nat_add_distrib padic_val_def)"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  i * j * p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 20: \"?nm mod (p^(nat ?vf + nat ?vg)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n    0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n    0", "have \"(?nm mod ?i ) mod (p^(nat ?vf + nat ?vg)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n    0", "using 19"], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  i * j * p ^ (nat (padic_val p f) + nat (padic_val p g)) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n    0", "by simp"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  0\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n    0", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  0", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  0\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n    0", "using \"17\" assms(1) int_nat_eq mod_mod_cancel[of \"p^(nat ?vf + nat ?vg)\" ?i] \n           mod_pos_pos_trivial"], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  0\n  nat (padic_val p f) + nat (padic_val p g)\n  < Suc (nat (padic_val p f + padic_val p g))\n  prime p\n  int (nat ?z) = (if 0 \\<le> ?z then ?z else 0)\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) dvd\n  p ^ Suc (nat (padic_val p f + padic_val p g)) \\<Longrightarrow>\n  ?a mod p ^ Suc (nat (padic_val p f + padic_val p g)) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  ?a mod p ^ (nat (padic_val p f) + nat (padic_val p g))\n  \\<lbrakk>0 \\<le> ?k; ?k < ?l\\<rbrakk> \\<Longrightarrow> ?k mod ?l = ?k\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n    p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n    0", "by (metis le_imp_power_dvd less_imp_le_nat)"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  0\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 21: \"(padic_mult p f g) \\<noteq> padic_zero p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g \\<noteq> padic_zero p", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_mult p f g = padic_zero p \\<Longrightarrow> False", "assume \"(padic_mult p f g) =  padic_zero p\""], ["proof (state)\nthis:\n  padic_mult p f g = padic_zero p\n\ngoal (1 subgoal):\n 1. padic_mult p f g = padic_zero p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g = padic_zero p", "have \"(padic_mult p f g) (Suc (nat (padic_val p f + padic_val p g))) =  padic_zero p (Suc (nat (padic_val p f + padic_val p g)))\""], ["proof (prove)\nusing this:\n  padic_mult p f g = padic_zero p\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n    padic_zero p (Suc (nat (padic_val p f + padic_val p g)))", "by simp"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n  padic_zero p (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_mult p f g = padic_zero p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n  padic_zero p (Suc (nat (padic_val p f + padic_val p g)))", "have \"?nm  = (padic_zero p (Suc (nat (padic_val p f + padic_val p g))))\""], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n  padic_zero p (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n    padic_zero p (Suc (nat (padic_val p f + padic_val p g)))", "by blast"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n  padic_zero p (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_mult p f g = padic_zero p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n  padic_zero p (Suc (nat (padic_val p f + padic_val p g)))", "have \"?nm = 0\""], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) =\n  padic_zero p (Suc (nat (padic_val p f + padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) = 0", "by (simp add: padic_zero_def)"], ["proof (state)\nthis:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) = 0\n\ngoal (1 subgoal):\n 1. padic_mult p f g = padic_zero p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) = 0", "show False"], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) = 0\n\ngoal (1 subgoal):\n 1. False", "using \"18\""], ["proof (prove)\nusing this:\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) = 0\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_mult p f g \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 22: \"(padic_mult p f g)\\<in> (padic_set p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g \\<in> padic_set p", "using assms(1) assms(2) assms(3) padic_mult_in_padic_set"], ["proof (prove)\nusing this:\n  prime p\n  f \\<in> padic_set p\n  g \\<in> padic_set p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?g \\<in> padic_set ?p; prime ?p\\<rbrakk>\n  \\<Longrightarrow> padic_mult ?p ?f ?g \\<in> padic_set ?p\n\ngoal (1 subgoal):\n 1. padic_mult p f g \\<in> padic_set p", "by blast"], ["proof (state)\nthis:\n  padic_mult p f g \\<in> padic_set p\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 23: \"\\<And> j. j < Suc (nat (padic_val p f + padic_val p g)) \\<Longrightarrow> (padic_mult p f g) j = \\<zero>\\<^bsub>residue_ring (p^j)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < Suc (nat (padic_val p f + padic_val p g)) \\<Longrightarrow>\n       padic_mult p f g j = \\<zero>\\<^bsub>residue_ring (p ^ j)\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < Suc (nat (padic_val p f + padic_val p g)) \\<Longrightarrow>\n       padic_mult p f g j = \\<zero>\\<^bsub>residue_ring (p ^ j)\\<^esub>", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < Suc (nat (padic_val p f + padic_val p g)) \\<Longrightarrow>\n       padic_mult p f g j = \\<zero>\\<^bsub>residue_ring (p ^ j)\\<^esub>", "let ?j = \"Suc (nat (padic_val p f + padic_val p g))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < Suc (nat (padic_val p f + padic_val p g)) \\<Longrightarrow>\n       padic_mult p f g j = \\<zero>\\<^bsub>residue_ring (p ^ j)\\<^esub>", "assume P: \"k < ?j\""], ["proof (state)\nthis:\n  k < Suc (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < Suc (nat (padic_val p f + padic_val p g)) \\<Longrightarrow>\n       padic_mult p f g j = \\<zero>\\<^bsub>residue_ring (p ^ j)\\<^esub>", "show \"(padic_mult p f g) k = \\<zero>\\<^bsub>residue_ring (p^k)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "have P0: \"(padic_mult p f g) (nat ?vf + nat ?vg) = \\<zero>\\<^bsub>residue_ring (p^(nat ?vf + nat ?vg))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "let ?k = \"(nat ?vf + nat ?vg)\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "have \"((padic_mult p f g) ?k) = residue (p^?k) ((padic_mult p f g) ?k) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n     (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))", "using P 22 padic_set_res_coherent"], ["proof (prove)\nusing this:\n  k < Suc (nat (padic_val p f + padic_val p g))\n  padic_mult p f g \\<in> padic_set p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n     (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))", "by (simp add: assms(1) prime_gt_0_nat)"], ["proof (state)\nthis:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))", "have \"((padic_mult p f g) ?k) = residue (p^?k) ?nm\""], ["proof (prove)\nusing this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n     (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))", "using \"17\" \"22\" assms(1) padic_set_res_coherent"], ["proof (prove)\nusing this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))\n  nat (padic_val p f) + nat (padic_val p g)\n  < Suc (nat (padic_val p f + padic_val p g))\n  padic_mult p f g \\<in> padic_set p\n  prime p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n     (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))", "by fastforce"], ["proof (state)\nthis:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))", "have \"((padic_mult p f g) ?k) = residue (p^?k) ?nm\""], ["proof (prove)\nusing this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n     (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))", "by (simp add: residue_def)"], ["proof (state)\nthis:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))", "have \"((padic_mult p f g) ?k) = residue (p^?k) 0\""], ["proof (prove)\nusing this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    residue (p ^ (nat (padic_val p f) + nat (padic_val p g))) 0", "using \"20\" residue_def"], ["proof (prove)\nusing this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g)))\n   (padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))))\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ (nat (padic_val p f) + nat (padic_val p g)) =\n  0\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    residue (p ^ (nat (padic_val p f) + nat (padic_val p g))) 0", "by auto"], ["proof (state)\nthis:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g))) 0\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g))) 0", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  residue (p ^ (nat (padic_val p f) + nat (padic_val p g))) 0\n\ngoal (1 subgoal):\n 1. padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "by (simp add: residue_def residue_ring_def)"], ["proof (state)\nthis:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "proof(cases \"k = (nat ?vf + nat ?vg)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n             \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>;\n     k = nat (padic_val p f) + nat (padic_val p g)\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n 2. \\<lbrakk>padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n             \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>;\n     k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "case True"], ["proof (state)\nthis:\n  k = nat (padic_val p f) + nat (padic_val p g)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n             \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>;\n     k = nat (padic_val p f) + nat (padic_val p g)\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n 2. \\<lbrakk>padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n             \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>;\n     k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  k = nat (padic_val p f) + nat (padic_val p g)", "show ?thesis"], ["proof (prove)\nusing this:\n  k = nat (padic_val p f) + nat (padic_val p g)\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "using P0"], ["proof (prove)\nusing this:\n  k = nat (padic_val p f) + nat (padic_val p g)\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "by blast"], ["proof (state)\nthis:\n  padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n             \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>;\n     k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n             \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>;\n     k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "case B: False"], ["proof (state)\nthis:\n  k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n             \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>;\n     k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  k \\<noteq> nat (padic_val p f) + nat (padic_val p g)", "show ?thesis"], ["proof (prove)\nusing this:\n  k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "proof(cases \"k=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k = 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n 2. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k = 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n 2. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  k = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "using \"22\" assms(1) padic_set_zero_res residue_ring_def"], ["proof (prove)\nusing this:\n  k = 0\n  padic_mult p f g \\<in> padic_set p\n  prime p\n  \\<lbrakk>prime ?p; ?f \\<in> padic_set ?p\\<rbrakk>\n  \\<Longrightarrow> ?f 0 = 0\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "case C: False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  k \\<noteq> 0", "have \"((padic_mult p f g) k) = residue (p^k) ((padic_mult p f g) (nat ?vf + nat ?vg)) \""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. padic_mult p f g k =\n    residue (p ^ k)\n     (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))", "using B P 22 padic_set_res_coherent"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\n  k < Suc (nat (padic_val p f + padic_val p g))\n  padic_mult p f g \\<in> padic_set p\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n\ngoal (1 subgoal):\n 1. padic_mult p f g k =\n    residue (p ^ k)\n     (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))", "by (simp add: assms(1) assms(4) assms(5) padic_val_def prime_gt_0_nat)"], ["proof (state)\nthis:\n  padic_mult p f g k =\n  residue (p ^ k)\n   (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  padic_mult p f g k =\n  residue (p ^ k)\n   (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))", "have S: \"((padic_mult p f g) k) = residue (p^k) \\<zero>\\<^bsub>residue_ring (p^((nat ?vf + nat ?vg)))\\<^esub>\""], ["proof (prove)\nusing this:\n  padic_mult p f g k =\n  residue (p ^ k)\n   (padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)))\n\ngoal (1 subgoal):\n 1. padic_mult p f g k =\n    residue (p ^ k)\n     \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>", "by (simp add: P0)"], ["proof (state)\nthis:\n  padic_mult p f g k =\n  residue (p ^ k)\n   \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "have \"residue (p^k) \\<in> ring_hom (residue_ring (p^((nat ?vf + nat ?vg)))) (residue_ring (p^k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ k)\n    \\<in> ring_hom\n           (residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g))))\n           (residue_ring (p ^ k))", "using B P C residue_hom_p"], ["proof (prove)\nusing this:\n  k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\n  k < Suc (nat (padic_val p f + padic_val p g))\n  k \\<noteq> 0\n  \\<lbrakk>?m \\<le> ?n; 0 < ?m; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m)\n                    \\<in> ring_hom (residue_ring (?p ^ ?n))\n                           (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. residue (p ^ k)\n    \\<in> ring_hom\n           (residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g))))\n           (residue_ring (p ^ k))", "using assms(1) assms(4) assms(5) less_Suc0 nat_int not_less_eq of_nat_power padic_val_def prime_nat_int_transfer"], ["proof (prove)\nusing this:\n  k \\<noteq> nat (padic_val p f) + nat (padic_val p g)\n  k < Suc (nat (padic_val p f + padic_val p g))\n  k \\<noteq> 0\n  \\<lbrakk>?m \\<le> ?n; 0 < ?m; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m)\n                    \\<in> ring_hom (residue_ring (?p ^ ?n))\n                           (residue_ring (?p ^ ?m))\n  prime p\n  f \\<noteq> padic_zero p\n  g \\<noteq> padic_zero p\n  (?n < Suc 0) = (?n = 0)\n  nat (int ?n) = ?n\n  (\\<not> ?m < ?n) = (?n < Suc ?m)\n  of_nat (?m ^ ?n) = of_nat ?m ^ ?n\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n  prime (int ?n) = prime ?n\n\ngoal (1 subgoal):\n 1. residue (p ^ k)\n    \\<in> ring_hom\n           (residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g))))\n           (residue_ring (p ^ k))", "by auto"], ["proof (state)\nthis:\n  residue (p ^ k)\n  \\<in> ring_hom\n         (residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g))))\n         (residue_ring (p ^ k))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> nat (padic_val p f) + nat (padic_val p g);\n     k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> padic_mult p f g k =\n                      \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "then"], ["proof (chain)\npicking this:\n  residue (p ^ k)\n  \\<in> ring_hom\n         (residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g))))\n         (residue_ring (p ^ k))", "show ?thesis"], ["proof (prove)\nusing this:\n  residue (p ^ k)\n  \\<in> ring_hom\n         (residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g))))\n         (residue_ring (p ^ k))\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "using S"], ["proof (prove)\nusing this:\n  residue (p ^ k)\n  \\<in> ring_hom\n         (residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g))))\n         (residue_ring (p ^ k))\n  padic_mult p f g k =\n  residue (p ^ k)\n   \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "using P0 padic_zero_def padic_zero_simp residue_def"], ["proof (prove)\nusing this:\n  residue (p ^ k)\n  \\<in> ring_hom\n         (residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g))))\n         (residue_ring (p ^ k))\n  padic_mult p f g k =\n  residue (p ^ k)\n   \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>\n  padic_mult p f g (nat (padic_val p f) + nat (padic_val p g)) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p f) + nat (padic_val p g)))\\<^esub>\n  padic_zero ?p \\<equiv> \\<lambda>n. 0\n  padic_zero ?p ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  padic_zero ?p ?n = 0\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_mult p f g k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?j < Suc (nat (padic_val p f + padic_val p g)) \\<Longrightarrow>\n  padic_mult p f g ?j = \\<zero>\\<^bsub>residue_ring (p ^ ?j)\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 24: \"(padic_mult p f g) (Suc (nat ?vf + nat ?vg)) \\<noteq> \\<zero>\\<^bsub>residue_ring ((p ^ Suc (nat (padic_val p f + padic_val p g))))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p f g\n     (Suc (nat (padic_val p f) + nat (padic_val p g))) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>", "by (metis (no_types, lifting) \"18\" A P assms(4) assms(5) monoid.simps(1) nat_int nat_int_add padic_val_def residue_ring_def ring.simps(1))"], ["proof (state)\nthis:\n  padic_mult p f g\n   (Suc (nat (padic_val p f) + nat (padic_val p g))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 25: \"padic_val p (padic_mult p f g) = int (LEAST k::nat. ((padic_mult p f g) (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) =\n    int (LEAST k.\n            padic_mult p f g (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "using padic_val_def 21"], ["proof (prove)\nusing this:\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n  padic_mult p f g \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) =\n    int (LEAST k.\n            padic_mult p f g (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  padic_val p (padic_mult p f g) =\n  int (LEAST k.\n          padic_mult p f g (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 26:\"(nat (padic_val p f + padic_val p g)) \\<in> {k::nat. ((padic_mult p f g) (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g)\n    \\<in> {k. padic_mult p f g (Suc k) \\<noteq>\n              \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>}", "using 24"], ["proof (prove)\nusing this:\n  padic_mult p f g\n   (Suc (nat (padic_val p f) + nat (padic_val p g))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g)\n    \\<in> {k. padic_mult p f g (Suc k) \\<noteq>\n              \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>}", "using \"18\" assms(1) prime_gt_0_nat"], ["proof (prove)\nusing this:\n  padic_mult p f g\n   (Suc (nat (padic_val p f) + nat (padic_val p g))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p f + padic_val p g)))\\<^esub>\n  padic_mult p f g (Suc (nat (padic_val p f + padic_val p g))) mod\n  p ^ Suc (nat (padic_val p f + padic_val p g)) \\<noteq>\n  0\n  prime p\n  prime ?p \\<Longrightarrow> 0 < ?p\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g)\n    \\<in> {k. padic_mult p f g (Suc k) \\<noteq>\n              \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>}", "by (metis (mono_tags, lifting) mem_Collect_eq mod_0 residue_ring_def ring.simps(1))"], ["proof (state)\nthis:\n  nat (padic_val p f + padic_val p g)\n  \\<in> {k. padic_mult p f g (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>}\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have 27: \"\\<And> j. j < (nat (padic_val p f + padic_val p g)) \\<Longrightarrow>\n     j \\<notin> {k::nat. ((padic_mult p f g) (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       j < nat (padic_val p f + padic_val p g) \\<Longrightarrow>\n       j \\<notin> {k. padic_mult p f g (Suc k) \\<noteq>\n                      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>}", "by (simp add: \"23\")"], ["proof (state)\nthis:\n  ?j < nat (padic_val p f + padic_val p g) \\<Longrightarrow>\n  ?j \\<notin> {k. padic_mult p f g (Suc k) \\<noteq>\n                  \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>}\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "have \"(nat (padic_val p f + padic_val p g)) = (LEAST k::nat. ((padic_mult p f g) (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "obtain P where C0: \"P= (\\<lambda> k. ((padic_mult p f g) (Suc k)) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc k))\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        P =\n        (\\<lambda>k.\n            padic_mult p f g (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  P =\n  (\\<lambda>k.\n      padic_mult p f g (Suc k) \\<noteq>\n      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "obtain x where C1: \"x = (nat (padic_val p f + padic_val p g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x = nat (padic_val p f + padic_val p g) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = nat (padic_val p f + padic_val p g)\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "have C2: \"P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P x", "using \"26\" C0 C1"], ["proof (prove)\nusing this:\n  nat (padic_val p f + padic_val p g)\n  \\<in> {k. padic_mult p f g (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>}\n  P =\n  (\\<lambda>k.\n      padic_mult p f g (Suc k) \\<noteq>\n      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n  x = nat (padic_val p f + padic_val p g)\n\ngoal (1 subgoal):\n 1. P x", "by blast"], ["proof (state)\nthis:\n  P x\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "have C3:\"\\<And> j. j< x \\<Longrightarrow> \\<not> P j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. j < x \\<Longrightarrow> \\<not> P j", "using C0 C1"], ["proof (prove)\nusing this:\n  P =\n  (\\<lambda>k.\n      padic_mult p f g (Suc k) \\<noteq>\n      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n  x = nat (padic_val p f + padic_val p g)\n\ngoal (1 subgoal):\n 1. \\<And>j. j < x \\<Longrightarrow> \\<not> P j", "by (simp add: \"23\")"], ["proof (state)\nthis:\n  ?j < x \\<Longrightarrow> \\<not> P ?j\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "have C4: \"\\<And> j. P j \\<Longrightarrow> x \\<le>j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. P j \\<Longrightarrow> x \\<le> j", "using C3 le_less_linear"], ["proof (prove)\nusing this:\n  ?j < x \\<Longrightarrow> \\<not> P ?j\n  ?x \\<le> ?y \\<or> ?y < ?x\n\ngoal (1 subgoal):\n 1. \\<And>j. P j \\<Longrightarrow> x \\<le> j", "by blast"], ["proof (state)\nthis:\n  P ?j \\<Longrightarrow> x \\<le> ?j\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "have \"x = (LEAST k. P k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = (LEAST k. P k)", "using C2 C4 Least_equality"], ["proof (prove)\nusing this:\n  P x\n  P ?j \\<Longrightarrow> x \\<le> ?j\n  \\<lbrakk>?P ?x; \\<And>y. ?P y \\<Longrightarrow> ?x \\<le> y\\<rbrakk>\n  \\<Longrightarrow> Least ?P = ?x\n\ngoal (1 subgoal):\n 1. x = (LEAST k. P k)", "by auto"], ["proof (state)\nthis:\n  x = (LEAST k. P k)\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "then"], ["proof (chain)\npicking this:\n  x = (LEAST k. P k)", "show ?thesis"], ["proof (prove)\nusing this:\n  x = (LEAST k. P k)\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "using C0 C1"], ["proof (prove)\nusing this:\n  x = (LEAST k. P k)\n  P =\n  (\\<lambda>k.\n      padic_mult p f g (Suc k) \\<noteq>\n      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n  x = nat (padic_val p f + padic_val p g)\n\ngoal (1 subgoal):\n 1. nat (padic_val p f + padic_val p g) =\n    (LEAST k.\n        padic_mult p f g (Suc k) \\<noteq>\n        \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  nat (padic_val p f + padic_val p g) =\n  (LEAST k.\n      padic_mult p f g (Suc k) \\<noteq>\n      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  nat (padic_val p f + padic_val p g) =\n  (LEAST k.\n      padic_mult p f g (Suc k) \\<noteq>\n      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "then"], ["proof (chain)\npicking this:\n  nat (padic_val p f + padic_val p g) =\n  (LEAST k.\n      padic_mult p f g (Suc k) \\<noteq>\n      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "have \"padic_val p (padic_mult p f g) = (nat (padic_val p f + padic_val p g))\""], ["proof (prove)\nusing this:\n  nat (padic_val p f + padic_val p g) =\n  (LEAST k.\n      padic_mult p f g (Suc k) \\<noteq>\n      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) =\n    int (nat (padic_val p f + padic_val p g))", "using \"25\""], ["proof (prove)\nusing this:\n  nat (padic_val p f + padic_val p g) =\n  (LEAST k.\n      padic_mult p f g (Suc k) \\<noteq>\n      \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n  padic_val p (padic_mult p f g) =\n  int (LEAST k.\n          padic_mult p f g (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) =\n    int (nat (padic_val p f + padic_val p g))", "by linarith"], ["proof (state)\nthis:\n  padic_val p (padic_mult p f g) = int (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "then"], ["proof (chain)\npicking this:\n  padic_val p (padic_mult p f g) = int (nat (padic_val p f + padic_val p g))", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_val p (padic_mult p f g) = int (nat (padic_val p f + padic_val p g))\n\ngoal (1 subgoal):\n 1. padic_val p (padic_mult p f g) = padic_val p f + padic_val p g", "by (simp add: assms(4) assms(5) padic_val_def)"], ["proof (state)\nthis:\n  padic_val p (padic_mult p f g) = padic_val p f + padic_val p g\n\ngoal:\nNo subgoals!", "qed"], ["", "section\\<open>Defining the Ring of $p$-adic Integers:\\<close>"], ["", "definition padic_int :: \"int \\<Rightarrow> padic_int ring\"\n  where \"padic_int p \\<equiv> \\<lparr>carrier = (padic_set p),\n         Group.monoid.mult = (padic_mult p), one = (padic_one p), \n          zero = (padic_zero p), add = (padic_add p)\\<rparr>\""], ["", "lemma padic_int_simps:\n \"\\<one>\\<^bsub>padic_int p\\<^esub> = padic_one p\"\n \"\\<zero>\\<^bsub>padic_int p\\<^esub> = padic_zero p\"\n \"(\\<oplus>\\<^bsub>padic_int p\\<^esub>) = padic_add p\"\n \"(\\<otimes>\\<^bsub>padic_int p\\<^esub>) = padic_mult p\"\n \"carrier (padic_int p) = padic_set p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<one>\\<^bsub>padic_int p\\<^esub> = padic_one p &&&\n     \\<zero>\\<^bsub>padic_int p\\<^esub> = padic_zero p) &&&\n    (\\<oplus>\\<^bsub>padic_int p\\<^esub>) = padic_add p &&&\n    (\\<otimes>\\<^bsub>padic_int p\\<^esub>) = padic_mult p &&&\n    carrier (padic_int p) = padic_set p", "unfolding padic_int_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<one>\\<^bsub>\\<lparr>carrier = padic_set p, monoid.mult = padic_mult p, one = padic_one p, zero = padic_zero p, add = padic_add p\\<rparr>\\<^esub> =\n     padic_one p &&&\n     \\<zero>\\<^bsub>\\<lparr>carrier = padic_set p, monoid.mult = padic_mult p, one = padic_one p, zero = padic_zero p, add = padic_add p\\<rparr>\\<^esub> =\n     padic_zero p) &&&\n    (\\<oplus>\\<^bsub>\\<lparr>carrier = padic_set p, monoid.mult = padic_mult p, one = padic_one p, zero = padic_zero p, add = padic_add p\\<rparr>\\<^esub>) =\n    padic_add p &&&\n    (\\<otimes>\\<^bsub>\\<lparr>carrier = padic_set p, monoid.mult = padic_mult p, one = padic_one p, zero = padic_zero p, add = padic_add p\\<rparr>\\<^esub>) =\n    padic_mult p &&&\n    carrier\n     \\<lparr>carrier = padic_set p, monoid.mult = padic_mult p,\n        one = padic_one p, zero = padic_zero p, add = padic_add p\\<rparr> =\n    padic_set p", "by auto"], ["", "lemma residues_n:\n  assumes \"n \\<noteq> 0\"\n  assumes \"prime p\"\n  shows \"residues (p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residues (p ^ n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 < p ^ n", "have \"p > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p", "using assms(2)"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. 1 < p", "using prime_gt_1_int"], ["proof (prove)\nusing this:\n  prime p\n  prime ?p \\<Longrightarrow> 1 < ?p\n\ngoal (1 subgoal):\n 1. 1 < p", "by auto"], ["proof (state)\nthis:\n  1 < p\n\ngoal (1 subgoal):\n 1. 1 < p ^ n", "then"], ["proof (chain)\npicking this:\n  1 < p", "show \" 1 < p ^ n \""], ["proof (prove)\nusing this:\n  1 < p\n\ngoal (1 subgoal):\n 1. 1 < p ^ n", "using assms(1)"], ["proof (prove)\nusing this:\n  1 < p\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 1 < p ^ n", "by auto"], ["proof (state)\nthis:\n  1 < p ^ n\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>$p$-adic multiplication is associative\\<close>"], ["", "lemma padic_mult_assoc:\nassumes \"prime p\"\nshows  \"\\<And>x y z.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       y \\<in> carrier (padic_int p) \\<Longrightarrow> \n       z \\<in> carrier (padic_int p) \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>padic_int p\\<^esub> y \\<otimes>\\<^bsub>padic_int p\\<^esub> z = x \\<otimes>\\<^bsub>padic_int p\\<^esub> (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)", "assume Ax: \" x \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  x \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)", "assume Ay: \" y \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  y \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)", "assume Az: \" z \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  z \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)", "show \"x \\<otimes>\\<^bsub>padic_int p\\<^esub> y \\<otimes>\\<^bsub>padic_int p\\<^esub> z = x \\<otimes>\\<^bsub>padic_int p\\<^esub> (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n    y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n    z =\n    x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z)\n        xa =\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n        xa", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z)\n        xa =\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n        xa", "show \"((x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) \\<otimes>\\<^bsub>padic_int p\\<^esub> z) n = (x \\<otimes>\\<^bsub>padic_int p\\<^esub> (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "proof(cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "using padic_int_simps"], ["proof (prove)\nusing this:\n  n = 0\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "by (metis Ax Ay Az assms padic_mult_in_padic_set padic_set_zero_res)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n   n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "have \"residues (p^n)\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residues (p ^ n)", "by (simp add: assms residues_n)"], ["proof (state)\nthis:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "then"], ["proof (chain)\npicking this:\n  residues (p ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "using residues.cring padic_set_res_closed padic_mult_in_padic_set Ax Ay Az padic_mult_res"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  \\<lbrakk>?f \\<in> padic_set ?p; ?g \\<in> padic_set ?p; prime ?p\\<rbrakk>\n  \\<Longrightarrow> padic_mult ?p ?f ?g \\<in> padic_set ?p\n  x \\<in> carrier (padic_int p)\n  y \\<in> carrier (padic_int p)\n  z \\<in> carrier (padic_int p)\n  padic_mult ?p ?f ?g ?n =\n  ?f ?n \\<otimes>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n     n", "by (simp add: cring.cring_simprules(11) padic_int_def)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n   n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z))\n   n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n  y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n  z =\n  x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The $p$-adic integers are closed under addition:\\<close>"], ["", "lemma padic_add_closed:\n  assumes \"prime p\"\n  shows  \"\\<And>x y.\n         x \\<in> carrier (padic_int p) \\<Longrightarrow>\n         y \\<in> carrier (padic_int p) \\<Longrightarrow>\n         x \\<oplus>\\<^bsub>(padic_int p)\\<^esub> y \\<in> carrier (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> carrier (padic_int p)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> ?A x y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> ?A x y \\<subseteq> carrier (padic_int p)", "fix x::\"padic_int\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> ?A x y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> ?A x y \\<subseteq> carrier (padic_int p)", "fix y::\"padic_int\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> ?A x y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> ?A x y \\<subseteq> carrier (padic_int p)", "assume Px: \"x \\<in>carrier (padic_int p) \""], ["proof (state)\nthis:\n  x \\<in> carrier (padic_int p)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> ?A x y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> ?A x y \\<subseteq> carrier (padic_int p)", "assume Py: \"y \\<in>carrier (padic_int p)\""], ["proof (state)\nthis:\n  y \\<in> carrier (padic_int p)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> ?A x y\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> ?A x y \\<subseteq> carrier (padic_int p)", "show \"x \\<oplus>\\<^bsub>(padic_int p)\\<^esub> y \\<in> carrier (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)", "let ?f = \"x \\<oplus>\\<^bsub>(padic_int p)\\<^esub> y\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)", "have 0: \"(\\<forall>(m::nat). (?f m) \\<in> (carrier (residue_ring (p^m))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n       \\<in> carrier (residue_ring (p ^ m))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n       \\<in> carrier (residue_ring (p ^ m))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n       \\<in> carrier (residue_ring (p ^ m))", "have A1 : \"?f m = (x m) \\<oplus>\\<^bsub>(residue_ring (p^m))\\<^esub> (y m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m =\n    x m \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub> y m", "by (simp add: padic_int_def padic_add_def)"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m =\n  x m \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub> y m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n       \\<in> carrier (residue_ring (p ^ m))", "have A2: \"(x m) \\<in>(carrier (residue_ring (p^m)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x m \\<in> carrier (residue_ring (p ^ m))", "using Px"], ["proof (prove)\nusing this:\n  x \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. x m \\<in> carrier (residue_ring (p ^ m))", "by (simp add: padic_int_def padic_set_def)"], ["proof (state)\nthis:\n  x m \\<in> carrier (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n       \\<in> carrier (residue_ring (p ^ m))", "have A3: \"(y m) \\<in>(carrier (residue_ring (p^m)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y m \\<in> carrier (residue_ring (p ^ m))", "using Py"], ["proof (prove)\nusing this:\n  y \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. y m \\<in> carrier (residue_ring (p ^ m))", "by (simp add: padic_int_def padic_set_def)"], ["proof (state)\nthis:\n  y m \\<in> carrier (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n       \\<in> carrier (residue_ring (p ^ m))", "then"], ["proof (chain)\npicking this:\n  y m \\<in> carrier (residue_ring (p ^ m))", "show \"(?f m) \\<in> (carrier (residue_ring (p^m)))\""], ["proof (prove)\nusing this:\n  y m \\<in> carrier (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n    \\<in> carrier (residue_ring (p ^ m))", "using A1 assms of_nat_0_less_iff prime_gt_0_nat residue_ring_def"], ["proof (prove)\nusing this:\n  y m \\<in> carrier (residue_ring (p ^ m))\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m =\n  x m \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub> y m\n  prime p\n  ((0::?'a) < of_nat ?n) = (0 < ?n)\n  prime ?p \\<Longrightarrow> 0 < ?p\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n    \\<in> carrier (residue_ring (p ^ m))", "by force"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n  \\<in> carrier (residue_ring (p ^ m))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m.\n     (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n     \\<in> carrier (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)", "have 1: \"(\\<forall>(n::nat) (m::nat). (n > m \\<longrightarrow> (residue (p^m) (?f n) = (?f m))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n m.\n       m < n \\<longrightarrow>\n       residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>m<n.\n          residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n          (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "fix n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<forall>m<n.\n          residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n          (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "show \"(\\<forall>(m::nat). (n > m \\<longrightarrow> (residue (p^m) (?f n) = (?f m))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m<n.\n       residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       m < n \\<longrightarrow>\n       residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "fix m::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       m < n \\<longrightarrow>\n       residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "show \"(n > m \\<longrightarrow> (residue (p^m) (?f n) = (?f m)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < n \\<longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "assume A: \"m < n\""], ["proof (state)\nthis:\n  m < n\n\ngoal (1 subgoal):\n 1. m < n \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "show \"(residue (p^m) (?f n) = (?f m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "proof(cases \"m = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "then"], ["proof (chain)\npicking this:\n  m = 0", "have A0: \"(residue (p^m) (?f n)) = 0\""], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) = 0", "by (simp add: residue_1_zero)"], ["proof (state)\nthis:\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "have A1: \"?f m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m = 0", "using True"], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m = 0", "by (simp add: padic_add_res padic_int_simps(3) residue_ring_def)"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "then"], ["proof (chain)\npicking this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "using A0"], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m = 0\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "by linarith"], ["proof (state)\nthis:\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "then"], ["proof (chain)\npicking this:\n  m \\<noteq> 0", "have  \"m \\<noteq>0\""], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0", "using A"], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n  m < n\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0", "by linarith"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "have D: \"p^n mod p^m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ n mod p ^ m = 0", "using A"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. p ^ n mod p ^ m = 0", "by (simp add: le_imp_power_dvd)"], ["proof (state)\nthis:\n  p ^ n mod p ^ m = 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "let ?LHS = \"residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "have A0: \"?LHS = residue (p ^ m) ((x n)\\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub>( y n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    residue (p ^ m) (x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n)", "by (simp add: padic_int_def padic_add_def)"], ["proof (state)\nthis:\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  residue (p ^ m) (x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "have \"residue (p^m) \\<in> ring_hom (residue_ring ((p^n))) (residue_ring ((p^m)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m)\n    \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "using A False assms residue_hom_p"], ["proof (prove)\nusing this:\n  m < n\n  m \\<noteq> 0\n  prime p\n  \\<lbrakk>?m \\<le> ?n; 0 < ?m; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m)\n                    \\<in> ring_hom (residue_ring (?p ^ ?n))\n                           (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. residue (p ^ m)\n    \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "by auto"], ["proof (state)\nthis:\n  residue (p ^ m)\n  \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "then"], ["proof (chain)\npicking this:\n  residue (p ^ m)\n  \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "have \"residue (p ^ m) ((x n)\\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub>( y n)) = (residue (p ^ m) (x n))\\<oplus>\\<^bsub>residue_ring (p^m)\\<^esub>((residue (p ^ m) (y n)))\""], ["proof (prove)\nusing this:\n  residue (p ^ m)\n  \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n) =\n    residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    residue (p ^ m) (y n)", "by (metis (no_types, lifting) padic_int_simps(5) Px Py mem_Collect_eq padic_set_def ring_hom_add)"], ["proof (state)\nthis:\n  residue (p ^ m) (x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n) =\n  residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  residue (p ^ m) (y n)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "then"], ["proof (chain)\npicking this:\n  residue (p ^ m) (x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n) =\n  residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  residue (p ^ m) (y n)", "have \"?LHS =(residue (p ^ m) (x n))\\<oplus>\\<^bsub>residue_ring (p^m)\\<^esub>((residue (p ^ m) (y n)))\""], ["proof (prove)\nusing this:\n  residue (p ^ m) (x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n) =\n  residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  residue (p ^ m) (y n)\n\ngoal (1 subgoal):\n 1. residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    residue (p ^ m) (y n)", "using A0"], ["proof (prove)\nusing this:\n  residue (p ^ m) (x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n) =\n  residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  residue (p ^ m) (y n)\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  residue (p ^ m) (x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n)\n\ngoal (1 subgoal):\n 1. residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    residue (p ^ m) (y n)", "by force"], ["proof (state)\nthis:\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  residue (p ^ m) (y n)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "then"], ["proof (chain)\npicking this:\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  residue (p ^ m) (y n)", "show ?thesis"], ["proof (prove)\nusing this:\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  residue (p ^ m) (y n)\n\ngoal (1 subgoal):\n 1. residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "using A Px Py padic_set_def"], ["proof (prove)\nusing this:\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  residue (p ^ m) (x n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  residue (p ^ m) (y n)\n  m < n\n  x \\<in> carrier (padic_int p)\n  y \\<in> carrier (padic_int p)\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n\ngoal (1 subgoal):\n 1. residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "by (simp add: padic_int_def padic_add_def)"], ["proof (state)\nthis:\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m < n \\<longrightarrow>\n  residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m<n.\n     residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n     (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n m.\n     m < n \\<longrightarrow>\n     residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n     (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)", "then"], ["proof (chain)\npicking this:\n  \\<forall>n m.\n     m < n \\<longrightarrow>\n     residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n     (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n m.\n     m < n \\<longrightarrow>\n     residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n     (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)", "using \"0\" padic_set_memI padic_int_simps"], ["proof (prove)\nusing this:\n  \\<forall>n m.\n     m < n \\<longrightarrow>\n     residue (p ^ m) ((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) =\n     (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n  \\<forall>m.\n     (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) m\n     \\<in> carrier (residue_ring (p ^ m))\n  \\<lbrakk>\\<And>m. ?f m \\<in> carrier (residue_ring (?p ^ m));\n   \\<And>m n.\n      m < n \\<Longrightarrow> residue (?p ^ m) (?f n) = ?f m\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> padic_set ?p\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)", "by auto"], ["proof (state)\nthis:\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> carrier (padic_int p)\n                         \\<subseteq> carrier (padic_int p)", "then"], ["proof (chain)\npicking this:\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)", "have \"  x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> (padic_set p)\""], ["proof (prove)\nusing this:\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> padic_set p", "by(simp add:  padic_int_def)"], ["proof (state)\nthis:\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> padic_set p\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> carrier (padic_int p)\n                         \\<subseteq> carrier (padic_int p)", "then"], ["proof (chain)\npicking this:\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> padic_set p", "show \"carrier (padic_int p) \\<subseteq> carrier (padic_int p)\""], ["proof (prove)\nusing this:\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<in> padic_set p\n\ngoal (1 subgoal):\n 1. carrier (padic_int p) \\<subseteq> carrier (padic_int p)", "by blast"], ["proof (state)\nthis:\n  carrier (padic_int p) \\<subseteq> carrier (padic_int p)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>$p$-adic addition is associative:\\<close>"], ["", "lemma padic_add_assoc:\nassumes \"prime p\"\nshows  \" \\<And>x y z.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       y \\<in> carrier (padic_int p) \\<Longrightarrow> z \\<in> carrier (padic_int p)\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<oplus>\\<^bsub>padic_int p\\<^esub> z = x \\<oplus>\\<^bsub>padic_int p\\<^esub> (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)", "assume Ax: \"x \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  x \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)", "assume Ay: \"y \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  y \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)", "assume Az: \"z \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  z \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)", "show \" (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) \\<oplus>\\<^bsub>padic_int p\\<^esub> z = x \\<oplus>\\<^bsub>padic_int p\\<^esub> (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n    y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n    z =\n    x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        z)\n        xa =\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n        xa", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        z)\n        xa =\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n        xa", "show \"((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n = (x \\<oplus>\\<^bsub>padic_int p\\<^esub> (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)) n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "have Ex: \"(x n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "using Ax padic_set_def padic_int_simps"], ["proof (prove)\nusing this:\n  x \\<in> carrier (padic_int p)\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  x n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "have Ey: \"(y n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "using Ay padic_set_def padic_int_simps"], ["proof (prove)\nusing this:\n  y \\<in> carrier (padic_int p)\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  y n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "have Ez: \"(z n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z n \\<in> carrier (residue_ring (p ^ n))", "using Az padic_set_def  padic_int_simps"], ["proof (prove)\nusing this:\n  z \\<in> carrier (padic_int p)\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. z n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  z n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "let ?x = \"(x n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "let ?y = \"(y n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "let ?z = \"(z n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "have P1: \"(?x \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> ?y) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> ?z = (x n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> ((y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "proof(cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "have \"residues (p^n)\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residues (p ^ n)", "by (simp add: assms residues_n)"], ["proof (state)\nthis:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "then"], ["proof (chain)\npicking this:\n  residues (p ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "using Ex Ey Ez cring.cring_simprules(7) padic_add_res residues.cring  padic_int_simps"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n  x n \\<in> carrier (residue_ring (p ^ n))\n  y n \\<in> carrier (residue_ring (p ^ n))\n  z n \\<in> carrier (residue_ring (p ^ n))\n  \\<lbrakk>cring ?R; ?x \\<in> carrier ?R; ?y \\<in> carrier ?R;\n   ?z \\<in> carrier ?R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>?R\\<^esub>\n                    ?y \\<oplus>\\<^bsub>?R\\<^esub>\n                    ?z =\n                    ?x \\<oplus>\\<^bsub>?R\\<^esub>\n                    (?y \\<oplus>\\<^bsub>?R\\<^esub> ?z)\n  padic_add ?p ?f ?g ?n =\n  ?f ?n \\<oplus>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "by fastforce"], ["proof (state)\nthis:\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "have \" ((y n)) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> z n =((y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "using padic_add_def padic_int_simps"], ["proof (prove)\nusing this:\n  padic_add ?p ?f ?g \\<equiv>\n  \\<lambda>n. ?f n \\<oplus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?g n\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "by simp"], ["proof (state)\nthis:\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n =\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "then"], ["proof (chain)\npicking this:\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n =\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "have P0: \"(x n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> ((y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n) = ((x n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> ((y n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> z n))\""], ["proof (prove)\nusing this:\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n =\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n\ngoal (1 subgoal):\n 1. x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)", "using padic_add_def  padic_int_simps"], ["proof (prove)\nusing this:\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n =\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n  padic_add ?p ?f ?g \\<equiv>\n  \\<lambda>n. ?f n \\<oplus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?g n\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)", "by simp"], ["proof (state)\nthis:\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "have \"((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n = ((x  \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> z n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y)\n     n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n", "using padic_add_def padic_int_simps"], ["proof (prove)\nusing this:\n  padic_add ?p ?f ?g \\<equiv>\n  \\<lambda>n. ?f n \\<oplus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?g n\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y)\n     n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n", "by simp"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y)\n   n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "then"], ["proof (chain)\npicking this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y)\n   n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n", "have  \"((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n =((x n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> (y n)) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> z n\""], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y)\n   n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n", "using padic_add_def padic_int_simps"], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y)\n   n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n\n  padic_add ?p ?f ?g \\<equiv>\n  \\<lambda>n. ?f n \\<oplus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?g n\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    z n", "by simp"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "then"], ["proof (chain)\npicking this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n", "have  \"((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n =((x n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> ((y n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> z n))\""], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)", "using Ex Ey Ez P1 P0"], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n\n  x n \\<in> carrier (residue_ring (p ^ n))\n  y n \\<in> carrier (residue_ring (p ^ n))\n  z n \\<in> carrier (residue_ring (p ^ n))\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  z n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)", "by linarith"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "then"], ["proof (chain)\npicking this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)", "have  \"((x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n = (x n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> ((y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n)\""], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "using P0"], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n)\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "by linarith"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "then"], ["proof (chain)\npicking this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z) n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n     n", "by (simp add:  padic_int_def padic_add_def)"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n   n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z))\n   n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n  y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n  z =\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>$p$-adic addition is commutative:\\<close>"], ["", "lemma padic_add_comm:\n  assumes \"prime p\"\n  shows \" \\<And>x y. \n          x \\<in> carrier (padic_int p) \\<Longrightarrow> \n          y \\<in> carrier (padic_int p) \\<Longrightarrow> \n          x \\<oplus>\\<^bsub>padic_int p\\<^esub> y = y \\<oplus>\\<^bsub>padic_int p\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x", "assume Ax: \"x \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  x \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x", "assume Ay:\"y \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  y \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x", "show \"x \\<oplus>\\<^bsub>padic_int p\\<^esub> y = y \\<oplus>\\<^bsub>padic_int p\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n    y \\<oplus>\\<^bsub>padic_int p\\<^esub> x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) xa =\n       (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) xa", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) xa =\n       (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) xa", "show \"(x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n = (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "proof(cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "by (metis Ax Ay assms padic_add_def padic_set_zero_res padic_int_simps(3,5))"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "have LHS0: \"(x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n = (x n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> (y n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n", "by (simp add:  padic_int_simps padic_add_res)"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "have RHS0: \"(y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = (y n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> (x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n", "by (simp add:  padic_int_simps padic_add_res)"], ["proof (state)\nthis:\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "have Ex: \"(x n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "using Ax padic_set_res_closed  padic_int_simps"], ["proof (prove)\nusing this:\n  x \\<in> carrier (padic_int p)\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  x n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "have Ey: \"(y n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "using Ay padic_set_res_closed  padic_int_simps"], ["proof (prove)\nusing this:\n  y \\<in> carrier (padic_int p)\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  y n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "have LHS1: \"(x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n = ((x n) +(y n)) mod (p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n = (x n + y n) mod p ^ n", "using LHS0 residue_ring_def"], ["proof (prove)\nusing this:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n  x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n = (x n + y n) mod p ^ n", "by simp"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n = (x n + y n) mod p ^ n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "have RHS1: \"(y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = ((y n) +(x n)) mod (p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = (y n + x n) mod p ^ n", "using RHS0 residue_ring_def"], ["proof (prove)\nusing this:\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n  y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = (y n + x n) mod p ^ n", "by simp"], ["proof (state)\nthis:\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = (y n + x n) mod p ^ n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "then"], ["proof (chain)\npicking this:\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = (y n + x n) mod p ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = (y n + x n) mod p ^ n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "using LHS1 RHS1"], ["proof (prove)\nusing this:\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = (y n + x n) mod p ^ n\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n = (x n + y n) mod p ^ n\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = (y n + x n) mod p ^ n\n\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n", "by presburger"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) n =\n  (y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n  y \\<oplus>\\<^bsub>padic_int p\\<^esub> x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>$padic\\_zero$ is an additive identity:\\<close>"], ["", "lemma padic_add_zero:\nassumes \"prime p\"\nshows \"\\<And>x. x \\<in> carrier (padic_int p) \\<Longrightarrow> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x", "assume Ax: \"x \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  x \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x", "show \" \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub> x = x \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n    x =\n    x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        x)\n        xa =\n       x xa", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        x)\n        xa =\n       x xa", "have A: \"(padic_zero p) n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_zero p n = 0", "by (simp add: padic_zero_def)"], ["proof (state)\nthis:\n  padic_zero p n = 0\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        x)\n        xa =\n       x xa", "have \"((padic_zero p) \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = x n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (padic_zero p \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = x n", "using Ax padic_int_simps(5) padic_set_res_closed residue_ring_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier (padic_int p)\n  carrier (padic_int ?p) = padic_set ?p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. (padic_zero p \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = x n", "by(auto simp add: padic_zero_def padic_int_simps padic_add_res residue_ring_def)"], ["proof (state)\nthis:\n  (padic_zero p \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = x n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        x)\n        xa =\n       x xa", "then"], ["proof (chain)\npicking this:\n  (padic_zero p \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = x n", "show \"(\\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = x n\""], ["proof (prove)\nusing this:\n  (padic_zero p \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = x n\n\ngoal (1 subgoal):\n 1. (\\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "by (simp add: padic_int_def)"], ["proof (state)\nthis:\n  (\\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub> x)\n   n =\n  x n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n  x\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Closure under additive inverses:\\<close>"], ["", "lemma padic_add_inv:\nassumes \"prime p\"\nshows \"\\<And>x. x \\<in> carrier (padic_int p) \\<Longrightarrow>\n           \\<exists>y\\<in>carrier (padic_int p). y \\<oplus>\\<^bsub>padic_int p\\<^esub> x = \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "assume Ax: \" x \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  x \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "show \"\\<exists>y\\<in>carrier (padic_int p). y \\<oplus>\\<^bsub>padic_int p\\<^esub> x = \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (padic_int p).\n       y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n       \\<zero>\\<^bsub>padic_int p\\<^esub>", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n    \\<zero>\\<^bsub>padic_int p\\<^esub>\n 2. ?y \\<in> carrier (padic_int p)", "let ?y = \"(padic_a_inv p) x\""], ["proof (state)\ngoal (2 subgoals):\n 1. ?y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n    \\<zero>\\<^bsub>padic_int p\\<^esub>\n 2. ?y \\<in> carrier (padic_int p)", "show \"?y \\<oplus>\\<^bsub>padic_int p\\<^esub> x = \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n    \\<zero>\\<^bsub>padic_int p\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) xa =\n       \\<zero>\\<^bsub>padic_int p\\<^esub> xa", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) xa =\n       \\<zero>\\<^bsub>padic_int p\\<^esub> xa", "show  \"(?y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = \\<zero>\\<^bsub>padic_int p\\<^esub> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "proof(cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "using Ax assms padic_add_closed padic_set_zero_res \n              padic_a_inv_in_padic_set padic_zero_def padic_int_simps"], ["proof (prove)\nusing this:\n  n = 0\n  x \\<in> carrier (padic_int p)\n  prime p\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p);\n   ?y \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>padic_int ?p\\<^esub> ?y\n                    \\<in> carrier (padic_int ?p)\n  \\<lbrakk>prime ?p; ?f \\<in> padic_set ?p\\<rbrakk>\n  \\<Longrightarrow> ?f 0 = 0\n  \\<lbrakk>?f \\<in> padic_set ?p; prime ?p\\<rbrakk>\n  \\<Longrightarrow> padic_a_inv ?p ?f \\<in> padic_set ?p\n  padic_zero ?p \\<equiv> \\<lambda>n. 0\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "by auto"], ["proof (state)\nthis:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n  \\<zero>\\<^bsub>padic_int p\\<^esub> n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "have C: \"(x n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "using Ax padic_set_res_closed padic_int_simps"], ["proof (prove)\nusing this:\n  x \\<in> carrier (padic_int p)\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  x n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "have R: \"residues (p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residues (p ^ n)", "using False"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residues (p ^ n)", "by (simp add: assms residues_n)"], ["proof (state)\nthis:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "have \"(?y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = (?y n) \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> x n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    padic_a_inv p x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n", "by (simp add: padic_int_def padic_add_res)"], ["proof (state)\nthis:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n  padic_a_inv p x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "then"], ["proof (chain)\npicking this:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n  padic_a_inv p x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n", "have \"(?y \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = 0\""], ["proof (prove)\nusing this:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n  padic_a_inv p x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n\n\ngoal (1 subgoal):\n 1. (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = 0", "using C R residue_ring_def[simp] residues.cring"], ["proof (prove)\nusing this:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n  padic_a_inv p x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n\n  x n \\<in> carrier (residue_ring (p ^ n))\n  residues (p ^ n)\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n\ngoal (1 subgoal):\n 1. (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = 0", "by (metis (no_types, lifting) cring.cring_simprules(9) padic_a_inv_def residues.zero_cong)"], ["proof (state)\nthis:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "then"], ["proof (chain)\npicking this:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n = 0\n\ngoal (1 subgoal):\n 1. (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> n", "by (simp add: padic_int_def padic_zero_def)"], ["proof (state)\nthis:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n  \\<zero>\\<^bsub>padic_int p\\<^esub> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x) n =\n  \\<zero>\\<^bsub>padic_int p\\<^esub> n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_a_inv p x \\<in> carrier (padic_int p)", "then"], ["proof (chain)\npicking this:\n  padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n  \\<zero>\\<^bsub>padic_int p\\<^esub>", "show \"padic_a_inv p x \\<in> carrier (padic_int p)\""], ["proof (prove)\nusing this:\n  padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_a_inv p x \\<in> carrier (padic_int p)", "using padic_a_inv_in_padic_set padic_int_simps\n            Ax assms prime_gt_0_nat"], ["proof (prove)\nusing this:\n  padic_a_inv p x \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n  \\<lbrakk>?f \\<in> padic_set ?p; prime ?p\\<rbrakk>\n  \\<Longrightarrow> padic_a_inv ?p ?f \\<in> padic_set ?p\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n  x \\<in> carrier (padic_int p)\n  prime p\n  prime ?p \\<Longrightarrow> 0 < ?p\n\ngoal (1 subgoal):\n 1. padic_a_inv p x \\<in> carrier (padic_int p)", "by auto"], ["proof (state)\nthis:\n  padic_a_inv p x \\<in> carrier (padic_int p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y\\<in>carrier (padic_int p).\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n     \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The ring of padic integers forms an abelian group under addition:\\<close>"], ["", "lemma padic_is_abelian_group:\nassumes \"prime p\"\nshows \"abelian_group (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abelian_group (padic_int p)", "proof (rule abelian_groupI)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> carrier (padic_int p)\n 2. \\<zero>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x\n 5. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x\n 6. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "show 0: \"\\<And>x y. x \\<in> carrier (padic_int p) \\<Longrightarrow>\n                y \\<in> carrier (padic_int p) \\<Longrightarrow> \n                x \\<oplus>\\<^bsub>(padic_int p)\\<^esub> y \\<in> carrier (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> carrier (padic_int p)", "using padic_add_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p);\n   ?y \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>padic_int ?p\\<^esub> ?y\n                    \\<in> carrier (padic_int ?p)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> carrier (padic_int p)", "by (simp add: assms)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier (padic_int p);\n   ?y \\<in> carrier (padic_int p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>padic_int p\\<^esub> ?y\n                    \\<in> carrier (padic_int p)\n\ngoal (5 subgoals):\n 1. \\<zero>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x\n 4. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "show zero: \"\\<zero>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)", "by (metis \"0\" assms padic_add_inv padic_int_simps(5) padic_one_in_padic_set)"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)\n\ngoal (4 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x\n 3. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "show add_assoc: \" \\<And>x y z.\n                      x \\<in> carrier (padic_int p) \\<Longrightarrow>\n                      y \\<in> carrier (padic_int p) \\<Longrightarrow> \n                      z \\<in> carrier (padic_int p) \\<Longrightarrow> \n                             x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<oplus>\\<^bsub>padic_int p\\<^esub> z \n                           = x \\<oplus>\\<^bsub>padic_int p\\<^esub> (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)", "using assms padic_add_assoc"], ["proof (prove)\nusing this:\n  prime p\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p);\n   ?y \\<in> carrier (padic_int ?p); ?z \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>padic_int ?p\\<^esub>\n                    ?y \\<oplus>\\<^bsub>padic_int ?p\\<^esub>\n                    ?z =\n                    ?x \\<oplus>\\<^bsub>padic_int ?p\\<^esub>\n                    (?y \\<oplus>\\<^bsub>padic_int ?p\\<^esub> ?z)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<oplus>\\<^bsub>padic_int p\\<^esub> z)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier (padic_int p); ?y \\<in> carrier (padic_int p);\n   ?z \\<in> carrier (padic_int p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                    ?y \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                    ?z =\n                    ?x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                    (?y \\<oplus>\\<^bsub>padic_int p\\<^esub> ?z)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x\n 2. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x\n 3. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "show comm: \" \\<And>x y. \n                      x \\<in> carrier (padic_int p) \\<Longrightarrow>\n                      y \\<in> carrier (padic_int p) \\<Longrightarrow> \n                      x \\<oplus>\\<^bsub>padic_int p\\<^esub> y = y \\<oplus>\\<^bsub>padic_int p\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x", "using assms padic_add_comm"], ["proof (prove)\nusing this:\n  prime p\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p);\n   ?y \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>padic_int ?p\\<^esub> ?y =\n                    ?y \\<oplus>\\<^bsub>padic_int ?p\\<^esub> ?x\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<oplus>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<oplus>\\<^bsub>padic_int p\\<^esub> x", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier (padic_int p);\n   ?y \\<in> carrier (padic_int p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>padic_int p\\<^esub> ?y =\n                    ?y \\<oplus>\\<^bsub>padic_int p\\<^esub> ?x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x\n 2. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "show \"\\<And>x. x \\<in> carrier (padic_int p) \\<Longrightarrow> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x", "using assms padic_add_zero"], ["proof (prove)\nusing this:\n  prime p\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> \\<zero>\\<^bsub>padic_int ?p\\<^esub> \\<oplus>\\<^bsub>padic_int ?p\\<^esub>\n                    ?x =\n                    ?x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> carrier (padic_int p) \\<Longrightarrow>\n  \\<zero>\\<^bsub>padic_int p\\<^esub> \\<oplus>\\<^bsub>padic_int p\\<^esub>\n  ?x =\n  ?x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "show \"\\<And>x. x \\<in> carrier (padic_int p) \\<Longrightarrow> \n          \\<exists>y\\<in>carrier (padic_int p). y \\<oplus>\\<^bsub>padic_int p\\<^esub> x = \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "using assms padic_add_inv"], ["proof (prove)\nusing this:\n  prime p\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y\\<in>carrier (padic_int ?p).\n                       y \\<oplus>\\<^bsub>padic_int ?p\\<^esub> ?x =\n                       \\<zero>\\<^bsub>padic_int ?p\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (padic_int p).\n          y \\<oplus>\\<^bsub>padic_int p\\<^esub> x =\n          \\<zero>\\<^bsub>padic_int p\\<^esub>", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> carrier (padic_int p) \\<Longrightarrow>\n  \\<exists>y\\<in>carrier (padic_int p).\n     y \\<oplus>\\<^bsub>padic_int p\\<^esub> ?x =\n     \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>One is a multiplicative identity:\\<close>"], ["", "lemma padic_one_id:\nassumes \"prime p\"\nassumes \"x \\<in> carrier (padic_int p)\"\nshows  \"\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n    x =\n    x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        x)\n        xa =\n       x xa", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        x)\n        xa =\n       x xa", "show \"(\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = x n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "proof(cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "by (metis padic_int_simps(1,4,5) assms(1) assms(2) padic_mult_in_padic_set padic_one_in_padic_set padic_set_zero_res)"], ["proof (state)\nthis:\n  (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub> x)\n   n =\n  x n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "have \"residues (p^n)\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residues (p ^ n)", "by (simp add: assms(1) residues_n)"], ["proof (state)\nthis:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "then"], ["proof (chain)\npicking this:\n  residues (p ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "using False assms(2) cring.cring_simprules(12) padic_int_simps\n        padic_mult_res padic_one_simp padic_set_res_closed residues.cring"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n  n \\<noteq> 0\n  x \\<in> carrier (padic_int p)\n  \\<lbrakk>cring ?R; ?x \\<in> carrier ?R\\<rbrakk>\n  \\<Longrightarrow> \\<one>\\<^bsub>?R\\<^esub> \\<otimes>\\<^bsub>?R\\<^esub>\n                    ?x =\n                    ?x\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n  padic_mult ?p ?f ?g ?n =\n  ?f ?n \\<otimes>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n  0 < ?n \\<Longrightarrow>\n  padic_one ?p ?n = \\<one>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  0 < ?n \\<Longrightarrow> padic_one ?p ?n = 1\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n\ngoal (1 subgoal):\n 1. (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     x)\n     n =\n    x n", "by fastforce"], ["proof (state)\nthis:\n  (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub> x)\n   n =\n  x n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub> x)\n   n =\n  x n\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>$p$-adic multiplication is commutative:\\<close>"], ["", "lemma padic_mult_comm:\nassumes \"prime p\"\nassumes \"x \\<in> carrier (padic_int p)\"\nassumes \"y \\<in> carrier (padic_int p)\"\nshows \"x \\<otimes>\\<^bsub>padic_int p\\<^esub> y = y \\<otimes>\\<^bsub>padic_int p\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>padic_int p\\<^esub> y =\n    y \\<otimes>\\<^bsub>padic_int p\\<^esub> x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) xa =\n       (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) xa", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) xa =\n       (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) xa", "have Ax: \"(x n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "using padic_set_def assms(2) padic_int_simps"], ["proof (prove)\nusing this:\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n  x \\<in> carrier (padic_int p)\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  x n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) xa =\n       (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) xa", "have Ay: \"(y n) \\<in>carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "using padic_set_def assms(3) padic_set_res_closed padic_int_simps"], ["proof (prove)\nusing this:\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n  y \\<in> carrier (padic_int p)\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "by blast"], ["proof (state)\nthis:\n  y n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) xa =\n       (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) xa", "show \"(x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n = (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "proof(cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "by (metis padic_int_simps(4,5) assms(1) assms(2) assms(3) padic_set_zero_res padic_simps(3))"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "have LHS0: \"(x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n = (x n) \\<otimes>\\<^bsub>residue_ring (p^n)\\<^esub> (y n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    x n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n", "by (simp add: padic_int_def padic_mult_res)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n  x n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "have RHS0: \"(y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = (y n) \\<otimes>\\<^bsub>residue_ring (p^n)\\<^esub> (x n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n =\n    y n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n", "by (simp add: padic_int_def padic_mult_res)"], ["proof (state)\nthis:\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n =\n  y n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "have Ex: \"(x n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "using Ax padic_set_res_closed"], ["proof (prove)\nusing this:\n  x n \\<in> carrier (residue_ring (p ^ n))\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  x n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "have Ey: \"(y n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "using Ay padic_set_res_closed"], ["proof (prove)\nusing this:\n  y n \\<in> carrier (residue_ring (p ^ n))\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  y n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "have LHS1: \"(x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n = ((x n) *(y n)) mod (p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n = x n * y n mod p ^ n", "using LHS0"], ["proof (prove)\nusing this:\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n  x n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n = x n * y n mod p ^ n", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n = x n * y n mod p ^ n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "have RHS1: \"(y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = ((y n) *(x n)) mod (p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = y n * x n mod p ^ n", "using RHS0"], ["proof (prove)\nusing this:\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n =\n  y n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n\n\ngoal (1 subgoal):\n 1. (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = y n * x n mod p ^ n", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = y n * x n mod p ^ n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "then"], ["proof (chain)\npicking this:\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = y n * x n mod p ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = y n * x n mod p ^ n\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "using LHS1 RHS1"], ["proof (prove)\nusing this:\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = y n * x n mod p ^ n\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n = x n * y n mod p ^ n\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n = y n * x n mod p ^ n\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n    (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub> y) n =\n  (y \\<otimes>\\<^bsub>padic_int p\\<^esub> x) n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma padic_is_comm_monoid:\nassumes \"prime p\"\nshows \"Group.comm_monoid (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.comm_monoid (padic_int p)", "proof(rule comm_monoidI)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> carrier (padic_int p)\n 2. \\<one>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> x", "show  \"\\<And>x y. \n            x \\<in> carrier (padic_int p) \\<Longrightarrow> \n            y \\<in> carrier (padic_int p) \\<Longrightarrow> \n            x \\<otimes>\\<^bsub>padic_int p\\<^esub> y \\<in> carrier (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub> y\n                         \\<in> carrier (padic_int p)", "by (simp add: padic_int_def assms padic_mult_in_padic_set)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier (padic_int p);\n   ?y \\<in> carrier (padic_int p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>padic_int p\\<^esub> ?y\n                    \\<in> carrier (padic_int p)\n\ngoal (4 subgoals):\n 1. \\<one>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x\n 4. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> x", "show \"\\<one>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)", "by (metis padic_int_simps(1,5) assms  padic_one_in_padic_set)"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>padic_int p\\<^esub> \\<in> carrier (padic_int p)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> x", "show \"\\<And>x y z. \n            x \\<in> carrier (padic_int p) \\<Longrightarrow>\n            y \\<in> carrier (padic_int p) \\<Longrightarrow> \n            z \\<in> carrier (padic_int p) \\<Longrightarrow>\n            x \\<otimes>\\<^bsub>padic_int p\\<^esub> y \\<otimes>\\<^bsub>padic_int p\\<^esub> z = x \\<otimes>\\<^bsub>padic_int p\\<^esub> (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)", "using assms padic_mult_assoc"], ["proof (prove)\nusing this:\n  prime p\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p);\n   ?y \\<in> carrier (padic_int ?p); ?z \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>padic_int ?p\\<^esub>\n                    ?y \\<otimes>\\<^bsub>padic_int ?p\\<^esub>\n                    ?z =\n                    ?x \\<otimes>\\<^bsub>padic_int ?p\\<^esub>\n                    (?y \\<otimes>\\<^bsub>padic_int ?p\\<^esub> ?z)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         (y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier (padic_int p); ?y \\<in> carrier (padic_int p);\n   ?z \\<in> carrier (padic_int p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                    ?y \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                    ?z =\n                    ?x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                    (?y \\<otimes>\\<^bsub>padic_int p\\<^esub> ?z)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> x", "show \"\\<And>x. x \\<in> carrier (padic_int p) \\<Longrightarrow> \\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x", "using assms  padic_one_id"], ["proof (prove)\nusing this:\n  prime p\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> \\<one>\\<^bsub>padic_int ?p\\<^esub> \\<otimes>\\<^bsub>padic_int ?p\\<^esub>\n                    ?x =\n                    ?x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       \\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n       x =\n       x", "by blast"], ["proof (state)\nthis:\n  ?x \\<in> carrier (padic_int p) \\<Longrightarrow>\n  \\<one>\\<^bsub>padic_int p\\<^esub> \\<otimes>\\<^bsub>padic_int p\\<^esub>\n  ?x =\n  ?x\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> x", "show \"\\<And>x y. \n          x \\<in> carrier (padic_int p) \\<Longrightarrow>\n          y \\<in> carrier (padic_int p) \\<Longrightarrow>\n          x \\<otimes>\\<^bsub>padic_int p\\<^esub> y = y \\<otimes>\\<^bsub>padic_int p\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> x", "using padic_mult_comm"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p);\n   ?y \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>padic_int ?p\\<^esub> ?y =\n                    ?y \\<otimes>\\<^bsub>padic_int ?p\\<^esub> ?x\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>padic_int p\\<^esub> y =\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> x", "by (simp add: assms)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier (padic_int p);\n   ?y \\<in> carrier (padic_int p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>padic_int p\\<^esub> ?y =\n                    ?y \\<otimes>\\<^bsub>padic_int p\\<^esub> ?x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma padic_int_is_cring:\n  assumes \"prime p\"\n  shows \"cring (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring (padic_int p)", "proof (rule cringI)"], ["proof (state)\ngoal (3 subgoals):\n 1. abelian_group (padic_int p)\n 2. Group.comm_monoid (padic_int p)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                          y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "show \"abelian_group (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. abelian_group (padic_int p)", "by (simp add: assms padic_is_abelian_group)"], ["proof (state)\nthis:\n  abelian_group (padic_int p)\n\ngoal (2 subgoals):\n 1. Group.comm_monoid (padic_int p)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                          y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "show \"Group.comm_monoid (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.comm_monoid (padic_int p)", "by (simp add: assms padic_is_comm_monoid)"], ["proof (state)\nthis:\n  Group.comm_monoid (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                          y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "show \"\\<And>x y z.\n       x \\<in> carrier (padic_int p) \\<Longrightarrow>\n       y \\<in> carrier (padic_int p) \\<Longrightarrow>\n       z \\<in> carrier (padic_int p) \\<Longrightarrow>\n       (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) \\<otimes>\\<^bsub>padic_int p\\<^esub> z =\n         x \\<otimes>\\<^bsub>padic_int p\\<^esub> z \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<otimes>\\<^bsub>padic_int p\\<^esub> z \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                          y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                          y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                          y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "assume Ax: \" x \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  x \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                          y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "assume Ay: \" y \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  y \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                          y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "assume Az: \" z \\<in> carrier (padic_int p)\""], ["proof (state)\nthis:\n  z \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (padic_int p);\n        y \\<in> carrier (padic_int p);\n        z \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                          y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                         z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                         y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "show \"(x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) \\<otimes>\\<^bsub>padic_int p\\<^esub> z \n          = x \\<otimes>\\<^bsub>padic_int p\\<^esub> z \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<otimes>\\<^bsub>padic_int p\\<^esub> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n    z =\n    x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n    z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n    y \\<otimes>\\<^bsub>padic_int p\\<^esub> z", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n         y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z)\n        xa =\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n        xa", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n         y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z)\n        xa =\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n        xa", "have Ex: \" (x n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "using Ax padic_set_def padic_int_simps"], ["proof (prove)\nusing this:\n  x \\<in> carrier (padic_int p)\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. x n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  x n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n         y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z)\n        xa =\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n        xa", "have Ey: \" (y n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "using Ay padic_set_def padic_int_simps"], ["proof (prove)\nusing this:\n  y \\<in> carrier (padic_int p)\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. y n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  y n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n         y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z)\n        xa =\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n        xa", "have Ez: \" (z n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z n \\<in> carrier (residue_ring (p ^ n))", "using Az padic_set_def padic_int_simps"], ["proof (prove)\nusing this:\n  z \\<in> carrier (padic_int p)\n  padic_set ?p =\n  {f. (\\<forall>m. f m \\<in> carrier (residue_ring (?p ^ m))) \\<and>\n      (\\<forall>n m. m < n \\<longrightarrow> residue (?p ^ m) (f n) = f m)}\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. z n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  z n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n         y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z)\n        xa =\n       (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n        z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n        y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n        xa", "show \"( (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y) \\<otimes>\\<^bsub>padic_int p\\<^esub> z) n \n            = (x \\<otimes>\\<^bsub>padic_int p\\<^esub> z \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<otimes>\\<^bsub>padic_int p\\<^esub> z) n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "proof(cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "by (metis Ax Ay Az assms padic_add_closed padic_int_simps(4) padic_int_simps(5) padic_mult_in_padic_set padic_set_zero_res)"], ["proof (state)\nthis:\n  ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n    y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n   n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "have \"residues (p^n)\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residues (p ^ n)", "by (simp add: assms residues_n)"], ["proof (state)\nthis:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "then"], ["proof (chain)\npicking this:\n  residues (p ^ n)", "show ?thesis"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "using Ex Ey Ez cring.cring_simprules(13) padic_add_res padic_int_simps\n            padic_mult_res residues.cring"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n  x n \\<in> carrier (residue_ring (p ^ n))\n  y n \\<in> carrier (residue_ring (p ^ n))\n  z n \\<in> carrier (residue_ring (p ^ n))\n  \\<lbrakk>cring ?R; ?x \\<in> carrier ?R; ?y \\<in> carrier ?R;\n   ?z \\<in> carrier ?R\\<rbrakk>\n  \\<Longrightarrow> (?x \\<oplus>\\<^bsub>?R\\<^esub>\n                     ?y) \\<otimes>\\<^bsub>?R\\<^esub>\n                    ?z =\n                    ?x \\<otimes>\\<^bsub>?R\\<^esub>\n                    ?z \\<oplus>\\<^bsub>?R\\<^esub>\n                    ?y \\<otimes>\\<^bsub>?R\\<^esub> ?z\n  padic_add ?p ?f ?g ?n =\n  ?f ?n \\<oplus>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n  padic_mult ?p ?f ?g ?n =\n  ?f ?n \\<otimes>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n\ngoal (1 subgoal):\n 1. ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n      y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z)\n     n =\n    (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n     z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n     y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n     n", "by fastforce"], ["proof (state)\nthis:\n  ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n    y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n   n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ((x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n    y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   z)\n   n =\n  (x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n   z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y \\<otimes>\\<^bsub>padic_int p\\<^esub> z)\n   n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n   y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n  z =\n  x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n  z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n  y \\<otimes>\\<^bsub>padic_int p\\<^esub> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> carrier (padic_int p); ?y \\<in> carrier (padic_int p);\n   ?z \\<in> carrier (padic_int p)\\<rbrakk>\n  \\<Longrightarrow> (?x \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                     ?y) \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                    ?z =\n                    ?x \\<otimes>\\<^bsub>padic_int p\\<^esub>\n                    ?z \\<oplus>\\<^bsub>padic_int p\\<^esub>\n                    ?y \\<otimes>\\<^bsub>padic_int p\\<^esub> ?z\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The $p$-adic ring has no nontrivial zero divisors. Note that this argument is short because we have proved that the valuation is multiplicative on nonzero elements, which is where the primality assumption is used.\\<close>"], ["", "lemma padic_no_zero_divisors:\nassumes \"prime p\"\nassumes \"a \\<in> carrier (padic_int p)\"\nassumes \"b \\<in>carrier (padic_int p)\"\nassumes \"a \\<noteq>\\<zero>\\<^bsub>padic_int p\\<^esub> \"\nassumes \"b \\<noteq>\\<zero>\\<^bsub>padic_int p\\<^esub> \"\nshows \"a \\<otimes>\\<^bsub>padic_int p\\<^esub> b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>padic_int p\\<^esub> b \\<noteq>\n    \\<zero>\\<^bsub>padic_int p\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>padic_int p\\<^esub> b =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    False", "assume C: \"a \\<otimes>\\<^bsub>padic_int p\\<^esub> b = \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (state)\nthis:\n  a \\<otimes>\\<^bsub>padic_int p\\<^esub> b =\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>padic_int p\\<^esub> b =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have 0: \"a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or> b = \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "proof(cases \"a = \\<zero>\\<^bsub>padic_int p\\<^esub>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>\n 2. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "case True"], ["proof (state)\nthis:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (2 subgoals):\n 1. a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>\n 2. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "then"], ["proof (chain)\npicking this:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "by auto"], ["proof (state)\nthis:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n  b = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "case False"], ["proof (state)\nthis:\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "have \"\\<not> b  \\<noteq>\\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow> False", "assume \"b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (state)\nthis:\n  b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow> False", "have \"padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) = (padic_val p a) + (padic_val p b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) =\n    padic_val p a + padic_val p b", "using False assms(1) assms(2) assms(3) assms(5) val_prod padic_int_simps"], ["proof (prove)\nusing this:\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  prime p\n  a \\<in> carrier (padic_int p)\n  b \\<in> carrier (padic_int p)\n  b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  \\<lbrakk>prime ?p; ?f \\<in> padic_set ?p; ?g \\<in> padic_set ?p;\n   ?f \\<noteq> padic_zero ?p; ?g \\<noteq> padic_zero ?p\\<rbrakk>\n  \\<Longrightarrow> padic_val ?p (padic_mult ?p ?f ?g) =\n                    padic_val ?p ?f + padic_val ?p ?g\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) =\n    padic_val p a + padic_val p b", "by auto"], ["proof (state)\nthis:\n  padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) =\n  padic_val p a + padic_val p b\n\ngoal (1 subgoal):\n 1. b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) =\n  padic_val p a + padic_val p b", "have \"padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) \\<noteq> -1\""], ["proof (prove)\nusing this:\n  padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) =\n  padic_val p a + padic_val p b\n\ngoal (1 subgoal):\n 1. padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) \\<noteq> - 1", "using False \\<open>b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\\<close> padic_val_def padic_int_simps"], ["proof (prove)\nusing this:\n  padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) =\n  padic_val p a + padic_val p b\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) \\<noteq> - 1", "by auto"], ["proof (state)\nthis:\n  padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) \\<noteq> - 1\n\ngoal (1 subgoal):\n 1. b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) \\<noteq> - 1", "show False"], ["proof (prove)\nusing this:\n  padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) \\<noteq> - 1\n\ngoal (1 subgoal):\n 1. False", "using C padic_val_def padic_int_simps"], ["proof (prove)\nusing this:\n  padic_val p (a \\<otimes>\\<^bsub>padic_int p\\<^esub> b) \\<noteq> - 1\n  a \\<otimes>\\<^bsub>padic_int p\\<^esub> b =\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "then"], ["proof (chain)\npicking this:\n  \\<not> b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n    b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "by blast"], ["proof (state)\nthis:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n  b = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n  b = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using \"0\" assms(4) assms(5)"], ["proof (prove)\nusing this:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n  b = \\<zero>\\<^bsub>padic_int p\\<^esub>\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma padic_int_is_domain:\n  assumes \"prime p\"\n  shows \"domain (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domain (padic_int p)", "proof(rule domainI)"], ["proof (state)\ngoal (3 subgoals):\n 1. cring (padic_int p)\n 2. \\<one>\\<^bsub>padic_int p\\<^esub> \\<noteq>\n    \\<zero>\\<^bsub>padic_int p\\<^esub>\n 3. \\<And>a b.\n       \\<lbrakk>a \\<otimes>\\<^bsub>padic_int p\\<^esub> b =\n                \\<zero>\\<^bsub>padic_int p\\<^esub>;\n        a \\<in> carrier (padic_int p);\n        b \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n                         b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "show \"cring (padic_int p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring (padic_int p)", "using padic_int_is_cring assms(1)"], ["proof (prove)\nusing this:\n  prime ?p \\<Longrightarrow> cring (padic_int ?p)\n  prime p\n\ngoal (1 subgoal):\n 1. cring (padic_int p)", "by auto"], ["proof (state)\nthis:\n  cring (padic_int p)\n\ngoal (2 subgoals):\n 1. \\<one>\\<^bsub>padic_int p\\<^esub> \\<noteq>\n    \\<zero>\\<^bsub>padic_int p\\<^esub>\n 2. \\<And>a b.\n       \\<lbrakk>a \\<otimes>\\<^bsub>padic_int p\\<^esub> b =\n                \\<zero>\\<^bsub>padic_int p\\<^esub>;\n        a \\<in> carrier (padic_int p);\n        b \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n                         b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "show \"\\<one>\\<^bsub>padic_int p\\<^esub> \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>padic_int p\\<^esub> \\<noteq>\n    \\<zero>\\<^bsub>padic_int p\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>padic_int p\\<^esub> =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    False", "assume \"\\<one>\\<^bsub>padic_int p\\<^esub> = \\<zero>\\<^bsub>padic_int p\\<^esub> \""], ["proof (state)\nthis:\n  \\<one>\\<^bsub>padic_int p\\<^esub> = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>padic_int p\\<^esub> =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<one>\\<^bsub>padic_int p\\<^esub> = \\<zero>\\<^bsub>padic_int p\\<^esub>", "have \"(\\<one>\\<^bsub>padic_int p\\<^esub>) 1 = \\<zero>\\<^bsub>padic_int p\\<^esub> 1\""], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>padic_int p\\<^esub> = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>padic_int p\\<^esub> 1 =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> 1", "by auto"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>padic_int p\\<^esub> 1 = \\<zero>\\<^bsub>padic_int p\\<^esub> 1\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>padic_int p\\<^esub> =\n    \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<one>\\<^bsub>padic_int p\\<^esub> 1 = \\<zero>\\<^bsub>padic_int p\\<^esub> 1", "show False"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>padic_int p\\<^esub> 1 = \\<zero>\\<^bsub>padic_int p\\<^esub> 1\n\ngoal (1 subgoal):\n 1. False", "using padic_int_simps(1,2)"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>padic_int p\\<^esub> 1 = \\<zero>\\<^bsub>padic_int p\\<^esub> 1\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n\ngoal (1 subgoal):\n 1. False", "unfolding padic_one_def padic_zero_def"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>padic_int p\\<^esub> 1 = \\<zero>\\<^bsub>padic_int p\\<^esub> 1\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = (\\<lambda>n. if n = 0 then 0 else 1)\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = (\\<lambda>n. 0)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>padic_int p\\<^esub> \\<noteq>\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<otimes>\\<^bsub>padic_int p\\<^esub> b =\n                \\<zero>\\<^bsub>padic_int p\\<^esub>;\n        a \\<in> carrier (padic_int p);\n        b \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n                         b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "show \"\\<And>a b. a \\<otimes>\\<^bsub>padic_int p\\<^esub> b = \\<zero>\\<^bsub>padic_int p\\<^esub>   \\<Longrightarrow>\n              a \\<in> carrier (padic_int p) \\<Longrightarrow> \n              b \\<in> carrier (padic_int p) \\<Longrightarrow> \n              a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or> b = \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<otimes>\\<^bsub>padic_int p\\<^esub> b =\n                \\<zero>\\<^bsub>padic_int p\\<^esub>;\n        a \\<in> carrier (padic_int p);\n        b \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n                         b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "using assms padic_no_zero_divisors"], ["proof (prove)\nusing this:\n  prime p\n  \\<lbrakk>prime ?p; ?a \\<in> carrier (padic_int ?p);\n   ?b \\<in> carrier (padic_int ?p);\n   ?a \\<noteq> \\<zero>\\<^bsub>padic_int ?p\\<^esub>;\n   ?b \\<noteq> \\<zero>\\<^bsub>padic_int ?p\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?a \\<otimes>\\<^bsub>padic_int ?p\\<^esub> ?b \\<noteq>\n                    \\<zero>\\<^bsub>padic_int ?p\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<otimes>\\<^bsub>padic_int p\\<^esub> b =\n                \\<zero>\\<^bsub>padic_int p\\<^esub>;\n        a \\<in> carrier (padic_int p);\n        b \\<in> carrier (padic_int p)\\<rbrakk>\n       \\<Longrightarrow> a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n                         b = \\<zero>\\<^bsub>padic_int p\\<^esub>", "by (meson prime_nat_int_transfer)"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<otimes>\\<^bsub>padic_int p\\<^esub> ?b =\n           \\<zero>\\<^bsub>padic_int p\\<^esub>;\n   ?a \\<in> carrier (padic_int p); ?b \\<in> carrier (padic_int p)\\<rbrakk>\n  \\<Longrightarrow> ?a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<or>\n                    ?b = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "section\\<open>The Ultrametric Inequality:\\<close>"], ["", "lemma padic_val_ultrametric:\n  assumes \"prime p\"\n  assumes \"a \\<in> carrier (padic_int p) \"\n  assumes \"b \\<in> carrier (padic_int p) \"\n  assumes \"a \\<noteq> \\<zero>\\<^bsub>(padic_int p)\\<^esub>\"\n  assumes \"b \\<noteq> \\<zero>\\<^bsub>(padic_int p)\\<^esub>\"\n  assumes  \"a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b \\<noteq> \\<zero>\\<^bsub>(padic_int p)\\<^esub>\"\n  shows \"padic_val p (a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b) \\<ge> min (padic_val p a) (padic_val p b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "let ?va = \" nat (padic_val p a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "let ?vb = \"nat (padic_val p b)\""], ["proof (state)\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "let ?vab = \"nat (padic_val p (a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b))\""], ["proof (state)\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "have P:\" \\<not> ?vab < min ?va ?vb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n           < min (nat (padic_val p a)) (nat (padic_val p b))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "assume P0: \"?vab < min ?va ?vb\""], ["proof (state)\nthis:\n  nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n  < min (nat (padic_val p a)) (nat (padic_val p b))\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n  < min (nat (padic_val p a)) (nat (padic_val p b))", "have \"Suc ?vab \\<le> min ?va ?vb\""], ["proof (prove)\nusing this:\n  nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n  < min (nat (padic_val p a)) (nat (padic_val p b))\n\ngoal (1 subgoal):\n 1. Suc (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)))\n    \\<le> min (nat (padic_val p a)) (nat (padic_val p b))", "using Suc_leI"], ["proof (prove)\nusing this:\n  nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n  < min (nat (padic_val p a)) (nat (padic_val p b))\n  ?m < ?n \\<Longrightarrow> Suc ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. Suc (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)))\n    \\<le> min (nat (padic_val p a)) (nat (padic_val p b))", "by blast"], ["proof (state)\nthis:\n  Suc (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)))\n  \\<le> min (nat (padic_val p a)) (nat (padic_val p b))\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "have \"(a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b) \\<in> carrier (padic_int p) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<oplus>\\<^bsub>padic_int p\\<^esub> b \\<in> carrier (padic_int p)", "using assms(1) assms(2) assms(3)  padic_add_closed"], ["proof (prove)\nusing this:\n  prime p\n  a \\<in> carrier (padic_int p)\n  b \\<in> carrier (padic_int p)\n  \\<lbrakk>prime ?p; ?x \\<in> carrier (padic_int ?p);\n   ?y \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>padic_int ?p\\<^esub> ?y\n                    \\<in> carrier (padic_int ?p)\n\ngoal (1 subgoal):\n 1. a \\<oplus>\\<^bsub>padic_int p\\<^esub> b \\<in> carrier (padic_int p)", "by simp"], ["proof (state)\nthis:\n  a \\<oplus>\\<^bsub>padic_int p\\<^esub> b \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  a \\<oplus>\\<^bsub>padic_int p\\<^esub> b \\<in> carrier (padic_int p)", "have C: \"(a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b) (?vab + 1) \\<noteq>  \\<zero>\\<^bsub>residue_ring (p^(?vab + 1))\\<^esub>\""], ["proof (prove)\nusing this:\n  a \\<oplus>\\<^bsub>padic_int p\\<^esub> b \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n     (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) +\n      1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>", "using val_of_nonzero(1) assms(6)"], ["proof (prove)\nusing this:\n  a \\<oplus>\\<^bsub>padic_int p\\<^esub> b \\<in> carrier (padic_int p)\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f) + 1) \\<noteq>\n                    \\<zero>\\<^bsub>residue_ring (?p ^ (nat (padic_val ?p ?f) + 1))\\<^esub>\n  a \\<oplus>\\<^bsub>padic_int p\\<^esub> b \\<noteq>\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n     (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) +\n      1) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>", "by (simp add: padic_int_def val_of_nonzero(1) assms(1))"], ["proof (state)\nthis:\n  (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n   (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) +\n    1) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "have S: \"(a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b) (?vab + 1) = (a (?vab + 1)) \\<oplus>\\<^bsub>residue_ring (p^((?vab + 1)))\\<^esub> (b ((?vab + 1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n     (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n    a (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) +\n       1) \\<oplus>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n    b (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)", "by (simp add: padic_int_def padic_add_def)"], ["proof (state)\nthis:\n  (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n   (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n  a (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) +\n     1) \\<oplus>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n  b (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "have \"int (?vab + 1) \\<le> padic_val p a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n    \\<le> padic_val p a", "using P0"], ["proof (prove)\nusing this:\n  nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n  < min (nat (padic_val p a)) (nat (padic_val p b))\n\ngoal (1 subgoal):\n 1. int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n    \\<le> padic_val p a", "using Suc_le_eq"], ["proof (prove)\nusing this:\n  nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n  < min (nat (padic_val p a)) (nat (padic_val p b))\n  (Suc ?m \\<le> ?n) = (?m < ?n)\n\ngoal (1 subgoal):\n 1. int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n    \\<le> padic_val p a", "by auto"], ["proof (state)\nthis:\n  int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n  \\<le> padic_val p a\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n  \\<le> padic_val p a", "have A: \"(a (?vab + 1)) = \\<zero>\\<^bsub>residue_ring (p^((?vab + 1)))\\<^esub> \""], ["proof (prove)\nusing this:\n  int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n  \\<le> padic_val p a\n\ngoal (1 subgoal):\n 1. a (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>", "using assms(1) assms(2) zero_below_val padic_int_simps residue_ring_def"], ["proof (prove)\nusing this:\n  int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n  \\<le> padic_val p a\n  prime p\n  a \\<in> carrier (padic_int p)\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = 0\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. a (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>", "by auto"], ["proof (state)\nthis:\n  a (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "have \"int (?vab + 1) \\<le> padic_val p b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n    \\<le> padic_val p b", "using P0"], ["proof (prove)\nusing this:\n  nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n  < min (nat (padic_val p a)) (nat (padic_val p b))\n\ngoal (1 subgoal):\n 1. int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n    \\<le> padic_val p b", "using Suc_le_eq"], ["proof (prove)\nusing this:\n  nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n  < min (nat (padic_val p a)) (nat (padic_val p b))\n  (Suc ?m \\<le> ?n) = (?m < ?n)\n\ngoal (1 subgoal):\n 1. int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n    \\<le> padic_val p b", "by auto"], ["proof (state)\nthis:\n  int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n  \\<le> padic_val p b\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n  \\<le> padic_val p b", "have B: \"(b (?vab + 1)) = \\<zero>\\<^bsub>residue_ring (p^((?vab + 1)))\\<^esub> \""], ["proof (prove)\nusing this:\n  int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n  \\<le> padic_val p b\n\ngoal (1 subgoal):\n 1. b (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>", "using assms(1) assms(3) zero_below_val"], ["proof (prove)\nusing this:\n  int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n  \\<le> padic_val p b\n  prime p\n  b \\<in> carrier (padic_int p)\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = 0\n\ngoal (1 subgoal):\n 1. b (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>", "by (metis A \\<open>int (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) \\<le> padic_val p a\\<close> \n          assms(2) padic_int_simps(3,5))"], ["proof (state)\nthis:\n  b (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "have \"p^(?vab + 1) > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p ^\n        (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)", "using assms(1)"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. 1 < p ^\n        (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)", "by (metis add.commute plus_1_eq_Suc power_gt1 prime_gt_1_int)"], ["proof (state)\nthis:\n  1 < p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  1 < p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)", "have \"residues (p^(?vab + 1))\""], ["proof (prove)\nusing this:\n  1 < p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n\ngoal (1 subgoal):\n 1. residues\n     (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))", "using less_imp_of_nat_less residues.intro"], ["proof (prove)\nusing this:\n  1 < p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1)\n  ?m < ?n \\<Longrightarrow> of_nat ?m < of_nat ?n\n  1 < ?m \\<Longrightarrow> residues ?m\n\ngoal (1 subgoal):\n 1. residues\n     (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))", "by fastforce"], ["proof (state)\nthis:\n  residues\n   (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  residues\n   (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))", "have \"(a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b) (?vab + 1) = \\<zero>\\<^bsub>residue_ring (p^((?vab + 1)))\\<^esub> \""], ["proof (prove)\nusing this:\n  residues\n   (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\n\ngoal (1 subgoal):\n 1. (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n     (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>", "using A B"], ["proof (prove)\nusing this:\n  residues\n   (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\n  a (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n  b (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n     (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n    \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>", "by (metis (no_types, lifting) S cring.cring_simprules(2)\n          cring.cring_simprules(8) residues.cring)"], ["proof (state)\nthis:\n  (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n   (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n    < min (nat (padic_val p a)) (nat (padic_val p b)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n   (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>", "show False"], ["proof (prove)\nusing this:\n  (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n   (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "using C"], ["proof (prove)\nusing this:\n  (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n   (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1) =\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n  (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n   (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) +\n    1) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ (nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n         < min (nat (padic_val p a)) (nat (padic_val p b))\n\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "have A0: \"(padic_val p a) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p a", "using assms(4) padic_val_def"], ["proof (prove)\nusing this:\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p a", "by(auto simp: padic_int_def)"], ["proof (state)\nthis:\n  0 \\<le> padic_val p a\n\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "have A1: \"(padic_val p b) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p b", "using assms(5) padic_val_def"], ["proof (prove)\nusing this:\n  b \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p b", "by(auto simp: padic_int_def)"], ["proof (state)\nthis:\n  0 \\<le> padic_val p b\n\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "have A2: \"padic_val p (a \\<oplus>\\<^bsub>(padic_int p)\\<^esub> b) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "using assms(6) padic_val_def"], ["proof (prove)\nusing this:\n  a \\<oplus>\\<^bsub>padic_int p\\<^esub> b \\<noteq>\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "by(auto simp: padic_int_def)"], ["proof (state)\nthis:\n  0 \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "using P A0 A1 A2"], ["proof (prove)\nusing this:\n  \\<not> nat (padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b))\n         < min (nat (padic_val p a)) (nat (padic_val p b))\n  0 \\<le> padic_val p a\n  0 \\<le> padic_val p b\n  0 \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n\ngoal (1 subgoal):\n 1. min (padic_val p a) (padic_val p b)\n    \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)", "by linarith"], ["proof (state)\nthis:\n  min (padic_val p a) (padic_val p b)\n  \\<le> padic_val p (a \\<oplus>\\<^bsub>padic_int p\\<^esub> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma padic_a_inv:\n  assumes \"prime p\"\n  assumes \"a \\<in> carrier (padic_int p)\"\n  shows \"\\<ominus>\\<^bsub>padic_int p\\<^esub> a = (\\<lambda> n. \\<ominus>\\<^bsub>residue_ring (p^n)\\<^esub> (a n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>padic_int p\\<^esub> a =\n    (\\<lambda>n. \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n       \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n       \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "show \"(\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n = \\<ominus>\\<^bsub>residue_ring (p^n)\\<^esub> a n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "proof(cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "by (metis (no_types, lifting) abelian_group.a_inv_closed assms(1) assms(2) padic_int_simps(5) \n          padic_is_abelian_group padic_set_zero_res power_0 residue_1_prop residue_ring_def ring.simps(1))"], ["proof (state)\nthis:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n  \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "have R: \"residues (p^n)\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residues (p ^ n)", "by (simp add: assms(1) residues_n)"], ["proof (state)\nthis:\n  residues (p ^ n)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "have \"(\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<oplus>\\<^bsub>padic_int p\\<^esub> a = \\<zero>\\<^bsub>padic_int p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>padic_int p\\<^esub> a \\<oplus>\\<^bsub>padic_int p\\<^esub>\n    a =\n    \\<zero>\\<^bsub>padic_int p\\<^esub>", "by (simp add: abelian_group.l_neg assms(1) assms(2) padic_is_abelian_group)"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>padic_int p\\<^esub> a \\<oplus>\\<^bsub>padic_int p\\<^esub>\n  a =\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "then"], ["proof (chain)\npicking this:\n  \\<ominus>\\<^bsub>padic_int p\\<^esub> a \\<oplus>\\<^bsub>padic_int p\\<^esub>\n  a =\n  \\<zero>\\<^bsub>padic_int p\\<^esub>", "have P: \"(\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n \\<oplus>\\<^bsub>residue_ring (p^n)\\<^esub> a n = 0\""], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>padic_int p\\<^esub> a \\<oplus>\\<^bsub>padic_int p\\<^esub>\n  a =\n  \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n     n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n    a n =\n    0", "by (metis padic_add_res padic_int_simps(2) padic_int_simps(3) padic_zero_def)"], ["proof (state)\nthis:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n   n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  a n =\n  0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "have Q: \"(a n) \\<in> carrier (residue_ring (p^n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a n \\<in> carrier (residue_ring (p ^ n))", "using assms(2) padic_set_res_closed"], ["proof (prove)\nusing this:\n  a \\<in> carrier (padic_int p)\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. a n \\<in> carrier (residue_ring (p ^ n))", "by(auto simp: padic_int_def)"], ["proof (state)\nthis:\n  a n \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "using R Q residues.cring"], ["proof (prove)\nusing this:\n  residues (p ^ n)\n  a n \\<in> carrier (residue_ring (p ^ n))\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n    \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n", "by (metis P abelian_group.a_inv_closed abelian_group.minus_equality assms(1) assms(2) \n          padic_int_simps(5) padic_is_abelian_group padic_set_res_closed residues.abelian_group\n          residues.res_zero_eq)"], ["proof (state)\nthis:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n  \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n  \\<ominus>\\<^bsub>residue_ring (p ^ n)\\<^esub> a n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma padic_val_a_inv:\n  assumes \"prime p\"\n  assumes \"a \\<in> carrier (padic_int p)\"\n  shows \"padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "proof(cases \"a = \\<zero>\\<^bsub>padic_int p\\<^esub>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n 2. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "case True"], ["proof (state)\nthis:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (2 subgoals):\n 1. a = \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n 2. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "then"], ["proof (chain)\npicking this:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  a = \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "by (metis abelian_group.a_inv_closed abelian_group.r_neg abelian_groupE(5) assms(1) assms(2) padic_is_abelian_group)"], ["proof (state)\nthis:\n  padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "case False"], ["proof (state)\nthis:\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "have 0: \"\\<And> n. (a n) = \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub> \\<Longrightarrow> (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n = \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       a n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> \\<Longrightarrow>\n       (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n       \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "using padic_a_inv"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime ?p; ?a \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> \\<ominus>\\<^bsub>padic_int ?p\\<^esub> ?a =\n                    (\\<lambda>n.\n                        \\<ominus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?a n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       a n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> \\<Longrightarrow>\n       (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n =\n       \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "by (metis (no_types, lifting) assms(1) assms(2) cring.cring_simprules(22) power_0 residue_1_prop residues.cring residues_n)"], ["proof (state)\nthis:\n  a ?n = \\<zero>\\<^bsub>residue_ring (p ^ ?n)\\<^esub> \\<Longrightarrow>\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) ?n =\n  \\<zero>\\<^bsub>residue_ring (p ^ ?n)\\<^esub>\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "have 1: \"\\<And> n. (a n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub> \\<Longrightarrow> (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n \\<noteq> \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       a n \\<noteq>\n       \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> \\<Longrightarrow>\n       (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n \\<noteq>\n       \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "using padic_a_inv"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime ?p; ?a \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> \\<ominus>\\<^bsub>padic_int ?p\\<^esub> ?a =\n                    (\\<lambda>n.\n                        \\<ominus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?a n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       a n \\<noteq>\n       \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub> \\<Longrightarrow>\n       (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) n \\<noteq>\n       \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "by (metis (no_types, lifting) abelian_group.a_inv_closed abelian_group.minus_minus assms(1)\n        assms(2) cring.cring_simprules(22) padic_int_simps(5) padic_is_abelian_group padic_set_zero_res\n        residues.cring residues_n)"], ["proof (state)\nthis:\n  a ?n \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ ?n)\\<^esub> \\<Longrightarrow>\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) ?n \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ ?n)\\<^esub>\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "have A:\"padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<ge> (padic_val p a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p a \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p a \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "have \"\\<not> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) < (padic_val p a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n           < padic_val p a", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "assume \"padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) < padic_val p a\""], ["proof (state)\nthis:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) < padic_val p a\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "let ?n = \"padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "let ?m = \" padic_val p a\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "have \"(\\<ominus>\\<^bsub>padic_int p\\<^esub> a)  \\<noteq> (padic_zero p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>padic_int p\\<^esub> a \\<noteq> padic_zero p", "by (metis False abelian_group.l_neg assms(1) assms(2) padic_add_zero padic_int_simps(2) padic_is_abelian_group)"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>padic_int p\\<^esub> a \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<ominus>\\<^bsub>padic_int p\\<^esub> a \\<noteq> padic_zero p", "have P0: \"?n \\<ge>0\""], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>padic_int p\\<^esub> a \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "by (simp add: padic_val_def)"], ["proof (state)\nthis:\n  0 \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "have P1: \"?m \\<ge>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p a", "using False"], ["proof (prove)\nusing this:\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p a", "using \\<open>0 \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\\<close> \n          \\<open>padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) < padic_val p a\\<close>"], ["proof (prove)\nusing this:\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  0 \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) < padic_val p a\n\ngoal (1 subgoal):\n 1. 0 \\<le> padic_val p a", "by linarith"], ["proof (state)\nthis:\n  0 \\<le> padic_val p a\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "have \"(Suc (nat ?n)) < Suc (nat (padic_val p a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))\n    < Suc (nat (padic_val p a))", "using P0 P1  \\<open>padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) < padic_val p a\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n  0 \\<le> padic_val p a\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) < padic_val p a\n\ngoal (1 subgoal):\n 1. Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))\n    < Suc (nat (padic_val p a))", "by linarith"], ["proof (state)\nthis:\n  Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))\n  < Suc (nat (padic_val p a))\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))\n  < Suc (nat (padic_val p a))", "have \"int (Suc (nat ?n)) \\<le> (padic_val p a)\""], ["proof (prove)\nusing this:\n  Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))\n  < Suc (nat (padic_val p a))\n\ngoal (1 subgoal):\n 1. int (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\n    \\<le> padic_val p a", "using of_nat_less_iff"], ["proof (prove)\nusing this:\n  Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))\n  < Suc (nat (padic_val p a))\n  (of_nat ?m < of_nat ?n) = (?m < ?n)\n\ngoal (1 subgoal):\n 1. int (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\n    \\<le> padic_val p a", "by linarith"], ["proof (state)\nthis:\n  int (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\n  \\<le> padic_val p a\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  int (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\n  \\<le> padic_val p a", "have \"a (Suc (nat ?n)) =  \\<zero>\\<^bsub>residue_ring (p ^ ((Suc (nat ?n))))\\<^esub>\""], ["proof (prove)\nusing this:\n  int (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\n  \\<le> padic_val p a\n\ngoal (1 subgoal):\n 1. a (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>", "using assms(1) assms(2) zero_below_val residue_ring_def"], ["proof (prove)\nusing this:\n  int (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\n  \\<le> padic_val p a\n  prime p\n  a \\<in> carrier (padic_int p)\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = 0\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. a (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>", "by(auto simp: padic_int_def)"], ["proof (state)\nthis:\n  a (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  a (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>", "have \"(\\<ominus>\\<^bsub>padic_int p\\<^esub> a) (Suc (nat ?n)) =  \\<zero>\\<^bsub>residue_ring (p ^ ((Suc (nat ?n))))\\<^esub>\""], ["proof (prove)\nusing this:\n  a (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n     (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>", "using 0"], ["proof (prove)\nusing this:\n  a (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>\n  a ?n = \\<zero>\\<^bsub>residue_ring (p ^ ?n)\\<^esub> \\<Longrightarrow>\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) ?n =\n  \\<zero>\\<^bsub>residue_ring (p ^ ?n)\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n     (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>", "by simp"], ["proof (state)\nthis:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n   (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    < padic_val p a \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n   (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>", "show False"], ["proof (prove)\nusing this:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n   (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>\n\ngoal (1 subgoal):\n 1. False", "using below_val_zero assms"], ["proof (prove)\nusing this:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n   (Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)))) =\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a))))\\<^esub>\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   ?x (Suc ?n) \\<noteq>\n   \\<zero>\\<^bsub>residue_ring (?p ^ Suc ?n)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> padic_val ?p ?x \\<le> int ?n\n  prime p\n  a \\<in> carrier (padic_int p)\n\ngoal (1 subgoal):\n 1. False", "by (metis Suc_eq_plus1 \\<open>\\<ominus>\\<^bsub>padic_int p\\<^esub> a \\<noteq> padic_zero p\\<close> abelian_group.a_inv_closed \n            padic_int_simps(5) padic_is_abelian_group val_of_nonzero(1))"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n         < padic_val p a\n\ngoal (1 subgoal):\n 1. padic_val p a \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "then"], ["proof (chain)\npicking this:\n  \\<not> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n         < padic_val p a", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n         < padic_val p a\n\ngoal (1 subgoal):\n 1. padic_val p a \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "by linarith"], ["proof (state)\nthis:\n  padic_val p a \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_val p a \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "have B: \"padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> (padic_val p a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a", "let ?n = \"nat (padic_val p a)\""], ["proof (state)\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a", "have \"a (Suc ?n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc ?n))\\<^esub> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. a (Suc (nat (padic_val p a))) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>", "using False assms(2) val_of_nonzero(1)"], ["proof (prove)\nusing this:\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  a \\<in> carrier (padic_int p)\n  \\<lbrakk>?f \\<in> padic_set ?p; ?f \\<noteq> padic_zero ?p;\n   prime ?p\\<rbrakk>\n  \\<Longrightarrow> ?f (nat (padic_val ?p ?f) + 1) \\<noteq>\n                    \\<zero>\\<^bsub>residue_ring (?p ^ (nat (padic_val ?p ?f) + 1))\\<^esub>\n\ngoal (1 subgoal):\n 1. a (Suc (nat (padic_val p a))) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>", "by (metis padic_int_simps(2,5) Suc_eq_plus1 assms(1))"], ["proof (state)\nthis:\n  a (Suc (nat (padic_val p a))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a", "then"], ["proof (chain)\npicking this:\n  a (Suc (nat (padic_val p a))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>", "have \"(\\<ominus>\\<^bsub>padic_int p\\<^esub> a) (Suc ?n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc ?n))\\<^esub> \""], ["proof (prove)\nusing this:\n  a (Suc (nat (padic_val p a))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n     (Suc (nat (padic_val p a))) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>", "using 1"], ["proof (prove)\nusing this:\n  a (Suc (nat (padic_val p a))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>\n  a ?n \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ ?n)\\<^esub> \\<Longrightarrow>\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) ?n \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ ?n)\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n     (Suc (nat (padic_val p a))) \\<noteq>\n    \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>", "by blast"], ["proof (state)\nthis:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n   (Suc (nat (padic_val p a))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a", "then"], ["proof (chain)\npicking this:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n   (Suc (nat (padic_val p a))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>", "have  \"padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> int ?n\""], ["proof (prove)\nusing this:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n   (Suc (nat (padic_val p a))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    \\<le> int (nat (padic_val p a))", "using assms(1) assms(2) below_val_zero"], ["proof (prove)\nusing this:\n  (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n   (Suc (nat (padic_val p a))) \\<noteq>\n  \\<zero>\\<^bsub>residue_ring (p ^ Suc (nat (padic_val p a)))\\<^esub>\n  prime p\n  a \\<in> carrier (padic_int p)\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   ?x (Suc ?n) \\<noteq>\n   \\<zero>\\<^bsub>residue_ring (?p ^ Suc ?n)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> padic_val ?p ?x \\<le> int ?n\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n    \\<le> int (nat (padic_val p a))", "by (metis padic_int_simps(5) abelian_group.a_inv_closed padic_is_abelian_group)"], ["proof (state)\nthis:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n  \\<le> int (nat (padic_val p a))\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a", "then"], ["proof (chain)\npicking this:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n  \\<le> int (nat (padic_val p a))", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n  \\<le> int (nat (padic_val p a))\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a", "using False padic_val_def padic_int_simps"], ["proof (prove)\nusing this:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n  \\<le> int (nat (padic_val p a))\n  a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a", "by auto"], ["proof (state)\nthis:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a\n\ngoal (1 subgoal):\n 1. a \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub> \\<Longrightarrow>\n    padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "then"], ["proof (chain)\npicking this:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a\n\ngoal (1 subgoal):\n 1. padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "using A B"], ["proof (prove)\nusing this:\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a\n  padic_val p a \\<le> padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n  padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a) \\<le> padic_val p a\n\ngoal (1 subgoal):\n 1. padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)", "by auto"], ["proof (state)\nthis:\n  padic_val p a = padic_val p (\\<ominus>\\<^bsub>padic_int p\\<^esub> a)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}