{"file_name": "/home/qj213/afp-2021-10-22/thys/Padic_Ints/Padic_Integers.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Padic_Ints", "problem_names": ["lemma Zp_defs:\n\"\\<one> = padic_one p\"\n\"\\<zero> = padic_zero p\"\n\"carrier Zp = padic_set p\"\n\"(\\<otimes>) = padic_mult p\"\n\"(\\<oplus>) = padic_add p\"", "lemma(in field) field_inv:\n  assumes \"a \\<in> carrier R\"\n  assumes \"a \\<noteq>\\<zero>\"\n  shows \"inv\\<^bsub>R\\<^esub> a \\<otimes> a = \\<one>\"\n        \"a \\<otimes> inv\\<^bsub>R\\<^esub> a = \\<one>\"\n        \"inv \\<^bsub>R\\<^esub> a \\<in> carrier R\"", "lemma(in padic_integers) p_residue_alt_def:\n\"p_residue m n = n mod (p^m)\"", "lemma(in padic_integers) p_residue_range:\n\"p_residue m n \\<in> {0..<p^m}\"", "lemma(in padic_integers) p_residue_mod:\n  assumes \"m > k\"\n  shows \"p_residue k (p_residue m n)  = p_residue k n\"", "lemma(in padic_integers) p_residue_padic_int:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"m \\<ge> k\"\n  shows \"p_residue k (x m) = x k\"", "lemma (in padic_integers) p_res_ring_zero:\n\"\\<zero>\\<^bsub>Zp_res_ring k\\<^esub> = 0\"", "lemma (in padic_integers) p_res_ring_one:\n  assumes \"k > 0\"\n  shows \"\\<one>\\<^bsub>Zp_res_ring k\\<^esub> = 1\"", "lemma (in padic_integers) p_res_ring_car:\n\"carrier (Zp_res_ring k) = {0..<p^k}\"", "lemma(in padic_integers) p_residue_range':\n\"p_residue m n \\<in> carrier (Zp_res_ring m)\"", "lemma(in padic_integers) p_res_ring_1_field:\n\"field (Zp_res_ring 1)\"", "lemma(in padic_integers) p_res_ring_0:\n\"carrier (Zp_res_ring 0) = {0}\"", "lemma(in padic_integers) p_res_ring_0':\n  assumes \"x \\<in> carrier (Zp_res_ring 0)\"\n  shows \"x = 0\"", "lemma(in padic_integers) p_residues:\n  assumes \"m >0\"\n  shows \"residues (p^m)\"", "lemma(in padic_integers) R_cring:\n  assumes \"m >0\"\n  shows \"cring (Zp_res_ring m)\"", "lemma(in padic_integers) R_comm_monoid:\n  assumes \"m >0\"\n  shows \"comm_monoid (Zp_res_ring m)\"", "lemma(in padic_integers) zero_rep:\n\"\\<zero> = (\\<lambda>m. (p_residue m 0))\"", "lemma(in padic_integers) residue_add:\n  shows \"(x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y) = (x + y) mod p^k\"", "lemma(in padic_integers) residue_add_closed:\n  shows \"(x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> carrier (Zp_res_ring k)\"", "lemma(in padic_integers) residue_add_closed':\n  shows \"(x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> {0..<p^k}\"", "lemma(in padic_integers) residue_mult:\n  shows \"(x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y) = (x * y) mod p^k\"", "lemma(in padic_integers) residue_mult_closed:\n  shows \"(x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> carrier (Zp_res_ring k)\"", "lemma(in padic_integers) residue_mult_closed':\n  shows \"(x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> {0..<p^k}\"", "lemma(in padic_integers) residue_add_assoc:\n  shows \"(x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> z = x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> (y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> z)\"", "lemma(in padic_integers) residue_mult_comm:\n  shows \"x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y = y \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> x\"", "lemma(in padic_integers) residue_mult_assoc:\n  shows \"(x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> z = x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> (y \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> z)\"", "lemma(in padic_integers) residue_add_comm:\n  shows \"x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y = y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> x\"", "lemma(in padic_integers) residue_minus_car:\n  assumes \"y \\<in> carrier (Zp_res_ring k)\"\n  shows \"(x \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y) = (x - y) mod p^k\"", "lemma(in padic_integers) residue_a_inv:\n  shows \"\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y = \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (y mod p^k)\"", "lemma(in padic_integers) residue_a_inv_closed:\n\"\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y \\<in> carrier (Zp_res_ring k)\"", "lemma(in padic_integers) residue_minus:\n\"(x \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y) = (x - y) mod p^k\"", "lemma(in padic_integers) residue_minus_closed:\n\"(x \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> carrier (Zp_res_ring k)\"", "lemma (in padic_integers) residue_plus_zero_r:\n\"0 \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y = y mod p^k\"", "lemma (in padic_integers) residue_plus_zero_l:\n\"y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> 0 = y mod p^k\"", "lemma (in padic_integers) residue_times_zero_r:\n\"0 \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y = 0\"", "lemma (in padic_integers) residue_times_zero_l:\n\"y \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> 0 = 0\"", "lemma (in padic_integers) residue_times_one_r:\n\"1 \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y = y mod p^k\"", "lemma (in padic_integers) residue_times_one_l:\n\"y \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> 1 = y mod p^k\"", "lemma (in padic_integers) residue_of_sum:\n\"(a \\<oplus> b) k = (a k) \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> (b k)\"", "lemma (in padic_integers) residue_of_sum':\n \"(a \\<oplus> b) k = ((a k) + (b k)) mod p^k\"", "lemma (in padic_integers) residue_closed[simp]:\n  assumes \"b \\<in> carrier Zp\"\n  shows \"b k \\<in> carrier (Zp_res_ring k)\"", "lemma (in padic_integers) residue_of_diff:\n  assumes \"b \\<in> carrier Zp\"\n  shows \"(a \\<ominus> b) k = (a k) \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (b k)\"", "lemma (in padic_integers) residue_of_prod:\n\"(a \\<otimes> b) k = (a k) \\<otimes> \\<^bsub>Zp_res_ring k\\<^esub> (b k)\"", "lemma (in padic_integers) residue_of_prod':\n\"(a \\<otimes> b) k = ((a k) * (b k)) mod (p^k)\"", "lemma (in padic_integers) residue_of_one:\n  assumes \"k > 0\"\n  shows  \"\\<one> k = \\<one>\\<^bsub>Zp_res_ring k\\<^esub>\"\n         \"\\<one> k = 1\"", "lemma (in padic_integers) residue_of_zero:\n  shows  \"\\<zero> k = \\<zero>\\<^bsub>Zp_res_ring k\\<^esub>\"\n        \"\\<zero> k = 0\"", "lemma(in padic_integers) Zp_residue_mult_zero:\n  assumes  \"a k = 0\"\n  shows \"(a \\<otimes> b) k = 0\" \"(b \\<otimes> a) k = 0\"", "lemma(in padic_integers) Zp_residue_add_zero:\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"(a:: padic_int) k = 0\"\n  shows \"(a \\<oplus> b) k = b k\" \"(b \\<oplus> a) k = b k\"", "lemma padic_add_assoc0:\nassumes \"prime p\"\nshows  \"padic_add p (padic_add p x y) z = padic_add p x (padic_add p y z)\"", "lemma(in padic_integers) add_assoc:\n\"a \\<oplus> b \\<oplus> c = a \\<oplus> (b \\<oplus> c)\"", "lemma padic_add_comm0:\nassumes \"prime p\"\nshows  \"(padic_add p x y)= (padic_add p y x)\"", "lemma(in padic_integers) add_comm:\n\"a \\<oplus> b = b \\<oplus> a\"", "lemma padic_mult_assoc0:\nassumes \"prime p\"\nshows  \"padic_mult p (padic_mult p x y) z = padic_mult p x (padic_mult p y z)\"", "lemma(in padic_integers) mult_assoc:\n\"a \\<otimes> b \\<otimes> c = a \\<otimes> (b \\<otimes> c)\"", "lemma padic_mult_comm0:\nassumes \"prime p\"\nshows  \"(padic_mult p x y)= (padic_mult p y x)\"", "lemma(in padic_integers) mult_comm:\n\"a \\<otimes> b = b \\<otimes> a\"", "lemma(in padic_integers) mult_zero_l:\n\"a \\<otimes> \\<zero> = \\<zero>\"", "lemma(in padic_integers) mult_zero_r:\n\"\\<zero> \\<otimes> a = \\<zero>\"", "lemma (in padic_integers) p_residue_ring_car_memI:\n  assumes \"(m::int) \\<ge>0\"\n  assumes \"m < p^k\"\n  shows \"m \\<in> carrier (Zp_res_ring k)\"", "lemma (in padic_integers) p_residue_ring_car_memE:\n  assumes \"m \\<in> carrier (Zp_res_ring k)\"\n  shows \"m < p^k\" \"m \\<ge> 0\"", "lemma (in padic_integers) residues_closed:\n  assumes \"a \\<in> carrier Zp\"\n  shows \"a k \\<in> carrier (Zp_res_ring k)\"", "lemma (in padic_integers) mod_in_carrier:\n  \"a mod (p^n) \\<in> carrier (Zp_res_ring n)\"", "lemma (in padic_integers) Zp_residue_a_inv:\n  assumes \"a \\<in> carrier Zp\"\n  shows \"(\\<ominus> a) k = \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (a k)\"\n        \"(\\<ominus> a) k = (- (a k)) mod (p^k)\"", "lemma (in padic_integers) residue_of_diff':\n  assumes \"b \\<in> carrier Zp\"\n  shows \"(a \\<ominus> b) k = ((a k) - (b k)) mod (p^k)\"", "lemma (in padic_integers) residue_UnitsI:\n  assumes \"n \\<ge> 1\"\n  assumes \"(k::int) > 0\"\n  assumes \"k < p^n\"\n  assumes \"coprime k p\"\n  shows \"k \\<in> Units (Zp_res_ring n)\"", "lemma (in padic_integers) residue_UnitsE:\n  assumes \"n \\<ge> 1\"\n  assumes \"k \\<in> Units (Zp_res_ring n)\"\n  shows  \"coprime k p\"", "lemma(in padic_integers) residue_units_nilpotent:\n  assumes \"m > 0\"\n  assumes \"k = card (Units (Zp_res_ring m))\"\n  assumes \"x \\<in> (Units (Zp_res_ring m))\"\n  shows \"x[^]\\<^bsub>Zp_res_ring m\\<^esub> k = 1\"", "lemma (in padic_integers) residue_1_unit:\n  assumes \"m > 0\"\n  shows \"1 \\<in> Units (Zp_res_ring m)\"\n        \"\\<one>\\<^bsub>Zp_res_ring m\\<^esub> \\<in> Units (Zp_res_ring m)\"", "lemma (in padic_integers) zero_not_in_residue_units:\n  assumes \"n \\<ge> 1\"\n  shows \"(0::int) \\<notin>  Units (Zp_res_ring n)\"", "lemma (in padic_integers) residue_units_card_geq_2:\n  assumes \"n \\<ge>2\"\n  shows \"card (Units (Zp_res_ring n)) \\<ge> 2\"", "lemma (in padic_integers) residue_ring_card:\n\"finite (carrier (Zp_res_ring n)) \\<and> card (carrier (Zp_res_ring n)) = nat (p^n)\"", "lemma(in comm_monoid) UnitsI:\n  assumes \"a \\<in> carrier G\"\n  assumes \"b \\<in> carrier G\"\n  assumes \"a \\<otimes> b = \\<one>\"\n  shows \"a \\<in> Units G\" \"b \\<in> Units G\"", "lemma(in comm_monoid) is_invI:\n  assumes \"a \\<in> carrier G\"\n  assumes \"b \\<in> carrier G\"\n  assumes \"a \\<otimes> b = \\<one>\"\n  shows \"inv\\<^bsub>G\\<^esub> b = a\" \"inv\\<^bsub>G\\<^esub> a = b\"", "lemma (in padic_integers) residue_of_Units:\n  assumes \"k > 0\"\n  assumes \"a \\<in> Units Zp\"\n  shows \"a k \\<in> Units (Zp_res_ring k)\"", "lemma(in ring) int_inc_zero:\n\"[(0::int)]\\<cdot> \\<one> = \\<zero>\"", "lemma(in ring) int_inc_zero':\n  assumes \"x \\<in> carrier R\"\n  shows \"[(0::int)] \\<cdot> x = \\<zero>\"", "lemma(in ring) nat_inc_zero:\n\"[(0::nat)]\\<cdot> \\<one> = \\<zero>\"", "lemma(in ring) nat_mult_zero:\n\"[(0::nat)]\\<cdot> x = \\<zero>\"", "lemma(in ring) nat_inc_closed:\n  fixes n::nat\n  shows \"[n] \\<cdot> \\<one> \\<in> carrier R\"", "lemma(in ring) nat_mult_closed:\n  fixes n::nat\n  assumes \"x \\<in> carrier R\"\n  shows \"[n] \\<cdot> x \\<in> carrier R\"", "lemma(in ring) int_inc_closed:\n  fixes n::int\n  shows \"[n] \\<cdot> \\<one> \\<in> carrier R\"", "lemma(in ring) int_mult_closed:\n  fixes n::int\n  assumes \"x \\<in> carrier R\"\n  shows \"[n] \\<cdot> x \\<in> carrier R\"", "lemma(in ring) nat_inc_prod:\n  fixes n::nat\n  fixes m::nat\n  shows \"[m]\\<cdot>([n] \\<cdot> \\<one>) = [(m*n)]\\<cdot>\\<one>\"", "lemma(in ring) nat_inc_prod':\n  fixes n::nat\n  fixes m::nat\n  shows \"[(m*n)]\\<cdot>\\<one> = [m]\\<cdot> \\<one> \\<otimes> ([n] \\<cdot> \\<one>)\"", "lemma(in padic_integers) Zp_nat_inc_zero:\n  shows \"[(0::nat)] \\<cdot> x = \\<zero>\"", "lemma(in padic_integers) Zp_int_inc_zero':\n  shows \"[(0::int)] \\<cdot> x = \\<zero>\"", "lemma(in padic_integers) Zp_nat_inc_closed:\n  fixes n::nat\n  shows \"[n] \\<cdot> \\<one> \\<in> carrier Zp\"", "lemma(in padic_integers) Zp_nat_mult_closed:\n  fixes n::nat\n  assumes \"x \\<in> carrier Zp\"\n  shows \"[n] \\<cdot> x \\<in> carrier Zp\"", "lemma(in padic_integers) Zp_int_inc_closed:\n  fixes n::int\n  shows \"[n] \\<cdot> \\<one> \\<in> carrier Zp\"", "lemma(in padic_integers) Zp_int_mult_closed:\n  fixes n::int\n  assumes \"x \\<in> carrier Zp\"\n  shows \"[n] \\<cdot> x \\<in> carrier Zp\"", "lemma(in padic_integers) Zp_nat_inc_rep:\n  fixes n::nat\n  shows \"[n] \\<cdot> \\<one> = (\\<lambda> m. p_residue m n)\"", "lemma(in padic_integers) Zp_nat_inc_res:\n  fixes n::nat\n  shows \"([n] \\<cdot> \\<one>) k = n mod (p^k)\"", "lemma(in padic_integers) Zp_int_inc_rep:\n  fixes n::int\n  shows  \"[n] \\<cdot> \\<one> = (\\<lambda> m. p_residue m n )\"", "lemma(in padic_integers) Zp_int_inc_res:\n  fixes n::int\n  shows  \"([n] \\<cdot> \\<one>) k = n mod (p^k)\"", "lemma(in padic_integers) p_natpow_prod:\n\"\\<p>[^](n::nat) \\<otimes> \\<p>[^](m::nat) = \\<p>[^](n + m)\"", "lemma(in padic_integers) p_natintpow_prod:\n  assumes \"(m::int) \\<ge> 0\"\n  shows \"\\<p>[^](n::nat) \\<otimes> \\<p>[^]m = \\<p>[^](n + m)\"", "lemma(in padic_integers) p_intnatpow_prod:\n  assumes \"(n::int) \\<ge> 0\"\n  shows \"\\<p>[^]n \\<otimes> \\<p>[^](m::nat) = \\<p>[^](m + n)\"", "lemma(in padic_integers) p_int_pow_prod:\n  assumes \"(n::int) \\<ge> 0\"\n  assumes \"(m::int) \\<ge> 0\"\n  shows \"\\<p>[^]n \\<otimes> \\<p>[^]m = \\<p>[^](m + n)\"", "lemma(in padic_integers) p_natpow_prod_Suc:\n\"\\<p> \\<otimes> \\<p>[^](m::nat) = \\<p>[^](Suc m)\"\n\"\\<p>[^](m::nat)  \\<otimes> \\<p> = \\<p>[^](Suc m)\"", "lemma(in padic_integers) power_residue:\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"k > 0\"\n  shows \"(a[^]\\<^bsub>Zp\\<^esub> (n::nat)) k = (a k)^n mod (p^k)\"", "lemma(in padic_integers) ord_Zp_of_a_inv:\n  assumes \"a \\<in> nonzero Zp\"\n  shows \"ord_Zp a = ord_Zp (\\<ominus>a)\"", "lemma(in padic_integers) val_Zp_of_a_inv:\n  assumes \"a \\<in> carrier Zp\"\n  shows \"val_Zp a = val_Zp (\\<ominus>a)\"", "lemma(in padic_integers) ord_of_nonzero:\n  assumes \"x \\<in>carrier Zp\"\n  assumes \"ord_Zp x \\<ge>0\" \n  shows \"x \\<noteq> \\<zero>\"\n        \"x \\<in> nonzero Zp\"", "lemma(in padic_integers) not_nonzero_Zp:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<notin> nonzero Zp\"\n  shows \"x = \\<zero>\"", "lemma(in padic_integers) not_nonzero_Qp:\n  assumes \"x \\<in> carrier Q\\<^sub>p\"\n  assumes \"x \\<notin> nonzero Q\\<^sub>p\"\n  shows \"x = \\<zero>\\<^bsub>Q\\<^sub>p\\<^esub>\"", "lemma(in padic_integers) val_ord_Zp:\n  assumes \"a \\<noteq> \\<zero>\"\n  shows \"val_Zp a = eint (ord_Zp a)\"", "lemma(in padic_integers) ord_pos:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq> \\<zero>\"\n  shows \"ord_Zp x \\<ge> 0\"", "lemma(in padic_integers) val_pos:\n  assumes \"x \\<in> carrier Zp\"\n  shows \"val_Zp x \\<ge> 0\"", "lemma(in padic_integers) ord_nat:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"int (nat (ord_Zp x)) = ord_Zp x\"", "lemma(in padic_integers) zero_below_ord:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"n \\<le> ord_Zp x\"\n  shows  \"x n =  0\"", "lemma(in padic_integers) zero_below_val_Zp:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"n \\<le> val_Zp x\"\n  shows  \"x n =  0\"", "lemma(in padic_integers) below_ord_zero:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x (Suc n) \\<noteq>  0\"\n  shows  \"n \\<ge> ord_Zp x\"", "lemma(in padic_integers) below_val_Zp_zero:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x (Suc n) \\<noteq>  0\"\n  shows  \"n \\<ge> val_Zp x\"", "lemma(in padic_integers) nonzero_imp_ex_nonzero_res:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq> \\<zero>\"\n  shows \"\\<exists>k. x (Suc k) \\<noteq> 0\"", "lemma(in padic_integers) ord_suc_nonzero:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"ord_Zp x = n\"\n  shows \"x (Suc n) \\<noteq> 0\"", "lemma(in padic_integers) above_ord_nonzero:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"n > ord_Zp x\"\n  shows \"x n \\<noteq> 0\"", "lemma(in padic_integers) ord_Zp_geq:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x n = 0\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"ord_Zp x \\<ge> n\"", "lemma(in padic_integers) ord_equals:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x (Suc n) \\<noteq> 0\"\n  assumes \"x n = 0\"\n  shows \"ord_Zp x = n\"", "lemma(in padic_integers) ord_Zp_p:\n\"ord_Zp \\<p> = (1::int)\"", "lemma(in padic_integers) ord_Zp_one:\n\"ord_Zp \\<one> = 0\"", "lemma(in padic_integers) ord_Zp_mult:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  shows \"(ord_Zp (x \\<otimes>\\<^bsub>Zp\\<^esub> y)) = (ord_Zp x) + (ord_Zp y)\"", "lemma(in padic_integers) ord_Zp_pow:\n  assumes \"x \\<in> nonzero Zp\"\n  shows \"ord_Zp (x[^](n::nat)) = n*(ord_Zp x)\"", "lemma(in padic_integers) val_Zp_pow:\n  assumes \"x \\<in> nonzero Zp\"\n  shows \"val_Zp (x[^](n::nat)) = (n*(ord_Zp x))\"", "lemma(in padic_integers) val_Zp_pow':\n  assumes \"x \\<in> nonzero Zp\"\n  shows \"val_Zp (x[^](n::nat)) = n*(val_Zp x)\"", "lemma(in padic_integers) ord_Zp_p_pow:\n\"ord_Zp (\\<p>[^](n::nat)) = n\"", "lemma(in padic_integers) ord_Zp_p_int_pow:\n  assumes \"n \\<ge>0\"\n  shows \"ord_Zp (\\<p>[^](n::int)) = n\"", "lemma(in padic_integers) val_Zp_p:\n\"(val_Zp \\<p>) = 1\"", "lemma(in padic_integers) val_Zp_p_pow:\n\"val_Zp (\\<p>[^](n::nat)) = eint n\"", "lemma(in padic_integers) p_pow_res:\n  assumes \"(n::nat) \\<ge> m\"\n  shows \"(\\<p>[^]n) m = 0\"", "lemma(in padic_integers) p_pow_factor:\n  assumes \"(n::nat) \\<ge> m\"\n  shows \"(h \\<otimes> (\\<p>[^]n)) m = 0\"  \"(h \\<otimes> (\\<p>[^]n)) m = \\<zero>\\<^bsub>Zp_res_ring n\\<^esub>\"", "lemma(in padic_integers) ord_Zp_ultrametric:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"x \\<oplus> y \\<in> nonzero Zp\"\n  shows \"ord_Zp (x \\<oplus> y) \\<ge> min (ord_Zp x) (ord_Zp y)\"", "lemma (in padic_integers) ord_Zp_ultrametric_diff:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"x \\<noteq> y \"\n  shows \"ord_Zp (x \\<ominus> y) \\<ge> min (ord_Zp x) (ord_Zp y)\"", "lemma(in padic_integers) ord_Zp_not_equal_imp_notequal:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x \\<noteq> (ord_Zp y)\"\n  shows \"x \\<noteq> y\" \"x \\<ominus> y \\<noteq>\\<zero>\" \"x \\<oplus> y \\<noteq>\\<zero>\"", "lemma(in padic_integers) ord_Zp_ultrametric_eq:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x > (ord_Zp y)\"\n  shows \"ord_Zp (x \\<oplus> y) = ord_Zp y\"", "lemma(in padic_integers) ord_Zp_ultrametric_eq':\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x > (ord_Zp y)\"\n  shows \"ord_Zp (x \\<ominus> y) = ord_Zp y\"", "lemma(in padic_integers) ord_Zp_ultrametric_eq'':\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x > (ord_Zp y)\"\n  shows \"ord_Zp (y \\<ominus> x) = ord_Zp y\"", "lemma(in padic_integers) ord_Zp_not_equal_ord_plus_minus:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x \\<noteq> (ord_Zp y)\"\n  shows \"ord_Zp (x \\<ominus> y) = ord_Zp (x \\<oplus> y)\"", "lemma(in padic_integers) val_Zp_mult0:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"y \\<noteq>\\<zero>\"\n  shows \"(val_Zp (x \\<otimes>\\<^bsub>Zp\\<^esub> y)) = (val_Zp x) + (val_Zp y)\"", "lemma(in padic_integers) val_Zp_mult:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  shows \"(val_Zp (x \\<otimes>\\<^bsub>Zp\\<^esub> y)) = (val_Zp x) + (val_Zp y)\"", "lemma(in padic_integers) val_Zp_ultrametric0:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"y \\<noteq>\\<zero>\"\n  assumes \"x \\<oplus> y \\<noteq> \\<zero>\"\n  shows \"min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y) \"", "lemma(in padic_integers) val_Zp_ultrametric:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\" \n  shows \" min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)\"", "lemma (in padic_integers) val_Zp_ultrametric_diff:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\" \n  shows \"val_Zp (x \\<ominus> y) \\<ge> min (val_Zp x) (val_Zp y)\"", "lemma(in padic_integers) val_Zp_not_equal_imp_notequal:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x \\<noteq> val_Zp y\"\n  shows \"x \\<noteq> y\" \"x \\<ominus> y \\<noteq>\\<zero>\" \"x \\<oplus> y \\<noteq>\\<zero>\"", "lemma(in padic_integers) val_Zp_ultrametric_eq:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x > val_Zp y\"\n  shows \"val_Zp (x \\<oplus> y) = val_Zp y\"", "lemma(in padic_integers) val_Zp_ultrametric_eq':\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x > (val_Zp y)\"\n  shows \"val_Zp (x \\<ominus> y) = val_Zp y\"", "lemma(in padic_integers) val_Zp_ultrametric_eq'':\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x > (val_Zp y)\"\n  shows \"val_Zp (y \\<ominus> x) = val_Zp y\"", "lemma(in padic_integers) val_Zp_not_equal_ord_plus_minus:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x \\<noteq> (val_Zp y)\"\n  shows \"val_Zp (x \\<ominus> y) = val_Zp (x \\<oplus> y)\"", "lemma(in padic_integers) val_Zp_0_criterion:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x 1 \\<noteq> 0\"\n  shows \"val_Zp x = 0\"", "lemma(in padic_integers) unit_imp_val_Zp0:\n  assumes \"x \\<in> Units Zp\"\n  shows \"val_Zp x = 0\"", "lemma(in padic_integers) val_Zp0_imp_unit0:\n  assumes \"val_Zp x = 0\"\n  assumes \"x \\<in> carrier Zp\"\n  fixes n::nat\n  shows \"(x (Suc n)) \\<in> Units (Zp_res_ring (Suc n))\"", "lemma(in padic_integers) val_Zp0_imp_unit0':\n  assumes \"val_Zp x = 0\"\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"(n::nat) > 0\"\n  shows \"(x n) \\<in> Units (Zp_res_ring n)\"", "lemma(in cring) ring_hom_Units_inv:\n  assumes \"a \\<in> Units R\"\n  assumes \"cring S\"\n  assumes \"h \\<in> ring_hom R S\"\n  shows \"h (inv a) = inv\\<^bsub>S\\<^esub> h a\" \"h a \\<in> Units S\"", "lemma(in padic_integers) val_Zp_0_imp_unit:\n  assumes \"val_Zp x = 0\"\n  assumes \"x \\<in> carrier Zp\"\n  shows \"x \\<in> Units Zp\"", "lemma(in padic_integers) ord_Zp_eq_frac:\n  assumes \"a \\<in> nonzero Zp\"\n  assumes \"b \\<in> nonzero Zp\"\n  assumes \"c \\<in> nonzero Zp\"\n  assumes \"d \\<in> nonzero Zp\"\n  assumes \"a \\<otimes> d = b \\<otimes> c\"\n  shows \"(ord_Zp a) - (ord_Zp b) = (ord_Zp c) - (ord_Zp d)\"", "lemma(in padic_integers) val_Zp_eq_frac_0:\n  assumes \"a \\<in> nonzero Zp\"\n  assumes \"b \\<in> nonzero Zp\"\n  assumes \"c \\<in> nonzero Zp\"\n  assumes \"d \\<in> nonzero Zp\"\n  assumes \"a \\<otimes> d = b \\<otimes> c\"\n  shows \"(val_Zp a) - (val_Zp b) = (val_Zp c) - (val_Zp d)\"", "lemma(in cring) int_nat_pow_rep:\n\"[(k::int)]\\<cdot>\\<one> [^] (n::nat) = [(k^n)]\\<cdot>\\<one>\"", "lemma(in padic_integers) p_pow_rep0:\n  fixes n::nat\n  shows \"\\<p>[^]n = [(p^n)]\\<cdot>\\<one>\"", "lemma(in padic_integers) p_pow_nonzero:\n  shows \"(\\<p>[^](n::nat)) \\<in> carrier Zp\"\n        \"(\\<p>[^](n::nat)) \\<noteq> \\<zero>\"", "lemma(in padic_integers) p_pow_nonzero':\n  shows \"(\\<p>[^](n::nat)) \\<in> nonzero Zp\"", "lemma(in padic_integers) p_pow_rep:\n  fixes n::nat\n  shows \"(\\<p>[^]n) k = (p^n) mod (p^k)\"", "lemma(in padic_integers) p_pow_car:\n  assumes \" (n::int)\\<ge> 0\"\n  shows \"(\\<p>[^]n) \\<in> carrier Zp\"", "lemma(in padic_integers) p_int_pow_nonzero:\n  assumes \"(n::int) \\<ge>0\"\n  shows \"(\\<p>[^]n) \\<in> nonzero Zp\"", "lemma(in padic_integers) p_nonzero:\n  shows \"\\<p> \\<in> nonzero Zp\"", "lemma(in padic_integers) residue_factor_unique:\n  assumes \"k>0\"\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m+k))\"\n  shows \"u = (THE u. u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m+k)))\"", "lemma(in padic_integers) residue_factor_exists:\n  assumes \"m = nat (ord_Zp x)\"\n  assumes \"k > 0\"\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  obtains u where \"u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m+k))\"", "lemma(in padic_integers) ac_Zp_equation:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"k > 0\"\n  assumes \"m = nat (ord_Zp x)\"\n  shows \"(ac_Zp x k) \\<in> carrier (Zp_res_ring k) \\<and> (ac_Zp x k)*(p^m) = (x (m+k))\"", "lemma(in padic_integers) ac_Zp_res:\n  assumes \"m >k\"\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"p_residue k (ac_Zp x m) = (ac_Zp x k)\"", "lemma(in padic_integers) ac_Zp_in_Zp:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"ac_Zp x \\<in> carrier Zp\"", "lemma(in padic_integers) ac_Zp_is_Unit:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"ac_Zp x \\<in> Units Zp\"", "lemma(in padic_integers) ac_Zp_factors_x:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"x = (\\<p>[^](nat (ord_Zp x))) \\<otimes> (ac_Zp x)\" \"x = (\\<p>[^](ord_Zp x)) \\<otimes> (ac_Zp x)\"", "lemma(in padic_integers) ac_Zp_factors':\n  assumes \"x \\<in> nonzero Zp\"\n  shows \"x = [p] \\<cdot> \\<one> [^] ord_Zp x \\<otimes> ac_Zp x\"", "lemma(in padic_integers) ac_Zp_mult:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  shows \"ac_Zp (x \\<otimes> y) = (ac_Zp x) \\<otimes> (ac_Zp y)\"", "lemma(in padic_integers) ac_Zp_one:\n\"ac_Zp \\<one> = \\<one>\"", "lemma(in padic_integers) ac_Zp_inv:\n  assumes \"x \\<in> Units Zp\"\n  shows \"ac_Zp (inv\\<^bsub>Zp\\<^esub> x) = inv\\<^bsub>Zp\\<^esub> (ac_Zp x)\"", "lemma(in padic_integers) ac_Zp_of_Unit:\n  assumes \"val_Zp x = 0\"\n  assumes \"x \\<in> carrier Zp\"\n  shows \"ac_Zp x = x\"", "lemma(in padic_integers) ac_Zp_p:\n\"(ac_Zp \\<p>) = \\<one>\"", "lemma(in padic_integers) ac_Zp_p_nat_pow:\n\"(ac_Zp (\\<p> [^] (n::nat))) = \\<one>\"", "lemma(in monoid) int_pow_add: \n  fixes n::int \n  fixes m::int\n  assumes \"a \\<in> Units G\"\n  shows \"a [^] (n + m) = (a [^] n) \\<otimes> (a [^] m)\"", "lemma(in monoid)  int_pow_unit_closed: \n  fixes n::int \n  assumes \"a \\<in> Units G\"\n  shows \"a[^] n \\<in> Units G\"", "lemma(in monoid)  nat_pow_of_inv: \n  fixes n::nat \n  assumes \"a \\<in> Units G\"\n  shows \"inv a[^] n = inv (a[^] n)\"", "lemma(in monoid)  int_pow_of_inv:\n  fixes n::int\n  assumes \"a \\<in> Units G\"\n  shows \"inv a[^] n = inv  (a[^] n)\"", "lemma(in monoid)  int_pow_inv: \n  fixes n::int \n  assumes \"a \\<in> Units G\"\n  shows \"a[^] -n = inv  a[^] n\"", "lemma(in monoid)  int_pow_inv': \n  fixes n::int \n  assumes \"a \\<in> Units G\"\n  shows \"a[^] -n = inv  (a[^] n)\"", "lemma(in comm_monoid) inv_of_prod:\n  assumes \"a \\<in> Units G\"\n  assumes \"b \\<in> Units G\"\n  shows \"inv (a \\<otimes>  b) = (inv  a) \\<otimes> (inv  b)\"", "lemma(in padic_integers) eq_residue_mod:\n  assumes \"f \\<in> carrier Zp\"\n  assumes \"g \\<in> carrier Zp\"\n  assumes \"f k = g k\"\n  shows \"\\<exists>h. h \\<in> carrier Zp \\<and> f = g \\<oplus> (\\<p>[^]k)\\<otimes>h\"", "lemma(in padic_integers) eq_residue_mod':\n  assumes \"f \\<in> carrier Zp\"\n  assumes \"g \\<in> carrier Zp\"\n  assumes \"f k = g k\"\n  obtains h where  \"h \\<in> carrier Zp \\<and> f = g \\<oplus> (\\<p>[^]k)\\<otimes>h\"", "lemma(in padic_integers) ord_Zp_p_nat_unit:\n  assumes \"(n::nat) mod p \\<noteq> 0\"\n  shows \"ord_Zp ([n]\\<cdot>\\<one>) = 0\"", "lemma(in padic_integers) val_Zp_p_nat_unit:\n  assumes \"(n::nat) mod p \\<noteq> 0\"\n  shows \"val_Zp ([n]\\<cdot>\\<one>) = 0\"", "lemma(in padic_integers) nat_unit:\n  assumes \"(n::nat) mod p \\<noteq> 0\"\n  shows \"([n]\\<cdot>\\<one>) \\<in> Units Zp \"", "lemma(in padic_integers) ord_Zp_p_int_unit:\n  assumes \"(n::int) mod p \\<noteq> 0\"\n  shows \"ord_Zp ([n]\\<cdot>\\<one>) = 0\"", "lemma(in padic_integers) val_Zp_p_int_unit:\n  assumes \"(n::int) mod p \\<noteq> 0\"\n  shows \"val_Zp ([n]\\<cdot>\\<one>) = 0\"", "lemma(in padic_integers) int_unit:\n  assumes \"(n::int) mod p \\<noteq> 0\"\n  shows \"([n]\\<cdot>\\<one>) \\<in> Units Zp \"", "lemma(in padic_integers) int_decomp_ord:\n  assumes \"n = l*(p^k)\"\n  assumes \"l mod p \\<noteq> 0\"\n  shows \"ord_Zp ([n]\\<cdot>\\<one>) = k\"", "lemma(in padic_integers) int_decomp_val:\n  assumes \"n = l*(p^k)\"\n  assumes \"l mod p \\<noteq> 0\"\n  shows \"val_Zp ([n]\\<cdot>\\<one>) = k\"", "lemma(in padic_integers) Zp_char_0:\n  assumes \"(n::int) > 0\"\n  shows \"[n]\\<cdot>\\<one> \\<noteq> \\<zero>\"", "lemma(in padic_integers) Zp_char_0':\n  assumes \"(n::nat) > 0\"\n  shows \"[n]\\<cdot>\\<one> \\<noteq> \\<zero>\"", "lemma (in domain) not_eq_diff_nonzero:\n  assumes \"a \\<noteq> b\"\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in>carrier R\"\n  shows \"a \\<ominus> b \\<in> nonzero R\"", "lemma (in domain) minus_a_inv:\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  shows \"a \\<ominus> b = \\<ominus> (b \\<ominus> a)\"", "lemma(in ring) plus_diff_simp:\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  assumes \"c \\<in> carrier R\"\n  assumes  \"X = a \\<ominus> b\"\n  assumes \"Y = c \\<ominus> a\"\n  shows \"X \\<oplus> Y = c \\<ominus> b\"", "lemma (in padic_integers) Zp_residue_eq:\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"val_Zp (a \\<ominus> b) > k\"\n  shows \"(a k) = (b k)\"", "lemma (in padic_integers) Zp_residue_eq2:\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"(a k) = (b k)\" \n  assumes \"a \\<noteq> b\"\n  shows \"val_Zp (a \\<ominus> b) \\<ge> k\"", "lemma (in padic_integers) equal_val_Zp:\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"c \\<in> carrier Zp\"\n  assumes \"val_Zp a = val_Zp b\"\n  assumes \"val_Zp (c \\<ominus> a) > val_Zp b\"\n  shows \"val_Zp c = val_Zp b\"", "lemma (in padic_integers) equal_val_Zp':\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"c \\<in> carrier Zp\"\n  assumes \"val_Zp a = val_Zp b\"\n  assumes \"val_Zp c > val_Zp b\"\n  shows \"val_Zp (a \\<oplus> c) = val_Zp b\"", "lemma (in padic_integers) val_Zp_of_minus:\n  assumes \"a \\<in> carrier Zp\"\n  shows \"val_Zp a = val_Zp (\\<ominus> a)\""], "translations": [["", "lemma Zp_defs:\n\"\\<one> = padic_one p\"\n\"\\<zero> = padic_zero p\"\n\"carrier Zp = padic_set p\"\n\"(\\<otimes>) = padic_mult p\"\n\"(\\<oplus>) = padic_add p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<one> = padic_one p &&& \\<zero> = padic_zero p) &&&\n    carrier Zp = padic_set p &&&\n    (\\<otimes>) = padic_mult p &&& (\\<oplus>) = padic_add p", "unfolding Zp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<one>\\<^bsub>padic_int p\\<^esub> = padic_one p &&&\n     \\<zero>\\<^bsub>padic_int p\\<^esub> = padic_zero p) &&&\n    carrier (padic_int p) = padic_set p &&&\n    (\\<otimes>\\<^bsub>padic_int p\\<^esub>) = padic_mult p &&&\n    (\\<oplus>\\<^bsub>padic_int p\\<^esub>) = padic_add p", "using padic_int_simps"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>padic_int ?p\\<^esub> = padic_one ?p\n  \\<zero>\\<^bsub>padic_int ?p\\<^esub> = padic_zero ?p\n  (\\<oplus>\\<^bsub>padic_int ?p\\<^esub>) = padic_add ?p\n  (\\<otimes>\\<^bsub>padic_int ?p\\<^esub>) = padic_mult ?p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. (\\<one>\\<^bsub>padic_int p\\<^esub> = padic_one p &&&\n     \\<zero>\\<^bsub>padic_int p\\<^esub> = padic_zero p) &&&\n    carrier (padic_int p) = padic_set p &&&\n    (\\<otimes>\\<^bsub>padic_int p\\<^esub>) = padic_mult p &&&\n    (\\<oplus>\\<^bsub>padic_int p\\<^esub>) = padic_add p", "by auto"], ["", "end"], ["", "(*************************************************************************************************)\n(*************************************************************************************************)\n(***********************)"], ["", "section \\<open>Residue Rings\\<close>"], ["", "(*************************************)\n(*************************************************************************************************)\n(*************************************************************************************************)"], ["", "lemma(in field) field_inv:\n  assumes \"a \\<in> carrier R\"\n  assumes \"a \\<noteq>\\<zero>\"\n  shows \"inv\\<^bsub>R\\<^esub> a \\<otimes> a = \\<one>\"\n        \"a \\<otimes> inv\\<^bsub>R\\<^esub> a = \\<one>\"\n        \"inv \\<^bsub>R\\<^esub> a \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv a \\<otimes> a = \\<one> &&&\n    a \\<otimes> inv a = \\<one> &&& inv a \\<in> carrier R", "proof-"], ["proof (state)\ngoal (3 subgoals):\n 1. inv a \\<otimes> a = \\<one>\n 2. a \\<otimes> inv a = \\<one>\n 3. inv a \\<in> carrier R", "have \"a \\<in> Units R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> Units R", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. a \\<in> Units R", "by (simp add: local.field_Units)"], ["proof (state)\nthis:\n  a \\<in> Units R\n\ngoal (3 subgoals):\n 1. inv a \\<otimes> a = \\<one>\n 2. a \\<otimes> inv a = \\<one>\n 3. inv a \\<in> carrier R", "then"], ["proof (chain)\npicking this:\n  a \\<in> Units R", "show \"inv\\<^bsub>R\\<^esub> a \\<otimes> a = \\<one>\""], ["proof (prove)\nusing this:\n  a \\<in> Units R\n\ngoal (1 subgoal):\n 1. inv a \\<otimes> a = \\<one>", "by simp"], ["proof (state)\nthis:\n  inv a \\<otimes> a = \\<one>\n\ngoal (2 subgoals):\n 1. a \\<otimes> inv a = \\<one>\n 2. inv a \\<in> carrier R", "show \"a \\<otimes> inv a = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes> inv a = \\<one>", "using \\<open>a \\<in> Units R\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> Units R\n\ngoal (1 subgoal):\n 1. a \\<otimes> inv a = \\<one>", "by auto"], ["proof (state)\nthis:\n  a \\<otimes> inv a = \\<one>\n\ngoal (1 subgoal):\n 1. inv a \\<in> carrier R", "show \"inv \\<^bsub>R\\<^esub> a \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv a \\<in> carrier R", "by (simp add: \\<open>a \\<in> Units R\\<close>)"], ["proof (state)\nthis:\n  inv a \\<in> carrier R\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>$p_residue$ defines the standard projection maps between residue rings:\\<close>"], ["", "definition(in padic_integers) p_residue:: \"nat \\<Rightarrow> int \\<Rightarrow> _\" where\n\"p_residue m n \\<equiv> residue (p^m) n\""], ["", "lemma(in padic_integers) p_residue_alt_def:\n\"p_residue m n = n mod (p^m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p_residue m n = n mod p ^ m", "using residue_def"], ["proof (prove)\nusing this:\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. p_residue m n = n mod p ^ m", "by (simp add: p_residue_def)"], ["", "lemma(in padic_integers) p_residue_range:\n\"p_residue m n \\<in> {0..<p^m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p_residue m n \\<in> {0..<p ^ m}", "using p_residue_def int_ops(6) prime prime_gt_0_nat"], ["proof (prove)\nusing this:\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n  int (?a - ?b) = (if int ?a < int ?b then 0 else int ?a - int ?b)\n  prime p\n  prime ?p \\<Longrightarrow> 0 < ?p\n\ngoal (1 subgoal):\n 1. p_residue m n \\<in> {0..<p ^ m}", "by (metis Euclidean_Division.pos_mod_bound Euclidean_Division.pos_mod_sign atLeastLessThan_iff p_residue_alt_def prime_gt_0_int zero_less_power)"], ["", "lemma(in padic_integers) p_residue_mod:\n  assumes \"m > k\"\n  shows \"p_residue k (p_residue m n)  = p_residue k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p_residue k (p_residue m n) = p_residue k n", "using assms"], ["proof (prove)\nusing this:\n  k < m\n\ngoal (1 subgoal):\n 1. p_residue k (p_residue m n) = p_residue k n", "unfolding p_residue_def residue_def"], ["proof (prove)\nusing this:\n  k < m\n\ngoal (1 subgoal):\n 1. n mod p ^ m mod p ^ k = n mod p ^ k", "by (simp add: le_imp_power_dvd mod_mod_cancel)"], ["", "text\\<open>Compatibility of p\\_residue with elements of $\\mathbb{Z}_p$:\\<close>"], ["", "lemma(in padic_integers) p_residue_padic_int:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"m \\<ge> k\"\n  shows \"p_residue k (x m) = x k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p_residue k (x m) = x k", "using Zp_def assms(1) assms(2) padic_set_res_coherent prime"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  x \\<in> carrier Zp\n  k \\<le> m\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n  prime p\n\ngoal (1 subgoal):\n 1. p_residue k (x m) = x k", "by (simp add: p_residue_def padic_int_simps(5))"], ["", "text\\<open>Definition of residue rings:\\<close>"], ["", "abbreviation(in padic_integers) (input) Zp_res_ring:: \"nat \\<Rightarrow> _ ring\" where\n\"(Zp_res_ring n) \\<equiv> residue_ring (p^n)\""], ["", "lemma (in padic_integers) p_res_ring_zero:\n\"\\<zero>\\<^bsub>Zp_res_ring k\\<^esub> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> = 0", "by (simp add: residue_ring_def)"], ["", "lemma (in padic_integers) p_res_ring_one:\n  assumes \"k > 0\"\n  shows \"\\<one>\\<^bsub>Zp_res_ring k\\<^esub> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>residue_ring (p ^ k)\\<^esub> = 1", "using assms"], ["proof (prove)\nusing this:\n  0 < k\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>residue_ring (p ^ k)\\<^esub> = 1", "by (simp add: residue_ring_def)"], ["", "lemma (in padic_integers) p_res_ring_car:\n\"carrier (Zp_res_ring k) = {0..<p^k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (residue_ring (p ^ k)) = {0..<p ^ k}", "using residue_ring_def[of \"p^k\"]"], ["proof (prove)\nusing this:\n  residue_ring (p ^ k) =\n  \\<lparr>carrier = {0..p ^ k - 1},\n     monoid.mult = \\<lambda>x y. x * y mod p ^ k, one = 1, zero = 0,\n     add = \\<lambda>x y. (x + y) mod p ^ k\\<rparr>\n\ngoal (1 subgoal):\n 1. carrier (residue_ring (p ^ k)) = {0..<p ^ k}", "by auto"], ["", "lemma(in padic_integers) p_residue_range':\n\"p_residue m n \\<in> carrier (Zp_res_ring m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p_residue m n \\<in> carrier (residue_ring (p ^ m))", "using p_residue_range  residue_ring_def prime prime_gt_0_nat p_residue_def"], ["proof (prove)\nusing this:\n  p_residue ?m ?n \\<in> {0..<p ^ ?m}\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n  prime p\n  prime ?p \\<Longrightarrow> 0 < ?p\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n\ngoal (1 subgoal):\n 1. p_residue m n \\<in> carrier (residue_ring (p ^ m))", "by fastforce"], ["", "text\\<open>First residue ring is a field:\\<close>"], ["", "lemma(in padic_integers) p_res_ring_1_field:\n\"field (Zp_res_ring 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. field (residue_ring (p ^ 1))", "by (metis int_nat_eq power_one_right prime prime_ge_0_int prime_nat_int_transfer residues_prime.intro residues_prime.is_field)"], ["", "text\\<open>$0^{th}$ residue ring is the zero ring:\\<close>"], ["", "lemma(in padic_integers) p_res_ring_0:\n\"carrier (Zp_res_ring 0) = {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (residue_ring (p ^ 0)) = {0}", "by (simp add:  residue_ring_def)"], ["", "lemma(in padic_integers) p_res_ring_0':\n  assumes \"x \\<in> carrier (Zp_res_ring 0)\"\n  shows \"x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = 0", "using p_res_ring_0 assms"], ["proof (prove)\nusing this:\n  carrier (residue_ring (p ^ 0)) = {0}\n  x \\<in> carrier (residue_ring (p ^ 0))\n\ngoal (1 subgoal):\n 1. x = 0", "by blast"], ["", "text\\<open>If $m>0$ then $Zp\\_res\\_ring m$ is an instance of the residues locale:\\<close>"], ["", "lemma(in padic_integers) p_residues:\n  assumes \"m >0\"\n  shows \"residues (p^m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residues (p ^ m)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. residues (p ^ m)", "have \"p^m > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p ^ m", "using assms"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. 1 < p ^ m", "by (simp add: prime prime_gt_1_int)"], ["proof (state)\nthis:\n  1 < p ^ m\n\ngoal (1 subgoal):\n 1. residues (p ^ m)", "then"], ["proof (chain)\npicking this:\n  1 < p ^ m", "show \"residues (p^m)\""], ["proof (prove)\nusing this:\n  1 < p ^ m\n\ngoal (1 subgoal):\n 1. residues (p ^ m)", "using less_imp_of_nat_less residues.intro"], ["proof (prove)\nusing this:\n  1 < p ^ m\n  ?m < ?n \\<Longrightarrow> of_nat ?m < of_nat ?n\n  1 < ?m \\<Longrightarrow> residues ?m\n\ngoal (1 subgoal):\n 1. residues (p ^ m)", "by fastforce"], ["proof (state)\nthis:\n  residues (p ^ m)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>If $m>0$ then $Zp\\_res\\_ring m$ is a commutative ring:\\<close>"], ["", "lemma(in padic_integers) R_cring:\n  assumes \"m >0\"\n  shows \"cring (Zp_res_ring m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring (residue_ring (p ^ m))", "using p_residues assms residues.cring"], ["proof (prove)\nusing this:\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  0 < m\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n\ngoal (1 subgoal):\n 1. cring (residue_ring (p ^ m))", "by auto"], ["", "lemma(in padic_integers) R_comm_monoid:\n  assumes \"m >0\"\n  shows \"comm_monoid (Zp_res_ring m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.comm_monoid (residue_ring (p ^ m))", "by (simp add: assms p_residues residues.comm_monoid)"], ["", "lemma(in padic_integers) zero_rep:\n\"\\<zero> = (\\<lambda>m. (p_residue m 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> = (\\<lambda>m. p_residue m 0)", "unfolding p_residue_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> = (\\<lambda>m. residue (p ^ m) 0)", "using Zp_defs(2) padic_zero_simp(1) residue_def residue_ring_def"], ["proof (prove)\nusing this:\n  \\<zero> = padic_zero p\n  padic_zero ?p ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  residue ?n ?m = ?m mod ?n\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<zero> = (\\<lambda>m. residue (p ^ m) 0)", "by auto"], ["", "text\\<open>The operations on residue rings are just the standard operations on the integers $\\mod p^n$. This means that the basic closure properties and algebraic properties of operations on these rings hold for all integers, not just elements of the ring carrier:\\<close>"], ["", "lemma(in padic_integers) residue_add:\n  shows \"(x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y) = (x + y) mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x + y) mod p ^ k", "unfolding residue_ring_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>\\<lparr>carrier = {0..p ^ k - 1}, monoid.mult = \\<lambda>x y. x * y mod p ^ k, one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod p ^ k\\<rparr>\\<^esub>\n    y =\n    (x + y) mod p ^ k", "by simp"], ["", "lemma(in padic_integers) residue_add_closed:\n  shows \"(x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n    \\<in> carrier (residue_ring (p ^ k))", "using p_residue_def p_residue_range residue_def residue_ring_def"], ["proof (prove)\nusing this:\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n  p_residue ?m ?n \\<in> {0..<p ^ ?m}\n  residue ?n ?m = ?m mod ?n\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n    \\<in> carrier (residue_ring (p ^ k))", "by auto"], ["", "lemma(in padic_integers) residue_add_closed':\n  shows \"(x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> {0..<p^k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<in> {0..<p ^ k}", "using residue_add_closed residue_ring_def"], ["proof (prove)\nusing this:\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y\n  \\<in> carrier (residue_ring (p ^ ?k))\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<in> {0..<p ^ k}", "by auto"], ["", "lemma(in padic_integers) residue_mult:\n  shows \"(x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y) = (x * y) mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = x * y mod p ^ k", "unfolding residue_ring_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>\\<lparr>carrier = {0..p ^ k - 1}, monoid.mult = \\<lambda>x y. x * y mod p ^ k, one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod p ^ k\\<rparr>\\<^esub>\n    y =\n    x * y mod p ^ k", "by simp"], ["", "lemma(in padic_integers) residue_mult_closed:\n  shows \"(x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n    \\<in> carrier (residue_ring (p ^ k))", "using p_residue_def p_residue_range residue_def residue_ring_def"], ["proof (prove)\nusing this:\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n  p_residue ?m ?n \\<in> {0..<p ^ ?m}\n  residue ?n ?m = ?m mod ?n\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n    \\<in> carrier (residue_ring (p ^ k))", "by auto"], ["", "lemma(in padic_integers) residue_mult_closed':\n  shows \"(x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> {0..<p^k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<in> {0..<p ^ k}", "using residue_mult_closed residue_ring_def"], ["proof (prove)\nusing this:\n  ?x \\<otimes>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y\n  \\<in> carrier (residue_ring (p ^ ?k))\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<in> {0..<p ^ k}", "by auto"], ["", "lemma(in padic_integers) residue_add_assoc:\n  shows \"(x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> z = x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> (y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    z =\n    x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    (y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> z)", "using residue_add"], ["proof (prove)\nusing this:\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y = (?x + ?y) mod p ^ ?k\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    z =\n    x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    (y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> z)", "by (simp add: add.commute add.left_commute mod_add_right_eq)"], ["", "lemma(in padic_integers) residue_mult_comm:\n  shows \"x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y = y \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    y \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> x", "using residue_mult"], ["proof (prove)\nusing this:\n  ?x \\<otimes>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y = ?x * ?y mod p ^ ?k\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    y \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> x", "by (simp add: mult.commute)"], ["", "lemma(in padic_integers) residue_mult_assoc:\n  shows \"(x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> z = x \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> (y \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    z =\n    x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    (y \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> z)", "using residue_mult"], ["proof (prove)\nusing this:\n  ?x \\<otimes>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y = ?x * ?y mod p ^ ?k\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    z =\n    x \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    (y \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> z)", "by (simp add: mod_mult_left_eq mod_mult_right_eq mult.assoc)"], ["", "lemma(in padic_integers) residue_add_comm:\n  shows \"x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y = y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> x", "using residue_add"], ["proof (prove)\nusing this:\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y = (?x + ?y) mod p ^ ?k\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> x", "by presburger"], ["", "lemma(in padic_integers) residue_minus_car:\n  assumes \"y \\<in> carrier (Zp_res_ring k)\"\n  shows \"(x \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y) = (x - y) mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "proof(cases \"k = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "then"], ["proof (chain)\npicking this:\n  k = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "using residue_ring_def  a_minus_def"], ["proof (prove)\nusing this:\n  k = 0\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n  ?x \\<ominus>\\<^bsub>?R\\<^esub> ?y =\n  ?x \\<oplus>\\<^bsub>?R\\<^esub> \\<ominus>\\<^bsub>?R\\<^esub> ?y\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "by(simp add: a_minus_def residue_ring_def)"], ["proof (state)\nthis:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "have \"(x \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y = x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> (\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y =\n    x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    (\\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n     y)", "by (simp add: a_minus_def residue_add_assoc)"], ["proof (state)\nthis:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  (\\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n   y)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "then"], ["proof (chain)\npicking this:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  (\\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n   y)", "have 0: \"(x \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y = x mod p^k\""], ["proof (prove)\nusing this:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  (\\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n   y)\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y =\n    x mod p ^ k", "using assms False"], ["proof (prove)\nusing this:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  (\\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n   y)\n  y \\<in> carrier (residue_ring (p ^ k))\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y =\n    x mod p ^ k", "by (smt cring.cring_simprules(9) prime residue_add residues.cring residues.res_zero_eq residues_n)"], ["proof (state)\nthis:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  x mod p ^ k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "have 1: \"x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k", "have f1: \"x - y = x + - 1 * y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x - y = x + - 1 * y", "by auto"], ["proof (state)\nthis:\n  x - y = x + - 1 * y\n\ngoal (1 subgoal):\n 1. x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k", "have \"y + (x + - 1 * y) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y + (x + - 1 * y) = x", "by simp"], ["proof (state)\nthis:\n  y + (x + - 1 * y) = x\n\ngoal (1 subgoal):\n 1. x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k", "then"], ["proof (chain)\npicking this:\n  y + (x + - 1 * y) = x", "show ?thesis"], ["proof (prove)\nusing this:\n  y + (x + - 1 * y) = x\n\ngoal (1 subgoal):\n 1. x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k", "using f1"], ["proof (prove)\nusing this:\n  y + (x + - 1 * y) = x\n  x - y = x + - 1 * y\n\ngoal (1 subgoal):\n 1. x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k", "by presburger"], ["proof (state)\nthis:\n  x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "have \"(x \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y = (x - y) mod p^k \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y =\n    (x - y) mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y", "using residue_add[of k \"(x - y) mod p^k\" y] 0 1"], ["proof (prove)\nusing this:\n  (x - y) mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  ((x - y) mod p ^ k + y) mod p ^ k\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  x mod p ^ k\n  x mod p ^ k = ((x - y) mod p ^ k + y) mod p ^ k\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y =\n    (x - y) mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y", "by linarith"], ["proof (state)\nthis:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  (x - y) mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "then"], ["proof (chain)\npicking this:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  (x - y) mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  (x - y) mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "using assms residue_add_closed"], ["proof (prove)\nusing this:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  (x - y) mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n  y \\<in> carrier (residue_ring (p ^ k))\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y\n  \\<in> carrier (residue_ring (p ^ ?k))\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "by (metis False a_minus_def cring.cring_simprules(10) cring.cring_simprules(19) \n          prime residues.cring residues.mod_in_carrier residues_n)"], ["proof (state)\nthis:\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) residue_a_inv:\n  shows \"\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y = \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (y mod p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "have \"y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> (\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (y mod p^k)) = (y mod p^k) \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> (\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (y mod p^k)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n    y mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "using residue_minus_car[of \"\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (y mod p^k)\" k y] residue_add"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n  \\<in> carrier (residue_ring (p ^ k)) \\<Longrightarrow>\n  y \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod\n                     p ^ k) =\n  (y - \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)) mod\n  p ^ k\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y = (?x + ?y) mod p ^ ?k\n\ngoal (1 subgoal):\n 1. y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n    y mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "by (simp add: mod_add_left_eq)"], ["proof (state)\nthis:\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n  y mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "then"], ["proof (chain)\npicking this:\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n  y mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "have 0: \"y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> (\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (y mod p^k)) = \\<zero>\\<^bsub>Zp_res_ring k\\<^esub>\""], ["proof (prove)\nusing this:\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n  y mod p ^ k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n\ngoal (1 subgoal):\n 1. y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n    \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "by (metis cring.cring_simprules(17) p_res_ring_zero padic_integers.p_res_ring_0' \n        padic_integers_axioms prime residue_add_closed residues.cring residues.mod_in_carrier residues_n)"], ["proof (state)\nthis:\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "have 1: \"(\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (y mod p^k)) \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y = \\<zero>\\<^bsub>Zp_res_ring k\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod\n             p ^ k) \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y =\n    \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "using residue_add_comm 0"], ["proof (prove)\nusing this:\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y =\n  ?y \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?x\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod\n             p ^ k) \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    y =\n    \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod\n           p ^ k) \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "have 2: \"\\<And>x. x \\<in> carrier (Zp_res_ring k) \\<and> x \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y = \\<zero>\\<^bsub>Zp_res_ring k\\<^esub> \\<and> y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> x = \\<zero>\\<^bsub>Zp_res_ring k\\<^esub> \\<Longrightarrow> x = \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (y mod p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (residue_ring (p ^ k)) \\<and>\n       x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n       \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<and>\n       y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> x =\n       \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<Longrightarrow>\n       x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "using 0 1"], ["proof (prove)\nusing this:\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod\n           p ^ k) \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (residue_ring (p ^ k)) \\<and>\n       x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n       \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<and>\n       y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> x =\n       \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<Longrightarrow>\n       x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "by (metis cring.cring_simprules(3) cring.cring_simprules(8) mod_by_1 padic_integers.p_res_ring_0'\n        padic_integers.p_res_ring_zero padic_integers_axioms power_0 prime residue_1_prop \n        residue_add_assoc residues.cring residues.mod_in_carrier residues_n)"], ["proof (state)\nthis:\n  ?x \\<in> carrier (residue_ring (p ^ k)) \\<and>\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<and>\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?x =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<Longrightarrow>\n  ?x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "have 3: \"carrier (add_monoid (residue_ring (p ^ k))) = carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (add_monoid (residue_ring (p ^ k))) =\n    carrier (residue_ring (p ^ k))", "by simp"], ["proof (state)\nthis:\n  carrier (add_monoid (residue_ring (p ^ k))) =\n  carrier (residue_ring (p ^ k))\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "have 4: \"(\\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) = (\\<oplus>\\<^bsub>Zp_res_ring k\\<^esub>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n    (\\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>)", "by simp"], ["proof (state)\nthis:\n  (\\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n  (\\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "have 5: \"\\<And>x. x \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n             x \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y = \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and> \n            y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> x = \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n             \\<Longrightarrow> x = \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (y mod p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n       x \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n       y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> x =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n       x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "using 0 1 2 3 4"], ["proof (prove)\nusing this:\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod\n           p ^ k) \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  ?x \\<in> carrier (residue_ring (p ^ k)) \\<and>\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<and>\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?x =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<Longrightarrow>\n  ?x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n  carrier (add_monoid (residue_ring (p ^ k))) =\n  carrier (residue_ring (p ^ k))\n  (\\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n  (\\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n       x \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n       y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> x =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n       x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "by simp"], ["proof (state)\nthis:\n  ?x \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n  ?x \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n  y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ?x =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n  ?x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)", "unfolding a_inv_def m_inv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n    (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)", "apply(rule the_equality)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)\n    \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n    y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n    (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n    \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n    (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n    y =\n    \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n 2. \\<And>ya.\n       ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n       y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ya =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n       ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n       ya =\n       (THE ya.\n           ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n           y mod\n           p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           ya =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n           ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           (y mod p ^ k) =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)", "using 1 2 3 4 5"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod\n           p ^ k) \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  ?x \\<in> carrier (residue_ring (p ^ k)) \\<and>\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<and>\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?x =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<Longrightarrow>\n  ?x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n  carrier (add_monoid (residue_ring (p ^ k))) =\n  carrier (residue_ring (p ^ k))\n  (\\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n  (\\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>)\n  ?x \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n  ?x \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n  y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ?x =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n  ?x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n\ngoal (2 subgoals):\n 1. (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)\n    \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n    y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n    (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n    \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n    (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n    y =\n    \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n 2. \\<And>ya.\n       ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n       y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ya =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n       ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n       ya =\n       (THE ya.\n           ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n           y mod\n           p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           ya =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n           ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           (y mod p ^ k) =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)", "unfolding a_inv_def m_inv_def"], ["proof (prove)\nusing this:\n  (THE ya.\n      ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n      y mod p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      ya =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n      ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      (y mod p ^ k) =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  ?x \\<in> carrier (residue_ring (p ^ k)) \\<and>\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<and>\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?x =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<Longrightarrow>\n  ?x =\n  (THE ya.\n      ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n      y mod p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      ya =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n      ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      (y mod p ^ k) =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)\n  carrier (add_monoid (residue_ring (p ^ k))) =\n  carrier (residue_ring (p ^ k))\n  (\\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n  (\\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>)\n  ?x \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n  ?x \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n  y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ?x =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n  ?x =\n  (THE ya.\n      ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n      y mod p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      ya =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n      ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      (y mod p ^ k) =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)\n\ngoal (2 subgoals):\n 1. (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)\n    \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n    y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n    (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n    \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n    (THE ya.\n        ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n        y mod\n        p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        ya =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n        ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n        (y mod p ^ k) =\n        \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n    y =\n    \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n 2. \\<And>ya.\n       ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n       y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ya =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n       ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n       ya =\n       (THE ya.\n           ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n           y mod\n           p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           ya =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n           ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           (y mod p ^ k) =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)", "apply (metis (no_types, lifting) \"0\" \"1\" cring.cring_simprules(3) mod_by_1 \n        monoid.select_convs(2) padic_integers.p_res_ring_zero padic_integers_axioms power_0 prime\n        residue_1_prop residue_add_closed residues.cring residues.mod_in_carrier residues_n)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya.\n       ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n       y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ya =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n       ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n       ya =\n       (THE ya.\n           ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n           y mod\n           p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           ya =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n           ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           (y mod p ^ k) =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)", "using 1 2 3 4 5"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod\n           p ^ k) \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  ?x \\<in> carrier (residue_ring (p ^ k)) \\<and>\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<and>\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?x =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<Longrightarrow>\n  ?x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n  carrier (add_monoid (residue_ring (p ^ k))) =\n  carrier (residue_ring (p ^ k))\n  (\\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n  (\\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>)\n  ?x \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n  ?x \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n  y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ?x =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n  ?x = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n\ngoal (1 subgoal):\n 1. \\<And>ya.\n       ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n       y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ya =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n       ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n       ya =\n       (THE ya.\n           ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n           y mod\n           p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           ya =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n           ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           (y mod p ^ k) =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)", "unfolding a_inv_def m_inv_def"], ["proof (prove)\nusing this:\n  (THE ya.\n      ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n      y mod p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      ya =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n      ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      (y mod p ^ k) =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  ?x \\<in> carrier (residue_ring (p ^ k)) \\<and>\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<and>\n  y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?x =\n  \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> \\<Longrightarrow>\n  ?x =\n  (THE ya.\n      ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n      y mod p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      ya =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n      ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      (y mod p ^ k) =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)\n  carrier (add_monoid (residue_ring (p ^ k))) =\n  carrier (residue_ring (p ^ k))\n  (\\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>) =\n  (\\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>)\n  ?x \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n  ?x \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n  y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ?x =\n  \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n  ?x =\n  (THE ya.\n      ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n      y mod p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      ya =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n      ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n      (y mod p ^ k) =\n      \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<And>ya.\n       ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n       y \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> ya =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n       ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> y =\n       \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<Longrightarrow>\n       ya =\n       (THE ya.\n           ya \\<in> carrier (add_monoid (residue_ring (p ^ k))) \\<and>\n           y mod\n           p ^ k \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           ya =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub> \\<and>\n           ya \\<otimes>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>\n           (y mod p ^ k) =\n           \\<one>\\<^bsub>add_monoid (residue_ring (p ^ k))\\<^esub>)", "by blast"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) residue_a_inv_closed:\n\"\\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n    \\<in> carrier (residue_ring (p ^ k))", "apply(cases \"k = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n    \\<in> carrier (residue_ring (p ^ k))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n    \\<in> carrier (residue_ring (p ^ k))", "apply (metis add.comm_neutral add.commute \n        atLeastLessThanPlusOne_atLeastAtMost_int \n        insert_iff mod_by_1 p_res_ring_car p_res_ring_zero padic_integers.p_res_ring_0 \n        padic_integers_axioms power_0 residue_1_prop residue_a_inv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n    \\<in> carrier (residue_ring (p ^ k))", "by (simp add: prime residues.mod_in_carrier residues.res_neg_eq residues_n)"], ["", "lemma(in padic_integers) residue_minus:\n\"(x \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y) = (x - y) mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "using residue_minus_car[of \"y mod p^k\" k x] residue_a_inv[of k y]"], ["proof (prove)\nusing this:\n  y mod p ^ k \\<in> carrier (residue_ring (p ^ k)) \\<Longrightarrow>\n  x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y mod p ^ k =\n  (x - y mod p ^ k) mod p ^ k\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = (x - y) mod p ^ k", "unfolding a_minus_def"], ["proof (prove)\nusing this:\n  y mod p ^ k \\<in> carrier (residue_ring (p ^ k)) \\<Longrightarrow>\n  x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k) =\n  (x - y mod p ^ k) mod p ^ k\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n  \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> (y mod p ^ k)\n\ngoal (1 subgoal):\n 1. x \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y =\n    (x - y) mod p ^ k", "by (metis a_minus_def mod_diff_right_eq p_residue_alt_def p_residue_range')"], ["", "lemma(in padic_integers) residue_minus_closed:\n\"(x \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> y) \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y\n    \\<in> carrier (residue_ring (p ^ k))", "by (simp add: a_minus_def residue_add_closed)"], ["", "lemma (in padic_integers) residue_plus_zero_r:\n\"0 \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> y = y mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = y mod p ^ k", "by (simp add: residue_add)"], ["", "lemma (in padic_integers) residue_plus_zero_l:\n\"y \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> 0 = y mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> 0 = y mod p ^ k", "by (simp add: residue_add)"], ["", "lemma (in padic_integers) residue_times_zero_r:\n\"0 \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = 0", "by (simp add: residue_mult)"], ["", "lemma (in padic_integers) residue_times_zero_l:\n\"y \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> 0 = 0", "by (simp add: residue_mult)"], ["", "lemma (in padic_integers) residue_times_one_r:\n\"1 \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> y = y mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> y = y mod p ^ k", "by (simp add: residue_mult)"], ["", "lemma (in padic_integers) residue_times_one_l:\n\"y \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> 1 = y mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> 1 = y mod p ^ k", "by (simp add: residue_mult_comm residue_times_one_r)"], ["", "text\\<open>Similarly to the previous lemmas, many identities about taking residues of $p$-adic integers hold even for elements which lie outside the carrier of $\\mathbb{Z}_p$:\\<close>"], ["", "lemma (in padic_integers) residue_of_sum:\n\"(a \\<oplus> b) k = (a k) \\<oplus>\\<^bsub>Zp_res_ring k\\<^esub> (b k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<oplus> b) k = a k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k", "using Zp_def residue_ring_def[of \"p^k\"] Zp_defs(5) padic_add_res"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  residue_ring (p ^ k) =\n  \\<lparr>carrier = {0..p ^ k - 1},\n     monoid.mult = \\<lambda>x y. x * y mod p ^ k, one = 1, zero = 0,\n     add = \\<lambda>x y. (x + y) mod p ^ k\\<rparr>\n  (\\<oplus>) = padic_add p\n  padic_add ?p ?f ?g ?n =\n  ?f ?n \\<oplus>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n\ngoal (1 subgoal):\n 1. (a \\<oplus> b) k = a k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k", "by auto"], ["", "lemma (in padic_integers) residue_of_sum':\n \"(a \\<oplus> b) k = ((a k) + (b k)) mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<oplus> b) k = (a k + b k) mod p ^ k", "using residue_add residue_of_sum"], ["proof (prove)\nusing this:\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y = (?x + ?y) mod p ^ ?k\n  (?a \\<oplus> ?b) ?k =\n  ?a ?k \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?b ?k\n\ngoal (1 subgoal):\n 1. (a \\<oplus> b) k = (a k + b k) mod p ^ k", "by auto"], ["", "lemma (in padic_integers) residue_closed[simp]:\n  assumes \"b \\<in> carrier Zp\"\n  shows \"b k \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b k \\<in> carrier (residue_ring (p ^ k))", "using Zp_def assms padic_integers.Zp_defs(3) padic_integers_axioms padic_set_res_closed"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  b \\<in> carrier Zp\n  padic_integers ?p \\<Longrightarrow> carrier (padic_int ?p) = padic_set ?p\n  padic_integers p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. b k \\<in> carrier (residue_ring (p ^ k))", "by auto"], ["", "lemma (in padic_integers) residue_of_diff:\n  assumes \"b \\<in> carrier Zp\"\n  shows \"(a \\<ominus> b) k = (a k) \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (b k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<ominus> b) k =\n    a k \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k", "unfolding a_minus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<oplus> \\<ominus> b) k =\n    a k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k", "using Zp_def add.inv_closed assms(1) padic_a_inv prime residue_of_sum"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  ?x \\<in> carrier (UP Zp) \\<Longrightarrow>\n  \\<ominus>\\<^bsub>UP Zp\\<^esub> ?x \\<in> carrier (UP Zp)\n  b \\<in> carrier Zp\n  \\<lbrakk>prime ?p; ?a \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> \\<ominus>\\<^bsub>padic_int ?p\\<^esub> ?a =\n                    (\\<lambda>n.\n                        \\<ominus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?a n)\n  prime p\n  (?a \\<oplus> ?b) ?k =\n  ?a ?k \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?b ?k\n\ngoal (1 subgoal):\n 1. (a \\<oplus> \\<ominus> b) k =\n    a k \\<oplus>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k", "by auto"], ["", "lemma (in padic_integers) residue_of_prod:\n\"(a \\<otimes> b) k = (a k) \\<otimes> \\<^bsub>Zp_res_ring k\\<^esub> (b k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<otimes> b) k =\n    a k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k", "by (simp add: Zp_defs(4) padic_mult_def)"], ["", "lemma (in padic_integers) residue_of_prod':\n\"(a \\<otimes> b) k = ((a k) * (b k)) mod (p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<otimes> b) k = a k * b k mod p ^ k", "by (simp add: residue_mult residue_of_prod)"], ["", "lemma (in padic_integers) residue_of_one:\n  assumes \"k > 0\"\n  shows  \"\\<one> k = \\<one>\\<^bsub>Zp_res_ring k\\<^esub>\"\n         \"\\<one> k = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> k = \\<one>\\<^bsub>residue_ring (p ^ k)\\<^esub> &&& \\<one> k = 1", "apply (simp add: Zp_defs(1) assms padic_one_simp(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> k = 1", "by (simp add: Zp_def assms padic_int_simps(1) padic_one_simp(1) residue_ring_def)"], ["", "lemma (in padic_integers) residue_of_zero:\n  shows  \"\\<zero> k = \\<zero>\\<^bsub>Zp_res_ring k\\<^esub>\"\n        \"\\<zero> k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> k = \\<zero>\\<^bsub>residue_ring (p ^ k)\\<^esub> &&&\n    \\<zero> k = 0", "apply (simp add: Zp_defs(2) padic_zero_simp(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> k = 0", "by (simp add: p_residue_alt_def zero_rep)"], ["", "lemma(in padic_integers) Zp_residue_mult_zero:\n  assumes  \"a k = 0\"\n  shows \"(a \\<otimes> b) k = 0\" \"(b \\<otimes> a) k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<otimes> b) k = 0 &&& (b \\<otimes> a) k = 0", "using assms residue_of_prod'"], ["proof (prove)\nusing this:\n  a k = 0\n  (?a \\<otimes> ?b) ?k = ?a ?k * ?b ?k mod p ^ ?k\n\ngoal (1 subgoal):\n 1. (a \\<otimes> b) k = 0 &&& (b \\<otimes> a) k = 0", "by auto"], ["", "lemma(in padic_integers) Zp_residue_add_zero:\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"(a:: padic_int) k = 0\"\n  shows \"(a \\<oplus> b) k = b k\" \"(b \\<oplus> a) k = b k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<oplus> b) k = b k &&& (b \\<oplus> a) k = b k", "apply (metis Zp_def assms(1) assms(2) cring.cring_simprules(8) mod_by_1 padic_int_is_cring  power.simps(1) \n        prime residue_add_closed residue_of_sum residue_of_sum' residues.cring residues.res_zero_eq residues_n)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (b \\<oplus> a) k = b k", "by (metis Zp_def assms(1) assms(2) cring.cring_simprules(16) mod_by_1 padic_int_is_cring\n      power.simps(1) prime residue_add_closed residue_of_sum residue_of_sum' residues.cring \n      residues.res_zero_eq residues_n)"], ["", "text\\<open>P-adic addition and multiplication are globally additive and associative:\\<close>"], ["", "lemma padic_add_assoc0:\nassumes \"prime p\"\nshows  \"padic_add p (padic_add p x y) z = padic_add p x (padic_add p y z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_add p (padic_add p x y) z = padic_add p x (padic_add p y z)", "using assms"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. padic_add p (padic_add p x y) z = padic_add p x (padic_add p y z)", "unfolding padic_add_def"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n        y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n        z n) =\n    (\\<lambda>n.\n        x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n        (y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n))", "by (simp add: padic_integers.residue_add_assoc padic_integers_def)"], ["", "lemma(in padic_integers) add_assoc:\n\"a \\<oplus> b \\<oplus> c = a \\<oplus> (b \\<oplus> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<oplus> b \\<oplus> c = a \\<oplus> (b \\<oplus> c)", "using padic_add_assoc0[of p a b c] prime Zp_defs"], ["proof (prove)\nusing this:\n  prime p \\<Longrightarrow>\n  padic_add p (padic_add p a b) c = padic_add p a (padic_add p b c)\n  prime p\n  \\<one> = padic_one p\n  \\<zero> = padic_zero p\n  carrier Zp = padic_set p\n  (\\<otimes>) = padic_mult p\n  (\\<oplus>) = padic_add p\n\ngoal (1 subgoal):\n 1. a \\<oplus> b \\<oplus> c = a \\<oplus> (b \\<oplus> c)", "by auto"], ["", "lemma padic_add_comm0:\nassumes \"prime p\"\nshows  \"(padic_add p x y)= (padic_add p y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_add p x y = padic_add p y x", "using assms"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. padic_add p x y = padic_add p y x", "unfolding padic_add_def"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n) =\n    (\\<lambda>n. y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n)", "using padic_integers.residue_add_comm[of p]"], ["proof (prove)\nusing this:\n  prime p\n  padic_integers p \\<Longrightarrow>\n  ?x \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y =\n  ?y \\<oplus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. x n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n) =\n    (\\<lambda>n. y n \\<oplus>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n)", "by (simp add: padic_integers_def)"], ["", "lemma(in padic_integers) add_comm:\n\"a \\<oplus> b = b \\<oplus> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<oplus> b = b \\<oplus> a", "using padic_add_comm0[of p a b]  prime Zp_defs"], ["proof (prove)\nusing this:\n  prime p \\<Longrightarrow> padic_add p a b = padic_add p b a\n  prime p\n  \\<one> = padic_one p\n  \\<zero> = padic_zero p\n  carrier Zp = padic_set p\n  (\\<otimes>) = padic_mult p\n  (\\<oplus>) = padic_add p\n\ngoal (1 subgoal):\n 1. a \\<oplus> b = b \\<oplus> a", "by auto"], ["", "lemma padic_mult_assoc0:\nassumes \"prime p\"\nshows  \"padic_mult p (padic_mult p x y) z = padic_mult p x (padic_mult p y z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p (padic_mult p x y) z = padic_mult p x (padic_mult p y z)", "using assms"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. padic_mult p (padic_mult p x y) z = padic_mult p x (padic_mult p y z)", "unfolding padic_mult_def"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. (\\<lambda>n.\n        x n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n        y n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n        z n) =\n    (\\<lambda>n.\n        x n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n        (y n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> z n))", "by (simp add: padic_integers.residue_mult_assoc padic_integers_def)"], ["", "lemma(in padic_integers) mult_assoc:\n\"a \\<otimes> b \\<otimes> c = a \\<otimes> (b \\<otimes> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes> b \\<otimes> c = a \\<otimes> (b \\<otimes> c)", "using padic_mult_assoc0[of p a b c] prime Zp_defs"], ["proof (prove)\nusing this:\n  prime p \\<Longrightarrow>\n  padic_mult p (padic_mult p a b) c = padic_mult p a (padic_mult p b c)\n  prime p\n  \\<one> = padic_one p\n  \\<zero> = padic_zero p\n  carrier Zp = padic_set p\n  (\\<otimes>) = padic_mult p\n  (\\<oplus>) = padic_add p\n\ngoal (1 subgoal):\n 1. a \\<otimes> b \\<otimes> c = a \\<otimes> (b \\<otimes> c)", "by auto"], ["", "lemma padic_mult_comm0:\nassumes \"prime p\"\nshows  \"(padic_mult p x y)= (padic_mult p y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_mult p x y = padic_mult p y x", "using assms"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. padic_mult p x y = padic_mult p y x", "unfolding padic_mult_def"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. x n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n) =\n    (\\<lambda>n. y n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n)", "using padic_integers.residue_mult_comm[of p]"], ["proof (prove)\nusing this:\n  prime p\n  padic_integers p \\<Longrightarrow>\n  ?x \\<otimes>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y =\n  ?y \\<otimes>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?x\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. x n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> y n) =\n    (\\<lambda>n. y n \\<otimes>\\<^bsub>residue_ring (p ^ n)\\<^esub> x n)", "by (simp add: padic_integers_def)"], ["", "lemma(in padic_integers) mult_comm:\n\"a \\<otimes> b = b \\<otimes> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes> b = b \\<otimes> a", "using padic_mult_comm0[of p a b]  prime Zp_defs"], ["proof (prove)\nusing this:\n  prime p \\<Longrightarrow> padic_mult p a b = padic_mult p b a\n  prime p\n  \\<one> = padic_one p\n  \\<zero> = padic_zero p\n  carrier Zp = padic_set p\n  (\\<otimes>) = padic_mult p\n  (\\<oplus>) = padic_add p\n\ngoal (1 subgoal):\n 1. a \\<otimes> b = b \\<otimes> a", "by auto"], ["", "lemma(in padic_integers) mult_zero_l:\n\"a \\<otimes> \\<zero> = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes> \\<zero> = \\<zero>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (a \\<otimes> \\<zero>) x = \\<zero> x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (a \\<otimes> \\<zero>) x = \\<zero> x", "show \"(a \\<otimes> \\<zero>) x = \\<zero> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<otimes> \\<zero>) x = \\<zero> x", "using Zp_residue_mult_zero[of \\<zero> x a]"], ["proof (prove)\nusing this:\n  \\<zero> x = 0 \\<Longrightarrow> (\\<zero> \\<otimes> a) x = 0\n  \\<zero> x = 0 \\<Longrightarrow> (a \\<otimes> \\<zero>) x = 0\n\ngoal (1 subgoal):\n 1. (a \\<otimes> \\<zero>) x = \\<zero> x", "by (simp add: residue_of_zero(2))"], ["proof (state)\nthis:\n  (a \\<otimes> \\<zero>) x = \\<zero> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) mult_zero_r:\n\"\\<zero> \\<otimes> a = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<otimes> a = \\<zero>", "using mult_zero_l mult_comm"], ["proof (prove)\nusing this:\n  ?a \\<otimes> \\<zero> = \\<zero>\n  ?a \\<otimes> ?b = ?b \\<otimes> ?a\n\ngoal (1 subgoal):\n 1. \\<zero> \\<otimes> a = \\<zero>", "by auto"], ["", "lemma (in padic_integers) p_residue_ring_car_memI:\n  assumes \"(m::int) \\<ge>0\"\n  assumes \"m < p^k\"\n  shows \"m \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> carrier (residue_ring (p ^ k))", "using residue_ring_def[of \"p^k\"]  assms(1) assms(2)"], ["proof (prove)\nusing this:\n  residue_ring (p ^ k) =\n  \\<lparr>carrier = {0..p ^ k - 1},\n     monoid.mult = \\<lambda>x y. x * y mod p ^ k, one = 1, zero = 0,\n     add = \\<lambda>x y. (x + y) mod p ^ k\\<rparr>\n  0 \\<le> m\n  m < p ^ k\n\ngoal (1 subgoal):\n 1. m \\<in> carrier (residue_ring (p ^ k))", "by auto"], ["", "lemma (in padic_integers) p_residue_ring_car_memE:\n  assumes \"m \\<in> carrier (Zp_res_ring k)\"\n  shows \"m < p^k\" \"m \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < p ^ k &&& 0 \\<le> m", "using assms residue_ring_def"], ["proof (prove)\nusing this:\n  m \\<in> carrier (residue_ring (p ^ k))\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. m < p ^ k &&& 0 \\<le> m", "by auto"], ["", "lemma (in padic_integers) residues_closed:\n  assumes \"a \\<in> carrier Zp\"\n  shows \"a k \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a k \\<in> carrier (residue_ring (p ^ k))", "using Zp_def assms padic_integers.Zp_defs(3) padic_integers_axioms padic_set_res_closed"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  a \\<in> carrier Zp\n  padic_integers ?p \\<Longrightarrow> carrier (padic_int ?p) = padic_set ?p\n  padic_integers p\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. a k \\<in> carrier (residue_ring (p ^ k))", "by blast"], ["", "lemma (in padic_integers) mod_in_carrier:\n  \"a mod (p^n) \\<in> carrier (Zp_res_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a mod p ^ n \\<in> carrier (residue_ring (p ^ n))", "using p_residue_alt_def p_residue_range'"], ["proof (prove)\nusing this:\n  p_residue ?m ?n = ?n mod p ^ ?m\n  p_residue ?m ?n \\<in> carrier (residue_ring (p ^ ?m))\n\ngoal (1 subgoal):\n 1. a mod p ^ n \\<in> carrier (residue_ring (p ^ n))", "by auto"], ["", "lemma (in padic_integers) Zp_residue_a_inv:\n  assumes \"a \\<in> carrier Zp\"\n  shows \"(\\<ominus> a) k = \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> (a k)\"\n        \"(\\<ominus> a) k = (- (a k)) mod (p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus> a) k = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> a k &&&\n    (\\<ominus> a) k = - a k mod p ^ k", "using Zp_def assms padic_a_inv prime"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  a \\<in> carrier Zp\n  \\<lbrakk>prime ?p; ?a \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> \\<ominus>\\<^bsub>padic_int ?p\\<^esub> ?a =\n                    (\\<lambda>n.\n                        \\<ominus>\\<^bsub>residue_ring (?p ^ n)\\<^esub> ?a n)\n  prime p\n\ngoal (1 subgoal):\n 1. (\\<ominus> a) k = \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> a k &&&\n    (\\<ominus> a) k = - a k mod p ^ k", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus> a) k = - a k mod p ^ k", "using residue_a_inv"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y =\n  \\<ominus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> (?y mod p ^ ?k)\n\ngoal (1 subgoal):\n 1. (\\<ominus> a) k = - a k mod p ^ k", "by (metis Zp_def assms mod_by_1 p_res_ring_zero padic_a_inv padic_integers.prime \n        padic_integers_axioms power_0 residue_1_prop residues.res_neg_eq residues_n)"], ["", "lemma (in padic_integers) residue_of_diff':\n  assumes \"b \\<in> carrier Zp\"\n  shows \"(a \\<ominus> b) k = ((a k) - (b k)) mod (p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<ominus> b) k = (a k - b k) mod p ^ k", "by (simp add: assms residue_minus_car residue_of_diff residues_closed)"], ["", "lemma (in padic_integers) residue_UnitsI:\n  assumes \"n \\<ge> 1\"\n  assumes \"(k::int) > 0\"\n  assumes \"k < p^n\"\n  assumes \"coprime k p\"\n  shows \"k \\<in> Units (Zp_res_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> Units (residue_ring (p ^ n))", "using residues.res_units_eq assms"], ["proof (prove)\nusing this:\n  residues ?m \\<Longrightarrow>\n  Units (residue_ring ?m) = {x. 0 < x \\<and> x < ?m \\<and> coprime x ?m}\n  1 \\<le> n\n  0 < k\n  k < p ^ n\n  coprime k p\n\ngoal (1 subgoal):\n 1. k \\<in> Units (residue_ring (p ^ n))", "by (metis (mono_tags, lifting) coprime_power_right_iff mem_Collect_eq not_one_le_zero prime residues_n)"], ["", "lemma (in padic_integers) residue_UnitsE:\n  assumes \"n \\<ge> 1\"\n  assumes \"k \\<in> Units (Zp_res_ring n)\"\n  shows  \"coprime k p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime k p", "using residues.res_units_eq assms"], ["proof (prove)\nusing this:\n  residues ?m \\<Longrightarrow>\n  Units (residue_ring ?m) = {x. 0 < x \\<and> x < ?m \\<and> coprime x ?m}\n  1 \\<le> n\n  k \\<in> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. coprime k p", "by (simp add: p_residues)"], ["", "lemma(in padic_integers) residue_units_nilpotent:\n  assumes \"m > 0\"\n  assumes \"k = card (Units (Zp_res_ring m))\"\n  assumes \"x \\<in> (Units (Zp_res_ring m))\"\n  shows \"x[^]\\<^bsub>Zp_res_ring m\\<^esub> k = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^]\\<^bsub>residue_ring (p ^ m)\\<^esub> k = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x [^]\\<^bsub>residue_ring (p ^ m)\\<^esub> k = 1", "have 0: \"group (units_of (Zp_res_ring m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (units_of (residue_ring (p ^ m)))", "using assms(1) cring_def monoid.units_group padic_integers.R_cring \n          padic_integers_axioms ring_def"], ["proof (prove)\nusing this:\n  0 < m\n  cring ?R \\<equiv> ring ?R \\<and> Group.comm_monoid ?R\n  Group.monoid ?G \\<Longrightarrow> Group.group (units_of ?G)\n  \\<lbrakk>padic_integers ?p; 0 < ?m\\<rbrakk>\n  \\<Longrightarrow> cring (residue_ring (?p ^ ?m))\n  padic_integers p\n  ring ?R \\<equiv>\n  abelian_group ?R \\<and> Group.monoid ?R \\<and> ring_axioms ?R\n\ngoal (1 subgoal):\n 1. Group.group (units_of (residue_ring (p ^ m)))", "by blast"], ["proof (state)\nthis:\n  Group.group (units_of (residue_ring (p ^ m)))\n\ngoal (1 subgoal):\n 1. x [^]\\<^bsub>residue_ring (p ^ m)\\<^esub> k = 1", "have 1: \"finite (Units (Zp_res_ring m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Units (residue_ring (p ^ m)))", "using p_residues assms(1) residues.finite_Units"], ["proof (prove)\nusing this:\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  0 < m\n  residues ?m \\<Longrightarrow> finite (Units (residue_ring ?m))\n\ngoal (1 subgoal):\n 1. finite (Units (residue_ring (p ^ m)))", "by auto"], ["proof (state)\nthis:\n  finite (Units (residue_ring (p ^ m)))\n\ngoal (1 subgoal):\n 1. x [^]\\<^bsub>residue_ring (p ^ m)\\<^esub> k = 1", "have 2: \"x[^]\\<^bsub>units_of (Zp_res_ring m)\\<^esub> (order (units_of (Zp_res_ring m))) = \\<one>\\<^bsub>units_of (Zp_res_ring m)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^]\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n    order (units_of (residue_ring (p ^ m))) =\n    \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>", "by (metis \"0\" assms(3) group.pow_order_eq_1 units_of_carrier)"], ["proof (state)\nthis:\n  x [^]\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n  order (units_of (residue_ring (p ^ m))) =\n  \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n\ngoal (1 subgoal):\n 1. x [^]\\<^bsub>residue_ring (p ^ m)\\<^esub> k = 1", "then"], ["proof (chain)\npicking this:\n  x [^]\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n  order (units_of (residue_ring (p ^ m))) =\n  \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  x [^]\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n  order (units_of (residue_ring (p ^ m))) =\n  \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n\ngoal (1 subgoal):\n 1. x [^]\\<^bsub>residue_ring (p ^ m)\\<^esub> k = 1", "by (metis \"1\" assms(1) assms(2) assms(3) cring.units_power_order_eq_one\n        padic_integers.R_cring padic_integers.p_residues padic_integers_axioms residues.res_one_eq)"], ["proof (state)\nthis:\n  x [^]\\<^bsub>residue_ring (p ^ m)\\<^esub> k = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in padic_integers) residue_1_unit:\n  assumes \"m > 0\"\n  shows \"1 \\<in> Units (Zp_res_ring m)\"\n        \"\\<one>\\<^bsub>Zp_res_ring m\\<^esub> \\<in> Units (Zp_res_ring m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<in> Units (residue_ring (p ^ m)) &&&\n    \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    \\<in> Units (residue_ring (p ^ m))", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 \\<in> Units (residue_ring (p ^ m))\n 2. \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    \\<in> Units (residue_ring (p ^ m))", "have 0: \"group (units_of (Zp_res_ring m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (units_of (residue_ring (p ^ m)))", "using assms(1) cring_def monoid.units_group padic_integers.R_cring \n          padic_integers_axioms ring_def"], ["proof (prove)\nusing this:\n  0 < m\n  cring ?R \\<equiv> ring ?R \\<and> Group.comm_monoid ?R\n  Group.monoid ?G \\<Longrightarrow> Group.group (units_of ?G)\n  \\<lbrakk>padic_integers ?p; 0 < ?m\\<rbrakk>\n  \\<Longrightarrow> cring (residue_ring (?p ^ ?m))\n  padic_integers p\n  ring ?R \\<equiv>\n  abelian_group ?R \\<and> Group.monoid ?R \\<and> ring_axioms ?R\n\ngoal (1 subgoal):\n 1. Group.group (units_of (residue_ring (p ^ m)))", "by blast"], ["proof (state)\nthis:\n  Group.group (units_of (residue_ring (p ^ m)))\n\ngoal (2 subgoals):\n 1. 1 \\<in> Units (residue_ring (p ^ m))\n 2. \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    \\<in> Units (residue_ring (p ^ m))", "have 1: \"1 = \\<one>\\<^bsub>units_of (Zp_res_ring m)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>", "by (simp add: residue_ring_def units_of_def)"], ["proof (state)\nthis:\n  1 = \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n\ngoal (2 subgoals):\n 1. 1 \\<in> Units (residue_ring (p ^ m))\n 2. \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    \\<in> Units (residue_ring (p ^ m))", "have \"\\<one>\\<^bsub>units_of (Zp_res_ring m)\\<^esub> \\<in> carrier (units_of (Zp_res_ring m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n    \\<in> carrier (units_of (residue_ring (p ^ m)))", "using 0 Group.monoid.intro[of \"units_of (Zp_res_ring m)\"]"], ["proof (prove)\nusing this:\n  Group.group (units_of (residue_ring (p ^ m)))\n  \\<lbrakk>\\<And>x y.\n              \\<lbrakk>x \\<in> carrier (units_of (residue_ring (p ^ m)));\n               y \\<in> carrier (units_of (residue_ring (p ^ m)))\\<rbrakk>\n              \\<Longrightarrow> x \\<otimes>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n                                y\n                                \\<in> carrier\n (units_of (residue_ring (p ^ m)));\n   \\<And>x y z.\n      \\<lbrakk>x \\<in> carrier (units_of (residue_ring (p ^ m)));\n       y \\<in> carrier (units_of (residue_ring (p ^ m)));\n       z \\<in> carrier (units_of (residue_ring (p ^ m)))\\<rbrakk>\n      \\<Longrightarrow> x \\<otimes>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n                        y \\<otimes>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n                        z =\n                        x \\<otimes>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n                        (y \\<otimes>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n                         z);\n   \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n   \\<in> carrier (units_of (residue_ring (p ^ m)));\n   \\<And>x.\n      x \\<in> carrier (units_of (residue_ring (p ^ m))) \\<Longrightarrow>\n      \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub> \\<otimes>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n      x =\n      x;\n   \\<And>x.\n      x \\<in> carrier (units_of (residue_ring (p ^ m))) \\<Longrightarrow>\n      x \\<otimes>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n      \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub> =\n      x\\<rbrakk>\n  \\<Longrightarrow> Group.monoid (units_of (residue_ring (p ^ m)))\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n    \\<in> carrier (units_of (residue_ring (p ^ m)))", "by (simp add: group.is_monoid)"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n  \\<in> carrier (units_of (residue_ring (p ^ m)))\n\ngoal (2 subgoals):\n 1. 1 \\<in> Units (residue_ring (p ^ m))\n 2. \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    \\<in> Units (residue_ring (p ^ m))", "then"], ["proof (chain)\npicking this:\n  \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n  \\<in> carrier (units_of (residue_ring (p ^ m)))", "show \"1 \\<in> Units (Zp_res_ring m)\""], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n  \\<in> carrier (units_of (residue_ring (p ^ m)))\n\ngoal (1 subgoal):\n 1. 1 \\<in> Units (residue_ring (p ^ m))", "using 1"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n  \\<in> carrier (units_of (residue_ring (p ^ m)))\n  1 = \\<one>\\<^bsub>units_of (residue_ring (p ^ m))\\<^esub>\n\ngoal (1 subgoal):\n 1. 1 \\<in> Units (residue_ring (p ^ m))", "by (simp add: units_of_carrier)"], ["proof (state)\nthis:\n  1 \\<in> Units (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    \\<in> Units (residue_ring (p ^ m))", "then"], ["proof (chain)\npicking this:\n  1 \\<in> Units (residue_ring (p ^ m))", "show \" \\<one>\\<^bsub>Zp_res_ring m\\<^esub> \\<in> Units (Zp_res_ring m) \""], ["proof (prove)\nusing this:\n  1 \\<in> Units (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    \\<in> Units (residue_ring (p ^ m))", "by (simp add: \"1\" units_of_one)"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  \\<in> Units (residue_ring (p ^ m))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in padic_integers) zero_not_in_residue_units:\n  assumes \"n \\<ge> 1\"\n  shows \"(0::int) \\<notin>  Units (Zp_res_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<notin> Units (residue_ring (p ^ n))", "using assms p_residues residues.res_units_eq"], ["proof (prove)\nusing this:\n  1 \\<le> n\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  residues ?m \\<Longrightarrow>\n  Units (residue_ring ?m) = {x. 0 < x \\<and> x < ?m \\<and> coprime x ?m}\n\ngoal (1 subgoal):\n 1. 0 \\<notin> Units (residue_ring (p ^ n))", "by auto"], ["", "text\\<open>Cardinality bounds on the units of residue rings:\\<close>"], ["", "lemma (in padic_integers) residue_units_card_geq_2:\n  assumes \"n \\<ge>2\"\n  shows \"card (Units (Zp_res_ring n)) \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> card (Units (residue_ring (p ^ n)))", "proof(cases \"p = 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = 2 \\<Longrightarrow> 2 \\<le> card (Units (residue_ring (p ^ n)))\n 2. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "case True"], ["proof (state)\nthis:\n  p = 2\n\ngoal (2 subgoals):\n 1. p = 2 \\<Longrightarrow> 2 \\<le> card (Units (residue_ring (p ^ n)))\n 2. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "then"], ["proof (chain)\npicking this:\n  p = 2", "have \"(3::int) \\<in> Units (Zp_res_ring n)\""], ["proof (prove)\nusing this:\n  p = 2\n\ngoal (1 subgoal):\n 1. 3 \\<in> Units (residue_ring (p ^ n))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. p = 2 \\<Longrightarrow> 3 \\<in> Units (residue_ring (p ^ n))", "have \"p \\<ge>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> p", "by (simp add: True)"], ["proof (state)\nthis:\n  2 \\<le> p\n\ngoal (1 subgoal):\n 1. p = 2 \\<Longrightarrow> 3 \\<in> Units (residue_ring (p ^ n))", "then"], ["proof (chain)\npicking this:\n  2 \\<le> p", "have \"p^n \\<ge> 2^n\""], ["proof (prove)\nusing this:\n  2 \\<le> p\n\ngoal (1 subgoal):\n 1. 2 ^ n \\<le> p ^ n", "using assms"], ["proof (prove)\nusing this:\n  2 \\<le> p\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. 2 ^ n \\<le> p ^ n", "by (simp add: True)"], ["proof (state)\nthis:\n  2 ^ n \\<le> p ^ n\n\ngoal (1 subgoal):\n 1. p = 2 \\<Longrightarrow> 3 \\<in> Units (residue_ring (p ^ n))", "then"], ["proof (chain)\npicking this:\n  2 ^ n \\<le> p ^ n", "have \"p^n \\<ge> 4\""], ["proof (prove)\nusing this:\n  2 ^ n \\<le> p ^ n\n\ngoal (1 subgoal):\n 1. 4 \\<le> p ^ n", "using assms   power_increasing[of 2 n 2]"], ["proof (prove)\nusing this:\n  2 ^ n \\<le> p ^ n\n  2 \\<le> n\n  \\<lbrakk>2 \\<le> n; (1::?'a1) \\<le> (2::?'a1)\\<rbrakk>\n  \\<Longrightarrow> (2::?'a1)\\<^sup>2 \\<le> (2::?'a1) ^ n\n\ngoal (1 subgoal):\n 1. 4 \\<le> p ^ n", "by (simp add: True)"], ["proof (state)\nthis:\n  4 \\<le> p ^ n\n\ngoal (1 subgoal):\n 1. p = 2 \\<Longrightarrow> 3 \\<in> Units (residue_ring (p ^ n))", "then"], ["proof (chain)\npicking this:\n  4 \\<le> p ^ n", "have \"(3::int) < p^n\""], ["proof (prove)\nusing this:\n  4 \\<le> p ^ n\n\ngoal (1 subgoal):\n 1. 3 < p ^ n", "by linarith"], ["proof (state)\nthis:\n  3 < p ^ n\n\ngoal (1 subgoal):\n 1. p = 2 \\<Longrightarrow> 3 \\<in> Units (residue_ring (p ^ n))", "then"], ["proof (chain)\npicking this:\n  3 < p ^ n", "have 0: \"(3::int) \\<in> carrier (Zp_res_ring n)\""], ["proof (prove)\nusing this:\n  3 < p ^ n\n\ngoal (1 subgoal):\n 1. 3 \\<in> carrier (residue_ring (p ^ n))", "by (simp add: residue_ring_def)"], ["proof (state)\nthis:\n  3 \\<in> carrier (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. p = 2 \\<Longrightarrow> 3 \\<in> Units (residue_ring (p ^ n))", "have 1: \"coprime 3 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime 3 p", "by (simp add: True numeral_3_eq_3)"], ["proof (state)\nthis:\n  coprime 3 p\n\ngoal (1 subgoal):\n 1. p = 2 \\<Longrightarrow> 3 \\<in> Units (residue_ring (p ^ n))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 \\<in> Units (residue_ring (p ^ n))", "using residue_UnitsI[of n \"3::int\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> n; 0 < 3; 3 < p ^ n; coprime 3 p\\<rbrakk>\n  \\<Longrightarrow> 3 \\<in> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. 3 \\<in> Units (residue_ring (p ^ n))", "using \"1\" \\<open>3 < p ^ n\\<close> assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>1 \\<le> n; 0 < 3; 3 < p ^ n; coprime 3 p\\<rbrakk>\n  \\<Longrightarrow> 3 \\<in> Units (residue_ring (p ^ n))\n  coprime 3 p\n  3 < p ^ n\n  2 \\<le> n\n\ngoal (1 subgoal):\n 1. 3 \\<in> Units (residue_ring (p ^ n))", "by linarith"], ["proof (state)\nthis:\n  3 \\<in> Units (residue_ring (p ^ n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  3 \\<in> Units (residue_ring (p ^ n))\n\ngoal (2 subgoals):\n 1. p = 2 \\<Longrightarrow> 2 \\<le> card (Units (residue_ring (p ^ n)))\n 2. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "then"], ["proof (chain)\npicking this:\n  3 \\<in> Units (residue_ring (p ^ n))", "have 0: \"{(1::int), 3} \\<subseteq> Units (Zp_res_ring n)\""], ["proof (prove)\nusing this:\n  3 \\<in> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. {1, 3} \\<subseteq> Units (residue_ring (p ^ n))", "using assms padic_integers.residue_1_unit padic_integers_axioms"], ["proof (prove)\nusing this:\n  3 \\<in> Units (residue_ring (p ^ n))\n  2 \\<le> n\n  \\<lbrakk>padic_integers ?p; 0 < ?m\\<rbrakk>\n  \\<Longrightarrow> 1 \\<in> Units (residue_ring (?p ^ ?m))\n  \\<lbrakk>padic_integers ?p; 0 < ?m\\<rbrakk>\n  \\<Longrightarrow> \\<one>\\<^bsub>residue_ring (?p ^ ?m)\\<^esub>\n                    \\<in> Units (residue_ring (?p ^ ?m))\n  padic_integers p\n\ngoal (1 subgoal):\n 1. {1, 3} \\<subseteq> Units (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  {1, 3} \\<subseteq> Units (residue_ring (p ^ n))\n\ngoal (2 subgoals):\n 1. p = 2 \\<Longrightarrow> 2 \\<le> card (Units (residue_ring (p ^ n)))\n 2. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "have 1: \"finite (Units (Zp_res_ring n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Units (residue_ring (p ^ n)))", "using assms padic_integers.p_residues padic_integers_axioms residues.finite_Units"], ["proof (prove)\nusing this:\n  2 \\<le> n\n  \\<lbrakk>padic_integers ?p; 0 < ?m\\<rbrakk>\n  \\<Longrightarrow> residues (?p ^ ?m)\n  padic_integers p\n  residues ?m \\<Longrightarrow> finite (Units (residue_ring ?m))\n\ngoal (1 subgoal):\n 1. finite (Units (residue_ring (p ^ n)))", "by auto"], ["proof (state)\nthis:\n  finite (Units (residue_ring (p ^ n)))\n\ngoal (2 subgoals):\n 1. p = 2 \\<Longrightarrow> 2 \\<le> card (Units (residue_ring (p ^ n)))\n 2. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "have 2: \"{(1::int),3}\\<subseteq>Units (Zp_res_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {1, 3} \\<subseteq> Units (residue_ring (p ^ n))", "using \"0\""], ["proof (prove)\nusing this:\n  {1, 3} \\<subseteq> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. {1, 3} \\<subseteq> Units (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  {1, 3} \\<subseteq> Units (residue_ring (p ^ n))\n\ngoal (2 subgoals):\n 1. p = 2 \\<Longrightarrow> 2 \\<le> card (Units (residue_ring (p ^ n)))\n 2. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "have 3: \"card {(1::int),3} = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {1, 3} = 2", "by simp"], ["proof (state)\nthis:\n  card {1, 3} = 2\n\ngoal (2 subgoals):\n 1. p = 2 \\<Longrightarrow> 2 \\<le> card (Units (residue_ring (p ^ n)))\n 2. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> card (Units (residue_ring (p ^ n)))", "using 2 1"], ["proof (prove)\nusing this:\n  {1, 3} \\<subseteq> Units (residue_ring (p ^ n))\n  finite (Units (residue_ring (p ^ n)))\n\ngoal (1 subgoal):\n 1. 2 \\<le> card (Units (residue_ring (p ^ n)))", "by (metis \"3\" card_mono)"], ["proof (state)\nthis:\n  2 \\<le> card (Units (residue_ring (p ^ n)))\n\ngoal (1 subgoal):\n 1. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "case False"], ["proof (state)\nthis:\n  p \\<noteq> 2\n\ngoal (1 subgoal):\n 1. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "have \"1 \\<in> Units (Zp_res_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<in> Units (residue_ring (p ^ n))", "using assms padic_integers.residue_1_unit padic_integers_axioms"], ["proof (prove)\nusing this:\n  2 \\<le> n\n  \\<lbrakk>padic_integers ?p; 0 < ?m\\<rbrakk>\n  \\<Longrightarrow> 1 \\<in> Units (residue_ring (?p ^ ?m))\n  \\<lbrakk>padic_integers ?p; 0 < ?m\\<rbrakk>\n  \\<Longrightarrow> \\<one>\\<^bsub>residue_ring (?p ^ ?m)\\<^esub>\n                    \\<in> Units (residue_ring (?p ^ ?m))\n  padic_integers p\n\ngoal (1 subgoal):\n 1. 1 \\<in> Units (residue_ring (p ^ n))", "by auto"], ["proof (state)\nthis:\n  1 \\<in> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "have \"2 \\<in> Units (Zp_res_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<in> Units (residue_ring (p ^ n))", "apply(rule residue_UnitsI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. 1 \\<le> n\n 2. 0 < 2\n 3. 2 < p ^ n\n 4. coprime 2 p", "using assms"], ["proof (prove)\nusing this:\n  2 \\<le> n\n\ngoal (4 subgoals):\n 1. 1 \\<le> n\n 2. 0 < 2\n 3. 2 < p ^ n\n 4. coprime 2 p", "apply linarith"], ["proof (prove)\ngoal (3 subgoals):\n 1. 0 < 2\n 2. 2 < p ^ n\n 3. coprime 2 p", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. 2 < p ^ n\n 2. coprime 2 p", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 < p ^ n\n 2. coprime 2 p", "show \"2 < p^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 < p ^ n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 < p ^ n", "have \"p^n > p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p < p ^ n", "by (metis One_nat_def assms le_simps(3) numerals(2) power_one_right \n              power_strict_increasing_iff prime prime_gt_1_int)"], ["proof (state)\nthis:\n  p < p ^ n\n\ngoal (1 subgoal):\n 1. 2 < p ^ n", "then"], ["proof (chain)\npicking this:\n  p < p ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  p < p ^ n\n\ngoal (1 subgoal):\n 1. 2 < p ^ n", "using False  prime prime_gt_1_int[of p]"], ["proof (prove)\nusing this:\n  p < p ^ n\n  p \\<noteq> 2\n  prime p\n  prime p \\<Longrightarrow> 1 < p\n\ngoal (1 subgoal):\n 1. 2 < p ^ n", "by auto"], ["proof (state)\nthis:\n  2 < p ^ n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 < p ^ n\n\ngoal (1 subgoal):\n 1. coprime 2 p", "show \"coprime 2 p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime 2 p", "using False"], ["proof (prove)\nusing this:\n  p \\<noteq> 2\n\ngoal (1 subgoal):\n 1. coprime 2 p", "by (metis of_nat_numeral prime prime_nat_int_transfer primes_coprime two_is_prime_nat)"], ["proof (state)\nthis:\n  coprime 2 p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 \\<in> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "then"], ["proof (chain)\npicking this:\n  2 \\<in> Units (residue_ring (p ^ n))", "have 0: \"{(1::int), 2} \\<subseteq> Units (Zp_res_ring n)\""], ["proof (prove)\nusing this:\n  2 \\<in> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. {1, 2} \\<subseteq> Units (residue_ring (p ^ n))", "using \\<open>1 \\<in> Units (Zp_res_ring n)\\<close>"], ["proof (prove)\nusing this:\n  2 \\<in> Units (residue_ring (p ^ n))\n  1 \\<in> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. {1, 2} \\<subseteq> Units (residue_ring (p ^ n))", "by blast"], ["proof (state)\nthis:\n  {1, 2} \\<subseteq> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "have 1: \"card {(1::int),2} = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {1, 2} = 2", "by simp"], ["proof (state)\nthis:\n  card {1, 2} = 2\n\ngoal (1 subgoal):\n 1. p \\<noteq> 2 \\<Longrightarrow>\n    2 \\<le> card (Units (residue_ring (p ^ n)))", "then"], ["proof (chain)\npicking this:\n  card {1, 2} = 2", "show ?thesis"], ["proof (prove)\nusing this:\n  card {1, 2} = 2\n\ngoal (1 subgoal):\n 1. 2 \\<le> card (Units (residue_ring (p ^ n)))", "using residues.finite_Units 0"], ["proof (prove)\nusing this:\n  card {1, 2} = 2\n  residues ?m \\<Longrightarrow> finite (Units (residue_ring ?m))\n  {1, 2} \\<subseteq> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. 2 \\<le> card (Units (residue_ring (p ^ n)))", "by (metis One_nat_def assms card_mono dual_order.trans \n          le_simps(3) one_le_numeral padic_integers.p_residues padic_integers_axioms)"], ["proof (state)\nthis:\n  2 \\<le> card (Units (residue_ring (p ^ n)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in padic_integers) residue_ring_card:\n\"finite (carrier (Zp_res_ring n)) \\<and> card (carrier (Zp_res_ring n)) = nat (p^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (carrier (residue_ring (p ^ n))) \\<and>\n    card (carrier (residue_ring (p ^ n))) = nat (p ^ n)", "using p_res_ring_car[of n]"], ["proof (prove)\nusing this:\n  carrier (residue_ring (p ^ n)) = {0..<p ^ n}\n\ngoal (1 subgoal):\n 1. finite (carrier (residue_ring (p ^ n))) \\<and>\n    card (carrier (residue_ring (p ^ n))) = nat (p ^ n)", "by simp"], ["", "lemma(in comm_monoid) UnitsI:\n  assumes \"a \\<in> carrier G\"\n  assumes \"b \\<in> carrier G\"\n  assumes \"a \\<otimes> b = \\<one>\"\n  shows \"a \\<in> Units G\" \"b \\<in> Units G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> Units G &&& b \\<in> Units G", "unfolding Units_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> {y \\<in> carrier G.\n             \\<exists>x\\<in>carrier G.\n                x \\<otimes> y = \\<one> \\<and> y \\<otimes> x = \\<one>} &&&\n    b \\<in> {y \\<in> carrier G.\n             \\<exists>x\\<in>carrier G.\n                x \\<otimes> y = \\<one> \\<and> y \\<otimes> x = \\<one>}", "using comm_monoid_axioms_def assms m_comm[of a b]"], ["proof (prove)\nusing this:\n  Group.comm_monoid_axioms ?G \\<equiv>\n  \\<forall>x y.\n     x \\<in> carrier ?G \\<longrightarrow>\n     y \\<in> carrier ?G \\<longrightarrow>\n     x \\<otimes>\\<^bsub>?G\\<^esub> y = y \\<otimes>\\<^bsub>?G\\<^esub> x\n  a \\<in> carrier G\n  b \\<in> carrier G\n  a \\<otimes> b = \\<one>\n  \\<lbrakk>a \\<in> carrier G; b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> a \\<otimes> b = b \\<otimes> a\n\ngoal (1 subgoal):\n 1. a \\<in> {y \\<in> carrier G.\n             \\<exists>x\\<in>carrier G.\n                x \\<otimes> y = \\<one> \\<and> y \\<otimes> x = \\<one>} &&&\n    b \\<in> {y \\<in> carrier G.\n             \\<exists>x\\<in>carrier G.\n                x \\<otimes> y = \\<one> \\<and> y \\<otimes> x = \\<one>}", "by auto"], ["", "lemma(in comm_monoid) is_invI:\n  assumes \"a \\<in> carrier G\"\n  assumes \"b \\<in> carrier G\"\n  assumes \"a \\<otimes> b = \\<one>\"\n  shows \"inv\\<^bsub>G\\<^esub> b = a\" \"inv\\<^bsub>G\\<^esub> a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv b = a &&& inv a = b", "using assms inv_char m_comm"], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n  b \\<in> carrier G\n  a \\<otimes> b = \\<one>\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G; ?x \\<otimes> ?y = \\<one>;\n   ?y \\<otimes> ?x = \\<one>\\<rbrakk>\n  \\<Longrightarrow> inv ?x = ?y\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y = ?y \\<otimes> ?x\n\ngoal (1 subgoal):\n 1. inv b = a &&& inv a = b", "by auto"], ["", "lemma (in padic_integers) residue_of_Units:\n  assumes \"k > 0\"\n  assumes \"a \\<in> Units Zp\"\n  shows \"a k \\<in> Units (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a k \\<in> Units (residue_ring (p ^ k))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a k \\<in> Units (residue_ring (p ^ k))", "have 0: \"a k \\<otimes>\\<^bsub>Zp_res_ring k\\<^esub> (inv \\<^bsub>Zp\\<^esub> a) k = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> (inv a) k = 1", "by (metis R.Units_r_inv assms(1) assms(2) residue_of_one(2) residue_of_prod)"], ["proof (state)\nthis:\n  a k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> (inv a) k = 1\n\ngoal (1 subgoal):\n 1. a k \\<in> Units (residue_ring (p ^ k))", "have 1: \"a k \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a k \\<in> carrier (residue_ring (p ^ k))", "by (simp add: R.Units_closed assms(2) residues_closed)"], ["proof (state)\nthis:\n  a k \\<in> carrier (residue_ring (p ^ k))\n\ngoal (1 subgoal):\n 1. a k \\<in> Units (residue_ring (p ^ k))", "have 2: \"(inv \\<^bsub>Zp\\<^esub> a) k \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inv a) k \\<in> carrier (residue_ring (p ^ k))", "by (simp add: assms(2) residues_closed)"], ["proof (state)\nthis:\n  (inv a) k \\<in> carrier (residue_ring (p ^ k))\n\ngoal (1 subgoal):\n 1. a k \\<in> Units (residue_ring (p ^ k))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a k \\<in> Units (residue_ring (p ^ k))", "using 0 1 2 comm_monoid.UnitsI[of \"Zp_res_ring k\"]"], ["proof (prove)\nusing this:\n  a k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> (inv a) k = 1\n  a k \\<in> carrier (residue_ring (p ^ k))\n  (inv a) k \\<in> carrier (residue_ring (p ^ k))\n  \\<lbrakk>Group.comm_monoid (residue_ring (p ^ k));\n   ?a \\<in> carrier (residue_ring (p ^ k));\n   ?b \\<in> carrier (residue_ring (p ^ k));\n   ?a \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?b =\n   \\<one>\\<^bsub>residue_ring (p ^ k)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> Units (residue_ring (p ^ k))\n  \\<lbrakk>Group.comm_monoid (residue_ring (p ^ k));\n   ?a \\<in> carrier (residue_ring (p ^ k));\n   ?b \\<in> carrier (residue_ring (p ^ k));\n   ?a \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?b =\n   \\<one>\\<^bsub>residue_ring (p ^ k)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> Units (residue_ring (p ^ k))\n\ngoal (1 subgoal):\n 1. a k \\<in> Units (residue_ring (p ^ k))", "using assms(1) p_residues residues.comm_monoid residues.res_one_eq"], ["proof (prove)\nusing this:\n  a k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> (inv a) k = 1\n  a k \\<in> carrier (residue_ring (p ^ k))\n  (inv a) k \\<in> carrier (residue_ring (p ^ k))\n  \\<lbrakk>Group.comm_monoid (residue_ring (p ^ k));\n   ?a \\<in> carrier (residue_ring (p ^ k));\n   ?b \\<in> carrier (residue_ring (p ^ k));\n   ?a \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?b =\n   \\<one>\\<^bsub>residue_ring (p ^ k)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> Units (residue_ring (p ^ k))\n  \\<lbrakk>Group.comm_monoid (residue_ring (p ^ k));\n   ?a \\<in> carrier (residue_ring (p ^ k));\n   ?b \\<in> carrier (residue_ring (p ^ k));\n   ?a \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> ?b =\n   \\<one>\\<^bsub>residue_ring (p ^ k)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> Units (residue_ring (p ^ k))\n  0 < k\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  residues ?m \\<Longrightarrow> Group.comm_monoid (residue_ring ?m)\n  residues ?m \\<Longrightarrow> \\<one>\\<^bsub>residue_ring ?m\\<^esub> = 1\n\ngoal (1 subgoal):\n 1. a k \\<in> Units (residue_ring (p ^ k))", "by presburger"], ["proof (state)\nthis:\n  a k \\<in> Units (residue_ring (p ^ k))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*************************************************************************************************)\n(*************************************************************************************************)\n(**********************)"], ["", "section\\<open>$int$ and $nat$ inclusions in $\\mathbb{Z}_p$.\\<close>"], ["", "(****************************)\n(*************************************************************************************************)\n(*************************************************************************************************)"], ["", "lemma(in ring) int_inc_zero:\n\"[(0::int)]\\<cdot> \\<one> = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0] \\<cdot> \\<one> = \\<zero>", "by (simp add: add.int_pow_eq_id)"], ["", "lemma(in ring) int_inc_zero':\n  assumes \"x \\<in> carrier R\"\n  shows \"[(0::int)] \\<cdot> x = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0] \\<cdot> x = \\<zero>", "by (simp add: add.int_pow_eq_id assms)"], ["", "lemma(in ring) nat_inc_zero:\n\"[(0::nat)]\\<cdot> \\<one> = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0] \\<cdot> \\<one> = \\<zero>", "by auto"], ["", "lemma(in ring) nat_mult_zero:\n\"[(0::nat)]\\<cdot> x = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0] \\<cdot> x = \\<zero>", "by simp"], ["", "lemma(in ring) nat_inc_closed:\n  fixes n::nat\n  shows \"[n] \\<cdot> \\<one> \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<in> carrier R", "by simp"], ["", "lemma(in ring) nat_mult_closed:\n  fixes n::nat\n  assumes \"x \\<in> carrier R\"\n  shows \"[n] \\<cdot> x \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> x \\<in> carrier R", "by (simp add: assms)"], ["", "lemma(in ring) int_inc_closed:\n  fixes n::int\n  shows \"[n] \\<cdot> \\<one> \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<in> carrier R", "by simp"], ["", "lemma(in ring) int_mult_closed:\n  fixes n::int\n  assumes \"x \\<in> carrier R\"\n  shows \"[n] \\<cdot> x \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> x \\<in> carrier R", "by (simp add: assms)"], ["", "lemma(in ring) nat_inc_prod:\n  fixes n::nat\n  fixes m::nat\n  shows \"[m]\\<cdot>([n] \\<cdot> \\<one>) = [(m*n)]\\<cdot>\\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [m] \\<cdot> ([n] \\<cdot> \\<one>) = [(m * n)] \\<cdot> \\<one>", "by (simp add: add.nat_pow_pow mult.commute)"], ["", "lemma(in ring) nat_inc_prod':\n  fixes n::nat\n  fixes m::nat\n  shows \"[(m*n)]\\<cdot>\\<one> = [m]\\<cdot> \\<one> \\<otimes> ([n] \\<cdot> \\<one>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [(m * n)] \\<cdot> \\<one> =\n    [m] \\<cdot> \\<one> \\<otimes> [n] \\<cdot> \\<one>", "by (simp add: add.nat_pow_pow add_pow_rdistr)"], ["", "lemma(in padic_integers) Zp_nat_inc_zero:\n  shows \"[(0::nat)] \\<cdot> x = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0] \\<cdot> x = \\<zero>", "by simp"], ["", "lemma(in padic_integers) Zp_int_inc_zero':\n  shows \"[(0::int)] \\<cdot> x = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [0] \\<cdot> x = \\<zero>", "using Zp_nat_inc_zero[of x]"], ["proof (prove)\nusing this:\n  [0] \\<cdot> x = \\<zero>\n\ngoal (1 subgoal):\n 1. [0] \\<cdot> x = \\<zero>", "unfolding add_pow_def int_pow_def"], ["proof (prove)\nusing this:\n  x [^]\\<^bsub>add_monoid Zp\\<^esub> 0 = \\<zero>\n\ngoal (1 subgoal):\n 1. (let p = rec_nat \\<one>\\<^bsub>add_monoid Zp\\<^esub>\n              (\\<lambda>u b. b \\<otimes>\\<^bsub>add_monoid Zp\\<^esub> x)\n     in if 0 < 0 then inv\\<^bsub>add_monoid Zp\\<^esub> p (nat (- 0))\n        else p (nat 0)) =\n    \\<zero>", "by auto"], ["", "lemma(in padic_integers) Zp_nat_inc_closed:\n  fixes n::nat\n  shows \"[n] \\<cdot> \\<one> \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<in> carrier Zp", "by simp"], ["", "lemma(in padic_integers) Zp_nat_mult_closed:\n  fixes n::nat\n  assumes \"x \\<in> carrier Zp\"\n  shows \"[n] \\<cdot> x \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> x \\<in> carrier Zp", "by (simp add: assms)"], ["", "lemma(in padic_integers) Zp_int_inc_closed:\n  fixes n::int\n  shows \"[n] \\<cdot> \\<one> \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<in> carrier Zp", "by simp"], ["", "lemma(in padic_integers) Zp_int_mult_closed:\n  fixes n::int\n  assumes \"x \\<in> carrier Zp\"\n  shows \"[n] \\<cdot> x \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> x \\<in> carrier Zp", "by (simp add: assms)"], ["", "text\\<open>The following lemmas give a concrete description of the inclusion of integers and natural numbers into $\\mathbb{Z}_p$:\\<close>"], ["", "lemma(in padic_integers) Zp_nat_inc_rep:\n  fixes n::nat\n  shows \"[n] \\<cdot> \\<one> = (\\<lambda> m. p_residue m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))", "apply(induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [0] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int 0))\n 2. \\<And>n.\n       [n] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (int n)) \\<Longrightarrow>\n       [Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int (Suc n)))", "apply (simp add: zero_rep)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       [n] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (int n)) \\<Longrightarrow>\n       [Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int (Suc n)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       [n] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (int n)) \\<Longrightarrow>\n       [Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int (Suc n)))", "case (Suc n)"], ["proof (state)\nthis:\n  [n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       [n] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (int n)) \\<Longrightarrow>\n       [Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int (Suc n)))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       [n] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (int n)) \\<Longrightarrow>\n       [Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int (Suc n)))", "assume A: \"[n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))\""], ["proof (state)\nthis:\n  [n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       [n] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (int n)) \\<Longrightarrow>\n       [Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int (Suc n)))", "then"], ["proof (chain)\npicking this:\n  [n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))", "have 0: \"[Suc n] \\<cdot> \\<one>  = [n]\\<cdot>\\<one> \\<oplus> \\<one>\""], ["proof (prove)\nusing this:\n  [n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))\n\ngoal (1 subgoal):\n 1. [Suc n] \\<cdot> \\<one> = [n] \\<cdot> \\<one> \\<oplus> \\<one>", "by auto"], ["proof (state)\nthis:\n  [Suc n] \\<cdot> \\<one> = [n] \\<cdot> \\<one> \\<oplus> \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       [n] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (int n)) \\<Longrightarrow>\n       [Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int (Suc n)))", "show \"[Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int (Suc n)))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "show \"([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "proof(cases \"m=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "have 0: \"([Suc n] \\<cdot> \\<one>) m \\<in> carrier (Zp_res_ring m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m \\<in> carrier (residue_ring (p ^ m))", "using Zp_nat_inc_closed padic_set_res_closed"], ["proof (prove)\nusing this:\n  [?n] \\<cdot> \\<one> \\<in> carrier Zp\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m \\<in> carrier (residue_ring (p ^ m))", "by (simp add: residues_closed)"], ["proof (state)\nthis:\n  ([Suc n] \\<cdot> \\<one>) m \\<in> carrier (residue_ring (p ^ m))\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "then"], ["proof (chain)\npicking this:\n  ([Suc n] \\<cdot> \\<one>) m \\<in> carrier (residue_ring (p ^ m))", "have \"([Suc n] \\<cdot> \\<one>) m = 0\""], ["proof (prove)\nusing this:\n  ([Suc n] \\<cdot> \\<one>) m \\<in> carrier (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m = 0", "using p_res_ring_0 True"], ["proof (prove)\nusing this:\n  ([Suc n] \\<cdot> \\<one>) m \\<in> carrier (residue_ring (p ^ m))\n  carrier (residue_ring (p ^ 0)) = {0}\n  m = 0\n\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m = 0", "by blast"], ["proof (state)\nthis:\n  ([Suc n] \\<cdot> \\<one>) m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "then"], ["proof (chain)\npicking this:\n  ([Suc n] \\<cdot> \\<one>) m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  ([Suc n] \\<cdot> \\<one>) m = 0\n\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "by (metis True p_res_ring_0' p_residue_range')"], ["proof (state)\nthis:\n  ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "then"], ["proof (chain)\npicking this:\n  m \\<noteq> 0", "have R: \"residues (p^m)\""], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residues (p ^ m)", "by (simp add: prime residues_n)"], ["proof (state)\nthis:\n  residues (p ^ m)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "have \"([Suc n] \\<cdot> \\<one>) m  = ([n]\\<cdot>\\<one> \\<oplus> \\<one>) m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m = ([n] \\<cdot> \\<one> \\<oplus> \\<one>) m", "by (simp add: \"0\")"], ["proof (state)\nthis:\n  ([Suc n] \\<cdot> \\<one>) m = ([n] \\<cdot> \\<one> \\<oplus> \\<one>) m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "then"], ["proof (chain)\npicking this:\n  ([Suc n] \\<cdot> \\<one>) m = ([n] \\<cdot> \\<one> \\<oplus> \\<one>) m", "have P0: \"([Suc n] \\<cdot> \\<one>) m  =  p_residue m (int n) \\<oplus>\\<^bsub>Zp_res_ring m\\<^esub> \\<one>\\<^bsub>Zp_res_ring m\\<^esub>\""], ["proof (prove)\nusing this:\n  ([Suc n] \\<cdot> \\<one>) m = ([n] \\<cdot> \\<one> \\<oplus> \\<one>) m\n\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m =\n    p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>", "using A False Zp_def padic_add_res padic_one_def Zp_defs(5)\n                padic_integers.residue_of_one(1) padic_integers_axioms"], ["proof (prove)\nusing this:\n  ([Suc n] \\<cdot> \\<one>) m = ([n] \\<cdot> \\<one> \\<oplus> \\<one>) m\n  [n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))\n  m \\<noteq> 0\n  Zp \\<equiv> padic_int p\n  padic_add ?p ?f ?g ?n =\n  ?f ?n \\<oplus>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n  padic_one ?p \\<equiv> \\<lambda>n. if n = 0 then 0 else 1\n  (\\<oplus>) = padic_add p\n  \\<lbrakk>padic_integers ?p; 0 < ?k\\<rbrakk>\n  \\<Longrightarrow> \\<one>\\<^bsub>padic_int ?p\\<^esub> ?k =\n                    \\<one>\\<^bsub>residue_ring (?p ^ ?k)\\<^esub>\n  padic_integers p\n\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m =\n    p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  ([Suc n] \\<cdot> \\<one>) m =\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "then"], ["proof (chain)\npicking this:\n  ([Suc n] \\<cdot> \\<one>) m =\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>", "have P1:\"([Suc n] \\<cdot> \\<one>) m =  p_residue m (int n) \\<oplus>\\<^bsub>Zp_res_ring m\\<^esub> p_residue m (1::int)\""], ["proof (prove)\nusing this:\n  ([Suc n] \\<cdot> \\<one>) m =\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m =\n    p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    p_residue m 1", "by (metis R ext p_residue_alt_def residue_add_assoc residue_add_comm residue_plus_zero_r \n              residue_times_one_r residue_times_zero_l residues.res_one_eq)"], ["proof (state)\nthis:\n  ([Suc n] \\<cdot> \\<one>) m =\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  p_residue m 1\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "have P2: \"p_residue m (int n) \\<oplus>\\<^bsub>Zp_res_ring m\\<^esub> p_residue m 1 = ((int n) mod (p^m)) \\<oplus>\\<^bsub>Zp_res_ring m\\<^esub> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    p_residue m 1 =\n    int n mod p ^ m \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub> 1", "using R P0 P1 residue_def residues.res_one_eq"], ["proof (prove)\nusing this:\n  residues (p ^ m)\n  ([Suc n] \\<cdot> \\<one>) m =\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  ([Suc n] \\<cdot> \\<one>) m =\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  p_residue m 1\n  residue ?n ?m = ?m mod ?n\n  residues ?m \\<Longrightarrow> \\<one>\\<^bsub>residue_ring ?m\\<^esub> = 1\n\ngoal (1 subgoal):\n 1. p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    p_residue m 1 =\n    int n mod p ^ m \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub> 1", "by (simp add: residues.res_one_eq p_residue_alt_def)"], ["proof (state)\nthis:\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  p_residue m 1 =\n  int n mod p ^ m \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub> 1\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "have P3:\"((int n) mod (p^m)) \\<oplus>\\<^bsub>Zp_res_ring m\\<^esub> 1 = ((int n) + 1) mod (p^m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int n mod p ^ m \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub> 1 =\n    (int n + 1) mod p ^ m", "using R residue_ring_def"], ["proof (prove)\nusing this:\n  residues (p ^ m)\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. int n mod p ^ m \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub> 1 =\n    (int n + 1) mod p ^ m", "by (simp add:  mod_add_left_eq)"], ["proof (state)\nthis:\n  int n mod p ^ m \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub> 1 =\n  (int n + 1) mod p ^ m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "have \"p_residue m (int n) \\<oplus>\\<^bsub>Zp_res_ring m\\<^esub> p_residue m 1 = (int (Suc n)) mod (p^m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n    p_residue m 1 =\n    int (Suc n) mod p ^ m", "by (metis P2 P3 add.commute of_nat_Suc p_residue_alt_def residue_add)"], ["proof (state)\nthis:\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  p_residue m 1 =\n  int (Suc n) mod p ^ m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "then"], ["proof (chain)\npicking this:\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  p_residue m 1 =\n  int (Suc n) mod p ^ m", "show ?thesis"], ["proof (prove)\nusing this:\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  p_residue m 1 =\n  int (Suc n) mod p ^ m\n\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "using False R P1 p_residue_def p_residue_alt_def"], ["proof (prove)\nusing this:\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  p_residue m 1 =\n  int (Suc n) mod p ^ m\n  m \\<noteq> 0\n  residues (p ^ m)\n  ([Suc n] \\<cdot> \\<one>) m =\n  p_residue m (int n) \\<oplus>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  p_residue m 1\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n  p_residue ?m ?n = ?n mod p ^ ?m\n\ngoal (1 subgoal):\n 1. ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "by auto"], ["proof (state)\nthis:\n  ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([Suc n] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [Suc n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int (Suc n)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) Zp_nat_inc_res:\n  fixes n::nat\n  shows \"([n] \\<cdot> \\<one>) k = n mod (p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([n] \\<cdot> \\<one>) k = int n mod p ^ k", "using Zp_nat_inc_rep p_residue_def"], ["proof (prove)\nusing this:\n  [?n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int ?n))\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n\ngoal (1 subgoal):\n 1. ([n] \\<cdot> \\<one>) k = int n mod p ^ k", "by (simp add: p_residue_alt_def)"], ["", "lemma(in padic_integers) Zp_int_inc_rep:\n  fixes n::int\n  shows  \"[n] \\<cdot> \\<one> = (\\<lambda> m. p_residue m n )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m n)", "proof(induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n. [int n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))\n 2. \\<And>n.\n       [(- int (Suc n))] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (- int (Suc n)))", "case (nonneg n)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>n. [int n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))\n 2. \\<And>n.\n       [(- int (Suc n))] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (- int (Suc n)))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. [int n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))", "using Zp_nat_inc_rep"], ["proof (prove)\nusing this:\n  [?n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int ?n))\n\ngoal (1 subgoal):\n 1. [int n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))", "by (simp add: add_pow_int_ge)"], ["proof (state)\nthis:\n  [int n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       [(- int (Suc n))] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (- int (Suc n)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       [(- int (Suc n))] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (- int (Suc n)))", "case (neg n)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>n.\n       [(- int (Suc n))] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (- int (Suc n)))", "show \"\\<And>n. [(- int (Suc n))] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (- int (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       [(- int (Suc n))] \\<cdot> \\<one> =\n       (\\<lambda>m. p_residue m (- int (Suc n)))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "show \"([(- int (Suc n))] \\<cdot> \\<one>) m =  p_residue m (- int (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "have \"[(- int (Suc n))] \\<cdot> \\<one> = \\<ominus> ([(int (Suc n))] \\<cdot> \\<one>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [(- int (Suc n))] \\<cdot> \\<one> =\n    \\<ominus> ([int (Suc n)] \\<cdot> \\<one>)", "using  a_inv_def abelian_group.a_group add_pow_def cring.axioms(1) domain_def \n            negative_zless_0 ring_def R.add.int_pow_neg R.one_closed"], ["proof (prove)\nusing this:\n  a_inv ?R = m_inv (add_monoid ?R)\n  abelian_group ?G \\<Longrightarrow> Group.group (add_monoid ?G)\n  [?k] \\<cdot>\\<^bsub>?R\\<^esub> ?a = ?a [^]\\<^bsub>add_monoid ?R\\<^esub> ?k\n  cring ?R \\<Longrightarrow> ring ?R\n  domain ?R \\<equiv> cring ?R \\<and> domain_axioms ?R\n  - int (Suc ?n) < 0\n  ring ?R \\<equiv>\n  abelian_group ?R \\<and> Group.monoid ?R \\<and> ring_axioms ?R\n  ?x \\<in> carrier Zp \\<Longrightarrow>\n  [(- ?i)] \\<cdot> ?x = \\<ominus> ([?i] \\<cdot> ?x)\n  \\<one> \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. [(- int (Suc n))] \\<cdot> \\<one> =\n    \\<ominus> ([int (Suc n)] \\<cdot> \\<one>)", "by blast"], ["proof (state)\nthis:\n  [(- int (Suc n))] \\<cdot> \\<one> =\n  \\<ominus> ([int (Suc n)] \\<cdot> \\<one>)\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  [(- int (Suc n))] \\<cdot> \\<one> =\n  \\<ominus> ([int (Suc n)] \\<cdot> \\<one>)", "have \"([(- int (Suc n))] \\<cdot> \\<one>) m = (\\<ominus> ([(int (Suc n))] \\<cdot> \\<one>)) m\""], ["proof (prove)\nusing this:\n  [(- int (Suc n))] \\<cdot> \\<one> =\n  \\<ominus> ([int (Suc n)] \\<cdot> \\<one>)\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m =\n    (\\<ominus> ([int (Suc n)] \\<cdot> \\<one>)) m", "by simp"], ["proof (state)\nthis:\n  ([(- int (Suc n))] \\<cdot> \\<one>) m =\n  (\\<ominus> ([int (Suc n)] \\<cdot> \\<one>)) m\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "have \"\\<one> \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<in> carrier Zp", "using  cring.cring_simprules(6) domain_def"], ["proof (prove)\nusing this:\n  cring ?R \\<Longrightarrow> \\<one>\\<^bsub>?R\\<^esub> \\<in> carrier ?R\n  domain ?R \\<equiv> cring ?R \\<and> domain_axioms ?R\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> carrier Zp", "by blast"], ["proof (state)\nthis:\n  \\<one> \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "have \"([(int (Suc n))] \\<cdot> \\<one>) = ([(Suc n)] \\<cdot> \\<one>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [int (Suc n)] \\<cdot> \\<one> = [Suc n] \\<cdot> \\<one>", "by (metis add_pow_def int_pow_int)"], ["proof (state)\nthis:\n  [int (Suc n)] \\<cdot> \\<one> = [Suc n] \\<cdot> \\<one>\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  [int (Suc n)] \\<cdot> \\<one> = [Suc n] \\<cdot> \\<one>", "have \"([(int (Suc n))] \\<cdot> \\<one>) \\<in> carrier Zp\""], ["proof (prove)\nusing this:\n  [int (Suc n)] \\<cdot> \\<one> = [Suc n] \\<cdot> \\<one>\n\ngoal (1 subgoal):\n 1. [int (Suc n)] \\<cdot> \\<one> \\<in> carrier Zp", "using Zp_nat_inc_closed"], ["proof (prove)\nusing this:\n  [int (Suc n)] \\<cdot> \\<one> = [Suc n] \\<cdot> \\<one>\n  [?n] \\<cdot> \\<one> \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. [int (Suc n)] \\<cdot> \\<one> \\<in> carrier Zp", "by simp"], ["proof (state)\nthis:\n  [int (Suc n)] \\<cdot> \\<one> \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  [int (Suc n)] \\<cdot> \\<one> \\<in> carrier Zp", "have P0: \"([(- int (Suc n))] \\<cdot> \\<one>) m =  \\<ominus>\\<^bsub>Zp_res_ring m\\<^esub> (([(int (Suc n))] \\<cdot> \\<one>) m)\""], ["proof (prove)\nusing this:\n  [int (Suc n)] \\<cdot> \\<one> \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m =\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> ([int\n               (Suc n)] \\<cdot> \\<one>)\n             m", "using Zp_def prime"], ["proof (prove)\nusing this:\n  [int (Suc n)] \\<cdot> \\<one> \\<in> carrier Zp\n  Zp \\<equiv> padic_int p\n  prime p\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m =\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> ([int\n               (Suc n)] \\<cdot> \\<one>)\n             m", "using \\<open>[(- int (Suc n))] \\<cdot> \\<one> = \\<ominus> ([int (Suc n)] \\<cdot> \\<one>)\\<close> padic_integers.Zp_residue_a_inv(1) \n          padic_integers_axioms"], ["proof (prove)\nusing this:\n  [int (Suc n)] \\<cdot> \\<one> \\<in> carrier Zp\n  Zp \\<equiv> padic_int p\n  prime p\n  [(- int (Suc n))] \\<cdot> \\<one> =\n  \\<ominus> ([int (Suc n)] \\<cdot> \\<one>)\n  \\<lbrakk>padic_integers ?p; ?a \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> (\\<ominus>\\<^bsub>padic_int ?p\\<^esub> ?a) ?k =\n                    \\<ominus>\\<^bsub>residue_ring (?p ^ ?k)\\<^esub> ?a ?k\n  padic_integers p\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m =\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> ([int\n               (Suc n)] \\<cdot> \\<one>)\n             m", "by auto"], ["proof (state)\nthis:\n  ([(- int (Suc n))] \\<cdot> \\<one>) m =\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> ([int\n             (Suc n)] \\<cdot> \\<one>)\n           m\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "have \"(([(int (Suc n))] \\<cdot> \\<one>) m) = (p_residue m (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([int (Suc n)] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "using Zp_nat_inc_rep"], ["proof (prove)\nusing this:\n  [?n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m (int ?n))\n\ngoal (1 subgoal):\n 1. ([int (Suc n)] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "by (simp add: add_pow_int_ge)"], ["proof (state)\nthis:\n  ([int (Suc n)] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  ([int (Suc n)] \\<cdot> \\<one>) m = p_residue m (int (Suc n))", "have P1: \"([(- int (Suc n))] \\<cdot> \\<one>) m =  \\<ominus>\\<^bsub>Zp_res_ring m\\<^esub>(p_residue m (Suc n))\""], ["proof (prove)\nusing this:\n  ([int (Suc n)] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m =\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n))", "using P0"], ["proof (prove)\nusing this:\n  ([int (Suc n)] \\<cdot> \\<one>) m = p_residue m (int (Suc n))\n  ([(- int (Suc n))] \\<cdot> \\<one>) m =\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> ([int\n             (Suc n)] \\<cdot> \\<one>)\n           m\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m =\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n))", "by auto"], ["proof (state)\nthis:\n  ([(- int (Suc n))] \\<cdot> \\<one>) m =\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n))\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "have  \"\\<ominus>\\<^bsub>Zp_res_ring m\\<^esub>(p_residue m (Suc n)) =  p_residue m (- int (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "proof(cases \"m=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  m = 0", "have 0:\"\\<ominus>\\<^bsub>Zp_res_ring m\\<^esub>(p_residue m (Suc n)) =\\<ominus>\\<^bsub>Zp_res_ring 0\\<^esub>(p_residue 0 (Suc n))\""], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> p_residue 0 (int (Suc n))", "by blast"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> p_residue 0 (int (Suc n))\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> p_residue 0 (int (Suc n))", "have 1:\"\\<ominus>\\<^bsub>Zp_res_ring m\\<^esub>(p_residue m (Suc n)) =\\<ominus>\\<^bsub>Zp_res_ring 0\\<^esub> (p_residue 1 (Suc n))\""], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> p_residue 0 (int (Suc n))\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> p_residue 1 (int (Suc n))", "by (metis p_res_ring_0' residue_a_inv_closed)"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> p_residue 1 (int (Suc n))\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> p_residue 1 (int (Suc n))", "have 2:\"\\<ominus>\\<^bsub>Zp_res_ring m\\<^esub>(p_residue m (Suc n)) =\\<ominus>\\<^bsub>Zp_res_ring 0\\<^esub> 0\""], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> p_residue 1 (int (Suc n))\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> 0", "by (metis p_res_ring_0' residue_a_inv_closed)"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> 0", "have 3:\"\\<ominus>\\<^bsub>Zp_res_ring m\\<^esub>(p_residue m (Suc n)) =0\""], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> 0\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    0", "using residue_1_prop p_res_ring_0' residue_a_inv_closed"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ 0)\\<^esub> 0\n  \\<ominus>\\<^bsub>residue_ring 1\\<^esub> \\<zero>\\<^bsub>residue_ring 1\\<^esub> =\n  \\<zero>\\<^bsub>residue_ring 1\\<^esub>\n  ?x \\<in> carrier (residue_ring (p ^ 0)) \\<Longrightarrow> ?x = 0\n  \\<ominus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?y\n  \\<in> carrier (residue_ring (p ^ ?k))\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    0", "by presburger"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "have 4: \"p_residue m (- int (Suc n)) \\<in> carrier (Zp_res_ring 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p_residue m (- int (Suc n)) \\<in> carrier (residue_ring (p ^ 0))", "using p_res_ring_0 True residue_1_zero p_residue_range'"], ["proof (prove)\nusing this:\n  carrier (residue_ring (p ^ 0)) = {0}\n  m = 0\n  residue 1 ?n = 0\n  p_residue ?m ?n \\<in> carrier (residue_ring (p ^ ?m))\n\ngoal (1 subgoal):\n 1. p_residue m (- int (Suc n)) \\<in> carrier (residue_ring (p ^ 0))", "by blast"], ["proof (state)\nthis:\n  p_residue m (- int (Suc n)) \\<in> carrier (residue_ring (p ^ 0))\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  p_residue m (- int (Suc n)) \\<in> carrier (residue_ring (p ^ 0))", "show ?thesis"], ["proof (prove)\nusing this:\n  p_residue m (- int (Suc n)) \\<in> carrier (residue_ring (p ^ 0))\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "using \"3\" True residue_1_zero"], ["proof (prove)\nusing this:\n  p_residue m (- int (Suc n)) \\<in> carrier (residue_ring (p ^ 0))\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  0\n  m = 0\n  residue 1 ?n = 0\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "by (simp add: p_res_ring_0')"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  p_residue m (- int (Suc n))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  m \\<noteq> 0", "have R: \"residues (p^m)\""], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residues (p ^ m)", "using padic_integers.p_residues padic_integers_axioms"], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n  \\<lbrakk>padic_integers ?p; 0 < ?m\\<rbrakk>\n  \\<Longrightarrow> residues (?p ^ ?m)\n  padic_integers p\n\ngoal (1 subgoal):\n 1. residues (p ^ m)", "by blast"], ["proof (state)\nthis:\n  residues (p ^ m)\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "have \"\\<ominus>\\<^bsub>Zp_res_ring m\\<^esub> p_residue m (int (Suc n)) = \\<ominus>\\<^bsub>Zp_res_ring m\\<^esub> (int (Suc n)) mod (p^m) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> int (Suc n) mod p ^ m", "using R residue_def residues.neg_cong residues.res_neg_eq  p_residue_alt_def"], ["proof (prove)\nusing this:\n  residues (p ^ m)\n  residue ?n ?m = ?m mod ?n\n  residues ?m \\<Longrightarrow>\n  \\<ominus>\\<^bsub>residue_ring ?m\\<^esub> (?x mod ?m) = - ?x mod ?m\n  residues ?m \\<Longrightarrow>\n  \\<ominus>\\<^bsub>residue_ring ?m\\<^esub> ?x = - ?x mod ?m\n  p_residue ?m ?n = ?n mod p ^ ?m\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> int (Suc n) mod p ^ m", "by auto"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> int (Suc n) mod p ^ m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> int (Suc n) mod p ^ m", "have \"\\<ominus>\\<^bsub>Zp_res_ring m\\<^esub> p_residue m (int (Suc n)) = (-(int (Suc n))) mod (p^m)\""], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> int (Suc n) mod p ^ m\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    - int (Suc n) mod p ^ m", "using R residues.res_neg_eq"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> int (Suc n) mod p ^ m\n  residues (p ^ m)\n  residues ?m \\<Longrightarrow>\n  \\<ominus>\\<^bsub>residue_ring ?m\\<^esub> ?x = - ?x mod ?m\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    - int (Suc n) mod p ^ m", "by auto"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  - int (Suc n) mod p ^ m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  - int (Suc n) mod p ^ m", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  - int (Suc n) mod p ^ m\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m\n             (int (Suc n)) =\n    p_residue m (- int (Suc n))", "by (simp add: p_residue_alt_def)"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  p_residue m (- int (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  p_residue m (- int (Suc n))\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "then"], ["proof (chain)\npicking this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  p_residue m (- int (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  p_residue m (- int (Suc n))\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "using P1"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n)) =\n  p_residue m (- int (Suc n))\n  ([(- int (Suc n))] \\<cdot> \\<one>) m =\n  \\<ominus>\\<^bsub>residue_ring (p ^ m)\\<^esub> p_residue m (int (Suc n))\n\ngoal (1 subgoal):\n 1. ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))", "by linarith"], ["proof (state)\nthis:\n  ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ([(- int (Suc n))] \\<cdot> \\<one>) m = p_residue m (- int (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [(- int (Suc ?n))] \\<cdot> \\<one> =\n  (\\<lambda>m. p_residue m (- int (Suc ?n)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) Zp_int_inc_res:\n  fixes n::int\n  shows  \"([n] \\<cdot> \\<one>) k = n mod (p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([n] \\<cdot> \\<one>) k = n mod p ^ k", "using Zp_int_inc_rep p_residue_def"], ["proof (prove)\nusing this:\n  [?n] \\<cdot> \\<one> = (\\<lambda>m. p_residue m ?n)\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n\ngoal (1 subgoal):\n 1. ([n] \\<cdot> \\<one>) k = n mod p ^ k", "by (simp add: p_residue_alt_def)"], ["", "abbreviation(in padic_integers)(input) \\<p> where\n\"\\<p> \\<equiv> [p] \\<cdot> \\<one>\""], ["", "lemma(in padic_integers) p_natpow_prod:\n\"\\<p>[^](n::nat) \\<otimes> \\<p>[^](m::nat) = \\<p>[^](n + m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (n + m)", "by (simp add: R.nat_pow_mult)"], ["", "lemma(in padic_integers) p_natintpow_prod:\n  assumes \"(m::int) \\<ge> 0\"\n  shows \"\\<p>[^](n::nat) \\<otimes> \\<p>[^]m = \\<p>[^](n + m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (int n + m)", "using p_natpow_prod[of n \"nat m\"] assms int_pow_def[of Zp \\<p> m] int_pow_def[of Zp \\<p> \"n + m\"]"], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] nat m =\n  [p] \\<cdot> \\<one> [^] (n + nat m)\n  0 \\<le> m\n  [p] \\<cdot> \\<one> [^] m =\n  (let p = rec_nat \\<one> (\\<lambda>u b. b \\<otimes> [p] \\<cdot> \\<one>)\n   in if m < 0 then inv p (nat (- m)) else p (nat m))\n  [p] \\<cdot> \\<one> [^] (int n + m) =\n  (let p = rec_nat \\<one> (\\<lambda>u b. b \\<otimes> [p] \\<cdot> \\<one>)\n   in if int n + m < 0 then inv p (nat (- (int n + m)))\n      else p (nat (int n + m)))\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (int n + m)", "by (metis (no_types, lifting) int_nat_eq int_pow_int of_nat_add)"], ["", "lemma(in padic_integers) p_intnatpow_prod:\n  assumes \"(n::int) \\<ge> 0\"\n  shows \"\\<p>[^]n \\<otimes> \\<p>[^](m::nat) = \\<p>[^](m + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (int m + n)", "using p_natintpow_prod[of n m] assms mult_comm[of \"\\<p>[^]n\" \"\\<p>[^]m\"]"], ["proof (prove)\nusing this:\n  0 \\<le> n \\<Longrightarrow>\n  [p] \\<cdot> \\<one> [^] m \\<otimes> [p] \\<cdot> \\<one> [^] n =\n  [p] \\<cdot> \\<one> [^] (int m + n)\n  0 \\<le> n\n  [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n  [p] \\<cdot> \\<one> [^] m \\<otimes> [p] \\<cdot> \\<one> [^] n\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (int m + n)", "by simp"], ["", "lemma(in padic_integers) p_int_pow_prod:\n  assumes \"(n::int) \\<ge> 0\"\n  assumes \"(m::int) \\<ge> 0\"\n  shows \"\\<p>[^]n \\<otimes> \\<p>[^]m = \\<p>[^](m + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (m + n)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (m + n)", "have \"nat n + nat m = nat (n + m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat n + nat m = nat (n + m)", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> n\n  0 \\<le> m\n\ngoal (1 subgoal):\n 1. nat n + nat m = nat (n + m)", "by (simp add: nat_add_distrib)"], ["proof (state)\nthis:\n  nat n + nat m = nat (n + m)\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (m + n)", "then"], ["proof (chain)\npicking this:\n  nat n + nat m = nat (n + m)", "have \"\\<p> [^] (nat n + nat m) = \\<p>[^](n + m)\""], ["proof (prove)\nusing this:\n  nat n + nat m = nat (n + m)\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] (nat n + nat m) = [p] \\<cdot> \\<one> [^] (n + m)", "using assms"], ["proof (prove)\nusing this:\n  nat n + nat m = nat (n + m)\n  0 \\<le> n\n  0 \\<le> m\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] (nat n + nat m) = [p] \\<cdot> \\<one> [^] (n + m)", "by (simp add: \\<open>nat n + nat m = nat (n + m)\\<close>)"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] (nat n + nat m) = [p] \\<cdot> \\<one> [^] (n + m)\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (m + n)", "then"], ["proof (chain)\npicking this:\n  [p] \\<cdot> \\<one> [^] (nat n + nat m) = [p] \\<cdot> \\<one> [^] (n + m)", "show ?thesis"], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] (nat n + nat m) = [p] \\<cdot> \\<one> [^] (n + m)\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (m + n)", "using assms p_natpow_prod[of \"nat n\" \"nat m\"]"], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] (nat n + nat m) = [p] \\<cdot> \\<one> [^] (n + m)\n  0 \\<le> n\n  0 \\<le> m\n  [p] \\<cdot> \\<one> [^] nat n \\<otimes> [p] \\<cdot> \\<one> [^] nat m =\n  [p] \\<cdot> \\<one> [^] (nat n + nat m)\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] (m + n)", "by (smt pow_nat)"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] n \\<otimes> [p] \\<cdot> \\<one> [^] m =\n  [p] \\<cdot> \\<one> [^] (m + n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) p_natpow_prod_Suc:\n\"\\<p> \\<otimes> \\<p>[^](m::nat) = \\<p>[^](Suc m)\"\n\"\\<p>[^](m::nat)  \\<otimes> \\<p> = \\<p>[^](Suc m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] Suc m &&&\n    [p] \\<cdot> \\<one> [^] m \\<otimes> [p] \\<cdot> \\<one> =\n    [p] \\<cdot> \\<one> [^] Suc m", "using R.nat_pow_Suc2  R.nat_pow_Suc"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier Zp \\<Longrightarrow>\n  ?x [^] Suc ?n = ?x \\<otimes> ?x [^] ?n\n  ?x [^] Suc ?n = ?x [^] ?n \\<otimes> ?x\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> \\<otimes> [p] \\<cdot> \\<one> [^] m =\n    [p] \\<cdot> \\<one> [^] Suc m &&&\n    [p] \\<cdot> \\<one> [^] m \\<otimes> [p] \\<cdot> \\<one> =\n    [p] \\<cdot> \\<one> [^] Suc m", "by auto"], ["", "lemma(in padic_integers) power_residue:\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"k > 0\"\n  shows \"(a[^]\\<^bsub>Zp\\<^esub> (n::nat)) k = (a k)^n mod (p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a [^] n) k = a k ^ n mod p ^ k", "apply(induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (a [^] 0) k = a k ^ 0 mod p ^ k\n 2. \\<And>n.\n       (a [^] n) k = a k ^ n mod p ^ k \\<Longrightarrow>\n       (a [^] Suc n) k = a k ^ Suc n mod p ^ k", "using p_residues assms(2) residue_of_one(1) residues.one_cong"], ["proof (prove)\nusing this:\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  0 < k\n  0 < ?k \\<Longrightarrow>\n  \\<one> ?k = \\<one>\\<^bsub>residue_ring (p ^ ?k)\\<^esub>\n  residues ?m \\<Longrightarrow>\n  \\<one>\\<^bsub>residue_ring ?m\\<^esub> = 1 mod ?m\n\ngoal (2 subgoals):\n 1. (a [^] 0) k = a k ^ 0 mod p ^ k\n 2. \\<And>n.\n       (a [^] n) k = a k ^ n mod p ^ k \\<Longrightarrow>\n       (a [^] Suc n) k = a k ^ Suc n mod p ^ k", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (a [^] n) k = a k ^ n mod p ^ k \\<Longrightarrow>\n       (a [^] Suc n) k = a k ^ Suc n mod p ^ k", "by (simp add: assms(1) mod_mult_left_eq power_commutes residue_of_prod')"], ["", "(*************************************************************************************************)\n(*************************************************************************************************)\n(*****************************)"], ["", "section\\<open>The Valuation on $\\mathbb{Z}_p$\\<close>"], ["", "(**********************************)\n(*************************************************************************************************)\n(*************************************************************************************************)\n\n  (**********************************************************************)\n  (**********************************************************************)"], ["", "subsection\\<open>The Integer-Valued and Extended Integer-Valued Valuations\\<close>"], ["", "(**********************************************************************)\n  (**********************************************************************)"], ["", "fun fromeint :: \"eint \\<Rightarrow> int\" where\n  \"fromeint (eint x) = x\""], ["", "text\\<open>The extended-integer-valued $p$-adic valuation on $\\mathbb{Z}_p$:\\<close>"], ["", "definition(in padic_integers) val_Zp  where\n\"val_Zp = (\\<lambda>x. (if (x = \\<zero>) then (\\<infinity>::eint) else (eint (padic_val p x))))\""], ["", "text\\<open>We also define an integer-valued valuation on the nonzero elements of $\\mathbb{Z}_p$, for simplified reasoning\\<close>"], ["", "definition(in padic_integers) ord_Zp where\n\"ord_Zp = padic_val p\""], ["", "text\\<open>Ord of additive inverse\\<close>"], ["", "lemma(in padic_integers) ord_Zp_of_a_inv:\n  assumes \"a \\<in> nonzero Zp\"\n  shows \"ord_Zp a = ord_Zp (\\<ominus>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp a = ord_Zp (\\<ominus> a)", "using ord_Zp_def Zp_def assms \n      padic_val_a_inv prime"], ["proof (prove)\nusing this:\n  ord_Zp = padic_val p\n  Zp \\<equiv> padic_int p\n  a \\<in> nonzero Zp\n  \\<lbrakk>prime ?p; ?a \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> padic_val ?p ?a =\n                    padic_val ?p (\\<ominus>\\<^bsub>padic_int ?p\\<^esub> ?a)\n  prime p\n\ngoal (1 subgoal):\n 1. ord_Zp a = ord_Zp (\\<ominus> a)", "by (simp add: domain.nonzero_memE(1) padic_int_is_domain)"], ["", "lemma(in padic_integers) val_Zp_of_a_inv:\n  assumes \"a \\<in> carrier Zp\"\n  shows \"val_Zp a = val_Zp (\\<ominus>a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp a = val_Zp (\\<ominus> a)", "using R.add.inv_eq_1_iff Zp_def assms padic_val_a_inv prime val_Zp_def"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier Zp \\<Longrightarrow>\n  (\\<ominus> ?x = \\<zero>) = (?x = \\<zero>)\n  Zp \\<equiv> padic_int p\n  a \\<in> carrier Zp\n  \\<lbrakk>prime ?p; ?a \\<in> carrier (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> padic_val ?p ?a =\n                    padic_val ?p (\\<ominus>\\<^bsub>padic_int ?p\\<^esub> ?a)\n  prime p\n  val_Zp =\n  (\\<lambda>x. if x = \\<zero> then \\<infinity> else eint (padic_val p x))\n\ngoal (1 subgoal):\n 1. val_Zp a = val_Zp (\\<ominus> a)", "by auto"], ["", "text\\<open>Ord-based criterion for being nonzero:\\<close>"], ["", "lemma(in padic_integers) ord_of_nonzero:\n  assumes \"x \\<in>carrier Zp\"\n  assumes \"ord_Zp x \\<ge>0\" \n  shows \"x \\<noteq> \\<zero>\"\n        \"x \\<in> nonzero Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> \\<zero> &&& x \\<in> nonzero Zp", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<noteq> \\<zero>\n 2. x \\<in> nonzero Zp", "show \"x \\<noteq> \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> \\<zero>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. x = \\<zero> \\<Longrightarrow> False", "assume \"x = \\<zero>\""], ["proof (state)\nthis:\n  x = \\<zero>\n\ngoal (1 subgoal):\n 1. x = \\<zero> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x = \\<zero>", "have \"ord_Zp x = -1\""], ["proof (prove)\nusing this:\n  x = \\<zero>\n\ngoal (1 subgoal):\n 1. ord_Zp x = - 1", "using ord_Zp_def padic_val_def Zp_def  Zp_defs(2)"], ["proof (prove)\nusing this:\n  x = \\<zero>\n  ord_Zp = padic_val p\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n  Zp \\<equiv> padic_int p\n  \\<zero> = padic_zero p\n\ngoal (1 subgoal):\n 1. ord_Zp x = - 1", "by auto"], ["proof (state)\nthis:\n  ord_Zp x = - 1\n\ngoal (1 subgoal):\n 1. x = \\<zero> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ord_Zp x = - 1", "show False"], ["proof (prove)\nusing this:\n  ord_Zp x = - 1\n\ngoal (1 subgoal):\n 1. False", "using assms(2)"], ["proof (prove)\nusing this:\n  ord_Zp x = - 1\n  0 \\<le> ord_Zp x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. x \\<in> nonzero Zp", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> \\<zero>", "show \"x \\<in> nonzero Zp\""], ["proof (prove)\nusing this:\n  x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. x \\<in> nonzero Zp", "using nonzero_def assms(1)"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<zero>\n  nonzero ?R = {a \\<in> carrier ?R. a \\<noteq> \\<zero>\\<^bsub>?R\\<^esub>}\n  x \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. x \\<in> nonzero Zp", "by (simp add: nonzero_def)"], ["proof (state)\nthis:\n  x \\<in> nonzero Zp\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) not_nonzero_Zp:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<notin> nonzero Zp\"\n  shows \"x = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = \\<zero>", "using assms(1) assms(2) nonzero_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x \\<notin> nonzero Zp\n  nonzero ?R = {a \\<in> carrier ?R. a \\<noteq> \\<zero>\\<^bsub>?R\\<^esub>}\n\ngoal (1 subgoal):\n 1. x = \\<zero>", "by fastforce"], ["", "lemma(in padic_integers) not_nonzero_Qp:\n  assumes \"x \\<in> carrier Q\\<^sub>p\"\n  assumes \"x \\<notin> nonzero Q\\<^sub>p\"\n  shows \"x = \\<zero>\\<^bsub>Q\\<^sub>p\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = \\<zero>\\<^bsub>Q\\<^sub>p\\<^esub>", "using assms(1) assms(2) nonzero_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier Q\\<^sub>p\n  x \\<notin> nonzero Q\\<^sub>p\n  nonzero ?R = {a \\<in> carrier ?R. a \\<noteq> \\<zero>\\<^bsub>?R\\<^esub>}\n\ngoal (1 subgoal):\n 1. x = \\<zero>\\<^bsub>Q\\<^sub>p\\<^esub>", "by force"], ["", "text\\<open>Relationship between val and ord\\<close>"], ["", "lemma(in padic_integers) val_ord_Zp:\n  assumes \"a \\<noteq> \\<zero>\"\n  shows \"val_Zp a = eint (ord_Zp a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp a = eint (ord_Zp a)", "by (simp add: assms ord_Zp_def val_Zp_def)"], ["", "lemma(in padic_integers) ord_pos:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq> \\<zero>\"\n  shows \"ord_Zp x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> ord_Zp x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> ord_Zp x", "have \"x \\<noteq>padic_zero p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p", "using Zp_def assms(2) Zp_defs(2)"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  x \\<noteq> \\<zero>\n  \\<zero> = padic_zero p\n\ngoal (1 subgoal):\n 1. x \\<noteq> padic_zero p", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. 0 \\<le> ord_Zp x", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> padic_zero p", "have \"ord_Zp x = int (LEAST k. x (Suc k) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^Suc k)\\<^esub>)\""], ["proof (prove)\nusing this:\n  x \\<noteq> padic_zero p\n\ngoal (1 subgoal):\n 1. ord_Zp x =\n    int (LEAST k.\n            x (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "using ord_Zp_def padic_val_def"], ["proof (prove)\nusing this:\n  x \\<noteq> padic_zero p\n  ord_Zp = padic_val p\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. ord_Zp x =\n    int (LEAST k.\n            x (Suc k) \\<noteq>\n            \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "by auto"], ["proof (state)\nthis:\n  ord_Zp x =\n  int (LEAST k.\n          x (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ord_Zp x", "then"], ["proof (chain)\npicking this:\n  ord_Zp x =\n  int (LEAST k.\n          x (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)", "show ?thesis"], ["proof (prove)\nusing this:\n  ord_Zp x =\n  int (LEAST k.\n          x (Suc k) \\<noteq>\n          \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ord_Zp x", "by linarith"], ["proof (state)\nthis:\n  0 \\<le> ord_Zp x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) val_pos:\n  assumes \"x \\<in> carrier Zp\"\n  shows \"val_Zp x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> val_Zp x", "unfolding val_Zp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (if x = \\<zero> then \\<infinity> else eint (padic_val p x))", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if x = \\<zero> then \\<infinity> else eint (padic_val p x))", "by (metis (full_types) eint_0 eint_ord_simps(1) eint_ord_simps(3) ord_Zp_def ord_pos)"], ["", "text\\<open>For passing between nat and int castings of ord\\<close>"], ["", "lemma(in padic_integers) ord_nat:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"int (nat (ord_Zp x)) = ord_Zp x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (nat (ord_Zp x)) = ord_Zp x", "using ord_pos"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> ord_Zp ?x\n\ngoal (1 subgoal):\n 1. int (nat (ord_Zp x)) = ord_Zp x", "by (simp add: assms(1) assms(2))"], ["", "lemma(in padic_integers) zero_below_ord:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"n \\<le> ord_Zp x\"\n  shows  \"x n =  0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x n = 0", "have \"x n =  \\<zero>\\<^bsub>residue_ring (p^n)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "using ord_Zp_def zero_below_val Zp_def assms(1) assms(2) prime  padic_int_simps(5)"], ["proof (prove)\nusing this:\n  ord_Zp = padic_val p\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = 0\n  Zp \\<equiv> padic_int p\n  x \\<in> carrier Zp\n  int n \\<le> ord_Zp x\n  prime p\n  carrier (padic_int ?p) = padic_set ?p\n\ngoal (1 subgoal):\n 1. x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal (1 subgoal):\n 1. x n = 0", "then"], ["proof (chain)\npicking this:\n  x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n\ngoal (1 subgoal):\n 1. x n = 0", "using residue_ring_def"], ["proof (prove)\nusing this:\n  x n = \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. x n = 0", "by simp"], ["proof (state)\nthis:\n  x n = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) zero_below_val_Zp:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"n \\<le> val_Zp x\"\n  shows  \"x n =  0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n = 0", "by (metis assms(1) assms(2) eint_ord_simps(1) ord_Zp_def residue_of_zero(2) val_Zp_def zero_below_ord)"], ["", "lemma(in padic_integers) below_ord_zero:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x (Suc n) \\<noteq>  0\"\n  shows  \"n \\<ge> ord_Zp x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp x \\<le> int n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ord_Zp x \\<le> int n", "have 0: \"x \\<in> padic_set p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> padic_set p", "using Zp_def assms(1)  Zp_defs(3)"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  x \\<in> carrier Zp\n  carrier Zp = padic_set p\n\ngoal (1 subgoal):\n 1. x \\<in> padic_set p", "by auto"], ["proof (state)\nthis:\n  x \\<in> padic_set p\n\ngoal (1 subgoal):\n 1. ord_Zp x \\<le> int n", "have 1: \"x (Suc n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p^(Suc n))\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (Suc n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc n)\\<^esub>", "using residue_ring_def assms(2)"], ["proof (prove)\nusing this:\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n  x (Suc n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc n)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  x (Suc n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc n)\\<^esub>\n\ngoal (1 subgoal):\n 1. ord_Zp x \\<le> int n", "have \"of_nat n \\<ge> (padic_val p x )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. padic_val p x \\<le> int n", "using 0 1 below_val_zero prime"], ["proof (prove)\nusing this:\n  x \\<in> padic_set p\n  x (Suc n) \\<noteq> \\<zero>\\<^bsub>residue_ring (p ^ Suc n)\\<^esub>\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   ?x (Suc ?n) \\<noteq>\n   \\<zero>\\<^bsub>residue_ring (?p ^ Suc ?n)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> padic_val ?p ?x \\<le> int ?n\n  prime p\n\ngoal (1 subgoal):\n 1. padic_val p x \\<le> int n", "by auto"], ["proof (state)\nthis:\n  padic_val p x \\<le> int n\n\ngoal (1 subgoal):\n 1. ord_Zp x \\<le> int n", "then"], ["proof (chain)\npicking this:\n  padic_val p x \\<le> int n", "show ?thesis"], ["proof (prove)\nusing this:\n  padic_val p x \\<le> int n\n\ngoal (1 subgoal):\n 1. ord_Zp x \\<le> int n", "using ord_Zp_def"], ["proof (prove)\nusing this:\n  padic_val p x \\<le> int n\n  ord_Zp = padic_val p\n\ngoal (1 subgoal):\n 1. ord_Zp x \\<le> int n", "by auto"], ["proof (state)\nthis:\n  ord_Zp x \\<le> int n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) below_val_Zp_zero:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x (Suc n) \\<noteq>  0\"\n  shows  \"n \\<ge> val_Zp x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp x \\<le> eint (int n)", "by (metis Zp_def assms(1) assms(2) eint_ord_simps(1) padic_integers.below_ord_zero\n      padic_integers.residue_of_zero(2) padic_integers.val_ord_Zp padic_integers_axioms)"], ["", "lemma(in padic_integers) nonzero_imp_ex_nonzero_res:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq> \\<zero>\"\n  shows \"\\<exists>k. x (Suc k) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. x (Suc k) \\<noteq> 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k. x (Suc k) \\<noteq> 0", "have 0: \"x 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x 0 = 0", "using Zp_def assms(1) padic_int_simps(5) padic_set_zero_res prime"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  x \\<in> carrier Zp\n  carrier (padic_int ?p) = padic_set ?p\n  \\<lbrakk>prime ?p; ?f \\<in> padic_set ?p\\<rbrakk>\n  \\<Longrightarrow> ?f 0 = 0\n  prime p\n\ngoal (1 subgoal):\n 1. x 0 = 0", "by auto"], ["proof (state)\nthis:\n  x 0 = 0\n\ngoal (1 subgoal):\n 1. \\<exists>k. x (Suc k) \\<noteq> 0", "have \"\\<exists>k. k > 0 \\<and> x k \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k>0. x k \\<noteq> 0", "apply(rule ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k>0. x k \\<noteq> 0) \\<Longrightarrow> False", "using 0 Zp_defs"], ["proof (prove)\nusing this:\n  x 0 = 0\n  \\<one> = padic_one p\n  \\<zero> = padic_zero p\n  carrier Zp = padic_set p\n  (\\<otimes>) = padic_mult p\n  (\\<oplus>) = padic_add p\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k>0. x k \\<noteq> 0) \\<Longrightarrow> False", "unfolding padic_zero_def"], ["proof (prove)\nusing this:\n  x 0 = 0\n  \\<one> = padic_one p\n  \\<zero> = (\\<lambda>n. 0)\n  carrier Zp = padic_set p\n  (\\<otimes>) = padic_mult p\n  (\\<oplus>) = padic_add p\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>k>0. x k \\<noteq> 0) \\<Longrightarrow> False", "by (metis assms(2) ext neq0_conv)"], ["proof (state)\nthis:\n  \\<exists>k>0. x k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k. x (Suc k) \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  \\<exists>k>0. x k \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>k>0. x k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k. x (Suc k) \\<noteq> 0", "using not0_implies_Suc"], ["proof (prove)\nusing this:\n  \\<exists>k>0. x k \\<noteq> 0\n  ?n \\<noteq> 0 \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. \\<exists>k. x (Suc k) \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  \\<exists>k. x (Suc k) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ord_suc_nonzero:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"ord_Zp x = n\"\n  shows \"x (Suc n) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (Suc n) \\<noteq> 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x (Suc n) \\<noteq> 0", "obtain k where k_def: \"x (Suc k) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        x (Suc k) \\<noteq> 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1) nonzero_imp_ex_nonzero_res assms(2)"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k. ?x (Suc k) \\<noteq> 0\n  x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        x (Suc k) \\<noteq> 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x (Suc k) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  x (Suc k) \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  x (Suc k) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<noteq> 0", "using assms LeastI  nonzero_imp_ex_nonzero_res"], ["proof (prove)\nusing this:\n  x (Suc k) \\<noteq> 0\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  ord_Zp x = int n\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k. ?x (Suc k) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<noteq> 0", "unfolding ord_Zp_def padic_val_def"], ["proof (prove)\nusing this:\n  x (Suc k) \\<noteq> 0\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  (if x = padic_zero p then - 1\n   else int (LEAST k.\n                x (Suc k) \\<noteq>\n                \\<zero>\\<^bsub>residue_ring (p ^ Suc k)\\<^esub>)) =\n  int n\n  ?P ?k \\<Longrightarrow> ?P (LEAST x. ?P x)\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k. ?x (Suc k) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<noteq> 0", "by (metis (mono_tags, lifting) Zp_defs(2) k_def of_nat_eq_iff padic_zero_def padic_zero_simp(1))"], ["proof (state)\nthis:\n  x (Suc n) \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) above_ord_nonzero:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"n > ord_Zp x\"\n  shows \"x n \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<noteq> 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x n \\<noteq> 0", "have P0: \"n \\<ge> (Suc (nat (ord_Zp x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (nat (ord_Zp x)) \\<le> n", "by (simp add: Suc_le_eq assms(1) assms(2) assms(3) nat_less_iff ord_pos)"], ["proof (state)\nthis:\n  Suc (nat (ord_Zp x)) \\<le> n\n\ngoal (1 subgoal):\n 1. x n \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  Suc (nat (ord_Zp x)) \\<le> n", "have P1: \"p_residue (Suc (nat (ord_Zp x))) (x n) = x (Suc (nat (ord_Zp x)))\""], ["proof (prove)\nusing this:\n  Suc (nat (ord_Zp x)) \\<le> n\n\ngoal (1 subgoal):\n 1. p_residue (Suc (nat (ord_Zp x))) (x n) = x (Suc (nat (ord_Zp x)))", "using assms(1) p_residue_padic_int"], ["proof (prove)\nusing this:\n  Suc (nat (ord_Zp x)) \\<le> n\n  x \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?k \\<le> ?m\\<rbrakk>\n  \\<Longrightarrow> p_residue ?k (?x ?m) = ?x ?k\n\ngoal (1 subgoal):\n 1. p_residue (Suc (nat (ord_Zp x))) (x n) = x (Suc (nat (ord_Zp x)))", "by blast"], ["proof (state)\nthis:\n  p_residue (Suc (nat (ord_Zp x))) (x n) = x (Suc (nat (ord_Zp x)))\n\ngoal (1 subgoal):\n 1. x n \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  p_residue (Suc (nat (ord_Zp x))) (x n) = x (Suc (nat (ord_Zp x)))", "have P2: \"p_residue (Suc (nat (ord_Zp x))) (x n) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  p_residue (Suc (nat (ord_Zp x))) (x n) = x (Suc (nat (ord_Zp x)))\n\ngoal (1 subgoal):\n 1. p_residue (Suc (nat (ord_Zp x))) (x n) \\<noteq> 0", "using Zp_def assms(1) assms(2) ord_nat padic_integers.ord_suc_nonzero\n      padic_integers_axioms"], ["proof (prove)\nusing this:\n  p_residue (Suc (nat (ord_Zp x))) (x n) = x (Suc (nat (ord_Zp x)))\n  Zp \\<equiv> padic_int p\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> int (nat (ord_Zp ?x)) = ord_Zp ?x\n  \\<lbrakk>padic_integers ?p; ?x \\<in> carrier (padic_int ?p);\n   ?x \\<noteq> \\<zero>\\<^bsub>padic_int ?p\\<^esub>;\n   padic_integers.ord_Zp ?p ?x = int ?n\\<rbrakk>\n  \\<Longrightarrow> ?x (Suc ?n) \\<noteq> 0\n  padic_integers p\n\ngoal (1 subgoal):\n 1. p_residue (Suc (nat (ord_Zp x))) (x n) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  p_residue (Suc (nat (ord_Zp x))) (x n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x n \\<noteq> 0", "then"], ["proof (chain)\npicking this:\n  p_residue (Suc (nat (ord_Zp x))) (x n) \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  p_residue (Suc (nat (ord_Zp x))) (x n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x n \\<noteq> 0", "using P0 P1 assms(1) p_residue_padic_int[of x \"(Suc (nat (ord_Zp x)))\" n] p_residue_def"], ["proof (prove)\nusing this:\n  p_residue (Suc (nat (ord_Zp x))) (x n) \\<noteq> 0\n  Suc (nat (ord_Zp x)) \\<le> n\n  p_residue (Suc (nat (ord_Zp x))) (x n) = x (Suc (nat (ord_Zp x)))\n  x \\<in> carrier Zp\n  \\<lbrakk>x \\<in> carrier Zp; Suc (nat (ord_Zp x)) \\<le> n\\<rbrakk>\n  \\<Longrightarrow> p_residue (Suc (nat (ord_Zp x))) (x n) =\n                    x (Suc (nat (ord_Zp x)))\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n\ngoal (1 subgoal):\n 1. x n \\<noteq> 0", "by (metis ord_Zp_def padic_int_simps(2) padic_integers.zero_rep padic_integers_axioms padic_zero_simp(2))"], ["proof (state)\nthis:\n  x n \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ord_Zp_geq:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x n = 0\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"ord_Zp x \\<ge> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int n \\<le> ord_Zp x", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> int n \\<le> ord_Zp x \\<Longrightarrow> False", "assume \"\\<not> int n \\<le> ord_Zp x\""], ["proof (state)\nthis:\n  \\<not> int n \\<le> ord_Zp x\n\ngoal (1 subgoal):\n 1. \\<not> int n \\<le> ord_Zp x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> int n \\<le> ord_Zp x", "show False"], ["proof (prove)\nusing this:\n  \\<not> int n \\<le> ord_Zp x\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<not> int n \\<le> ord_Zp x\n  x \\<in> carrier Zp\n  x n = 0\n  x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. False", "using above_ord_nonzero"], ["proof (prove)\nusing this:\n  \\<not> int n \\<le> ord_Zp x\n  x \\<in> carrier Zp\n  x n = 0\n  x \\<noteq> \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>;\n   ord_Zp ?x < int ?n\\<rbrakk>\n  \\<Longrightarrow> ?x ?n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ord_equals:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x (Suc n) \\<noteq> 0\"\n  assumes \"x n = 0\"\n  shows \"ord_Zp x = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp x = int n", "using assms(1) assms(2) assms(3) below_ord_zero ord_Zp_geq residue_of_zero(2)"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x (Suc n) \\<noteq> 0\n  x n = 0\n  \\<lbrakk>?x \\<in> carrier Zp; ?x (Suc ?n) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> ord_Zp ?x \\<le> int ?n\n  \\<lbrakk>?x \\<in> carrier Zp; ?x ?n = 0; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> int ?n \\<le> ord_Zp ?x\n  \\<zero> ?k = 0\n\ngoal (1 subgoal):\n 1. ord_Zp x = int n", "by fastforce"], ["", "lemma(in padic_integers) ord_Zp_p:\n\"ord_Zp \\<p> = (1::int)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp ([p] \\<cdot> \\<one>) = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ord_Zp ([p] \\<cdot> \\<one>) = 1", "have \"ord_Zp \\<p> = int 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp ([p] \\<cdot> \\<one>) = int 1", "apply(rule ord_equals[of \\<p>])"], ["proof (prove)\ngoal (3 subgoals):\n 1. [p] \\<cdot> \\<one> \\<in> carrier Zp\n 2. ([p] \\<cdot> \\<one>) (Suc 1) \\<noteq> 0\n 3. ([p] \\<cdot> \\<one>) 1 = 0", "using Zp_int_inc_res[of p] prime_gt_1_int prime"], ["proof (prove)\nusing this:\n  ([p] \\<cdot> \\<one>) ?k = p mod p ^ ?k\n  prime ?p \\<Longrightarrow> 1 < ?p\n  prime p\n\ngoal (3 subgoals):\n 1. [p] \\<cdot> \\<one> \\<in> carrier Zp\n 2. ([p] \\<cdot> \\<one>) (Suc 1) \\<noteq> 0\n 3. ([p] \\<cdot> \\<one>) 1 = 0", "by auto"], ["proof (state)\nthis:\n  ord_Zp ([p] \\<cdot> \\<one>) = int 1\n\ngoal (1 subgoal):\n 1. ord_Zp ([p] \\<cdot> \\<one>) = 1", "then"], ["proof (chain)\npicking this:\n  ord_Zp ([p] \\<cdot> \\<one>) = int 1", "show ?thesis"], ["proof (prove)\nusing this:\n  ord_Zp ([p] \\<cdot> \\<one>) = int 1\n\ngoal (1 subgoal):\n 1. ord_Zp ([p] \\<cdot> \\<one>) = 1", "by simp"], ["proof (state)\nthis:\n  ord_Zp ([p] \\<cdot> \\<one>) = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ord_Zp_one:\n\"ord_Zp \\<one> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp \\<one> = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ord_Zp \\<one> = 0", "have \"ord_Zp ([(1::int)]\\<cdot>\\<one>) = int 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp ([1] \\<cdot> \\<one>) = int 0", "apply(rule ord_equals)"], ["proof (prove)\ngoal (3 subgoals):\n 1. [1] \\<cdot> \\<one> \\<in> carrier Zp\n 2. ([1] \\<cdot> \\<one>) (Suc 0) \\<noteq> 0\n 3. ([1] \\<cdot> \\<one>) 0 = 0", "using Zp_int_inc_res[of 1] prime_gt_1_int prime"], ["proof (prove)\nusing this:\n  ([1] \\<cdot> \\<one>) ?k = 1 mod p ^ ?k\n  prime ?p \\<Longrightarrow> 1 < ?p\n  prime p\n\ngoal (3 subgoals):\n 1. [1] \\<cdot> \\<one> \\<in> carrier Zp\n 2. ([1] \\<cdot> \\<one>) (Suc 0) \\<noteq> 0\n 3. ([1] \\<cdot> \\<one>) 0 = 0", "by auto"], ["proof (state)\nthis:\n  ord_Zp ([1] \\<cdot> \\<one>) = int 0\n\ngoal (1 subgoal):\n 1. ord_Zp \\<one> = 0", "then"], ["proof (chain)\npicking this:\n  ord_Zp ([1] \\<cdot> \\<one>) = int 0", "show ?thesis"], ["proof (prove)\nusing this:\n  ord_Zp ([1] \\<cdot> \\<one>) = int 0\n\ngoal (1 subgoal):\n 1. ord_Zp \\<one> = 0", "by simp"], ["proof (state)\nthis:\n  ord_Zp \\<one> = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>ord is multiplicative on nonzero elements of Zp\\<close>"], ["", "lemma(in padic_integers) ord_Zp_mult:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  shows \"(ord_Zp (x \\<otimes>\\<^bsub>Zp\\<^esub> y)) = (ord_Zp x) + (ord_Zp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp (x \\<otimes> y) = ord_Zp x + ord_Zp y", "using val_prod[of p x y] prime assms Zp_defs Zp_def nonzero_memE(2) ord_Zp_def \n        nonzero_closed nonzero_memE(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime p; x \\<in> padic_set p; y \\<in> padic_set p;\n   x \\<noteq> padic_zero p; y \\<noteq> padic_zero p\\<rbrakk>\n  \\<Longrightarrow> padic_val p (padic_mult p x y) =\n                    padic_val p x + padic_val p y\n  prime p\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  \\<one> = padic_one p\n  \\<zero> = padic_zero p\n  carrier Zp = padic_set p\n  (\\<otimes>) = padic_mult p\n  (\\<oplus>) = padic_add p\n  Zp \\<equiv> padic_int p\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  ord_Zp = padic_val p\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. ord_Zp (x \\<otimes> y) = ord_Zp x + ord_Zp y", "by auto"], ["", "lemma(in padic_integers) ord_Zp_pow:\n  assumes \"x \\<in> nonzero Zp\"\n  shows \"ord_Zp (x[^](n::nat)) = n*(ord_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp (x [^] n) = int n * ord_Zp x", "proof(induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. ord_Zp (x [^] 0) = int 0 * ord_Zp x\n 2. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. ord_Zp (x [^] 0) = int 0 * ord_Zp x\n 2. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "have \"x[^](0::nat) = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^] 0 = \\<one>", "using assms(1) nonzero_def"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  nonzero ?R = {a \\<in> carrier ?R. a \\<noteq> \\<zero>\\<^bsub>?R\\<^esub>}\n\ngoal (1 subgoal):\n 1. x [^] 0 = \\<one>", "by simp"], ["proof (state)\nthis:\n  x [^] 0 = \\<one>\n\ngoal (2 subgoals):\n 1. ord_Zp (x [^] 0) = int 0 * ord_Zp x\n 2. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "then"], ["proof (chain)\npicking this:\n  x [^] 0 = \\<one>", "show ?case"], ["proof (prove)\nusing this:\n  x [^] 0 = \\<one>\n\ngoal (1 subgoal):\n 1. ord_Zp (x [^] 0) = int 0 * ord_Zp x", "by (simp add: ord_Zp_one)"], ["proof (state)\nthis:\n  ord_Zp (x [^] 0) = int 0 * ord_Zp x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "case (Suc n)"], ["proof (state)\nthis:\n  ord_Zp (x [^] n) = int n * ord_Zp x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "assume IH: \"ord_Zp (x [^] n) = int n * ord_Zp x \""], ["proof (state)\nthis:\n  ord_Zp (x [^] n) = int n * ord_Zp x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "have N: \"(x [^] n) \\<in> nonzero Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^] n \\<in> nonzero Zp", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x [^] n \\<in> nonzero Zp", "have \"ord_Zp x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> ord_Zp x", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. 0 \\<le> ord_Zp x", "by (simp add: nonzero_closed nonzero_memE(2) ord_pos)"], ["proof (state)\nthis:\n  0 \\<le> ord_Zp x\n\ngoal (1 subgoal):\n 1. x [^] n \\<in> nonzero Zp", "then"], ["proof (chain)\npicking this:\n  0 \\<le> ord_Zp x", "have \"ord_Zp (x [^] n) \\<ge> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> ord_Zp x\n\ngoal (1 subgoal):\n 1. 0 \\<le> ord_Zp (x [^] n)", "using IH assms"], ["proof (prove)\nusing this:\n  0 \\<le> ord_Zp x\n  ord_Zp (x [^] n) = int n * ord_Zp x\n  x \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. 0 \\<le> ord_Zp (x [^] n)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> ord_Zp (x [^] n)\n\ngoal (1 subgoal):\n 1. x [^] n \\<in> nonzero Zp", "then"], ["proof (chain)\npicking this:\n  0 \\<le> ord_Zp (x [^] n)", "have 0: \"(x [^] n) \\<noteq> \\<zero>\""], ["proof (prove)\nusing this:\n  0 \\<le> ord_Zp (x [^] n)\n\ngoal (1 subgoal):\n 1. x [^] n \\<noteq> \\<zero>", "using ord_of_nonzero(1)"], ["proof (prove)\nusing this:\n  0 \\<le> ord_Zp (x [^] n)\n  \\<lbrakk>?x \\<in> carrier Zp; 0 \\<le> ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. x [^] n \\<noteq> \\<zero>", "by force"], ["proof (state)\nthis:\n  x [^] n \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. x [^] n \\<in> nonzero Zp", "have 1: \"(x [^] n) \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^] n \\<in> carrier Zp", "by (simp add: nonzero_closed assms)"], ["proof (state)\nthis:\n  x [^] n \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. x [^] n \\<in> nonzero Zp", "then"], ["proof (chain)\npicking this:\n  x [^] n \\<in> carrier Zp", "show ?thesis"], ["proof (prove)\nusing this:\n  x [^] n \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. x [^] n \\<in> nonzero Zp", "using \"0\" not_nonzero_Zp"], ["proof (prove)\nusing this:\n  x [^] n \\<in> carrier Zp\n  x [^] n \\<noteq> \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<notin> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ?x = \\<zero>\n\ngoal (1 subgoal):\n 1. x [^] n \\<in> nonzero Zp", "by blast"], ["proof (state)\nthis:\n  x [^] n \\<in> nonzero Zp\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x [^] n \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "have \"x[^](Suc n) = x \\<otimes>(x[^]n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^] Suc n = x \\<otimes> x [^] n", "using nonzero_closed assms  R.nat_pow_Suc2"], ["proof (prove)\nusing this:\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  x \\<in> nonzero Zp\n  ?x \\<in> carrier Zp \\<Longrightarrow>\n  ?x [^] Suc ?n = ?x \\<otimes> ?x [^] ?n\n\ngoal (1 subgoal):\n 1. x [^] Suc n = x \\<otimes> x [^] n", "by blast"], ["proof (state)\nthis:\n  x [^] Suc n = x \\<otimes> x [^] n\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "then"], ["proof (chain)\npicking this:\n  x [^] Suc n = x \\<otimes> x [^] n", "have \"ord_Zp (x[^](Suc n)) =(ord_Zp x) + ord_Zp (x[^]n)\""], ["proof (prove)\nusing this:\n  x [^] Suc n = x \\<otimes> x [^] n\n\ngoal (1 subgoal):\n 1. ord_Zp (x [^] Suc n) = ord_Zp x + ord_Zp (x [^] n)", "using N Zp_def assms padic_integers.ord_Zp_mult padic_integers_axioms"], ["proof (prove)\nusing this:\n  x [^] Suc n = x \\<otimes> x [^] n\n  x [^] n \\<in> nonzero Zp\n  Zp \\<equiv> padic_int p\n  x \\<in> nonzero Zp\n  \\<lbrakk>padic_integers ?p; ?x \\<in> nonzero (padic_int ?p);\n   ?y \\<in> nonzero (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> padic_integers.ord_Zp ?p\n                     (?x \\<otimes>\\<^bsub>padic_int ?p\\<^esub> ?y) =\n                    padic_integers.ord_Zp ?p ?x +\n                    padic_integers.ord_Zp ?p ?y\n  padic_integers p\n\ngoal (1 subgoal):\n 1. ord_Zp (x [^] Suc n) = ord_Zp x + ord_Zp (x [^] n)", "by auto"], ["proof (state)\nthis:\n  ord_Zp (x [^] Suc n) = ord_Zp x + ord_Zp (x [^] n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "then"], ["proof (chain)\npicking this:\n  ord_Zp (x [^] Suc n) = ord_Zp x + ord_Zp (x [^] n)", "have \"ord_Zp (x[^](Suc n)) =(ord_Zp x) +(int n * ord_Zp x)\""], ["proof (prove)\nusing this:\n  ord_Zp (x [^] Suc n) = ord_Zp x + ord_Zp (x [^] n)\n\ngoal (1 subgoal):\n 1. ord_Zp (x [^] Suc n) = ord_Zp x + int n * ord_Zp x", "by (simp add: IH)"], ["proof (state)\nthis:\n  ord_Zp (x [^] Suc n) = ord_Zp x + int n * ord_Zp x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "then"], ["proof (chain)\npicking this:\n  ord_Zp (x [^] Suc n) = ord_Zp x + int n * ord_Zp x", "have \"ord_Zp (x[^](Suc n)) =(1*(ord_Zp x)) +(int n) * (ord_Zp x)\""], ["proof (prove)\nusing this:\n  ord_Zp (x [^] Suc n) = ord_Zp x + int n * ord_Zp x\n\ngoal (1 subgoal):\n 1. ord_Zp (x [^] Suc n) = 1 * ord_Zp x + int n * ord_Zp x", "by simp"], ["proof (state)\nthis:\n  ord_Zp (x [^] Suc n) = 1 * ord_Zp x + int n * ord_Zp x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "then"], ["proof (chain)\npicking this:\n  ord_Zp (x [^] Suc n) = 1 * ord_Zp x + int n * ord_Zp x", "have \"ord_Zp (x[^](Suc n)) =(1+ (int n)) * ord_Zp x\""], ["proof (prove)\nusing this:\n  ord_Zp (x [^] Suc n) = 1 * ord_Zp x + int n * ord_Zp x\n\ngoal (1 subgoal):\n 1. ord_Zp (x [^] Suc n) = (1 + int n) * ord_Zp x", "by (simp add: comm_semiring_class.distrib)"], ["proof (state)\nthis:\n  ord_Zp (x [^] Suc n) = (1 + int n) * ord_Zp x\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ord_Zp (x [^] n) = int n * ord_Zp x \\<Longrightarrow>\n       ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "then"], ["proof (chain)\npicking this:\n  ord_Zp (x [^] Suc n) = (1 + int n) * ord_Zp x", "show \"ord_Zp (x[^](Suc n)) = int (Suc n)*ord_Zp x\""], ["proof (prove)\nusing this:\n  ord_Zp (x [^] Suc n) = (1 + int n) * ord_Zp x\n\ngoal (1 subgoal):\n 1. ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x", "by simp"], ["proof (state)\nthis:\n  ord_Zp (x [^] Suc n) = int (Suc n) * ord_Zp x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) val_Zp_pow:\n  assumes \"x \\<in> nonzero Zp\"\n  shows \"val_Zp (x[^](n::nat)) = (n*(ord_Zp x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x [^] n) = eint (int n * ord_Zp x)", "using Zp_def domain.nat_pow_nonzero[of Zp] domain_axioms nonzero_memE assms ord_Zp_def\n    padic_integers.ord_Zp_pow padic_integers_axioms val_Zp_def \n    nonzero_memE(2)"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  \\<lbrakk>domain Zp; ?x \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ?x [^] ?n \\<in> nonzero Zp\n  domain Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  x \\<in> nonzero Zp\n  ord_Zp = padic_val p\n  \\<lbrakk>padic_integers ?p; ?x \\<in> nonzero (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> padic_integers.ord_Zp ?p\n                     (?x [^]\\<^bsub>padic_int ?p\\<^esub> ?n) =\n                    int ?n * padic_integers.ord_Zp ?p ?x\n  padic_integers p\n  val_Zp =\n  (\\<lambda>x. if x = \\<zero> then \\<infinity> else eint (padic_val p x))\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. val_Zp (x [^] n) = eint (int n * ord_Zp x)", "by fastforce"], ["", "lemma(in padic_integers) val_Zp_pow':\n  assumes \"x \\<in> nonzero Zp\"\n  shows \"val_Zp (x[^](n::nat)) = n*(val_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x [^] n) = eint (int n) * val_Zp x", "by (metis Zp_def assms not_nonzero_memI padic_integers.val_Zp_pow padic_integers.val_ord_Zp padic_integers_axioms times_eint_simps(1))"], ["", "lemma(in padic_integers) ord_Zp_p_pow:\n\"ord_Zp (\\<p>[^](n::nat)) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp ([p] \\<cdot> \\<one> [^] n) = int n", "using ord_Zp_pow ord_Zp_p Zp_def Zp_nat_inc_closed ord_of_nonzero(2) padic_integers_axioms int_inc_closed \n        Zp_int_inc_closed"], ["proof (prove)\nusing this:\n  ?x \\<in> nonzero Zp \\<Longrightarrow>\n  ord_Zp (?x [^] ?n) = int ?n * ord_Zp ?x\n  ord_Zp ([p] \\<cdot> \\<one>) = 1\n  Zp \\<equiv> padic_int p\n  [?n] \\<cdot> \\<one> \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; 0 \\<le> ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> nonzero Zp\n  padic_integers p\n  [?n] \\<cdot>\\<^bsub>UP Zp\\<^esub> \\<one>\\<^bsub>UP Zp\\<^esub>\n  \\<in> carrier (UP Zp)\n  [?n] \\<cdot> \\<one> \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ord_Zp ([p] \\<cdot> \\<one> [^] n) = int n", "by auto"], ["", "lemma(in padic_integers) ord_Zp_p_int_pow:\n  assumes \"n \\<ge>0\"\n  shows \"ord_Zp (\\<p>[^](n::int)) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp ([p] \\<cdot> \\<one> [^] n) = n", "by (metis assms int_nat_eq int_pow_int ord_Zp_def ord_Zp_p_pow)"], ["", "lemma(in padic_integers) val_Zp_p:\n\"(val_Zp \\<p>) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp ([p] \\<cdot> \\<one>) = 1", "using Zp_def ord_Zp_def padic_val_def val_Zp_def  ord_Zp_p Zp_defs(2) one_eint_def"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  ord_Zp = padic_val p\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n  val_Zp =\n  (\\<lambda>x. if x = \\<zero> then \\<infinity> else eint (padic_val p x))\n  ord_Zp ([p] \\<cdot> \\<one>) = 1\n  \\<zero> = padic_zero p\n  1 = eint 1\n\ngoal (1 subgoal):\n 1. val_Zp ([p] \\<cdot> \\<one>) = 1", "by auto"], ["", "lemma(in padic_integers) val_Zp_p_pow:\n\"val_Zp (\\<p>[^](n::nat)) = eint n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp ([p] \\<cdot> \\<one> [^] n) = eint (int n)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. val_Zp ([p] \\<cdot> \\<one> [^] n) = eint (int n)", "have \"(\\<p>[^](n::nat)) \\<noteq> \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<noteq> \\<zero>", "by (metis mult_zero_l n_not_Suc_n of_nat_eq_iff ord_Zp_def ord_Zp_p_pow p_natpow_prod_Suc(1))"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] n \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. val_Zp ([p] \\<cdot> \\<one> [^] n) = eint (int n)", "then"], ["proof (chain)\npicking this:\n  [p] \\<cdot> \\<one> [^] n \\<noteq> \\<zero>", "show ?thesis"], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] n \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. val_Zp ([p] \\<cdot> \\<one> [^] n) = eint (int n)", "using ord_Zp_p_pow"], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] n \\<noteq> \\<zero>\n  ord_Zp ([p] \\<cdot> \\<one> [^] ?n) = int ?n\n\ngoal (1 subgoal):\n 1. val_Zp ([p] \\<cdot> \\<one> [^] n) = eint (int n)", "by (simp add: ord_Zp_def val_Zp_def)"], ["proof (state)\nthis:\n  val_Zp ([p] \\<cdot> \\<one> [^] n) = eint (int n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) p_pow_res:\n  assumes \"(n::nat) \\<ge> m\"\n  shows \"(\\<p>[^]n) m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] n) m = 0", "by (simp add: assms ord_Zp_p_pow zero_below_ord)"], ["", "lemma(in padic_integers) p_pow_factor:\n  assumes \"(n::nat) \\<ge> m\"\n  shows \"(h \\<otimes> (\\<p>[^]n)) m = 0\"  \"(h \\<otimes> (\\<p>[^]n)) m = \\<zero>\\<^bsub>Zp_res_ring n\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (h \\<otimes> [p] \\<cdot> \\<one> [^] n) m = 0 &&&\n    (h \\<otimes> [p] \\<cdot> \\<one> [^] n) m =\n    \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "using assms p_pow_res p_res_ring_zero"], ["proof (prove)\nusing this:\n  m \\<le> n\n  ?m \\<le> ?n \\<Longrightarrow> ([p] \\<cdot> \\<one> [^] ?n) ?m = 0\n  \\<zero>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> = 0\n\ngoal (1 subgoal):\n 1. (h \\<otimes> [p] \\<cdot> \\<one> [^] n) m = 0 &&&\n    (h \\<otimes> [p] \\<cdot> \\<one> [^] n) m =\n    \\<zero>\\<^bsub>residue_ring (p ^ n)\\<^esub>", "by(auto simp: residue_of_zero Zp_residue_mult_zero(2))"], ["", "(**********************************************************************)\n  (**********************************************************************)"], ["", "subsection\\<open>The Ultrametric Inequality\\<close>"], ["", "(**********************************************************************)\n  (**********************************************************************)"], ["", "text\\<open>Ultrametric inequality for ord\\<close>"], ["", "lemma(in padic_integers) ord_Zp_ultrametric:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"x \\<oplus> y \\<in> nonzero Zp\"\n  shows \"ord_Zp (x \\<oplus> y) \\<ge> min (ord_Zp x) (ord_Zp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (ord_Zp x) (ord_Zp y) \\<le> ord_Zp (x \\<oplus> y)", "unfolding ord_Zp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. min (padic_val p x) (padic_val p y) \\<le> padic_val p (x \\<oplus> y)", "using padic_val_ultrametric[of p x y] Zp_defs assms nonzero_memE Zp_def prime \n        nonzero_closed nonzero_memE(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>prime p; x \\<in> carrier (padic_int p);\n   y \\<in> carrier (padic_int p);\n   x \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>;\n   y \\<noteq> \\<zero>\\<^bsub>padic_int p\\<^esub>;\n   x \\<oplus>\\<^bsub>padic_int p\\<^esub> y \\<noteq>\n   \\<zero>\\<^bsub>padic_int p\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> min (padic_val p x) (padic_val p y)\n                    \\<le> padic_val p\n                           (x \\<oplus>\\<^bsub>padic_int p\\<^esub> y)\n  \\<one> = padic_one p\n  \\<zero> = padic_zero p\n  carrier Zp = padic_set p\n  (\\<otimes>) = padic_mult p\n  (\\<oplus>) = padic_add p\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  x \\<oplus> y \\<in> nonzero Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  Zp \\<equiv> padic_int p\n  prime p\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. min (padic_val p x) (padic_val p y) \\<le> padic_val p (x \\<oplus> y)", "by auto"], ["", "text\\<open>Variants of the ultrametric inequality\\<close>"], ["", "lemma (in padic_integers) ord_Zp_ultrametric_diff:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"x \\<noteq> y \"\n  shows \"ord_Zp (x \\<ominus> y) \\<ge> min (ord_Zp x) (ord_Zp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (ord_Zp x) (ord_Zp y) \\<le> ord_Zp (x \\<ominus> y)", "using assms ord_Zp_ultrametric[of x \"\\<ominus> y\"]"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  x \\<noteq> y\n  \\<lbrakk>x \\<in> nonzero Zp; \\<ominus> y \\<in> nonzero Zp;\n   x \\<oplus> \\<ominus> y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> min (ord_Zp x) (ord_Zp (\\<ominus> y))\n                    \\<le> ord_Zp (x \\<oplus> \\<ominus> y)\n\ngoal (1 subgoal):\n 1. min (ord_Zp x) (ord_Zp y) \\<le> ord_Zp (x \\<ominus> y)", "unfolding a_minus_def"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  x \\<noteq> y\n  \\<lbrakk>x \\<in> nonzero Zp; \\<ominus> y \\<in> nonzero Zp;\n   x \\<oplus> \\<ominus> y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> min (ord_Zp x) (ord_Zp (\\<ominus> y))\n                    \\<le> ord_Zp (x \\<oplus> \\<ominus> y)\n\ngoal (1 subgoal):\n 1. min (ord_Zp x) (ord_Zp y) \\<le> ord_Zp (x \\<oplus> \\<ominus> y)", "by (metis (no_types, lifting) R.a_transpose_inv R.add.inv_closed R.add.m_closed R.l_neg nonzero_closed ord_Zp_of_a_inv ord_of_nonzero(2) ord_pos)"], ["", "lemma(in padic_integers) ord_Zp_not_equal_imp_notequal:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x \\<noteq> (ord_Zp y)\"\n  shows \"x \\<noteq> y\" \"x \\<ominus> y \\<noteq>\\<zero>\" \"x \\<oplus> y \\<noteq>\\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y &&&\n    x \\<ominus> y \\<noteq> \\<zero> &&& x \\<oplus> y \\<noteq> \\<zero>", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp x \\<noteq> ord_Zp y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y &&&\n    x \\<ominus> y \\<noteq> \\<zero> &&& x \\<oplus> y \\<noteq> \\<zero>", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<ominus> y \\<noteq> \\<zero>\n 2. x \\<oplus> y \\<noteq> \\<zero>", "using nonzero_closed assms(1) assms(2) assms(3)"], ["proof (prove)\nusing this:\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp x \\<noteq> ord_Zp y\n\ngoal (2 subgoals):\n 1. x \\<ominus> y \\<noteq> \\<zero>\n 2. x \\<oplus> y \\<noteq> \\<zero>", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<noteq> \\<zero>", "using nonzero_memE assms"], ["proof (prove)\nusing this:\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp x \\<noteq> ord_Zp y\n\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<noteq> \\<zero>", "using R.minus_equality nonzero_closed \n        Zp_def padic_integers.ord_Zp_of_a_inv \n        padic_integers_axioms"], ["proof (prove)\nusing this:\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp x \\<noteq> ord_Zp y\n  \\<lbrakk>?y \\<oplus> ?x = \\<zero>; ?x \\<in> carrier Zp;\n   ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> \\<ominus> ?x = ?y\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  Zp \\<equiv> padic_int p\n  \\<lbrakk>padic_integers ?p; ?a \\<in> nonzero (padic_int ?p)\\<rbrakk>\n  \\<Longrightarrow> padic_integers.ord_Zp ?p ?a =\n                    padic_integers.ord_Zp ?p\n                     (\\<ominus>\\<^bsub>padic_int ?p\\<^esub> ?a)\n  padic_integers p\n\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<noteq> \\<zero>", "by auto"], ["", "lemma(in padic_integers) ord_Zp_ultrametric_eq:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x > (ord_Zp y)\"\n  shows \"ord_Zp (x \\<oplus> y) = ord_Zp y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp (x \\<oplus> y) = ord_Zp y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ord_Zp (x \\<oplus> y) = ord_Zp y", "have 0: \"ord_Zp (x \\<oplus> y) \\<ge> ord_Zp y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp y \\<le> ord_Zp (x \\<oplus> y)", "using assms ord_Zp_not_equal_imp_notequal[of x y]\n        ord_Zp_ultrametric[of x y] nonzero_memE not_nonzero_Zp\n        nonzero_closed"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp y < ord_Zp x\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   ord_Zp x \\<noteq> ord_Zp y\\<rbrakk>\n  \\<Longrightarrow> x \\<noteq> y\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   ord_Zp x \\<noteq> ord_Zp y\\<rbrakk>\n  \\<Longrightarrow> x \\<ominus> y \\<noteq> \\<zero>\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   ord_Zp x \\<noteq> ord_Zp y\\<rbrakk>\n  \\<Longrightarrow> x \\<oplus> y \\<noteq> \\<zero>\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   x \\<oplus> y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> min (ord_Zp x) (ord_Zp y) \\<le> ord_Zp (x \\<oplus> y)\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<notin> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ?x = \\<zero>\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ord_Zp y \\<le> ord_Zp (x \\<oplus> y)", "by force"], ["proof (state)\nthis:\n  ord_Zp y \\<le> ord_Zp (x \\<oplus> y)\n\ngoal (1 subgoal):\n 1. ord_Zp (x \\<oplus> y) = ord_Zp y", "have 1: \"ord_Zp y \\<ge> min (ord_Zp(x \\<oplus> y)) (ord_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y", "have 0: \"x \\<oplus> y \\<noteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<noteq> x", "using assms nonzero_memE"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp y < ord_Zp x\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<noteq> x", "by (simp add: nonzero_closed nonzero_memE(2))"], ["proof (state)\nthis:\n  x \\<oplus> y \\<noteq> x\n\ngoal (1 subgoal):\n 1. min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y", "have 1: \"x \\<oplus> y \\<in> nonzero Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<in> nonzero Zp", "using ord_Zp_not_equal_imp_notequal[of x y] \n            nonzero_closed assms(1) assms(2) assms(3) \n            not_nonzero_Zp"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   ord_Zp x \\<noteq> ord_Zp y\\<rbrakk>\n  \\<Longrightarrow> x \\<noteq> y\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   ord_Zp x \\<noteq> ord_Zp y\\<rbrakk>\n  \\<Longrightarrow> x \\<ominus> y \\<noteq> \\<zero>\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   ord_Zp x \\<noteq> ord_Zp y\\<rbrakk>\n  \\<Longrightarrow> x \\<oplus> y \\<noteq> \\<zero>\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp y < ord_Zp x\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<notin> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ?x = \\<zero>\n\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<in> nonzero Zp", "by force"], ["proof (state)\nthis:\n  x \\<oplus> y \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y", "then"], ["proof (chain)\npicking this:\n  x \\<oplus> y \\<in> nonzero Zp", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<oplus> y \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y", "using 0 assms(1) assms(2) assms(3) ord_Zp_ultrametric_diff[of \"x \\<oplus> y\" x]"], ["proof (prove)\nusing this:\n  x \\<oplus> y \\<in> nonzero Zp\n  x \\<oplus> y \\<noteq> x\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp y < ord_Zp x\n  \\<lbrakk>x \\<oplus> y \\<in> nonzero Zp; x \\<in> nonzero Zp;\n   x \\<oplus> y \\<noteq> x\\<rbrakk>\n  \\<Longrightarrow> min (ord_Zp (x \\<oplus> y)) (ord_Zp x)\n                    \\<le> ord_Zp (x \\<oplus> y \\<ominus> x)\n\ngoal (1 subgoal):\n 1. min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y", "by (simp add: R.minus_eq nonzero_closed R.r_neg1 add_comm)"], ["proof (state)\nthis:\n  min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y\n\ngoal (1 subgoal):\n 1. ord_Zp (x \\<oplus> y) = ord_Zp y", "then"], ["proof (chain)\npicking this:\n  min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y", "show ?thesis"], ["proof (prove)\nusing this:\n  min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y\n\ngoal (1 subgoal):\n 1. ord_Zp (x \\<oplus> y) = ord_Zp y", "using 0 assms(3)"], ["proof (prove)\nusing this:\n  min (ord_Zp (x \\<oplus> y)) (ord_Zp x) \\<le> ord_Zp y\n  ord_Zp y \\<le> ord_Zp (x \\<oplus> y)\n  ord_Zp y < ord_Zp x\n\ngoal (1 subgoal):\n 1. ord_Zp (x \\<oplus> y) = ord_Zp y", "by linarith"], ["proof (state)\nthis:\n  ord_Zp (x \\<oplus> y) = ord_Zp y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ord_Zp_ultrametric_eq':\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x > (ord_Zp y)\"\n  shows \"ord_Zp (x \\<ominus> y) = ord_Zp y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp (x \\<ominus> y) = ord_Zp y", "using assms ord_Zp_ultrametric_eq[of x \"\\<ominus> y\"]"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp y < ord_Zp x\n  \\<lbrakk>x \\<in> nonzero Zp; \\<ominus> y \\<in> nonzero Zp;\n   ord_Zp (\\<ominus> y) < ord_Zp x\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (x \\<oplus> \\<ominus> y) = ord_Zp (\\<ominus> y)\n\ngoal (1 subgoal):\n 1. ord_Zp (x \\<ominus> y) = ord_Zp y", "unfolding a_minus_def"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp y < ord_Zp x\n  \\<lbrakk>x \\<in> nonzero Zp; \\<ominus> y \\<in> nonzero Zp;\n   ord_Zp (\\<ominus> y) < ord_Zp x\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (x \\<oplus> \\<ominus> y) = ord_Zp (\\<ominus> y)\n\ngoal (1 subgoal):\n 1. ord_Zp (x \\<oplus> \\<ominus> y) = ord_Zp y", "by (metis R.add.inv_closed R.add.inv_eq_1_iff nonzero_closed not_nonzero_Zp ord_Zp_of_a_inv)"], ["", "lemma(in padic_integers) ord_Zp_ultrametric_eq'':\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x > (ord_Zp y)\"\n  shows \"ord_Zp (y \\<ominus> x) = ord_Zp y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp (y \\<ominus> x) = ord_Zp y", "by (metis R.add.inv_closed R.minus_eq \n      nonzero_closed Zp_def add_comm \n      assms(1) assms(2) assms(3)\n      ord_Zp_of_a_inv ord_of_nonzero(2) \n      ord_pos padic_integers.ord_Zp_ultrametric_eq padic_integers_axioms)"], ["", "lemma(in padic_integers) ord_Zp_not_equal_ord_plus_minus:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  assumes \"ord_Zp x \\<noteq> (ord_Zp y)\"\n  shows \"ord_Zp (x \\<ominus> y) = ord_Zp (x \\<oplus> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp (x \\<ominus> y) = ord_Zp (x \\<oplus> y)", "apply(cases \"ord_Zp x > ord_Zp y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. ord_Zp y < ord_Zp x \\<Longrightarrow>\n    ord_Zp (x \\<ominus> y) = ord_Zp (x \\<oplus> y)\n 2. \\<not> ord_Zp y < ord_Zp x \\<Longrightarrow>\n    ord_Zp (x \\<ominus> y) = ord_Zp (x \\<oplus> y)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp x \\<noteq> ord_Zp y\n\ngoal (2 subgoals):\n 1. ord_Zp y < ord_Zp x \\<Longrightarrow>\n    ord_Zp (x \\<ominus> y) = ord_Zp (x \\<oplus> y)\n 2. \\<not> ord_Zp y < ord_Zp x \\<Longrightarrow>\n    ord_Zp (x \\<ominus> y) = ord_Zp (x \\<oplus> y)", "apply (simp add: ord_Zp_ultrametric_eq ord_Zp_ultrametric_eq')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ord_Zp y < ord_Zp x \\<Longrightarrow>\n    ord_Zp (x \\<ominus> y) = ord_Zp (x \\<oplus> y)", "using assms nonzero_memI"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  ord_Zp x \\<noteq> ord_Zp y\n  \\<lbrakk>?a \\<in> carrier Zp; ?a \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. \\<not> ord_Zp y < ord_Zp x \\<Longrightarrow>\n    ord_Zp (x \\<ominus> y) = ord_Zp (x \\<oplus> y)", "by (smt add_comm ord_Zp_ultrametric_eq ord_Zp_ultrametric_eq'')"], ["", "text\\<open>val is multiplicative on nonzero elements\\<close>"], ["", "lemma(in padic_integers) val_Zp_mult0:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"y \\<noteq>\\<zero>\"\n  shows \"(val_Zp (x \\<otimes>\\<^bsub>Zp\\<^esub> y)) = (val_Zp x) + (val_Zp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x \\<otimes> y) = val_Zp x + val_Zp y", "apply(cases \"x \\<otimes>\\<^bsub>Zp\\<^esub> y = \\<zero>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<otimes> y = \\<zero> \\<Longrightarrow>\n    val_Zp (x \\<otimes> y) = val_Zp x + val_Zp y\n 2. x \\<otimes> y \\<noteq> \\<zero> \\<Longrightarrow>\n    val_Zp (x \\<otimes> y) = val_Zp x + val_Zp y", "using assms(1) assms(2) assms(3) assms(4) integral_iff val_ord_Zp ord_Zp_mult nonzero_memI"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  y \\<in> carrier Zp\n  y \\<noteq> \\<zero>\n  \\<lbrakk>?a \\<in> carrier Zp; ?b \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> (?a \\<otimes> ?b = \\<zero>) =\n                    (?a = \\<zero> \\<or> ?b = \\<zero>)\n  ?a \\<noteq> \\<zero> \\<Longrightarrow> val_Zp ?a = eint (ord_Zp ?a)\n  \\<lbrakk>?x \\<in> nonzero Zp; ?y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (?x \\<otimes> ?y) = ord_Zp ?x + ord_Zp ?y\n  \\<lbrakk>?a \\<in> carrier Zp; ?a \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> nonzero Zp\n\ngoal (2 subgoals):\n 1. x \\<otimes> y = \\<zero> \\<Longrightarrow>\n    val_Zp (x \\<otimes> y) = val_Zp x + val_Zp y\n 2. x \\<otimes> y \\<noteq> \\<zero> \\<Longrightarrow>\n    val_Zp (x \\<otimes> y) = val_Zp x + val_Zp y", "apply (simp add: integral_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<noteq> \\<zero> \\<Longrightarrow>\n    val_Zp (x \\<otimes> y) = val_Zp x + val_Zp y", "using assms ord_Zp_mult[of x y] val_ord_Zp"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  y \\<in> carrier Zp\n  y \\<noteq> \\<zero>\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (x \\<otimes> y) = ord_Zp x + ord_Zp y\n  ?a \\<noteq> \\<zero> \\<Longrightarrow> val_Zp ?a = eint (ord_Zp ?a)\n\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<noteq> \\<zero> \\<Longrightarrow>\n    val_Zp (x \\<otimes> y) = val_Zp x + val_Zp y", "by (simp add: nonzero_memI)"], ["", "text\\<open>val is multiplicative everywhere\\<close>"], ["", "lemma(in padic_integers) val_Zp_mult:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  shows \"(val_Zp (x \\<otimes>\\<^bsub>Zp\\<^esub> y)) = (val_Zp x) + (val_Zp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x \\<otimes> y) = val_Zp x + val_Zp y", "using assms(1) assms(2) integral_iff val_ord_Zp ord_Zp_mult nonzero_memI val_Zp_mult0 val_Zp_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  \\<lbrakk>?a \\<in> carrier Zp; ?b \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> (?a \\<otimes> ?b = \\<zero>) =\n                    (?a = \\<zero> \\<or> ?b = \\<zero>)\n  ?a \\<noteq> \\<zero> \\<Longrightarrow> val_Zp ?a = eint (ord_Zp ?a)\n  \\<lbrakk>?x \\<in> nonzero Zp; ?y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (?x \\<otimes> ?y) = ord_Zp ?x + ord_Zp ?y\n  \\<lbrakk>?a \\<in> carrier Zp; ?a \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> nonzero Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>; ?y \\<in> carrier Zp;\n   ?y \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> val_Zp (?x \\<otimes> ?y) = val_Zp ?x + val_Zp ?y\n  val_Zp =\n  (\\<lambda>x. if x = \\<zero> then \\<infinity> else eint (padic_val p x))\n\ngoal (1 subgoal):\n 1. val_Zp (x \\<otimes> y) = val_Zp x + val_Zp y", "by simp"], ["", "lemma(in padic_integers) val_Zp_ultrametric0:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"y \\<noteq>\\<zero>\"\n  assumes \"x \\<oplus> y \\<noteq> \\<zero>\"\n  shows \"min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "apply(cases \"x \\<oplus> y = \\<zero>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<oplus> y = \\<zero> \\<Longrightarrow>\n    min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)\n 2. x \\<oplus> y \\<noteq> \\<zero> \\<Longrightarrow>\n    min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  y \\<in> carrier Zp\n  y \\<noteq> \\<zero>\n  x \\<oplus> y \\<noteq> \\<zero>\n\ngoal (2 subgoals):\n 1. x \\<oplus> y = \\<zero> \\<Longrightarrow>\n    min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)\n 2. x \\<oplus> y \\<noteq> \\<zero> \\<Longrightarrow>\n    min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<noteq> \\<zero> \\<Longrightarrow>\n    min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "using assms ord_Zp_ultrametric[of x y] nonzero_memI val_ord_Zp[of x] val_ord_Zp[of y] val_ord_Zp[of \"x \\<oplus> y\"]"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  y \\<in> carrier Zp\n  y \\<noteq> \\<zero>\n  x \\<oplus> y \\<noteq> \\<zero>\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   x \\<oplus> y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> min (ord_Zp x) (ord_Zp y) \\<le> ord_Zp (x \\<oplus> y)\n  \\<lbrakk>?a \\<in> carrier Zp; ?a \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> nonzero Zp\n  x \\<noteq> \\<zero> \\<Longrightarrow> val_Zp x = eint (ord_Zp x)\n  y \\<noteq> \\<zero> \\<Longrightarrow> val_Zp y = eint (ord_Zp y)\n  x \\<oplus> y \\<noteq> \\<zero> \\<Longrightarrow>\n  val_Zp (x \\<oplus> y) = eint (ord_Zp (x \\<oplus> y))\n\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<noteq> \\<zero> \\<Longrightarrow>\n    min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "by simp"], ["", "text\\<open>Unconstrained ultrametric inequality\\<close>"], ["", "lemma(in padic_integers) val_Zp_ultrametric:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\" \n  shows \" min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "apply(cases \"x = \\<zero>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. x = \\<zero> \\<Longrightarrow>\n    min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)\n 2. x \\<noteq> \\<zero> \\<Longrightarrow>\n    min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "apply (simp add: assms(2))"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> \\<zero> \\<Longrightarrow>\n    min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "apply(cases \"y = \\<zero>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> \\<zero>; y = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)\n 2. \\<lbrakk>x \\<noteq> \\<zero>; y \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "apply (simp add: assms(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> \\<zero>; y \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "apply(cases \"x \\<oplus> y = \\<zero>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<noteq> \\<zero>; y \\<noteq> \\<zero>;\n     x \\<oplus> y = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)\n 2. \\<lbrakk>x \\<noteq> \\<zero>; y \\<noteq> \\<zero>;\n     x \\<oplus> y \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "apply (simp add: val_Zp_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> \\<zero>; y \\<noteq> \\<zero>;\n     x \\<oplus> y \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "using assms val_Zp_ultrametric0[of x y]"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  \\<lbrakk>x \\<in> carrier Zp; x \\<noteq> \\<zero>; y \\<in> carrier Zp;\n   y \\<noteq> \\<zero>; x \\<oplus> y \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> \\<zero>; y \\<noteq> \\<zero>;\n     x \\<oplus> y \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> y)", "by simp"], ["", "text\\<open>Variants of the ultrametric inequality\\<close>"], ["", "lemma (in padic_integers) val_Zp_ultrametric_diff:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\" \n  shows \"val_Zp (x \\<ominus> y) \\<ge> min (val_Zp x) (val_Zp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<ominus> y)", "using assms val_Zp_ultrametric[of x \"\\<ominus>y\"]"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  \\<lbrakk>x \\<in> carrier Zp; \\<ominus> y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> min (val_Zp x) (val_Zp (\\<ominus> y))\n                    \\<le> val_Zp (x \\<oplus> \\<ominus> y)\n\ngoal (1 subgoal):\n 1. min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<ominus> y)", "unfolding a_minus_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  \\<lbrakk>x \\<in> carrier Zp; \\<ominus> y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> min (val_Zp x) (val_Zp (\\<ominus> y))\n                    \\<le> val_Zp (x \\<oplus> \\<ominus> y)\n\ngoal (1 subgoal):\n 1. min (val_Zp x) (val_Zp y) \\<le> val_Zp (x \\<oplus> \\<ominus> y)", "by (metis R.add.inv_closed R.add.inv_eq_1_iff nonzero_memI ord_Zp_def ord_Zp_of_a_inv val_Zp_def)"], ["", "lemma(in padic_integers) val_Zp_not_equal_imp_notequal:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x \\<noteq> val_Zp y\"\n  shows \"x \\<noteq> y\" \"x \\<ominus> y \\<noteq>\\<zero>\" \"x \\<oplus> y \\<noteq>\\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y &&&\n    x \\<ominus> y \\<noteq> \\<zero> &&& x \\<oplus> y \\<noteq> \\<zero>", "using assms(3)"], ["proof (prove)\nusing this:\n  val_Zp x \\<noteq> val_Zp y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y &&&\n    x \\<ominus> y \\<noteq> \\<zero> &&& x \\<oplus> y \\<noteq> \\<zero>", "apply auto[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<ominus> y \\<noteq> \\<zero>\n 2. x \\<oplus> y \\<noteq> \\<zero>", "using assms(1) assms(2) assms(3) R.r_right_minus_eq"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  val_Zp x \\<noteq> val_Zp y\n  \\<lbrakk>?a \\<in> carrier Zp; ?b \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> (?a \\<ominus> ?b = \\<zero>) = (?a = ?b)\n\ngoal (2 subgoals):\n 1. x \\<ominus> y \\<noteq> \\<zero>\n 2. x \\<oplus> y \\<noteq> \\<zero>", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<oplus> y \\<noteq> \\<zero>", "by (metis  R.add.inv_eq_1_iff assms(1) assms(2) assms(3) R.minus_zero R.minus_equality\n          not_nonzero_Zp ord_Zp_def ord_Zp_of_a_inv val_ord_Zp)"], ["", "lemma(in padic_integers) val_Zp_ultrametric_eq:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x > val_Zp y\"\n  shows \"val_Zp (x \\<oplus> y) = val_Zp y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x \\<oplus> y) = val_Zp y", "apply(cases \"x \\<noteq> \\<zero> \\<and> y \\<noteq> \\<zero> \\<and> x \\<noteq> y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<noteq> \\<zero> \\<and>\n    y \\<noteq> \\<zero> \\<and> x \\<noteq> y \\<Longrightarrow>\n    val_Zp (x \\<oplus> y) = val_Zp y\n 2. \\<not> (x \\<noteq> \\<zero> \\<and>\n            y \\<noteq> \\<zero> \\<and> x \\<noteq> y) \\<Longrightarrow>\n    val_Zp (x \\<oplus> y) = val_Zp y", "using assms ord_Zp_ultrametric_eq[of x y] val_ord_Zp nonzero_memE"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  val_Zp y < val_Zp x\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   ord_Zp y < ord_Zp x\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (x \\<oplus> y) = ord_Zp y\n  ?a \\<noteq> \\<zero> \\<Longrightarrow> val_Zp ?a = eint (ord_Zp ?a)\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n\ngoal (2 subgoals):\n 1. x \\<noteq> \\<zero> \\<and>\n    y \\<noteq> \\<zero> \\<and> x \\<noteq> y \\<Longrightarrow>\n    val_Zp (x \\<oplus> y) = val_Zp y\n 2. \\<not> (x \\<noteq> \\<zero> \\<and>\n            y \\<noteq> \\<zero> \\<and> x \\<noteq> y) \\<Longrightarrow>\n    val_Zp (x \\<oplus> y) = val_Zp y", "using not_nonzero_memE val_Zp_not_equal_imp_notequal(3)"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  val_Zp y < val_Zp x\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp;\n   ord_Zp y < ord_Zp x\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (x \\<oplus> y) = ord_Zp y\n  ?a \\<noteq> \\<zero> \\<Longrightarrow> val_Zp ?a = eint (ord_Zp ?a)\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  \\<lbrakk>?a \\<notin> nonzero Zp; ?a \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?a = \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp;\n   val_Zp ?x \\<noteq> val_Zp ?y\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> ?y \\<noteq> \\<zero>\n\ngoal (2 subgoals):\n 1. x \\<noteq> \\<zero> \\<and>\n    y \\<noteq> \\<zero> \\<and> x \\<noteq> y \\<Longrightarrow>\n    val_Zp (x \\<oplus> y) = val_Zp y\n 2. \\<not> (x \\<noteq> \\<zero> \\<and>\n            y \\<noteq> \\<zero> \\<and> x \\<noteq> y) \\<Longrightarrow>\n    val_Zp (x \\<oplus> y) = val_Zp y", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (x \\<noteq> \\<zero> \\<and>\n            y \\<noteq> \\<zero> \\<and> x \\<noteq> y) \\<Longrightarrow>\n    val_Zp (x \\<oplus> y) = val_Zp y", "unfolding val_Zp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (x \\<noteq> \\<zero> \\<and>\n            y \\<noteq> \\<zero> \\<and> x \\<noteq> y) \\<Longrightarrow>\n    (if x \\<oplus> y = \\<zero> then \\<infinity>\n     else eint (padic_val p (x \\<oplus> y))) =\n    (if y = \\<zero> then \\<infinity> else eint (padic_val p y))", "using assms(2) assms(3) val_Zp_def"], ["proof (prove)\nusing this:\n  y \\<in> carrier Zp\n  val_Zp y < val_Zp x\n  val_Zp =\n  (\\<lambda>x. if x = \\<zero> then \\<infinity> else eint (padic_val p x))\n\ngoal (1 subgoal):\n 1. \\<not> (x \\<noteq> \\<zero> \\<and>\n            y \\<noteq> \\<zero> \\<and> x \\<noteq> y) \\<Longrightarrow>\n    (if x \\<oplus> y = \\<zero> then \\<infinity>\n     else eint (padic_val p (x \\<oplus> y))) =\n    (if y = \\<zero> then \\<infinity> else eint (padic_val p y))", "by force"], ["", "lemma(in padic_integers) val_Zp_ultrametric_eq':\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x > (val_Zp y)\"\n  shows \"val_Zp (x \\<ominus> y) = val_Zp y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x \\<ominus> y) = val_Zp y", "using assms val_Zp_ultrametric_eq[of x \"\\<ominus> y\"]"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  val_Zp y < val_Zp x\n  \\<lbrakk>x \\<in> carrier Zp; \\<ominus> y \\<in> carrier Zp;\n   val_Zp (\\<ominus> y) < val_Zp x\\<rbrakk>\n  \\<Longrightarrow> val_Zp (x \\<oplus> \\<ominus> y) = val_Zp (\\<ominus> y)\n\ngoal (1 subgoal):\n 1. val_Zp (x \\<ominus> y) = val_Zp y", "unfolding a_minus_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  val_Zp y < val_Zp x\n  \\<lbrakk>x \\<in> carrier Zp; \\<ominus> y \\<in> carrier Zp;\n   val_Zp (\\<ominus> y) < val_Zp x\\<rbrakk>\n  \\<Longrightarrow> val_Zp (x \\<oplus> \\<ominus> y) = val_Zp (\\<ominus> y)\n\ngoal (1 subgoal):\n 1. val_Zp (x \\<oplus> \\<ominus> y) = val_Zp y", "by (metis R.add.inv_closed R.r_neg val_Zp_not_equal_imp_notequal(3))"], ["", "lemma(in padic_integers) val_Zp_ultrametric_eq'':\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x > (val_Zp y)\"\n  shows \"val_Zp (y \\<ominus> x) = val_Zp y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (y \\<ominus> x) = val_Zp y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. val_Zp (y \\<ominus> x) = val_Zp y", "have 0: \"y \\<ominus> x = \\<ominus> (x \\<ominus> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<ominus> x = \\<ominus> (x \\<ominus> y)", "using assms(1,2)"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. y \\<ominus> x = \\<ominus> (x \\<ominus> y)", "unfolding a_minus_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. y \\<oplus> \\<ominus> x = \\<ominus> (x \\<oplus> \\<ominus> y)", "by (simp add: R.add.m_comm R.minus_add)"], ["proof (state)\nthis:\n  y \\<ominus> x = \\<ominus> (x \\<ominus> y)\n\ngoal (1 subgoal):\n 1. val_Zp (y \\<ominus> x) = val_Zp y", "have 1: \"val_Zp (x \\<ominus> y) = val_Zp y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x \\<ominus> y) = val_Zp y", "using assms val_Zp_ultrametric_eq'"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  val_Zp y < val_Zp x\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp;\n   val_Zp ?y < val_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> val_Zp (?x \\<ominus> ?y) = val_Zp ?y\n\ngoal (1 subgoal):\n 1. val_Zp (x \\<ominus> y) = val_Zp y", "by blast"], ["proof (state)\nthis:\n  val_Zp (x \\<ominus> y) = val_Zp y\n\ngoal (1 subgoal):\n 1. val_Zp (y \\<ominus> x) = val_Zp y", "have 2: \"val_Zp (x \\<ominus> y) = val_Zp (y \\<ominus> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x \\<ominus> y) = val_Zp (y \\<ominus> x)", "unfolding 0"], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x \\<ominus> y) = val_Zp (\\<ominus> (x \\<ominus> y))", "unfolding a_minus_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x \\<oplus> \\<ominus> y) =\n    val_Zp (\\<ominus> (x \\<oplus> \\<ominus> y))", "by(rule val_Zp_of_a_inv, rule R.ring_simprules, rule assms, rule R.ring_simprules, rule assms)"], ["proof (state)\nthis:\n  val_Zp (x \\<ominus> y) = val_Zp (y \\<ominus> x)\n\ngoal (1 subgoal):\n 1. val_Zp (y \\<ominus> x) = val_Zp y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (y \\<ominus> x) = val_Zp y", "using 1"], ["proof (prove)\nusing this:\n  val_Zp (x \\<ominus> y) = val_Zp y\n\ngoal (1 subgoal):\n 1. val_Zp (y \\<ominus> x) = val_Zp y", "unfolding 2"], ["proof (prove)\nusing this:\n  val_Zp (y \\<ominus> x) = val_Zp y\n\ngoal (1 subgoal):\n 1. val_Zp (y \\<ominus> x) = val_Zp y", "by blast"], ["proof (state)\nthis:\n  val_Zp (y \\<ominus> x) = val_Zp y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) val_Zp_not_equal_ord_plus_minus:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"y \\<in> carrier Zp\"\n  assumes \"val_Zp x \\<noteq> (val_Zp y)\"\n  shows \"val_Zp (x \\<ominus> y) = val_Zp (x \\<oplus> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (x \\<ominus> y) = val_Zp (x \\<oplus> y)", "by (metis R.add.inv_closed R.minus_eq R.r_neg R.r_zero add_comm assms(1) assms(2) assms(3) not_nonzero_Zp ord_Zp_def ord_Zp_not_equal_ord_plus_minus val_Zp_def val_Zp_not_equal_imp_notequal(3))"], ["", "(**********************************************************************)\n  (**********************************************************************)"], ["", "subsection\\<open>Units of $\\mathbb{Z}_p$\\<close>"], ["", "(**********************************************************************)\n  (**********************************************************************)"], ["", "text\\<open>Elements with valuation 0 in Zp are the units\\<close>"], ["", "lemma(in padic_integers) val_Zp_0_criterion:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x 1 \\<noteq> 0\"\n  shows \"val_Zp x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp x = 0", "unfolding val_Zp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x = \\<zero> then \\<infinity> else eint (padic_val p x)) = 0", "using Zp_def assms(1) assms(2) ord_equals padic_set_zero_res prime"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  x \\<in> carrier Zp\n  x 1 \\<noteq> 0\n  \\<lbrakk>?x \\<in> carrier Zp; ?x (Suc ?n) \\<noteq> 0; ?x ?n = 0\\<rbrakk>\n  \\<Longrightarrow> ord_Zp ?x = int ?n\n  \\<lbrakk>prime ?p; ?f \\<in> padic_set ?p\\<rbrakk>\n  \\<Longrightarrow> ?f 0 = 0\n  prime p\n\ngoal (1 subgoal):\n 1. (if x = \\<zero> then \\<infinity> else eint (padic_val p x)) = 0", "by (metis One_nat_def Zp_defs(3) of_nat_0 ord_Zp_def residue_of_zero(2) zero_eint_def)"], ["", "text\\<open>Units in Zp have val 0\\<close>"], ["", "lemma(in padic_integers) unit_imp_val_Zp0:\n  assumes \"x \\<in> Units Zp\"\n  shows \"val_Zp x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp x = 0", "apply(rule val_Zp_0_criterion)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> carrier Zp\n 2. x 1 \\<noteq> 0", "apply (simp add: R.Units_closed assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x 1 \\<noteq> 0", "using assms residue_of_prod[of x \"inv x\" 1] residue_of_one(2)[of 1] R.Units_r_inv[of x]\n        comm_monoid.UnitsI[of \"R 1\"]  p_res_ring_1_field"], ["proof (prove)\nusing this:\n  x \\<in> Units Zp\n  (x \\<otimes> inv x) 1 =\n  x 1 \\<otimes>\\<^bsub>residue_ring (p ^ 1)\\<^esub> (inv x) 1\n  0 < 1 \\<Longrightarrow> \\<one> 1 = 1\n  x \\<in> Units Zp \\<Longrightarrow> x \\<otimes> inv x = \\<one>\n  \\<lbrakk>Group.comm_monoid (R (1::?'a1)); ?a \\<in> carrier (R (1::?'a1));\n   ?b \\<in> carrier (R (1::?'a1));\n   ?a \\<otimes>\\<^bsub>R (1::?'a1)\\<^esub> ?b =\n   \\<one>\\<^bsub>R (1::?'a1)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?a \\<in> Units (R (1::?'a1))\n  \\<lbrakk>Group.comm_monoid (R (1::?'a1)); ?a \\<in> carrier (R (1::?'a1));\n   ?b \\<in> carrier (R (1::?'a1));\n   ?a \\<otimes>\\<^bsub>R (1::?'a1)\\<^esub> ?b =\n   \\<one>\\<^bsub>R (1::?'a1)\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> Units (R (1::?'a1))\n  field (residue_ring (p ^ 1))\n\ngoal (1 subgoal):\n 1. x 1 \\<noteq> 0", "by (metis le_eq_less_or_eq residue_of_prod residue_times_zero_r zero_le_one zero_neq_one)"], ["", "text\\<open>Elements in Zp with ord 0 are units\\<close>"], ["", "lemma(in padic_integers) val_Zp0_imp_unit0:\n  assumes \"val_Zp x = 0\"\n  assumes \"x \\<in> carrier Zp\"\n  fixes n::nat\n  shows \"(x (Suc n)) \\<in> Units (Zp_res_ring (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))", "unfolding val_Zp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))", "have p_res_ring: \"residues (p^(Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residues (p ^ Suc n)", "using p_residues"], ["proof (prove)\nusing this:\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n\ngoal (1 subgoal):\n 1. residues (p ^ Suc n)", "by blast"], ["proof (state)\nthis:\n  residues (p ^ Suc n)\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))", "have \"\\<And> n. coprime (x (Suc n)) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. coprime (x (Suc n)) p", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. coprime (x (Suc n)) p", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. coprime (x (Suc n)) p", "show \"coprime (x (Suc n)) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime (x (Suc n)) p", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. coprime (x (Suc n)) p", "have \"\\<not> \\<not> coprime (x (Suc n)) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<not> coprime (x (Suc n)) p", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> coprime (x (Suc n)) p \\<Longrightarrow> False", "assume \"\\<not> coprime (x (Suc n)) p\""], ["proof (state)\nthis:\n  \\<not> coprime (x (Suc n)) p\n\ngoal (1 subgoal):\n 1. \\<not> coprime (x (Suc n)) p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> coprime (x (Suc n)) p", "have \"p dvd (x (Suc n))\""], ["proof (prove)\nusing this:\n  \\<not> coprime (x (Suc n)) p\n\ngoal (1 subgoal):\n 1. p dvd x (Suc n)", "using prime"], ["proof (prove)\nusing this:\n  \\<not> coprime (x (Suc n)) p\n  prime p\n\ngoal (1 subgoal):\n 1. p dvd x (Suc n)", "by (meson coprime_commute prime_imp_coprime prime_nat_int_transfer)"], ["proof (state)\nthis:\n  p dvd x (Suc n)\n\ngoal (1 subgoal):\n 1. \\<not> coprime (x (Suc n)) p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p dvd x (Suc n)", "obtain k where \"(x (Suc n)) = k*p\""], ["proof (prove)\nusing this:\n  p dvd x (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>k. x (Suc n) = k * p \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  x (Suc n) = k * p\n\ngoal (1 subgoal):\n 1. \\<not> coprime (x (Suc n)) p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x (Suc n) = k * p", "have S:\"x (Suc n) mod p = 0\""], ["proof (prove)\nusing this:\n  x (Suc n) = k * p\n\ngoal (1 subgoal):\n 1. x (Suc n) mod p = 0", "by simp"], ["proof (state)\nthis:\n  x (Suc n) mod p = 0\n\ngoal (1 subgoal):\n 1. \\<not> coprime (x (Suc n)) p \\<Longrightarrow> False", "have \"x 1 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x 1 = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x 1 = 0", "have \"Suc n \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> Suc n", "by simp"], ["proof (state)\nthis:\n  1 \\<le> Suc n\n\ngoal (1 subgoal):\n 1. x 1 = 0", "then"], ["proof (chain)\npicking this:\n  1 \\<le> Suc n", "have \"x 1 = p_residue 1 (x (Suc n))\""], ["proof (prove)\nusing this:\n  1 \\<le> Suc n\n\ngoal (1 subgoal):\n 1. x 1 = p_residue 1 (x (Suc n))", "using p_residue_padic_int assms(2)"], ["proof (prove)\nusing this:\n  1 \\<le> Suc n\n  \\<lbrakk>?x \\<in> carrier Zp; ?k \\<le> ?m\\<rbrakk>\n  \\<Longrightarrow> p_residue ?k (?x ?m) = ?x ?k\n  x \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. x 1 = p_residue 1 (x (Suc n))", "by presburger"], ["proof (state)\nthis:\n  x 1 = p_residue 1 (x (Suc n))\n\ngoal (1 subgoal):\n 1. x 1 = 0", "then"], ["proof (chain)\npicking this:\n  x 1 = p_residue 1 (x (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  x 1 = p_residue 1 (x (Suc n))\n\ngoal (1 subgoal):\n 1. x 1 = 0", "using S"], ["proof (prove)\nusing this:\n  x 1 = p_residue 1 (x (Suc n))\n  x (Suc n) mod p = 0\n\ngoal (1 subgoal):\n 1. x 1 = 0", "by (simp add: p_residue_alt_def)"], ["proof (state)\nthis:\n  x 1 = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x 1 = 0\n\ngoal (1 subgoal):\n 1. \\<not> coprime (x (Suc n)) p \\<Longrightarrow> False", "have \"x \\<noteq>\\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> \\<zero>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> \\<zero>", "have \"ord_Zp x \\<noteq> ord_Zp \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp x \\<noteq> ord_Zp \\<zero>", "using Zp_def ord_Zp_def padic_val_def assms(1)  ord_of_nonzero(1) R.zero_closed\n                 Zp_defs(2) val_Zp_def"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  ord_Zp = padic_val p\n  padic_val ?p ?f \\<equiv>\n  if ?f = padic_zero ?p then - 1\n  else int (LEAST k.\n               ?f (Suc k) \\<noteq>\n               \\<zero>\\<^bsub>residue_ring (?p ^ Suc k)\\<^esub>)\n  val_Zp x = 0\n  \\<lbrakk>?x \\<in> carrier Zp; 0 \\<le> ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<noteq> \\<zero>\n  \\<zero> \\<in> carrier Zp\n  \\<zero> = padic_zero p\n  val_Zp =\n  (\\<lambda>x. if x = \\<zero> then \\<infinity> else eint (padic_val p x))\n\ngoal (1 subgoal):\n 1. ord_Zp x \\<noteq> ord_Zp \\<zero>", "by auto"], ["proof (state)\nthis:\n  ord_Zp x \\<noteq> ord_Zp \\<zero>\n\ngoal (1 subgoal):\n 1. x \\<noteq> \\<zero>", "then"], ["proof (chain)\npicking this:\n  ord_Zp x \\<noteq> ord_Zp \\<zero>", "show ?thesis"], ["proof (prove)\nusing this:\n  ord_Zp x \\<noteq> ord_Zp \\<zero>\n\ngoal (1 subgoal):\n 1. x \\<noteq> \\<zero>", "by blast"], ["proof (state)\nthis:\n  x \\<noteq> \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. \\<not> coprime (x (Suc n)) p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> \\<zero>", "have \"x 1 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. x 1 \\<noteq> 0", "using assms(1) assms(2)  ord_suc_nonzero"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<zero>\n  val_Zp x = 0\n  x \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>;\n   ord_Zp ?x = int ?n\\<rbrakk>\n  \\<Longrightarrow> ?x (Suc ?n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x 1 \\<noteq> 0", "unfolding val_Zp_def"], ["proof (prove)\nusing this:\n  x \\<noteq> \\<zero>\n  (if x = \\<zero> then \\<infinity> else eint (padic_val p x)) = 0\n  x \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>;\n   ord_Zp ?x = int ?n\\<rbrakk>\n  \\<Longrightarrow> ?x (Suc ?n) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x 1 \\<noteq> 0", "by (simp add: ord_Zp_def zero_eint_def)"], ["proof (state)\nthis:\n  x 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> coprime (x (Suc n)) p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x 1 \\<noteq> 0", "show False"], ["proof (prove)\nusing this:\n  x 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "using \\<open>x 1 = 0\\<close>"], ["proof (prove)\nusing this:\n  x 1 \\<noteq> 0\n  x 1 = 0\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> \\<not> coprime (x (Suc n)) p\n\ngoal (1 subgoal):\n 1. coprime (x (Suc n)) p", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<not> coprime (x (Suc n)) p", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> \\<not> coprime (x (Suc n)) p\n\ngoal (1 subgoal):\n 1. coprime (x (Suc n)) p", "by auto"], ["proof (state)\nthis:\n  coprime (x (Suc n)) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime (x (Suc n)) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime (x (Suc ?n)) p\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))", "then"], ["proof (chain)\npicking this:\n  coprime (x (Suc ?n)) p", "have \"\\<And> n. coprime (x (Suc n)) (p^(Suc n))\""], ["proof (prove)\nusing this:\n  coprime (x (Suc ?n)) p\n\ngoal (1 subgoal):\n 1. \\<And>n. coprime (x (Suc n)) (p ^ Suc n)", "by simp"], ["proof (state)\nthis:\n  coprime (x (Suc ?n)) (p ^ Suc ?n)\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))", "then"], ["proof (chain)\npicking this:\n  coprime (x (Suc ?n)) (p ^ Suc ?n)", "have \"coprime (x (Suc n)) (p^(Suc n))\""], ["proof (prove)\nusing this:\n  coprime (x (Suc ?n)) (p ^ Suc ?n)\n\ngoal (1 subgoal):\n 1. coprime (x (Suc n)) (p ^ Suc n)", "by blast"], ["proof (state)\nthis:\n  coprime (x (Suc n)) (p ^ Suc n)\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))", "then"], ["proof (chain)\npicking this:\n  coprime (x (Suc n)) (p ^ Suc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  coprime (x (Suc n)) (p ^ Suc n)\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))", "using assms residues.res_units_eq  p_res_ring"], ["proof (prove)\nusing this:\n  coprime (x (Suc n)) (p ^ Suc n)\n  val_Zp x = 0\n  x \\<in> carrier Zp\n  residues ?m \\<Longrightarrow>\n  Units (residue_ring ?m) = {x. 0 < x \\<and> x < ?m \\<and> coprime x ?m}\n  residues (p ^ Suc n)\n\ngoal (1 subgoal):\n 1. x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))", "by (metis (no_types, lifting) mod_pos_pos_trivial p_residue_ring_car_memE(1)\n        p_residue_ring_car_memE(2) residues.m_gt_one residues.mod_in_res_units residues_closed)"], ["proof (state)\nthis:\n  x (Suc n) \\<in> Units (residue_ring (p ^ Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) val_Zp0_imp_unit0':\n  assumes \"val_Zp x = 0\"\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"(n::nat) > 0\"\n  shows \"(x n) \\<in> Units (Zp_res_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<in> Units (residue_ring (p ^ n))", "using assms val_Zp0_imp_unit0 gr0_implies_Suc"], ["proof (prove)\nusing this:\n  val_Zp x = 0\n  x \\<in> carrier Zp\n  0 < n\n  \\<lbrakk>val_Zp ?x = 0; ?x \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x (Suc ?n) \\<in> Units (residue_ring (p ^ Suc ?n))\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. x n \\<in> Units (residue_ring (p ^ n))", "by blast"], ["", "lemma(in cring) ring_hom_Units_inv:\n  assumes \"a \\<in> Units R\"\n  assumes \"cring S\"\n  assumes \"h \\<in> ring_hom R S\"\n  shows \"h (inv a) = inv\\<^bsub>S\\<^esub> h a\" \"h a \\<in> Units S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h (inv a) = inv\\<^bsub>S\\<^esub> h a &&& h a \\<in> Units S", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. h (inv a) = inv\\<^bsub>S\\<^esub> h a\n 2. h a \\<in> Units S", "have 0:\"h (inv a) \\<otimes>\\<^bsub>S\\<^esub> h a = \\<one>\\<^bsub>S\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h (inv a) \\<otimes>\\<^bsub>S\\<^esub> h a = \\<one>\\<^bsub>S\\<^esub>", "using assms Units_closed Units_inv_closed"], ["proof (prove)\nusing this:\n  a \\<in> Units R\n  cring S\n  h \\<in> ring_hom R S\n  ?x \\<in> Units R \\<Longrightarrow> ?x \\<in> carrier R\n  ?x \\<in> Units R \\<Longrightarrow> inv ?x \\<in> carrier R\n\ngoal (1 subgoal):\n 1. h (inv a) \\<otimes>\\<^bsub>S\\<^esub> h a = \\<one>\\<^bsub>S\\<^esub>", "by (metis (no_types, lifting) Units_l_inv ring_hom_mult ring_hom_one)"], ["proof (state)\nthis:\n  h (inv a) \\<otimes>\\<^bsub>S\\<^esub> h a = \\<one>\\<^bsub>S\\<^esub>\n\ngoal (2 subgoals):\n 1. h (inv a) = inv\\<^bsub>S\\<^esub> h a\n 2. h a \\<in> Units S", "then"], ["proof (chain)\npicking this:\n  h (inv a) \\<otimes>\\<^bsub>S\\<^esub> h a = \\<one>\\<^bsub>S\\<^esub>", "show 1: \"h (inv a) = inv\\<^bsub>S\\<^esub> h a\""], ["proof (prove)\nusing this:\n  h (inv a) \\<otimes>\\<^bsub>S\\<^esub> h a = \\<one>\\<^bsub>S\\<^esub>\n\ngoal (1 subgoal):\n 1. h (inv a) = inv\\<^bsub>S\\<^esub> h a", "by (metis Units_closed Units_inv_closed assms(1) assms(2) assms(3) comm_monoid.is_invI(1) cring_def ring_hom_closed)"], ["proof (state)\nthis:\n  h (inv a) = inv\\<^bsub>S\\<^esub> h a\n\ngoal (1 subgoal):\n 1. h a \\<in> Units S", "show \"h a \\<in> Units S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h a \\<in> Units S", "apply(rule comm_monoid.UnitsI[of S \"inv\\<^bsub>S\\<^esub> h a\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. Group.comm_monoid S\n 2. inv\\<^bsub>S\\<^esub> h a \\<in> carrier S\n 3. h a \\<in> carrier S\n 4. inv\\<^bsub>S\\<^esub> h a \\<otimes>\\<^bsub>S\\<^esub> h a =\n    \\<one>\\<^bsub>S\\<^esub>", "using 0 1 assms"], ["proof (prove)\nusing this:\n  h (inv a) \\<otimes>\\<^bsub>S\\<^esub> h a = \\<one>\\<^bsub>S\\<^esub>\n  h (inv a) = inv\\<^bsub>S\\<^esub> h a\n  a \\<in> Units R\n  cring S\n  h \\<in> ring_hom R S\n\ngoal (4 subgoals):\n 1. Group.comm_monoid S\n 2. inv\\<^bsub>S\\<^esub> h a \\<in> carrier S\n 3. h a \\<in> carrier S\n 4. inv\\<^bsub>S\\<^esub> h a \\<otimes>\\<^bsub>S\\<^esub> h a =\n    \\<one>\\<^bsub>S\\<^esub>", "using cring.axioms(2)"], ["proof (prove)\nusing this:\n  h (inv a) \\<otimes>\\<^bsub>S\\<^esub> h a = \\<one>\\<^bsub>S\\<^esub>\n  h (inv a) = inv\\<^bsub>S\\<^esub> h a\n  a \\<in> Units R\n  cring S\n  h \\<in> ring_hom R S\n  cring ?R \\<Longrightarrow> Group.comm_monoid ?R\n\ngoal (4 subgoals):\n 1. Group.comm_monoid S\n 2. inv\\<^bsub>S\\<^esub> h a \\<in> carrier S\n 3. h a \\<in> carrier S\n 4. inv\\<^bsub>S\\<^esub> h a \\<otimes>\\<^bsub>S\\<^esub> h a =\n    \\<one>\\<^bsub>S\\<^esub>", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. inv\\<^bsub>S\\<^esub> h a \\<in> carrier S\n 2. h a \\<in> carrier S\n 3. inv\\<^bsub>S\\<^esub> h a \\<otimes>\\<^bsub>S\\<^esub> h a =\n    \\<one>\\<^bsub>S\\<^esub>", "apply (metis \"1\" Units_inv_closed assms(1) assms(3) ring_hom_closed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. h a \\<in> carrier S\n 2. inv\\<^bsub>S\\<^esub> h a \\<otimes>\\<^bsub>S\\<^esub> h a =\n    \\<one>\\<^bsub>S\\<^esub>", "apply (meson Units_closed assms(1) assms(3) ring_hom_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv\\<^bsub>S\\<^esub> h a \\<otimes>\\<^bsub>S\\<^esub> h a =\n    \\<one>\\<^bsub>S\\<^esub>", "using \"0\" \"1\""], ["proof (prove)\nusing this:\n  h (inv a) \\<otimes>\\<^bsub>S\\<^esub> h a = \\<one>\\<^bsub>S\\<^esub>\n  h (inv a) = inv\\<^bsub>S\\<^esub> h a\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>S\\<^esub> h a \\<otimes>\\<^bsub>S\\<^esub> h a =\n    \\<one>\\<^bsub>S\\<^esub>", "by auto"], ["proof (state)\nthis:\n  h a \\<in> Units S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) val_Zp_0_imp_unit:\n  assumes \"val_Zp x = 0\"\n  assumes \"x \\<in> carrier Zp\"\n  shows \"x \\<in> Units Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> Units Zp", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> Units Zp", "obtain y where y_def: \" y= (\\<lambda>n. (if n=0 then 0 else (m_inv (Zp_res_ring n) (x n))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        y =\n        (\\<lambda>n.\n            if n = 0 then 0\n            else inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x\n                    n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y =\n  (\\<lambda>n.\n      if n = 0 then 0 else inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x n)\n\ngoal (1 subgoal):\n 1. x \\<in> Units Zp", "have 0:  \"\\<And>m. m > 0 \\<Longrightarrow> y m = inv \\<^bsub>Zp_res_ring m\\<^esub> (x m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       0 < m \\<Longrightarrow>\n       y m = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m", "using y_def"], ["proof (prove)\nusing this:\n  y =\n  (\\<lambda>n.\n      if n = 0 then 0 else inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x n)\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       0 < m \\<Longrightarrow>\n       y m = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m", "by auto"], ["proof (state)\nthis:\n  0 < ?m \\<Longrightarrow>\n  y ?m = inv\\<^bsub>residue_ring (p ^ ?m)\\<^esub> x ?m\n\ngoal (1 subgoal):\n 1. x \\<in> Units Zp", "have 1:  \"\\<And>m. m > 0 \\<Longrightarrow> inv\\<^bsub>Zp_res_ring m\\<^esub> (x m) \\<in> carrier (Zp_res_ring m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m.\n       0 < m \\<Longrightarrow>\n       inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n       \\<in> carrier (residue_ring (p ^ m))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       0 < m \\<Longrightarrow>\n       inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n       \\<in> carrier (residue_ring (p ^ m))", "fix m::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m.\n       0 < m \\<Longrightarrow>\n       inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n       \\<in> carrier (residue_ring (p ^ m))", "assume A: \"m > 0\""], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       0 < m \\<Longrightarrow>\n       inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n       \\<in> carrier (residue_ring (p ^ m))", "then"], ["proof (chain)\npicking this:\n  0 < m", "show \"inv\\<^bsub>Zp_res_ring m\\<^esub> (x m) \\<in> carrier (Zp_res_ring m)\""], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n    \\<in> carrier (residue_ring (p ^ m))", "using assms val_Zp0_imp_unit0' monoid.Units_inv_closed[of \"Zp_res_ring m\" \"x m\"]"], ["proof (prove)\nusing this:\n  0 < m\n  val_Zp x = 0\n  x \\<in> carrier Zp\n  \\<lbrakk>val_Zp ?x = 0; ?x \\<in> carrier Zp; 0 < ?n\\<rbrakk>\n  \\<Longrightarrow> ?x ?n \\<in> Units (residue_ring (p ^ ?n))\n  \\<lbrakk>Group.monoid (residue_ring (p ^ m));\n   x m \\<in> Units (residue_ring (p ^ m))\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n                    \\<in> carrier (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n    \\<in> carrier (residue_ring (p ^ m))", "by (smt One_nat_def Zp_def Zp_defs(2) cring.axioms(1) of_nat_0 ord_Zp_def \n        padic_integers.R_cring padic_integers.ord_suc_nonzero padic_integers.val_Zp_0_criterion padic_integers_axioms padic_val_def ring_def)"], ["proof (state)\nthis:\n  inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n  \\<in> carrier (residue_ring (p ^ m))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < ?m \\<Longrightarrow>\n  inv\\<^bsub>residue_ring (p ^ ?m)\\<^esub> x ?m\n  \\<in> carrier (residue_ring (p ^ ?m))\n\ngoal (1 subgoal):\n 1. x \\<in> Units Zp", "have 2: \"y \\<in> padic_set p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> padic_set p", "proof(rule padic_set_memI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m. y m \\<in> carrier (residue_ring (p ^ m))\n 2. \\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (y n) = y m", "show 20: \"\\<And>m. y m \\<in> carrier (residue_ring (p ^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m. y m \\<in> carrier (residue_ring (p ^ m))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. y m \\<in> carrier (residue_ring (p ^ m))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. y m \\<in> carrier (residue_ring (p ^ m))", "show \"y m \\<in> carrier (residue_ring (p ^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y m \\<in> carrier (residue_ring (p ^ m))", "apply(cases \"m = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> y m \\<in> carrier (residue_ring (p ^ m))\n 2. m \\<noteq> 0 \\<Longrightarrow> y m \\<in> carrier (residue_ring (p ^ m))", "using y_def 0[of m] 1[of m]"], ["proof (prove)\nusing this:\n  y =\n  (\\<lambda>n.\n      if n = 0 then 0 else inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x n)\n  0 < m \\<Longrightarrow> y m = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n  0 < m \\<Longrightarrow>\n  inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n  \\<in> carrier (residue_ring (p ^ m))\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> y m \\<in> carrier (residue_ring (p ^ m))\n 2. m \\<noteq> 0 \\<Longrightarrow> y m \\<in> carrier (residue_ring (p ^ m))", "by(auto simp: residue_ring_def y_def)"], ["proof (state)\nthis:\n  y m \\<in> carrier (residue_ring (p ^ m))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y ?m \\<in> carrier (residue_ring (p ^ ?m))\n\ngoal (1 subgoal):\n 1. \\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (y n) = y m", "show \"\\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (y n) = y m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (y n) = y m", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (y n) = y m", "fix m n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (y n) = y m", "assume A: \"m < n\""], ["proof (state)\nthis:\n  m < n\n\ngoal (1 subgoal):\n 1. \\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (y n) = y m", "show \"residue (p ^ m) (y n) = y m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m) (y n) = y m", "proof(cases \"m = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m\n 2. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m\n 2. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "then"], ["proof (chain)\npicking this:\n  m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (y n) = y m", "by (simp add: residue_1_zero y_def)"], ["proof (state)\nthis:\n  residue (p ^ m) (y n) = y m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "have hom: \"residue (p ^ m) \\<in> ring_hom (Zp_res_ring n) (Zp_res_ring m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m)\n    \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "using A False prime residue_hom_p"], ["proof (prove)\nusing this:\n  m < n\n  m \\<noteq> 0\n  prime p\n  \\<lbrakk>?m \\<le> ?n; 0 < ?m; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m)\n                    \\<in> ring_hom (residue_ring (?p ^ ?n))\n                           (residue_ring (?p ^ ?m))\n\ngoal (1 subgoal):\n 1. residue (p ^ m)\n    \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))", "by auto"], ["proof (state)\nthis:\n  residue (p ^ m)\n  \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "have inv: \"y n = inv\\<^bsub>Zp_res_ring n\\<^esub> x n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y n = inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x n", "using A"], ["proof (prove)\nusing this:\n  m < n\n\ngoal (1 subgoal):\n 1. y n = inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x n", "by (simp add: False y_def)"], ["proof (state)\nthis:\n  y n = inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x n\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "have unit: \"x n \\<in> Units (Zp_res_ring n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x n \\<in> Units (residue_ring (p ^ n))", "using A False Zp_def assms(1) assms(2) val_Zp0_imp_unit0' prime"], ["proof (prove)\nusing this:\n  m < n\n  m \\<noteq> 0\n  Zp \\<equiv> padic_int p\n  val_Zp x = 0\n  x \\<in> carrier Zp\n  \\<lbrakk>val_Zp ?x = 0; ?x \\<in> carrier Zp; 0 < ?n\\<rbrakk>\n  \\<Longrightarrow> ?x ?n \\<in> Units (residue_ring (p ^ ?n))\n  prime p\n\ngoal (1 subgoal):\n 1. x n \\<in> Units (residue_ring (p ^ n))", "by (metis gr0I gr_implies_not0)"], ["proof (state)\nthis:\n  x n \\<in> Units (residue_ring (p ^ n))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "have F0: \"residue (p ^ m) (x n) = x m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m) (x n) = x m", "using A Zp_defs(3) assms(2) padic_set_res_coherent prime"], ["proof (prove)\nusing this:\n  m < n\n  carrier Zp = padic_set p\n  x \\<in> carrier Zp\n  \\<lbrakk>?f \\<in> padic_set ?p; ?m \\<le> ?n; prime ?p\\<rbrakk>\n  \\<Longrightarrow> residue (?p ^ ?m) (?f ?n) = ?f ?m\n  prime p\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (x n) = x m", "by auto"], ["proof (state)\nthis:\n  residue (p ^ m) (x n) = x m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "have F1: \"residue (p ^ m) (y n) = inv\\<^bsub>Zp_res_ring m\\<^esub> x m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residue (p ^ m) (y n) = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m", "using F0 R_cring A  hom inv unit cring.ring_hom_Units_inv[of \"Zp_res_ring n\" \"x n\" \"Zp_res_ring m\" \"residue (p ^ m)\"] \n               False"], ["proof (prove)\nusing this:\n  residue (p ^ m) (x n) = x m\n  0 < ?m \\<Longrightarrow> cring (residue_ring (p ^ ?m))\n  m < n\n  residue (p ^ m)\n  \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\n  y n = inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x n\n  x n \\<in> Units (residue_ring (p ^ n))\n  \\<lbrakk>cring (residue_ring (p ^ n));\n   x n \\<in> Units (residue_ring (p ^ n)); cring (residue_ring (p ^ m));\n   residue (p ^ m)\n   \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\\<rbrakk>\n  \\<Longrightarrow> residue (p ^ m)\n                     (inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x n) =\n                    inv\\<^bsub>residue_ring (p ^ m)\\<^esub> residue (p ^ m)\n                       (x n)\n  \\<lbrakk>cring (residue_ring (p ^ n));\n   x n \\<in> Units (residue_ring (p ^ n)); cring (residue_ring (p ^ m));\n   residue (p ^ m)\n   \\<in> ring_hom (residue_ring (p ^ n)) (residue_ring (p ^ m))\\<rbrakk>\n  \\<Longrightarrow> residue (p ^ m) (x n) \\<in> Units (residue_ring (p ^ m))\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (y n) = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m", "by auto"], ["proof (state)\nthis:\n  residue (p ^ m) (y n) = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> residue (p ^ m) (y n) = y m", "then"], ["proof (chain)\npicking this:\n  residue (p ^ m) (y n) = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m", "show ?thesis"], ["proof (prove)\nusing this:\n  residue (p ^ m) (y n) = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n\ngoal (1 subgoal):\n 1. residue (p ^ m) (y n) = y m", "by (simp add: False y_def)"], ["proof (state)\nthis:\n  residue (p ^ m) (y n) = y m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  residue (p ^ m) (y n) = y m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?m < ?n \\<Longrightarrow> residue (p ^ ?m) (y ?n) = y ?m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<in> padic_set p\n\ngoal (1 subgoal):\n 1. x \\<in> Units Zp", "have 3: \"y \\<otimes> x = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<otimes> x = \\<one>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. (y \\<otimes> x) xa = \\<one> xa", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. (y \\<otimes> x) xa = \\<one> xa", "show \"(y \\<otimes> x) m = \\<one> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<otimes> x) m = \\<one> m", "proof(cases \"m=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m\n 2. m \\<noteq> 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m\n 2. m \\<noteq> 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m", "then"], ["proof (chain)\npicking this:\n  m = 0", "have L: \"(y \\<otimes> x) m  = 0\""], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. (y \\<otimes> x) m = 0", "using  Zp_def \"1\" assms(2) Zp_residue_mult_zero(1) y_def"], ["proof (prove)\nusing this:\n  m = 0\n  Zp \\<equiv> padic_int p\n  0 < ?m \\<Longrightarrow>\n  inv\\<^bsub>residue_ring (p ^ ?m)\\<^esub> x ?m\n  \\<in> carrier (residue_ring (p ^ ?m))\n  x \\<in> carrier Zp\n  ?a ?k = 0 \\<Longrightarrow> (?a \\<otimes> ?b) ?k = 0\n  y =\n  (\\<lambda>n.\n      if n = 0 then 0 else inv\\<^bsub>residue_ring (p ^ n)\\<^esub> x n)\n\ngoal (1 subgoal):\n 1. (y \\<otimes> x) m = 0", "by auto"], ["proof (state)\nthis:\n  (y \\<otimes> x) m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m\n 2. m \\<noteq> 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m", "have R: \"\\<one> m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> m = 0", "by (simp add: True cring.cring_simprules(6) domain.axioms(1) ord_Zp_one zero_below_ord)"], ["proof (state)\nthis:\n  \\<one> m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m\n 2. m \\<noteq> 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m", "then"], ["proof (chain)\npicking this:\n  \\<one> m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<one> m = 0\n\ngoal (1 subgoal):\n 1. (y \\<otimes> x) m = \\<one> m", "using L R"], ["proof (prove)\nusing this:\n  \\<one> m = 0\n  (y \\<otimes> x) m = 0\n  \\<one> m = 0\n\ngoal (1 subgoal):\n 1. (y \\<otimes> x) m = \\<one> m", "by auto"], ["proof (state)\nthis:\n  (y \\<otimes> x) m = \\<one> m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m", "have P: \"(y \\<otimes> x) m = (y m) \\<otimes>\\<^bsub>residue_ring (p^m)\\<^esub> (x m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<otimes> x) m =\n    y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m", "using Zp_def residue_of_prod"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  (?a \\<otimes> ?b) ?k =\n  ?a ?k \\<otimes>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?b ?k\n\ngoal (1 subgoal):\n 1. (y \\<otimes> x) m =\n    y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m", "by auto"], ["proof (state)\nthis:\n  (y \\<otimes> x) m = y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m", "have \"(y m) \\<otimes>\\<^bsub>residue_ring (p^m)\\<^esub> (x m) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "have \"p^m > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < p ^ m", "using False prime prime_gt_1_int"], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n  prime p\n  prime ?p \\<Longrightarrow> 1 < ?p\n\ngoal (1 subgoal):\n 1. 1 < p ^ m", "by auto"], ["proof (state)\nthis:\n  1 < p ^ m\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "then"], ["proof (chain)\npicking this:\n  1 < p ^ m", "have \"residues (p^m)\""], ["proof (prove)\nusing this:\n  1 < p ^ m\n\ngoal (1 subgoal):\n 1. residues (p ^ m)", "using less_imp_of_nat_less residues.intro"], ["proof (prove)\nusing this:\n  1 < p ^ m\n  ?m < ?n \\<Longrightarrow> of_nat ?m < of_nat ?n\n  1 < ?m \\<Longrightarrow> residues ?m\n\ngoal (1 subgoal):\n 1. residues (p ^ m)", "by fastforce"], ["proof (state)\nthis:\n  residues (p ^ m)\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "have \"cring (residue_ring (p^m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cring (residue_ring (p ^ m))", "using  residues.cring \\<open>residues (p ^ m)\\<close>"], ["proof (prove)\nusing this:\n  residues ?m \\<Longrightarrow> cring (residue_ring ?m)\n  residues (p ^ m)\n\ngoal (1 subgoal):\n 1. cring (residue_ring (p ^ m))", "by blast"], ["proof (state)\nthis:\n  cring (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "then"], ["proof (chain)\npicking this:\n  cring (residue_ring (p ^ m))", "have M: \"monoid (residue_ring (p^m))\""], ["proof (prove)\nusing this:\n  cring (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. Group.monoid (residue_ring (p ^ m))", "using cring_def ring_def"], ["proof (prove)\nusing this:\n  cring (residue_ring (p ^ m))\n  cring ?R \\<equiv> ring ?R \\<and> Group.comm_monoid ?R\n  ring ?R \\<equiv>\n  abelian_group ?R \\<and> Group.monoid ?R \\<and> ring_axioms ?R\n\ngoal (1 subgoal):\n 1. Group.monoid (residue_ring (p ^ m))", "by blast"], ["proof (state)\nthis:\n  Group.monoid (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "have U: \"(x m) \\<in> Units (residue_ring (p^m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x m \\<in> Units (residue_ring (p ^ m))", "using False Zp_def assms(1) assms(2) padic_integers.val_Zp0_imp_unit0' padic_integers_axioms"], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n  Zp \\<equiv> padic_int p\n  val_Zp x = 0\n  x \\<in> carrier Zp\n  \\<lbrakk>padic_integers ?p; padic_integers.val_Zp ?p ?x = 0;\n   ?x \\<in> carrier (padic_int ?p); 0 < ?n\\<rbrakk>\n  \\<Longrightarrow> ?x ?n \\<in> Units (residue_ring (?p ^ ?n))\n  padic_integers p\n\ngoal (1 subgoal):\n 1. x m \\<in> Units (residue_ring (p ^ m))", "by auto"], ["proof (state)\nthis:\n  x m \\<in> Units (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "have I: \"y m = m_inv (residue_ring (p^m)) (x m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y m = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m", "by (simp add: False y_def)"], ["proof (state)\nthis:\n  y m = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "have \"(y m) \\<otimes>\\<^bsub>residue_ring (p^m)\\<^esub> (x m) = \\<one>\\<^bsub>residue_ring (p^m)\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m =\n    \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>", "using M U I"], ["proof (prove)\nusing this:\n  Group.monoid (residue_ring (p ^ m))\n  x m \\<in> Units (residue_ring (p ^ m))\n  y m = inv\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m =\n    \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>", "by (simp add: monoid.Units_l_inv)"], ["proof (state)\nthis:\n  y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m =\n  \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "then"], ["proof (chain)\npicking this:\n  y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m =\n  \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m =\n  \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "using residue_ring_def"], ["proof (prove)\nusing this:\n  y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m =\n  \\<one>\\<^bsub>residue_ring (p ^ m)\\<^esub>\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "by simp"], ["proof (state)\nthis:\n  y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow> (y \\<otimes> x) m = \\<one> m", "then"], ["proof (chain)\npicking this:\n  y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1\n\ngoal (1 subgoal):\n 1. (y \\<otimes> x) m = \\<one> m", "using P Zp_def False residue_of_one(2)"], ["proof (prove)\nusing this:\n  y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m = 1\n  (y \\<otimes> x) m = y m \\<otimes>\\<^bsub>residue_ring (p ^ m)\\<^esub> x m\n  Zp \\<equiv> padic_int p\n  m \\<noteq> 0\n  0 < ?k \\<Longrightarrow> \\<one> ?k = 1\n\ngoal (1 subgoal):\n 1. (y \\<otimes> x) m = \\<one> m", "by auto"], ["proof (state)\nthis:\n  (y \\<otimes> x) m = \\<one> m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (y \\<otimes> x) m = \\<one> m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<otimes> x = \\<one>\n\ngoal (1 subgoal):\n 1. x \\<in> Units Zp", "have 4: \"y \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> carrier Zp", "using 2 Zp_defs"], ["proof (prove)\nusing this:\n  y \\<in> padic_set p\n  \\<one> = padic_one p\n  \\<zero> = padic_zero p\n  carrier Zp = padic_set p\n  (\\<otimes>) = padic_mult p\n  (\\<oplus>) = padic_add p\n\ngoal (1 subgoal):\n 1. y \\<in> carrier Zp", "by auto"], ["proof (state)\nthis:\n  y \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. x \\<in> Units Zp", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> Units Zp", "apply(rule R.UnitsI[of y])"], ["proof (prove)\ngoal (3 subgoals):\n 1. y \\<in> carrier Zp\n 2. x \\<in> carrier Zp\n 3. y \\<otimes> x = \\<one>", "using assms 4 3"], ["proof (prove)\nusing this:\n  val_Zp x = 0\n  x \\<in> carrier Zp\n  y \\<in> carrier Zp\n  y \\<otimes> x = \\<one>\n\ngoal (3 subgoals):\n 1. y \\<in> carrier Zp\n 2. x \\<in> carrier Zp\n 3. y \\<otimes> x = \\<one>", "by auto"], ["proof (state)\nthis:\n  x \\<in> Units Zp\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Definition of ord on a fraction is independent of the choice of representatives\\<close>"], ["", "lemma(in padic_integers) ord_Zp_eq_frac:\n  assumes \"a \\<in> nonzero Zp\"\n  assumes \"b \\<in> nonzero Zp\"\n  assumes \"c \\<in> nonzero Zp\"\n  assumes \"d \\<in> nonzero Zp\"\n  assumes \"a \\<otimes> d = b \\<otimes> c\"\n  shows \"(ord_Zp a) - (ord_Zp b) = (ord_Zp c) - (ord_Zp d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp a - ord_Zp b = ord_Zp c - ord_Zp d", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ord_Zp a - ord_Zp b = ord_Zp c - ord_Zp d", "have \"ord_Zp (a \\<otimes> d) = ord_Zp (b \\<otimes> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp (a \\<otimes> d) = ord_Zp (b \\<otimes> c)", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> nonzero Zp\n  b \\<in> nonzero Zp\n  c \\<in> nonzero Zp\n  d \\<in> nonzero Zp\n  a \\<otimes> d = b \\<otimes> c\n\ngoal (1 subgoal):\n 1. ord_Zp (a \\<otimes> d) = ord_Zp (b \\<otimes> c)", "by presburger"], ["proof (state)\nthis:\n  ord_Zp (a \\<otimes> d) = ord_Zp (b \\<otimes> c)\n\ngoal (1 subgoal):\n 1. ord_Zp a - ord_Zp b = ord_Zp c - ord_Zp d", "then"], ["proof (chain)\npicking this:\n  ord_Zp (a \\<otimes> d) = ord_Zp (b \\<otimes> c)", "have \"(ord_Zp a) + (ord_Zp  d) = (ord_Zp b) + (ord_Zp c)\""], ["proof (prove)\nusing this:\n  ord_Zp (a \\<otimes> d) = ord_Zp (b \\<otimes> c)\n\ngoal (1 subgoal):\n 1. ord_Zp a + ord_Zp d = ord_Zp b + ord_Zp c", "using assms(1) assms(2) assms(3) assms(4) ord_Zp_mult"], ["proof (prove)\nusing this:\n  ord_Zp (a \\<otimes> d) = ord_Zp (b \\<otimes> c)\n  a \\<in> nonzero Zp\n  b \\<in> nonzero Zp\n  c \\<in> nonzero Zp\n  d \\<in> nonzero Zp\n  \\<lbrakk>?x \\<in> nonzero Zp; ?y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (?x \\<otimes> ?y) = ord_Zp ?x + ord_Zp ?y\n\ngoal (1 subgoal):\n 1. ord_Zp a + ord_Zp d = ord_Zp b + ord_Zp c", "by metis"], ["proof (state)\nthis:\n  ord_Zp a + ord_Zp d = ord_Zp b + ord_Zp c\n\ngoal (1 subgoal):\n 1. ord_Zp a - ord_Zp b = ord_Zp c - ord_Zp d", "then"], ["proof (chain)\npicking this:\n  ord_Zp a + ord_Zp d = ord_Zp b + ord_Zp c", "show ?thesis"], ["proof (prove)\nusing this:\n  ord_Zp a + ord_Zp d = ord_Zp b + ord_Zp c\n\ngoal (1 subgoal):\n 1. ord_Zp a - ord_Zp b = ord_Zp c - ord_Zp d", "by linarith"], ["proof (state)\nthis:\n  ord_Zp a - ord_Zp b = ord_Zp c - ord_Zp d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) val_Zp_eq_frac_0:\n  assumes \"a \\<in> nonzero Zp\"\n  assumes \"b \\<in> nonzero Zp\"\n  assumes \"c \\<in> nonzero Zp\"\n  assumes \"d \\<in> nonzero Zp\"\n  assumes \"a \\<otimes> d = b \\<otimes> c\"\n  shows \"(val_Zp a) - (val_Zp b) = (val_Zp c) - (val_Zp d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp a - val_Zp b = val_Zp c - val_Zp d", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. val_Zp a - val_Zp b = val_Zp c - val_Zp d", "have 0:\"(val_Zp a) - (val_Zp b) = (ord_Zp a) - (ord_Zp b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp a - val_Zp b = eint (ord_Zp a - ord_Zp b)", "using assms nonzero_memE Zp_defs(2) ord_Zp_def val_Zp_def"], ["proof (prove)\nusing this:\n  a \\<in> nonzero Zp\n  b \\<in> nonzero Zp\n  c \\<in> nonzero Zp\n  d \\<in> nonzero Zp\n  a \\<otimes> d = b \\<otimes> c\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  \\<zero> = padic_zero p\n  ord_Zp = padic_val p\n  val_Zp =\n  (\\<lambda>x. if x = \\<zero> then \\<infinity> else eint (padic_val p x))\n\ngoal (1 subgoal):\n 1. val_Zp a - val_Zp b = eint (ord_Zp a - ord_Zp b)", "by auto"], ["proof (state)\nthis:\n  val_Zp a - val_Zp b = eint (ord_Zp a - ord_Zp b)\n\ngoal (1 subgoal):\n 1. val_Zp a - val_Zp b = val_Zp c - val_Zp d", "have 1: \"(val_Zp c) - (val_Zp d) = (ord_Zp c) - (ord_Zp d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp c - val_Zp d = eint (ord_Zp c - ord_Zp d)", "using assms nonzero_memE   val_ord_Zp[of c] val_ord_Zp[of d]"], ["proof (prove)\nusing this:\n  a \\<in> nonzero Zp\n  b \\<in> nonzero Zp\n  c \\<in> nonzero Zp\n  d \\<in> nonzero Zp\n  a \\<otimes> d = b \\<otimes> c\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  c \\<noteq> \\<zero> \\<Longrightarrow> val_Zp c = eint (ord_Zp c)\n  d \\<noteq> \\<zero> \\<Longrightarrow> val_Zp d = eint (ord_Zp d)\n\ngoal (1 subgoal):\n 1. val_Zp c - val_Zp d = eint (ord_Zp c - ord_Zp d)", "by (simp add: nonzero_memE(2))"], ["proof (state)\nthis:\n  val_Zp c - val_Zp d = eint (ord_Zp c - ord_Zp d)\n\ngoal (1 subgoal):\n 1. val_Zp a - val_Zp b = val_Zp c - val_Zp d", "then"], ["proof (chain)\npicking this:\n  val_Zp c - val_Zp d = eint (ord_Zp c - ord_Zp d)", "show ?thesis"], ["proof (prove)\nusing this:\n  val_Zp c - val_Zp d = eint (ord_Zp c - ord_Zp d)\n\ngoal (1 subgoal):\n 1. val_Zp a - val_Zp b = val_Zp c - val_Zp d", "using \"0\" assms(1) assms(2) assms(3) assms(4) assms(5) ord_Zp_eq_frac"], ["proof (prove)\nusing this:\n  val_Zp c - val_Zp d = eint (ord_Zp c - ord_Zp d)\n  val_Zp a - val_Zp b = eint (ord_Zp a - ord_Zp b)\n  a \\<in> nonzero Zp\n  b \\<in> nonzero Zp\n  c \\<in> nonzero Zp\n  d \\<in> nonzero Zp\n  a \\<otimes> d = b \\<otimes> c\n  \\<lbrakk>?a \\<in> nonzero Zp; ?b \\<in> nonzero Zp; ?c \\<in> nonzero Zp;\n   ?d \\<in> nonzero Zp; ?a \\<otimes> ?d = ?b \\<otimes> ?c\\<rbrakk>\n  \\<Longrightarrow> ord_Zp ?a - ord_Zp ?b = ord_Zp ?c - ord_Zp ?d\n\ngoal (1 subgoal):\n 1. val_Zp a - val_Zp b = val_Zp c - val_Zp d", "by presburger"], ["proof (state)\nthis:\n  val_Zp a - val_Zp b = val_Zp c - val_Zp d\n\ngoal:\nNo subgoals!", "qed"], ["", "(*************************************************************************************************)\n(*************************************************************************************************)\n(*****************)"], ["", "section\\<open>Angular Component Maps on $\\mathbb{Z}_p$\\<close>"], ["", "(*********************)\n(*************************************************************************************************)\n(*************************************************************************************************)"], ["", "text\\<open>The angular component map on $\\mathbb{Z}_p$ is just the map which normalizes a point $x \\in \\mathbb{Z}_p$ by mapping it to a point with valuation $0$. It is explicitly defined as the mapping $x \\mapsto p^{-ord (p)}*x$ for nonzero $x$, and $0 \\mapsto 0$. By composing these maps with reductions mod $p^n$ we get maps which are equal to the standard residue maps on units of $\\mathbb{Z}_p$, but in general unequal elsewhere. Both the angular component map and the angular component map mod $p^n$ are homomorpshims from the multiplicative group of units of $\\mathbb{Z}_p$ to the multiplicative group of units of the residue rings, and play a key role in first-order model-theoretic formalizations of the $p$-adics (see, for example \\cite{10.2307/2274477}, or \\cite{Denef1986}).  \\<close>"], ["", "lemma(in cring) int_nat_pow_rep:\n\"[(k::int)]\\<cdot>\\<one> [^] (n::nat) = [(k^n)]\\<cdot>\\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [k] \\<cdot> \\<one> [^] n = [(k ^ n)] \\<cdot> \\<one>", "apply(induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [k] \\<cdot> \\<one> [^] 0 = [(k ^ 0)] \\<cdot> \\<one>\n 2. \\<And>n.\n       [k] \\<cdot> \\<one> [^] n = [(k ^ n)] \\<cdot> \\<one> \\<Longrightarrow>\n       [k] \\<cdot> \\<one> [^] Suc n = [(k ^ Suc n)] \\<cdot> \\<one>", "by (auto simp: add.int_pow_pow add_pow_rdistr_int mult.commute)"], ["", "lemma(in padic_integers) p_pow_rep0:\n  fixes n::nat\n  shows \"\\<p>[^]n = [(p^n)]\\<cdot>\\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n = [(p ^ n)] \\<cdot> \\<one>", "using R.int_nat_pow_rep"], ["proof (prove)\nusing this:\n  [?k] \\<cdot> \\<one> [^] ?n = [(?k ^ ?n)] \\<cdot> \\<one>\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n = [(p ^ n)] \\<cdot> \\<one>", "by auto"], ["", "lemma(in padic_integers) p_pow_nonzero:\n  shows \"(\\<p>[^](n::nat)) \\<in> carrier Zp\"\n        \"(\\<p>[^](n::nat)) \\<noteq> \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<in> carrier Zp &&&\n    [p] \\<cdot> \\<one> [^] n \\<noteq> \\<zero>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<noteq> \\<zero>", "using Zp_def nat_pow_nonzero domain_axioms nonzero_memE int_inc_closed ord_Zp_p \n        padic_integers.ord_of_nonzero(2) padic_integers_axioms Zp_int_inc_closed \n        nonzero_memE(2)"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  ?x \\<in> nonzero Zp \\<Longrightarrow> ?x [^] ?n \\<in> nonzero Zp\n  domain Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  [?n] \\<cdot>\\<^bsub>UP Zp\\<^esub> \\<one>\\<^bsub>UP Zp\\<^esub>\n  \\<in> carrier (UP Zp)\n  ord_Zp ([p] \\<cdot> \\<one>) = 1\n  \\<lbrakk>padic_integers ?p; ?x \\<in> carrier (padic_int ?p);\n   0 \\<le> padic_integers.ord_Zp ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> nonzero (padic_int ?p)\n  padic_integers p\n  [?n] \\<cdot> \\<one> \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<noteq> \\<zero>", "by (metis ord_of_nonzero(2) zero_le_one)"], ["", "lemma(in padic_integers) p_pow_nonzero':\n  shows \"(\\<p>[^](n::nat)) \\<in> nonzero Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<in> nonzero Zp", "using nonzero_def p_pow_nonzero"], ["proof (prove)\nusing this:\n  nonzero ?R = {a \\<in> carrier ?R. a \\<noteq> \\<zero>\\<^bsub>?R\\<^esub>}\n  [p] \\<cdot> \\<one> [^] ?n \\<in> carrier Zp\n  [p] \\<cdot> \\<one> [^] ?n \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<in> nonzero Zp", "by (simp add: nonzero_def)"], ["", "lemma(in padic_integers) p_pow_rep:\n  fixes n::nat\n  shows \"(\\<p>[^]n) k = (p^n) mod (p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] n) k = p ^ n mod p ^ k", "by (simp add: R.int_nat_pow_rep Zp_int_inc_res)"], ["", "lemma(in padic_integers) p_pow_car:\n  assumes \" (n::int)\\<ge> 0\"\n  shows \"(\\<p>[^]n) \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<in> carrier Zp", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<in> carrier Zp", "have \"(\\<p>[^]n) = (\\<p>[^](nat n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n = [p] \\<cdot> \\<one> [^] nat n", "by (metis assms int_nat_eq int_pow_int)"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] n = [p] \\<cdot> \\<one> [^] nat n\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<in> carrier Zp", "then"], ["proof (chain)\npicking this:\n  [p] \\<cdot> \\<one> [^] n = [p] \\<cdot> \\<one> [^] nat n", "show ?thesis"], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] n = [p] \\<cdot> \\<one> [^] nat n\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<in> carrier Zp", "by simp"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] n \\<in> carrier Zp\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) p_int_pow_nonzero:\n  assumes \"(n::int) \\<ge>0\"\n  shows \"(\\<p>[^]n) \\<in> nonzero Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] n \\<in> nonzero Zp", "by (metis assms not_nonzero_Zp ord_Zp_p_int_pow ord_of_nonzero(1) p_pow_car)"], ["", "lemma(in padic_integers) p_nonzero:\n  shows \"\\<p> \\<in> nonzero Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> \\<in> nonzero Zp", "using p_int_pow_nonzero[of 1]"], ["proof (prove)\nusing this:\n  0 \\<le> 1 \\<Longrightarrow> [p] \\<cdot> \\<one> [^] 1 \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> \\<in> nonzero Zp", "by (simp add: ord_Zp_p ord_of_nonzero(2))"], ["", "text\\<open>Every element of Zp is a unit times a power of p.\\<close>"], ["", "lemma(in padic_integers) residue_factor_unique:\n  assumes \"k>0\"\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m+k))\"\n  shows \"u = (THE u. u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m+k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "obtain P where \n    P_def: \"P = (\\<lambda> u.  u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m+k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        P =\n        (\\<lambda>u.\n            u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n            u * p ^ m = x (m + k)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  P =\n  (\\<lambda>u.\n      u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))\n\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "have 0: \"P u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P u", "using P_def assms(3)"], ["proof (prove)\nusing this:\n  P =\n  (\\<lambda>u.\n      u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))\n  u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k)\n\ngoal (1 subgoal):\n 1. P u", "by blast"], ["proof (state)\nthis:\n  P u\n\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "have 1: \"\\<And> v. P v \\<Longrightarrow> v = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v. P v \\<Longrightarrow> v = u", "by (metis P_def assms(3) mult_cancel_right\n        not_prime_0 power_not_zero prime)"], ["proof (state)\nthis:\n  P ?v \\<Longrightarrow> ?v = u\n\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "have \"u =  (THE u. P u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = (THE u. P u)", "by (metis 0 1 the_equality)"], ["proof (state)\nthis:\n  u = (THE u. P u)\n\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "then"], ["proof (chain)\npicking this:\n  u = (THE u. P u)", "show ?thesis"], ["proof (prove)\nusing this:\n  u = (THE u. P u)\n\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "using P_def"], ["proof (prove)\nusing this:\n  u = (THE u. P u)\n  P =\n  (\\<lambda>u.\n      u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))\n\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "by blast"], ["proof (state)\nthis:\n  u =\n  (THE u.\n      u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) residue_factor_exists:\n  assumes \"m = nat (ord_Zp x)\"\n  assumes \"k > 0\"\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  obtains u where \"u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m+k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have X0: \"(x (m+k)) \\<in> carrier (Zp_res_ring (m+k)) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (m + k) \\<in> carrier (residue_ring (p ^ (m + k)))", "using Zp_def assms(3) padic_set_res_closed residues_closed"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  x \\<in> carrier Zp\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  ?a \\<in> carrier Zp \\<Longrightarrow>\n  ?a ?k \\<in> carrier (residue_ring (p ^ ?k))\n\ngoal (1 subgoal):\n 1. x (m + k) \\<in> carrier (residue_ring (p ^ (m + k)))", "by blast"], ["proof (state)\nthis:\n  x (m + k) \\<in> carrier (residue_ring (p ^ (m + k)))\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x (m + k) \\<in> carrier (residue_ring (p ^ (m + k)))", "have X1: \"(x (m+k)) \\<ge> 0\""], ["proof (prove)\nusing this:\n  x (m + k) \\<in> carrier (residue_ring (p ^ (m + k)))\n\ngoal (1 subgoal):\n 1. 0 \\<le> x (m + k)", "using p_residues  assms(2) residues.res_carrier_eq"], ["proof (prove)\nusing this:\n  x (m + k) \\<in> carrier (residue_ring (p ^ (m + k)))\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  0 < k\n  residues ?m \\<Longrightarrow> carrier (residue_ring ?m) = {0..?m - 1}\n\ngoal (1 subgoal):\n 1. 0 \\<le> x (m + k)", "by simp"], ["proof (state)\nthis:\n  0 \\<le> x (m + k)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 \\<le> x (m + k)", "have X2: \"(x (m+k)) > 0\""], ["proof (prove)\nusing this:\n  0 \\<le> x (m + k)\n\ngoal (1 subgoal):\n 1. 0 < x (m + k)", "using assms(1) assms(2) assms(3) assms(4) above_ord_nonzero"], ["proof (prove)\nusing this:\n  0 \\<le> x (m + k)\n  m = nat (ord_Zp x)\n  0 < k\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>;\n   ord_Zp ?x < int ?n\\<rbrakk>\n  \\<Longrightarrow> ?x ?n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < x (m + k)", "by (metis add.right_neutral add_cancel_right_right \n        add_gr_0 int_nat_eq less_add_same_cancel1 \n        less_imp_of_nat_less not_gr_zero of_nat_0_less_iff of_nat_add ord_pos)"], ["proof (state)\nthis:\n  0 < x (m + k)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have 0: \"x m = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x m = 0", "using  Zp_def assms(1) assms(3) zero_below_val  ord_nat zero_below_ord[of x m] \n           assms(4) ord_Zp_def"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  m = nat (ord_Zp x)\n  x \\<in> carrier Zp\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = 0\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> int (nat (ord_Zp ?x)) = ord_Zp ?x\n  \\<lbrakk>x \\<in> carrier Zp; int m \\<le> ord_Zp x\\<rbrakk>\n  \\<Longrightarrow> x m = 0\n  x \\<noteq> \\<zero>\n  ord_Zp = padic_val p\n\ngoal (1 subgoal):\n 1. x m = 0", "by auto"], ["proof (state)\nthis:\n  x m = 0\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x m = 0", "have 1: \"x (m +k) mod p^m = 0\""], ["proof (prove)\nusing this:\n  x m = 0\n\ngoal (1 subgoal):\n 1. x (m + k) mod p ^ m = 0", "using assms(2) assms(3) p_residue_padic_int residue_def"], ["proof (prove)\nusing this:\n  x m = 0\n  0 < k\n  x \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?k \\<le> ?m\\<rbrakk>\n  \\<Longrightarrow> p_residue ?k (?x ?m) = ?x ?k\n  residue ?n ?m = ?m mod ?n\n\ngoal (1 subgoal):\n 1. x (m + k) mod p ^ m = 0", "by (simp add: p_residue_alt_def)"], ["proof (state)\nthis:\n  x (m + k) mod p ^ m = 0\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  x (m + k) mod p ^ m = 0", "have \"\\<exists> u.  u*(p^m) = (x (m+k))\""], ["proof (prove)\nusing this:\n  x (m + k) mod p ^ m = 0\n\ngoal (1 subgoal):\n 1. \\<exists>u. u * p ^ m = x (m + k)", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. u * p ^ m = x (m + k)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>u. u * p ^ m = x (m + k)", "obtain u where U0: \" u*(p^m) = (x (m+k))\""], ["proof (prove)\nusing this:\n  \\<exists>u. u * p ^ m = x (m + k)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u * p ^ m = x (m + k) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u * p ^ m = x (m + k)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have I: \"(p^m) > 0  \""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p ^ m", "using prime"], ["proof (prove)\nusing this:\n  prime p\n\ngoal (1 subgoal):\n 1. 0 < p ^ m", "by (simp add: prime_gt_0_int)"], ["proof (state)\nthis:\n  0 < p ^ m\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  0 < p ^ m", "have U1: \"(u* p^m) = (x (m+k))\""], ["proof (prove)\nusing this:\n  0 < p ^ m\n\ngoal (1 subgoal):\n 1. u * p ^ m = x (m + k)", "by (simp add: U0)"], ["proof (state)\nthis:\n  u * p ^ m = x (m + k)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have U2: \"u \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> u", "using I U1 X1"], ["proof (prove)\nusing this:\n  0 < p ^ m\n  u * p ^ m = x (m + k)\n  0 \\<le> x (m + k)\n\ngoal (1 subgoal):\n 1. 0 \\<le> u", "by (metis U0 less_imp_triv mult.right_neutral mult_less_cancel_left\n        of_nat_zero_less_power_iff power.simps(1) times_int_code(1))"], ["proof (state)\nthis:\n  0 \\<le> u\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have X3: \"(x (m+k)) < p^(m+k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (m + k) < p ^ (m + k)", "using assms(3) X0  p_residues assms(2) residues.res_carrier_eq"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x (m + k) \\<in> carrier (residue_ring (p ^ (m + k)))\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  0 < k\n  residues ?m \\<Longrightarrow> carrier (residue_ring ?m) = {0..?m - 1}\n\ngoal (1 subgoal):\n 1. x (m + k) < p ^ (m + k)", "by auto"], ["proof (state)\nthis:\n  x (m + k) < p ^ (m + k)\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have U3: \"u < p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < p ^ k", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> u < p ^ k \\<Longrightarrow> False", "assume \"\\<not> u < (p ^ k)\""], ["proof (state)\nthis:\n  \\<not> u < p ^ k\n\ngoal (1 subgoal):\n 1. \\<not> u < p ^ k \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> u < p ^ k", "have \"(p^k) \\<le> u\""], ["proof (prove)\nusing this:\n  \\<not> u < p ^ k\n\ngoal (1 subgoal):\n 1. p ^ k \\<le> u", "by simp"], ["proof (state)\nthis:\n  p ^ k \\<le> u\n\ngoal (1 subgoal):\n 1. \\<not> u < p ^ k \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p ^ k \\<le> u", "have \" (p^k * p^m) \\<le> u*(p^m)\""], ["proof (prove)\nusing this:\n  p ^ k \\<le> u\n\ngoal (1 subgoal):\n 1. p ^ k * p ^ m \\<le> u * p ^ m", "using I"], ["proof (prove)\nusing this:\n  p ^ k \\<le> u\n  0 < p ^ m\n\ngoal (1 subgoal):\n 1. p ^ k * p ^ m \\<le> u * p ^ m", "by simp"], ["proof (state)\nthis:\n  p ^ k * p ^ m \\<le> u * p ^ m\n\ngoal (1 subgoal):\n 1. \\<not> u < p ^ k \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p ^ k * p ^ m \\<le> u * p ^ m", "have \"p^(m + k) \\<le> (x (m+k))\""], ["proof (prove)\nusing this:\n  p ^ k * p ^ m \\<le> u * p ^ m\n\ngoal (1 subgoal):\n 1. p ^ (m + k) \\<le> x (m + k)", "by (simp add: U0 add.commute semiring_normalization_rules(26))"], ["proof (state)\nthis:\n  p ^ (m + k) \\<le> x (m + k)\n\ngoal (1 subgoal):\n 1. \\<not> u < p ^ k \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p ^ (m + k) \\<le> x (m + k)", "show False"], ["proof (prove)\nusing this:\n  p ^ (m + k) \\<le> x (m + k)\n\ngoal (1 subgoal):\n 1. False", "using X3"], ["proof (prove)\nusing this:\n  p ^ (m + k) \\<le> x (m + k)\n  x (m + k) < p ^ (m + k)\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u < p ^ k\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  u < p ^ k", "have \"u \\<in> carrier (Zp_res_ring k)\""], ["proof (prove)\nusing this:\n  u < p ^ k\n\ngoal (1 subgoal):\n 1. u \\<in> carrier (residue_ring (p ^ k))", "using assms(2)  p_residues residues.res_carrier_eq U3 U2"], ["proof (prove)\nusing this:\n  u < p ^ k\n  0 < k\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  residues ?m \\<Longrightarrow> carrier (residue_ring ?m) = {0..?m - 1}\n  u < p ^ k\n  0 \\<le> u\n\ngoal (1 subgoal):\n 1. u \\<in> carrier (residue_ring (p ^ k))", "by auto"], ["proof (state)\nthis:\n  u \\<in> carrier (residue_ring (p ^ k))\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  u \\<in> carrier (residue_ring (p ^ k))", "show ?thesis"], ["proof (prove)\nusing this:\n  u \\<in> carrier (residue_ring (p ^ k))\n\ngoal (1 subgoal):\n 1. thesis", "using U1  that"], ["proof (prove)\nusing this:\n  u \\<in> carrier (residue_ring (p ^ k))\n  u * p ^ m = x (m + k)\n  ?u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n  ?u * p ^ m = x (m + k) \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "definition(in padic_integers) normalizer where \n\"normalizer m x = (\\<lambda>k. if (k=0) then 0 else (THE u. u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m + k)) ) )\""], ["", "definition(in padic_integers) ac_Zp where \n\"ac_Zp x = normalizer (nat (ord_Zp x)) x\""], ["", "lemma(in padic_integers) ac_Zp_equation:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  assumes \"k > 0\"\n  assumes \"m = nat (ord_Zp x)\"\n  shows \"(ac_Zp x k) \\<in> carrier (Zp_res_ring k) \\<and> (ac_Zp x k)*(p^m) = (x (m+k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "have K0: \"k >0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k", "using assms nat_neq_iff"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  0 < k\n  m = nat (ord_Zp x)\n  (?m \\<noteq> ?n) = (?m < ?n \\<or> ?n < ?m)\n\ngoal (1 subgoal):\n 1. 0 < k", "by blast"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "have KM: \"m+ k > m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m < m + k", "using assms(3) assms(4)"], ["proof (prove)\nusing this:\n  0 < k\n  m = nat (ord_Zp x)\n\ngoal (1 subgoal):\n 1. m < m + k", "by linarith"], ["proof (state)\nthis:\n  m < m + k\n\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "obtain u where U0: \"u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m+k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(1) assms(2) assms(3) assms(4) residue_factor_exists"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  0 < k\n  m = nat (ord_Zp x)\n  \\<lbrakk>?m = nat (ord_Zp ?x); 0 < ?k; ?x \\<in> carrier Zp;\n   ?x \\<noteq> \\<zero>;\n   \\<And>u.\n      u \\<in> carrier (residue_ring (p ^ ?k)) \\<and>\n      u * p ^ ?m = ?x (?m + ?k) \\<Longrightarrow>\n      ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n        u * p ^ m = x (m + k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k)\n\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "have RHS: \"ac_Zp x k = (THE u. u \\<in> carrier (Zp_res_ring k) \\<and> u*(p^m) = (x (m+k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x k =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ac_Zp x k =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "have K: \"k \\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "by (simp add: K0)"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ac_Zp x k =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "have \"ac_Zp x k = normalizer (nat (ord_Zp x)) x k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x k = normalizer (nat (ord_Zp x)) x k", "using ac_Zp_def"], ["proof (prove)\nusing this:\n  ac_Zp ?x = normalizer (nat (ord_Zp ?x)) ?x\n\ngoal (1 subgoal):\n 1. ac_Zp x k = normalizer (nat (ord_Zp x)) x k", "by presburger"], ["proof (state)\nthis:\n  ac_Zp x k = normalizer (nat (ord_Zp x)) x k\n\ngoal (1 subgoal):\n 1. ac_Zp x k =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "then"], ["proof (chain)\npicking this:\n  ac_Zp x k = normalizer (nat (ord_Zp x)) x k", "have \"ac_Zp x k = normalizer m x k\""], ["proof (prove)\nusing this:\n  ac_Zp x k = normalizer (nat (ord_Zp x)) x k\n\ngoal (1 subgoal):\n 1. ac_Zp x k = normalizer m x k", "using assms"], ["proof (prove)\nusing this:\n  ac_Zp x k = normalizer (nat (ord_Zp x)) x k\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  0 < k\n  m = nat (ord_Zp x)\n\ngoal (1 subgoal):\n 1. ac_Zp x k = normalizer m x k", "by blast"], ["proof (state)\nthis:\n  ac_Zp x k = normalizer m x k\n\ngoal (1 subgoal):\n 1. ac_Zp x k =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "then"], ["proof (chain)\npicking this:\n  ac_Zp x k = normalizer m x k", "show \"ac_Zp x k = (THE u. u \\<in> carrier (Zp_res_ring k) \\<and> (u* p^m) = (x (m + k)) ) \""], ["proof (prove)\nusing this:\n  ac_Zp x k = normalizer m x k\n\ngoal (1 subgoal):\n 1. ac_Zp x k =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "using K"], ["proof (prove)\nusing this:\n  ac_Zp x k = normalizer m x k\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ac_Zp x k =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "unfolding normalizer_def p_residue_def"], ["proof (prove)\nusing this:\n  ac_Zp x k =\n  (if k = 0 then 0\n   else THE u.\n           u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n           u * p ^ m = x (m + k))\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ac_Zp x k =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "by simp"], ["proof (state)\nthis:\n  ac_Zp x k =\n  (THE u.\n      u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ac_Zp x k =\n  (THE u.\n      u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))\n\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "have LHS:\"u = (THE u. u \\<in> carrier (Zp_res_ring k) \\<and> u*(p^m) = (x (m+k)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "using assms U0 K0 assms(1) residue_factor_unique[of k x u m]"], ["proof (prove)\nusing this:\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  0 < k\n  m = nat (ord_Zp x)\n  u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k)\n  0 < k\n  x \\<in> carrier Zp\n  \\<lbrakk>0 < k; x \\<in> carrier Zp;\n   u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n   u * p ^ m = x (m + k)\\<rbrakk>\n  \\<Longrightarrow> u =\n                    (THE u.\n                        u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n                        u * p ^ m = x (m + k))\n\ngoal (1 subgoal):\n 1. u =\n    (THE u.\n        u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "by metis"], ["proof (state)\nthis:\n  u =\n  (THE u.\n      u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))\n\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "then"], ["proof (chain)\npicking this:\n  u =\n  (THE u.\n      u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))", "have \"u = ac_Zp x k\""], ["proof (prove)\nusing this:\n  u =\n  (THE u.\n      u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k))\n\ngoal (1 subgoal):\n 1. u = ac_Zp x k", "by (simp add: RHS)"], ["proof (state)\nthis:\n  u = ac_Zp x k\n\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "then"], ["proof (chain)\npicking this:\n  u = ac_Zp x k", "show ?thesis"], ["proof (prove)\nusing this:\n  u = ac_Zp x k\n\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "using U0"], ["proof (prove)\nusing this:\n  u = ac_Zp x k\n  u \\<in> carrier (residue_ring (p ^ k)) \\<and> u * p ^ m = x (m + k)\n\ngoal (1 subgoal):\n 1. ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n    ac_Zp x k * p ^ m = x (m + k)", "by auto"], ["proof (state)\nthis:\n  ac_Zp x k \\<in> carrier (residue_ring (p ^ k)) \\<and>\n  ac_Zp x k * p ^ m = x (m + k)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ac_Zp_res:\n  assumes \"m >k\"\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"p_residue k (ac_Zp x m) = (ac_Zp x k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p_residue k (ac_Zp x m) = ac_Zp x k", "proof(cases \"k =0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k\n 2. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k\n 2. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "then"], ["proof (chain)\npicking this:\n  k = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. p_residue k (ac_Zp x m) = ac_Zp x k", "unfolding ac_Zp_def normalizer_def"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. p_residue k\n     (if m = 0 then 0\n      else THE u.\n              u \\<in> carrier (residue_ring (p ^ m)) \\<and>\n              u * p ^ nat (ord_Zp x) = x (nat (ord_Zp x) + m)) =\n    (if k = 0 then 0\n     else THE u.\n             u \\<in> carrier (residue_ring (p ^ k)) \\<and>\n             u * p ^ nat (ord_Zp x) = x (nat (ord_Zp x) + k))", "by (meson p_res_ring_0' p_residue_range')"], ["proof (state)\nthis:\n  p_residue k (ac_Zp x m) = ac_Zp x k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "obtain n where n_def: \"n = nat (ord_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. n = nat (ord_Zp x) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n = nat (ord_Zp x)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "have K0: \"k >0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k", "using False"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < k", "by simp"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "obtain uk where Uk0: \"uk = (ac_Zp x k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>uk. uk = ac_Zp x k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  uk = ac_Zp x k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "obtain um where Um0: \"um = (ac_Zp x m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>um. um = ac_Zp x m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  um = ac_Zp x m\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "have Uk1: \"uk \\<in> carrier (Zp_res_ring k) \\<and> uk*(p^n) = (x (n+k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uk \\<in> carrier (residue_ring (p ^ k)) \\<and> uk * p ^ n = x (n + k)", "using K0 Uk0 ac_Zp_equation assms(2) assms(3) n_def"], ["proof (prove)\nusing this:\n  0 < k\n  uk = ac_Zp x k\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>; 0 < ?k;\n   ?m = nat (ord_Zp ?x)\\<rbrakk>\n  \\<Longrightarrow> ac_Zp ?x ?k \\<in> carrier (residue_ring (p ^ ?k)) \\<and>\n                    ac_Zp ?x ?k * p ^ ?m = ?x (?m + ?k)\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  n = nat (ord_Zp x)\n\ngoal (1 subgoal):\n 1. uk \\<in> carrier (residue_ring (p ^ k)) \\<and> uk * p ^ n = x (n + k)", "by metis"], ["proof (state)\nthis:\n  uk \\<in> carrier (residue_ring (p ^ k)) \\<and> uk * p ^ n = x (n + k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "have Um1: \"um \\<in> carrier (Zp_res_ring m) \\<and> um*(p^n) = (x (n+m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. um \\<in> carrier (residue_ring (p ^ m)) \\<and> um * p ^ n = x (n + m)", "using Uk1 Um0 ac_Zp_equation assms(1) assms(3) n_def assms(2)"], ["proof (prove)\nusing this:\n  uk \\<in> carrier (residue_ring (p ^ k)) \\<and> uk * p ^ n = x (n + k)\n  um = ac_Zp x m\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>; 0 < ?k;\n   ?m = nat (ord_Zp ?x)\\<rbrakk>\n  \\<Longrightarrow> ac_Zp ?x ?k \\<in> carrier (residue_ring (p ^ ?k)) \\<and>\n                    ac_Zp ?x ?k * p ^ ?m = ?x (?m + ?k)\n  k < m\n  x \\<noteq> \\<zero>\n  n = nat (ord_Zp x)\n  x \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. um \\<in> carrier (residue_ring (p ^ m)) \\<and> um * p ^ n = x (n + m)", "by (metis neq0_conv not_less0)"], ["proof (state)\nthis:\n  um \\<in> carrier (residue_ring (p ^ m)) \\<and> um * p ^ n = x (n + m)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "have \"um mod (p^k) = uk\""], ["proof (prove)\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "have \"(x (n+m)) mod (p^(n + k)) = (x (n+k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (n + m) mod p ^ (n + k) = x (n + k)", "using assms(1) assms(3) p_residue_padic_int p_residue_def n_def"], ["proof (prove)\nusing this:\n  k < m\n  x \\<noteq> \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?k \\<le> ?m\\<rbrakk>\n  \\<Longrightarrow> p_residue ?k (?x ?m) = ?x ?k\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n  n = nat (ord_Zp x)\n\ngoal (1 subgoal):\n 1. x (n + m) mod p ^ (n + k) = x (n + k)", "by (simp add: assms(2) p_residue_alt_def)"], ["proof (state)\nthis:\n  x (n + m) mod p ^ (n + k) = x (n + k)\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "then"], ["proof (chain)\npicking this:\n  x (n + m) mod p ^ (n + k) = x (n + k)", "have \"(p^(n + k)) dvd (x (n+m)) - (x (n+k))\""], ["proof (prove)\nusing this:\n  x (n + m) mod p ^ (n + k) = x (n + k)\n\ngoal (1 subgoal):\n 1. p ^ (n + k) dvd x (n + m) - x (n + k)", "by (metis dvd_minus_mod)"], ["proof (state)\nthis:\n  p ^ (n + k) dvd x (n + m) - x (n + k)\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "then"], ["proof (chain)\npicking this:\n  p ^ (n + k) dvd x (n + m) - x (n + k)", "obtain d where \"(x (n+m)) - (x (n+k)) = (p^(n+k))*d\""], ["proof (prove)\nusing this:\n  p ^ (n + k) dvd x (n + m) - x (n + k)\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        x (n + m) - x (n + k) = p ^ (n + k) * d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using dvd_def"], ["proof (prove)\nusing this:\n  p ^ (n + k) dvd x (n + m) - x (n + k)\n  (?b dvd ?a) = (\\<exists>k. ?a = ?b * k)\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        x (n + m) - x (n + k) = p ^ (n + k) * d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x (n + m) - x (n + k) = p ^ (n + k) * d\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "then"], ["proof (chain)\npicking this:\n  x (n + m) - x (n + k) = p ^ (n + k) * d", "have \"((um*(p^n)) - (uk*(p^n))) =  p^(n+k)*d\""], ["proof (prove)\nusing this:\n  x (n + m) - x (n + k) = p ^ (n + k) * d\n\ngoal (1 subgoal):\n 1. um * p ^ n - uk * p ^ n = p ^ (n + k) * d", "using Uk1 Um1"], ["proof (prove)\nusing this:\n  x (n + m) - x (n + k) = p ^ (n + k) * d\n  uk \\<in> carrier (residue_ring (p ^ k)) \\<and> uk * p ^ n = x (n + k)\n  um \\<in> carrier (residue_ring (p ^ m)) \\<and> um * p ^ n = x (n + m)\n\ngoal (1 subgoal):\n 1. um * p ^ n - uk * p ^ n = p ^ (n + k) * d", "by auto"], ["proof (state)\nthis:\n  um * p ^ n - uk * p ^ n = p ^ (n + k) * d\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "then"], ["proof (chain)\npicking this:\n  um * p ^ n - uk * p ^ n = p ^ (n + k) * d", "have \"((um - uk)*(p^n)) =  p^(n+k)*d\""], ["proof (prove)\nusing this:\n  um * p ^ n - uk * p ^ n = p ^ (n + k) * d\n\ngoal (1 subgoal):\n 1. (um - uk) * p ^ n = p ^ (n + k) * d", "by (simp add: left_diff_distrib)"], ["proof (state)\nthis:\n  (um - uk) * p ^ n = p ^ (n + k) * d\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "then"], ["proof (chain)\npicking this:\n  (um - uk) * p ^ n = p ^ (n + k) * d", "have \"((um - uk)*(p^n)) =  ((p^k)*d)*(p^n)\""], ["proof (prove)\nusing this:\n  (um - uk) * p ^ n = p ^ (n + k) * d\n\ngoal (1 subgoal):\n 1. (um - uk) * p ^ n = p ^ k * d * p ^ n", "by (simp add: power_add)"], ["proof (state)\nthis:\n  (um - uk) * p ^ n = p ^ k * d * p ^ n\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "then"], ["proof (chain)\npicking this:\n  (um - uk) * p ^ n = p ^ k * d * p ^ n", "have \"(um - uk) =  ((p^k)*d)\""], ["proof (prove)\nusing this:\n  (um - uk) * p ^ n = p ^ k * d * p ^ n\n\ngoal (1 subgoal):\n 1. um - uk = p ^ k * d", "using prime"], ["proof (prove)\nusing this:\n  (um - uk) * p ^ n = p ^ k * d * p ^ n\n  prime p\n\ngoal (1 subgoal):\n 1. um - uk = p ^ k * d", "by auto"], ["proof (state)\nthis:\n  um - uk = p ^ k * d\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "then"], ["proof (chain)\npicking this:\n  um - uk = p ^ k * d", "have \"um mod p^k = uk mod p^k\""], ["proof (prove)\nusing this:\n  um - uk = p ^ k * d\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk mod p ^ k", "by (simp add: mod_eq_dvd_iff)"], ["proof (state)\nthis:\n  um mod p ^ k = uk mod p ^ k\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "then"], ["proof (chain)\npicking this:\n  um mod p ^ k = uk mod p ^ k", "show ?thesis"], ["proof (prove)\nusing this:\n  um mod p ^ k = uk mod p ^ k\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "using Uk1"], ["proof (prove)\nusing this:\n  um mod p ^ k = uk mod p ^ k\n  uk \\<in> carrier (residue_ring (p ^ k)) \\<and> uk * p ^ n = x (n + k)\n\ngoal (1 subgoal):\n 1. um mod p ^ k = uk", "by (metis mod_pos_pos_trivial p_residue_ring_car_memE(1) p_residue_ring_car_memE(2))"], ["proof (state)\nthis:\n  um mod p ^ k = uk\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  um mod p ^ k = uk\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> p_residue k (ac_Zp x m) = ac_Zp x k", "then"], ["proof (chain)\npicking this:\n  um mod p ^ k = uk", "show ?thesis"], ["proof (prove)\nusing this:\n  um mod p ^ k = uk\n\ngoal (1 subgoal):\n 1. p_residue k (ac_Zp x m) = ac_Zp x k", "by (simp add: Uk0 Um0 p_residue_alt_def)"], ["proof (state)\nthis:\n  p_residue k (ac_Zp x m) = ac_Zp x k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ac_Zp_in_Zp:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"ac_Zp x \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x \\<in> carrier Zp", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ac_Zp x \\<in> carrier Zp", "have \"ac_Zp x \\<in> padic_set p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x \\<in> padic_set p", "proof(rule padic_set_memI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m. ac_Zp x m \\<in> carrier (residue_ring (p ^ m))\n 2. \\<And>m n.\n       m < n \\<Longrightarrow> residue (p ^ m) (ac_Zp x n) = ac_Zp x m", "show \"\\<And>m. ac_Zp x m \\<in> carrier (residue_ring (p ^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m. ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m. ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "show \"ac_Zp x m \\<in> carrier (residue_ring (p ^ m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "proof(cases \"m = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> ac_Zp x m \\<in> carrier (residue_ring (p ^ m))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> ac_Zp x m \\<in> carrier (residue_ring (p ^ m))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "then"], ["proof (chain)\npicking this:\n  m = 0", "have \"ac_Zp x m = 0\""], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. ac_Zp x m = 0", "unfolding ac_Zp_def normalizer_def"], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. (if m = 0 then 0\n     else THE u.\n             u \\<in> carrier (residue_ring (p ^ m)) \\<and>\n             u * p ^ nat (ord_Zp x) = x (nat (ord_Zp x) + m)) =\n    0", "by auto"], ["proof (state)\nthis:\n  ac_Zp x m = 0\n\ngoal (2 subgoals):\n 1. m = 0 \\<Longrightarrow> ac_Zp x m \\<in> carrier (residue_ring (p ^ m))\n 2. m \\<noteq> 0 \\<Longrightarrow>\n    ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "then"], ["proof (chain)\npicking this:\n  ac_Zp x m = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  ac_Zp x m = 0\n\ngoal (1 subgoal):\n 1. ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "by (simp add: True residue_ring_def)"], ["proof (state)\nthis:\n  ac_Zp x m \\<in> carrier (residue_ring (p ^ m))\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "then"], ["proof (chain)\npicking this:\n  m \\<noteq> 0", "have \"m>0\""], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < m", "by blast"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0 \\<Longrightarrow>\n    ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "then"], ["proof (chain)\npicking this:\n  0 < m", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "using ac_Zp_equation"], ["proof (prove)\nusing this:\n  0 < m\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>; 0 < ?k;\n   ?m = nat (ord_Zp ?x)\\<rbrakk>\n  \\<Longrightarrow> ac_Zp ?x ?k \\<in> carrier (residue_ring (p ^ ?k)) \\<and>\n                    ac_Zp ?x ?k * p ^ ?m = ?x (?m + ?k)\n\ngoal (1 subgoal):\n 1. ac_Zp x m \\<in> carrier (residue_ring (p ^ m))", "by (metis assms(1) assms(2))"], ["proof (state)\nthis:\n  ac_Zp x m \\<in> carrier (residue_ring (p ^ m))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ac_Zp x m \\<in> carrier (residue_ring (p ^ m))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ac_Zp x ?m \\<in> carrier (residue_ring (p ^ ?m))\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow> residue (p ^ m) (ac_Zp x n) = ac_Zp x m", "show \"\\<And>m n. m < n \\<Longrightarrow> residue (p ^ m) (ac_Zp x n) = ac_Zp x m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow> residue (p ^ m) (ac_Zp x n) = ac_Zp x m", "using ac_Zp_res"], ["proof (prove)\nusing this:\n  \\<lbrakk>?k < ?m; ?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> p_residue ?k (ac_Zp ?x ?m) = ac_Zp ?x ?k\n\ngoal (1 subgoal):\n 1. \\<And>m n.\n       m < n \\<Longrightarrow> residue (p ^ m) (ac_Zp x n) = ac_Zp x m", "by (simp add: assms(1) assms(2) p_residue_def)"], ["proof (state)\nthis:\n  ?m < ?n \\<Longrightarrow> residue (p ^ ?m) (ac_Zp x ?n) = ac_Zp x ?m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ac_Zp x \\<in> padic_set p\n\ngoal (1 subgoal):\n 1. ac_Zp x \\<in> carrier Zp", "then"], ["proof (chain)\npicking this:\n  ac_Zp x \\<in> padic_set p", "show ?thesis"], ["proof (prove)\nusing this:\n  ac_Zp x \\<in> padic_set p\n\ngoal (1 subgoal):\n 1. ac_Zp x \\<in> carrier Zp", "by (simp add: Zp_defs(3))"], ["proof (state)\nthis:\n  ac_Zp x \\<in> carrier Zp\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ac_Zp_is_Unit:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"ac_Zp x \\<in> Units Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x \\<in> Units Zp", "proof(rule val_Zp_0_imp_unit)"], ["proof (state)\ngoal (2 subgoals):\n 1. val_Zp (ac_Zp x) = 0\n 2. ac_Zp x \\<in> carrier Zp", "show \"ac_Zp x \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x \\<in> carrier Zp", "by (simp add: ac_Zp_in_Zp assms(1) assms(2))"], ["proof (state)\nthis:\n  ac_Zp x \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. val_Zp (ac_Zp x) = 0", "obtain m where M: \"m = nat (ord_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m. m = nat (ord_Zp x) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  m = nat (ord_Zp x)\n\ngoal (1 subgoal):\n 1. val_Zp (ac_Zp x) = 0", "have AC1: \"(ac_Zp x 1)*(p^m) = (x (m+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x 1 * p ^ m = x (m + 1)", "using M ac_Zp_equation assms(1) assms(2)"], ["proof (prove)\nusing this:\n  m = nat (ord_Zp x)\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>; 0 < ?k;\n   ?m = nat (ord_Zp ?x)\\<rbrakk>\n  \\<Longrightarrow> ac_Zp ?x ?k \\<in> carrier (residue_ring (p ^ ?k)) \\<and>\n                    ac_Zp ?x ?k * p ^ ?m = ?x (?m + ?k)\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. ac_Zp x 1 * p ^ m = x (m + 1)", "by (metis One_nat_def lessI)"], ["proof (state)\nthis:\n  ac_Zp x 1 * p ^ m = x (m + 1)\n\ngoal (1 subgoal):\n 1. val_Zp (ac_Zp x) = 0", "have \"(x (m+1)) \\<noteq>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (m + 1) \\<noteq> 0", "using M assms"], ["proof (prove)\nusing this:\n  m = nat (ord_Zp x)\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. x (m + 1) \\<noteq> 0", "by (metis Suc_eq_plus1 Suc_le_eq nat_int nat_mono nat_neq_iff ord_Zp_geq)"], ["proof (state)\nthis:\n  x (m + 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. val_Zp (ac_Zp x) = 0", "then"], ["proof (chain)\npicking this:\n  x (m + 1) \\<noteq> 0", "have \"(ac_Zp x 1) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  x (m + 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ac_Zp x 1 \\<noteq> 0", "using AC1"], ["proof (prove)\nusing this:\n  x (m + 1) \\<noteq> 0\n  ac_Zp x 1 * p ^ m = x (m + 1)\n\ngoal (1 subgoal):\n 1. ac_Zp x 1 \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  ac_Zp x 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. val_Zp (ac_Zp x) = 0", "then"], ["proof (chain)\npicking this:\n  ac_Zp x 1 \\<noteq> 0", "show \"val_Zp (ac_Zp x) = 0\""], ["proof (prove)\nusing this:\n  ac_Zp x 1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. val_Zp (ac_Zp x) = 0", "using \\<open>ac_Zp x \\<in> carrier Zp\\<close> val_Zp_0_criterion"], ["proof (prove)\nusing this:\n  ac_Zp x 1 \\<noteq> 0\n  ac_Zp x \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?x 1 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> val_Zp ?x = 0\n\ngoal (1 subgoal):\n 1. val_Zp (ac_Zp x) = 0", "by blast"], ["proof (state)\nthis:\n  val_Zp (ac_Zp x) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The typical defining equation for the angular component map.\\<close>"], ["", "lemma(in padic_integers) ac_Zp_factors_x:\n  assumes \"x \\<in> carrier Zp\"\n  assumes \"x \\<noteq>\\<zero>\"\n  shows \"x = (\\<p>[^](nat (ord_Zp x))) \\<otimes> (ac_Zp x)\" \"x = (\\<p>[^](ord_Zp x)) \\<otimes> (ac_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x &&&\n    x = [p] \\<cdot> \\<one> [^] ord_Zp x \\<otimes> ac_Zp x", "proof-"], ["proof (state)\ngoal (2 subgoals):\n 1. x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x\n 2. x = [p] \\<cdot> \\<one> [^] ord_Zp x \\<otimes> ac_Zp x", "show \"x = (\\<p>[^](nat (ord_Zp x)))\\<otimes> (ac_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       x xa = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) xa", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       x xa = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) xa", "show \"x k = ((\\<p>[^](nat (ord_Zp x))) \\<otimes> (ac_Zp x)) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "proof(cases \"k=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "then"], ["proof (chain)\npicking this:\n  k = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "using Zp_def Zp_defs(3) Zp_residue_mult_zero(1) ac_Zp_in_Zp\n          assms(1) assms(2) mult_comm padic_set_zero_res prime"], ["proof (prove)\nusing this:\n  k = 0\n  Zp \\<equiv> padic_int p\n  carrier Zp = padic_set p\n  ?a ?k = 0 \\<Longrightarrow> (?a \\<otimes> ?b) ?k = 0\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ac_Zp ?x \\<in> carrier Zp\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  ?a \\<otimes> ?b = ?b \\<otimes> ?a\n  \\<lbrakk>prime ?p; ?f \\<in> padic_set ?p\\<rbrakk>\n  \\<Longrightarrow> ?f 0 = 0\n  prime p\n\ngoal (1 subgoal):\n 1. x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "by auto"], ["proof (state)\nthis:\n  x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "proof(cases \"k \\<le> ord_Zp x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n 2. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "case True"], ["proof (state)\nthis:\n  int k \\<le> ord_Zp x\n\ngoal (2 subgoals):\n 1. int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n 2. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have 0: \"x k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x k = 0", "using True assms(1) zero_below_ord"], ["proof (prove)\nusing this:\n  int k \\<le> ord_Zp x\n  x \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; int ?n \\<le> ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = 0\n\ngoal (1 subgoal):\n 1. x k = 0", "by blast"], ["proof (state)\nthis:\n  x k = 0\n\ngoal (2 subgoals):\n 1. int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n 2. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have 1: \"(\\<p>[^](nat (ord_Zp x))) k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] nat (ord_Zp x)) k = 0", "using True assms(1) assms(2) ord_Zp_p_pow ord_nat p_pow_nonzero(1) zero_below_ord"], ["proof (prove)\nusing this:\n  int k \\<le> ord_Zp x\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  ord_Zp ([p] \\<cdot> \\<one> [^] ?n) = int ?n\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> int (nat (ord_Zp ?x)) = ord_Zp ?x\n  [p] \\<cdot> \\<one> [^] ?n \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; int ?n \\<le> ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = 0\n\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] nat (ord_Zp x)) k = 0", "by presburger"], ["proof (state)\nthis:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x)) k = 0\n\ngoal (2 subgoals):\n 1. int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n 2. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have \"((\\<p>[^](nat (ord_Zp x))) \\<otimes> (ac_Zp x)) k = (\\<p>[^](nat (ord_Zp x))) k * (ac_Zp x) k mod p^k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k =\n    ([p] \\<cdot> \\<one> [^] nat (ord_Zp x)) k * ac_Zp x k mod p ^ k", "using Zp_def padic_mult_res residue_ring_def"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  padic_mult ?p ?f ?g ?n =\n  ?f ?n \\<otimes>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k =\n    ([p] \\<cdot> \\<one> [^] nat (ord_Zp x)) k * ac_Zp x k mod p ^ k", "using residue_of_prod'"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  padic_mult ?p ?f ?g ?n =\n  ?f ?n \\<otimes>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub> ?g ?n\n  residue_ring ?m =\n  \\<lparr>carrier = {0..?m - 1}, monoid.mult = \\<lambda>x y. x * y mod ?m,\n     one = 1, zero = 0, add = \\<lambda>x y. (x + y) mod ?m\\<rparr>\n  (?a \\<otimes> ?b) ?k = ?a ?k * ?b ?k mod p ^ ?k\n\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k =\n    ([p] \\<cdot> \\<one> [^] nat (ord_Zp x)) k * ac_Zp x k mod p ^ k", "by blast"], ["proof (state)\nthis:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k =\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x)) k * ac_Zp x k mod p ^ k\n\ngoal (2 subgoals):\n 1. int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n 2. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "then"], ["proof (chain)\npicking this:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k =\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x)) k * ac_Zp x k mod p ^ k", "have \"((\\<p>[^](nat (ord_Zp x))) \\<otimes> (ac_Zp x)) k = 0\""], ["proof (prove)\nusing this:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k =\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x)) k * ac_Zp x k mod p ^ k\n\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k = 0", "by (simp add: \"1\")"], ["proof (state)\nthis:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k = 0\n\ngoal (2 subgoals):\n 1. int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n 2. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "then"], ["proof (chain)\npicking this:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k = 0\n\ngoal (1 subgoal):\n 1. x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "using 0"], ["proof (prove)\nusing this:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k = 0\n  x k = 0\n\ngoal (1 subgoal):\n 1. x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "by metis"], ["proof (state)\nthis:\n  x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "case False"], ["proof (state)\nthis:\n  \\<not> int k \\<le> ord_Zp x\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "obtain n where N: \"n = nat (ord_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. n = nat (ord_Zp x) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  n = nat (ord_Zp x)\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "obtain m where M0: \"k = n + m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>m. k = n + m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using False N le_Suc_ex ord_Zp_def"], ["proof (prove)\nusing this:\n  \\<not> int k \\<le> ord_Zp x\n  n = nat (ord_Zp x)\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n  ord_Zp = padic_val p\n\ngoal (1 subgoal):\n 1. (\\<And>m. k = n + m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  k = n + m\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have M1: \"m >0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < m", "using M0 False N assms(1) assms(2) ord_nat"], ["proof (prove)\nusing this:\n  k = n + m\n  \\<not> int k \\<le> ord_Zp x\n  n = nat (ord_Zp x)\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> int (nat (ord_Zp ?x)) = ord_Zp ?x\n\ngoal (1 subgoal):\n 1. 0 < m", "by (metis Nat.add_0_right gr0I le_refl less_eq_int_code(1) \n            nat_eq_iff2 neq0_conv of_nat_eq_0_iff of_nat_mono)"], ["proof (state)\nthis:\n  0 < m\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have E1: \"(ac_Zp x m)*(p^n) = (x k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x m * p ^ n = x k", "using M0 M1 N ac_Zp_equation assms(1) assms(2)"], ["proof (prove)\nusing this:\n  k = n + m\n  0 < m\n  n = nat (ord_Zp x)\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>; 0 < ?k;\n   ?m = nat (ord_Zp ?x)\\<rbrakk>\n  \\<Longrightarrow> ac_Zp ?x ?k \\<in> carrier (residue_ring (p ^ ?k)) \\<and>\n                    ac_Zp ?x ?k * p ^ ?m = ?x (?m + ?k)\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. ac_Zp x m * p ^ n = x k", "by blast"], ["proof (state)\nthis:\n  ac_Zp x m * p ^ n = x k\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have E2: \"(ac_Zp x k)*(p^n) = (x (n + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x k * p ^ n = x (n + k)", "using M0 M1 N ac_Zp_equation assms(1) assms(2) add_gr_0"], ["proof (prove)\nusing this:\n  k = n + m\n  0 < m\n  n = nat (ord_Zp x)\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>; 0 < ?k;\n   ?m = nat (ord_Zp ?x)\\<rbrakk>\n  \\<Longrightarrow> ac_Zp ?x ?k \\<in> carrier (residue_ring (p ^ ?k)) \\<and>\n                    ac_Zp ?x ?k * p ^ ?m = ?x (?m + ?k)\n  x \\<in> carrier Zp\n  x \\<noteq> \\<zero>\n  (0 < ?m + ?n) = (0 < ?m \\<or> 0 < ?n)\n\ngoal (1 subgoal):\n 1. ac_Zp x k * p ^ n = x (n + k)", "by presburger"], ["proof (state)\nthis:\n  ac_Zp x k * p ^ n = x (n + k)\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have E3: \"((ac_Zp x k) mod (p^k))*((p^n) mod p^k) mod (p^k) = (x (n + k)) mod (p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x k mod p ^ k * (p ^ n mod p ^ k) mod p ^ k = x (n + k) mod p ^ k", "by (metis E2 mod_mult_left_eq mod_mult_right_eq)"], ["proof (state)\nthis:\n  ac_Zp x k mod p ^ k * (p ^ n mod p ^ k) mod p ^ k = x (n + k) mod p ^ k\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have E4: \"((ac_Zp x k) mod (p^k))*(p^n) mod (p^k) = (x k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x k mod p ^ k * p ^ n mod p ^ k = x k", "using E2 assms(1) le_add2 mod_mult_left_eq p_residue_padic_int p_residue_def"], ["proof (prove)\nusing this:\n  ac_Zp x k * p ^ n = x (n + k)\n  x \\<in> carrier Zp\n  ?n \\<le> ?m + ?n\n  ?a mod ?c * ?b mod ?c = ?a * ?b mod ?c\n  \\<lbrakk>?x \\<in> carrier Zp; ?k \\<le> ?m\\<rbrakk>\n  \\<Longrightarrow> p_residue ?k (?x ?m) = ?x ?k\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n\ngoal (1 subgoal):\n 1. ac_Zp x k mod p ^ k * p ^ n mod p ^ k = x k", "by (metis Zp_int_inc_rep Zp_int_inc_res)"], ["proof (state)\nthis:\n  ac_Zp x k mod p ^ k * p ^ n mod p ^ k = x k\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have E5: \"(ac_Zp x k)*((p^n) mod p^k) mod (p^k) = (x k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x k * (p ^ n mod p ^ k) mod p ^ k = x k", "using E2 assms(1) p_residue_padic_int p_residue_def"], ["proof (prove)\nusing this:\n  ac_Zp x k * p ^ n = x (n + k)\n  x \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?k \\<le> ?m\\<rbrakk>\n  \\<Longrightarrow> p_residue ?k (?x ?m) = ?x ?k\n  p_residue ?m ?n \\<equiv> residue (p ^ ?m) ?n\n\ngoal (1 subgoal):\n 1. ac_Zp x k * (p ^ n mod p ^ k) mod p ^ k = x k", "by (metis E3 E4 mod_mult_left_eq)"], ["proof (state)\nthis:\n  ac_Zp x k * (p ^ n mod p ^ k) mod p ^ k = x k\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have E6: \"(ac_Zp x k) \\<otimes>\\<^bsub>(Zp_res_ring k)\\<^esub> ((p^n) mod p^k)  = (x k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    (p ^ n mod p ^ k) =\n    x k", "using E5 M0 M1 p_residues  residues.res_mult_eq"], ["proof (prove)\nusing this:\n  ac_Zp x k * (p ^ n mod p ^ k) mod p ^ k = x k\n  k = n + m\n  0 < m\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  residues ?m \\<Longrightarrow>\n  ?x \\<otimes>\\<^bsub>residue_ring ?m\\<^esub> ?y = ?x * ?y mod ?m\n\ngoal (1 subgoal):\n 1. ac_Zp x k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    (p ^ n mod p ^ k) =\n    x k", "by auto"], ["proof (state)\nthis:\n  ac_Zp x k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  (p ^ n mod p ^ k) =\n  x k\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have E7: \" ((p^n) mod p^k) \\<otimes>\\<^bsub>(Zp_res_ring k)\\<^esub>(ac_Zp x k)   = (x k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ^ n mod p ^ k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    ac_Zp x k =\n    x k", "by (simp add: E6 residue_mult_comm)"], ["proof (state)\nthis:\n  p ^ n mod p ^ k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> ac_Zp x k =\n  x k\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "have E8: \"((\\<p>[^](nat (ord_Zp x))) k) \\<otimes>\\<^bsub>(Zp_res_ring k)\\<^esub> (ac_Zp x k) = (x k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] nat (ord_Zp x))\n     k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    ac_Zp x k =\n    x k", "using E7 N p_pow_rep"], ["proof (prove)\nusing this:\n  p ^ n mod p ^ k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub> ac_Zp x k =\n  x k\n  n = nat (ord_Zp x)\n  ([p] \\<cdot> \\<one> [^] ?n) ?k = p ^ ?n mod p ^ ?k\n\ngoal (1 subgoal):\n 1. ([p] \\<cdot> \\<one> [^] nat (ord_Zp x))\n     k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n    ac_Zp x k =\n    x k", "by metis"], ["proof (state)\nthis:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x))\n   k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  ac_Zp x k =\n  x k\n\ngoal (1 subgoal):\n 1. \\<not> int k \\<le> ord_Zp x \\<Longrightarrow>\n    x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "then"], ["proof (chain)\npicking this:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x))\n   k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  ac_Zp x k =\n  x k", "show ?thesis"], ["proof (prove)\nusing this:\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp x))\n   k \\<otimes>\\<^bsub>residue_ring (p ^ k)\\<^esub>\n  ac_Zp x k =\n  x k\n\ngoal (1 subgoal):\n 1. x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k", "by (simp add: residue_of_prod)"], ["proof (state)\nthis:\n  x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x k = ([p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x) k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x\n\ngoal (1 subgoal):\n 1. x = [p] \\<cdot> \\<one> [^] ord_Zp x \\<otimes> ac_Zp x", "then"], ["proof (chain)\npicking this:\n  x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x", "show \"x = (\\<p>[^](ord_Zp x)) \\<otimes> (ac_Zp x)\""], ["proof (prove)\nusing this:\n  x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x\n\ngoal (1 subgoal):\n 1. x = [p] \\<cdot> \\<one> [^] ord_Zp x \\<otimes> ac_Zp x", "by (metis assms(1) assms(2) int_pow_int ord_nat)"], ["proof (state)\nthis:\n  x = [p] \\<cdot> \\<one> [^] ord_Zp x \\<otimes> ac_Zp x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ac_Zp_factors':\n  assumes \"x \\<in> nonzero Zp\"\n  shows \"x = [p] \\<cdot> \\<one> [^] ord_Zp x \\<otimes> ac_Zp x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = [p] \\<cdot> \\<one> [^] ord_Zp x \\<otimes> ac_Zp x", "using assms nonzero_memE"], ["proof (prove)\nusing this:\n  x \\<in> nonzero Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. x = [p] \\<cdot> \\<one> [^] ord_Zp x \\<otimes> ac_Zp x", "by (simp add: nonzero_closed nonzero_memE(2) ac_Zp_factors_x(2))"], ["", "lemma(in padic_integers) ac_Zp_mult:\n  assumes \"x \\<in> nonzero Zp\"\n  assumes \"y \\<in> nonzero Zp\"\n  shows \"ac_Zp (x \\<otimes> y) = (ac_Zp x) \\<otimes> (ac_Zp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "have P0: \"x = (\\<p>[^](nat (ord_Zp x))) \\<otimes> (ac_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x", "using  nonzero_memE ac_Zp_factors_x assms(1)"], ["proof (prove)\nusing this:\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ?x =\n                    [p] \\<cdot> \\<one> [^] nat (ord_Zp ?x) \\<otimes>\n                    ac_Zp ?x\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ?x = [p] \\<cdot> \\<one> [^] ord_Zp ?x \\<otimes> ac_Zp ?x\n  x \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x", "by (simp add: nonzero_closed nonzero_memE(2))"], ["proof (state)\nthis:\n  x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "have P1: \"y = (\\<p>[^](nat (ord_Zp y))) \\<otimes> (ac_Zp y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp y", "using  nonzero_memE ac_Zp_factors_x assms(2)"], ["proof (prove)\nusing this:\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ?x =\n                    [p] \\<cdot> \\<one> [^] nat (ord_Zp ?x) \\<otimes>\n                    ac_Zp ?x\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ?x = [p] \\<cdot> \\<one> [^] ord_Zp ?x \\<otimes> ac_Zp ?x\n  y \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. y = [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp y", "by (simp add: nonzero_closed nonzero_memE(2))"], ["proof (state)\nthis:\n  y = [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp y\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "have \"x \\<otimes> y = (\\<p>[^](nat (ord_Zp (x \\<otimes> y)))) \\<otimes> (ac_Zp (x \\<otimes> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "have \"x \\<otimes> y \\<in> nonzero Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> y \\<in> nonzero Zp", "by (simp add:  assms(1) assms(2) nonzero_mult_closed)"], ["proof (state)\nthis:\n  x \\<otimes> y \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "then"], ["proof (chain)\npicking this:\n  x \\<otimes> y \\<in> nonzero Zp", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<otimes> y \\<in> nonzero Zp\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "using nonzero_closed nonzero_memE(2) Zp_def \n        padic_integers.ac_Zp_factors_x(1) padic_integers_axioms"], ["proof (prove)\nusing this:\n  x \\<otimes> y \\<in> nonzero Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  Zp \\<equiv> padic_int p\n  \\<lbrakk>padic_integers ?p; ?x \\<in> carrier (padic_int ?p);\n   ?x \\<noteq> \\<zero>\\<^bsub>padic_int ?p\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x =\n                    [?p] \\<cdot>\\<^bsub>padic_int ?p\\<^esub> \\<one>\\<^bsub>padic_int ?p\\<^esub> [^]\\<^bsub>padic_int ?p\\<^esub>\n                    nat (padic_integers.ord_Zp ?p\n                          ?x) \\<otimes>\\<^bsub>padic_int ?p\\<^esub>\n                    padic_integers.ac_Zp ?p ?x\n  padic_integers p\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "by blast"], ["proof (state)\nthis:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "then"], ["proof (chain)\npicking this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n  ac_Zp (x \\<otimes> y)", "have \"x \\<otimes> y =  (\\<p>[^](nat ((ord_Zp x) + (ord_Zp y)))) \\<otimes> (ac_Zp (x \\<otimes> y))\""], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp x + ord_Zp y) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "using assms ord_Zp_mult[of x y]"], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp (x \\<otimes> y)) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  \\<lbrakk>x \\<in> nonzero Zp; y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (x \\<otimes> y) = ord_Zp x + ord_Zp y\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp x + ord_Zp y) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "by (simp add: Zp_def)"], ["proof (state)\nthis:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x + ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "then"], ["proof (chain)\npicking this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x + ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y)", "have \"x \\<otimes> y =  (\\<p>[^]((nat (ord_Zp x)) + nat (ord_Zp y))) \\<otimes> (ac_Zp (x \\<otimes> y))\""], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x + ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] (nat (ord_Zp x) + nat (ord_Zp y)) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "using nonzero_closed nonzero_memE(2) assms(1) assms(2) \n          nat_add_distrib ord_pos"], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x + ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  x \\<in> nonzero Zp\n  y \\<in> nonzero Zp\n  \\<lbrakk>0 \\<le> ?z; 0 \\<le> ?z'\\<rbrakk>\n  \\<Longrightarrow> nat (?z + ?z') = nat ?z + nat ?z'\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> 0 \\<le> ord_Zp ?x\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] (nat (ord_Zp x) + nat (ord_Zp y)) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "by auto"], ["proof (state)\nthis:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] (nat (ord_Zp x) + nat (ord_Zp y)) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "then"], ["proof (chain)\npicking this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] (nat (ord_Zp x) + nat (ord_Zp y)) \\<otimes>\n  ac_Zp (x \\<otimes> y)", "have \"x \\<otimes> y =  (\\<p>[^](nat (ord_Zp x))) \\<otimes> (\\<p>[^](nat(ord_Zp y))) \\<otimes> (ac_Zp (x \\<otimes> y))\""], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] (nat (ord_Zp x) + nat (ord_Zp y)) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "using p_natpow_prod"], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] (nat (ord_Zp x) + nat (ord_Zp y)) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n  [p] \\<cdot> \\<one> [^] ?n \\<otimes> [p] \\<cdot> \\<one> [^] ?m =\n  [p] \\<cdot> \\<one> [^] (?n + ?m)\n\ngoal (1 subgoal):\n 1. x \\<otimes> y =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n    ac_Zp (x \\<otimes> y)", "by metis"], ["proof (state)\nthis:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "then"], ["proof (chain)\npicking this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y)", "have P2: \"(\\<p>[^](nat (ord_Zp x))) \\<otimes> (\\<p>[^](nat(ord_Zp y))) \\<otimes> (ac_Zp (x \\<otimes> y))\n            = ((\\<p>[^](nat (ord_Zp x))) \\<otimes> (ac_Zp x)) \\<otimes> ((\\<p>[^](nat (ord_Zp y))) \\<otimes> (ac_Zp y))\""], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n    ac_Zp (x \\<otimes> y) =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x \\<otimes>\n    ([p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp y)", "using P0 P1"], ["proof (prove)\nusing this:\n  x \\<otimes> y =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y)\n  x = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x\n  y = [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp y\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n    ac_Zp (x \\<otimes> y) =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x \\<otimes>\n    ([p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp y)", "by metis"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y) =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> ac_Zp x \\<otimes>\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp y)\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "have \"(\\<p>[^](nat (ord_Zp x))) \\<otimes> (\\<p>[^](nat(ord_Zp y))) \\<otimes> (ac_Zp (x \\<otimes> y))\n            = ((\\<p>[^](nat (ord_Zp x))) \\<otimes> ((\\<p>[^](nat (ord_Zp y))) \\<otimes> (ac_Zp x)) \\<otimes> (ac_Zp y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n    ac_Zp (x \\<otimes> y) =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    ([p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp x) \\<otimes>\n    ac_Zp y", "by (metis P0 P1 Zp_def \\<open>x \\<otimes> y = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp (x \\<otimes> y)\\<close>\n        mult_comm padic_integers.mult_assoc padic_integers_axioms)"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y) =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp x) \\<otimes>\n  ac_Zp y\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "then"], ["proof (chain)\npicking this:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y) =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp x) \\<otimes>\n  ac_Zp y", "have \"((\\<p>[^](nat (ord_Zp x))) \\<otimes> (\\<p>[^](nat(ord_Zp y)))) \\<otimes> (ac_Zp (x \\<otimes> y))\n            =((\\<p>[^](nat (ord_Zp x))) \\<otimes> (\\<p>[^](nat(ord_Zp y)))) \\<otimes> ((ac_Zp x) \\<otimes> (ac_Zp y))\""], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y) =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp x) \\<otimes>\n  ac_Zp y\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n    ac_Zp (x \\<otimes> y) =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n    (ac_Zp x \\<otimes> ac_Zp y)", "using Zp_def mult_assoc"], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y) =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  ([p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp x) \\<otimes>\n  ac_Zp y\n  Zp \\<equiv> padic_int p\n  ?a \\<otimes> ?b \\<otimes> ?c = ?a \\<otimes> (?b \\<otimes> ?c)\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n    ac_Zp (x \\<otimes> y) =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n    (ac_Zp x \\<otimes> ac_Zp y)", "by auto"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y) =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  (ac_Zp x \\<otimes> ac_Zp y)\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "then"], ["proof (chain)\npicking this:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y) =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  (ac_Zp x \\<otimes> ac_Zp y)", "show ?thesis"], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  ac_Zp (x \\<otimes> y) =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes>\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes>\n  (ac_Zp x \\<otimes> ac_Zp y)\n\ngoal (1 subgoal):\n 1. ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y", "by (metis (no_types, lifting) R.m_closed\n        \\<open>x \\<otimes> y = [p] \\<cdot> \\<one> [^] nat (ord_Zp x) \\<otimes> [p] \\<cdot> \\<one> [^] nat (ord_Zp y) \\<otimes> ac_Zp (x \\<otimes> y)\\<close> \n        ac_Zp_in_Zp assms(1) assms(2) integral_iff m_lcancel\n        nonzero_closed nonzero_memE(2) p_pow_nonzero(1))"], ["proof (state)\nthis:\n  ac_Zp (x \\<otimes> y) = ac_Zp x \\<otimes> ac_Zp y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ac_Zp_one:\n\"ac_Zp \\<one> = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp \\<one> = \\<one>", "by (metis R.one_closed Zp_def ac_Zp_factors_x(2) int_pow_0 ord_Zp_one padic_integers.ac_Zp_in_Zp padic_integers_axioms padic_one_id prime zero_not_one)"], ["", "lemma(in padic_integers) ac_Zp_inv:\n  assumes \"x \\<in> Units Zp\"\n  shows \"ac_Zp (inv\\<^bsub>Zp\\<^esub> x) = inv\\<^bsub>Zp\\<^esub> (ac_Zp x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp (inv x) = inv ac_Zp x", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ac_Zp (inv x) = inv ac_Zp x", "have \"x \\<otimes> (inv\\<^bsub>Zp\\<^esub> x) = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> inv x = \\<one>", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> Units Zp\n\ngoal (1 subgoal):\n 1. x \\<otimes> inv x = \\<one>", "by simp"], ["proof (state)\nthis:\n  x \\<otimes> inv x = \\<one>\n\ngoal (1 subgoal):\n 1. ac_Zp (inv x) = inv ac_Zp x", "then"], ["proof (chain)\npicking this:\n  x \\<otimes> inv x = \\<one>", "have \"(ac_Zp x) \\<otimes> (ac_Zp (inv\\<^bsub>Zp\\<^esub> x)) = ac_Zp \\<one>\""], ["proof (prove)\nusing this:\n  x \\<otimes> inv x = \\<one>\n\ngoal (1 subgoal):\n 1. ac_Zp x \\<otimes> ac_Zp (inv x) = ac_Zp \\<one>", "using ac_Zp_mult[of x \"(inv x)\"] R.Units_nonzero\n          assms zero_not_one"], ["proof (prove)\nusing this:\n  x \\<otimes> inv x = \\<one>\n  \\<lbrakk>x \\<in> nonzero Zp; inv x \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ac_Zp (x \\<otimes> inv x) =\n                    ac_Zp x \\<otimes> ac_Zp (inv x)\n  \\<lbrakk>?u \\<in> Units Zp; \\<one> \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ?u \\<in> nonzero Zp\n  x \\<in> Units Zp\n  \\<zero> \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. ac_Zp x \\<otimes> ac_Zp (inv x) = ac_Zp \\<one>", "by auto"], ["proof (state)\nthis:\n  ac_Zp x \\<otimes> ac_Zp (inv x) = ac_Zp \\<one>\n\ngoal (1 subgoal):\n 1. ac_Zp (inv x) = inv ac_Zp x", "then"], ["proof (chain)\npicking this:\n  ac_Zp x \\<otimes> ac_Zp (inv x) = ac_Zp \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  ac_Zp x \\<otimes> ac_Zp (inv x) = ac_Zp \\<one>\n\ngoal (1 subgoal):\n 1. ac_Zp (inv x) = inv ac_Zp x", "using R.invI(2)[of \"(ac_Zp x)\" \"(ac_Zp (inv\\<^bsub>Zp\\<^esub> x))\"] assms ac_Zp_in_Zp ac_Zp_one"], ["proof (prove)\nusing this:\n  ac_Zp x \\<otimes> ac_Zp (inv x) = ac_Zp \\<one>\n  \\<lbrakk>ac_Zp x \\<in> carrier Zp; ac_Zp (inv x) \\<in> carrier Zp;\n   ac_Zp x \\<otimes> ac_Zp (inv x) = \\<one>\\<rbrakk>\n  \\<Longrightarrow> ac_Zp x = inv ac_Zp (inv x)\n  x \\<in> Units Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ac_Zp ?x \\<in> carrier Zp\n  ac_Zp \\<one> = \\<one>\n\ngoal (1 subgoal):\n 1. ac_Zp (inv x) = inv ac_Zp x", "by (metis (no_types, lifting) R.Units_closed R.Units_inv_closed \n        R.Units_r_inv integral_iff R.inv_unique ac_Zp_is_Unit)"], ["proof (state)\nthis:\n  ac_Zp (inv x) = inv ac_Zp x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ac_Zp_of_Unit:\n  assumes \"val_Zp x = 0\"\n  assumes \"x \\<in> carrier Zp\"\n  shows \"ac_Zp x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp x = x", "using assms"], ["proof (prove)\nusing this:\n  val_Zp x = 0\n  x \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ac_Zp x = x", "unfolding val_Zp_def"], ["proof (prove)\nusing this:\n  (if x = \\<zero> then \\<infinity> else eint (padic_val p x)) = 0\n  x \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ac_Zp x = x", "by (metis R.one_closed Zp_def ac_Zp_factors_x(2) ac_Zp_one eint.inject infinity_ne_i0 mult_assoc\n      ord_Zp_def ord_Zp_one padic_integers.ac_Zp_in_Zp padic_integers_axioms padic_one_id prime zero_eint_def zero_not_one)"], ["", "lemma(in padic_integers) ac_Zp_p:\n\"(ac_Zp \\<p>) = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one>) = \\<one>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one>) = \\<one>", "have 0: \"\\<p> = \\<p> [^] nat (ord_Zp \\<p>) \\<otimes> ac_Zp \\<p>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp ([p] \\<cdot> \\<one>)) \\<otimes>\n    ac_Zp ([p] \\<cdot> \\<one>)", "using ac_Zp_factors_x[of \\<p>]  ord_Zp_p ord_of_nonzero(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>[p] \\<cdot> \\<one> \\<in> carrier Zp;\n   [p] \\<cdot> \\<one> \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> [p] \\<cdot> \\<one> =\n                    [p] \\<cdot> \\<one> [^]\n                    nat (ord_Zp ([p] \\<cdot> \\<one>)) \\<otimes>\n                    ac_Zp ([p] \\<cdot> \\<one>)\n  \\<lbrakk>[p] \\<cdot> \\<one> \\<in> carrier Zp;\n   [p] \\<cdot> \\<one> \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> [p] \\<cdot> \\<one> =\n                    [p] \\<cdot> \\<one> [^]\n                    ord_Zp ([p] \\<cdot> \\<one>) \\<otimes>\n                    ac_Zp ([p] \\<cdot> \\<one>)\n  ord_Zp ([p] \\<cdot> \\<one>) = 1\n  \\<lbrakk>?x \\<in> carrier Zp; 0 \\<le> ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> =\n    [p] \\<cdot> \\<one> [^] nat (ord_Zp ([p] \\<cdot> \\<one>)) \\<otimes>\n    ac_Zp ([p] \\<cdot> \\<one>)", "by auto"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp ([p] \\<cdot> \\<one>)) \\<otimes>\n  ac_Zp ([p] \\<cdot> \\<one>)\n\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one>) = \\<one>", "have 1: \"\\<p> [^] nat (ord_Zp \\<p>) = \\<p>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] nat (ord_Zp ([p] \\<cdot> \\<one>)) =\n    [p] \\<cdot> \\<one>", "by (metis One_nat_def nat_1 ord_Zp_p p_pow_rep0 power_one_right)"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp ([p] \\<cdot> \\<one>)) =\n  [p] \\<cdot> \\<one>\n\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one>) = \\<one>", "then"], ["proof (chain)\npicking this:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp ([p] \\<cdot> \\<one>)) =\n  [p] \\<cdot> \\<one>", "have 2: \"\\<p> = \\<p> \\<otimes> ac_Zp \\<p>\""], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp ([p] \\<cdot> \\<one>)) =\n  [p] \\<cdot> \\<one>\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> =\n    [p] \\<cdot> \\<one> \\<otimes> ac_Zp ([p] \\<cdot> \\<one>)", "using \"0\""], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp ([p] \\<cdot> \\<one>)) =\n  [p] \\<cdot> \\<one>\n  [p] \\<cdot> \\<one> =\n  [p] \\<cdot> \\<one> [^] nat (ord_Zp ([p] \\<cdot> \\<one>)) \\<otimes>\n  ac_Zp ([p] \\<cdot> \\<one>)\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> =\n    [p] \\<cdot> \\<one> \\<otimes> ac_Zp ([p] \\<cdot> \\<one>)", "by presburger"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> =\n  [p] \\<cdot> \\<one> \\<otimes> ac_Zp ([p] \\<cdot> \\<one>)\n\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one>) = \\<one>", "have \"ac_Zp \\<p> \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one>) \\<in> carrier Zp", "using ac_Zp_in_Zp[of \\<p>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>[p] \\<cdot> \\<one> \\<in> carrier Zp;\n   [p] \\<cdot> \\<one> \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> ac_Zp ([p] \\<cdot> \\<one>) \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one>) \\<in> carrier Zp", "by (simp add: ord_Zp_p ord_of_nonzero(1))"], ["proof (state)\nthis:\n  ac_Zp ([p] \\<cdot> \\<one>) \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one>) = \\<one>", "then"], ["proof (chain)\npicking this:\n  ac_Zp ([p] \\<cdot> \\<one>) \\<in> carrier Zp", "show ?thesis"], ["proof (prove)\nusing this:\n  ac_Zp ([p] \\<cdot> \\<one>) \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one>) = \\<one>", "by (metis \"1\" \"2\" m_lcancel R.one_closed R.r_one \n        Zp_int_inc_closed p_pow_nonzero(2))"], ["proof (state)\nthis:\n  ac_Zp ([p] \\<cdot> \\<one>) = \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) ac_Zp_p_nat_pow:\n\"(ac_Zp (\\<p> [^] (n::nat))) = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ac_Zp ([p] \\<cdot> \\<one> [^] n) = \\<one>", "apply(induction n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ac_Zp ([p] \\<cdot> \\<one> [^] 0) = \\<one>\n 2. \\<And>n.\n       ac_Zp ([p] \\<cdot> \\<one> [^] n) = \\<one> \\<Longrightarrow>\n       ac_Zp ([p] \\<cdot> \\<one> [^] Suc n) = \\<one>", "apply (simp add: ac_Zp_one)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       ac_Zp ([p] \\<cdot> \\<one> [^] n) = \\<one> \\<Longrightarrow>\n       ac_Zp ([p] \\<cdot> \\<one> [^] Suc n) = \\<one>", "using ac_Zp_mult ac_Zp_p int_nat_pow_rep nat_pow_Suc2 R.nat_pow_one\n        R.one_closed p_natpow_prod_Suc(1) p_nonzero p_pow_nonzero' p_pow_rep0"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> nonzero Zp; ?y \\<in> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ac_Zp (?x \\<otimes> ?y) = ac_Zp ?x \\<otimes> ac_Zp ?y\n  ac_Zp ([p] \\<cdot> \\<one>) = \\<one>\n  [?k] \\<cdot>\\<^bsub>UP Zp\\<^esub> \\<one>\\<^bsub>UP Zp\\<^esub> [^]\\<^bsub>UP Zp\\<^esub>\n  ?n =\n  [(?k ^ ?n)] \\<cdot>\\<^bsub>UP Zp\\<^esub> \\<one>\\<^bsub>UP Zp\\<^esub>\n  ?x \\<in> carrier (UP Zp) \\<Longrightarrow>\n  ?x [^]\\<^bsub>UP Zp\\<^esub> Suc ?n =\n  ?x \\<otimes>\\<^bsub>UP Zp\\<^esub> ?x [^]\\<^bsub>UP Zp\\<^esub> ?n\n  \\<one> [^] ?n = \\<one>\n  \\<one> \\<in> carrier Zp\n  [p] \\<cdot> \\<one> \\<otimes> [p] \\<cdot> \\<one> [^] ?m =\n  [p] \\<cdot> \\<one> [^] Suc ?m\n  [p] \\<cdot> \\<one> \\<in> nonzero Zp\n  [p] \\<cdot> \\<one> [^] ?n \\<in> nonzero Zp\n  [p] \\<cdot> \\<one> [^] ?n = [(p ^ ?n)] \\<cdot> \\<one>\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       ac_Zp ([p] \\<cdot> \\<one> [^] n) = \\<one> \\<Longrightarrow>\n       ac_Zp ([p] \\<cdot> \\<one> [^] Suc n) = \\<one>", "by auto"], ["", "text\\<open>Facts for reasoning about integer powers in an arbitrary commutative monoid:\\<close>"], ["", "lemma(in monoid) int_pow_add: \n  fixes n::int \n  fixes m::int\n  assumes \"a \\<in> Units G\"\n  shows \"a [^] (n + m) = (a [^] n) \\<otimes> (a [^] m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] (n + m) = a [^] n \\<otimes> a [^] m", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a [^] (n + m) = a [^] n \\<otimes> a [^] m", "have 0: \"group (units_of G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (units_of G)", "by (simp add: units_group)"], ["proof (state)\nthis:\n  Group.group (units_of G)\n\ngoal (1 subgoal):\n 1. a [^] (n + m) = a [^] n \\<otimes> a [^] m", "have 1: \"a \\<in> carrier (units_of G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier (units_of G)", "by (simp add: assms units_of_carrier)"], ["proof (state)\nthis:\n  a \\<in> carrier (units_of G)\n\ngoal (1 subgoal):\n 1. a [^] (n + m) = a [^] n \\<otimes> a [^] m", "have \"\\<And>n::int. a [^] n = a [^]\\<^bsub>units_of G\\<^esub> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n. a [^] n = a [^]\\<^bsub>units_of G\\<^esub> n", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. a [^] n = a [^]\\<^bsub>units_of G\\<^esub> n", "fix k::int"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. a [^] n = a [^]\\<^bsub>units_of G\\<^esub> n", "show \"a [^] k = a [^]\\<^bsub>units_of G\\<^esub> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] k = a [^]\\<^bsub>units_of G\\<^esub> k", "using 1 assms units_of_pow"], ["proof (prove)\nusing this:\n  a \\<in> carrier (units_of G)\n  a \\<in> Units G\n  ?x \\<in> Units G \\<Longrightarrow>\n  ?x [^]\\<^bsub>units_of G\\<^esub> ?n = ?x [^] ?n\n\ngoal (1 subgoal):\n 1. a [^] k = a [^]\\<^bsub>units_of G\\<^esub> k", "by (metis Units_pow_closed int_pow_def nat_pow_def units_of_inv units_of_pow)"], ["proof (state)\nthis:\n  a [^] k = a [^]\\<^bsub>units_of G\\<^esub> k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a [^] ?n = a [^]\\<^bsub>units_of G\\<^esub> ?n\n\ngoal (1 subgoal):\n 1. a [^] (n + m) = a [^] n \\<otimes> a [^] m", "have 2: \"a [^]\\<^bsub>units_of G\\<^esub> (n + m) = (a [^]\\<^bsub>units_of G\\<^esub> n) \\<otimes>\\<^bsub>units_of G\\<^esub> (a [^]\\<^bsub>units_of G\\<^esub> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^]\\<^bsub>units_of G\\<^esub> (n + m) =\n    a [^]\\<^bsub>units_of G\\<^esub> n \\<otimes>\\<^bsub>units_of G\\<^esub>\n    a [^]\\<^bsub>units_of G\\<^esub> m", "by (simp add: \"1\" group.int_pow_mult units_group)"], ["proof (state)\nthis:\n  a [^]\\<^bsub>units_of G\\<^esub> (n + m) =\n  a [^]\\<^bsub>units_of G\\<^esub> n \\<otimes>\\<^bsub>units_of G\\<^esub>\n  a [^]\\<^bsub>units_of G\\<^esub> m\n\ngoal (1 subgoal):\n 1. a [^] (n + m) = a [^] n \\<otimes> a [^] m", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] (n + m) = a [^] n \\<otimes> a [^] m", "using 0 1 2"], ["proof (prove)\nusing this:\n  Group.group (units_of G)\n  a \\<in> carrier (units_of G)\n  a [^]\\<^bsub>units_of G\\<^esub> (n + m) =\n  a [^]\\<^bsub>units_of G\\<^esub> n \\<otimes>\\<^bsub>units_of G\\<^esub>\n  a [^]\\<^bsub>units_of G\\<^esub> m\n\ngoal (1 subgoal):\n 1. a [^] (n + m) = a [^] n \\<otimes> a [^] m", "by (simp add: \\<open>\\<And>n. a [^] n = a [^]\\<^bsub>units_of G\\<^esub> n\\<close> units_of_mult)"], ["proof (state)\nthis:\n  a [^] (n + m) = a [^] n \\<otimes> a [^] m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in monoid)  int_pow_unit_closed: \n  fixes n::int \n  assumes \"a \\<in> Units G\"\n  shows \"a[^] n \\<in> Units G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] n \\<in> Units G", "apply(cases \"n \\<ge> 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 \\<le> n \\<Longrightarrow> a [^] n \\<in> Units G\n 2. \\<not> 0 \\<le> n \\<Longrightarrow> a [^] n \\<in> Units G", "using units_of_def[of G] units_group Units_inv_Units[of a] \n        Units_pow_closed[of \"inv a\"] Units_pow_closed[of a]"], ["proof (prove)\nusing this:\n  units_of G =\n  \\<lparr>carrier = Units G, monoid.mult = (\\<otimes>), one = \\<one>\\<rparr>\n  Group.group (units_of G)\n  a \\<in> Units G \\<Longrightarrow> inv a \\<in> Units G\n  inv a \\<in> Units G \\<Longrightarrow> inv a [^] ?d \\<in> Units G\n  a \\<in> Units G \\<Longrightarrow> a [^] ?d \\<in> Units G\n\ngoal (2 subgoals):\n 1. 0 \\<le> n \\<Longrightarrow> a [^] n \\<in> Units G\n 2. \\<not> 0 \\<le> n \\<Longrightarrow> a [^] n \\<in> Units G", "apply (metis assms pow_nat)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> n \\<Longrightarrow> a [^] n \\<in> Units G", "using units_of_def[of G] units_group Units_inv_Units[of a] \n        Units_pow_closed[of \"inv a\"] Units_pow_closed[of a]"], ["proof (prove)\nusing this:\n  units_of G =\n  \\<lparr>carrier = Units G, monoid.mult = (\\<otimes>), one = \\<one>\\<rparr>\n  Group.group (units_of G)\n  a \\<in> Units G \\<Longrightarrow> inv a \\<in> Units G\n  inv a \\<in> Units G \\<Longrightarrow> inv a [^] ?d \\<in> Units G\n  a \\<in> Units G \\<Longrightarrow> a [^] ?d \\<in> Units G\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> n \\<Longrightarrow> a [^] n \\<in> Units G", "by (simp add: assms int_pow_def nat_pow_def)"], ["", "lemma(in monoid)  nat_pow_of_inv: \n  fixes n::nat \n  assumes \"a \\<in> Units G\"\n  shows \"inv a[^] n = inv (a[^] n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv a [^] n = inv (a [^] n)", "by (metis (no_types, hide_lams) Units_inv_Units Units_inv_closed Units_inv_inv Units_pow_closed\n      Units_r_inv assms inv_unique' nat_pow_closed nat_pow_one pow_mult_distrib)"], ["", "lemma(in monoid)  int_pow_of_inv:\n  fixes n::int\n  assumes \"a \\<in> Units G\"\n  shows \"inv a[^] n = inv  (a[^] n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv a [^] n = inv (a [^] n)", "apply(cases \"n \\<ge>0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. 0 \\<le> n \\<Longrightarrow> inv a [^] n = inv (a [^] n)\n 2. \\<not> 0 \\<le> n \\<Longrightarrow> inv a [^] n = inv (a [^] n)", "apply (metis assms nat_pow_of_inv pow_nat)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> n \\<Longrightarrow> inv a [^] n = inv (a [^] n)", "by (metis assms int_pow_def2 nat_pow_of_inv)"], ["", "lemma(in monoid)  int_pow_inv: \n  fixes n::int \n  assumes \"a \\<in> Units G\"\n  shows \"a[^] -n = inv  a[^] n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] - n = inv a [^] n", "apply(cases \"n =0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> a [^] - n = inv a [^] n\n 2. n \\<noteq> 0 \\<Longrightarrow> a [^] - n = inv a [^] n", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> a [^] - n = inv a [^] n", "apply(cases \"n > 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<noteq> 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> a [^] - n = inv a [^] n\n 2. \\<lbrakk>n \\<noteq> 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> a [^] - n = inv a [^] n", "using int_pow_def2[of G a \"-n\"] int_pow_of_inv"], ["proof (prove)\nusing this:\n  a [^] - n =\n  (if - n < 0 then inv (a [^] nat (- (- n))) else a [^] nat (- n))\n  ?a \\<in> Units G \\<Longrightarrow> inv ?a [^] ?n = inv (?a [^] ?n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<noteq> 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> a [^] - n = inv a [^] n\n 2. \\<lbrakk>n \\<noteq> 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> a [^] - n = inv a [^] n", "apply (simp add: assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<noteq> 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> a [^] - n = inv a [^] n", "using assms int_pow_def2[of G a \"-n\"] int_pow_def2[of G a \"n\"] int_pow_def2[of G \"inv a\"]\n        int_pow_of_inv[of a n] Units_inv_Units[of a] Units_inv_inv Units_pow_closed[of a]"], ["proof (prove)\nusing this:\n  a \\<in> Units G\n  a [^] - n =\n  (if - n < 0 then inv (a [^] nat (- (- n))) else a [^] nat (- n))\n  a [^] n = (if n < 0 then inv (a [^] nat (- n)) else a [^] nat n)\n  inv a [^] ?z =\n  (if ?z < 0 then inv (inv a [^] nat (- ?z)) else inv a [^] nat ?z)\n  a \\<in> Units G \\<Longrightarrow> inv a [^] n = inv (a [^] n)\n  a \\<in> Units G \\<Longrightarrow> inv a \\<in> Units G\n  ?x \\<in> Units G \\<Longrightarrow> inv (inv ?x) = ?x\n  a \\<in> Units G \\<Longrightarrow> a [^] ?d \\<in> Units G\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<noteq> 0; \\<not> 0 < n\\<rbrakk>\n    \\<Longrightarrow> a [^] - n = inv a [^] n", "by (metis linorder_not_less nat_0_iff nat_eq_iff2 nat_zero_as_int neg_0_less_iff_less)"], ["", "lemma(in monoid)  int_pow_inv': \n  fixes n::int \n  assumes \"a \\<in> Units G\"\n  shows \"a[^] -n = inv  (a[^] n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a [^] - n = inv (a [^] n)", "by (simp add: assms int_pow_inv int_pow_of_inv)"], ["", "lemma(in comm_monoid) inv_of_prod:\n  assumes \"a \\<in> Units G\"\n  assumes \"b \\<in> Units G\"\n  shows \"inv (a \\<otimes>  b) = (inv  a) \\<otimes> (inv  b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv (a \\<otimes> b) = inv a \\<otimes> inv b", "by (metis Units_m_closed assms(1) assms(2) comm_monoid.m_comm comm_monoid_axioms  \n      group.inv_mult_group monoid.Units_inv_closed monoid_axioms units_group \n      units_of_carrier units_of_inv units_of_mult)"], ["", "(*************************************************************************************************)\n(*************************************************************************************************)\n(************)"], ["", "section\\<open>Behaviour of $val\\_Zp$ and $ord\\_Zp$ on Natural Numbers and Integers\\<close>"], ["", "(***********)\n(*************************************************************************************************)\n(*************************************************************************************************)"], ["", "text\\<open>If f and g have an equal residue at k, then they differ by a multiple of $p^k$.\\<close>"], ["", "lemma(in padic_integers) eq_residue_mod:\n  assumes \"f \\<in> carrier Zp\"\n  assumes \"g \\<in> carrier Zp\"\n  assumes \"f k = g k\"\n  shows \"\\<exists>h. h \\<in> carrier Zp \\<and> f = g \\<oplus> (\\<p>[^]k)\\<otimes>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "proof(cases \"f = g\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f = g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h\n 2. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "case True"], ["proof (state)\nthis:\n  f = g\n\ngoal (2 subgoals):\n 1. f = g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h\n 2. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "then"], ["proof (chain)\npicking this:\n  f = g", "show ?thesis"], ["proof (prove)\nusing this:\n  f = g\n\ngoal (1 subgoal):\n 1. \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "using Zp_int_inc_zero' assms(1)"], ["proof (prove)\nusing this:\n  f = g\n  [0] \\<cdot> ?x = \\<zero>\n  f \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "by auto"], ["proof (state)\nthis:\n  \\<exists>h.\n     h \\<in> carrier Zp \\<and>\n     f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h\n\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "case False"], ["proof (state)\nthis:\n  f \\<noteq> g\n\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "have \"(f \\<ominus> g) k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<ominus> g) k = 0", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> carrier Zp\n  g \\<in> carrier Zp\n  f k = g k\n\ngoal (1 subgoal):\n 1. (f \\<ominus> g) k = 0", "by (metis  R.r_right_minus_eq residue_of_diff residue_of_zero(2))"], ["proof (state)\nthis:\n  (f \\<ominus> g) k = 0\n\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "then"], ["proof (chain)\npicking this:\n  (f \\<ominus> g) k = 0", "have \"ord_Zp (f \\<ominus> g) \\<ge> k\""], ["proof (prove)\nusing this:\n  (f \\<ominus> g) k = 0\n\ngoal (1 subgoal):\n 1. int k \\<le> ord_Zp (f \\<ominus> g)", "using False assms"], ["proof (prove)\nusing this:\n  (f \\<ominus> g) k = 0\n  f \\<noteq> g\n  f \\<in> carrier Zp\n  g \\<in> carrier Zp\n  f k = g k\n\ngoal (1 subgoal):\n 1. int k \\<le> ord_Zp (f \\<ominus> g)", "by (simp add: ord_Zp_geq)"], ["proof (state)\nthis:\n  int k \\<le> ord_Zp (f \\<ominus> g)\n\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "then"], ["proof (chain)\npicking this:\n  int k \\<le> ord_Zp (f \\<ominus> g)", "obtain m::int where m_def: \"m \\<ge> 0 \\<and> ord_Zp (f \\<ominus> g) = k + m\""], ["proof (prove)\nusing this:\n  int k \\<le> ord_Zp (f \\<ominus> g)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        0 \\<le> m \\<and>\n        ord_Zp (f \\<ominus> g) = int k + m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using zle_iff_zadd"], ["proof (prove)\nusing this:\n  int k \\<le> ord_Zp (f \\<ominus> g)\n  (?w \\<le> ?z) = (\\<exists>n. ?z = ?w + int n)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        0 \\<le> m \\<and>\n        ord_Zp (f \\<ominus> g) = int k + m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 \\<le> m \\<and> ord_Zp (f \\<ominus> g) = int k + m\n\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "have \"f \\<ominus> g = \\<p>[^](k + m) \\<otimes> ac_Zp (f \\<ominus> g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<ominus> g =\n    [p] \\<cdot> \\<one> [^] (int k + m) \\<otimes> ac_Zp (f \\<ominus> g)", "using ac_Zp_factors_x(2)[of \"f \\<ominus> g\"] False m_def assms(1) assms(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>f \\<ominus> g \\<in> carrier Zp;\n   f \\<ominus> g \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> f \\<ominus> g =\n                    [p] \\<cdot> \\<one> [^] ord_Zp (f \\<ominus> g) \\<otimes>\n                    ac_Zp (f \\<ominus> g)\n  f \\<noteq> g\n  0 \\<le> m \\<and> ord_Zp (f \\<ominus> g) = int k + m\n  f \\<in> carrier Zp\n  g \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. f \\<ominus> g =\n    [p] \\<cdot> \\<one> [^] (int k + m) \\<otimes> ac_Zp (f \\<ominus> g)", "by auto"], ["proof (state)\nthis:\n  f \\<ominus> g =\n  [p] \\<cdot> \\<one> [^] (int k + m) \\<otimes> ac_Zp (f \\<ominus> g)\n\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "then"], ["proof (chain)\npicking this:\n  f \\<ominus> g =\n  [p] \\<cdot> \\<one> [^] (int k + m) \\<otimes> ac_Zp (f \\<ominus> g)", "have 0: \"f \\<ominus> g = \\<p>[^]k \\<otimes> \\<p> [^] m \\<otimes> ac_Zp (f \\<ominus> g)\""], ["proof (prove)\nusing this:\n  f \\<ominus> g =\n  [p] \\<cdot> \\<one> [^] (int k + m) \\<otimes> ac_Zp (f \\<ominus> g)\n\ngoal (1 subgoal):\n 1. f \\<ominus> g =\n    [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n    ac_Zp (f \\<ominus> g)", "by (simp add: Zp_def m_def padic_integers.p_natintpow_prod padic_integers_axioms)"], ["proof (state)\nthis:\n  f \\<ominus> g =\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "have \"\\<p>[^]k \\<otimes> \\<p> [^] m \\<otimes> ac_Zp (f \\<ominus> g) \\<in> carrier Zp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n    ac_Zp (f \\<ominus> g)\n    \\<in> carrier Zp", "using assms \"0\""], ["proof (prove)\nusing this:\n  f \\<in> carrier Zp\n  g \\<in> carrier Zp\n  f k = g k\n  f \\<ominus> g =\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n\ngoal (1 subgoal):\n 1. [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n    ac_Zp (f \\<ominus> g)\n    \\<in> carrier Zp", "by auto"], ["proof (state)\nthis:\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n  \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "then"], ["proof (chain)\npicking this:\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n  \\<in> carrier Zp", "have \"f = g \\<oplus> \\<p>[^]k \\<otimes> \\<p> [^] m \\<otimes> ac_Zp (f \\<ominus> g)\""], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n  \\<in> carrier Zp\n\ngoal (1 subgoal):\n 1. f =\n    g \\<oplus>\n    [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n    ac_Zp (f \\<ominus> g)", "using 0 assms R.ring_simprules"], ["proof (prove)\nusing this:\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n  \\<in> carrier Zp\n  f \\<ominus> g =\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n  f \\<in> carrier Zp\n  g \\<in> carrier Zp\n  f k = g k\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> ?y \\<in> carrier Zp\n  \\<zero> \\<in> carrier Zp\n  ?x \\<in> carrier Zp \\<Longrightarrow> \\<ominus> ?x \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<ominus> ?y \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<in> carrier Zp\n  \\<one> \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp;\n   ?z \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> ?y \\<oplus> ?z =\n                    ?x \\<oplus> (?y \\<oplus> ?z)\n  ?x \\<in> carrier Zp \\<Longrightarrow> \\<zero> \\<oplus> ?x = ?x\n  ?x \\<in> carrier Zp \\<Longrightarrow> \\<ominus> ?x \\<oplus> ?x = \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> ?y = ?y \\<oplus> ?x\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp;\n   ?z \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<otimes> ?z =\n                    ?x \\<otimes> (?y \\<otimes> ?z)\n  ?x \\<in> carrier Zp \\<Longrightarrow> \\<one> \\<otimes> ?x = ?x\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp;\n   ?z \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> (?x \\<oplus> ?y) \\<otimes> ?z =\n                    ?x \\<otimes> ?z \\<oplus> ?y \\<otimes> ?z\n  ?x \\<ominus> ?y = ?x \\<oplus> \\<ominus> ?y\n  ?x \\<in> carrier Zp \\<Longrightarrow> ?x \\<oplus> \\<zero> = ?x\n  ?x \\<in> carrier Zp \\<Longrightarrow> ?x \\<oplus> \\<ominus> ?x = \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> (\\<ominus> ?x \\<oplus> ?y) = ?y\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> \\<ominus> ?x \\<oplus> (?x \\<oplus> ?y) = ?y\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> \\<ominus> (?x \\<oplus> ?y) =\n                    \\<ominus> ?x \\<oplus> \\<ominus> ?y\n  ?x \\<in> carrier Zp \\<Longrightarrow> \\<ominus> (\\<ominus> ?x) = ?x\n  \\<ominus> \\<zero> = \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp;\n   ?z \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> (?y \\<oplus> ?z) =\n                    ?y \\<oplus> (?x \\<oplus> ?z)\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp;\n   ?z \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?z \\<otimes> (?x \\<oplus> ?y) =\n                    ?z \\<otimes> ?x \\<oplus> ?z \\<otimes> ?y\n  ?x \\<in> carrier Zp \\<Longrightarrow> \\<zero> \\<otimes> ?x = \\<zero>\n  ?x \\<in> carrier Zp \\<Longrightarrow> ?x \\<otimes> \\<zero> = \\<zero>\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> \\<ominus> ?x \\<otimes> ?y = \\<ominus> (?x \\<otimes> ?y)\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> \\<ominus> ?y = \\<ominus> (?x \\<otimes> ?y)\n\ngoal (1 subgoal):\n 1. f =\n    g \\<oplus>\n    [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n    ac_Zp (f \\<ominus> g)", "by simp"], ["proof (state)\nthis:\n  f =\n  g \\<oplus>\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n\ngoal (1 subgoal):\n 1. f \\<noteq> g \\<Longrightarrow>\n    \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "then"], ["proof (chain)\npicking this:\n  f =\n  g \\<oplus>\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)", "show ?thesis"], ["proof (prove)\nusing this:\n  f =\n  g \\<oplus>\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n\ngoal (1 subgoal):\n 1. \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "using mult_assoc"], ["proof (prove)\nusing this:\n  f =\n  g \\<oplus>\n  [p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes>\n  ac_Zp (f \\<ominus> g)\n  ?a \\<otimes> ?b \\<otimes> ?c = ?a \\<otimes> (?b \\<otimes> ?c)\n\ngoal (1 subgoal):\n 1. \\<exists>h.\n       h \\<in> carrier Zp \\<and>\n       f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h", "by (metis \"0\" False R.m_closed R.r_right_minus_eq \\<open>[p] \\<cdot> \\<one> [^] k \\<otimes> [p] \\<cdot> \\<one> [^] m \\<otimes> ac_Zp (f \\<ominus> g) \\<in> carrier Zp\\<close> ac_Zp_in_Zp assms(1) assms(2) m_def p_pow_car)"], ["proof (state)\nthis:\n  \\<exists>h.\n     h \\<in> carrier Zp \\<and>\n     f = g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) eq_residue_mod':\n  assumes \"f \\<in> carrier Zp\"\n  assumes \"g \\<in> carrier Zp\"\n  assumes \"f k = g k\"\n  obtains h where  \"h \\<in> carrier Zp \\<and> f = g \\<oplus> (\\<p>[^]k)\\<otimes>h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h.\n        h \\<in> carrier Zp \\<and>\n        f =\n        g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms eq_residue_mod"], ["proof (prove)\nusing this:\n  f \\<in> carrier Zp\n  g \\<in> carrier Zp\n  f k = g k\n  \\<lbrakk>?f \\<in> carrier Zp; ?g \\<in> carrier Zp; ?f ?k = ?g ?k\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h.\n                       h \\<in> carrier Zp \\<and>\n                       ?f =\n                       ?g \\<oplus> [p] \\<cdot> \\<one> [^] ?k \\<otimes> h\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        h \\<in> carrier Zp \\<and>\n        f =\n        g \\<oplus> [p] \\<cdot> \\<one> [^] k \\<otimes> h \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by meson"], ["", "text\\<open>Valuations of integers which do not divide $p$:\\<close>"], ["", "lemma(in padic_integers) ord_Zp_p_nat_unit:\n  assumes \"(n::nat) mod p \\<noteq> 0\"\n  shows \"ord_Zp ([n]\\<cdot>\\<one>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = 0", "using ord_equals[of \"[n]\\<cdot>\\<one>\" \"0::nat\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>[n] \\<cdot> \\<one> \\<in> carrier Zp;\n   ([n] \\<cdot> \\<one>) (Suc 0) \\<noteq> 0;\n   ([n] \\<cdot> \\<one>) 0 = 0\\<rbrakk>\n  \\<Longrightarrow> ord_Zp ([n] \\<cdot> \\<one>) = int 0\n\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = 0", "by (simp add: Zp_nat_inc_res assms)"], ["", "lemma(in padic_integers) val_Zp_p_nat_unit:\n  assumes \"(n::nat) mod p \\<noteq> 0\"\n  shows \"val_Zp ([n]\\<cdot>\\<one>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp ([n] \\<cdot> \\<one>) = 0", "unfolding val_Zp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if [n] \\<cdot> \\<one> = \\<zero> then \\<infinity>\n     else eint (padic_val p ([n] \\<cdot> \\<one>))) =\n    0", "using assms ord_Zp_def ord_Zp_p_nat_unit ord_of_nonzero(1) zero_eint_def"], ["proof (prove)\nusing this:\n  int n mod p \\<noteq> 0\n  ord_Zp = padic_val p\n  int ?n mod p \\<noteq> 0 \\<Longrightarrow> ord_Zp ([?n] \\<cdot> \\<one>) = 0\n  \\<lbrakk>?x \\<in> carrier Zp; 0 \\<le> ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<noteq> \\<zero>\n  0 = eint 0\n\ngoal (1 subgoal):\n 1. (if [n] \\<cdot> \\<one> = \\<zero> then \\<infinity>\n     else eint (padic_val p ([n] \\<cdot> \\<one>))) =\n    0", "by auto"], ["", "lemma(in padic_integers) nat_unit:\n  assumes \"(n::nat) mod p \\<noteq> 0\"\n  shows \"([n]\\<cdot>\\<one>) \\<in> Units Zp \""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<in> Units Zp", "using Zp_nat_mult_closed  val_Zp_p_nat_unit"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier Zp \\<Longrightarrow> [?n] \\<cdot> ?x \\<in> carrier Zp\n  int ?n mod p \\<noteq> 0 \\<Longrightarrow> val_Zp ([?n] \\<cdot> \\<one>) = 0\n\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<in> Units Zp", "by (simp add: assms val_Zp_0_imp_unit ord_Zp_p_nat_unit)"], ["", "lemma(in padic_integers) ord_Zp_p_int_unit:\n  assumes \"(n::int) mod p \\<noteq> 0\"\n  shows \"ord_Zp ([n]\\<cdot>\\<one>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = 0", "by (metis One_nat_def Zp_int_inc_closed Zp_int_inc_res assms mod_by_1 of_nat_0 ord_equals power_0 power_one_right)"], ["", "lemma(in padic_integers) val_Zp_p_int_unit:\n  assumes \"(n::int) mod p \\<noteq> 0\"\n  shows \"val_Zp ([n]\\<cdot>\\<one>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp ([n] \\<cdot> \\<one>) = 0", "unfolding val_Zp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if [n] \\<cdot> \\<one> = \\<zero> then \\<infinity>\n     else eint (padic_val p ([n] \\<cdot> \\<one>))) =\n    0", "using assms ord_Zp_def ord_Zp_p_int_unit ord_of_nonzero(1) zero_eint_def"], ["proof (prove)\nusing this:\n  n mod p \\<noteq> 0\n  ord_Zp = padic_val p\n  ?n mod p \\<noteq> 0 \\<Longrightarrow> ord_Zp ([?n] \\<cdot> \\<one>) = 0\n  \\<lbrakk>?x \\<in> carrier Zp; 0 \\<le> ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<noteq> \\<zero>\n  0 = eint 0\n\ngoal (1 subgoal):\n 1. (if [n] \\<cdot> \\<one> = \\<zero> then \\<infinity>\n     else eint (padic_val p ([n] \\<cdot> \\<one>))) =\n    0", "by auto"], ["", "lemma(in padic_integers) int_unit:\n  assumes \"(n::int) mod p \\<noteq> 0\"\n  shows \"([n]\\<cdot>\\<one>) \\<in> Units Zp \""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<in> Units Zp", "by (simp add: assms val_Zp_0_imp_unit val_Zp_p_int_unit)"], ["", "lemma(in padic_integers) int_decomp_ord:\n  assumes \"n = l*(p^k)\"\n  assumes \"l mod p \\<noteq> 0\"\n  shows \"ord_Zp ([n]\\<cdot>\\<one>) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = int k", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = int k", "have 0: \"n = l * (p^k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = l * p ^ k", "using assms(1)"], ["proof (prove)\nusing this:\n  n = l * p ^ k\n\ngoal (1 subgoal):\n 1. n = l * p ^ k", "by simp"], ["proof (state)\nthis:\n  n = l * p ^ k\n\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = int k", "then"], ["proof (chain)\npicking this:\n  n = l * p ^ k", "have \"(l * (p ^ k) mod (p ^ (Suc k))) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  n = l * p ^ k\n\ngoal (1 subgoal):\n 1. l * p ^ k mod p ^ Suc k \\<noteq> 0", "using Zp_def Zp_nat_inc_zero assms(2) p_nonzero nonzero_memE\n      padic_integers_axioms R.int_inc_zero nonzero_memE(2)"], ["proof (prove)\nusing this:\n  n = l * p ^ k\n  Zp \\<equiv> padic_int p\n  [0] \\<cdot> ?x = \\<zero>\n  l mod p \\<noteq> 0\n  [p] \\<cdot> \\<one> \\<in> nonzero Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<in> carrier Zp\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n  padic_integers p\n  [0] \\<cdot> \\<one> = \\<zero>\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ?a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. l * p ^ k mod p ^ Suc k \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  l * p ^ k mod p ^ Suc k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = int k", "then"], ["proof (chain)\npicking this:\n  l * p ^ k mod p ^ Suc k \\<noteq> 0", "have 3: \"(l * p ^ k) mod  (p ^ (Suc k)) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  l * p ^ k mod p ^ Suc k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. l * p ^ k mod p ^ Suc k \\<noteq> 0", "by presburger"], ["proof (state)\nthis:\n  l * p ^ k mod p ^ Suc k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = int k", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = int k", "using \"0\" \"3\" Zp_int_inc_res ord_equals"], ["proof (prove)\nusing this:\n  n = l * p ^ k\n  l * p ^ k mod p ^ Suc k \\<noteq> 0\n  ([?n] \\<cdot> \\<one>) ?k = ?n mod p ^ ?k\n  \\<lbrakk>?x \\<in> carrier Zp; ?x (Suc ?n) \\<noteq> 0; ?x ?n = 0\\<rbrakk>\n  \\<Longrightarrow> ord_Zp ?x = int ?n\n\ngoal (1 subgoal):\n 1. ord_Zp ([n] \\<cdot> \\<one>) = int k", "by auto"], ["proof (state)\nthis:\n  ord_Zp ([n] \\<cdot> \\<one>) = int k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) int_decomp_val:\n  assumes \"n = l*(p^k)\"\n  assumes \"l mod p \\<noteq> 0\"\n  shows \"val_Zp ([n]\\<cdot>\\<one>) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp ([n] \\<cdot> \\<one>) = eint (int k)", "using Zp_def assms(1) assms(2) R.int_inc_closed ord_of_nonzero(1) int_decomp_ord padic_integers_axioms val_ord_Zp"], ["proof (prove)\nusing this:\n  Zp \\<equiv> padic_int p\n  n = l * p ^ k\n  l mod p \\<noteq> 0\n  [?n] \\<cdot> \\<one> \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; 0 \\<le> ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ?x \\<noteq> \\<zero>\n  \\<lbrakk>?n = ?l * p ^ ?k; ?l mod p \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> ord_Zp ([?n] \\<cdot> \\<one>) = int ?k\n  padic_integers p\n  ?a \\<noteq> \\<zero> \\<Longrightarrow> val_Zp ?a = eint (ord_Zp ?a)\n\ngoal (1 subgoal):\n 1. val_Zp ([n] \\<cdot> \\<one>) = eint (int k)", "by auto"], ["", "text\\<open>$\\mathbb{Z}_p$ has characteristic zero:\\<close>"], ["", "lemma(in padic_integers) Zp_char_0:\n  assumes \"(n::int) > 0\"\n  shows \"[n]\\<cdot>\\<one> \\<noteq> \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "have \"prime (nat p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime (nat p)", "using prime prime_nat_iff_prime"], ["proof (prove)\nusing this:\n  prime p\n  prime (nat ?k) = prime ?k\n\ngoal (1 subgoal):\n 1. prime (nat p)", "by blast"], ["proof (state)\nthis:\n  prime (nat p)\n\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "then"], ["proof (chain)\npicking this:\n  prime (nat p)", "obtain l0 k where 0: \"nat n = l0*((nat p)^k) \\<and> \\<not> (nat p) dvd l0 \""], ["proof (prove)\nusing this:\n  prime (nat p)\n\ngoal (1 subgoal):\n 1. (\\<And>l0 k.\n        nat n = l0 * nat p ^ k \\<and> \\<not> nat p dvd l0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using prime assms prime_power_canonical[of \"nat p\" \"nat n\"]"], ["proof (prove)\nusing this:\n  prime (nat p)\n  prime p\n  0 < n\n  \\<lbrakk>prime (nat p); 0 < nat n\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k na.\n                       \\<not> nat p dvd na \\<and> nat n = na * nat p ^ k\n\ngoal (1 subgoal):\n 1. (\\<And>l0 k.\n        nat n = l0 * nat p ^ k \\<and> \\<not> nat p dvd l0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  nat n = l0 * nat p ^ k \\<and> \\<not> nat p dvd l0\n\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "obtain l where l_def: \"l = int l0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l. l = int l0 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  l = int l0\n\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "have 1: \"n = l*(p^k) \\<and> \\<not> p dvd l \""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = l * p ^ k \\<and> \\<not> p dvd l", "using 0 l_def"], ["proof (prove)\nusing this:\n  nat n = l0 * nat p ^ k \\<and> \\<not> nat p dvd l0\n  l = int l0\n\ngoal (1 subgoal):\n 1. n = l * p ^ k \\<and> \\<not> p dvd l", "by (smt assms int_dvd_int_iff int_nat_eq of_nat_mult of_nat_power prime prime_gt_0_int)"], ["proof (state)\nthis:\n  n = l * p ^ k \\<and> \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "apply(cases \"l = 1\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. l = 1 \\<Longrightarrow> [n] \\<cdot> \\<one> \\<noteq> \\<zero>\n 2. l \\<noteq> 1 \\<Longrightarrow> [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "using 1 p_pow_nonzero(2) p_pow_rep0"], ["proof (prove)\nusing this:\n  n = l * p ^ k \\<and> \\<not> p dvd l\n  [p] \\<cdot> \\<one> [^] ?n \\<noteq> \\<zero>\n  [p] \\<cdot> \\<one> [^] ?n = [(p ^ ?n)] \\<cdot> \\<one>\n\ngoal (2 subgoals):\n 1. l = 1 \\<Longrightarrow> [n] \\<cdot> \\<one> \\<noteq> \\<zero>\n 2. l \\<noteq> 1 \\<Longrightarrow> [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<noteq> 1 \\<Longrightarrow> [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "using 1"], ["proof (prove)\nusing this:\n  n = l * p ^ k \\<and> \\<not> p dvd l\n\ngoal (1 subgoal):\n 1. l \\<noteq> 1 \\<Longrightarrow> [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "by (simp add: dvd_eq_mod_eq_0 int_decomp_ord ord_of_nonzero(1))"], ["proof (state)\nthis:\n  [n] \\<cdot> \\<one> \\<noteq> \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma(in padic_integers) Zp_char_0':\n  assumes \"(n::nat) > 0\"\n  shows \"[n]\\<cdot>\\<one> \\<noteq> \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "have \"[n]\\<cdot>\\<one> = [(int n)]\\<cdot>\\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> = [int n] \\<cdot> \\<one>", "using assms"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> = [int n] \\<cdot> \\<one>", "by (simp add: add_pow_def int_pow_int)"], ["proof (state)\nthis:\n  [n] \\<cdot> \\<one> = [int n] \\<cdot> \\<one>\n\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "then"], ["proof (chain)\npicking this:\n  [n] \\<cdot> \\<one> = [int n] \\<cdot> \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  [n] \\<cdot> \\<one> = [int n] \\<cdot> \\<one>\n\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "using assms Zp_char_0[of \"int n\"]"], ["proof (prove)\nusing this:\n  [n] \\<cdot> \\<one> = [int n] \\<cdot> \\<one>\n  0 < n\n  0 < int n \\<Longrightarrow> [int n] \\<cdot> \\<one> \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. [n] \\<cdot> \\<one> \\<noteq> \\<zero>", "by simp"], ["proof (state)\nthis:\n  [n] \\<cdot> \\<one> \\<noteq> \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in domain) not_eq_diff_nonzero:\n  assumes \"a \\<noteq> b\"\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in>carrier R\"\n  shows \"a \\<ominus> b \\<in> nonzero R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<ominus> b \\<in> nonzero R", "by (simp add: nonzero_def assms(1) assms(2) assms(3))"], ["", "lemma (in domain) minus_a_inv:\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  shows \"a \\<ominus> b = \\<ominus> (b \\<ominus> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<ominus> b = \\<ominus> (b \\<ominus> a)", "by (simp add: add.inv_mult_group assms(1) assms(2) minus_eq)"], ["", "lemma(in ring) plus_diff_simp:\n  assumes \"a \\<in> carrier R\"\n  assumes \"b \\<in> carrier R\"\n  assumes \"c \\<in> carrier R\"\n  assumes  \"X = a \\<ominus> b\"\n  assumes \"Y = c \\<ominus> a\"\n  shows \"X \\<oplus> Y = c \\<ominus> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<oplus> Y = c \\<ominus> b", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  b \\<in> carrier R\n  c \\<in> carrier R\n  X = a \\<ominus> b\n  Y = c \\<ominus> a\n\ngoal (1 subgoal):\n 1. X \\<oplus> Y = c \\<ominus> b", "unfolding a_minus_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  b \\<in> carrier R\n  c \\<in> carrier R\n  X = a \\<oplus> \\<ominus> b\n  Y = c \\<oplus> \\<ominus> a\n\ngoal (1 subgoal):\n 1. X \\<oplus> Y = c \\<oplus> \\<ominus> b", "using ring_simprules"], ["proof (prove)\nusing this:\n  a \\<in> carrier R\n  b \\<in> carrier R\n  c \\<in> carrier R\n  X = a \\<oplus> \\<ominus> b\n  Y = c \\<oplus> \\<ominus> a\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> ?y \\<in> carrier R\n  \\<zero> \\<in> carrier R\n  ?x \\<in> carrier R \\<Longrightarrow> \\<ominus> ?x \\<in> carrier R\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<ominus> ?y \\<in> carrier R\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<in> carrier R\n  \\<one> \\<in> carrier R\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R;\n   ?z \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> ?y \\<oplus> ?z =\n                    ?x \\<oplus> (?y \\<oplus> ?z)\n  ?x \\<in> carrier R \\<Longrightarrow> \\<zero> \\<oplus> ?x = ?x\n  ?x \\<in> carrier R \\<Longrightarrow> \\<ominus> ?x \\<oplus> ?x = \\<zero>\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> ?y = ?y \\<oplus> ?x\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R;\n   ?z \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<otimes> ?z =\n                    ?x \\<otimes> (?y \\<otimes> ?z)\n  ?x \\<in> carrier R \\<Longrightarrow> \\<one> \\<otimes> ?x = ?x\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R;\n   ?z \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> (?x \\<oplus> ?y) \\<otimes> ?z =\n                    ?x \\<otimes> ?z \\<oplus> ?y \\<otimes> ?z\n  ?x \\<ominus> ?y = ?x \\<oplus> \\<ominus> ?y\n  ?x \\<in> carrier R \\<Longrightarrow> ?x \\<oplus> \\<zero> = ?x\n  ?x \\<in> carrier R \\<Longrightarrow> ?x \\<oplus> \\<ominus> ?x = \\<zero>\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> (\\<ominus> ?x \\<oplus> ?y) = ?y\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> \\<ominus> ?x \\<oplus> (?x \\<oplus> ?y) = ?y\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> \\<ominus> (?x \\<oplus> ?y) =\n                    \\<ominus> ?x \\<oplus> \\<ominus> ?y\n  ?x \\<in> carrier R \\<Longrightarrow> \\<ominus> (\\<ominus> ?x) = ?x\n  \\<ominus> \\<zero> = \\<zero>\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R;\n   ?z \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus> (?y \\<oplus> ?z) =\n                    ?y \\<oplus> (?x \\<oplus> ?z)\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R;\n   ?z \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?z \\<otimes> (?x \\<oplus> ?y) =\n                    ?z \\<otimes> ?x \\<oplus> ?z \\<otimes> ?y\n  ?x \\<in> carrier R \\<Longrightarrow> \\<zero> \\<otimes> ?x = \\<zero>\n  ?x \\<in> carrier R \\<Longrightarrow> ?x \\<otimes> \\<zero> = \\<zero>\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> \\<ominus> ?x \\<otimes> ?y = \\<ominus> (?x \\<otimes> ?y)\n  \\<lbrakk>?x \\<in> carrier R; ?y \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> \\<ominus> ?y = \\<ominus> (?x \\<otimes> ?y)\n\ngoal (1 subgoal):\n 1. X \\<oplus> Y = c \\<oplus> \\<ominus> b", "by (simp add: r_neg r_neg2)"], ["", "lemma (in padic_integers) Zp_residue_eq:\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"val_Zp (a \\<ominus> b) > k\"\n  shows \"(a k) = (b k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a k = b k", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. a k = b k", "have 0: \"(a \\<ominus> b) k = a k \\<ominus>\\<^bsub>Zp_res_ring k\\<^esub> b k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<ominus> b) k =\n    a k \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier Zp\n  b \\<in> carrier Zp\n  eint (int k) < val_Zp (a \\<ominus> b)\n\ngoal (1 subgoal):\n 1. (a \\<ominus> b) k =\n    a k \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k", "by (simp add: residue_of_diff)"], ["proof (state)\nthis:\n  (a \\<ominus> b) k = a k \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k\n\ngoal (1 subgoal):\n 1. a k = b k", "have 1: \"(a \\<ominus> b) k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<ominus> b) k = 0", "using assms zero_below_val"], ["proof (prove)\nusing this:\n  a \\<in> carrier Zp\n  b \\<in> carrier Zp\n  eint (int k) < val_Zp (a \\<ominus> b)\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = \\<zero>\\<^bsub>residue_ring (?p ^ ?n)\\<^esub>\n  \\<lbrakk>prime ?p; ?x \\<in> padic_set ?p;\n   int ?n \\<le> padic_val ?p ?x\\<rbrakk>\n  \\<Longrightarrow> ?x ?n = 0\n\ngoal (1 subgoal):\n 1. (a \\<ominus> b) k = 0", "by (smt R.minus_closed Zp_def eint_ord_simps(2) padic_integers.p_res_ring_zero \n        padic_integers.residue_of_zero(1) padic_integers.val_ord_Zp padic_integers.zero_below_ord padic_integers_axioms)"], ["proof (state)\nthis:\n  (a \\<ominus> b) k = 0\n\ngoal (1 subgoal):\n 1. a k = b k", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a k = b k", "apply(cases \"k = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow> a k = b k\n 2. k \\<noteq> 0 \\<Longrightarrow> a k = b k", "apply (metis assms(1) assms(2) p_res_ring_0' residues_closed)"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> a k = b k", "using 0 1 assms  p_residues R_cring Zp_def assms(1) assms(2) cring_def padic_set_res_closed \n           residues.res_zero_eq ring.r_right_minus_eq"], ["proof (prove)\nusing this:\n  (a \\<ominus> b) k = a k \\<ominus>\\<^bsub>residue_ring (p ^ k)\\<^esub> b k\n  (a \\<ominus> b) k = 0\n  a \\<in> carrier Zp\n  b \\<in> carrier Zp\n  eint (int k) < val_Zp (a \\<ominus> b)\n  0 < ?m \\<Longrightarrow> residues (p ^ ?m)\n  0 < ?m \\<Longrightarrow> cring (residue_ring (p ^ ?m))\n  Zp \\<equiv> padic_int p\n  a \\<in> carrier Zp\n  b \\<in> carrier Zp\n  cring ?R \\<equiv> ring ?R \\<and> Group.comm_monoid ?R\n  ?f \\<in> padic_set ?p \\<Longrightarrow>\n  ?f ?m \\<in> carrier (residue_ring (?p ^ ?m))\n  residues ?m \\<Longrightarrow> \\<zero>\\<^bsub>residue_ring ?m\\<^esub> = 0\n  \\<lbrakk>ring ?R; ?a \\<in> carrier ?R; ?b \\<in> carrier ?R\\<rbrakk>\n  \\<Longrightarrow> (?a \\<ominus>\\<^bsub>?R\\<^esub> ?b =\n                     \\<zero>\\<^bsub>?R\\<^esub>) =\n                    (?a = ?b)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow> a k = b k", "by (metis Zp_defs(3) linorder_neqE_nat not_less0 p_res_ring_zero)"], ["proof (state)\nthis:\n  a k = b k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in padic_integers) Zp_residue_eq2:\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"(a k) = (b k)\" \n  assumes \"a \\<noteq> b\"\n  shows \"val_Zp (a \\<ominus> b) \\<ge> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eint (int k) \\<le> val_Zp (a \\<ominus> b)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. eint (int k) \\<le> val_Zp (a \\<ominus> b)", "have \"(a \\<ominus> b) k = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<ominus> b) k = 0", "using assms residue_of_diff"], ["proof (prove)\nusing this:\n  a \\<in> carrier Zp\n  b \\<in> carrier Zp\n  a k = b k\n  a \\<noteq> b\n  ?b \\<in> carrier Zp \\<Longrightarrow>\n  (?a \\<ominus> ?b) ?k =\n  ?a ?k \\<ominus>\\<^bsub>residue_ring (p ^ ?k)\\<^esub> ?b ?k\n\ngoal (1 subgoal):\n 1. (a \\<ominus> b) k = 0", "by (simp add: Zp_def padic_integers.residue_of_diff' padic_integers_axioms)"], ["proof (state)\nthis:\n  (a \\<ominus> b) k = 0\n\ngoal (1 subgoal):\n 1. eint (int k) \\<le> val_Zp (a \\<ominus> b)", "then"], ["proof (chain)\npicking this:\n  (a \\<ominus> b) k = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  (a \\<ominus> b) k = 0\n\ngoal (1 subgoal):\n 1. eint (int k) \\<le> val_Zp (a \\<ominus> b)", "using assms(1) assms(2) ord_Zp_def ord_Zp_geq val_Zp_def"], ["proof (prove)\nusing this:\n  (a \\<ominus> b) k = 0\n  a \\<in> carrier Zp\n  b \\<in> carrier Zp\n  ord_Zp = padic_val p\n  \\<lbrakk>?x \\<in> carrier Zp; ?x ?n = 0; ?x \\<noteq> \\<zero>\\<rbrakk>\n  \\<Longrightarrow> int ?n \\<le> ord_Zp ?x\n  val_Zp =\n  (\\<lambda>x. if x = \\<zero> then \\<infinity> else eint (padic_val p x))\n\ngoal (1 subgoal):\n 1. eint (int k) \\<le> val_Zp (a \\<ominus> b)", "by auto"], ["proof (state)\nthis:\n  eint (int k) \\<le> val_Zp (a \\<ominus> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in padic_integers) equal_val_Zp:\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"c \\<in> carrier Zp\"\n  assumes \"val_Zp a = val_Zp b\"\n  assumes \"val_Zp (c \\<ominus> a) > val_Zp b\"\n  shows \"val_Zp c = val_Zp b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp b", "have 0: \"val_Zp c = val_Zp (c \\<ominus> a \\<oplus> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp (c \\<ominus> a \\<oplus> a)", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier Zp\n  b \\<in> carrier Zp\n  c \\<in> carrier Zp\n  val_Zp a = val_Zp b\n  val_Zp b < val_Zp (c \\<ominus> a)\n\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp (c \\<ominus> a \\<oplus> a)", "by (simp add: R.l_neg R.minus_eq add_assoc)"], ["proof (state)\nthis:\n  val_Zp c = val_Zp (c \\<ominus> a \\<oplus> a)\n\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp b", "have \"val_Zp c \\<ge> min (val_Zp (c \\<ominus> a)) (val_Zp a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (val_Zp (c \\<ominus> a)) (val_Zp a) \\<le> val_Zp c", "using val_Zp_ultrametric[of \"(c \\<ominus> a)\" a]  assms(1)\n          assms(3) ord_Zp_ultrametric_eq''"], ["proof (prove)\nusing this:\n  \\<lbrakk>c \\<ominus> a \\<in> carrier Zp; a \\<in> carrier Zp\\<rbrakk>\n  \\<Longrightarrow> min (val_Zp (c \\<ominus> a)) (val_Zp a)\n                    \\<le> val_Zp (c \\<ominus> a \\<oplus> a)\n  a \\<in> carrier Zp\n  c \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> nonzero Zp; ?y \\<in> nonzero Zp;\n   ord_Zp ?y < ord_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> ord_Zp (?y \\<ominus> ?x) = ord_Zp ?y\n\ngoal (1 subgoal):\n 1. min (val_Zp (c \\<ominus> a)) (val_Zp a) \\<le> val_Zp c", "by (simp add: \"0\")"], ["proof (state)\nthis:\n  min (val_Zp (c \\<ominus> a)) (val_Zp a) \\<le> val_Zp c\n\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp b", "then"], ["proof (chain)\npicking this:\n  min (val_Zp (c \\<ominus> a)) (val_Zp a) \\<le> val_Zp c", "have 1: \"val_Zp c \\<ge> (val_Zp a)\""], ["proof (prove)\nusing this:\n  min (val_Zp (c \\<ominus> a)) (val_Zp a) \\<le> val_Zp c\n\ngoal (1 subgoal):\n 1. val_Zp a \\<le> val_Zp c", "by (metis assms(4) assms(5) dual_order.order_iff_strict less_le_trans min_le_iff_disj)"], ["proof (state)\nthis:\n  val_Zp a \\<le> val_Zp c\n\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp b", "have  \"val_Zp c = (val_Zp a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp a", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. val_Zp c \\<noteq> val_Zp a \\<Longrightarrow> False", "assume A: \"val_Zp c \\<noteq> val_Zp a\""], ["proof (state)\nthis:\n  val_Zp c \\<noteq> val_Zp a\n\ngoal (1 subgoal):\n 1. val_Zp c \\<noteq> val_Zp a \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  val_Zp c \\<noteq> val_Zp a", "have 0: \"val_Zp c > val_Zp a\""], ["proof (prove)\nusing this:\n  val_Zp c \\<noteq> val_Zp a\n\ngoal (1 subgoal):\n 1. val_Zp a < val_Zp c", "using 1 A"], ["proof (prove)\nusing this:\n  val_Zp c \\<noteq> val_Zp a\n  val_Zp a \\<le> val_Zp c\n  val_Zp c \\<noteq> val_Zp a\n\ngoal (1 subgoal):\n 1. val_Zp a < val_Zp c", "by auto"], ["proof (state)\nthis:\n  val_Zp a < val_Zp c\n\ngoal (1 subgoal):\n 1. val_Zp c \\<noteq> val_Zp a \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  val_Zp a < val_Zp c", "have \"val_Zp (c \\<oplus> (a \\<ominus> c)) \\<ge> min (val_Zp c) (val_Zp (a \\<ominus> c))\""], ["proof (prove)\nusing this:\n  val_Zp a < val_Zp c\n\ngoal (1 subgoal):\n 1. min (val_Zp c) (val_Zp (a \\<ominus> c))\n    \\<le> val_Zp (c \\<oplus> (a \\<ominus> c))", "by (simp add: assms(1) assms(3) val_Zp_ultrametric)"], ["proof (state)\nthis:\n  min (val_Zp c) (val_Zp (a \\<ominus> c))\n  \\<le> val_Zp (c \\<oplus> (a \\<ominus> c))\n\ngoal (1 subgoal):\n 1. val_Zp c \\<noteq> val_Zp a \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  min (val_Zp c) (val_Zp (a \\<ominus> c))\n  \\<le> val_Zp (c \\<oplus> (a \\<ominus> c))", "have 1: \"val_Zp a \\<ge> min (val_Zp c) (val_Zp (a \\<ominus> c))\""], ["proof (prove)\nusing this:\n  min (val_Zp c) (val_Zp (a \\<ominus> c))\n  \\<le> val_Zp (c \\<oplus> (a \\<ominus> c))\n\ngoal (1 subgoal):\n 1. min (val_Zp c) (val_Zp (a \\<ominus> c)) \\<le> val_Zp a", "using assms(1) assms(3) assms(4) assms(5) val_Zp_ultrametric_eq' 0"], ["proof (prove)\nusing this:\n  min (val_Zp c) (val_Zp (a \\<ominus> c))\n  \\<le> val_Zp (c \\<oplus> (a \\<ominus> c))\n  a \\<in> carrier Zp\n  c \\<in> carrier Zp\n  val_Zp a = val_Zp b\n  val_Zp b < val_Zp (c \\<ominus> a)\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp;\n   val_Zp ?y < val_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> val_Zp (?x \\<ominus> ?y) = val_Zp ?y\n  val_Zp a < val_Zp c\n\ngoal (1 subgoal):\n 1. min (val_Zp c) (val_Zp (a \\<ominus> c)) \\<le> val_Zp a", "by auto"], ["proof (state)\nthis:\n  min (val_Zp c) (val_Zp (a \\<ominus> c)) \\<le> val_Zp a\n\ngoal (1 subgoal):\n 1. val_Zp c \\<noteq> val_Zp a \\<Longrightarrow> False", "have 2: \"val_Zp (a \\<ominus> c) > val_Zp a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp a < val_Zp (a \\<ominus> c)", "using \"0\" assms(1) assms(3) assms(4) assms(5) \n        val_Zp_ultrametric_eq'"], ["proof (prove)\nusing this:\n  val_Zp a < val_Zp c\n  a \\<in> carrier Zp\n  c \\<in> carrier Zp\n  val_Zp a = val_Zp b\n  val_Zp b < val_Zp (c \\<ominus> a)\n  \\<lbrakk>?x \\<in> carrier Zp; ?y \\<in> carrier Zp;\n   val_Zp ?y < val_Zp ?x\\<rbrakk>\n  \\<Longrightarrow> val_Zp (?x \\<ominus> ?y) = val_Zp ?y\n\ngoal (1 subgoal):\n 1. val_Zp a < val_Zp (a \\<ominus> c)", "by auto"], ["proof (state)\nthis:\n  val_Zp a < val_Zp (a \\<ominus> c)\n\ngoal (1 subgoal):\n 1. val_Zp c \\<noteq> val_Zp a \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  val_Zp a < val_Zp (a \\<ominus> c)", "have \"val_Zp a > val_Zp a\""], ["proof (prove)\nusing this:\n  val_Zp a < val_Zp (a \\<ominus> c)\n\ngoal (1 subgoal):\n 1. val_Zp a < val_Zp a", "using 0 1 2 val_Zp_of_a_inv"], ["proof (prove)\nusing this:\n  val_Zp a < val_Zp (a \\<ominus> c)\n  val_Zp a < val_Zp c\n  min (val_Zp c) (val_Zp (a \\<ominus> c)) \\<le> val_Zp a\n  val_Zp a < val_Zp (a \\<ominus> c)\n  ?a \\<in> carrier Zp \\<Longrightarrow> val_Zp ?a = val_Zp (\\<ominus> ?a)\n\ngoal (1 subgoal):\n 1. val_Zp a < val_Zp a", "by (metis assms(1) assms(3) assms(4) assms(5) val_Zp_ultrametric_eq')"], ["proof (state)\nthis:\n  val_Zp a < val_Zp a\n\ngoal (1 subgoal):\n 1. val_Zp c \\<noteq> val_Zp a \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  val_Zp a < val_Zp a", "show False"], ["proof (prove)\nusing this:\n  val_Zp a < val_Zp a\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  val_Zp c = val_Zp a\n\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp b", "then"], ["proof (chain)\npicking this:\n  val_Zp c = val_Zp a", "show ?thesis"], ["proof (prove)\nusing this:\n  val_Zp c = val_Zp a\n\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp b", "using assms(4)"], ["proof (prove)\nusing this:\n  val_Zp c = val_Zp a\n  val_Zp a = val_Zp b\n\ngoal (1 subgoal):\n 1. val_Zp c = val_Zp b", "by simp"], ["proof (state)\nthis:\n  val_Zp c = val_Zp b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in padic_integers) equal_val_Zp':\n  assumes \"a \\<in> carrier Zp\"\n  assumes \"b \\<in> carrier Zp\"\n  assumes \"c \\<in> carrier Zp\"\n  assumes \"val_Zp a = val_Zp b\"\n  assumes \"val_Zp c > val_Zp b\"\n  shows \"val_Zp (a \\<oplus> c) = val_Zp b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp (a \\<oplus> c) = val_Zp b", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. val_Zp (a \\<oplus> c) = val_Zp b", "have 0: \"val_Zp b < val_Zp (a \\<oplus> c \\<ominus> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp b < val_Zp (a \\<oplus> c \\<ominus> a)", "by (simp add: R.minus_eq nonzero_closed R.r_neg1 add_comm assms(1) assms(3) assms(5))"], ["proof (state)\nthis:\n  val_Zp b < val_Zp (a \\<oplus> c \\<ominus> a)\n\ngoal (1 subgoal):\n 1. val_Zp (a \\<oplus> c) = val_Zp b", "have 1: \"val_Zp a \\<noteq> val_Zp (\\<ominus> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp a \\<noteq> val_Zp (\\<ominus> c)", "using assms(3) assms(4) assms(5)"], ["proof (prove)\nusing this:\n  c \\<in> carrier Zp\n  val_Zp a = val_Zp b\n  val_Zp b < val_Zp c\n\ngoal (1 subgoal):\n 1. val_Zp a \\<noteq> val_Zp (\\<ominus> c)", "by (metis eq_iff not_less val_Zp_of_a_inv)"], ["proof (state)\nthis:\n  val_Zp a \\<noteq> val_Zp (\\<ominus> c)\n\ngoal (1 subgoal):\n 1. val_Zp (a \\<oplus> c) = val_Zp b", "then"], ["proof (chain)\npicking this:\n  val_Zp a \\<noteq> val_Zp (\\<ominus> c)", "show ?thesis"], ["proof (prove)\nusing this:\n  val_Zp a \\<noteq> val_Zp (\\<ominus> c)\n\ngoal (1 subgoal):\n 1. val_Zp (a \\<oplus> c) = val_Zp b", "by (meson \"0\" R.semiring_axioms assms(1) assms(2) assms(3) assms(4) equal_val_Zp semiring.semiring_simprules(1))"], ["proof (state)\nthis:\n  val_Zp (a \\<oplus> c) = val_Zp b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in padic_integers) val_Zp_of_minus:\n  assumes \"a \\<in> carrier Zp\"\n  shows \"val_Zp a = val_Zp (\\<ominus> a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_Zp a = val_Zp (\\<ominus> a)", "using assms not_nonzero_Zp ord_Zp_def ord_Zp_of_a_inv val_Zp_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier Zp\n  \\<lbrakk>?x \\<in> carrier Zp; ?x \\<notin> nonzero Zp\\<rbrakk>\n  \\<Longrightarrow> ?x = \\<zero>\n  ord_Zp = padic_val p\n  ?a \\<in> nonzero Zp \\<Longrightarrow> ord_Zp ?a = ord_Zp (\\<ominus> ?a)\n  val_Zp =\n  (\\<lambda>x. if x = \\<zero> then \\<infinity> else eint (padic_val p x))\n\ngoal (1 subgoal):\n 1. val_Zp a = val_Zp (\\<ominus> a)", "by auto"], ["", "end"]]}