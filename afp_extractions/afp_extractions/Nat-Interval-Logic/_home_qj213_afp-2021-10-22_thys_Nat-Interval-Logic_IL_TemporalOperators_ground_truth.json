{"file_name": "/home/qj213/afp-2021-10-22/thys/Nat-Interval-Logic/IL_TemporalOperators.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Nat-Interval-Logic", "problem_names": ["lemmas bool_op_rel_defs =\n  add_bool_def \n  mult_bool_def\n  less_bool_def\n  le_bool_def", "lemma UNIV_nat: \"\\<nat> = (UNIV::nat set)\"", "lemma \"\\<circle> t 10 [0\\<dots>]. (t + 10 > 10)\"", "lemma \"\\<circle> t 5 [0\\<dots>,10]. ([0::int,10,20,30,40,50,60,70,80,90] ! t < 80)\"", "lemma \"\\<ominus> t 5 [0\\<dots>,10]. ([0::int,10,20,30,40,50,60,70,80,90] ! t < 80)\"", "lemmas iTL_Next_defs =\n  iNext_def iLast_def\n  iNextWeak_def iLastWeak_def\n  iNextStrong_def iLastStrong_def", "lemmas iTL_defs = \n  iAll_def iEx_def\n  iUntil_def iSince_def\n  iWeakUntil_def iWeakSince_def\n  iRelease_def iTrigger_def\n  iTL_Next_defs", "lemma \n  iexI[intro]:      \"\\<lbrakk> P t; t \\<in> I \\<rbrakk> \\<Longrightarrow> \\<diamond> t I. P t\" and\n  rev_iexI[intro?]: \"\\<lbrakk> t \\<in> I; P t \\<rbrakk> \\<Longrightarrow> \\<diamond> t I. P t\" and\n  iexE[elim!]:      \"\\<lbrakk> \\<diamond> t I. P t; \\<And>t. \\<lbrakk> t \\<in> I; P t \\<rbrakk> \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\"", "lemma\n  iallI[intro!]: \"(\\<And>t. t \\<in> I \\<Longrightarrow> P t) \\<Longrightarrow> \\<box> t I. P t\" and\n  ispec[dest?]: \"\\<lbrakk> \\<box> t I. P t; t \\<in> I \\<rbrakk> \\<Longrightarrow> P t\" and\n  iallE[elim]: \"\\<lbrakk> \\<box> t I. P t; P t \\<Longrightarrow> Q; t \\<notin> I \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\"", "lemma\n  iuntilI[intro]: \"\n    \\<lbrakk> Q t; (\\<And>t'. t' \\<in> I \\<down>< t\\<Longrightarrow> P t'); t \\<in> I \\<rbrakk> \\<Longrightarrow> P t'. t' \\<U> t I. Q t\" and\n  rev_iuntilI[intro?]: \"\n    \\<lbrakk> t \\<in> I; Q t; (\\<And>t'. t' \\<in> I \\<down>< t\\<Longrightarrow> P t') \\<rbrakk> \\<Longrightarrow> P t'. t' \\<U> t I. Q t\"", "lemma\n  iuntilE[elim]: \"\n    \\<lbrakk> P' t'. t' \\<U> t I. P t; \\<And>t. \\<lbrakk> t \\<in> I; P t \\<rbrakk> \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\"", "lemma\n  isinceI[intro]: \"\n    \\<lbrakk> Q t; (\\<And>t'. t' \\<in> I \\<down>> t\\<Longrightarrow> P t'); t \\<in> I \\<rbrakk> \\<Longrightarrow> P t'. t' \\<S> t I. Q t\" and\n  rev_isinceI[intro?]: \"\n    \\<lbrakk> t \\<in> I; Q t; (\\<And>t'. t' \\<in> I \\<down>> t\\<Longrightarrow> P t') \\<rbrakk> \\<Longrightarrow> P t'. t' \\<S> t I. Q t\"", "lemma\n  isinceE[elim]: \"\n    \\<lbrakk> P' t'. t' \\<S> t I. P t; \\<And>t. \\<lbrakk> t \\<in> I; P t \\<rbrakk> \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\"", "lemma iall_triv[simp]: \"(\\<box> t I. P) = ((\\<exists>t. t \\<in> I) \\<longrightarrow> P)\"", "lemma iex_triv[simp]: \"(\\<diamond> t I. P) = ((\\<exists>t. t \\<in> I) \\<and> P)\"", "lemma iex_conjL1: \"\n  (\\<diamond> t1 I1. (P1 t1 \\<and> (\\<diamond> t2 I2. P2 t1 t2))) = \n  (\\<diamond> t1 I1. \\<diamond> t2 I2. P1 t1 \\<and> P2 t1 t2)\"", "lemma iex_conjR1: \"\n  (\\<diamond> t1 I1. ((\\<diamond> t2 I2. P2 t1 t2) \\<and> P1 t1)) =\n  (\\<diamond> t1 I1. \\<diamond> t2 I2. P2 t1 t2 \\<and> P1 t1)\"", "lemma iex_conjL2: \"\n  (\\<diamond> t1 I1. (P1 t1 \\<and> (\\<diamond> t2 (I2 t1). P2 t1 t2))) = \n  (\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). P1 t1 \\<and> P2 t1 t2)\"", "lemma iex_conjR2: \"\n  (\\<diamond> t1 I1. ((\\<diamond> t2 (I2 t1). P2 t1 t2) \\<and> P1 t1)) = \n  (\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). P2 t1 t2 \\<and> P1 t1)\"", "lemma iex_commute: \"\n  (\\<diamond> t1 I1. \\<diamond> t2 I2. P t1 t2) = \n  (\\<diamond> t2 I2. \\<diamond> t1 I1. P t1 t2)\"", "lemma iall_conjL1: \"\n  I2 \\<noteq> {} \\<Longrightarrow>\n  (\\<box> t1 I1. (P1 t1 \\<and> (\\<box> t2 I2. P2 t1 t2))) = \n  (\\<box> t1 I1. \\<box> t2 I2. P1 t1 \\<and> P2 t1 t2)\"", "lemma iall_conjR1: \"\n  I2 \\<noteq> {} \\<Longrightarrow>\n  (\\<box> t1 I1. ((\\<box> t2 I2. P2 t1 t2) \\<and> P1 t1)) =\n  (\\<box> t1 I1. \\<box> t2 I2. P2 t1 t2 \\<and> P1 t1)\"", "lemma iall_conjL2: \"\n  \\<box> t1 I1. I2 t1 \\<noteq> {} \\<Longrightarrow>\n  (\\<box> t1 I1. (P1 t1 \\<and> (\\<box> t2 (I2 t1). P2 t1 t2))) = \n  (\\<box> t1 I1. \\<box> t2 (I2 t1). P1 t1 \\<and> P2 t1 t2)\"", "lemma iall_conjR2: \"\n  \\<box> t1 I1. I2 t1 \\<noteq> {} \\<Longrightarrow>\n  (\\<box> t1 I1. ((\\<box> t2 (I2 t1). P2 t1 t2) \\<and> P1 t1)) = \n  (\\<box> t1 I1. \\<box> t2 (I2 t1). P2 t1 t2 \\<and> P1 t1)\"", "lemma iall_commute: \"\n  (\\<box> t1 I1. \\<box> t2 I2. P t1 t2) = \n  (\\<box> t2 I2. \\<box> t1 I1. P t1 t2)\"", "lemma iall_conj_distrib: \"\n  (\\<box> t I. P t \\<and> Q t) = ((\\<box> t I. P t) \\<and> (\\<box> t I. Q t))\"", "lemma iex_disj_distrib: \"\n  (\\<diamond> t I. P t \\<or> Q t) = ((\\<diamond> t I. P t) \\<or> (\\<diamond> t I. Q t))\"", "lemma iall_conj_distrib2: \"\n  (\\<box> t1 I1. \\<box> t2 (I2 t1). P t1 t2 \\<and> Q t1 t2) = \n  ((\\<box> t1 I1. \\<box> t2 (I2 t1). P t1 t2) \\<and> (\\<box> t1 I1. \\<box> t2 (I2 t1). Q t1 t2))\"", "lemma iex_disj_distrib2: \"\n  (\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). P t1 t2 \\<or> Q t1 t2) = \n  ((\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). P t1 t2) \\<or> (\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). Q t1 t2))\"", "lemma iUntil_disj_distrib: \"\n  (P t1. t1 \\<U> t2 I. (Q1 t2 \\<or> Q2 t2)) = ((P t1. t1 \\<U> t2 I. Q1 t2) \\<or> (P t1. t1 \\<U> t2 I. Q2 t2))\"", "lemma iSince_disj_distrib: \"\n  (P t1. t1 \\<S> t2 I. (Q1 t2 \\<or> Q2 t2)) = ((P t1. t1 \\<S> t2 I. Q1 t2) \\<or> (P t1. t1 \\<S> t2 I. Q2 t2))\"", "lemma \n  iNext_iff: \"(\\<circle> t t0 I. P t) = (\\<box> t [\\<dots>0] \\<oplus> (inext t0 I). P t)\" and\n  iLast_iff: \"(\\<ominus> t t0 I. P t) = (\\<box> t [\\<dots>0] \\<oplus> (iprev t0 I). P t)\"", "lemma \n  iNext_iEx_iff: \"(\\<circle> t t0 I. P t) = (\\<diamond> t [\\<dots>0] \\<oplus> (inext t0 I). P t)\" and\n  iLast_iEx_iff: \"(\\<ominus> t t0 I. P t) = (\\<diamond> t [\\<dots>0] \\<oplus> (iprev t0 I). P t)\"", "lemma inext_singleton_cut_greater_not_empty_iff: \"\n  ({inext t0 I} \\<down>> t0 \\<noteq> {}) = (I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)\"", "lemma iprev_singleton_cut_less_not_empty_iff: \"\n  ({iprev t0 I} \\<down>< t0 \\<noteq> {}) = (I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)\"", "lemma inext_singleton_cut_greater_empty_iff: \"\n  ({inext t0 I} \\<down>> t0 = {}) = (I \\<down>> t0 = {} \\<or> t0 \\<notin> I)\"", "lemma iprev_singleton_cut_less_empty_iff: \"\n  ({iprev t0 I} \\<down>< t0 = {}) = (I \\<down>< t0 = {} \\<or> t0 \\<notin> I)\"", "lemma iNextWeak_iff : \"(\\<circle>\\<^sub>W t t0 I. P t) = ((\\<circle> t t0 I. P t) \\<or> (I \\<down>> t0 = {}) \\<or> t0 \\<notin> I)\"", "lemma iNextStrong_iff : \"(\\<circle>\\<^sub>S t t0 I. P t) = ((\\<circle> t t0 I. P t) \\<and> (I \\<down>> t0 \\<noteq> {}) \\<and> t0 \\<in> I)\"", "lemma iLastWeak_iff : \"(\\<ominus>\\<^sub>W t t0 I. P t) = ((\\<ominus> t t0 I. P t) \\<or> (I \\<down>< t0 = {}) \\<or> t0 \\<notin> I)\"", "lemma iLastStrong_iff : \"(\\<ominus>\\<^sub>S t t0 I. P t) = ((\\<ominus> t t0 I. P t) \\<and> (I \\<down>< t0 \\<noteq> {}) \\<and> t0 \\<in> I)\"", "lemmas iTL_Next_iff =\n  iNext_iff iLast_iff\n  iNextWeak_iff iNextStrong_iff\n  iLastWeak_iff iLastStrong_iff", "lemma \n  iNext_iff_singleton       : \"(\\<circle> t t0 I. P t) = (\\<box> t {inext t0 I}. P t)\" and\n  iLast_iff_singleton       : \"(\\<ominus> t t0 I. P t) = (\\<box> t {iprev t0 I}. P t)\"", "lemmas iNextLast_iff_singleton = iNext_iff_singleton iLast_iff_singleton", "lemma \n  iNext_iEx_iff_singleton   : \"(\\<circle> t t0 I. P t) = (\\<diamond> t {inext t0 I}. P t)\" and\n  iLast_iEx_iff_singleton   : \"(\\<ominus> t t0 I. P t) = (\\<diamond> t {iprev t0 I}. P t)\"", "lemma \n  iNextWeak_iAll_conv:  \"(\\<circle>\\<^sub>W t t0 I. P t) = (\\<box> t ({inext t0 I} \\<down>> t0). P t)\" and\n  iNextStrong_iEx_conv: \"(\\<circle>\\<^sub>S t t0 I. P t) = (\\<diamond> t ({inext t0 I} \\<down>> t0). P t)\" and\n  iLastWeak_iAll_conv:  \"(\\<ominus>\\<^sub>W t t0 I. P t) = (\\<box> t ({iprev t0 I} \\<down>< t0). P t)\" and\n  iLastStrong_iEx_conv: \"(\\<ominus>\\<^sub>S t t0 I. P t) = (\\<diamond> t ({iprev t0 I} \\<down>< t0). P t)\"", "lemma \n  iAll_True[simp]: \"\\<box> t I. True\" and\n  iAll_False[simp]: \"(\\<box> t I. False) = (I = {})\" and\n  iEx_True[simp]: \"(\\<diamond> t I. True) = (I \\<noteq> {})\" and\n  iEx_False[simp]: \"\\<not> (\\<diamond> t I. False)\"", "lemma empty_iff_iAll_False:   \"(I = {}) = (\\<box> t I. False)\"", "lemma not_empty_iff_iEx_True: \"(I \\<noteq> {}) = (\\<diamond> t I. True)\"", "lemma \n  iNext_True: \"\\<circle> t t0 I. True\" and\n  iNextWeak_True: \"(\\<circle>\\<^sub>W t t0 I. True)\" and\n  iNext_False: \"\\<not> (\\<circle> t t0 I. False)\" and\n  iNextStrong_False: \"\\<not> (\\<circle>\\<^sub>S t t0 I. False)\"", "lemma\n  iNextStrong_True: \"(\\<circle>\\<^sub>S t t0 I. True) = (I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)\" and\n  iNextWeak_False: \"(\\<not> (\\<circle>\\<^sub>W t t0 I. False)) = (I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)\"", "lemma \n  iLast_True:        \"\\<ominus> t t0 I. True\" and\n  iLastWeak_True:    \"(\\<ominus>\\<^sub>W t t0 I. True)\" and\n  iLast_False:       \"\\<not> (\\<ominus> t t0 I. False)\" and\n  iLastStrong_False: \"\\<not> (\\<ominus>\\<^sub>S t t0 I. False)\"", "lemma\n  iLastStrong_True:  \"(\\<ominus>\\<^sub>S t t0 I. True) = (I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)\" and\n  iLastWeak_False:   \"(\\<not> (\\<ominus>\\<^sub>W t t0 I. False)) = (I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)\"", "lemma iUntil_True_left[simp]: \"(True. t' \\<U> t I. Q t) = (\\<diamond> t I. Q t)\"", "lemma iUntil_True[simp]: \"(P t'. t' \\<U> t I. True) = (I \\<noteq> {})\"", "lemma iUntil_False_left[simp]: \"(False. t' \\<U> t I. Q t) = (I \\<noteq> {} \\<and> Q (iMin I))\"", "lemma iUntil_False[simp]: \"\\<not> (P t'. t' \\<U> t I. False)\"", "lemma iSince_True_left[simp]: \"(True. t' \\<S> t I. Q t) = (\\<diamond> t I. Q t)\"", "lemma iSince_True_if: \"\n  (P t'. t' \\<S> t I. True) = \n  (if finite I then I \\<noteq> {} else \\<diamond> t1 I. \\<box> t2 (I \\<down>> t1). P t2)\"", "lemma iSince_False_left[simp]: \"(False. t' \\<S> t I. Q t) = (finite I \\<and> I \\<noteq> {} \\<and> Q (Max I))\"", "lemma iSince_False[simp]: \"\\<not> (P t'. t' \\<S> t I. False)\"", "lemma iWeakUntil_True_left[simp]: \"True. t' \\<W> t I. Q t\"", "lemma iWeakUntil_True[simp]: \"P t'. t' \\<W> t I. True\"", "lemma iWeakUntil_False_left[simp]: \"(False. t' \\<W> t I. Q t) = (I = {} \\<or> Q (iMin I))\"", "lemma iWeakUntil_False[simp]: \"(P t'. t' \\<W> t I. False) = (\\<box> t I. P t)\"", "lemma iWeakSince_True_left[simp]: \"True. t' \\<B> t I. Q t\"", "lemma iWeakSince_True_disj: \"\n  (P t'. t' \\<B> t I. True) = \n  (I = {} \\<or> (\\<diamond> t1 I. \\<box> t2 (I \\<down>> t1). P t2))\"", "lemma iWeakSince_True_finite[simp]: \"finite I \\<Longrightarrow> (P t'. t' \\<B> t I. True)\"", "lemma iWeakSince_False_left[simp]: \"(False. t' \\<B> t I. Q t) = (I = {} \\<or> (finite I \\<and> Q (Max I)))\"", "lemma iWeakSince_False[simp]: \"(P t'. t' \\<B> t I. False) = (\\<box> t I. P t)\"", "lemma iRelease_True_left[simp]: \"(True. t' \\<R> t I. Q t) = (I = {} \\<or> Q (iMin I))\"", "lemma iRelease_True[simp]: \"P t'. t' \\<R> t I. True\"", "lemma iRelease_False_left[simp]: \"(False. t' \\<R> t I. Q t) = (\\<box> t I. Q t)\"", "lemma iRelease_False[simp]: \"(P t'. t' \\<R> t I. False) = (I = {})\"", "lemma iTrigger_True_left[simp]: \"(True. t' \\<T> t I. Q t) = (I = {} \\<or> (\\<diamond> t1 I. \\<box> t2 (I \\<down>\\<ge> t1). Q t2))\"", "lemma iTrigger_True[simp]: \"P t'. t' \\<T> t I. True\"", "lemma iTrigger_False_left[simp]: \"(False. t' \\<T> t I. Q t) = (\\<box> t I. Q t)\"", "lemma iTrigger_False[simp]: \"(P t'. t' \\<T> t I. False) = (I = {})\"", "lemma \n  iUntil_TrueTrue[simp]: \"(True. t' \\<U> t I. True) = (I \\<noteq> {})\" and\n  iSince_TrueTrue[simp]: \"(True. t' \\<S> t I. True) = (I \\<noteq> {})\" and\n  iWeakUntil_TrueTrue[simp]: \"True. t' \\<W> t I. True\" and\n  iWeakSince_TrueTrue[simp]: \"True. t' \\<B> t I. True\" and\n  iRelease_TrueTrue[simp]: \"True. t' \\<R> t I. True\" and\n  iTrigger_TrueTrue[simp]: \"True. t' \\<T> t I. True\"", "lemma iAll_empty[simp]: \"\\<box> t {}. P t\"", "lemma iEx_empty[simp]: \"\\<not> (\\<diamond> t {}. P t)\"", "lemma iUntil_empty[simp]: \"\\<not> (P t0. t0 \\<U> t1 {}. Q t1)\"", "lemma iSince_empty[simp]: \"\\<not> (P t0. t0 \\<S> t1 {}. Q t1)\"", "lemma iWeakUntil_empty[simp]: \"P t0. t0 \\<W> t1 {}. Q t1\"", "lemma iWeakSince_empty[simp]: \"P t0. t0 \\<B> t1 {}. Q t1\"", "lemma iRelease_empty[simp]: \"P t0. t0 \\<R> t1 {}. Q t1\"", "lemma iTrigger_empty[simp]: \"P t0. t0 \\<T> t1 {}. Q t1\"", "lemmas iTL_empty =\n  iAll_empty iEx_empty\n  iUntil_empty iSince_empty\n  iWeakUntil_empty iWeakSince_empty\n  iRelease_empty iTrigger_empty", "lemma iAll_singleton[simp]: \"(\\<box> t' {t}. P t') = P t\"", "lemma iEx_singleton[simp]: \"(\\<diamond> t' {t}. P t') = P t\"", "lemma iUntil_singleton[simp]: \"(P t0. t0 \\<U> t1 {t}. Q t1) = Q t\"", "lemma iSince_singleton[simp]: \"(P t0. t0 \\<S> t1 {t}. Q t1) = Q t\"", "lemma iWeakUntil_singleton[simp]: \"(P t0. t0 \\<W> t1 {t}. Q t1) = (P t \\<or> Q t)\"", "lemma iWeakSince_singleton[simp]: \"(P t0. t0 \\<B> t1 {t}. Q t1) = (P t \\<or> Q t)\"", "lemma iRelease_singleton[simp]: \"(P t0. t0 \\<R> t1 {t}. Q t1) = Q t\"", "lemma iTrigger_singleton[simp]: \"(P t0. t0 \\<T> t1 {t}. Q t1) = Q t\"", "lemmas iTL_singleton =\n  iAll_singleton iEx_singleton\n  iUntil_singleton iSince_singleton\n  iWeakUntil_singleton iWeakSince_singleton\n  iRelease_singleton iTrigger_singleton", "lemma iAll_iEx_conv: \"(\\<box> t I. P t) = (\\<not> (\\<diamond> t I. \\<not> P t))\"", "lemma iEx_iAll_conv: \"(\\<diamond> t I. P t) = (\\<not> (\\<box> t I. \\<not> P t))\"", "lemma not_iAll[simp]: \"(\\<not> (\\<box> t I. P t)) = (\\<diamond> t I. \\<not> P t)\"", "lemma not_iEx[simp]: \"(\\<not> (\\<diamond> t I. P t)) = (\\<box> t I. \\<not> P t)\"", "lemma iUntil_iEx_conv: \"(True. t' \\<U> t I. P t) = (\\<diamond> t I. P t)\"", "lemma iSince_iEx_conv: \"(True. t' \\<S> t I. P t) = (\\<diamond> t I. P t)\"", "lemma iRelease_iAll_conv: \"(False. t' \\<R> t I. P t) = (\\<box> t I. P t)\"", "lemma iTrigger_iAll_conv: \"(False. t' \\<T> t I. P t) = (\\<box> t I. P t)\"", "lemma iWeakUntil_iUntil_conv: \"(P t'. t' \\<W> t I. Q t) = ((P t'. t' \\<U> t I. Q t) \\<or> (\\<box> t I. P t))\"", "lemma iWeakSince_iSince_conv: \"(P t'. t' \\<B> t I. Q t) = ((P t'. t' \\<S> t I. Q t) \\<or> (\\<box> t I. P t))\"", "lemma iUntil_iWeakUntil_conv: \"(P t'. t' \\<U> t I. Q t) = ((P t'. t' \\<W> t I. Q t) \\<and> (\\<diamond> t I. Q t))\"", "lemma iSince_iWeakSince_conv: \"(P t'. t' \\<S> t I. Q t) = ((P t'. t' \\<B> t I. Q t) \\<and> (\\<diamond> t I. Q t))\"", "lemma iRelease_iWeakUntil_conv: \"(P t'. t' \\<R> t I. Q t) = (Q t'. t' \\<W> t I. (Q t \\<and> P t))\"", "lemma iRelease_iUntil_conv: \"(P t'. t' \\<R> t I. Q t) = ((\\<box> t I. Q t) \\<or> (Q t'. t' \\<U> t I. (Q t \\<and> P t)))\"", "lemma iTrigger_iWeakSince_conv: \"(P t'. t' \\<T> t I. Q t) = (Q t'. t' \\<B> t I. (Q t \\<and> P t))\"", "lemma iTrigger_iSince_conv: \"(P t'. t' \\<T> t I. Q t) = ((\\<box> t I. Q t) \\<or> (Q t'. t' \\<S> t I. (Q t \\<and> P t)))\"", "lemma iRelease_not_iUntil_conv: \"(P t'. t' \\<R> t I. Q t) = (\\<not> (\\<not> P t'. t' \\<U> t I. \\<not> Q t))\"", "lemma iUntil_not_iRelease_conv: \"(P t'. t' \\<U> t I. Q t) = (\\<not> (\\<not> P t'. t' \\<R> t I. \\<not> Q t))\"", "lemma iTrigger_not_iSince_conv: \"finite I \\<Longrightarrow> (P t'. t' \\<T> t I. Q t) = (\\<not> (\\<not> P t'. t' \\<S> t I. \\<not> Q t))\"", "lemma iSince_not_iTrigger_conv: \"finite I \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) = (\\<not> (\\<not> P t'. t' \\<T> t I. \\<not> Q t))\"", "lemma not_iUntil: \"\n  (\\<not> (P t1. t1 \\<U> t2 I. Q t2)) =\n  (\\<box> t I. (Q t \\<longrightarrow> (\\<diamond> t' (I \\<down>< t). \\<not> P t')))\"", "lemma not_iSince: \"\n  (\\<not> (P t1. t1 \\<S> t2 I. Q t2)) =\n  (\\<box> t I. (Q t \\<longrightarrow> (\\<diamond> t' (I \\<down>> t). \\<not> P t')))\"", "lemma iWeakUntil_conj_iUntil_conv: \"\n  (P t1. t1 \\<W> t2 I. (P t2 \\<and> Q t2)) = (\\<not> (\\<not> Q t1. t1 \\<U> t2 I. \\<not> P t2))\"", "lemma iUntil_disj_iUntil_conv: \"\n  (P t1 \\<or> Q t1. t1 \\<U> t2 I. Q t2) = \n  (P t1. t1 \\<U> t2 I. Q t2)\"", "lemma iWeakUntil_disj_iWeakUntil_conv: \"\n  (P t1 \\<or> Q t1. t1 \\<W> t2 I. Q t2) = \n  (P t1. t1 \\<W> t2 I. Q t2)\"", "lemma iWeakUntil_iUntil_conj_conv: \"\n  (P t1. t1 \\<W> t2 I. Q t2) = \n  (\\<not> (\\<not> Q t1. t1 \\<U> t2 I. (\\<not> P t2 \\<and> \\<not> Q t2)))\"", "lemma \n  not_iNext[simp]: \"(\\<not> (\\<circle> t t0 I. P t)) = (\\<circle> t t0 I. \\<not> P t)\" and\n  not_iNextWeak[simp]: \"(\\<not> (\\<circle>\\<^sub>W t t0 I. P t)) = (\\<circle>\\<^sub>S t t0 I. \\<not> P t)\" and\n  not_iNextStrong[simp]: \"(\\<not> (\\<circle>\\<^sub>S t t0 I. P t)) = (\\<circle>\\<^sub>W t t0 I. \\<not> P t)\" and\n  not_iLast[simp]: \"(\\<not> (\\<ominus> t t0 I. P t)) = (\\<ominus> t t0 I. \\<not> P t)\" and\n  not_iLastWeak[simp]: \"(\\<not> (\\<ominus>\\<^sub>W t t0 I. P t)) = (\\<ominus>\\<^sub>S t t0 I. \\<not> P t)\" and\n  not_iLastStrong[simp]: \"(\\<not> (\\<ominus>\\<^sub>S t t0 I. P t)) = (\\<ominus>\\<^sub>W t t0 I. \\<not> P t)\"", "lemma not_iWeakUntil: \"\n  (\\<not> (P t1. t1 \\<W> t2 I. Q t2)) =\n  ((\\<box> t I. (Q t \\<longrightarrow> (\\<diamond> t' (I \\<down>< t). \\<not> P t'))) \\<and> (\\<diamond> t I. \\<not> P t))\"", "lemma not_iWeakSince: \"\n  (\\<not> (P t1. t1 \\<B> t2 I. Q t2)) =\n  ((\\<box> t I. (Q t \\<longrightarrow> (\\<diamond> t' (I \\<down>> t). \\<not> P t'))) \\<and> (\\<diamond> t I. \\<not> P t))\"", "lemma not_iRelease: \"\n  (\\<not> (P t'. t' \\<R> t I. Q t)) = \n  ((\\<diamond> t I. \\<not> Q t) \\<and> (\\<box> t I. P t \\<longrightarrow> (\\<diamond> t I \\<down>\\<le> t. \\<not> Q t)))\"", "lemma not_iRelease_iUntil_conv: \"\n  (\\<not> (P t'. t' \\<R> t I. Q t)) = (\\<not> P t'. t' \\<U> t I. \\<not> Q t)\"", "lemma not_iTrigger: \"\n  (\\<not> (P t'. t' \\<T> t I. Q t)) = \n  ((\\<diamond> t I. \\<not> Q t) \\<and> (\\<box> t I. \\<not> P t \\<or> (\\<diamond> t I \\<down>\\<ge> t. \\<not> Q t)))\"", "lemma not_iTrigger_iSince_conv: \"\n  finite I \\<Longrightarrow> (\\<not> (P t'. t' \\<T> t I. Q t)) = (\\<not> P t'. t' \\<S> t I. \\<not> Q t)\"", "lemma all_imp_iall: \"\\<forall>x. P x \\<Longrightarrow> \\<box> t I. P t\"", "lemma bex_imp_lex:  \"\\<diamond> t I. P t \\<Longrightarrow> \\<exists>x. P x\"", "lemma iAll_imp_iEx: \"I \\<noteq> {} \\<Longrightarrow> \\<box> t I. P t \\<Longrightarrow> \\<diamond> t I. P t\"", "lemma i_set_iAll_imp_iEx: \"I \\<in> i_set \\<Longrightarrow> \\<box> t I. P t \\<Longrightarrow> \\<diamond> t I. P t\"", "lemmas iT_iAll_imp_iEx = iT_not_empty[THEN iAll_imp_iEx]", "lemma iUntil_imp_iEx: \"P t1. t1 \\<U> t2 I. Q t2 \\<Longrightarrow> \\<diamond> t I. Q t\"", "lemma iSince_imp_iEx: \"P t1. t1 \\<S> t2 I. Q t2 \\<Longrightarrow> \\<diamond> t I. Q t\"", "lemma iall_subset_imp_iall: \"\\<lbrakk> \\<box> t B. P t; A \\<subseteq> B \\<rbrakk> \\<Longrightarrow> \\<box> t A. P t\"", "lemma iex_subset_imp_iex: \"\\<lbrakk> \\<diamond> t A. P t; A \\<subseteq> B \\<rbrakk> \\<Longrightarrow> \\<diamond> t B. P t\"", "lemma iall_mp: \"\\<lbrakk> \\<box> t I. P t \\<longrightarrow> Q t; \\<box> t I. P t \\<rbrakk> \\<Longrightarrow> \\<box> t I. Q t\"", "lemma iex_mp: \"\\<lbrakk> \\<box> t I. P t \\<longrightarrow> Q t; \\<diamond> t I. P t \\<rbrakk> \\<Longrightarrow> \\<diamond> t I. Q t\"", "lemma iUntil_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<U> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<U> t2 I. Q t2\"", "lemma iSince_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<S> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<S> t2 I. Q t2\"", "lemma iWeakUntil_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<W> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<W> t2 I. Q t2\"", "lemma iWeakSince_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<B> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<B> t2 I. Q t2\"", "lemma iRelease_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<R> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<R> t2 I. Q t2\"", "lemma iTrigger_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<T> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<T> t2 I. Q t2\"", "lemma iMin_imp_iUntil: \"\n  \\<lbrakk> I \\<noteq> {}; Q (iMin I) \\<rbrakk> \\<Longrightarrow> P t'. t' \\<U> t I. Q t\"", "lemma Max_imp_iSince: \"\n  \\<lbrakk> finite I; I \\<noteq> {}; Q (Max I) \\<rbrakk> \\<Longrightarrow> P t'. t' \\<S> t I. Q t\"", "lemma iAll_cong: \"\\<box> t I. f t = g t \\<Longrightarrow> (\\<box> t I. P (f t) t) = (\\<box> t I. P (g t) t)\"", "lemma iEx_cong: \"\\<box> t I. f t = g t \\<Longrightarrow> (\\<diamond> t I. P (f t) t) = (\\<diamond> t I. P (g t) t)\"", "lemma iUntil_cong1: \"\n  \\<box> t I. f t = g t \\<Longrightarrow> \n  (P (f t1) t1. t1 \\<U> t2 I. Q t2) = (P (g t1) t1. t1 \\<U> t2 I. Q t2)\"", "lemma iUntil_cong2: \"\n  \\<box> t I. f t = g t \\<Longrightarrow> \n  (P t1. t1 \\<U> t2 I. Q (f t2) t2) = (P t1. t1 \\<U> t2 I. Q (g t2) t2)\"", "lemma iSince_cong1: \"\n  \\<box> t I. f t = g t \\<Longrightarrow> \n  (P (f t1) t1. t1 \\<S> t2 I. Q t2) = (P (g t1) t1. t1 \\<S> t2 I. Q t2)\"", "lemma iSince_cong2: \"\n  \\<box> t I. f t = g t \\<Longrightarrow> \n  (P t1. t1 \\<S> t2 I. Q (f t2) t2) = (P t1. t1 \\<S> t2 I. Q (g t2) t2)\"", "lemma bex_subst: \"\n  \\<forall>x\\<in>A. P x \\<longrightarrow> (Q x = Q' x) \\<Longrightarrow>\n  (\\<exists>x\\<in>A. P x \\<and> Q x) = (\\<exists>x\\<in>A. P x \\<and> Q' x)\"", "lemma iEx_subst: \"\n  \\<box> t I. P t \\<longrightarrow> (Q t = Q' t) \\<Longrightarrow>\n  (\\<diamond> t I. P t \\<and> Q t) = (\\<diamond> t I. P t \\<and> Q' t)\"", "lemma iAll_subset: \"\\<lbrakk> A \\<subseteq> B; \\<box> t B. P t \\<rbrakk> \\<Longrightarrow> \\<box> t A. P t\"", "lemma iEx_subset: \"\\<lbrakk> A \\<subseteq> B; \\<diamond> t A. P t \\<rbrakk> \\<Longrightarrow> \\<diamond> t B. P t\"", "lemma iUntil_append: \"\n  \\<lbrakk> finite A; Max A \\<le> iMin B \\<rbrakk> \\<Longrightarrow>\n  P t1. t1 \\<U> t2 A. Q t2 \\<Longrightarrow> P t1. t1 \\<U> t2 (A \\<union> B). Q t2\"", "lemma iSince_prepend: \"\n  \\<lbrakk> finite A; Max A \\<le> iMin B \\<rbrakk> \\<Longrightarrow>\n  P t1. t1 \\<S> t2 B. Q t2 \\<Longrightarrow> P t1. t1 \\<S> t2 (A \\<union> B). Q t2\"", "lemma \n  iAll_union: \"\\<lbrakk> \\<box> t A. P t; \\<box> t B. P t \\<rbrakk> \\<Longrightarrow> \\<box> t (A \\<union> B). P t\" and\n  iAll_union_conv: \"(\\<box> t A \\<union> B. P t) = ((\\<box> t A. P t) \\<and> (\\<box> t B. P t))\"", "lemma \n  iEx_union: \"(\\<diamond> t A. P t) \\<or> (\\<diamond> t B. P t) \\<Longrightarrow> \\<diamond> t (A \\<union> B). P t\" and\n  iEx_union_conv: \"(\\<diamond> t (A \\<union> B). P t) = ((\\<diamond> t A. P t) \\<or> (\\<diamond> t B. P t))\"", "lemma iAll_inter: \"(\\<box> t A. P t) \\<or> (\\<box> t B. P t) \\<Longrightarrow> \\<box> t (A \\<inter> B). P t\"", "lemma not_iEx_inter: \"\n  \\<exists>A B P. (\\<diamond> t A. P t) \\<and> (\\<diamond> t B. P t) \\<and> \\<not> (\\<diamond> t (A \\<inter> B). P t)\"", "lemma \n  iAll_insert: \"\\<lbrakk> P t; \\<box> t I. P t \\<rbrakk> \\<Longrightarrow> \\<box> t' (insert t I). P t'\" and\n  iAll_insert_conv: \"(\\<box> t' (insert t I). P t') = (P t \\<and> (\\<box> t' I. P t'))\"", "lemma \n  iEx_insert: \"\\<lbrakk> P t \\<or> (\\<diamond> t I. P t) \\<rbrakk> \\<Longrightarrow> \\<diamond> t' (insert t I). P t'\" and\n  iEx_insert_conv: \"(\\<diamond> t' (insert t I). P t') = (P t \\<or> (\\<diamond> t' I. P t'))\"", "lemma Collect_minI_iEx: \"\\<diamond> t I. P t \\<Longrightarrow> \\<diamond> t I. P t \\<and> (\\<box> t' (I \\<down>< t). \\<not> P t')\"", "lemma iUntil_disj_conv1: \"\n  I \\<noteq> {} \\<Longrightarrow>\n  (P t'. t' \\<U> t I. Q t) = (Q (iMin I) \\<or> (P t'. t' \\<U> t I. Q t \\<and> iMin I < t))\"", "lemma iSince_disj_conv1: \"\n  \\<lbrakk> finite I; I \\<noteq> {} \\<rbrakk> \\<Longrightarrow>\n  (P t'. t' \\<S> t I. Q t) = (Q (Max I) \\<or> (P t'. t' \\<S> t I. Q t \\<and> t < Max I))\"", "lemma iUntil_next: \"\n  I \\<noteq> {} \\<Longrightarrow>\n  (P t'. t' \\<U> t I. Q t) = \n  (Q (iMin I) \\<or> (P (iMin I) \\<and> (P t'. t' \\<U> t (I \\<down>> (iMin I)). Q t)))\"", "lemma iSince_prev: \"\\<lbrakk> finite I; I \\<noteq> {} \\<rbrakk> \\<Longrightarrow>\n  (P t'. t' \\<S> t I. Q t) = \n  (Q (Max I) \\<or> (P (Max I) \\<and> (P t'. t' \\<S> t (I \\<down>< Max I). Q t)))\"", "lemma iNext_induct_rule: \"\n  \\<lbrakk> P (iMin I); \\<box> t I. (P t \\<longrightarrow> (\\<circle> t' t I. P t')); t \\<in> I \\<rbrakk> \\<Longrightarrow> P t\"", "lemma iNext_induct: \"\n  \\<lbrakk> P (iMin I); \\<box> t I. (P t \\<longrightarrow> (\\<circle> t' t I. P t')) \\<rbrakk> \\<Longrightarrow> \\<box> t I. P t\"", "lemma iLast_induct_rule: \"\n  \\<lbrakk> P (Max I); \\<box> t I. (P t \\<longrightarrow> (\\<ominus> t' t I. P t')); finite I; t \\<in> I \\<rbrakk> \\<Longrightarrow> P t\"", "lemma iLast_induct: \"\n  \\<lbrakk> P (Max I); \\<box> t I. (P t \\<longrightarrow> (\\<ominus> t' t I. P t')); finite I \\<rbrakk> \\<Longrightarrow> \\<box> t I. P t\"", "lemma iUntil_conj_not: \"((P t1 \\<and> \\<not> Q t1). t1 \\<U> t2 I. Q t2) = (P t1. t1 \\<U> t2 I. Q t2)\"", "lemma iWeakUntil_conj_not: \"((P t1 \\<and> \\<not> Q t1). t1 \\<W> t2 I. Q t2) = (P t1. t1 \\<W> t2 I. Q t2)\"", "lemma iSince_conj_not: \"finite I \\<Longrightarrow>\n  ((P t1 \\<and> \\<not> Q t1). t1 \\<S> t2 I. Q t2) = (P t1. t1 \\<S> t2 I. Q t2)\"", "lemma iWeakSince_conj_not: \"finite I \\<Longrightarrow>\n  ((P t1 \\<and> \\<not> Q t1). t1 \\<B> t2 I. Q t2) = (P t1. t1 \\<B> t2 I. Q t2)\"", "lemma iNextStrong_imp_iNextWeak: \"(\\<circle>\\<^sub>S t t0 I. P t) \\<longrightarrow> (\\<circle>\\<^sub>W t t0 I. P t)\"", "lemma iLastStrong_imp_iLastWeak: \"(\\<ominus>\\<^sub>S t t0 I. P t) \\<longrightarrow> (\\<ominus>\\<^sub>W t t0 I. P t)\"", "lemma infin_imp_iNextWeak_iNextStrong_eq_iNext: \"\n  \\<lbrakk> infinite I; t0 \\<in> I \\<rbrakk> \\<Longrightarrow> \n  ((\\<circle>\\<^sub>W t t0 I. P t) = (\\<circle> t t0 I. P t)) \\<and> ((\\<circle>\\<^sub>S t t0 I. P t) = (\\<circle> t t0 I. P t))\"", "lemma infin_imp_iNextWeak_eq_iNext: \"\\<lbrakk> infinite I; t0 \\<in> I \\<rbrakk> \\<Longrightarrow> (\\<circle>\\<^sub>W t t0 I. P t) = (\\<circle> t t0 I. P t)\"", "lemma infin_imp_iNextStrong_eq_iNext: \"\\<lbrakk> infinite I; t0 \\<in> I \\<rbrakk> \\<Longrightarrow> (\\<circle>\\<^sub>S t t0 I. P t) = (\\<circle> t t0 I. P t)\"", "lemma infin_imp_iNextStrong_eq_iNextWeak: \"\\<lbrakk> infinite I; t0 \\<in> I \\<rbrakk> \\<Longrightarrow> (\\<circle>\\<^sub>S t t0 I. P t) = (\\<circle>\\<^sub>W t t0 I. P t)\"", "lemma \n  not_in_iNext_eq: \"t0 \\<notin> I \\<Longrightarrow> (\\<circle> t t0 I. P t) = (P t0)\" and\n  not_in_iLast_eq: \"t0 \\<notin> I \\<Longrightarrow> (\\<ominus> t t0 I. P t) = (P t0)\"", "lemma \n  not_in_iNextWeak_eq: \"t0 \\<notin> I \\<Longrightarrow> (\\<circle>\\<^sub>W t t0 I. P t)\" and\n  not_in_iLastWeak_eq: \"t0 \\<notin> I \\<Longrightarrow> (\\<ominus>\\<^sub>W t t0 I. P t)\"", "lemma \n  not_in_iNextStrong_eq: \"t0 \\<notin> I \\<Longrightarrow> \\<not> (\\<circle>\\<^sub>S t t0 I. P t)\" and\n  not_in_iLastStrong_eq: \"t0 \\<notin> I \\<Longrightarrow> \\<not> (\\<ominus>\\<^sub>S t t0 I. P t)\"", "lemma \n  iNext_UNIV: \"(\\<circle> t t0 UNIV. P t) = P (Suc t0)\" and\n  iNextWeak_UNIV: \"(\\<circle>\\<^sub>W t t0 UNIV. P t) = P (Suc t0)\" and\n  iNextStrong_UNIV: \"(\\<circle>\\<^sub>S t t0 UNIV. P t) = P (Suc t0)\"", "lemma \n  iLast_UNIV: \"(\\<ominus> t t0 UNIV. P t) = P (t0 - Suc 0)\" and\n  iLastWeak_UNIV: \"(\\<ominus>\\<^sub>W t t0 UNIV. P t) = (if 0 < t0 then P (t0 - Suc 0) else True)\" and\n  iLastStrong_UNIV: \"(\\<ominus>\\<^sub>S t t0 UNIV. P t) = (if 0 < t0 then P (t0 - Suc 0) else False)\"", "lemmas iTL_Next_UNIV = \n  iNext_UNIV iNextWeak_UNIV iNextStrong_UNIV\n  iLast_UNIV iLastWeak_UNIV iLastStrong_UNIV", "lemma inext_nth_iNext_Suc: \"(\\<circle> t (I \\<rightarrow> n) I. P t) = P (I \\<rightarrow> Suc n)\"", "lemma iprev_nth_iLast_Suc: \"(\\<ominus> t (I \\<leftarrow> n) I. P t) = P (I \\<leftarrow> Suc n)\"", "lemma iT_Plus_iAll_conv: \"(\\<box> t I \\<oplus> k. P t) = (\\<box> t I. P (t + k))\"", "lemma iT_Mult_iAll_conv: \"(\\<box> t I \\<otimes> k. P t) = (\\<box> t I. P (t * k))\"", "lemma iT_Plus_neg_iAll_conv: \"(\\<box> t I \\<oplus>- k. P t) = (\\<box> t (I \\<down>\\<ge> k). P (t - k))\"", "lemma iT_Minus_iAll_conv: \"(\\<box> t k \\<ominus> I. P t) = (\\<box> t (I \\<down>\\<le> k). P (k - t))\"", "lemma iT_Div_iAll_conv: \"(\\<box> t I \\<oslash> k. P t) = (\\<box> t I. P (t div k))\"", "lemmas iT_arith_iAll_conv = \n  iT_Plus_iAll_conv\n  iT_Mult_iAll_conv\n  iT_Plus_neg_iAll_conv\n  iT_Minus_iAll_conv\n  iT_Div_iAll_conv", "lemma \n  iT_Plus_iEx_conv: \"(\\<diamond> t I \\<oplus> k. P t) = (\\<diamond> t I. P (t + k))\" and\n  iT_Mult_iEx_conv: \"(\\<diamond> t I \\<otimes> k. P t) = (\\<diamond> t I. P (t * k))\" and\n  iT_Plus_neg_iEx_conv: \"(\\<diamond> t I \\<oplus>- k. P t) = (\\<diamond> t (I \\<down>\\<ge> k). P (t - k))\" and\n  iT_Minus_iEx_conv: \"(\\<diamond> t k \\<ominus> I. P t) = (\\<diamond> t (I \\<down>\\<le> k). P (k - t))\" and\n  iT_Div_iEx_conv: \"(\\<diamond> t I \\<oslash> k. P t) = (\\<diamond> t I. P (t div k))\"", "lemma iT_Plus_iUntil_conv: \"(P t1. t1 \\<U> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<U> t2 I. Q (t2 + k))\"", "lemma iT_Mult_iUntil_conv: \"(P t1. t1 \\<U> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<U> t2 I. Q (t2 * k))\"", "lemma iT_Plus_neg_iUntil_conv: \"(P t1. t1 \\<U> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<U> t2 (I \\<down>\\<ge> k). Q (t2 - k))\"", "lemma iT_Minus_iUntil_conv: \"(P t1. t1 \\<U> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<S> t2 (I \\<down>\\<le> k). Q (k - t2))\"", "lemma iT_Div_iUntil_conv: \"(P t1. t1 \\<U> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<U> t2 I. Q (t2 div k))\"", "lemma iUntil_iSince_conv: \"\n  \\<lbrakk> finite I; Max I \\<le> k \\<rbrakk> \\<Longrightarrow> \n  (P t1. t1 \\<U> t2 I. Q t2) = (P (k - t1). t1 \\<S> t2 (k \\<ominus> I). Q (k - t2))\"", "lemma iSince_iUntil_conv: \"\n  \\<lbrakk> finite I; Max I \\<le> k \\<rbrakk> \\<Longrightarrow> \n  (P t1. t1 \\<S> t2 I. Q t2) = (P (k - t1). t1 \\<U> t2 (k \\<ominus> I). Q (k - t2))\"", "lemma iT_Plus_iSince_conv: \"(P t1. t1 \\<S> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<S> t2 I. Q (t2 + k))\"", "lemma iT_Mult_iSince_conv: \"0 < k \\<Longrightarrow> (P t1. t1 \\<S> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<S> t2 I. Q (t2 * k))\"", "lemma iT_Plus_neg_iSince_conv: \"(P t1. t1 \\<S> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<S> t2 (I \\<down>\\<ge> k). Q (t2 - k))\"", "lemma iT_Minus_iSince_conv: \"\n  (P t1. t1 \\<S> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<U> t2 (I \\<down>\\<le> k). Q (k - t2))\"", "lemma iT_Div_iSince_conv: \"\n  0 < k \\<Longrightarrow> (P t1. t1 \\<S> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<S> t2 I. Q (t2 div k))\"", "lemma iT_Plus_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<W> t2 I. Q (t2 + k))\"", "lemma iT_Mult_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<W> t2 I. Q (t2 * k))\"", "lemma iT_Plus_neg_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<W> t2 (I \\<down>\\<ge> k). Q (t2 - k))\"", "lemma iT_Minus_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<B> t2 (I \\<down>\\<le> k). Q (k - t2))\"", "lemma iT_Div_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<W> t2 I. Q (t2 div k))\"", "lemma iT_Plus_iWeakSince_conv: \"(P t1. t1 \\<B> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<B> t2 I. Q (t2 + k))\"", "lemma iT_Mult_iWeakSince_conv: \"0 < k \\<Longrightarrow> (P t1. t1 \\<B> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<B> t2 I. Q (t2 * k))\"", "lemma iT_Plus_neg_iWeakSince_conv: \"(P t1. t1 \\<B> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<B> t2 (I \\<down>\\<ge> k). Q (t2 - k))\"", "lemma iT_Minus_iWeakSince_conv: \"\n  (P t1. t1 \\<B> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<W> t2 (I \\<down>\\<le> k). Q (k - t2))\"", "lemma iT_Div_iWeakSince_conv: \"\n  0 < k \\<Longrightarrow> (P t1. t1 \\<B> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<B> t2 I. Q (t2 div k))\"", "lemma iT_Plus_iRelease_conv: \"(P t1. t1 \\<R> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<R> t2 I. Q (t2 + k))\"", "lemma iT_Mult_iRelease_conv: \"(P t1. t1 \\<R> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<R> t2 I. Q (t2 * k))\"", "lemma iT_Plus_neg_iRelease_conv: \"(P t1. t1 \\<R> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<R> t2 (I \\<down>\\<ge> k). Q (t2 - k))\"", "lemma iT_Minus_iRelease_conv: \"(P t1. t1 \\<R> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<T> t2 (I \\<down>\\<le> k). Q (k - t2))\"", "lemma iT_Div_iRelease_conv: \"(P t1. t1 \\<R> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<R> t2 I. Q (t2 div k))\"", "lemma iT_Plus_iTrigger_conv: \"(P t1. t1 \\<T> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<T> t2 I. Q (t2 + k))\"", "lemma iT_Mult_iTrigger_conv: \"0 < k \\<Longrightarrow> (P t1. t1 \\<T> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<T> t2 I. Q (t2 * k))\"", "lemma iT_Plus_neg_iTrigger_conv: \"(P t1. t1 \\<T> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<T> t2 (I \\<down>\\<ge> k). Q (t2 - k))\"", "lemma iT_Minus_iTrigger_conv: \"\n  (P t1. t1 \\<T> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<R> t2 (I \\<down>\\<le> k). Q (k - t2))\"", "lemma iT_Div_iTrigger_conv: \"\n  0 < k \\<Longrightarrow> (P t1. t1 \\<T> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<T> t2 I. Q (t2 div k))\""], "translations": [["", "lemmas bool_op_rel_defs =\n  add_bool_def \n  mult_bool_def\n  less_bool_def\n  le_bool_def"], ["", "instance bool :: wellorder"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(bool, wellorder_class)", "apply (rule wf_wellorderI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. wf {(x, y). x < y}\n 2. OFCLASS(bool, linorder_class)", "apply (rule_tac t=\"{(x, y). x < y}\" and s=\"{(False, True)}\" in subst)"], ["proof (prove)\ngoal (3 subgoals):\n 1. {(False, True)} = {(x, y). x < y}\n 2. wf {(False, True)}\n 3. OFCLASS(bool, linorder_class)", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. wf {(False, True)}\n 2. OFCLASS(bool, linorder_class)", "apply (unfold wf_def, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(bool, linorder_class)", "apply intro_classes"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "instance bool :: comm_semiring_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(bool, comm_semiring_1_class)", "apply intro_classes"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>a b c. a * b * c = a * (b * c)\n 2. \\<And>a b. a * b = b * a\n 3. \\<And>a. 1 * a = a\n 4. \\<And>a b c. a + b + c = a + (b + c)\n 5. \\<And>a b. a + b = b + a\n 6. \\<And>a. 0 + a = a\n 7. \\<And>a b c. (a + b) * c = a * c + b * c\n 8. \\<And>a. 0 * a = 0\n 9. \\<And>a. a * 0 = 0\n 10. 0 \\<noteq> 1", "apply (unfold bool_op_rel_defs Zero_bool_def One_bool_def)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>a b c. ((a \\<and> b) \\<and> c) = (a \\<and> b \\<and> c)\n 2. \\<And>a b. (a \\<and> b) = (b \\<and> a)\n 3. \\<And>a. (True \\<and> a) = a\n 4. \\<And>a b c. ((a \\<or> b) \\<or> c) = (a \\<or> b \\<or> c)\n 5. \\<And>a b. (a \\<or> b) = (b \\<or> a)\n 6. \\<And>a. (False \\<or> a) = a\n 7. \\<And>a b c. ((a \\<or> b) \\<and> c) = (a \\<and> c \\<or> b \\<and> c)\n 8. \\<And>a. (False \\<and> a) = False\n 9. \\<And>a. (a \\<and> False) = False\n 10. False \\<noteq> True", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \\<open>Basic definitions\\<close>"], ["", "lemma UNIV_nat: \"\\<nat> = (UNIV::nat set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nat> = UNIV", "by (simp add: Nats_def)"], ["", "text \\<open>Universal temporal operator: Always/Globally\\<close>"], ["", "definition iAll :: \"iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Always\\<close>\n  where \"iAll I P \\<equiv> \\<forall>t\\<in>I. P t\""], ["", "text \\<open>Existential temporal operator: Eventually/Finally\\<close>"], ["", "definition iEx :: \"iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Eventually\\<close>\n  where \"iEx I P \\<equiv> \\<exists>t\\<in>I. P t\""], ["", "syntax\n  \"_iAll\" :: \"Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" (\"(3\\<box> _ _./ _)\" [0, 0, 10] 10)\n  \"_iEx\" ::  \"Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" (\"(3\\<diamond> _ _./ _)\" [0, 0, 10] 10)"], ["", "translations\n  \"\\<box> t I. P\" \\<rightleftharpoons> \"CONST iAll I (\\<lambda>t. P)\"\n  \"\\<diamond> t I. P\" \\<rightleftharpoons> \"CONST iEx I (\\<lambda>t. P)\""], ["", "text \\<open>Future temporal operator: Next\\<close>"], ["", "definition iNext :: \"Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Next\\<close>\n  where \"iNext t0 I P \\<equiv> P (inext t0 I)\""], ["", "text \\<open>Past temporal operator: Last/Previous\\<close>"], ["", "definition iLast :: \"Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Last\\<close>\n  where \"iLast t0 I P \\<equiv> P (iprev t0 I)\""], ["", "syntax\n  \"_iNext\" :: \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" (\"(3\\<circle> _ _ _./ _)\" [0, 0, 10] 10)\n  \"_iLast\" :: \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" (\"(3\\<ominus> _ _ _./ _)\" [0, 0, 10] 10)"], ["", "translations\n  \"\\<circle> t t0 I. P\" \\<rightleftharpoons> \"CONST iNext t0 I (\\<lambda>t. P)\"\n  \"\\<ominus> t t0 I. P\" \\<rightleftharpoons> \"CONST iLast t0 I (\\<lambda>t. P)\""], ["", "lemma \"\\<circle> t 10 [0\\<dots>]. (t + 10 > 10)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<circle> t 10 [0\\<dots>]. 10 < t + 10", "by (simp add: iNext_def iT_inext_if)"], ["", "text \\<open>The following versions of Next and Last operator differ in the cases\n  where no next/previous element exists or specified time point is not in interval:\n  the weak versions return @{term True} and the strong versions return @{term False}.\\<close>"], ["", "definition iNextWeak :: \"Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Weak Next\\<close>\n  where \"iNextWeak t0 I P  \\<equiv> (\\<box> t {inext t0 I} \\<down>> t0. P t)\""], ["", "definition iNextStrong :: \"Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Strong Next\\<close>\n  where \"iNextStrong t0 I P \\<equiv> (\\<diamond> t {inext t0 I} \\<down>> t0. P t)\""], ["", "definition iLastWeak :: \"Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Weak Last\\<close>\n  where \"iLastWeak t0 I P   \\<equiv> (\\<box> t {iprev t0 I} \\<down>< t0. P t)\""], ["", "definition iLastStrong :: \"Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Strong Last\\<close>\n  where \"iLastStrong t0 I P \\<equiv> (\\<diamond> t {iprev t0 I} \\<down>< t0. P t)\""], ["", "syntax\n  \"_iNextWeak\"   :: \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" (\"(3\\<circle>\\<^sub>W _ _ _./ _)\" [0, 0, 10] 10)\n  \"_iNextStrong\" :: \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" (\"(3\\<circle>\\<^sub>S _ _ _./ _)\" [0, 0, 10] 10)\n  \"_iLastWeak\"   :: \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" (\"(3\\<ominus>\\<^sub>W _ _ _./ _)\" [0, 0, 10] 10)\n  \"_iLastStrong\" :: \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" (\"(3\\<ominus>\\<^sub>S _ _ _./ _)\" [0, 0, 10] 10)"], ["", "translations\n  \"\\<circle>\\<^sub>W t t0 I. P\" \\<rightleftharpoons> \"CONST iNextWeak t0 I (\\<lambda>t. P)\"\n  \"\\<circle>\\<^sub>S t t0 I. P\" \\<rightleftharpoons> \"CONST iNextStrong t0 I (\\<lambda>t. P)\"\n  \"\\<ominus>\\<^sub>W t t0 I. P\" \\<rightleftharpoons> \"CONST iLastWeak t0 I (\\<lambda>t. P)\"\n  \"\\<ominus>\\<^sub>S t t0 I. P\" \\<rightleftharpoons> \"CONST iLastStrong t0 I (\\<lambda>t. P)\""], ["", "text \\<open>Some examples for Next and Last operator\\<close>"], ["", "lemma \"\\<circle> t 5 [0\\<dots>,10]. ([0::int,10,20,30,40,50,60,70,80,90] ! t < 80)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<circle> t 5 [0\\<dots>,10].\n       [0, 10, 20, 30, 40, 50, 60, 70, 80, 90] ! t < 80", "by (simp add: iNext_def iIN_inext)"], ["", "lemma \"\\<ominus> t 5 [0\\<dots>,10]. ([0::int,10,20,30,40,50,60,70,80,90] ! t < 80)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus> t 5 [0\\<dots>,10].\n       [0, 10, 20, 30, 40, 50, 60, 70, 80, 90] ! t < 80", "by (simp add: iLast_def iIN_iprev)"], ["", "text \\<open>Temporal Until operator\\<close>"], ["", "definition iUntil :: \"iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Until\\<close>\n  where \"iUntil I P Q \\<equiv> \\<diamond> t I. Q t \\<and> (\\<box> t' (I \\<down>< t). P t')\""], ["", "text \\<open>Temporal Since operator (past operator corresponding to Until)\\<close>"], ["", "definition iSince :: \"iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Since\\<close>\n  where \"iSince I P Q \\<equiv> \\<diamond> t I. Q t \\<and> (\\<box> t' (I \\<down>> t). P t')\""], ["", "syntax\n  \"_iUntil\" ::  \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" \n    (\"(_./ _ (3\\<U> _ _)./ _)\" [10, 0, 0, 0, 10] 10)\n  \"_iSince\" ::  \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" \n    (\"(_./ _ (3\\<S> _ _)./ _)\" [10, 0, 0, 0, 10] 10)"], ["", "translations\n  \"P. t \\<U> t' I. Q\" \\<rightleftharpoons> \"CONST iUntil I (\\<lambda>t. P) (\\<lambda>t'. Q)\"\n  \"P. t \\<S> t' I. Q\" \\<rightleftharpoons> \"CONST iSince I (\\<lambda>t. P) (\\<lambda>t'. Q)\""], ["", "definition iWeakUntil :: \"iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Weak Until/Wating-for/Unless\\<close>\n  where \"iWeakUntil I P Q \\<equiv> (\\<box> t I. P t) \\<or> (\\<diamond> t I. Q t \\<and> (\\<box> t' (I \\<down>< t). P t'))\""], ["", "definition iWeakSince :: \"iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Weak Since/Back-to\\<close>\n  where \"iWeakSince I P Q \\<equiv> (\\<box> t I. P t) \\<or> (\\<diamond> t I. Q t \\<and> (\\<box> t' (I \\<down>> t). P t'))\""], ["", "syntax\n  \"_iWeakUntil\" ::  \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" \n    (\"(_./ _ (3\\<W> _ _)./ _)\" [10, 0, 0, 0, 10] 10)\n  \"_iWeakSince\" ::  \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" \n    (\"(_./ _ (3\\<B> _ _)./ _)\" [10, 0, 0, 0, 10] 10)"], ["", "translations\n  \"P. t \\<W> t' I. Q\" \\<rightleftharpoons> \"CONST iWeakUntil I (\\<lambda>t. P) (\\<lambda>t'. Q)\"\n  \"P. t \\<B> t' I. Q\" \\<rightleftharpoons> \"CONST iWeakSince I (\\<lambda>t. P) (\\<lambda>t'. Q)\""], ["", "definition iRelease :: \"iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Release\\<close>\n  where \"iRelease I P Q \\<equiv> (\\<box> t I. Q t) \\<or> (\\<diamond> t I. P t \\<and> (\\<box> t' (I \\<down>\\<le> t). Q t'))\""], ["", "definition iTrigger :: \"iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\"      \\<comment> \\<open>Trigger\\<close>\n  where \"iTrigger I P Q \\<equiv> (\\<box> t I. Q t) \\<or> (\\<diamond> t I. P t \\<and> (\\<box> t' (I \\<down>\\<ge> t). Q t'))\""], ["", "syntax\n  \"_iRelease\" ::  \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" \n    (\"(_./ _ (3\\<R> _ _)./ _)\" [10, 0, 0, 0, 10] 10)\n  \"_iTrigger\" ::  \"Time \\<Rightarrow> Time \\<Rightarrow> iT \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> (Time \\<Rightarrow> bool) \\<Rightarrow> bool\" \n    (\"(_./ _ (3\\<T> _ _)./ _)\" [10, 0, 0, 0, 10] 10)"], ["", "translations\n  \"P. t \\<R> t' I. Q\" \\<rightleftharpoons> \"CONST iRelease I (\\<lambda>t. P) (\\<lambda>t'. Q)\"\n  \"P. t \\<T> t' I. Q\" \\<rightleftharpoons> \"CONST iTrigger I (\\<lambda>t. P) (\\<lambda>t'. Q)\""], ["", "lemmas iTL_Next_defs =\n  iNext_def iLast_def\n  iNextWeak_def iLastWeak_def\n  iNextStrong_def iLastStrong_def"], ["", "lemmas iTL_defs = \n  iAll_def iEx_def\n  iUntil_def iSince_def\n  iWeakUntil_def iWeakSince_def\n  iRelease_def iTrigger_def\n  iTL_Next_defs"], ["", "(* Like in Set.thy *)\n(* To avoid eta-contraction of body: *)"], ["", "print_translation \\<open>\n [Syntax_Trans.preserve_binder_abs2_tr' @{const_syntax iAll} @{syntax_const \"_iAll\"},\n  Syntax_Trans.preserve_binder_abs2_tr' @{const_syntax iEx} @{syntax_const \"_iEx\"}]\n\\<close>"], ["", "print_translation \\<open>\nlet\n  fun btr' syn [i,Abs abs,Abs abs'] =\n    let\n      val (t,P) = Syntax_Trans.atomic_abs_tr' abs;\n      val (t',Q) = Syntax_Trans.atomic_abs_tr' abs'\n    in Syntax.const syn $ P $ t $ t' $ i $ Q end\nin\n [(@{const_syntax \"iUntil\"}, K (btr' \"_iUntil\")),\n  (@{const_syntax \"iSince\"}, K (btr' \"_iSince\"))]\nend\n\\<close>"], ["", "print_translation \\<open>\nlet\n  fun btr' syn [i,Abs abs,Abs abs'] =\n    let\n      val (t,P) = Syntax_Trans.atomic_abs_tr' abs;\n      val (t',Q) = Syntax_Trans.atomic_abs_tr' abs'\n    in Syntax.const syn $ P $ t $ t' $ i $ Q end\nin\n [(@{const_syntax \"iWeakUntil\"}, K (btr' \"_iWeakUntil\")),\n  (@{const_syntax \"iWeakSince\"}, K (btr' \"_iWeakSince\"))]\nend\n\\<close>"], ["", "print_translation \\<open>\nlet\n  fun btr' syn [i,Abs abs,Abs abs'] =\n    let\n      val (t,P) = Syntax_Trans.atomic_abs_tr' abs;\n      val (t',Q) = Syntax_Trans.atomic_abs_tr' abs'\n    in Syntax.const syn $ P $ t $ t' $ i $ Q end\nin\n [(@{const_syntax \"iRelease\"}, K (btr' \"_iRelease\")),\n  (@{const_syntax \"iTrigger\"}, K (btr' \"_iTrigger\"))]\nend\n\\<close>"], ["", "subsection \\<open>Basic lemmata for temporal operators\\<close>"], ["", "subsubsection \\<open>Intro/elim rules\\<close>"], ["", "lemma \n  iexI[intro]:      \"\\<lbrakk> P t; t \\<in> I \\<rbrakk> \\<Longrightarrow> \\<diamond> t I. P t\" and\n  rev_iexI[intro?]: \"\\<lbrakk> t \\<in> I; P t \\<rbrakk> \\<Longrightarrow> \\<diamond> t I. P t\" and\n  iexE[elim!]:      \"\\<lbrakk> \\<diamond> t I. P t; \\<And>t. \\<lbrakk> t \\<in> I; P t \\<rbrakk> \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P t; t \\<in> I\\<rbrakk>\n     \\<Longrightarrow> \\<diamond> t I. P t) &&&\n    (\\<lbrakk>t \\<in> I; P t\\<rbrakk>\n     \\<Longrightarrow> \\<diamond> t I. P t) &&&\n    (\\<lbrakk>\\<diamond> t I. P t;\n      \\<And>t. \\<lbrakk>t \\<in> I; P t\\<rbrakk> \\<Longrightarrow> Q\\<rbrakk>\n     \\<Longrightarrow> Q)", "by (unfold iEx_def, blast+)"], ["", "lemma\n  iallI[intro!]: \"(\\<And>t. t \\<in> I \\<Longrightarrow> P t) \\<Longrightarrow> \\<box> t I. P t\" and\n  ispec[dest?]: \"\\<lbrakk> \\<box> t I. P t; t \\<in> I \\<rbrakk> \\<Longrightarrow> P t\" and\n  iallE[elim]: \"\\<lbrakk> \\<box> t I. P t; P t \\<Longrightarrow> Q; t \\<notin> I \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>t. t \\<in> I \\<Longrightarrow> P t) \\<Longrightarrow>\n     \\<box> t I. P t) &&&\n    (\\<lbrakk>\\<box> t I. P t; t \\<in> I\\<rbrakk> \\<Longrightarrow> P t) &&&\n    (\\<lbrakk>\\<box> t I. P t; P t \\<Longrightarrow> Q;\n      t \\<notin> I \\<Longrightarrow> Q\\<rbrakk>\n     \\<Longrightarrow> Q)", "by (unfold iAll_def, blast+)"], ["", "lemma\n  iuntilI[intro]: \"\n    \\<lbrakk> Q t; (\\<And>t'. t' \\<in> I \\<down>< t\\<Longrightarrow> P t'); t \\<in> I \\<rbrakk> \\<Longrightarrow> P t'. t' \\<U> t I. Q t\" and\n  rev_iuntilI[intro?]: \"\n    \\<lbrakk> t \\<in> I; Q t; (\\<And>t'. t' \\<in> I \\<down>< t\\<Longrightarrow> P t') \\<rbrakk> \\<Longrightarrow> P t'. t' \\<U> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q t; \\<And>t'. t' \\<in> I \\<down>< t \\<Longrightarrow> P t';\n      t \\<in> I\\<rbrakk>\n     \\<Longrightarrow> P t'. t' \\<U> t I. Q t) &&&\n    (\\<lbrakk>t \\<in> I; Q t;\n      \\<And>t'. t' \\<in> I \\<down>< t \\<Longrightarrow> P t'\\<rbrakk>\n     \\<Longrightarrow> P t'. t' \\<U> t I. Q t)", "by (unfold iUntil_def, blast+)"], ["", "lemma\n  iuntilE[elim]: \"\n    \\<lbrakk> P' t'. t' \\<U> t I. P t; \\<And>t. \\<lbrakk> t \\<in> I; P t \\<rbrakk> \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P' t'. t' \\<U> t I. P t;\n     \\<And>t. \\<lbrakk>t \\<in> I; P t\\<rbrakk> \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (unfold iUntil_def, blast)"], ["", "lemma\n  isinceI[intro]: \"\n    \\<lbrakk> Q t; (\\<And>t'. t' \\<in> I \\<down>> t\\<Longrightarrow> P t'); t \\<in> I \\<rbrakk> \\<Longrightarrow> P t'. t' \\<S> t I. Q t\" and\n  rev_isinceI[intro?]: \"\n    \\<lbrakk> t \\<in> I; Q t; (\\<And>t'. t' \\<in> I \\<down>> t\\<Longrightarrow> P t') \\<rbrakk> \\<Longrightarrow> P t'. t' \\<S> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>Q t; \\<And>t'. t' \\<in> I \\<down>> t \\<Longrightarrow> P t';\n      t \\<in> I\\<rbrakk>\n     \\<Longrightarrow> P t'. t' \\<S> t I. Q t) &&&\n    (\\<lbrakk>t \\<in> I; Q t;\n      \\<And>t'. t' \\<in> I \\<down>> t \\<Longrightarrow> P t'\\<rbrakk>\n     \\<Longrightarrow> P t'. t' \\<S> t I. Q t)", "by (unfold iSince_def, blast+)"], ["", "lemma\n  isinceE[elim]: \"\n    \\<lbrakk> P' t'. t' \\<S> t I. P t; \\<And>t. \\<lbrakk> t \\<in> I; P t \\<rbrakk> \\<Longrightarrow> Q \\<rbrakk> \\<Longrightarrow> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P' t'. t' \\<S> t I. P t;\n     \\<And>t. \\<lbrakk>t \\<in> I; P t\\<rbrakk> \\<Longrightarrow> Q\\<rbrakk>\n    \\<Longrightarrow> Q", "by (unfold iSince_def, blast)"], ["", "subsubsection \\<open>Rewrite rules for trivial simplification\\<close>"], ["", "lemma iall_triv[simp]: \"(\\<box> t I. P) = ((\\<exists>t. t \\<in> I) \\<longrightarrow> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t I. P) = ((\\<exists>t. t \\<in> I) \\<longrightarrow> P)", "by (simp add: iAll_def)"], ["", "lemma iex_triv[simp]: \"(\\<diamond> t I. P) = ((\\<exists>t. t \\<in> I) \\<and> P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I. P) = ((\\<exists>t. t \\<in> I) \\<and> P)", "by (simp add: iEx_def)"], ["", "lemma iex_conjL1: \"\n  (\\<diamond> t1 I1. (P1 t1 \\<and> (\\<diamond> t2 I2. P2 t1 t2))) = \n  (\\<diamond> t1 I1. \\<diamond> t2 I2. P1 t1 \\<and> P2 t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t1 I1. P1 t1 \\<and> (\\<diamond> t2 I2. P2 t1 t2)) =\n    (\\<diamond> t1 I1. \\<diamond> t2 I2. P1 t1 \\<and> P2 t1 t2)", "by blast"], ["", "lemma iex_conjR1: \"\n  (\\<diamond> t1 I1. ((\\<diamond> t2 I2. P2 t1 t2) \\<and> P1 t1)) =\n  (\\<diamond> t1 I1. \\<diamond> t2 I2. P2 t1 t2 \\<and> P1 t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t1 I1. (\\<diamond> t2 I2. P2 t1 t2) \\<and> P1 t1) =\n    (\\<diamond> t1 I1. \\<diamond> t2 I2. P2 t1 t2 \\<and> P1 t1)", "by blast"], ["", "lemma iex_conjL2: \"\n  (\\<diamond> t1 I1. (P1 t1 \\<and> (\\<diamond> t2 (I2 t1). P2 t1 t2))) = \n  (\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). P1 t1 \\<and> P2 t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t1 I1. P1 t1 \\<and> (\\<diamond> t2 I2 t1. P2 t1 t2)) =\n    (\\<diamond> t1 I1. \\<diamond> t2 I2 t1. P1 t1 \\<and> P2 t1 t2)", "by blast"], ["", "lemma iex_conjR2: \"\n  (\\<diamond> t1 I1. ((\\<diamond> t2 (I2 t1). P2 t1 t2) \\<and> P1 t1)) = \n  (\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). P2 t1 t2 \\<and> P1 t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t1 I1. (\\<diamond> t2 I2 t1. P2 t1 t2) \\<and> P1 t1) =\n    (\\<diamond> t1 I1. \\<diamond> t2 I2 t1. P2 t1 t2 \\<and> P1 t1)", "by blast"], ["", "lemma iex_commute: \"\n  (\\<diamond> t1 I1. \\<diamond> t2 I2. P t1 t2) = \n  (\\<diamond> t2 I2. \\<diamond> t1 I1. P t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t1 I1. \\<diamond> t2 I2. P t1 t2) =\n    (\\<diamond> t2 I2. \\<diamond> t1 I1. P t1 t2)", "by blast"], ["", "lemma iall_conjL1: \"\n  I2 \\<noteq> {} \\<Longrightarrow>\n  (\\<box> t1 I1. (P1 t1 \\<and> (\\<box> t2 I2. P2 t1 t2))) = \n  (\\<box> t1 I1. \\<box> t2 I2. P1 t1 \\<and> P2 t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I2 \\<noteq> {} \\<Longrightarrow>\n    (\\<box> t1 I1. P1 t1 \\<and> (\\<box> t2 I2. P2 t1 t2)) =\n    (\\<box> t1 I1. \\<box> t2 I2. P1 t1 \\<and> P2 t1 t2)", "by blast"], ["", "lemma iall_conjR1: \"\n  I2 \\<noteq> {} \\<Longrightarrow>\n  (\\<box> t1 I1. ((\\<box> t2 I2. P2 t1 t2) \\<and> P1 t1)) =\n  (\\<box> t1 I1. \\<box> t2 I2. P2 t1 t2 \\<and> P1 t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I2 \\<noteq> {} \\<Longrightarrow>\n    (\\<box> t1 I1. (\\<box> t2 I2. P2 t1 t2) \\<and> P1 t1) =\n    (\\<box> t1 I1. \\<box> t2 I2. P2 t1 t2 \\<and> P1 t1)", "by blast"], ["", "lemma iall_conjL2: \"\n  \\<box> t1 I1. I2 t1 \\<noteq> {} \\<Longrightarrow>\n  (\\<box> t1 I1. (P1 t1 \\<and> (\\<box> t2 (I2 t1). P2 t1 t2))) = \n  (\\<box> t1 I1. \\<box> t2 (I2 t1). P1 t1 \\<and> P2 t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t1 I1. I2 t1 \\<noteq> {} \\<Longrightarrow>\n    (\\<box> t1 I1. P1 t1 \\<and> (\\<box> t2 I2 t1. P2 t1 t2)) =\n    (\\<box> t1 I1. \\<box> t2 I2 t1. P1 t1 \\<and> P2 t1 t2)", "by blast"], ["", "lemma iall_conjR2: \"\n  \\<box> t1 I1. I2 t1 \\<noteq> {} \\<Longrightarrow>\n  (\\<box> t1 I1. ((\\<box> t2 (I2 t1). P2 t1 t2) \\<and> P1 t1)) = \n  (\\<box> t1 I1. \\<box> t2 (I2 t1). P2 t1 t2 \\<and> P1 t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t1 I1. I2 t1 \\<noteq> {} \\<Longrightarrow>\n    (\\<box> t1 I1. (\\<box> t2 I2 t1. P2 t1 t2) \\<and> P1 t1) =\n    (\\<box> t1 I1. \\<box> t2 I2 t1. P2 t1 t2 \\<and> P1 t1)", "by blast"], ["", "lemma iall_commute: \"\n  (\\<box> t1 I1. \\<box> t2 I2. P t1 t2) = \n  (\\<box> t2 I2. \\<box> t1 I1. P t1 t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t1 I1. \\<box> t2 I2. P t1 t2) =\n    (\\<box> t2 I2. \\<box> t1 I1. P t1 t2)", "by blast"], ["", "lemma iall_conj_distrib: \"\n  (\\<box> t I. P t \\<and> Q t) = ((\\<box> t I. P t) \\<and> (\\<box> t I. Q t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t I. P t \\<and> Q t) =\n    ((\\<box> t I. P t) \\<and> (\\<box> t I. Q t))", "by blast"], ["", "lemma iex_disj_distrib: \"\n  (\\<diamond> t I. P t \\<or> Q t) = ((\\<diamond> t I. P t) \\<or> (\\<diamond> t I. Q t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I. P t \\<or> Q t) =\n    ((\\<diamond> t I. P t) \\<or> (\\<diamond> t I. Q t))", "by blast"], ["", "lemma iall_conj_distrib2: \"\n  (\\<box> t1 I1. \\<box> t2 (I2 t1). P t1 t2 \\<and> Q t1 t2) = \n  ((\\<box> t1 I1. \\<box> t2 (I2 t1). P t1 t2) \\<and> (\\<box> t1 I1. \\<box> t2 (I2 t1). Q t1 t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t1 I1. \\<box> t2 I2 t1. P t1 t2 \\<and> Q t1 t2) =\n    ((\\<box> t1 I1. \\<box> t2 I2 t1. P t1 t2) \\<and>\n     (\\<box> t1 I1. \\<box> t2 I2 t1. Q t1 t2))", "by blast"], ["", "lemma iex_disj_distrib2: \"\n  (\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). P t1 t2 \\<or> Q t1 t2) = \n  ((\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). P t1 t2) \\<or> (\\<diamond> t1 I1. \\<diamond> t2 (I2 t1). Q t1 t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t1 I1. \\<diamond> t2 I2 t1. P t1 t2 \\<or> Q t1 t2) =\n    ((\\<diamond> t1 I1. \\<diamond> t2 I2 t1. P t1 t2) \\<or>\n     (\\<diamond> t1 I1. \\<diamond> t2 I2 t1. Q t1 t2))", "by blast"], ["", "lemma iUntil_disj_distrib: \"\n  (P t1. t1 \\<U> t2 I. (Q1 t2 \\<or> Q2 t2)) = ((P t1. t1 \\<U> t2 I. Q1 t2) \\<or> (P t1. t1 \\<U> t2 I. Q2 t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<U> t2 I. Q1 t2 \\<or> Q2 t2) =\n    ((P t1. t1 \\<U> t2 I. Q1 t2) \\<or> (P t1. t1 \\<U> t2 I. Q2 t2))", "unfolding iUntil_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I.\n        (Q1 t \\<or> Q2 t) \\<and> (\\<box> t' I \\<down>< t. P t')) =\n    ((\\<diamond> t I. Q1 t \\<and> (\\<box> t' I \\<down>< t. P t')) \\<or>\n     (\\<diamond> t I. Q2 t \\<and> (\\<box> t' I \\<down>< t. P t')))", "by blast"], ["", "lemma iSince_disj_distrib: \"\n  (P t1. t1 \\<S> t2 I. (Q1 t2 \\<or> Q2 t2)) = ((P t1. t1 \\<S> t2 I. Q1 t2) \\<or> (P t1. t1 \\<S> t2 I. Q2 t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<S> t2 I. Q1 t2 \\<or> Q2 t2) =\n    ((P t1. t1 \\<S> t2 I. Q1 t2) \\<or> (P t1. t1 \\<S> t2 I. Q2 t2))", "unfolding iSince_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I.\n        (Q1 t \\<or> Q2 t) \\<and> (\\<box> t' I \\<down>> t. P t')) =\n    ((\\<diamond> t I. Q1 t \\<and> (\\<box> t' I \\<down>> t. P t')) \\<or>\n     (\\<diamond> t I. Q2 t \\<and> (\\<box> t' I \\<down>> t. P t')))", "by blast"], ["", "lemma \n  iNext_iff: \"(\\<circle> t t0 I. P t) = (\\<box> t [\\<dots>0] \\<oplus> (inext t0 I). P t)\" and\n  iLast_iff: \"(\\<ominus> t t0 I. P t) = (\\<box> t [\\<dots>0] \\<oplus> (iprev t0 I). P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iNext t0 I P = (\\<box> t [\\<dots>0] \\<oplus> inext t0 I. P t) &&&\n    iLast t0 I P = (\\<box> t [\\<dots>0] \\<oplus> iprev t0 I. P t)", "by (fastforce simp: iTL_Next_defs iT_add iIN_0)+"], ["", "lemma \n  iNext_iEx_iff: \"(\\<circle> t t0 I. P t) = (\\<diamond> t [\\<dots>0] \\<oplus> (inext t0 I). P t)\" and\n  iLast_iEx_iff: \"(\\<ominus> t t0 I. P t) = (\\<diamond> t [\\<dots>0] \\<oplus> (iprev t0 I). P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iNext t0 I P = (\\<diamond> t [\\<dots>0] \\<oplus> inext t0 I. P t) &&&\n    iLast t0 I P = (\\<diamond> t [\\<dots>0] \\<oplus> iprev t0 I. P t)", "by (fastforce simp: iTL_Next_defs iT_add iIN_0)+"], ["", "lemma inext_singleton_cut_greater_not_empty_iff: \"\n  ({inext t0 I} \\<down>> t0 \\<noteq> {}) = (I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({inext t0 I} \\<down>> t0 \\<noteq> {}) =\n    (I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)", "apply (simp add: cut_greater_singleton)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 = {} \\<or> t0 \\<notin> I)", "apply (case_tac \"t0 \\<in> I\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. t0 \\<in> I \\<Longrightarrow>\n    (t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 = {} \\<or> t0 \\<notin> I)\n 2. t0 \\<notin> I \\<Longrightarrow>\n    (t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 = {} \\<or> t0 \\<notin> I)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. t0 \\<notin> I \\<Longrightarrow>\n    (t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 = {} \\<or> t0 \\<notin> I)\n 2. t0 \\<in> I \\<Longrightarrow>\n    (t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 = {} \\<or> t0 \\<notin> I)", "apply (simp add: not_in_inext_fix)"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> I \\<Longrightarrow>\n    (t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> t0 < inext t0 I \\<longrightarrow>\n     I \\<down>> t0 = {} \\<or> t0 \\<notin> I)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> I \\<Longrightarrow>\n    (t0 < inext t0 I \\<longrightarrow> I \\<down>> t0 \\<noteq> {}) \\<and>\n    (\\<not> t0 < inext t0 I \\<longrightarrow> I \\<down>> t0 = {})", "apply (case_tac \"I \\<down>> t0 = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>t0 \\<in> I; I \\<down>> t0 = {}\\<rbrakk>\n    \\<Longrightarrow> (t0 < inext t0 I \\<longrightarrow>\n                       I \\<down>> t0 \\<noteq> {}) \\<and>\n                      (\\<not> t0 < inext t0 I \\<longrightarrow>\n                       I \\<down>> t0 = {})\n 2. \\<lbrakk>t0 \\<in> I; I \\<down>> t0 \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (t0 < inext t0 I \\<longrightarrow>\n                       I \\<down>> t0 \\<noteq> {}) \\<and>\n                      (\\<not> t0 < inext t0 I \\<longrightarrow>\n                       I \\<down>> t0 = {})", "apply (simp add: cut_greater_empty_iff inext_all_le_fix)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<in> I; I \\<down>> t0 \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (t0 < inext t0 I \\<longrightarrow>\n                       I \\<down>> t0 \\<noteq> {}) \\<and>\n                      (\\<not> t0 < inext t0 I \\<longrightarrow>\n                       I \\<down>> t0 = {})", "apply (simp add: cut_greater_not_empty_iff inext_mono2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iprev_singleton_cut_less_not_empty_iff: \"\n  ({iprev t0 I} \\<down>< t0 \\<noteq> {}) = (I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({iprev t0 I} \\<down>< t0 \\<noteq> {}) =\n    (I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)", "apply (simp add: cut_less_singleton)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 = {} \\<or> t0 \\<notin> I)", "apply (case_tac \"t0 \\<in> I\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. t0 \\<in> I \\<Longrightarrow>\n    (iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 = {} \\<or> t0 \\<notin> I)\n 2. t0 \\<notin> I \\<Longrightarrow>\n    (iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 = {} \\<or> t0 \\<notin> I)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. t0 \\<notin> I \\<Longrightarrow>\n    (iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 = {} \\<or> t0 \\<notin> I)\n 2. t0 \\<in> I \\<Longrightarrow>\n    (iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 = {} \\<or> t0 \\<notin> I)", "apply (simp add: not_in_iprev_fix)"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> I \\<Longrightarrow>\n    (iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I) \\<and>\n    (\\<not> iprev t0 I < t0 \\<longrightarrow>\n     I \\<down>< t0 = {} \\<or> t0 \\<notin> I)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. t0 \\<in> I \\<Longrightarrow>\n    (iprev t0 I < t0 \\<longrightarrow> I \\<down>< t0 \\<noteq> {}) \\<and>\n    (\\<not> iprev t0 I < t0 \\<longrightarrow> I \\<down>< t0 = {})", "apply (case_tac \"I \\<down>< t0 = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>t0 \\<in> I; I \\<down>< t0 = {}\\<rbrakk>\n    \\<Longrightarrow> (iprev t0 I < t0 \\<longrightarrow>\n                       I \\<down>< t0 \\<noteq> {}) \\<and>\n                      (\\<not> iprev t0 I < t0 \\<longrightarrow>\n                       I \\<down>< t0 = {})\n 2. \\<lbrakk>t0 \\<in> I; I \\<down>< t0 \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (iprev t0 I < t0 \\<longrightarrow>\n                       I \\<down>< t0 \\<noteq> {}) \\<and>\n                      (\\<not> iprev t0 I < t0 \\<longrightarrow>\n                       I \\<down>< t0 = {})", "apply (simp add: cut_less_empty_iff iprev_all_ge_fix)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t0 \\<in> I; I \\<down>< t0 \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (iprev t0 I < t0 \\<longrightarrow>\n                       I \\<down>< t0 \\<noteq> {}) \\<and>\n                      (\\<not> iprev t0 I < t0 \\<longrightarrow>\n                       I \\<down>< t0 = {})", "apply (simp add: cut_less_not_empty_iff iprev_mono2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma inext_singleton_cut_greater_empty_iff: \"\n  ({inext t0 I} \\<down>> t0 = {}) = (I \\<down>> t0 = {} \\<or> t0 \\<notin> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({inext t0 I} \\<down>> t0 = {}) =\n    (I \\<down>> t0 = {} \\<or> t0 \\<notin> I)", "apply (subst Not_eq_iff[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({inext t0 I} \\<down>> t0 \\<noteq> {}) =\n    (\\<not> (I \\<down>> t0 = {} \\<or> t0 \\<notin> I))", "apply (simp add: inext_singleton_cut_greater_not_empty_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iprev_singleton_cut_less_empty_iff: \"\n  ({iprev t0 I} \\<down>< t0 = {}) = (I \\<down>< t0 = {} \\<or> t0 \\<notin> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({iprev t0 I} \\<down>< t0 = {}) =\n    (I \\<down>< t0 = {} \\<or> t0 \\<notin> I)", "apply (subst Not_eq_iff[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({iprev t0 I} \\<down>< t0 \\<noteq> {}) =\n    (\\<not> (I \\<down>< t0 = {} \\<or> t0 \\<notin> I))", "apply (simp add: iprev_singleton_cut_less_not_empty_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iNextWeak_iff : \"(\\<circle>\\<^sub>W t t0 I. P t) = ((\\<circle> t t0 I. P t) \\<or> (I \\<down>> t0 = {}) \\<or> t0 \\<notin> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iNextWeak t0 I P =\n    (iNext t0 I P \\<or> I \\<down>> t0 = {} \\<or> t0 \\<notin> I)", "apply (unfold iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>t\\<in>{inext t0 I} \\<down>> t0. P t) =\n    (P (inext t0 I) \\<or> I \\<down>> t0 = {} \\<or> t0 \\<notin> I)", "apply (simp add: inext_singleton_cut_greater_empty_iff[symmetric] cut_greater_singleton)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iNextStrong_iff : \"(\\<circle>\\<^sub>S t t0 I. P t) = ((\\<circle> t t0 I. P t) \\<and> (I \\<down>> t0 \\<noteq> {}) \\<and> t0 \\<in> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iNextStrong t0 I P =\n    (iNext t0 I P \\<and> I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)", "apply (unfold iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>t\\<in>{inext t0 I} \\<down>> t0. P t) =\n    (P (inext t0 I) \\<and> I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)", "apply (simp add: inext_singleton_cut_greater_not_empty_iff[symmetric] cut_greater_singleton)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iLastWeak_iff : \"(\\<ominus>\\<^sub>W t t0 I. P t) = ((\\<ominus> t t0 I. P t) \\<or> (I \\<down>< t0 = {}) \\<or> t0 \\<notin> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iLastWeak t0 I P =\n    (iLast t0 I P \\<or> I \\<down>< t0 = {} \\<or> t0 \\<notin> I)", "apply (unfold iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>t\\<in>{iprev t0 I} \\<down>< t0. P t) =\n    (P (iprev t0 I) \\<or> I \\<down>< t0 = {} \\<or> t0 \\<notin> I)", "apply (simp add: iprev_singleton_cut_less_empty_iff[symmetric] cut_less_singleton)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iLastStrong_iff : \"(\\<ominus>\\<^sub>S t t0 I. P t) = ((\\<ominus> t t0 I. P t) \\<and> (I \\<down>< t0 \\<noteq> {}) \\<and> t0 \\<in> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iLastStrong t0 I P =\n    (iLast t0 I P \\<and> I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)", "apply (unfold iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>t\\<in>{iprev t0 I} \\<down>< t0. P t) =\n    (P (iprev t0 I) \\<and> I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)", "apply (simp add: iprev_singleton_cut_less_not_empty_iff[symmetric] cut_less_singleton)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas iTL_Next_iff =\n  iNext_iff iLast_iff\n  iNextWeak_iff iNextStrong_iff\n  iLastWeak_iff iLastStrong_iff"], ["", "lemma \n  iNext_iff_singleton       : \"(\\<circle> t t0 I. P t) = (\\<box> t {inext t0 I}. P t)\" and\n  iLast_iff_singleton       : \"(\\<ominus> t t0 I. P t) = (\\<box> t {iprev t0 I}. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iNext t0 I P = (\\<box> t {inext t0 I}. P t) &&&\n    iLast t0 I P = (\\<box> t {iprev t0 I}. P t)", "by (fastforce simp: iTL_Next_defs iT_add iIN_0)+"], ["", "lemmas iNextLast_iff_singleton = iNext_iff_singleton iLast_iff_singleton"], ["", "lemma \n  iNext_iEx_iff_singleton   : \"(\\<circle> t t0 I. P t) = (\\<diamond> t {inext t0 I}. P t)\" and\n  iLast_iEx_iff_singleton   : \"(\\<ominus> t t0 I. P t) = (\\<diamond> t {iprev t0 I}. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iNext t0 I P = (\\<diamond> t {inext t0 I}. P t) &&&\n    iLast t0 I P = (\\<diamond> t {iprev t0 I}. P t)", "by (fastforce simp: iTL_Next_defs iT_add iIN_0)+"], ["", "lemma \n  iNextWeak_iAll_conv:  \"(\\<circle>\\<^sub>W t t0 I. P t) = (\\<box> t ({inext t0 I} \\<down>> t0). P t)\" and\n  iNextStrong_iEx_conv: \"(\\<circle>\\<^sub>S t t0 I. P t) = (\\<diamond> t ({inext t0 I} \\<down>> t0). P t)\" and\n  iLastWeak_iAll_conv:  \"(\\<ominus>\\<^sub>W t t0 I. P t) = (\\<box> t ({iprev t0 I} \\<down>< t0). P t)\" and\n  iLastStrong_iEx_conv: \"(\\<ominus>\\<^sub>S t t0 I. P t) = (\\<diamond> t ({iprev t0 I} \\<down>< t0). P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (iNextWeak t0 I P = (\\<box> t {inext t0 I} \\<down>> t0. P t) &&&\n     iNextStrong t0 I P = (\\<diamond> t {inext t0 I} \\<down>> t0. P t)) &&&\n    iLastWeak t0 I P = (\\<box> t {iprev t0 I} \\<down>< t0. P t) &&&\n    iLastStrong t0 I P = (\\<diamond> t {iprev t0 I} \\<down>< t0. P t)", "by (simp_all add: iTL_Next_defs)"], ["", "lemma \n  iAll_True[simp]: \"\\<box> t I. True\" and\n  iAll_False[simp]: \"(\\<box> t I. False) = (I = {})\" and\n  iEx_True[simp]: \"(\\<diamond> t I. True) = (I \\<noteq> {})\" and\n  iEx_False[simp]: \"\\<not> (\\<diamond> t I. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t I. True &&& (\\<box> t I. False) = (I = {})) &&&\n    (\\<diamond> t I. True) = (I \\<noteq> {}) &&&\n    \\<not> (\\<diamond> t I. False)", "by blast+"], ["", "lemma empty_iff_iAll_False:   \"(I = {}) = (\\<box> t I. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (I = {}) = (\\<box> t I. False)", "by blast"], ["", "lemma not_empty_iff_iEx_True: \"(I \\<noteq> {}) = (\\<diamond> t I. True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (I \\<noteq> {}) = (\\<diamond> t I. True)", "by blast"], ["", "lemma \n  iNext_True: \"\\<circle> t t0 I. True\" and\n  iNextWeak_True: \"(\\<circle>\\<^sub>W t t0 I. True)\" and\n  iNext_False: \"\\<not> (\\<circle> t t0 I. False)\" and\n  iNextStrong_False: \"\\<not> (\\<circle>\\<^sub>S t t0 I. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<circle> t t0 I. True &&& \\<circle>\\<^sub>W t t0 I. True) &&&\n    \\<not> (\\<circle> t t0 I. False) &&&\n    \\<not> (\\<circle>\\<^sub>S t t0 I. False)", "by (simp_all add: iTL_defs)"], ["", "lemma\n  iNextStrong_True: \"(\\<circle>\\<^sub>S t t0 I. True) = (I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)\" and\n  iNextWeak_False: \"(\\<not> (\\<circle>\\<^sub>W t t0 I. False)) = (I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<circle>\\<^sub>S t t0 I. True) =\n    (I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I) &&&\n    (\\<not> (\\<circle>\\<^sub>W t t0 I. False)) =\n    (I \\<down>> t0 \\<noteq> {} \\<and> t0 \\<in> I)", "by (simp_all add: iTL_defs ex_in_conv inext_singleton_cut_greater_not_empty_iff)"], ["", "lemma \n  iLast_True:        \"\\<ominus> t t0 I. True\" and\n  iLastWeak_True:    \"(\\<ominus>\\<^sub>W t t0 I. True)\" and\n  iLast_False:       \"\\<not> (\\<ominus> t t0 I. False)\" and\n  iLastStrong_False: \"\\<not> (\\<ominus>\\<^sub>S t t0 I. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus> t t0 I. True &&& \\<ominus>\\<^sub>W t t0 I. True) &&&\n    \\<not> (\\<ominus> t t0 I. False) &&&\n    \\<not> (\\<ominus>\\<^sub>S t t0 I. False)", "by (simp_all add: iTL_defs)"], ["", "lemma\n  iLastStrong_True:  \"(\\<ominus>\\<^sub>S t t0 I. True) = (I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)\" and\n  iLastWeak_False:   \"(\\<not> (\\<ominus>\\<^sub>W t t0 I. False)) = (I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<ominus>\\<^sub>S t t0 I. True) =\n    (I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I) &&&\n    (\\<not> (\\<ominus>\\<^sub>W t t0 I. False)) =\n    (I \\<down>< t0 \\<noteq> {} \\<and> t0 \\<in> I)", "by (simp_all add: iTL_defs ex_in_conv iprev_singleton_cut_less_not_empty_iff)"], ["", "lemma iUntil_True_left[simp]: \"(True. t' \\<U> t I. Q t) = (\\<diamond> t I. Q t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (True. t' \\<U> t I. Q t) = (\\<diamond> t I. Q t)", "by blast"], ["", "lemma iUntil_True[simp]: \"(P t'. t' \\<U> t I. True) = (I \\<noteq> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<U> t I. True) = (I \\<noteq> {})", "apply (unfold iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>t\\<in>I. True \\<and> Ball (I \\<down>< t) P) = (I \\<noteq> {})", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>t\\<in>I. True \\<and> Ball (I \\<down>< t) P \\<Longrightarrow>\n    I \\<noteq> {}\n 2. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>t\\<in>I. True \\<and> Ball (I \\<down>< t) P", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>t\\<in>I. True \\<and> Ball (I \\<down>< t) P", "apply (rule_tac x=\"iMin I\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. I \\<noteq> {} \\<Longrightarrow> True \\<and> Ball (I \\<down>< iMin I) P\n 2. I \\<noteq> {} \\<Longrightarrow> iMin I \\<in> I", "apply (simp add: cut_less_Min_empty iMinI_ex2)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iUntil_False_left[simp]: \"(False. t' \\<U> t I. Q t) = (I \\<noteq> {} \\<and> Q (iMin I))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (False. t' \\<U> t I. Q t) = (I \\<noteq> {} \\<and> Q (iMin I))", "apply (case_tac \"I = {}\", blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (False. t' \\<U> t I. Q t) = (I \\<noteq> {} \\<and> Q (iMin I))", "apply (simp add: iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (\\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {}) = Q (iMin I)", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {};\n     \\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {}\\<rbrakk>\n    \\<Longrightarrow> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {}", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; t \\<in> I; Q t; I \\<down>< t = {}\\<rbrakk>\n       \\<Longrightarrow> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {}", "apply (drule iMin_equality)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t x.\n       \\<lbrakk>I \\<noteq> {}; Q t; I \\<down>< t = {}; x \\<in> I\\<rbrakk>\n       \\<Longrightarrow> t \\<le> x\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; Q t; I \\<down>< t = {}; iMin I = t\\<rbrakk>\n       \\<Longrightarrow> Q (iMin I)\n 3. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {}", "apply (simp add: cut_less_empty_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; Q t; I \\<down>< t = {}; iMin I = t\\<rbrakk>\n       \\<Longrightarrow> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {}", "apply (rule_tac x=\"iMin I\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> Q (iMin I) \\<and> I \\<down>< iMin I = {}\n 2. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> iMin I \\<in> I", "apply (simp add: cut_less_Min_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> iMin I \\<in> I", "apply (simp add: iMinI_ex2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iUntil_False[simp]: \"\\<not> (P t'. t' \\<U> t I. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (P t'. t' \\<U> t I. False)", "by blast"], ["", "lemma iSince_True_left[simp]: \"(True. t' \\<S> t I. Q t) = (\\<diamond> t I. Q t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (True. t' \\<S> t I. Q t) = (\\<diamond> t I. Q t)", "by blast"], ["", "lemma iSince_True_if: \"\n  (P t'. t' \\<S> t I. True) = \n  (if finite I then I \\<noteq> {} else \\<diamond> t1 I. \\<box> t2 (I \\<down>> t1). P t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<S> t I. True) =\n    (if finite I then I \\<noteq> {}\n     else \\<diamond> t1 I. \\<box> t2 I \\<down>> t1. P t2)", "apply (clarsimp simp: iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    (\\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>> t. P x) = (I \\<noteq> {})", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I;\n     \\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>> t. P x\\<rbrakk>\n    \\<Longrightarrow> I \\<noteq> {}\n 2. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>> t. P x", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>> t. P x", "apply (rule_tac x=\"Max I\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>I \\<down>> Max I. P x\n 2. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply (simp add: cut_greater_Max_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "corollary iSince_True_finite[simp]: \"finite I \\<Longrightarrow> (P t'. t' \\<S> t I. True) = (I \\<noteq> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow> (P t'. t' \\<S> t I. True) = (I \\<noteq> {})", "by (simp add: iSince_True_if)"], ["", "lemma iSince_False_left[simp]: \"(False. t' \\<S> t I. Q t) = (finite I \\<and> I \\<noteq> {} \\<and> Q (Max I))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (False. t' \\<S> t I. Q t) =\n    (finite I \\<and> I \\<noteq> {} \\<and> Q (Max I))", "apply (simp add: iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}) =\n    (finite I \\<and> I \\<noteq> {} \\<and> Q (Max I))", "apply (case_tac \"I = {}\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}) =\n    (finite I \\<and> I \\<noteq> {} \\<and> Q (Max I))", "apply (case_tac \"infinite I\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; infinite I\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}) =\n                      (finite I \\<and> I \\<noteq> {} \\<and> Q (Max I))\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}) =\n                      (finite I \\<and> I \\<noteq> {} \\<and> Q (Max I))", "apply (simp add: nat_cut_greater_infinite_not_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}) =\n                      (finite I \\<and> I \\<noteq> {} \\<and> Q (Max I))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     \\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}\\<rbrakk>\n    \\<Longrightarrow> finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; t \\<in> I; Q t;\n        I \\<down>> t = {}\\<rbrakk>\n       \\<Longrightarrow> Q (Max I)\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}", "apply (drule Max_equality)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {}\\<rbrakk>\n       \\<Longrightarrow> finite I\n 2. \\<And>t x.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        x \\<in> I\\<rbrakk>\n       \\<Longrightarrow> x \\<le> t\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        Max I = t\\<rbrakk>\n       \\<Longrightarrow> Q (Max I)\n 4. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t x.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        x \\<in> I\\<rbrakk>\n       \\<Longrightarrow> x \\<le> t\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        Max I = t\\<rbrakk>\n       \\<Longrightarrow> Q (Max I)\n 3. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}", "apply (simp add: cut_greater_empty_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        Max I = t\\<rbrakk>\n       \\<Longrightarrow> Q (Max I)\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}", "apply (rule_tac x=\"Max I\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> Q (Max I) \\<and> I \\<down>> Max I = {}\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply (simp add: cut_greater_Max_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     finite I \\<and> I \\<noteq> {} \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iSince_False[simp]: \"\\<not> (P t'. t' \\<S> t I. False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (P t'. t' \\<S> t I. False)", "by blast"], ["", "lemma iWeakUntil_True_left[simp]: \"True. t' \\<W> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. True. t' \\<W> t I. Q t", "by (simp add: iWeakUntil_def)"], ["", "lemma iWeakUntil_True[simp]: \"P t'. t' \\<W> t I. True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t'. t' \\<W> t I. True", "apply (simp add: iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>t\\<in>I. P t) \\<or>\n    (\\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>< t. P x)", "apply (case_tac \"I = {}\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (\\<forall>t\\<in>I. P t) \\<or>\n    (\\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>< t. P x)", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    \\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>< t. P x", "apply (rule_tac x=\"iMin I\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. I \\<noteq> {} \\<Longrightarrow> \\<forall>x\\<in>I \\<down>< iMin I. P x\n 2. I \\<noteq> {} \\<Longrightarrow> iMin I \\<in> I", "apply (simp add: cut_less_Min_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow> iMin I \\<in> I", "apply (simp add: iMinI_ex2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iWeakUntil_False_left[simp]: \"(False. t' \\<W> t I. Q t) = (I = {} \\<or> Q (iMin I))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (False. t' \\<W> t I. Q t) = (I = {} \\<or> Q (iMin I))", "apply (simp add: iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (I = {} \\<or> (\\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {})) =\n    (I = {} \\<or> Q (iMin I))", "apply (case_tac \"I = {}\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (I = {} \\<or> (\\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {})) =\n    (I = {} \\<or> Q (iMin I))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {};\n     I = {} \\<or> (\\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {})\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {})", "apply (clarsimp simp: cut_less_empty_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; t \\<in> I; Q t;\n        \\<forall>x\\<in>I. t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {})", "apply (frule iMin_equality)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t x.\n       \\<lbrakk>I \\<noteq> {}; t \\<in> I; Q t; \\<forall>x\\<in>I. t \\<le> x;\n        x \\<in> I\\<rbrakk>\n       \\<Longrightarrow> t \\<le> x\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; t \\<in> I; Q t; \\<forall>x\\<in>I. t \\<le> x;\n        iMin I = t\\<rbrakk>\n       \\<Longrightarrow> Q (iMin I)\n 3. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {})", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>< t = {}", "apply (rule_tac x=\"iMin I\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> Q (iMin I) \\<and> I \\<down>< iMin I = {}\n 2. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> iMin I \\<in> I", "apply (simp add: cut_less_Min_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> iMin I \\<in> I", "apply (simp add: iMinI_ex2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iWeakUntil_False[simp]: \"(P t'. t' \\<W> t I. False) = (\\<box> t I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<W> t I. False) = (\\<box> t I. P t)", "by (simp add: iWeakUntil_def)"], ["", "lemma iWeakSince_True_left[simp]: \"True. t' \\<B> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. True. t' \\<B> t I. Q t", "by (simp add: iTL_defs)"], ["", "lemma iWeakSince_True_disj: \"\n  (P t'. t' \\<B> t I. True) = \n  (I = {} \\<or> (\\<diamond> t1 I. \\<box> t2 (I \\<down>> t1). P t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<B> t I. True) =\n    (I = {} \\<or> (\\<diamond> t1 I. \\<box> t2 I \\<down>> t1. P t2))", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>t\\<in>I. P t) \\<or>\n     (\\<exists>t\\<in>I. True \\<and> Ball (I \\<down>> t) P)) =\n    (I = {} \\<or> (\\<exists>t\\<in>I. Ball (I \\<down>> t) P))", "by blast"], ["", "lemma iWeakSince_True_finite[simp]: \"finite I \\<Longrightarrow> (P t'. t' \\<B> t I. True)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow> P t'. t' \\<B> t I. True", "apply (simp add: iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    (\\<forall>t\\<in>I. P t) \\<or>\n    (\\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>> t. P x)", "apply (case_tac \"I = {}\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. P t) \\<or>\n                      (\\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>> t. P x)", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>> t. P x", "apply (rule_tac x=\"Max I\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>I \\<down>> Max I. P x\n 2. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply (simp add: cut_greater_Max_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iWeakSince_False_left[simp]: \"(False. t' \\<B> t I. Q t) = (I = {} \\<or> (finite I \\<and> Q (Max I)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (False. t' \\<B> t I. Q t) = (I = {} \\<or> finite I \\<and> Q (Max I))", "apply (simp add: iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (I = {} \\<or> (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})) =\n    (I = {} \\<or> finite I \\<and> Q (Max I))", "apply (case_tac \"I = {}\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (I = {} \\<or> (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})) =\n    (I = {} \\<or> finite I \\<and> Q (Max I))", "apply (case_tac \"infinite I\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; infinite I\\<rbrakk>\n    \\<Longrightarrow> (I = {} \\<or>\n                       (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})) =\n                      (I = {} \\<or> finite I \\<and> Q (Max I))\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I\\<rbrakk>\n    \\<Longrightarrow> (I = {} \\<or>\n                       (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})) =\n                      (I = {} \\<or> finite I \\<and> Q (Max I))", "apply (simp add: nat_cut_greater_infinite_not_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I\\<rbrakk>\n    \\<Longrightarrow> (I = {} \\<or>\n                       (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})) =\n                      (I = {} \\<or> finite I \\<and> Q (Max I))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     I = {} \\<or> (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or> finite I \\<and> Q (Max I)\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     I = {} \\<or> finite I \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; t \\<in> I; Q t;\n        I \\<down>> t = {}\\<rbrakk>\n       \\<Longrightarrow> Q (Max I)\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     I = {} \\<or> finite I \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})", "apply (drule Max_equality)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {}\\<rbrakk>\n       \\<Longrightarrow> finite I\n 2. \\<And>t x.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        x \\<in> I\\<rbrakk>\n       \\<Longrightarrow> x \\<le> t\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        Max I = t\\<rbrakk>\n       \\<Longrightarrow> Q (Max I)\n 4. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     I = {} \\<or> finite I \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t x.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        x \\<in> I\\<rbrakk>\n       \\<Longrightarrow> x \\<le> t\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        Max I = t\\<rbrakk>\n       \\<Longrightarrow> Q (Max I)\n 3. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     I = {} \\<or> finite I \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})", "apply (simp add: cut_greater_empty_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; finite I; Q t; I \\<down>> t = {};\n        Max I = t\\<rbrakk>\n       \\<Longrightarrow> Q (Max I)\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     I = {} \\<or> finite I \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> infinite I;\n     I = {} \\<or> finite I \\<and> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; finite I; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> I \\<down>> t = {}", "apply (rule_tac x=\"Max I\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; finite I; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> Q (Max I) \\<and> I \\<down>> Max I = {}\n 2. \\<lbrakk>I \\<noteq> {}; finite I; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply (simp add: cut_greater_Max_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; finite I; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iWeakSince_False[simp]: \"(P t'. t' \\<B> t I. False) = (\\<box> t I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<B> t I. False) = (\\<box> t I. P t)", "by (simp add: iWeakSince_def)"], ["", "lemma iRelease_True_left[simp]: \"(True. t' \\<R> t I. Q t) = (I = {} \\<or> Q (iMin I))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (True. t' \\<R> t I. Q t) = (I = {} \\<or> Q (iMin I))", "apply (simp add: iTL_defs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>t\\<in>I. Q t) \\<or>\n     (\\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>\\<le> t. Q x)) =\n    (I = {} \\<or> Q (iMin I))", "apply (case_tac \"I = {}\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    ((\\<forall>t\\<in>I. Q t) \\<or>\n     (\\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>\\<le> t. Q x)) =\n    (I = {} \\<or> Q (iMin I))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {};\n     (\\<forall>t\\<in>I. Q t) \\<or>\n     (\\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>\\<le> t. Q x)\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. Q t) \\<or>\n                      (\\<exists>t\\<in>I.\n                          \\<forall>x\\<in>I \\<down>\\<le> t. Q x)", "apply (erule disjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; \\<forall>t\\<in>I. Q t\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {};\n     \\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>\\<le> t. Q x\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or> Q (iMin I)\n 3. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. Q t) \\<or>\n                      (\\<exists>t\\<in>I.\n                          \\<forall>x\\<in>I \\<down>\\<le> t. Q x)", "apply (blast intro: iMinI2_ex2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {};\n     \\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>\\<le> t. Q x\\<rbrakk>\n    \\<Longrightarrow> I = {} \\<or> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. Q t) \\<or>\n                      (\\<exists>t\\<in>I.\n                          \\<forall>x\\<in>I \\<down>\\<le> t. Q x)", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; t \\<in> I;\n        \\<forall>x\\<in>I \\<down>\\<le> t. Q x\\<rbrakk>\n       \\<Longrightarrow> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. Q t) \\<or>\n                      (\\<exists>t\\<in>I.\n                          \\<forall>x\\<in>I \\<down>\\<le> t. Q x)", "apply (drule_tac x=\"iMin I\" in bspec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; t \\<in> I\\<rbrakk>\n       \\<Longrightarrow> iMin I \\<in> I \\<down>\\<le> t\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; t \\<in> I; Q (iMin I)\\<rbrakk>\n       \\<Longrightarrow> Q (iMin I)\n 3. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. Q t) \\<or>\n                      (\\<exists>t\\<in>I.\n                          \\<forall>x\\<in>I \\<down>\\<le> t. Q x)", "apply (blast intro: iMinI_ex2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; t \\<in> I; Q (iMin I)\\<rbrakk>\n       \\<Longrightarrow> Q (iMin I)\n 2. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. Q t) \\<or>\n                      (\\<exists>t\\<in>I.\n                          \\<forall>x\\<in>I \\<down>\\<le> t. Q x)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. Q t) \\<or>\n                      (\\<exists>t\\<in>I.\n                          \\<forall>x\\<in>I \\<down>\\<le> t. Q x)", "apply (rule disjI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. \\<forall>x\\<in>I \\<down>\\<le> t. Q x", "apply (rule_tac x=\"iMin I\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x\\<in>I \\<down>\\<le> iMin I. Q x\n 2. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> iMin I \\<in> I", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; I = {} \\<or> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> iMin I \\<in> I", "apply (simp add: iMinI_ex2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iRelease_True[simp]: \"P t'. t' \\<R> t I. True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t'. t' \\<R> t I. True", "by (simp add: iTL_defs)"], ["", "lemma iRelease_False_left[simp]: \"(False. t' \\<R> t I. Q t) = (\\<box> t I. Q t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (False. t' \\<R> t I. Q t) = (\\<box> t I. Q t)", "by (simp add: iTL_defs)"], ["", "lemma iRelease_False[simp]: \"(P t'. t' \\<R> t I. False) = (I = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<R> t I. False) = (I = {})", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>t\\<in>I. False) \\<or>\n     (\\<exists>t\\<in>I.\n         P t \\<and> (\\<forall>t\\<in>I \\<down>\\<le> t. False))) =\n    (I = {})", "by blast"], ["", "lemma iTrigger_True_left[simp]: \"(True. t' \\<T> t I. Q t) = (I = {} \\<or> (\\<diamond> t1 I. \\<box> t2 (I \\<down>\\<ge> t1). Q t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (True. t' \\<T> t I. Q t) =\n    (I = {} \\<or> (\\<diamond> t1 I. \\<box> t2 I \\<down>\\<ge> t1. Q t2))", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>t\\<in>I. Q t) \\<or>\n     (\\<exists>t\\<in>I. True \\<and> Ball (I \\<down>\\<ge> t) Q)) =\n    (I = {} \\<or> (\\<exists>t\\<in>I. Ball (I \\<down>\\<ge> t) Q))", "by blast"], ["", "lemma iTrigger_True[simp]: \"P t'. t' \\<T> t I. True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t'. t' \\<T> t I. True", "by (simp add: iTL_defs)"], ["", "lemma iTrigger_False_left[simp]: \"(False. t' \\<T> t I. Q t) = (\\<box> t I. Q t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (False. t' \\<T> t I. Q t) = (\\<box> t I. Q t)", "by (simp add: iTL_defs)"], ["", "lemma iTrigger_False[simp]: \"(P t'. t' \\<T> t I. False) = (I = {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<T> t I. False) = (I = {})", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>t\\<in>I. False) \\<or>\n     (\\<exists>t\\<in>I.\n         P t \\<and> (\\<forall>t\\<in>I \\<down>\\<ge> t. False))) =\n    (I = {})", "by blast"], ["", "lemma \n  iUntil_TrueTrue[simp]: \"(True. t' \\<U> t I. True) = (I \\<noteq> {})\" and\n  iSince_TrueTrue[simp]: \"(True. t' \\<S> t I. True) = (I \\<noteq> {})\" and\n  iWeakUntil_TrueTrue[simp]: \"True. t' \\<W> t I. True\" and\n  iWeakSince_TrueTrue[simp]: \"True. t' \\<B> t I. True\" and\n  iRelease_TrueTrue[simp]: \"True. t' \\<R> t I. True\" and\n  iTrigger_TrueTrue[simp]: \"True. t' \\<T> t I. True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((True. t' \\<U> t I. True) = (I \\<noteq> {}) &&&\n     (True. t' \\<S> t I. True) = (I \\<noteq> {}) &&&\n     True. t' \\<W> t I. True) &&&\n    True. t' \\<B> t I. True &&&\n    True. t' \\<R> t I. True &&& True. t' \\<T> t I. True", "by (simp_all add: iTL_defs ex_in_conv)"], ["", "subsubsection \\<open>Empty sets and singletons\\<close>"], ["", "lemma iAll_empty[simp]: \"\\<box> t {}. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t {}. P t", "by blast"], ["", "lemma iEx_empty[simp]: \"\\<not> (\\<diamond> t {}. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<diamond> t {}. P t)", "by blast"], ["", "lemma iUntil_empty[simp]: \"\\<not> (P t0. t0 \\<U> t1 {}. Q t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (P t0. t0 \\<U> t1 {}. Q t1)", "by blast"], ["", "lemma iSince_empty[simp]: \"\\<not> (P t0. t0 \\<S> t1 {}. Q t1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (P t0. t0 \\<S> t1 {}. Q t1)", "by blast"], ["", "lemma iWeakUntil_empty[simp]: \"P t0. t0 \\<W> t1 {}. Q t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t0. t0 \\<W> t1 {}. Q t1", "by (simp add: iWeakUntil_def)"], ["", "lemma iWeakSince_empty[simp]: \"P t0. t0 \\<B> t1 {}. Q t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t0. t0 \\<B> t1 {}. Q t1", "by (simp add: iWeakSince_def)"], ["", "lemma iRelease_empty[simp]: \"P t0. t0 \\<R> t1 {}. Q t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t0. t0 \\<R> t1 {}. Q t1", "by (simp add: iRelease_def)"], ["", "lemma iTrigger_empty[simp]: \"P t0. t0 \\<T> t1 {}. Q t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t0. t0 \\<T> t1 {}. Q t1", "by (simp add: iTrigger_def)"], ["", "lemmas iTL_empty =\n  iAll_empty iEx_empty\n  iUntil_empty iSince_empty\n  iWeakUntil_empty iWeakSince_empty\n  iRelease_empty iTrigger_empty"], ["", "lemma iAll_singleton[simp]: \"(\\<box> t' {t}. P t') = P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t' {t}. P t') = P t", "by blast"], ["", "lemma iEx_singleton[simp]: \"(\\<diamond> t' {t}. P t') = P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t' {t}. P t') = P t", "by blast"], ["", "lemma iUntil_singleton[simp]: \"(P t0. t0 \\<U> t1 {t}. Q t1) = Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t0. t0 \\<U> t1 {t}. Q t1) = Q t", "by (simp add: iUntil_def cut_less_singleton)"], ["", "lemma iSince_singleton[simp]: \"(P t0. t0 \\<S> t1 {t}. Q t1) = Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t0. t0 \\<S> t1 {t}. Q t1) = Q t", "by (simp add: iSince_def cut_greater_singleton)"], ["", "lemma iWeakUntil_singleton[simp]: \"(P t0. t0 \\<W> t1 {t}. Q t1) = (P t \\<or> Q t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t0. t0 \\<W> t1 {t}. Q t1) = (P t \\<or> Q t)", "by (simp add: iWeakUntil_def cut_less_singleton)"], ["", "lemma iWeakSince_singleton[simp]: \"(P t0. t0 \\<B> t1 {t}. Q t1) = (P t \\<or> Q t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t0. t0 \\<B> t1 {t}. Q t1) = (P t \\<or> Q t)", "by (simp add: iWeakSince_def cut_greater_singleton)"], ["", "lemma iRelease_singleton[simp]: \"(P t0. t0 \\<R> t1 {t}. Q t1) = Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t0. t0 \\<R> t1 {t}. Q t1) = Q t", "unfolding iRelease_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<box> t {t}. Q t) \\<or>\n     (\\<diamond> ta {t}.\n         P ta \\<and> (\\<box> t' {t} \\<down>\\<le> ta. Q t'))) =\n    Q t", "by blast"], ["", "lemma iTrigger_singleton[simp]: \"(P t0. t0 \\<T> t1 {t}. Q t1) = Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t0. t0 \\<T> t1 {t}. Q t1) = Q t", "unfolding iTrigger_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<box> t {t}. Q t) \\<or>\n     (\\<diamond> ta {t}.\n         P ta \\<and> (\\<box> t' {t} \\<down>\\<ge> ta. Q t'))) =\n    Q t", "by blast"], ["", "lemmas iTL_singleton =\n  iAll_singleton iEx_singleton\n  iUntil_singleton iSince_singleton\n  iWeakUntil_singleton iWeakSince_singleton\n  iRelease_singleton iTrigger_singleton"], ["", "subsubsection \\<open>Conversions between temporal operators\\<close>"], ["", "lemma iAll_iEx_conv: \"(\\<box> t I. P t) = (\\<not> (\\<diamond> t I. \\<not> P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t I. P t) = (\\<not> (\\<diamond> t I. \\<not> P t))", "by blast"], ["", "lemma iEx_iAll_conv: \"(\\<diamond> t I. P t) = (\\<not> (\\<box> t I. \\<not> P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I. P t) = (\\<not> (\\<box> t I. \\<not> P t))", "by blast"], ["", "lemma not_iAll[simp]: \"(\\<not> (\\<box> t I. P t)) = (\\<diamond> t I. \\<not> P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (\\<box> t I. P t)) = (\\<diamond> t I. \\<not> P t)", "by blast"], ["", "lemma not_iEx[simp]: \"(\\<not> (\\<diamond> t I. P t)) = (\\<box> t I. \\<not> P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (\\<diamond> t I. P t)) = (\\<box> t I. \\<not> P t)", "by blast"], ["", "lemma iUntil_iEx_conv: \"(True. t' \\<U> t I. P t) = (\\<diamond> t I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (True. t' \\<U> t I. P t) = (\\<diamond> t I. P t)", "by blast"], ["", "lemma iSince_iEx_conv: \"(True. t' \\<S> t I. P t) = (\\<diamond> t I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (True. t' \\<S> t I. P t) = (\\<diamond> t I. P t)", "by blast"], ["", "lemma iRelease_iAll_conv: \"(False. t' \\<R> t I. P t) = (\\<box> t I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (False. t' \\<R> t I. P t) = (\\<box> t I. P t)", "by (simp add: iRelease_def)"], ["", "lemma iTrigger_iAll_conv: \"(False. t' \\<T> t I. P t) = (\\<box> t I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (False. t' \\<T> t I. P t) = (\\<box> t I. P t)", "by (simp add: iTrigger_def)"], ["", "lemma iWeakUntil_iUntil_conv: \"(P t'. t' \\<W> t I. Q t) = ((P t'. t' \\<U> t I. Q t) \\<or> (\\<box> t I. P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<W> t I. Q t) =\n    ((P t'. t' \\<U> t I. Q t) \\<or> (\\<box> t I. P t))", "unfolding iWeakUntil_def iUntil_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<box> t I. P t) \\<or>\n     (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t'))) =\n    ((\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t')) \\<or>\n     (\\<box> t I. P t))", "by blast"], ["", "lemma iWeakSince_iSince_conv: \"(P t'. t' \\<B> t I. Q t) = ((P t'. t' \\<S> t I. Q t) \\<or> (\\<box> t I. P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<B> t I. Q t) =\n    ((P t'. t' \\<S> t I. Q t) \\<or> (\\<box> t I. P t))", "unfolding iWeakSince_def iSince_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<box> t I. P t) \\<or>\n     (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>> t. P t'))) =\n    ((\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>> t. P t')) \\<or>\n     (\\<box> t I. P t))", "by blast"], ["", "lemma iUntil_iWeakUntil_conv: \"(P t'. t' \\<U> t I. Q t) = ((P t'. t' \\<W> t I. Q t) \\<and> (\\<diamond> t I. Q t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<U> t I. Q t) =\n    ((P t'. t' \\<W> t I. Q t) \\<and> (\\<diamond> t I. Q t))", "by (subst iWeakUntil_iUntil_conv, blast)"], ["", "lemma iSince_iWeakSince_conv: \"(P t'. t' \\<S> t I. Q t) = ((P t'. t' \\<B> t I. Q t) \\<and> (\\<diamond> t I. Q t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<S> t I. Q t) =\n    ((P t'. t' \\<B> t I. Q t) \\<and> (\\<diamond> t I. Q t))", "by (subst iWeakSince_iSince_conv, blast)"], ["", "lemma iRelease_iWeakUntil_conv: \"(P t'. t' \\<R> t I. Q t) = (Q t'. t' \\<W> t I. (Q t \\<and> P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<R> t I. Q t) = (Q t'. t' \\<W> t I. Q t \\<and> P t)", "apply (unfold iRelease_def iWeakUntil_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I. P t \\<and> (\\<box> t' I \\<down>\\<le> t. Q t'))) =\n    ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I.\n         (Q t \\<and> P t) \\<and> (\\<box> t' I \\<down>< t. Q t')))", "apply (simp add: cut_le_less_conv_if)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I.\n         (t \\<in> I \\<longrightarrow>\n          P t \\<and> (\\<box> t' insert t (I \\<down>< t). Q t')) \\<and>\n         (t \\<notin> I \\<longrightarrow>\n          P t \\<and> (\\<box> t' I \\<down>< t. Q t')))) =\n    ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I. Q t \\<and> P t \\<and> iAll (I \\<down>< t) Q))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iRelease_iUntil_conv: \"(P t'. t' \\<R> t I. Q t) = ((\\<box> t I. Q t) \\<or> (Q t'. t' \\<U> t I. (Q t \\<and> P t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<R> t I. Q t) =\n    ((\\<box> t I. Q t) \\<or> (Q t'. t' \\<U> t I. Q t \\<and> P t))", "by (fastforce simp: iRelease_iWeakUntil_conv iWeakUntil_iUntil_conv)"], ["", "lemma iTrigger_iWeakSince_conv: \"(P t'. t' \\<T> t I. Q t) = (Q t'. t' \\<B> t I. (Q t \\<and> P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<T> t I. Q t) = (Q t'. t' \\<B> t I. Q t \\<and> P t)", "apply (unfold iTrigger_def iWeakSince_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I. P t \\<and> (\\<box> t' I \\<down>\\<ge> t. Q t'))) =\n    ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I.\n         (Q t \\<and> P t) \\<and> (\\<box> t' I \\<down>> t. Q t')))", "apply (simp add: cut_ge_greater_conv_if)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I.\n         (t \\<in> I \\<longrightarrow>\n          P t \\<and> (\\<box> t' insert t (I \\<down>> t). Q t')) \\<and>\n         (t \\<notin> I \\<longrightarrow>\n          P t \\<and> (\\<box> t' I \\<down>> t. Q t')))) =\n    ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I. Q t \\<and> P t \\<and> iAll (I \\<down>> t) Q))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iTrigger_iSince_conv: \"(P t'. t' \\<T> t I. Q t) = ((\\<box> t I. Q t) \\<or> (Q t'. t' \\<S> t I. (Q t \\<and> P t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<T> t I. Q t) =\n    ((\\<box> t I. Q t) \\<or> (Q t'. t' \\<S> t I. Q t \\<and> P t))", "by (fastforce simp: iTrigger_iWeakSince_conv iWeakSince_iSince_conv)"], ["", "lemma iRelease_not_iUntil_conv: \"(P t'. t' \\<R> t I. Q t) = (\\<not> (\\<not> P t'. t' \\<U> t I. \\<not> Q t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<R> t I. Q t) =\n    (\\<not> (\\<not> P t'. t' \\<U> t I. \\<not> Q t))", "apply (simp only: iUntil_def iRelease_def not_iAll not_iEx de_Morgan_conj not_not)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I. P t \\<and> (\\<box> t' I \\<down>\\<le> t. Q t'))) =\n    (\\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'))", "apply (case_tac \"\\<box> t I. Q t\", blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<box> t I. Q t) \\<Longrightarrow>\n    ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I. P t \\<and> (\\<box> t' I \\<down>\\<le> t. Q t'))) =\n    (\\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'))", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<box> t I. Q t) \\<Longrightarrow>\n    (\\<diamond> t I. P t \\<and> iAll (I \\<down>\\<le> t) Q) =\n    (\\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; \\<not> Q t\\<rbrakk>\n       \\<Longrightarrow> (\\<diamond> t I.\n                             P t \\<and> iAll (I \\<down>\\<le> t) Q) =\n                         (\\<box> t I.\n                             Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<diamond> t I. P t \\<and> iAll (I \\<down>\\<le> t) Q\\<rbrakk>\n       \\<Longrightarrow> \\<box> t I.\n                            Q t \\<or> (\\<diamond> t' I \\<down>< t. P t')\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<le> t) Q", "apply (elim iexE, intro iallI, rename_tac t1 t2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1 t2.\n       \\<lbrakk>t \\<in> I; \\<not> Q t; t1 \\<in> I;\n        P t1 \\<and> iAll (I \\<down>\\<le> t1) Q; t2 \\<in> I\\<rbrakk>\n       \\<Longrightarrow> Q t2 \\<or> (\\<diamond> t' I \\<down>< t2. P t')\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<le> t) Q", "apply (case_tac \"t2 \\<le> t1\", blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1 t2.\n       \\<lbrakk>t \\<in> I; \\<not> Q t; t1 \\<in> I;\n        P t1 \\<and> iAll (I \\<down>\\<le> t1) Q; t2 \\<in> I;\n        \\<not> t2 \\<le> t1\\<rbrakk>\n       \\<Longrightarrow> Q t2 \\<or> (\\<diamond> t' I \\<down>< t2. P t')\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<le> t) Q", "apply (simp add: linorder_not_le, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<le> t) Q", "apply (frule_tac t=t in ispec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t');\n        Q t \\<or> (\\<diamond> t' I \\<down>< t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<le> t) Q", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P ta;\n        ta \\<in> I; ta < t\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<le> t) Q", "apply (rule_tac t=\"iMin {t \\<in> I. P t}\" in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t ta.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P ta;\n        ta \\<in> I; ta < t\\<rbrakk>\n       \\<Longrightarrow> P (iMin {t \\<in> I. P t}) \\<and>\n                         iAll (I \\<down>\\<le> iMin {t \\<in> I. P t}) Q\n 2. \\<And>t ta.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P ta;\n        ta \\<in> I; ta < t\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. P t} \\<in> I", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t ta.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P ta;\n        ta \\<in> I; ta < t\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. P t} \\<in> I\n 2. \\<And>t ta.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P ta;\n        ta \\<in> I; ta < t\\<rbrakk>\n       \\<Longrightarrow> P (iMin {t \\<in> I. P t}) \\<and>\n                         iAll (I \\<down>\\<le> iMin {t \\<in> I. P t}) Q", "apply (blast intro: subsetD[OF _ iMinI_ex])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P ta;\n        ta \\<in> I; ta < t\\<rbrakk>\n       \\<Longrightarrow> P (iMin {t \\<in> I. P t}) \\<and>\n                         iAll (I \\<down>\\<le> iMin {t \\<in> I. P t}) Q", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t ta.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P ta;\n        ta \\<in> I; ta < t\\<rbrakk>\n       \\<Longrightarrow> P (iMin {t \\<in> I. P t})\n 2. \\<And>t ta.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P ta;\n        ta \\<in> I; ta < t\\<rbrakk>\n       \\<Longrightarrow> iAll (I \\<down>\\<le> iMin {t \\<in> I. P t}) Q", "apply (blast intro: iMinI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P ta;\n        ta \\<in> I; ta < t\\<rbrakk>\n       \\<Longrightarrow> iAll (I \\<down>\\<le> iMin {t \\<in> I. P t}) Q", "apply (clarsimp simp: cut_le_mem_iff, rename_tac t1 t2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t1 t2.\n       \\<lbrakk>t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>< t. P t'); P t1;\n        t1 \\<in> I; t1 < t; t2 \\<in> I;\n        t2 \\<le> iMin {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply (drule_tac t=t2 in ispec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t1 t2.\n       \\<lbrakk>t \\<in> I; \\<not> Q t; P t1; t1 \\<in> I; t1 < t; t2 \\<in> I;\n        t2 \\<le> iMin {t \\<in> I. P t};\n        Q t2 \\<or> (\\<diamond> t' I \\<down>< t2. P t')\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply (clarsimp simp: cut_less_mem_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t1 t2 t'.\n       \\<lbrakk>t \\<in> I; \\<not> Q t; P t1; t1 \\<in> I; t1 < t; t2 \\<in> I;\n        t2 \\<le> iMin {t \\<in> I. P t}; P t'; t' \\<in> I; t' < t2\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply (frule_tac x=t' in order_less_le_trans, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t1 t2 t'.\n       \\<lbrakk>t \\<in> I; \\<not> Q t; P t1; t1 \\<in> I; t1 < t; t2 \\<in> I;\n        t2 \\<le> iMin {t \\<in> I. P t}; P t'; t' \\<in> I; t' < t2;\n        t' < iMin {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply (drule not_less_iMin)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t1 t2 t'.\n       \\<lbrakk>t \\<in> I; \\<not> Q t; P t1; t1 \\<in> I; t1 < t; t2 \\<in> I;\n        t2 \\<le> iMin {t \\<in> I. P t}; P t'; t' \\<in> I; t' < t2;\n        t' \\<notin> {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iUntil_not_iRelease_conv: \"(P t'. t' \\<U> t I. Q t) = (\\<not> (\\<not> P t'. t' \\<R> t I. \\<not> Q t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t'. t' \\<U> t I. Q t) =\n    (\\<not> (\\<not> P t'. t' \\<R> t I. \\<not> Q t))", "by (simp add: iRelease_not_iUntil_conv)"], ["", "text \\<open>The Trigger operator \\isasymT is a past operator,\n  so that it is used for time intervals,\n  that are bounded by a current time point, and thus are finite.\n  For an infinite interval\n  the stated relation to the Since operator \\isasymS would not be fulfilled.\\<close>"], ["", "lemma iTrigger_not_iSince_conv: \"finite I \\<Longrightarrow> (P t'. t' \\<T> t I. Q t) = (\\<not> (\\<not> P t'. t' \\<S> t I. \\<not> Q t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    (P t'. t' \\<T> t I. Q t) =\n    (\\<not> (\\<not> P t'. t' \\<S> t I. \\<not> Q t))", "apply (unfold iTrigger_def iSince_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    ((\\<box> t I. Q t) \\<or>\n     (\\<diamond> t I. P t \\<and> (\\<box> t' I \\<down>\\<ge> t. Q t'))) =\n    (\\<not> (\\<diamond> t I.\n                \\<not> Q t \\<and> (\\<box> t' I \\<down>> t. \\<not> P t')))", "apply (case_tac \"\\<box> t I. Q t\", blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<not> (\\<box> t I. Q t)\\<rbrakk>\n    \\<Longrightarrow> ((\\<box> t I. Q t) \\<or>\n                       (\\<diamond> t I.\n                           P t \\<and> (\\<box> t' I \\<down>\\<ge> t. Q t'))) =\n                      (\\<not> (\\<diamond> t I.\n                                  \\<not> Q t \\<and>\n                                  (\\<box> t' I \\<down>> t. \\<not> P t')))", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<not> (\\<box> t I. Q t)\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          P t \\<and> iAll (I \\<down>\\<ge> t) Q) =\n                      (\\<box> t I.\n                          Q t \\<or> (\\<diamond> t' I \\<down>> t. P t'))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t\\<rbrakk>\n       \\<Longrightarrow> (\\<diamond> t I.\n                             P t \\<and> iAll (I \\<down>\\<ge> t) Q) =\n                         (\\<box> t I.\n                             Q t \\<or> (\\<diamond> t' I \\<down>> t. P t'))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<diamond> t I. P t \\<and> iAll (I \\<down>\\<ge> t) Q\\<rbrakk>\n       \\<Longrightarrow> \\<box> t I.\n                            Q t \\<or> (\\<diamond> t' I \\<down>> t. P t')\n 2. \\<And>t.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q", "apply (elim iexE conjE, rule iallI, rename_tac t1 t2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1 t2.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t; t1 \\<in> I; P t1;\n        iAll (I \\<down>\\<ge> t1) Q; t2 \\<in> I\\<rbrakk>\n       \\<Longrightarrow> Q t2 \\<or> (\\<diamond> t' I \\<down>> t2. P t')\n 2. \\<And>t.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q", "apply (case_tac \"t2 \\<ge> t1\", blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1 t2.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t; t1 \\<in> I; P t1;\n        iAll (I \\<down>\\<ge> t1) Q; t2 \\<in> I; \\<not> t1 \\<le> t2\\<rbrakk>\n       \\<Longrightarrow> Q t2 \\<or> (\\<diamond> t' I \\<down>> t2. P t')\n 2. \\<And>t.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q", "apply (simp add: linorder_not_le, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q", "apply (frule_tac t=t in ispec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        Q t \\<or> (\\<diamond> t' I \\<down>> t. P t')\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q", "apply (erule disjE, blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        \\<diamond> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q", "apply (erule iexE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q", "apply (subgoal_tac \"finite {t \\<in> I. P t}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q\n 2. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'\\<rbrakk>\n       \\<Longrightarrow> finite {t \\<in> I. P t}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'\\<rbrakk>\n       \\<Longrightarrow> finite {t \\<in> I. P t}\n 2. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q", "apply (blast intro: subset_finite_imp_finite)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            P t \\<and> iAll (I \\<down>\\<ge> t) Q", "apply (rule_tac t=\"Max {t \\<in> I. P t}\" in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> P (Max {t \\<in> I. P t}) \\<and>\n                         iAll (I \\<down>\\<ge> Max {t \\<in> I. P t}) Q\n 2. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> Max {t \\<in> I. P t} \\<in> I", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> Max {t \\<in> I. P t} \\<in> I\n 2. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> P (Max {t \\<in> I. P t}) \\<and>\n                         iAll (I \\<down>\\<ge> Max {t \\<in> I. P t}) Q", "apply (blast intro: subsetD[OF _ MaxI])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> P (Max {t \\<in> I. P t}) \\<and>\n                         iAll (I \\<down>\\<ge> Max {t \\<in> I. P t}) Q", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> P (Max {t \\<in> I. P t})\n 2. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> iAll (I \\<down>\\<ge> Max {t \\<in> I. P t}) Q", "apply (blast intro: MaxI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t');\n        t' \\<in> I \\<down>> t; P t'; finite {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> iAll (I \\<down>\\<ge> Max {t \\<in> I. P t}) Q", "apply (clarsimp simp: cut_ge_mem_iff, rename_tac t1 t2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t1 t2.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t;\n        \\<box> t I. Q t \\<or> (\\<diamond> t' I \\<down>> t. P t'); P t1;\n        t1 \\<in> I; t < t1; t2 \\<in> I;\n        Max {t \\<in> I. P t} \\<le> t2\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply (drule_tac t=t2 in ispec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t1 t2.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t; P t1; t1 \\<in> I; t < t1;\n        t2 \\<in> I; Max {t \\<in> I. P t} \\<le> t2;\n        Q t2 \\<or> (\\<diamond> t' I \\<down>> t2. P t')\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply (clarsimp simp: cut_greater_mem_iff, rename_tac t')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t1 t2 t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t; P t1; t1 \\<in> I; t < t1;\n        t2 \\<in> I; Max {t \\<in> I. P t} \\<le> t2; P t'; t' \\<in> I;\n        t2 < t'\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply (frule_tac z=t' in order_le_less_trans, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t1 t2 t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t; P t1; t1 \\<in> I; t < t1;\n        t2 \\<in> I; Max {t \\<in> I. P t} \\<le> t2; P t'; t' \\<in> I;\n        t2 < t'; Max {t \\<in> I. P t} < t'\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply (drule_tac A=\"{t \\<in> I. P t}\" in not_greater_Max[rotated 1])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1 t2 t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t; P t1; t1 \\<in> I; t < t1;\n        t2 \\<in> I; Max {t \\<in> I. P t} \\<le> t2; P t'; t' \\<in> I;\n        t2 < t'\\<rbrakk>\n       \\<Longrightarrow> finite {t \\<in> I. P t}\n 2. \\<And>t t1 t2 t'.\n       \\<lbrakk>finite I; t \\<in> I; \\<not> Q t; P t1; t1 \\<in> I; t < t1;\n        t2 \\<in> I; Max {t \\<in> I. P t} \\<le> t2; P t'; t' \\<in> I;\n        t2 < t'; t' \\<notin> {t \\<in> I. P t}\\<rbrakk>\n       \\<Longrightarrow> Q t2", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iSince_not_iTrigger_conv: \"finite I \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) = (\\<not> (\\<not> P t'. t' \\<T> t I. \\<not> Q t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    (P t'. t' \\<S> t I. Q t) =\n    (\\<not> (\\<not> P t'. t' \\<T> t I. \\<not> Q t))", "by (simp add: iTrigger_not_iSince_conv)"], ["", "lemma not_iUntil: \"\n  (\\<not> (P t1. t1 \\<U> t2 I. Q t2)) =\n  (\\<box> t I. (Q t \\<longrightarrow> (\\<diamond> t' (I \\<down>< t). \\<not> P t')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (P t1. t1 \\<U> t2 I. Q t2)) =\n    (\\<box> t I.\n        Q t \\<longrightarrow> (\\<diamond> t' I \\<down>< t. \\<not> P t'))", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (\\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>< t) P)) =\n    (\\<forall>t\\<in>I.\n        Q t \\<longrightarrow> (\\<exists>t\\<in>I \\<down>< t. \\<not> P t))", "by blast"], ["", "lemma not_iSince: \"\n  (\\<not> (P t1. t1 \\<S> t2 I. Q t2)) =\n  (\\<box> t I. (Q t \\<longrightarrow> (\\<diamond> t' (I \\<down>> t). \\<not> P t')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (P t1. t1 \\<S> t2 I. Q t2)) =\n    (\\<box> t I.\n        Q t \\<longrightarrow> (\\<diamond> t' I \\<down>> t. \\<not> P t'))", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (\\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>> t) P)) =\n    (\\<forall>t\\<in>I.\n        Q t \\<longrightarrow> (\\<exists>t\\<in>I \\<down>> t. \\<not> P t))", "by blast"], ["", "lemma iWeakUntil_conj_iUntil_conv: \"\n  (P t1. t1 \\<W> t2 I. (P t2 \\<and> Q t2)) = (\\<not> (\\<not> Q t1. t1 \\<U> t2 I. \\<not> P t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<W> t2 I. P t2 \\<and> Q t2) =\n    (\\<not> (\\<not> Q t1. t1 \\<U> t2 I. \\<not> P t2))", "by (simp add: iRelease_not_iUntil_conv[symmetric] iRelease_iWeakUntil_conv)"], ["", "lemma iUntil_disj_iUntil_conv: \"\n  (P t1 \\<or> Q t1. t1 \\<U> t2 I. Q t2) = \n  (P t1. t1 \\<U> t2 I. Q t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1 \\<or> Q t1. t1 \\<U> t2 I. Q t2) = (P t1. t1 \\<U> t2 I. Q t2)", "apply (unfold iUntil_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t' \\<or> Q t')) =\n    (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t'))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<diamond> t I.\n       Q t \\<and>\n       (\\<box> t' I \\<down>< t. P t' \\<or> Q t') \\<Longrightarrow>\n    \\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t')\n 2. \\<diamond> t I.\n       Q t \\<and> (\\<box> t' I \\<down>< t. P t') \\<Longrightarrow>\n    \\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t' \\<or> Q t')", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<diamond> t I.\n       Q t \\<and> (\\<box> t' I \\<down>< t. P t') \\<Longrightarrow>\n    \\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t' \\<or> Q t')\n 2. \\<diamond> t I.\n       Q t \\<and>\n       (\\<box> t' I \\<down>< t. P t' \\<or> Q t') \\<Longrightarrow>\n    \\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t')", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<diamond> t I.\n       Q t \\<and>\n       (\\<box> t' I \\<down>< t. P t' \\<or> Q t') \\<Longrightarrow>\n    \\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t')", "apply (clarsimp, rename_tac t1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q t \\<and> (\\<box> t' I \\<down>< t. P t')", "apply (rule_tac t=\"iMin {t \\<in> I. Q t}\" in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> Q (iMin {t \\<in> I. Q t}) \\<and>\n                         (\\<box> t' I \\<down>< iMin {t \\<in> I. Q t}. P t')\n 2. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "apply (subgoal_tac \"Q (iMin {t \\<in> I. Q t})\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t})\\<rbrakk>\n       \\<Longrightarrow> Q (iMin {t \\<in> I. Q t}) \\<and>\n                         (\\<box> t' I \\<down>< iMin {t \\<in> I. Q t}. P t')\n 2. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> Q (iMin {t \\<in> I. Q t})\n 3. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> Q (iMin {t \\<in> I. Q t})\n 2. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t})\\<rbrakk>\n       \\<Longrightarrow> Q (iMin {t \\<in> I. Q t}) \\<and>\n                         (\\<box> t' I \\<down>< iMin {t \\<in> I. Q t}. P t')\n 3. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "apply (blast intro: iMinI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t})\\<rbrakk>\n       \\<Longrightarrow> Q (iMin {t \\<in> I. Q t}) \\<and>\n                         (\\<box> t' I \\<down>< iMin {t \\<in> I. Q t}. P t')\n 2. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "apply (clarsimp, rename_tac t2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t}); t2 \\<in> I;\n        t2 < iMin {t \\<in> I. Q t}\\<rbrakk>\n       \\<Longrightarrow> P t2\n 2. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "apply (frule Collect_not_less_iMin, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t}); t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2\\<rbrakk>\n       \\<Longrightarrow> P t2\n 2. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "apply (subgoal_tac \"t2 < t1\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t}); t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2; t2 < t1\\<rbrakk>\n       \\<Longrightarrow> P t2\n 2. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t}); t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2\\<rbrakk>\n       \\<Longrightarrow> t2 < t1\n 3. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t}); t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2\\<rbrakk>\n       \\<Longrightarrow> t2 < t1\n 2. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t}); t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2; t2 < t1\\<rbrakk>\n       \\<Longrightarrow> P t2\n 3. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "apply (rule order_less_le_trans, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t}); t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<le> t1\n 2. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t}); t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2; t2 < t1\\<rbrakk>\n       \\<Longrightarrow> P t2\n 3. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "apply (simp add: Collect_iMin_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> I; Q t1; \\<box> t' I \\<down>< t1. P t' \\<or> Q t';\n        Q (iMin {t \\<in> I. Q t}); t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2; t2 < t1\\<rbrakk>\n       \\<Longrightarrow> P t2\n 2. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "apply (rule subsetD[OF _ iMinI])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> {t \\<in> I. Q t} \\<subseteq> I\n 2. \\<And>t1.\n       \\<lbrakk>t1 \\<in> I; Q t1;\n        \\<box> t' I \\<down>< t1. P t' \\<or> Q t'\\<rbrakk>\n       \\<Longrightarrow> ?k69 t1 \\<in> {t \\<in> I. Q t}", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iWeakUntil_disj_iWeakUntil_conv: \"\n  (P t1 \\<or> Q t1. t1 \\<W> t2 I. Q t2) = \n  (P t1. t1 \\<W> t2 I. Q t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1 \\<or> Q t1. t1 \\<W> t2 I. Q t2) = (P t1. t1 \\<W> t2 I. Q t2)", "apply (simp only: iWeakUntil_iUntil_conv iUntil_disj_iUntil_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((P t1. t1 \\<U> t2 I. Q t2) \\<or> (\\<box> t I. P t \\<or> Q t)) =\n    ((P t'. t' \\<U> t I. Q t) \\<or> (\\<box> t I. P t))", "apply (case_tac \"P t1. t1 \\<U> t2 I. Q t2\", simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (P t1. t1 \\<U> t2 I. Q t2) \\<Longrightarrow>\n    (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (case_tac \"\\<box> t I. P t\", blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> (P t1. t1 \\<U> t2 I. Q t2);\n     \\<not> (\\<box> t I. P t)\\<rbrakk>\n    \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (simp add: not_iUntil)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<box> t I.\n                Q t \\<longrightarrow>\n                (\\<diamond> t' I \\<down>< t. \\<not> P t');\n     \\<diamond> t I. \\<not> P t\\<rbrakk>\n    \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (clarsimp, rename_tac t1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (case_tac \"\\<not> Q t1\", blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (subgoal_tac \"iMin {t \\<in> I. Q t} \\<in> I\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1;\n        iMin {t \\<in> I. Q t} \\<in> I\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P\n 2. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1\\<rbrakk>\n       \\<Longrightarrow> iMin {t \\<in> I. Q t} \\<in> I\n 2. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1;\n        iMin {t \\<in> I. Q t} \\<in> I\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (blast intro: subsetD[OF _ iMinI])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1;\n        iMin {t \\<in> I. Q t} \\<in> I\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (frule_tac t=\"iMin {t \\<in> I. Q t}\" in ispec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1;\n        iMin {t \\<in> I. Q t} \\<in> I;\n        Q (iMin {t \\<in> I. Q t}) \\<longrightarrow>\n        (\\<diamond> t' I \\<down>< iMin {t \\<in> I. Q t}.\n            \\<not> P t')\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (drule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1;\n        iMin {t \\<in> I. Q t} \\<in> I\\<rbrakk>\n       \\<Longrightarrow> Q (iMin {t \\<in> I. Q t})\n 2. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1;\n        iMin {t \\<in> I. Q t} \\<in> I;\n        \\<diamond> t' I \\<down>< iMin {t \\<in> I. Q t}. \\<not> P t'\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (blast intro: iMinI2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; \\<not> \\<not> Q t1;\n        iMin {t \\<in> I. Q t} \\<in> I;\n        \\<diamond> t' I \\<down>< iMin {t \\<in> I. Q t}. \\<not> P t'\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (clarsimp, rename_tac t2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; Q t1; iMin {t \\<in> I. Q t} \\<in> I;\n        \\<not> P t2; t2 \\<in> I; t2 < iMin {t \\<in> I. Q t}\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (subgoal_tac \"\\<not> Q t2\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; Q t1; iMin {t \\<in> I. Q t} \\<in> I;\n        \\<not> P t2; t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P\n 2. \\<And>t1 t2.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; Q t1; iMin {t \\<in> I. Q t} \\<in> I;\n        \\<not> P t2; t2 \\<in> I; t2 < iMin {t \\<in> I. Q t}\\<rbrakk>\n       \\<Longrightarrow> \\<not> Q t2", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; Q t1; iMin {t \\<in> I. Q t} \\<in> I;\n        \\<not> P t2; t2 \\<in> I; t2 < iMin {t \\<in> I. Q t}\\<rbrakk>\n       \\<Longrightarrow> \\<not> Q t2\n 2. \\<And>t1 t2.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; Q t1; iMin {t \\<in> I. Q t} \\<in> I;\n        \\<not> P t2; t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (drule Collect_not_less_iMin)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; Q t1; iMin {t \\<in> I. Q t} \\<in> I;\n        \\<not> P t2; t2 \\<in> I; \\<not> (t2 \\<in> I \\<and> Q t2)\\<rbrakk>\n       \\<Longrightarrow> \\<not> Q t2\n 2. \\<And>t1 t2.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; Q t1; iMin {t \\<in> I. Q t} \\<in> I;\n        \\<not> P t2; t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply (simp add: cut_less_mem_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>\\<box> t I.\n                   Q t \\<longrightarrow>\n                   (\\<diamond> t' I \\<down>< t. \\<not> P t');\n        t1 \\<in> I; \\<not> P t1; Q t1; iMin {t \\<in> I. Q t} \\<in> I;\n        \\<not> P t2; t2 \\<in> I; t2 < iMin {t \\<in> I. Q t};\n        \\<not> Q t2\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t I. P t \\<or> Q t) = iAll I P", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iWeakUntil_iUntil_conj_conv: \"\n  (P t1. t1 \\<W> t2 I. Q t2) = \n  (\\<not> (\\<not> Q t1. t1 \\<U> t2 I. (\\<not> P t2 \\<and> \\<not> Q t2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<W> t2 I. Q t2) =\n    (\\<not> (\\<not> Q t1. t1 \\<U> t2 I. \\<not> P t2 \\<and> \\<not> Q t2))", "apply (subst iWeakUntil_disj_iWeakUntil_conv[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. iWeakUntil I (\\<lambda>t1. P t1 \\<or> Q t1) Q =\n    (\\<not> (\\<not> Q t1. t1 \\<U> t2 I. \\<not> P t2 \\<and> \\<not> Q t2))", "apply (subst de_Morgan_disj[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. iWeakUntil I (\\<lambda>t1. P t1 \\<or> Q t1) Q =\n    (\\<not> (\\<not> Q t1. t1 \\<U> t2 I. \\<not> (P t2 \\<or> Q t2)))", "apply (subst iWeakUntil_conj_iUntil_conv[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. iWeakUntil I (\\<lambda>t1. P t1 \\<or> Q t1) Q =\n    (P t1 \\<or> Q t1. t1 \\<W> t2 I. (P t2 \\<or> Q t2) \\<and> Q t2)", "apply (simp add: conj_disj_distribR conj_disj_absorb)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Negation and temporal operators\\<close>"], ["", "lemma \n  not_iNext[simp]: \"(\\<not> (\\<circle> t t0 I. P t)) = (\\<circle> t t0 I. \\<not> P t)\" and\n  not_iNextWeak[simp]: \"(\\<not> (\\<circle>\\<^sub>W t t0 I. P t)) = (\\<circle>\\<^sub>S t t0 I. \\<not> P t)\" and\n  not_iNextStrong[simp]: \"(\\<not> (\\<circle>\\<^sub>S t t0 I. P t)) = (\\<circle>\\<^sub>W t t0 I. \\<not> P t)\" and\n  not_iLast[simp]: \"(\\<not> (\\<ominus> t t0 I. P t)) = (\\<ominus> t t0 I. \\<not> P t)\" and\n  not_iLastWeak[simp]: \"(\\<not> (\\<ominus>\\<^sub>W t t0 I. P t)) = (\\<ominus>\\<^sub>S t t0 I. \\<not> P t)\" and\n  not_iLastStrong[simp]: \"(\\<not> (\\<ominus>\\<^sub>S t t0 I. P t)) = (\\<ominus>\\<^sub>W t t0 I. \\<not> P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<not> iNext t0 I P) = (\\<circle> t t0 I. \\<not> P t) &&&\n     (\\<not> iNextWeak t0 I P) = (\\<circle>\\<^sub>S t t0 I. \\<not> P t) &&&\n     (\\<not> iNextStrong t0 I P) =\n     (\\<circle>\\<^sub>W t t0 I. \\<not> P t)) &&&\n    (\\<not> iLast t0 I P) = (\\<ominus> t t0 I. \\<not> P t) &&&\n    (\\<not> iLastWeak t0 I P) = (\\<ominus>\\<^sub>S t t0 I. \\<not> P t) &&&\n    (\\<not> iLastStrong t0 I P) = (\\<ominus>\\<^sub>W t t0 I. \\<not> P t)", "by (simp_all add: iTL_Next_defs)"], ["", "lemma not_iWeakUntil: \"\n  (\\<not> (P t1. t1 \\<W> t2 I. Q t2)) =\n  ((\\<box> t I. (Q t \\<longrightarrow> (\\<diamond> t' (I \\<down>< t). \\<not> P t'))) \\<and> (\\<diamond> t I. \\<not> P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (P t1. t1 \\<W> t2 I. Q t2)) =\n    ((\\<box> t I.\n         Q t \\<longrightarrow>\n         (\\<diamond> t' I \\<down>< t. \\<not> P t')) \\<and>\n     (\\<diamond> t I. \\<not> P t))", "by (simp add: iWeakUntil_iUntil_conv not_iUntil)"], ["", "lemma not_iWeakSince: \"\n  (\\<not> (P t1. t1 \\<B> t2 I. Q t2)) =\n  ((\\<box> t I. (Q t \\<longrightarrow> (\\<diamond> t' (I \\<down>> t). \\<not> P t'))) \\<and> (\\<diamond> t I. \\<not> P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (P t1. t1 \\<B> t2 I. Q t2)) =\n    ((\\<box> t I.\n         Q t \\<longrightarrow>\n         (\\<diamond> t' I \\<down>> t. \\<not> P t')) \\<and>\n     (\\<diamond> t I. \\<not> P t))", "by (simp add: iWeakSince_iSince_conv not_iSince)"], ["", "lemma not_iRelease: \"\n  (\\<not> (P t'. t' \\<R> t I. Q t)) = \n  ((\\<diamond> t I. \\<not> Q t) \\<and> (\\<box> t I. P t \\<longrightarrow> (\\<diamond> t I \\<down>\\<le> t. \\<not> Q t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (P t'. t' \\<R> t I. Q t)) =\n    ((\\<diamond> t I. \\<not> Q t) \\<and>\n     (\\<box> t I.\n         P t \\<longrightarrow> (\\<diamond> t I \\<down>\\<le> t. \\<not> Q t)))", "by (simp add: iRelease_def)"], ["", "lemma not_iRelease_iUntil_conv: \"\n  (\\<not> (P t'. t' \\<R> t I. Q t)) = (\\<not> P t'. t' \\<U> t I. \\<not> Q t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (P t'. t' \\<R> t I. Q t)) =\n    (\\<not> P t'. t' \\<U> t I. \\<not> Q t)", "by (simp add: iUntil_not_iRelease_conv)"], ["", "lemma not_iTrigger: \"\n  (\\<not> (P t'. t' \\<T> t I. Q t)) = \n  ((\\<diamond> t I. \\<not> Q t) \\<and> (\\<box> t I. \\<not> P t \\<or> (\\<diamond> t I \\<down>\\<ge> t. \\<not> Q t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> (P t'. t' \\<T> t I. Q t)) =\n    ((\\<diamond> t I. \\<not> Q t) \\<and>\n     (\\<box> t I.\n         \\<not> P t \\<or> (\\<diamond> t I \\<down>\\<ge> t. \\<not> Q t)))", "by (simp add: iTrigger_def)"], ["", "lemma not_iTrigger_iSince_conv: \"\n  finite I \\<Longrightarrow> (\\<not> (P t'. t' \\<T> t I. Q t)) = (\\<not> P t'. t' \\<S> t I. \\<not> Q t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    (\\<not> (P t'. t' \\<T> t I. Q t)) =\n    (\\<not> P t'. t' \\<S> t I. \\<not> Q t)", "by (simp add: iSince_not_iTrigger_conv)"], ["", "subsubsection \\<open>Some implication results\\<close>"], ["", "lemma all_imp_iall: \"\\<forall>x. P x \\<Longrightarrow> \\<box> t I. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. P x \\<Longrightarrow> \\<box> t I. P t", "by blast"], ["", "lemma bex_imp_lex:  \"\\<diamond> t I. P t \\<Longrightarrow> \\<exists>x. P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<diamond> t I. P t \\<Longrightarrow> \\<exists>x. P x", "by blast"], ["", "lemma iAll_imp_iEx: \"I \\<noteq> {} \\<Longrightarrow> \\<box> t I. P t \\<Longrightarrow> \\<diamond> t I. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<box> t I. P t\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I. P t", "by blast"], ["", "lemma i_set_iAll_imp_iEx: \"I \\<in> i_set \\<Longrightarrow> \\<box> t I. P t \\<Longrightarrow> \\<diamond> t I. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<in> i_set; \\<box> t I. P t\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I. P t", "by (rule iAll_imp_iEx, rule i_set_imp_not_empty)"], ["", "lemmas iT_iAll_imp_iEx = iT_not_empty[THEN iAll_imp_iEx]"], ["", "lemma iUntil_imp_iEx: \"P t1. t1 \\<U> t2 I. Q t2 \\<Longrightarrow> \\<diamond> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t1. t1 \\<U> t2 I. Q t2 \\<Longrightarrow> \\<diamond> t I. Q t", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>< t) P \\<Longrightarrow>\n    \\<exists>t\\<in>I. Q t", "by blast"], ["", "lemma iSince_imp_iEx: \"P t1. t1 \\<S> t2 I. Q t2 \\<Longrightarrow> \\<diamond> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P t1. t1 \\<S> t2 I. Q t2 \\<Longrightarrow> \\<diamond> t I. Q t", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>> t) P \\<Longrightarrow>\n    \\<exists>t\\<in>I. Q t", "by blast"], ["", "lemma iall_subset_imp_iall: \"\\<lbrakk> \\<box> t B. P t; A \\<subseteq> B \\<rbrakk> \\<Longrightarrow> \\<box> t A. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<box> t B. P t; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> \\<box> t A. P t", "by blast"], ["", "lemma iex_subset_imp_iex: \"\\<lbrakk> \\<diamond> t A. P t; A \\<subseteq> B \\<rbrakk> \\<Longrightarrow> \\<diamond> t B. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<diamond> t A. P t; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t B. P t", "by blast"], ["", "lemma iall_mp: \"\\<lbrakk> \\<box> t I. P t \\<longrightarrow> Q t; \\<box> t I. P t \\<rbrakk> \\<Longrightarrow> \\<box> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<box> t I. P t \\<longrightarrow> Q t; \\<box> t I. P t\\<rbrakk>\n    \\<Longrightarrow> \\<box> t I. Q t", "by blast"], ["", "lemma iex_mp: \"\\<lbrakk> \\<box> t I. P t \\<longrightarrow> Q t; \\<diamond> t I. P t \\<rbrakk> \\<Longrightarrow> \\<diamond> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<box> t I. P t \\<longrightarrow> Q t;\n     \\<diamond> t I. P t\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I. Q t", "by blast"], ["", "lemma iUntil_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<U> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<U> t2 I. Q t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P1 t1. t1 \\<U> t2 I. Q t2;\n     \\<box> t I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> P2 t1. t1 \\<U> t2 I. Q t2", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>< t) P1;\n     \\<forall>t\\<in>I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>< t) P2", "by blast"], ["", "lemma iSince_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<S> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<S> t2 I. Q t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P1 t1. t1 \\<S> t2 I. Q t2;\n     \\<box> t I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> P2 t1. t1 \\<S> t2 I. Q t2", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>> t) P1;\n     \\<forall>t\\<in>I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> \\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>> t) P2", "by blast"], ["", "lemma iWeakUntil_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<W> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<W> t2 I. Q t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P1 t1. t1 \\<W> t2 I. Q t2;\n     \\<box> t I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> P2 t1. t1 \\<W> t2 I. Q t2", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>t\\<in>I. P1 t) \\<or>\n             (\\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>< t) P1);\n     \\<forall>t\\<in>I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. P2 t) \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>< t) P2)", "by blast"], ["", "lemma iWeakSince_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<B> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<B> t2 I. Q t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P1 t1. t1 \\<B> t2 I. Q t2;\n     \\<box> t I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> P2 t1. t1 \\<B> t2 I. Q t2", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>t\\<in>I. P1 t) \\<or>\n             (\\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>> t) P1);\n     \\<forall>t\\<in>I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. P2 t) \\<or>\n                      (\\<exists>t\\<in>I. Q t \\<and> Ball (I \\<down>> t) P2)", "by blast"], ["", "lemma iRelease_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<R> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<R> t2 I. Q t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P1 t1. t1 \\<R> t2 I. Q t2;\n     \\<box> t I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> P2 t1. t1 \\<R> t2 I. Q t2", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>t\\<in>I. Q t) \\<or>\n             (\\<exists>t\\<in>I. P1 t \\<and> Ball (I \\<down>\\<le> t) Q);\n     \\<forall>t\\<in>I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. Q t) \\<or>\n                      (\\<exists>t\\<in>I.\n                          P2 t \\<and> Ball (I \\<down>\\<le> t) Q)", "by blast"], ["", "lemma iTrigger_imp: \"\n  \\<lbrakk> P1 t1. t1 \\<T> t2 I. Q t2; \\<box> t I. P1 t \\<longrightarrow> P2 t \\<rbrakk> \\<Longrightarrow> P2 t1. t1 \\<T> t2 I. Q t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P1 t1. t1 \\<T> t2 I. Q t2;\n     \\<box> t I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> P2 t1. t1 \\<T> t2 I. Q t2", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(\\<forall>t\\<in>I. Q t) \\<or>\n             (\\<exists>t\\<in>I. P1 t \\<and> Ball (I \\<down>\\<ge> t) Q);\n     \\<forall>t\\<in>I. P1 t \\<longrightarrow> P2 t\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>t\\<in>I. Q t) \\<or>\n                      (\\<exists>t\\<in>I.\n                          P2 t \\<and> Ball (I \\<down>\\<ge> t) Q)", "by blast"], ["", "lemma iMin_imp_iUntil: \"\n  \\<lbrakk> I \\<noteq> {}; Q (iMin I) \\<rbrakk> \\<Longrightarrow> P t'. t' \\<U> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> P t'. t' \\<U> t I. Q t", "apply (unfold iUntil_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>< t. P t')", "apply (rule_tac t=\"iMin I\" in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> Q (iMin I) \\<and> (\\<box> t' I \\<down>< iMin I. P t')\n 2. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> iMin I \\<in> I", "apply (simp add: cut_less_Min_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> iMin I \\<in> I", "apply (blast intro: iMinI_ex2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Max_imp_iSince: \"\n  \\<lbrakk> finite I; I \\<noteq> {}; Q (Max I) \\<rbrakk> \\<Longrightarrow> P t'. t' \\<S> t I. Q t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> P t'. t' \\<S> t I. Q t", "apply (unfold iSince_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply (rule_tac t=\"Max I\" in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> Q (Max I) \\<and> (\\<box> t' I \\<down>> Max I. P t')\n 2. \\<lbrakk>finite I; I \\<noteq> {}; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply (simp add: cut_greater_Max_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> Max I \\<in> I", "apply (blast intro: Max_in)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>Congruence rules for temporal operators' predicates\\<close>"], ["", "lemma iAll_cong: \"\\<box> t I. f t = g t \\<Longrightarrow> (\\<box> t I. P (f t) t) = (\\<box> t I. P (g t) t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (\\<box> t I. P (f t) t) = (\\<box> t I. P (g t) t)", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>I. f t = g t \\<Longrightarrow>\n    (\\<forall>t\\<in>I. P (f t) t) = (\\<forall>t\\<in>I. P (g t) t)", "by simp"], ["", "lemma iEx_cong: \"\\<box> t I. f t = g t \\<Longrightarrow> (\\<diamond> t I. P (f t) t) = (\\<diamond> t I. P (g t) t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (\\<diamond> t I. P (f t) t) = (\\<diamond> t I. P (g t) t)", "unfolding iTL_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>I. f t = g t \\<Longrightarrow>\n    (\\<exists>t\\<in>I. P (f t) t) = (\\<exists>t\\<in>I. P (g t) t)", "by simp"], ["", "lemma iUntil_cong1: \"\n  \\<box> t I. f t = g t \\<Longrightarrow> \n  (P (f t1) t1. t1 \\<U> t2 I. Q t2) = (P (g t1) t1. t1 \\<U> t2 I. Q t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (P (f t1) t1. t1 \\<U> t2 I. Q t2) = (P (g t1) t1. t1 \\<U> t2 I. Q t2)", "apply (unfold iUntil_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P (f t') t')) =\n    (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P (g t') t'))", "apply (rule iEx_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    \\<box> t I.\n       (Q t \\<and> (\\<box> t' I \\<down>< t. P (f t') t')) =\n       (Q t \\<and> (\\<box> t' I \\<down>< t. P (g t') t'))", "apply (rule iallI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I\\<rbrakk>\n       \\<Longrightarrow> (Q t \\<and>\n                          (\\<box> t' I \\<down>< t. P (f t') t')) =\n                         (Q t \\<and> (\\<box> t' I \\<down>< t. P (g t') t'))", "apply (rule_tac f=\"\\<lambda>x. (Q t \\<and> x)\" in arg_cong, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t' I \\<down>< t. P (f t') t') =\n                         (\\<box> t' I \\<down>< t. P (g t') t')", "apply (rule iAll_cong[OF iall_subset_imp_iall[OF _ cut_less_subset]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I\\<rbrakk>\n       \\<Longrightarrow> \\<box> t' I. P (f t') t' = P (g t') t'", "apply (rule iallI, rename_tac t')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t'.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I; t' \\<in> I\\<rbrakk>\n       \\<Longrightarrow> P (f t') t' = P (g t') t'", "apply (drule_tac t=t' in ispec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; t' \\<in> I\\<rbrakk> \\<Longrightarrow> t' \\<in> I\n 2. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; t' \\<in> I; f t' = g t'\\<rbrakk>\n       \\<Longrightarrow> P (f t') t' = P (g t') t'", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iUntil_cong2: \"\n  \\<box> t I. f t = g t \\<Longrightarrow> \n  (P t1. t1 \\<U> t2 I. Q (f t2) t2) = (P t1. t1 \\<U> t2 I. Q (g t2) t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (P t1. t1 \\<U> t2 I. Q (f t2) t2) = (P t1. t1 \\<U> t2 I. Q (g t2) t2)", "apply (unfold iUntil_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (\\<diamond> t I. Q (f t) t \\<and> (\\<box> t' I \\<down>< t. P t')) =\n    (\\<diamond> t I. Q (g t) t \\<and> (\\<box> t' I \\<down>< t. P t'))", "apply (rule iEx_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    \\<box> t I.\n       (Q (f t) t \\<and> (\\<box> t' I \\<down>< t. P t')) =\n       (Q (g t) t \\<and> (\\<box> t' I \\<down>< t. P t'))", "apply (rule iallI, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I\\<rbrakk>\n       \\<Longrightarrow> (Q (f t) t \\<and> (\\<box> t' I \\<down>< t. P t')) =\n                         (Q (g t) t \\<and> (\\<box> t' I \\<down>< t. P t'))", "apply (drule_tac t=t in ispec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t. t \\<in> I \\<Longrightarrow> t \\<in> I\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; f t = g t\\<rbrakk>\n       \\<Longrightarrow> (Q (f t) t \\<and> (\\<box> t' I \\<down>< t. P t')) =\n                         (Q (g t) t \\<and> (\\<box> t' I \\<down>< t. P t'))", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iSince_cong1: \"\n  \\<box> t I. f t = g t \\<Longrightarrow> \n  (P (f t1) t1. t1 \\<S> t2 I. Q t2) = (P (g t1) t1. t1 \\<S> t2 I. Q t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (P (f t1) t1. t1 \\<S> t2 I. Q t2) = (P (g t1) t1. t1 \\<S> t2 I. Q t2)", "apply (unfold iSince_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>> t. P (f t') t')) =\n    (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>> t. P (g t') t'))", "apply (rule iEx_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    \\<box> t I.\n       (Q t \\<and> (\\<box> t' I \\<down>> t. P (f t') t')) =\n       (Q t \\<and> (\\<box> t' I \\<down>> t. P (g t') t'))", "apply (rule iallI, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I\\<rbrakk>\n       \\<Longrightarrow> (Q t \\<and>\n                          (\\<box> t' I \\<down>> t. P (f t') t')) =\n                         (Q t \\<and> (\\<box> t' I \\<down>> t. P (g t') t'))", "apply (rule_tac f=\"\\<lambda>x. (Q t \\<and> x)\" in arg_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I\\<rbrakk>\n       \\<Longrightarrow> (\\<box> t' I \\<down>> t. P (f t') t') =\n                         (\\<box> t' I \\<down>> t. P (g t') t')", "apply (rule iAll_cong[OF iall_subset_imp_iall[OF _ cut_greater_subset]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I\\<rbrakk>\n       \\<Longrightarrow> \\<box> t' I. P (f t') t' = P (g t') t'", "apply (rule iallI, rename_tac t')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t t'.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I; t' \\<in> I\\<rbrakk>\n       \\<Longrightarrow> P (f t') t' = P (g t') t'", "apply (drule_tac t=t' in ispec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; t' \\<in> I\\<rbrakk> \\<Longrightarrow> t' \\<in> I\n 2. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; t' \\<in> I; f t' = g t'\\<rbrakk>\n       \\<Longrightarrow> P (f t') t' = P (g t') t'", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iSince_cong2: \"\n  \\<box> t I. f t = g t \\<Longrightarrow> \n  (P t1. t1 \\<S> t2 I. Q (f t2) t2) = (P t1. t1 \\<S> t2 I. Q (g t2) t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (P t1. t1 \\<S> t2 I. Q (f t2) t2) = (P t1. t1 \\<S> t2 I. Q (g t2) t2)", "apply (unfold iSince_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    (\\<diamond> t I. Q (f t) t \\<and> (\\<box> t' I \\<down>> t. P t')) =\n    (\\<diamond> t I. Q (g t) t \\<and> (\\<box> t' I \\<down>> t. P t'))", "apply (rule iEx_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. f t = g t \\<Longrightarrow>\n    \\<box> t I.\n       (Q (f t) t \\<and> (\\<box> t' I \\<down>> t. P t')) =\n       (Q (g t) t \\<and> (\\<box> t' I \\<down>> t. P t'))", "apply (rule iallI, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<box> t I. f t = g t; t \\<in> I\\<rbrakk>\n       \\<Longrightarrow> (Q (f t) t \\<and> (\\<box> t' I \\<down>> t. P t')) =\n                         (Q (g t) t \\<and> (\\<box> t' I \\<down>> t. P t'))", "apply (drule_tac t=t in ispec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t. t \\<in> I \\<Longrightarrow> t \\<in> I\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; f t = g t\\<rbrakk>\n       \\<Longrightarrow> (Q (f t) t \\<and> (\\<box> t' I \\<down>> t. P t')) =\n                         (Q (g t) t \\<and> (\\<box> t' I \\<down>> t. P t'))", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma bex_subst: \"\n  \\<forall>x\\<in>A. P x \\<longrightarrow> (Q x = Q' x) \\<Longrightarrow>\n  (\\<exists>x\\<in>A. P x \\<and> Q x) = (\\<exists>x\\<in>A. P x \\<and> Q' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. P x \\<longrightarrow> Q x = Q' x \\<Longrightarrow>\n    (\\<exists>x\\<in>A. P x \\<and> Q x) = (\\<exists>x\\<in>A. P x \\<and> Q' x)", "by blast"], ["", "lemma iEx_subst: \"\n  \\<box> t I. P t \\<longrightarrow> (Q t = Q' t) \\<Longrightarrow>\n  (\\<diamond> t I. P t \\<and> Q t) = (\\<diamond> t I. P t \\<and> Q' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<box> t I. P t \\<longrightarrow> Q t = Q' t \\<Longrightarrow>\n    (\\<diamond> t I. P t \\<and> Q t) = (\\<diamond> t I. P t \\<and> Q' t)", "by blast"], ["", "subsubsection \\<open>Temporal operators with set unions/intersections and subsets\\<close>"], ["", "lemma iAll_subset: \"\\<lbrakk> A \\<subseteq> B; \\<box> t B. P t \\<rbrakk> \\<Longrightarrow> \\<box> t A. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; \\<box> t B. P t\\<rbrakk>\n    \\<Longrightarrow> \\<box> t A. P t", "by (rule iall_subset_imp_iall)"], ["", "lemma iEx_subset: \"\\<lbrakk> A \\<subseteq> B; \\<diamond> t A. P t \\<rbrakk> \\<Longrightarrow> \\<diamond> t B. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; \\<diamond> t A. P t\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t B. P t", "by (rule iex_subset_imp_iex)"], ["", "lemma iUntil_append: \"\n  \\<lbrakk> finite A; Max A \\<le> iMin B \\<rbrakk> \\<Longrightarrow>\n  P t1. t1 \\<U> t2 A. Q t2 \\<Longrightarrow> P t1. t1 \\<U> t2 (A \\<union> B). Q t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B; P t1. t1 \\<U> t2 A. Q t2\\<rbrakk>\n    \\<Longrightarrow> P t1. t1 \\<U> t2 A \\<union> B. Q t2", "apply (case_tac \"A = {}\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B; P t1. t1 \\<U> t2 A. Q t2;\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> P t1. t1 \\<U> t2 A \\<union> B. Q t2", "apply (unfold iUntil_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t A. Q t \\<and> (\\<box> t' A \\<down>< t. P t');\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t A \\<union> B.\n                         Q t \\<and>\n                         (\\<box> t' (A \\<union> B) \\<down>< t. P t')", "apply (rule iEx_subset[OF Un_upper1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t A. Q t \\<and> (\\<box> t' A \\<down>< t. P t');\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t A.\n                         Q t \\<and>\n                         (\\<box> t' (A \\<union> B) \\<down>< t. P t')", "apply (rule_tac f=\"\\<lambda>t. A \\<down>< t\" and g=\"\\<lambda>t. (A \\<union> B) \\<down>< t\" in subst[OF iEx_cong, rule_format])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t A. Q t \\<and> (\\<box> t' A \\<down>< t. P t');\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<box> t A. A \\<down>< t = (A \\<union> B) \\<down>< t\n 2. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t A. Q t \\<and> (\\<box> t' A \\<down>< t. P t');\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t A.\n                         Q t \\<and> (\\<box> t' A \\<down>< t. P t')", "apply (clarsimp simp: cut_less_Un, rename_tac t t')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite A; \\<forall>a\\<in>A. a \\<le> iMin B; A \\<noteq> {};\n        t \\<in> A; t' \\<in> A; Q t'; \\<box> t' A \\<down>< t'. P t'\\<rbrakk>\n       \\<Longrightarrow> A \\<down>< t = A \\<down>< t \\<union> B \\<down>< t\n 2. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t A. Q t \\<and> (\\<box> t' A \\<down>< t. P t');\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t A.\n                         Q t \\<and> (\\<box> t' A \\<down>< t. P t')", "apply (cut_tac t=t and I=B in cut_less_Min_empty)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite A; \\<forall>a\\<in>A. a \\<le> iMin B; A \\<noteq> {};\n        t \\<in> A; t' \\<in> A; Q t'; \\<box> t' A \\<down>< t'. P t'\\<rbrakk>\n       \\<Longrightarrow> t \\<le> iMin B\n 2. \\<And>t t'.\n       \\<lbrakk>finite A; \\<forall>a\\<in>A. a \\<le> iMin B; A \\<noteq> {};\n        t \\<in> A; t' \\<in> A; Q t'; \\<box> t' A \\<down>< t'. P t';\n        B \\<down>< t = {}\\<rbrakk>\n       \\<Longrightarrow> A \\<down>< t = A \\<down>< t \\<union> B \\<down>< t\n 3. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t A. Q t \\<and> (\\<box> t' A \\<down>< t. P t');\n     A \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t A.\n                         Q t \\<and> (\\<box> t' A \\<down>< t. P t')", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iSince_prepend: \"\n  \\<lbrakk> finite A; Max A \\<le> iMin B \\<rbrakk> \\<Longrightarrow>\n  P t1. t1 \\<S> t2 B. Q t2 \\<Longrightarrow> P t1. t1 \\<S> t2 (A \\<union> B). Q t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B; P t1. t1 \\<S> t2 B. Q t2\\<rbrakk>\n    \\<Longrightarrow> P t1. t1 \\<S> t2 A \\<union> B. Q t2", "apply (case_tac \"B = {}\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B; P t1. t1 \\<S> t2 B. Q t2;\n     B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> P t1. t1 \\<S> t2 A \\<union> B. Q t2", "apply (unfold iSince_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t B. Q t \\<and> (\\<box> t' B \\<down>> t. P t');\n     B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t A \\<union> B.\n                         Q t \\<and>\n                         (\\<box> t' (A \\<union> B) \\<down>> t. P t')", "apply (rule iEx_subset[OF Un_upper2])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t B. Q t \\<and> (\\<box> t' B \\<down>> t. P t');\n     B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t B.\n                         Q t \\<and>\n                         (\\<box> t' (A \\<union> B) \\<down>> t. P t')", "apply (rule_tac f=\"\\<lambda>t. B \\<down>> t\" and g=\"\\<lambda>t. (A \\<union> B) \\<down>> t\" in subst[OF iEx_cong, rule_format])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t B. Q t \\<and> (\\<box> t' B \\<down>> t. P t');\n     B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<box> t B. B \\<down>> t = (A \\<union> B) \\<down>> t\n 2. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t B. Q t \\<and> (\\<box> t' B \\<down>> t. P t');\n     B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t B.\n                         Q t \\<and> (\\<box> t' B \\<down>> t. P t')", "apply (clarsimp simp: cut_greater_Un, rename_tac t t')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite A; Max A \\<le> iMin B; B \\<noteq> {}; t \\<in> B;\n        t' \\<in> B; Q t'; \\<box> t' B \\<down>> t'. P t'\\<rbrakk>\n       \\<Longrightarrow> B \\<down>> t = A \\<down>> t \\<union> B \\<down>> t\n 2. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t B. Q t \\<and> (\\<box> t' B \\<down>> t. P t');\n     B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t B.\n                         Q t \\<and> (\\<box> t' B \\<down>> t. P t')", "apply (cut_tac t=t and I=A in cut_greater_Max_empty)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite A; Max A \\<le> iMin B; B \\<noteq> {}; t \\<in> B;\n        t' \\<in> B; Q t'; \\<box> t' B \\<down>> t'. P t'\\<rbrakk>\n       \\<Longrightarrow> finite A\n 2. \\<And>t t'.\n       \\<lbrakk>finite A; Max A \\<le> iMin B; B \\<noteq> {}; t \\<in> B;\n        t' \\<in> B; Q t'; \\<box> t' B \\<down>> t'. P t'\\<rbrakk>\n       \\<Longrightarrow> Max A \\<le> t\n 3. \\<And>t t'.\n       \\<lbrakk>finite A; Max A \\<le> iMin B; B \\<noteq> {}; t \\<in> B;\n        t' \\<in> B; Q t'; \\<box> t' B \\<down>> t'. P t';\n        A \\<down>> t = {}\\<rbrakk>\n       \\<Longrightarrow> B \\<down>> t = A \\<down>> t \\<union> B \\<down>> t\n 4. \\<lbrakk>finite A; Max A \\<le> iMin B;\n     \\<diamond> t B. Q t \\<and> (\\<box> t' B \\<down>> t. P t');\n     B \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t B.\n                         Q t \\<and> (\\<box> t' B \\<down>> t. P t')", "apply (simp add: iMin_ge_iff)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma \n  iAll_union: \"\\<lbrakk> \\<box> t A. P t; \\<box> t B. P t \\<rbrakk> \\<Longrightarrow> \\<box> t (A \\<union> B). P t\" and\n  iAll_union_conv: \"(\\<box> t A \\<union> B. P t) = ((\\<box> t A. P t) \\<and> (\\<box> t B. P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<box> t A. P t; \\<box> t B. P t\\<rbrakk>\n     \\<Longrightarrow> \\<box> t A \\<union> B. P t) &&&\n    (\\<box> t A \\<union> B. P t) =\n    ((\\<box> t A. P t) \\<and> (\\<box> t B. P t))", "by blast+"], ["", "lemma \n  iEx_union: \"(\\<diamond> t A. P t) \\<or> (\\<diamond> t B. P t) \\<Longrightarrow> \\<diamond> t (A \\<union> B). P t\" and\n  iEx_union_conv: \"(\\<diamond> t (A \\<union> B). P t) = ((\\<diamond> t A. P t) \\<or> (\\<diamond> t B. P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<diamond> t A. P t) \\<or> (\\<diamond> t B. P t) \\<Longrightarrow>\n     \\<diamond> t A \\<union> B. P t) &&&\n    (\\<diamond> t A \\<union> B. P t) =\n    ((\\<diamond> t A. P t) \\<or> (\\<diamond> t B. P t))", "by blast+"], ["", "lemma iAll_inter: \"(\\<box> t A. P t) \\<or> (\\<box> t B. P t) \\<Longrightarrow> \\<box> t (A \\<inter> B). P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t A. P t) \\<or> (\\<box> t B. P t) \\<Longrightarrow>\n    \\<box> t A \\<inter> B. P t", "by blast"], ["", "lemma not_iEx_inter: \"\n  \\<exists>A B P. (\\<diamond> t A. P t) \\<and> (\\<diamond> t B. P t) \\<and> \\<not> (\\<diamond> t (A \\<inter> B). P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A B P.\n       (\\<diamond> t A. P t) \\<and>\n       (\\<diamond> t B. P t) \\<and> \\<not> (\\<diamond> t A \\<inter> B. P t)", "by (rule_tac x=\"{0}\" in exI, rule_tac x=\"{Suc 0}\" in exI, blast)"], ["", "lemma \n  iAll_insert: \"\\<lbrakk> P t; \\<box> t I. P t \\<rbrakk> \\<Longrightarrow> \\<box> t' (insert t I). P t'\" and\n  iAll_insert_conv: \"(\\<box> t' (insert t I). P t') = (P t \\<and> (\\<box> t' I. P t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P t; \\<box> t I. P t\\<rbrakk>\n     \\<Longrightarrow> \\<box> t' insert t I. P t') &&&\n    (\\<box> t' insert t I. P t') = (P t \\<and> (\\<box> t' I. P t'))", "by blast+"], ["", "lemma \n  iEx_insert: \"\\<lbrakk> P t \\<or> (\\<diamond> t I. P t) \\<rbrakk> \\<Longrightarrow> \\<diamond> t' (insert t I). P t'\" and\n  iEx_insert_conv: \"(\\<diamond> t' (insert t I). P t') = (P t \\<or> (\\<diamond> t' I. P t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t \\<or> (\\<diamond> t I. P t) \\<Longrightarrow>\n     \\<diamond> t' insert t I. P t') &&&\n    (\\<diamond> t' insert t I. P t') = (P t \\<or> (\\<diamond> t' I. P t'))", "by blast+"], ["", "subsection \\<open>Further results for temporal operators\\<close>"], ["", "lemma Collect_minI_iEx: \"\\<diamond> t I. P t \\<Longrightarrow> \\<diamond> t I. P t \\<and> (\\<box> t' (I \\<down>< t). \\<not> P t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<diamond> t I. P t \\<Longrightarrow>\n    \\<diamond> t I. P t \\<and> (\\<box> t' I \\<down>< t. \\<not> P t')", "by (unfold iAll_def iEx_def, rule Collect_minI_ex_cut)"], ["", "lemma iUntil_disj_conv1: \"\n  I \\<noteq> {} \\<Longrightarrow>\n  (P t'. t' \\<U> t I. Q t) = (Q (iMin I) \\<or> (P t'. t' \\<U> t I. Q t \\<and> iMin I < t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (P t'. t' \\<U> t I. Q t) =\n    (Q (iMin I) \\<or> (P t'. t' \\<U> t I. Q t \\<and> iMin I < t))", "apply (case_tac \"Q (iMin I)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<U> t I. Q t) =\n                      (Q (iMin I) \\<or>\n                       (P t'. t' \\<U> t I. Q t \\<and> iMin I < t))\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<U> t I. Q t) =\n                      (Q (iMin I) \\<or>\n                       (P t'. t' \\<U> t I. Q t \\<and> iMin I < t))", "apply (simp add: iMin_imp_iUntil)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<U> t I. Q t) =\n                      (Q (iMin I) \\<or>\n                       (P t'. t' \\<U> t I. Q t \\<and> iMin I < t))", "apply (unfold iUntil_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iSince_disj_conv1: \"\n  \\<lbrakk> finite I; I \\<noteq> {} \\<rbrakk> \\<Longrightarrow>\n  (P t'. t' \\<S> t I. Q t) = (Q (Max I) \\<or> (P t'. t' \\<S> t I. Q t \\<and> t < Max I))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) =\n                      (Q (Max I) \\<or>\n                       (P t'. t' \\<S> t I. Q t \\<and> t < Max I))", "apply (case_tac \"Q (Max I)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) =\n                      (Q (Max I) \\<or>\n                       (P t'. t' \\<S> t I. Q t \\<and> t < Max I))\n 2. \\<lbrakk>finite I; I \\<noteq> {}; \\<not> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) =\n                      (Q (Max I) \\<or>\n                       (P t'. t' \\<S> t I. Q t \\<and> t < Max I))", "apply (simp add: Max_imp_iSince)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; \\<not> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) =\n                      (Q (Max I) \\<or>\n                       (P t'. t' \\<S> t I. Q t \\<and> t < Max I))", "apply (unfold iSince_def, blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iUntil_next: \"\n  I \\<noteq> {} \\<Longrightarrow>\n  (P t'. t' \\<U> t I. Q t) = \n  (Q (iMin I) \\<or> (P (iMin I) \\<and> (P t'. t' \\<U> t (I \\<down>> (iMin I)). Q t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (P t'. t' \\<U> t I. Q t) =\n    (Q (iMin I) \\<or>\n     P (iMin I) \\<and> (P t'. t' \\<U> t I \\<down>> iMin I. Q t))", "apply (case_tac \"Q (iMin I)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<U> t I. Q t) =\n                      (Q (iMin I) \\<or>\n                       P (iMin I) \\<and>\n                       (P t'. t' \\<U> t I \\<down>> iMin I. Q t))\n 2. \\<lbrakk>I \\<noteq> {}; \\<not> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<U> t I. Q t) =\n                      (Q (iMin I) \\<or>\n                       P (iMin I) \\<and>\n                       (P t'. t' \\<U> t I \\<down>> iMin I. Q t))", "apply (simp add: iMin_imp_iUntil)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<U> t I. Q t) =\n                      (Q (iMin I) \\<or>\n                       P (iMin I) \\<and>\n                       (P t'. t' \\<U> t I \\<down>> iMin I. Q t))", "apply (simp add: iUntil_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> Q (iMin I)\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q t \\<and> (\\<box> t' I \\<down>< t. P t')) =\n                      (P (iMin I) \\<and>\n                       (\\<diamond> t I \\<down>> iMin I.\n                           Q t \\<and>\n                           iAll (I \\<down>> iMin I \\<down>< t) P))", "apply (frule iMinI_ex2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; \\<not> Q (iMin I); iMin I \\<in> I\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q t \\<and> (\\<box> t' I \\<down>< t. P t')) =\n                      (P (iMin I) \\<and>\n                       (\\<diamond> t I \\<down>> iMin I.\n                           Q t \\<and>\n                           iAll (I \\<down>> iMin I \\<down>< t) P))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iSince_prev: \"\\<lbrakk> finite I; I \\<noteq> {} \\<rbrakk> \\<Longrightarrow>\n  (P t'. t' \\<S> t I. Q t) = \n  (Q (Max I) \\<or> (P (Max I) \\<and> (P t'. t' \\<S> t (I \\<down>< Max I). Q t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) =\n                      (Q (Max I) \\<or>\n                       P (Max I) \\<and>\n                       (P t'. t' \\<S> t I \\<down>< Max I. Q t))", "apply (case_tac \"Q (Max I)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) =\n                      (Q (Max I) \\<or>\n                       P (Max I) \\<and>\n                       (P t'. t' \\<S> t I \\<down>< Max I. Q t))\n 2. \\<lbrakk>finite I; I \\<noteq> {}; \\<not> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) =\n                      (Q (Max I) \\<or>\n                       P (Max I) \\<and>\n                       (P t'. t' \\<S> t I \\<down>< Max I. Q t))", "apply (simp add: Max_imp_iSince)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; \\<not> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> (P t'. t' \\<S> t I. Q t) =\n                      (Q (Max I) \\<or>\n                       P (Max I) \\<and>\n                       (P t'. t' \\<S> t I \\<down>< Max I. Q t))", "apply (simp add: iSince_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; \\<not> Q (Max I)\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q t \\<and> (\\<box> t' I \\<down>> t. P t')) =\n                      (P (Max I) \\<and>\n                       (\\<diamond> t I \\<down>< Max I.\n                           Q t \\<and> iAll (I \\<down>< Max I \\<down>> t) P))", "apply (frule Max_in, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}; \\<not> Q (Max I);\n     Max I \\<in> I\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q t \\<and> (\\<box> t' I \\<down>> t. P t')) =\n                      (P (Max I) \\<and>\n                       (\\<diamond> t I \\<down>< Max I.\n                           Q t \\<and> iAll (I \\<down>< Max I \\<down>> t) P))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iNext_induct_rule: \"\n  \\<lbrakk> P (iMin I); \\<box> t I. (P t \\<longrightarrow> (\\<circle> t' t I. P t')); t \\<in> I \\<rbrakk> \\<Longrightarrow> P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P (iMin I); \\<box> t I. P t \\<longrightarrow> iNext t I P;\n     t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> P t", "apply (rule inext_induct[of _ I])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>P (iMin I); \\<box> t I. P t \\<longrightarrow> iNext t I P;\n     t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> P (iMin I)\n 2. \\<And>n.\n       \\<lbrakk>P (iMin I); \\<box> t I. P t \\<longrightarrow> iNext t I P;\n        t \\<in> I; n \\<in> I; P n\\<rbrakk>\n       \\<Longrightarrow> P (inext n I)\n 3. \\<lbrakk>P (iMin I); \\<box> t I. P t \\<longrightarrow> iNext t I P;\n     t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> t \\<in> I", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>P (iMin I); \\<box> t I. P t \\<longrightarrow> iNext t I P;\n        t \\<in> I; n \\<in> I; P n\\<rbrakk>\n       \\<Longrightarrow> P (inext n I)\n 2. \\<lbrakk>P (iMin I); \\<box> t I. P t \\<longrightarrow> iNext t I P;\n     t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> t \\<in> I", "apply (drule_tac t=n in ispec, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>P (iMin I); t \\<in> I; n \\<in> I; P n;\n        P n \\<longrightarrow> iNext n I P\\<rbrakk>\n       \\<Longrightarrow> P (inext n I)\n 2. \\<lbrakk>P (iMin I); \\<box> t I. P t \\<longrightarrow> iNext t I P;\n     t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> t \\<in> I", "apply (simp add: iNext_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P (iMin I); \\<box> t I. P t \\<longrightarrow> iNext t I P;\n     t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> t \\<in> I", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iNext_induct: \"\n  \\<lbrakk> P (iMin I); \\<box> t I. (P t \\<longrightarrow> (\\<circle> t' t I. P t')) \\<rbrakk> \\<Longrightarrow> \\<box> t I. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P (iMin I);\n     \\<box> t I. P t \\<longrightarrow> iNext t I P\\<rbrakk>\n    \\<Longrightarrow> \\<box> t I. P t", "by (rule iallI, rule iNext_induct_rule)"], ["", "lemma iLast_induct_rule: \"\n  \\<lbrakk> P (Max I); \\<box> t I. (P t \\<longrightarrow> (\\<ominus> t' t I. P t')); finite I; t \\<in> I \\<rbrakk> \\<Longrightarrow> P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> P t", "apply (rule iprev_induct[of _ I])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> P (Max I)\n 2. \\<And>n.\n       \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n        finite I; t \\<in> I; n \\<in> I; P n\\<rbrakk>\n       \\<Longrightarrow> P (iprev n I)\n 3. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> finite I\n 4. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> t \\<in> I", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n        finite I; t \\<in> I; n \\<in> I; P n\\<rbrakk>\n       \\<Longrightarrow> P (iprev n I)\n 2. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> finite I\n 3. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> t \\<in> I", "apply (drule_tac t=n in ispec, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>P (Max I); finite I; t \\<in> I; n \\<in> I; P n;\n        P n \\<longrightarrow> iLast n I P\\<rbrakk>\n       \\<Longrightarrow> P (iprev n I)\n 2. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> finite I\n 3. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> t \\<in> I", "apply (simp add: iLast_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> finite I\n 2. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I; t \\<in> I\\<rbrakk>\n    \\<Longrightarrow> t \\<in> I", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iLast_induct: \"\n  \\<lbrakk> P (Max I); \\<box> t I. (P t \\<longrightarrow> (\\<ominus> t' t I. P t')); finite I \\<rbrakk> \\<Longrightarrow> \\<box> t I. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P (Max I); \\<box> t I. P t \\<longrightarrow> iLast t I P;\n     finite I\\<rbrakk>\n    \\<Longrightarrow> \\<box> t I. P t", "by (rule iallI, rule iLast_induct_rule)"], ["", "lemma iUntil_conj_not: \"((P t1 \\<and> \\<not> Q t1). t1 \\<U> t2 I. Q t2) = (P t1. t1 \\<U> t2 I. Q t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1 \\<and> \\<not> Q t1. t1 \\<U> t2 I. Q t2) =\n    (P t1. t1 \\<U> t2 I. Q t2)", "apply (unfold iUntil_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I.\n        Q t \\<and> (\\<box> t' I \\<down>< t. P t' \\<and> \\<not> Q t')) =\n    (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t'))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<diamond> t I.\n       Q t \\<and>\n       (\\<box> t' I \\<down>< t. P t' \\<and> \\<not> Q t') \\<Longrightarrow>\n    \\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>< t. P t')\n 2. \\<diamond> t I.\n       Q t \\<and> (\\<box> t' I \\<down>< t. P t') \\<Longrightarrow>\n    \\<diamond> t I.\n       Q t \\<and> (\\<box> t' I \\<down>< t. P t' \\<and> \\<not> Q t')", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<diamond> t I.\n       Q t \\<and> (\\<box> t' I \\<down>< t. P t') \\<Longrightarrow>\n    \\<diamond> t I.\n       Q t \\<and> (\\<box> t' I \\<down>< t. P t' \\<and> \\<not> Q t')", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q t \\<and>\n                            (\\<box> t' I \\<down>< t.\n                                P t' \\<and> \\<not> Q t')", "apply (rule_tac t=\"iMin {x \\<in> I. Q x}\" in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> Q (iMin {x \\<in> I. Q x}) \\<and>\n                         (\\<box> t' I \\<down>< iMin {x \\<in> I. Q x}.\n                             P t' \\<and> \\<not> Q t')\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> Q (iMin {x \\<in> I. Q x})\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> \\<box> t' I \\<down>< iMin {x \\<in> I. Q x}.\n                            P t' \\<and> \\<not> Q t'\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (blast intro: iMinI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> \\<box> t' I \\<down>< iMin {x \\<in> I. Q x}.\n                            P t' \\<and> \\<not> Q t'\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (clarsimp simp: cut_less_mem_iff, rename_tac t1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'; t1 \\<in> I;\n        t1 < iMin {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (subgoal_tac \"iMin {x \\<in> I. Q x} \\<le> t\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'; t1 \\<in> I;\n        t1 < iMin {x \\<in> I. Q x}; iMin {x \\<in> I. Q x} \\<le> t\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'; t1 \\<in> I;\n        t1 < iMin {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<le> t\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'; t1 \\<in> I;\n        t1 < iMin {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<le> t\n 2. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'; t1 \\<in> I;\n        t1 < iMin {x \\<in> I. Q x}; iMin {x \\<in> I. Q x} \\<le> t\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (simp add: iMin_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'; t1 \\<in> I;\n        t1 < iMin {x \\<in> I. Q x}; iMin {x \\<in> I. Q x} \\<le> t\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (frule order_less_le_trans, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'; t1 \\<in> I;\n        t1 < iMin {x \\<in> I. Q x}; iMin {x \\<in> I. Q x} \\<le> t;\n        t1 < t\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (drule_tac t=t1 in ispec, simp add: cut_less_mem_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; t1 \\<in> I; t1 < iMin {x \\<in> I. Q x};\n        iMin {x \\<in> I. Q x} \\<le> t; t1 < t; P t1\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (rule ccontr, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; t1 \\<in> I; t1 < iMin {x \\<in> I. Q x};\n        iMin {x \\<in> I. Q x} \\<le> t; P t1; Q t1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (subgoal_tac \"t1 \\<in> {x \\<in> I. Q x}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; t1 \\<in> I; t1 < iMin {x \\<in> I. Q x};\n        iMin {x \\<in> I. Q x} \\<le> t; P t1; Q t1;\n        t1 \\<in> {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; t1 \\<in> I; t1 < iMin {x \\<in> I. Q x};\n        iMin {x \\<in> I. Q x} \\<le> t; P t1; Q t1\\<rbrakk>\n       \\<Longrightarrow> t1 \\<in> {x \\<in> I. Q x}\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; t1 \\<in> I; t1 < iMin {x \\<in> I. Q x};\n        iMin {x \\<in> I. Q x} \\<le> t; P t1; Q t1\\<rbrakk>\n       \\<Longrightarrow> t1 \\<in> {x \\<in> I. Q x}\n 2. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; t1 \\<in> I; t1 < iMin {x \\<in> I. Q x};\n        iMin {x \\<in> I. Q x} \\<le> t; P t1; Q t1;\n        t1 \\<in> {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; t1 \\<in> I; t1 < iMin {x \\<in> I. Q x};\n        iMin {x \\<in> I. Q x} \\<le> t; P t1; Q t1;\n        t1 \\<in> {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (drule_tac k=t1 and I=\"{x \\<in> I. Q x}\" in iMin_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>t \\<in> I; Q t; t1 \\<in> I; t1 < iMin {x \\<in> I. Q x};\n        iMin {x \\<in> I. Q x} \\<le> t; P t1; Q t1;\n        iMin {x \\<in> I. Q x} \\<le> t1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; Q t; \\<box> t' I \\<down>< t. P t'\\<rbrakk>\n       \\<Longrightarrow> iMin {x \\<in> I. Q x} \\<in> I", "apply (blast intro: subsetD[OF _ iMinI])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iWeakUntil_conj_not: \"((P t1 \\<and> \\<not> Q t1). t1 \\<W> t2 I. Q t2) = (P t1. t1 \\<W> t2 I. Q t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1 \\<and> \\<not> Q t1. t1 \\<W> t2 I. Q t2) =\n    (P t1. t1 \\<W> t2 I. Q t2)", "by (simp only: iWeakUntil_iUntil_conv iUntil_conj_not, blast)"], ["", "lemma iSince_conj_not: \"finite I \\<Longrightarrow>\n  ((P t1 \\<and> \\<not> Q t1). t1 \\<S> t2 I. Q t2) = (P t1. t1 \\<S> t2 I. Q t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    (P t1 \\<and> \\<not> Q t1. t1 \\<S> t2 I. Q t2) =\n    (P t1. t1 \\<S> t2 I. Q t2)", "apply (simp only: iSince_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    (\\<diamond> t I.\n        Q t \\<and> (\\<box> t' I \\<down>> t. P t' \\<and> \\<not> Q t')) =\n    (\\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>> t. P t'))", "apply (case_tac \"I = {}\", simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q t \\<and>\n                          (\\<box> t' I \\<down>> t.\n                              P t' \\<and> \\<not> Q t')) =\n                      (\\<diamond> t I.\n                          Q t \\<and> (\\<box> t' I \\<down>> t. P t'))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; I \\<noteq> {};\n     \\<diamond> t I.\n        Q t \\<and>\n        (\\<box> t' I \\<down>> t. P t' \\<and> \\<not> Q t')\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')\n 2. \\<lbrakk>finite I; I \\<noteq> {};\n     \\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>> t. P t')\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and>\n                         (\\<box> t' I \\<down>> t. P t' \\<and> \\<not> Q t')", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; I \\<noteq> {};\n     \\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>> t. P t')\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and>\n                         (\\<box> t' I \\<down>> t. P t' \\<and> \\<not> Q t')", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q t \\<and>\n                            (\\<box> t' I \\<down>> t.\n                                P t' \\<and> \\<not> Q t')", "apply (subgoal_tac \"finite {x \\<in> I. Q x}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q t \\<and>\n                            (\\<box> t' I \\<down>> t.\n                                P t' \\<and> \\<not> Q t')\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> finite {x \\<in> I. Q x}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> finite {x \\<in> I. Q x}\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q t \\<and>\n                            (\\<box> t' I \\<down>> t.\n                                P t' \\<and> \\<not> Q t')", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q t \\<and>\n                            (\\<box> t' I \\<down>> t.\n                                P t' \\<and> \\<not> Q t')", "apply (rule_tac t=\"Max {x \\<in> I. Q x}\" in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Q (Max {x \\<in> I. Q x}) \\<and>\n                         (\\<box> t' I \\<down>> Max {x \\<in> I. Q x}.\n                             P t' \\<and> \\<not> Q t')\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Q (Max {x \\<in> I. Q x})\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> \\<box> t' I \\<down>> Max {x \\<in> I. Q x}.\n                            P t' \\<and> \\<not> Q t'\n 3. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (blast intro: MaxI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> \\<box> t' I \\<down>> Max {x \\<in> I. Q x}.\n                            P t' \\<and> \\<not> Q t'\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (clarsimp simp: cut_greater_mem_iff, rename_tac t1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (subgoal_tac \"t \\<le> Max {x \\<in> I. Q x}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; t1 \\<in> I; Max {x \\<in> I. Q x} < t1;\n        t \\<le> Max {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1\\<rbrakk>\n       \\<Longrightarrow> t \\<le> Max {x \\<in> I. Q x}\n 3. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1\\<rbrakk>\n       \\<Longrightarrow> t \\<le> Max {x \\<in> I. Q x}\n 2. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; t1 \\<in> I; Max {x \\<in> I. Q x} < t1;\n        t \\<le> Max {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 3. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; t1 \\<in> I; Max {x \\<in> I. Q x} < t1;\n        t \\<le> Max {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (frule order_le_less_trans, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; t1 \\<in> I; Max {x \\<in> I. Q x} < t1;\n        t \\<le> Max {x \\<in> I. Q x}; t < t1\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (drule_tac t=t1 in ispec, simp add: cut_greater_mem_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1; t \\<le> Max {x \\<in> I. Q x}; t < t1;\n        P t1\\<rbrakk>\n       \\<Longrightarrow> P t1 \\<and> \\<not> Q t1\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (rule ccontr, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1; t < t1; P t1; Q t1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (subgoal_tac \"t1 \\<in> {x \\<in> I. Q x}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1; t < t1; P t1; Q t1;\n        t1 \\<in> {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1; t < t1; P t1; Q t1\\<rbrakk>\n       \\<Longrightarrow> t1 \\<in> {x \\<in> I. Q x}\n 3. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1; t < t1; P t1; Q t1\\<rbrakk>\n       \\<Longrightarrow> t1 \\<in> {x \\<in> I. Q x}\n 2. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1; t < t1; P t1; Q t1;\n        t1 \\<in> {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t; t1 \\<in> I;\n        Max {x \\<in> I. Q x} < t1; t < t1; P t1; Q t1;\n        t1 \\<in> {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'; finite {x \\<in> I. Q x}\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (drule  not_greater_Max[rotated 1], simp+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>finite I; I \\<noteq> {}; t \\<in> I; Q t;\n        \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> Max {x \\<in> I. Q x} \\<in> I", "apply (rule subsetD[OF _ MaxI], fastforce+)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iWeakSince_conj_not: \"finite I \\<Longrightarrow>\n  ((P t1 \\<and> \\<not> Q t1). t1 \\<B> t2 I. Q t2) = (P t1. t1 \\<B> t2 I. Q t2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    (P t1 \\<and> \\<not> Q t1. t1 \\<B> t2 I. Q t2) =\n    (P t1. t1 \\<B> t2 I. Q t2)", "by (simp only: iWeakSince_iSince_conv iSince_conj_not, blast)"], ["", "lemma iNextStrong_imp_iNextWeak: \"(\\<circle>\\<^sub>S t t0 I. P t) \\<longrightarrow> (\\<circle>\\<^sub>W t t0 I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iNextStrong t0 I P \\<longrightarrow> iNextWeak t0 I P", "unfolding iTL_Next_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t {inext t0 I} \\<down>> t0. P t) \\<longrightarrow>\n    (\\<box> t {inext t0 I} \\<down>> t0. P t)", "by blast"], ["", "lemma iLastStrong_imp_iLastWeak: \"(\\<ominus>\\<^sub>S t t0 I. P t) \\<longrightarrow> (\\<ominus>\\<^sub>W t t0 I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iLastStrong t0 I P \\<longrightarrow> iLastWeak t0 I P", "unfolding iTL_Next_defs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t {iprev t0 I} \\<down>< t0. P t) \\<longrightarrow>\n    (\\<box> t {iprev t0 I} \\<down>< t0. P t)", "by blast"], ["", "lemma infin_imp_iNextWeak_iNextStrong_eq_iNext: \"\n  \\<lbrakk> infinite I; t0 \\<in> I \\<rbrakk> \\<Longrightarrow> \n  ((\\<circle>\\<^sub>W t t0 I. P t) = (\\<circle> t t0 I. P t)) \\<and> ((\\<circle>\\<^sub>S t t0 I. P t) = (\\<circle> t t0 I. P t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite I; t0 \\<in> I\\<rbrakk>\n    \\<Longrightarrow> iNextWeak t0 I P = iNext t0 I P \\<and>\n                      iNextStrong t0 I P = iNext t0 I P", "by (simp add: iTL_Next_iff nat_cut_greater_infinite_not_empty)"], ["", "lemma infin_imp_iNextWeak_eq_iNext: \"\\<lbrakk> infinite I; t0 \\<in> I \\<rbrakk> \\<Longrightarrow> (\\<circle>\\<^sub>W t t0 I. P t) = (\\<circle> t t0 I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite I; t0 \\<in> I\\<rbrakk>\n    \\<Longrightarrow> iNextWeak t0 I P = iNext t0 I P", "by (simp add: infin_imp_iNextWeak_iNextStrong_eq_iNext)"], ["", "lemma infin_imp_iNextStrong_eq_iNext: \"\\<lbrakk> infinite I; t0 \\<in> I \\<rbrakk> \\<Longrightarrow> (\\<circle>\\<^sub>S t t0 I. P t) = (\\<circle> t t0 I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite I; t0 \\<in> I\\<rbrakk>\n    \\<Longrightarrow> iNextStrong t0 I P = iNext t0 I P", "by (simp add: infin_imp_iNextWeak_iNextStrong_eq_iNext)"], ["", "lemma infin_imp_iNextStrong_eq_iNextWeak: \"\\<lbrakk> infinite I; t0 \\<in> I \\<rbrakk> \\<Longrightarrow> (\\<circle>\\<^sub>S t t0 I. P t) = (\\<circle>\\<^sub>W t t0 I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite I; t0 \\<in> I\\<rbrakk>\n    \\<Longrightarrow> iNextStrong t0 I P = iNextWeak t0 I P", "by (simp add: infin_imp_iNextWeak_eq_iNext infin_imp_iNextStrong_eq_iNext)"], ["", "lemma \n  not_in_iNext_eq: \"t0 \\<notin> I \\<Longrightarrow> (\\<circle> t t0 I. P t) = (P t0)\" and\n  not_in_iLast_eq: \"t0 \\<notin> I \\<Longrightarrow> (\\<ominus> t t0 I. P t) = (P t0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t0 \\<notin> I \\<Longrightarrow> iNext t0 I P = P t0) &&&\n    (t0 \\<notin> I \\<Longrightarrow> iLast t0 I P = P t0)", "by (simp_all add: iTL_defs not_in_inext_fix not_in_iprev_fix)"], ["", "lemma \n  not_in_iNextWeak_eq: \"t0 \\<notin> I \\<Longrightarrow> (\\<circle>\\<^sub>W t t0 I. P t)\" and\n  not_in_iLastWeak_eq: \"t0 \\<notin> I \\<Longrightarrow> (\\<ominus>\\<^sub>W t t0 I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t0 \\<notin> I \\<Longrightarrow> iNextWeak t0 I P) &&&\n    (t0 \\<notin> I \\<Longrightarrow> iLastWeak t0 I P)", "by (simp_all add: iNextWeak_iff iLastWeak_iff)"], ["", "lemma \n  not_in_iNextStrong_eq: \"t0 \\<notin> I \\<Longrightarrow> \\<not> (\\<circle>\\<^sub>S t t0 I. P t)\" and\n  not_in_iLastStrong_eq: \"t0 \\<notin> I \\<Longrightarrow> \\<not> (\\<ominus>\\<^sub>S t t0 I. P t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t0 \\<notin> I \\<Longrightarrow> \\<not> iNextStrong t0 I P) &&&\n    (t0 \\<notin> I \\<Longrightarrow> \\<not> iLastStrong t0 I P)", "by (simp_all add: iNextStrong_iff iLastStrong_iff)"], ["", "lemma \n  iNext_UNIV: \"(\\<circle> t t0 UNIV. P t) = P (Suc t0)\" and\n  iNextWeak_UNIV: \"(\\<circle>\\<^sub>W t t0 UNIV. P t) = P (Suc t0)\" and\n  iNextStrong_UNIV: \"(\\<circle>\\<^sub>S t t0 UNIV. P t) = P (Suc t0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iNext t0 UNIV P = P (Suc t0) &&&\n    iNextWeak t0 UNIV P = P (Suc t0) &&& iNextStrong t0 UNIV P = P (Suc t0)", "by (simp_all add: iTL_Next_defs inext_UNIV cut_greater_singleton)"], ["", "lemma \n  iLast_UNIV: \"(\\<ominus> t t0 UNIV. P t) = P (t0 - Suc 0)\" and\n  iLastWeak_UNIV: \"(\\<ominus>\\<^sub>W t t0 UNIV. P t) = (if 0 < t0 then P (t0 - Suc 0) else True)\" and\n  iLastStrong_UNIV: \"(\\<ominus>\\<^sub>S t t0 UNIV. P t) = (if 0 < t0 then P (t0 - Suc 0) else False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iLast t0 UNIV P = P (t0 - Suc 0) &&&\n    iLastWeak t0 UNIV P = (if 0 < t0 then P (t0 - Suc 0) else True) &&&\n    iLastStrong t0 UNIV P = (if 0 < t0 then P (t0 - Suc 0) else False)", "by (simp_all add: iTL_Next_defs iprev_UNIV cut_less_singleton)"], ["", "lemmas iTL_Next_UNIV = \n  iNext_UNIV iNextWeak_UNIV iNextStrong_UNIV\n  iLast_UNIV iLastWeak_UNIV iLastStrong_UNIV"], ["", "lemma inext_nth_iNext_Suc: \"(\\<circle> t (I \\<rightarrow> n) I. P t) = P (I \\<rightarrow> Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iNext (I \\<rightarrow> n) I P = P (I \\<rightarrow> Suc n)", "by (simp add: iNext_def)"], ["", "lemma iprev_nth_iLast_Suc: \"(\\<ominus> t (I \\<leftarrow> n) I. P t) = P (I \\<leftarrow> Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iLast (I \\<leftarrow> n) I P = P (I \\<leftarrow> Suc n)", "by (simp add: iLast_def)"], ["", "subsection \\<open>Temporal operators and arithmetic interval operators\\<close>"], ["", "text \\<open>\n  Shifting intervals through addition and subtraction of constants. \n  Mirroring intervals through subtraction of intervals from constants. \n  Expanding and compressing intervals through multiplication and division by constants.\\<close>"], ["", "text \\<open>Always operator\\<close>"], ["", "lemma iT_Plus_iAll_conv: \"(\\<box> t I \\<oplus> k. P t) = (\\<box> t I. P (t + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t I \\<oplus> k. P t) = (\\<box> t I. P (t + k))", "apply (unfold iAll_def Ball_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. x \\<in> I \\<oplus> k \\<longrightarrow> P x) =\n    (\\<forall>x. x \\<in> I \\<longrightarrow> P (x + k))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x. x \\<in> I \\<oplus> k \\<longrightarrow> P x \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<longrightarrow> P (x + k)\n 2. \\<forall>x. x \\<in> I \\<longrightarrow> P (x + k) \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<oplus> k \\<longrightarrow> P x", "apply (clarify, rename_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x. x \\<in> I \\<oplus> k \\<longrightarrow> P x;\n        x \\<in> I\\<rbrakk>\n       \\<Longrightarrow> P (x + k)\n 2. \\<forall>x. x \\<in> I \\<longrightarrow> P (x + k) \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<oplus> k \\<longrightarrow> P x", "apply (drule_tac x=\"x + k\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> I;\n        x + k \\<in> I \\<oplus> k \\<longrightarrow> P (x + k)\\<rbrakk>\n       \\<Longrightarrow> P (x + k)\n 2. \\<forall>x. x \\<in> I \\<longrightarrow> P (x + k) \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<oplus> k \\<longrightarrow> P x", "apply (simp add: iT_Plus_mem_iff2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> I \\<longrightarrow> P (x + k) \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<oplus> k \\<longrightarrow> P x", "apply (clarify, rename_tac x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x. x \\<in> I \\<longrightarrow> P (x + k);\n        x \\<in> I \\<oplus> k\\<rbrakk>\n       \\<Longrightarrow> P x", "apply (drule_tac x=\"x - k\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> I \\<oplus> k;\n        x - k \\<in> I \\<longrightarrow> P (x - k + k)\\<rbrakk>\n       \\<Longrightarrow> P x", "apply (simp add: iT_Plus_mem_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Mult_iAll_conv: \"(\\<box> t I \\<otimes> k. P t) = (\\<box> t I. P (t * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t I \\<otimes> k. P t) = (\\<box> t I. P (t * k))", "apply (unfold iAll_def Ball_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. x \\<in> I \\<otimes> k \\<longrightarrow> P x) =\n    (\\<forall>x. x \\<in> I \\<longrightarrow> P (x * k))", "apply (case_tac \"I = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow>\n    (\\<forall>x. x \\<in> I \\<otimes> k \\<longrightarrow> P x) =\n    (\\<forall>x. x \\<in> I \\<longrightarrow> P (x * k))\n 2. I \\<noteq> {} \\<Longrightarrow>\n    (\\<forall>x. x \\<in> I \\<otimes> k \\<longrightarrow> P x) =\n    (\\<forall>x. x \\<in> I \\<longrightarrow> P (x * k))", "apply (simp add: iT_Mult_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (\\<forall>x. x \\<in> I \\<otimes> k \\<longrightarrow> P x) =\n    (\\<forall>x. x \\<in> I \\<longrightarrow> P (x * k))", "apply (case_tac \"k = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; k = 0\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          x \\<in> I \\<otimes> k \\<longrightarrow> P x) =\n                      (\\<forall>x. x \\<in> I \\<longrightarrow> P (x * k))\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          x \\<in> I \\<otimes> k \\<longrightarrow> P x) =\n                      (\\<forall>x. x \\<in> I \\<longrightarrow> P (x * k))", "apply (force simp: iT_Mult_0 iTILL_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          x \\<in> I \\<otimes> k \\<longrightarrow> P x) =\n                      (\\<forall>x. x \\<in> I \\<longrightarrow> P (x * k))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<otimes> k \\<longrightarrow> P x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. x \\<in> I \\<longrightarrow> P (x * k)\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<longrightarrow> P (x * k)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> I \\<otimes> k \\<longrightarrow> P x", "apply (clarify, rename_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>I \\<noteq> {};\n        \\<forall>x. x \\<in> I \\<otimes> k \\<longrightarrow> P x; 0 < k;\n        x \\<in> I\\<rbrakk>\n       \\<Longrightarrow> P (x * k)\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<longrightarrow> P (x * k)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> I \\<otimes> k \\<longrightarrow> P x", "apply (drule_tac x=\"x * k\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; x \\<in> I;\n        x * k \\<in> I \\<otimes> k \\<longrightarrow> P (x * k)\\<rbrakk>\n       \\<Longrightarrow> P (x * k)\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<longrightarrow> P (x * k)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> I \\<otimes> k \\<longrightarrow> P x", "apply (simp add: iT_Mult_mem_iff2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<longrightarrow> P (x * k)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> I \\<otimes> k \\<longrightarrow> P x", "apply (clarify, rename_tac x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>I \\<noteq> {};\n        \\<forall>x. x \\<in> I \\<longrightarrow> P (x * k); 0 < k;\n        x \\<in> I \\<otimes> k\\<rbrakk>\n       \\<Longrightarrow> P x", "apply (drule_tac x=\"x div k\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; x \\<in> I \\<otimes> k;\n        x div k \\<in> I \\<longrightarrow> P (x div k * k)\\<rbrakk>\n       \\<Longrightarrow> P x", "apply (simp add: iT_Mult_mem_iff mod_0_div_mult_cancel)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Plus_neg_iAll_conv: \"(\\<box> t I \\<oplus>- k. P t) = (\\<box> t (I \\<down>\\<ge> k). P (t - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t I \\<oplus>- k. P t) = (\\<box> t I \\<down>\\<ge> k. P (t - k))", "apply (unfold iAll_def Ball_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. x \\<in> I \\<oplus>- k \\<longrightarrow> P x) =\n    (\\<forall>x. x \\<in> I \\<down>\\<ge> k \\<longrightarrow> P (x - k))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       x \\<in> I \\<oplus>- k \\<longrightarrow> P x \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<down>\\<ge> k \\<longrightarrow> P (x - k)\n 2. \\<forall>x.\n       x \\<in> I \\<down>\\<ge> k \\<longrightarrow>\n       P (x - k) \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<oplus>- k \\<longrightarrow> P x", "apply (clarify, rename_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x. x \\<in> I \\<oplus>- k \\<longrightarrow> P x;\n        x \\<in> I; k \\<le> x\\<rbrakk>\n       \\<Longrightarrow> P (x - k)\n 2. \\<forall>x.\n       x \\<in> I \\<down>\\<ge> k \\<longrightarrow>\n       P (x - k) \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<oplus>- k \\<longrightarrow> P x", "apply (drule_tac x=\"x - k\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> I; k \\<le> x;\n        x - k \\<in> I \\<oplus>- k \\<longrightarrow> P (x - k)\\<rbrakk>\n       \\<Longrightarrow> P (x - k)\n 2. \\<forall>x.\n       x \\<in> I \\<down>\\<ge> k \\<longrightarrow>\n       P (x - k) \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<oplus>- k \\<longrightarrow> P x", "apply (simp add: iT_Plus_neg_mem_iff2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> I \\<down>\\<ge> k \\<longrightarrow>\n       P (x - k) \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<oplus>- k \\<longrightarrow> P x", "apply (clarify, rename_tac x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> I \\<down>\\<ge> k \\<longrightarrow> P (x - k);\n        x \\<in> I \\<oplus>- k\\<rbrakk>\n       \\<Longrightarrow> P x", "apply (drule_tac x=\"x + k\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> I \\<oplus>- k;\n        x + k \\<in> I \\<down>\\<ge> k \\<longrightarrow>\n        P (x + k - k)\\<rbrakk>\n       \\<Longrightarrow> P x", "apply (simp add: iT_Plus_neg_mem_iff cut_ge_mem_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Minus_iAll_conv: \"(\\<box> t k \\<ominus> I. P t) = (\\<box> t (I \\<down>\\<le> k). P (k - t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t k \\<ominus> I. P t) = (\\<box> t I \\<down>\\<le> k. P (k - t))", "apply (unfold iAll_def Ball_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. x \\<in> k \\<ominus> I \\<longrightarrow> P x) =\n    (\\<forall>x. x \\<in> I \\<down>\\<le> k \\<longrightarrow> P (k - x))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       x \\<in> k \\<ominus> I \\<longrightarrow> P x \\<Longrightarrow>\n    \\<forall>x. x \\<in> I \\<down>\\<le> k \\<longrightarrow> P (k - x)\n 2. \\<forall>x.\n       x \\<in> I \\<down>\\<le> k \\<longrightarrow>\n       P (k - x) \\<Longrightarrow>\n    \\<forall>x. x \\<in> k \\<ominus> I \\<longrightarrow> P x", "apply (clarify, rename_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x. x \\<in> k \\<ominus> I \\<longrightarrow> P x;\n        x \\<in> I; x \\<le> k\\<rbrakk>\n       \\<Longrightarrow> P (k - x)\n 2. \\<forall>x.\n       x \\<in> I \\<down>\\<le> k \\<longrightarrow>\n       P (k - x) \\<Longrightarrow>\n    \\<forall>x. x \\<in> k \\<ominus> I \\<longrightarrow> P x", "apply (drule_tac x=\"k - x\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> I; x \\<le> k;\n        k - x \\<in> k \\<ominus> I \\<longrightarrow> P (k - x)\\<rbrakk>\n       \\<Longrightarrow> P (k - x)\n 2. \\<forall>x.\n       x \\<in> I \\<down>\\<le> k \\<longrightarrow>\n       P (k - x) \\<Longrightarrow>\n    \\<forall>x. x \\<in> k \\<ominus> I \\<longrightarrow> P x", "apply (simp add: iT_Minus_mem_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> I \\<down>\\<le> k \\<longrightarrow>\n       P (k - x) \\<Longrightarrow>\n    \\<forall>x. x \\<in> k \\<ominus> I \\<longrightarrow> P x", "apply (clarify, rename_tac x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x.\n                   x \\<in> I \\<down>\\<le> k \\<longrightarrow> P (k - x);\n        x \\<in> k \\<ominus> I\\<rbrakk>\n       \\<Longrightarrow> P x", "apply (drule_tac x=\"k - x\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> k \\<ominus> I;\n        k - x \\<in> I \\<down>\\<le> k \\<longrightarrow>\n        P (k - (k - x))\\<rbrakk>\n       \\<Longrightarrow> P x", "apply (simp add: iT_Minus_mem_iff cut_le_mem_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Div_iAll_conv: \"(\\<box> t I \\<oslash> k. P t) = (\\<box> t I. P (t div k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<box> t I \\<oslash> k. P t) = (\\<box> t I. P (t div k))", "apply (case_tac \"I = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow>\n    (\\<box> t I \\<oslash> k. P t) = (\\<box> t I. P (t div k))\n 2. I \\<noteq> {} \\<Longrightarrow>\n    (\\<box> t I \\<oslash> k. P t) = (\\<box> t I. P (t div k))", "apply (simp add: iT_Div_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (\\<box> t I \\<oslash> k. P t) = (\\<box> t I. P (t div k))", "apply (case_tac \"k = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; k = 0\\<rbrakk>\n    \\<Longrightarrow> (\\<box> t I \\<oslash> k. P t) =\n                      (\\<box> t I. P (t div k))\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<box> t I \\<oslash> k. P t) =\n                      (\\<box> t I. P (t div k))", "apply (force simp: iT_Div_0 iTILL_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<box> t I \\<oslash> k. P t) =\n                      (\\<box> t I. P (t div k))", "apply (unfold iAll_def Ball_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>x.\n                          x \\<in> I \\<oslash> k \\<longrightarrow> P x) =\n                      (\\<forall>x. x \\<in> I \\<longrightarrow> P (x div k))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<oslash> k \\<longrightarrow> P x\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x. x \\<in> I \\<longrightarrow> P (x div k)\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<longrightarrow> P (x div k)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> I \\<oslash> k \\<longrightarrow> P x", "apply (clarify, rename_tac x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>I \\<noteq> {};\n        \\<forall>x. x \\<in> I \\<oslash> k \\<longrightarrow> P x; 0 < k;\n        x \\<in> I\\<rbrakk>\n       \\<Longrightarrow> P (x div k)\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<longrightarrow> P (x div k)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> I \\<oslash> k \\<longrightarrow> P x", "apply (drule_tac x=\"x div k\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; x \\<in> I;\n        x div k \\<in> I \\<oslash> k \\<longrightarrow> P (x div k)\\<rbrakk>\n       \\<Longrightarrow> P (x div k)\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<longrightarrow> P (x div k)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> I \\<oslash> k \\<longrightarrow> P x", "apply (simp add: iT_Div_imp_mem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0;\n     \\<forall>x. x \\<in> I \\<longrightarrow> P (x div k)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         x \\<in> I \\<oslash> k \\<longrightarrow> P x", "apply (blast dest: iT_Div_mem_iff[THEN iffD1])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas iT_arith_iAll_conv = \n  iT_Plus_iAll_conv\n  iT_Mult_iAll_conv\n  iT_Plus_neg_iAll_conv\n  iT_Minus_iAll_conv\n  iT_Div_iAll_conv"], ["", "text \\<open>Eventually operator\\<close>"], ["", "lemma \n  iT_Plus_iEx_conv: \"(\\<diamond> t I \\<oplus> k. P t) = (\\<diamond> t I. P (t + k))\" and\n  iT_Mult_iEx_conv: \"(\\<diamond> t I \\<otimes> k. P t) = (\\<diamond> t I. P (t * k))\" and\n  iT_Plus_neg_iEx_conv: \"(\\<diamond> t I \\<oplus>- k. P t) = (\\<diamond> t (I \\<down>\\<ge> k). P (t - k))\" and\n  iT_Minus_iEx_conv: \"(\\<diamond> t k \\<ominus> I. P t) = (\\<diamond> t (I \\<down>\\<le> k). P (k - t))\" and\n  iT_Div_iEx_conv: \"(\\<diamond> t I \\<oslash> k. P t) = (\\<diamond> t I. P (t div k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<diamond> t I \\<oplus> k. P t) = (\\<diamond> t I. P (t + k)) &&&\n     (\\<diamond> t I \\<otimes> k. P t) = (\\<diamond> t I. P (t * k))) &&&\n    (\\<diamond> t I \\<oplus>- k. P t) =\n    (\\<diamond> t I \\<down>\\<ge> k. P (t - k)) &&&\n    (\\<diamond> t k \\<ominus> I. P t) =\n    (\\<diamond> t I \\<down>\\<le> k. P (k - t)) &&&\n    (\\<diamond> t I \\<oslash> k. P t) = (\\<diamond> t I. P (t div k))", "by (simp_all only: iEx_iAll_conv iT_arith_iAll_conv)"], ["", "text \\<open>Until and Since operators\\<close>"], ["", "lemma iT_Plus_iUntil_conv: \"(P t1. t1 \\<U> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<U> t2 I. Q (t2 + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<U> t2 I \\<oplus> k. Q t2) =\n    (P (t1 + k). t1 \\<U> t2 I. Q (t2 + k))", "by (simp add: iUntil_def iT_Plus_iAll_conv iT_Plus_iEx_conv iT_Plus_cut_less2)"], ["", "lemma iT_Mult_iUntil_conv: \"(P t1. t1 \\<U> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<U> t2 I. Q (t2 * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<U> t2 I \\<otimes> k. Q t2) =\n    (P (t1 * k). t1 \\<U> t2 I. Q (t2 * k))", "apply (case_tac \"I = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow>\n    (P t1. t1 \\<U> t2 I \\<otimes> k. Q t2) =\n    (P (t1 * k). t1 \\<U> t2 I. Q (t2 * k))\n 2. I \\<noteq> {} \\<Longrightarrow>\n    (P t1. t1 \\<U> t2 I \\<otimes> k. Q t2) =\n    (P (t1 * k). t1 \\<U> t2 I. Q (t2 * k))", "apply (simp add: iT_Mult_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (P t1. t1 \\<U> t2 I \\<otimes> k. Q t2) =\n    (P (t1 * k). t1 \\<U> t2 I. Q (t2 * k))", "apply (case_tac \"k = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; k = 0\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I \\<otimes> k. Q t2) =\n                      (P (t1 * k). t1 \\<U> t2 I. Q (t2 * k))\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I \\<otimes> k. Q t2) =\n                      (P (t1 * k). t1 \\<U> t2 I. Q (t2 * k))", "apply (force simp add: iT_Mult_0 iTILL_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I \\<otimes> k. Q t2) =\n                      (P (t1 * k). t1 \\<U> t2 I. Q (t2 * k))", "apply (simp add: iUntil_def iT_Mult_iAll_conv iT_Mult_iEx_conv iT_Mult_cut_less2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Plus_neg_iUntil_conv: \"(P t1. t1 \\<U> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<U> t2 (I \\<down>\\<ge> k). Q (t2 - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<U> t2 I \\<oplus>- k. Q t2) =\n    (P (t1 - k). t1 \\<U> t2 I \\<down>\\<ge> k. Q (t2 - k))", "apply (simp add: iUntil_def iT_Plus_neg_iAll_conv iT_Plus_neg_iEx_conv iT_Plus_neg_cut_less2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I \\<down>\\<ge> k.\n        Q (t - k) \\<and>\n        (\\<box> t I \\<down>< t \\<down>\\<ge> k. P (t - k))) =\n    (\\<diamond> t I \\<down>\\<ge> k.\n        Q (t - k) \\<and>\n        (\\<box> t' I \\<down>\\<ge> k \\<down>< t. P (t' - k)))", "apply (simp add: i_cut_commute_disj)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Minus_iUntil_conv: \"(P t1. t1 \\<U> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<S> t2 (I \\<down>\\<le> k). Q (k - t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<U> t2 k \\<ominus> I. Q t2) =\n    (P (k - t1). t1 \\<S> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (simp add: iUntil_def iSince_def iT_Minus_iAll_conv iT_Minus_iEx_conv iT_Minus_cut_less2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I \\<down>\\<le> k.\n        Q (k - t) \\<and>\n        (\\<box> t I \\<down>> t \\<down>\\<le> k. P (k - t))) =\n    (\\<diamond> t I \\<down>\\<le> k.\n        Q (k - t) \\<and>\n        (\\<box> t' I \\<down>\\<le> k \\<down>> t. P (k - t')))", "apply (simp add: i_cut_commute_disj)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Div_iUntil_conv: \"(P t1. t1 \\<U> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<U> t2 I. Q (t2 div k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<U> t2 I \\<oslash> k. Q t2) =\n    (P (t1 div k). t1 \\<U> t2 I. Q (t2 div k))", "apply (case_tac \"I = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow>\n    (P t1. t1 \\<U> t2 I \\<oslash> k. Q t2) =\n    (P (t1 div k). t1 \\<U> t2 I. Q (t2 div k))\n 2. I \\<noteq> {} \\<Longrightarrow>\n    (P t1. t1 \\<U> t2 I \\<oslash> k. Q t2) =\n    (P (t1 div k). t1 \\<U> t2 I. Q (t2 div k))", "apply (simp add: iT_Div_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (P t1. t1 \\<U> t2 I \\<oslash> k. Q t2) =\n    (P (t1 div k). t1 \\<U> t2 I. Q (t2 div k))", "apply (case_tac \"k = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; k = 0\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I \\<oslash> k. Q t2) =\n                      (P (t1 div k). t1 \\<U> t2 I. Q (t2 div k))\n 2. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I \\<oslash> k. Q t2) =\n                      (P (t1 div k). t1 \\<U> t2 I. Q (t2 div k))", "apply (force simp add: iT_Div_0 iTILL_0)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; k \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I \\<oslash> k. Q t2) =\n                      (P (t1 div k). t1 \\<U> t2 I. Q (t2 div k))", "apply (simp add: iUntil_def iT_Div_iAll_conv iT_Div_iEx_conv iT_Div_cut_less2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; 0 < k\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          (\\<box> t I \\<down>< (t - t mod k).\n                              P (t div k))) =\n                      (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          (\\<box> t' I \\<down>< t. P (t' div k)))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and>\n        (\\<box> t I \\<down>< (t - t mod k). P (t div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t' I \\<down>< t. P (t' div k))\n 2. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k)\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 2. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (subgoal_tac \"I \\<down>\\<ge> (t - t mod k) \\<noteq> {}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k)\\<rbrakk>\n       \\<Longrightarrow> I \\<down>\\<ge> (t - t mod k) \\<noteq> {}\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k)\\<rbrakk>\n       \\<Longrightarrow> I \\<down>\\<ge> (t - t mod k) \\<noteq> {}\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (simp add: cut_ge_not_empty_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>I. t - t mod k \\<le> x\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (rule_tac x=t in bexI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k)\\<rbrakk>\n       \\<Longrightarrow> t - t mod k \\<le> t\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply simp+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 2. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (case_tac \"t mod k = 0\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; t mod k = 0\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {};\n        t mod k \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (rule_tac t=t in iexI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; t mod k = 0\\<rbrakk>\n       \\<Longrightarrow> Q (t div k) \\<and>\n                         (\\<box> t' I \\<down>< t. P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; t mod k = 0\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {};\n        t mod k \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply simp+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>< t. P (t' div k))\n 2. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (rule_tac t=\"iMin (I \\<down>\\<ge> (t - t mod k))\" in iexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> Q (iMin (I \\<down>\\<ge> (t - t mod k)) div\n                            k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (subgoal_tac \"\n    t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) \\<and>\n    iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) \\<and>\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (iMin (I \\<down>\\<ge> (t - t mod k)) div\n                            k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> t - t mod k\n                         \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) \\<and>\n                         iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> t - t mod k\n                         \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) \\<and>\n                         iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) \\<and>\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (iMin (I \\<down>\\<ge> (t - t mod k)) div\n                            k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (rule conjI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> t - t mod k\n                         \\<le> iMin (I \\<down>\\<ge> (t - t mod k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) \\<and>\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (iMin (I \\<down>\\<ge> (t - t mod k)) div\n                            k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 4. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 5. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (blast intro: cut_ge_Min_greater)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) \\<and>\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (iMin (I \\<down>\\<ge> (t - t mod k)) div\n                            k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (simp add: iMin_le cut_ge_mem_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) \\<and>\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (iMin (I \\<down>\\<ge> (t - t mod k)) div\n                            k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply clarify"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (iMin (I \\<down>\\<ge> (t - t mod k)) div\n                            k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (rule_tac t=\"iMin (I \\<down>\\<ge> (t - t mod k)) div k\" and s=\"t div k\" in subst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> t div k = iMin (I \\<down>\\<ge> (t - t mod k)) div k\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (t div k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (rule order_antisym)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> t div k\n                         \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) div k\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) div k\n                         \\<le> t div k\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (t div k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 4. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 5. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (drule_tac m=\"t - t mod k\" and k=k in div_le_mono)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t;\n        (t - t mod k) div k\n        \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) div k\\<rbrakk>\n       \\<Longrightarrow> t div k\n                         \\<le> iMin (I \\<down>\\<ge> (t - t mod k)) div k\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) div k\n                         \\<le> t div k\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (t div k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 4. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 5. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (simp add: sub_mod_div_eq_div)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) div k\n                         \\<le> t div k\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (t div k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (rule div_le_mono, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t\\<rbrakk>\n       \\<Longrightarrow> Q (t div k) \\<and>\n                         (\\<box> t' I \\<down><\n                                    iMin (I \\<down>\\<ge> (t - t mod k)).\n                             P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (clarsimp, rename_tac t1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k))\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (subgoal_tac \"t1 \\<in> I \\<down>< (t - t mod k) \\<union> I \\<down>\\<ge> (t - t mod k)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k));\n        t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                 I \\<down>\\<ge> (t - t mod k)\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                                  I \\<down>\\<ge> (t - t mod k)\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k))\\<rbrakk>\n       \\<Longrightarrow> t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                                  I \\<down>\\<ge> (t - t mod k)\n 2. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k));\n        t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                 I \\<down>\\<ge> (t - t mod k)\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (simp add: cut_less_cut_ge_ident)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k));\n        t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                 I \\<down>\\<ge> (t - t mod k)\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (subgoal_tac \"t1 \\<notin> I \\<down>\\<ge> (t - t mod k)\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k));\n        t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                 I \\<down>\\<ge> (t - t mod k);\n        t1 \\<notin> I \\<down>\\<ge> (t - t mod k)\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k));\n        t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                 I \\<down>\\<ge> (t - t mod k)\\<rbrakk>\n       \\<Longrightarrow> t1 \\<notin> I \\<down>\\<ge> (t - t mod k)\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k));\n        t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                 I \\<down>\\<ge> (t - t mod k)\\<rbrakk>\n       \\<Longrightarrow> t1 \\<notin> I \\<down>\\<ge> (t - t mod k)\n 2. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k));\n        t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                 I \\<down>\\<ge> (t - t mod k);\n        t1 \\<notin> I \\<down>\\<ge> (t - t mod k)\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 4. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (blast dest: not_less_iMin)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k;\n        t - t mod k \\<le> iMin (I \\<down>\\<ge> (t - t mod k));\n        iMin (I \\<down>\\<ge> (t - t mod k)) \\<le> t; t1 \\<in> I;\n        t1 < iMin (I \\<down>\\<ge> (t - t mod k));\n        t1 \\<in> I \\<down>< (t - t mod k) \\<union>\n                 I \\<down>\\<ge> (t - t mod k);\n        t1 \\<notin> I \\<down>\\<ge> (t - t mod k)\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 3. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t I \\<down>< (t - t mod k). P (t div k);\n        I \\<down>\\<ge> (t - t mod k) \\<noteq> {}; 0 < t mod k\\<rbrakk>\n       \\<Longrightarrow> iMin (I \\<down>\\<ge> (t - t mod k)) \\<in> I\n 2. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (blast intro: subsetD[OF _ iMinI_ex2])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; 0 < k;\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>< t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t I \\<down>< (t - t mod k). P (t div k))", "apply (rule_tac t=t in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> Q (t div k) \\<and>\n                         (\\<box> t I \\<down>< (t - t mod k). P (t div k))\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> \\<box> t I \\<down>< (t - t mod k). P (t div k)\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply (rule_tac B=\"I \\<down>< t\" in iAll_subset)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> I \\<down>< (t - t mod k) \\<subseteq> I \\<down>< t\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> \\<box> t I \\<down>< t. P (t div k)\n 3. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply (simp add: cut_less_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> \\<box> t I \\<down>< t. P (t div k)\n 2. \\<And>t.\n       \\<lbrakk>I \\<noteq> {}; 0 < k; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>< t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Until and Since operators can be converted into each other through substraction of intervals from constants\\<close>"], ["", "lemma iUntil_iSince_conv: \"\n  \\<lbrakk> finite I; Max I \\<le> k \\<rbrakk> \\<Longrightarrow> \n  (P t1. t1 \\<U> t2 I. Q t2) = (P (k - t1). t1 \\<S> t2 (k \\<ominus> I). Q (k - t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (case_tac \"I = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I = {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (simp add: iT_Minus_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (frule le_trans[OF iMin_le_Max], assumption+)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (subgoal_tac \"Max (k \\<ominus> I) \\<le> k\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k\\<rbrakk>\n    \\<Longrightarrow> Max (k \\<ominus> I) \\<le> k", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k\\<rbrakk>\n    \\<Longrightarrow> Max (k \\<ominus> I) \\<le> k\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (simp add: iT_Minus_Max)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (subgoal_tac \"iMin (k \\<ominus> I) \\<le> k\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k; iMin (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> iMin (k \\<ominus> I) \\<le> k", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> iMin (k \\<ominus> I) \\<le> k\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k; iMin (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (rule order_trans[OF iMin_le_Max])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> finite (k \\<ominus> I)\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> k \\<ominus> I \\<noteq> {}\n 3. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> Max (k \\<ominus> I) \\<le> k\n 4. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k; iMin (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (simp add: iT_Minus_finite iT_Minus_empty_iff del: Max_le_iff)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k; iMin (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (rule_tac t=\"P t1. t1 \\<U> t2 I. Q t2\" and s=\"P t1. t1 \\<U> t2 (k \\<ominus> (k \\<ominus> I)). Q t2\" in subst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k; iMin (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 k \\<ominus> (k \\<ominus> I). Q t2) =\n                      (P t1. t1 \\<U> t2 I. Q t2)\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k; iMin (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 k \\<ominus> (k \\<ominus> I). Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (simp add: iT_Minus_Minus_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}; iMin I \\<le> k;\n     Max (k \\<ominus> I) \\<le> k; iMin (k \\<ominus> I) \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<U> t2 k \\<ominus> (k \\<ominus> I). Q t2) =\n                      (P (k - t1). t1 \\<S> t2 k \\<ominus> I. Q (k - t2))", "apply (simp add: iT_Minus_iUntil_conv cut_le_Max_all iT_Minus_finite)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iSince_iUntil_conv: \"\n  \\<lbrakk> finite I; Max I \\<le> k \\<rbrakk> \\<Longrightarrow> \n  (P t1. t1 \\<S> t2 I. Q t2) = (P (k - t1). t1 \\<U> t2 (k \\<ominus> I). Q (k - t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<U> t2 k \\<ominus> I. Q (k - t2))", "apply (case_tac \"I = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I = {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<U> t2 k \\<ominus> I. Q (k - t2))\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<U> t2 k \\<ominus> I. Q (k - t2))", "apply (simp add: iT_Minus_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 I. Q t2) =\n                      (P (k - t1). t1 \\<U> t2 k \\<ominus> I. Q (k - t2))", "apply (simp (no_asm_simp) add: iT_Minus_iUntil_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 I. Q t2) =\n                      (P (k - (k - t1)). t1 \\<S> t2 I \\<down>\\<le> k.\n                       Q (k - (k - t2)))", "apply (simp (no_asm_simp) add: cut_le_Max_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 I. Q t2) =\n                      (P (k - (k - t1)). t1 \\<S> t2 I. Q (k - (k - t2)))", "apply (unfold iSince_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q t \\<and> (\\<box> t' I \\<down>> t. P t')) =\n                      (\\<diamond> t I.\n                          Q (k - (k - t)) \\<and>\n                          (\\<box> t' I \\<down>> t. P (k - (k - t'))))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {};\n     \\<diamond> t I. Q t \\<and> (\\<box> t' I \\<down>> t. P t')\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (k - (k - t)) \\<and>\n                         (\\<box> t' I \\<down>> t. P (k - (k - t')))\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {};\n     \\<diamond> t I.\n        Q (k - (k - t)) \\<and>\n        (\\<box> t' I \\<down>> t. P (k - (k - t')))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (k - (k - t)) \\<and>\n                            (\\<box> t' I \\<down>> t. P (k - (k - t')))\n 2. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {};\n     \\<diamond> t I.\n        Q (k - (k - t)) \\<and>\n        (\\<box> t' I \\<down>> t. P (k - (k - t')))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply (rule_tac t=t in iexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> Q (k - (k - t)) \\<and>\n                         (\\<box> t' I \\<down>> t. P (k - (k - t')))\n 2. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I\n 3. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {};\n     \\<diamond> t I.\n        Q (k - (k - t)) \\<and>\n        (\\<box> t' I \\<down>> t. P (k - (k - t')))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply (frule_tac x=t in bspec, assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P t'; t \\<le> k\\<rbrakk>\n       \\<Longrightarrow> Q (k - (k - t)) \\<and>\n                         (\\<box> t' I \\<down>> t. P (k - (k - t')))\n 2. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I\n 3. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {};\n     \\<diamond> t I.\n        Q (k - (k - t)) \\<and>\n        (\\<box> t' I \\<down>> t. P (k - (k - t')))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply (clarsimp, rename_tac t1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P t'; t1 \\<in> I;\n        t < t1\\<rbrakk>\n       \\<Longrightarrow> P t1\n 2. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I\n 3. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {};\n     \\<diamond> t I.\n        Q (k - (k - t)) \\<and>\n        (\\<box> t' I \\<down>> t. P (k - (k - t')))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply (drule_tac t=t1 in ispec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; t1 \\<in> I; t < t1\\<rbrakk>\n       \\<Longrightarrow> t1 \\<in> I \\<down>> t\n 2. \\<And>t t1.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; t1 \\<in> I; t < t1; P t1\\<rbrakk>\n       \\<Longrightarrow> P t1\n 3. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I\n 4. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {};\n     \\<diamond> t I.\n        Q (k - (k - t)) \\<and>\n        (\\<box> t' I \\<down>> t. P (k - (k - t')))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply (simp add: cut_greater_mem_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; t1 \\<in> I; t < t1; P t1\\<rbrakk>\n       \\<Longrightarrow> P t1\n 2. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P t'\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I\n 3. \\<lbrakk>finite I; Max I \\<le> k; I \\<noteq> {};\n     \\<diamond> t I.\n        Q (k - (k - t)) \\<and>\n        (\\<box> t' I \\<down>> t. P (k - (k - t')))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n     \\<diamond> t I.\n        Q (k - (k - t)) \\<and>\n        (\\<box> t' I \\<down>> t. P (k - (k - t')))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P (k - (k - t'))\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q t \\<and> (\\<box> t' I \\<down>> t. P t')", "apply (rule_tac t=t in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P (k - (k - t'))\\<rbrakk>\n       \\<Longrightarrow> Q t \\<and> (\\<box> t' I \\<down>> t. P t')\n 2. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P (k - (k - t'))\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply (clarsimp, rename_tac t')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P (k - (k - t'));\n        t' \\<in> I; t < t'\\<rbrakk>\n       \\<Longrightarrow> P t'\n 2. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P (k - (k - t'))\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply (drule_tac t=t' in ispec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; t' \\<in> I; t < t'\\<rbrakk>\n       \\<Longrightarrow> t' \\<in> I \\<down>> t\n 2. \\<And>t t'.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; t' \\<in> I; t < t'; P (k - (k - t'))\\<rbrakk>\n       \\<Longrightarrow> P t'\n 3. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P (k - (k - t'))\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply (simp add: cut_greater_mem_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; t' \\<in> I; t < t'; P (k - (k - t'))\\<rbrakk>\n       \\<Longrightarrow> P t'\n 2. \\<And>t.\n       \\<lbrakk>finite I; \\<forall>a\\<in>I. a \\<le> k; I \\<noteq> {};\n        t \\<in> I; Q t; \\<box> t' I \\<down>> t. P (k - (k - t'))\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Plus_iSince_conv: \"(P t1. t1 \\<S> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<S> t2 I. Q (t2 + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<S> t2 I \\<oplus> k. Q t2) =\n    (P (t1 + k). t1 \\<S> t2 I. Q (t2 + k))", "by (simp add: iSince_def iT_Plus_iAll_conv iT_Plus_iEx_conv iT_Plus_cut_greater2)"], ["", "lemma iT_Mult_iSince_conv: \"0 < k \\<Longrightarrow> (P t1. t1 \\<S> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<S> t2 I. Q (t2 * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    (P t1. t1 \\<S> t2 I \\<otimes> k. Q t2) =\n    (P (t1 * k). t1 \\<S> t2 I. Q (t2 * k))", "by (simp add: iSince_def iT_Mult_iAll_conv iT_Mult_iEx_conv iT_Mult_cut_greater2)"], ["", "lemma iT_Plus_neg_iSince_conv: \"(P t1. t1 \\<S> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<S> t2 (I \\<down>\\<ge> k). Q (t2 - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<S> t2 I \\<oplus>- k. Q t2) =\n    (P (t1 - k). t1 \\<S> t2 I \\<down>\\<ge> k. Q (t2 - k))", "apply (simp add: iSince_def iT_Plus_neg_iAll_conv iT_Plus_neg_iEx_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<diamond> t I \\<down>\\<ge> k.\n        Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P) =\n    (\\<diamond> t I \\<down>\\<ge> k.\n        Q (t - k) \\<and>\n        (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       iAll ((I \\<oplus>- k) \\<down>> (t - k)) P \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k))\n 2. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)) \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        iAll ((I \\<oplus>- k) \\<down>> (t - k)) P\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I \\<down>\\<ge> k.\n                            Q (t - k) \\<and>\n                            (\\<box> t' I \\<down>\\<ge> k \\<down>> t.\n                                P (t' - k))\n 2. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)) \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply (simp add: iT_Plus_neg_cut_greater2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        iAll (I \\<down>> t \\<oplus>- k) P\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I \\<down>\\<ge> k.\n                            Q (t - k) \\<and>\n                            (\\<box> t' I \\<down>\\<ge> k \\<down>> t.\n                                P (t' - k))\n 2. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)) \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply (rule_tac t=t in iexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        iAll (I \\<down>> t \\<oplus>- k) P\\<rbrakk>\n       \\<Longrightarrow> Q (t - k) \\<and>\n                         (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k))\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        iAll (I \\<down>> t \\<oplus>- k) P\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k\n 3. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)) \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply (clarsimp, rename_tac t')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        iAll (I \\<down>> t \\<oplus>- k) P; t < t'; t' \\<in> I\\<rbrakk>\n       \\<Longrightarrow> P (t' - k)\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        iAll (I \\<down>> t \\<oplus>- k) P\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k\n 3. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)) \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply (drule_tac t=\"t' - k\" in ispec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k); t < t'; t' \\<in> I\\<rbrakk>\n       \\<Longrightarrow> t' - k \\<in> I \\<down>> t \\<oplus>- k\n 2. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k); t < t'; t' \\<in> I;\n        P (t' - k)\\<rbrakk>\n       \\<Longrightarrow> P (t' - k)\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        iAll (I \\<down>> t \\<oplus>- k) P\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k\n 4. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)) \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply (simp add: iT_Plus_neg_mem_iff2 cut_greater_mem_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k); t < t'; t' \\<in> I;\n        P (t' - k)\\<rbrakk>\n       \\<Longrightarrow> P (t' - k)\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        iAll (I \\<down>> t \\<oplus>- k) P\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k\n 3. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)) \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        iAll (I \\<down>> t \\<oplus>- k) P\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k\n 2. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)) \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and>\n       (\\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)) \\<Longrightarrow>\n    \\<diamond> t I \\<down>\\<ge> k.\n       Q (t - k) \\<and> iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        \\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I \\<down>\\<ge> k.\n                            Q (t - k) \\<and>\n                            iAll ((I \\<oplus>- k) \\<down>> (t - k)) P", "apply (rule_tac t=t in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        \\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)\\<rbrakk>\n       \\<Longrightarrow> Q (t - k) \\<and>\n                         iAll ((I \\<oplus>- k) \\<down>> (t - k)) P\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        \\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k", "apply (clarsimp, rename_tac t')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        \\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k);\n        t' \\<in> I \\<oplus>- k; t - k < t'\\<rbrakk>\n       \\<Longrightarrow> P t'\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        \\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k", "apply (drule_tac t=\"t' + k\" in ispec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k); t' \\<in> I \\<oplus>- k;\n        t - k < t'\\<rbrakk>\n       \\<Longrightarrow> t' + k \\<in> I \\<down>\\<ge> k \\<down>> t\n 2. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k); t' \\<in> I \\<oplus>- k;\n        t - k < t'; P (t' + k - k)\\<rbrakk>\n       \\<Longrightarrow> P t'\n 3. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        \\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k", "apply (simp add: iT_Plus_neg_mem_iff i_cut_mem_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t t'.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k); t' \\<in> I \\<oplus>- k;\n        t - k < t'; P (t' + k - k)\\<rbrakk>\n       \\<Longrightarrow> P t'\n 2. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        \\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> I; k \\<le> t; Q (t - k);\n        \\<box> t' I \\<down>\\<ge> k \\<down>> t. P (t' - k)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I \\<down>\\<ge> k", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Minus_iSince_conv: \"\n  (P t1. t1 \\<S> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<U> t2 (I \\<down>\\<le> k). Q (k - t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<S> t2 k \\<ominus> I. Q t2) =\n    (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (case_tac \"I = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. I = {} \\<Longrightarrow>\n    (P t1. t1 \\<S> t2 k \\<ominus> I. Q t2) =\n    (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))\n 2. I \\<noteq> {} \\<Longrightarrow>\n    (P t1. t1 \\<S> t2 k \\<ominus> I. Q t2) =\n    (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (simp add: iT_Minus_empty cut_le_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {} \\<Longrightarrow>\n    (P t1. t1 \\<S> t2 k \\<ominus> I. Q t2) =\n    (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (case_tac \"I \\<down>\\<le> k = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k = {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 k \\<ominus> I. Q t2) =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))\n 2. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 k \\<ominus> I. Q t2) =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (simp add: iT_Minus_image_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 k \\<ominus> I. Q t2) =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (subst iT_Minus_cut_eq[OF order_refl, symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> iSince (k \\<ominus> I \\<down>\\<le> k) P Q =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (subst iSince_iUntil_conv[where k=k])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> finite (k \\<ominus> I \\<down>\\<le> k)\n 2. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Max (k \\<ominus> I \\<down>\\<le> k) \\<le> k\n 3. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P (k - t1).\n                       t1 \\<U> t2 k \\<ominus>\n                                  (k \\<ominus> I \\<down>\\<le> k).\n                       Q (k - t2)) =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (rule iT_Minus_finite)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> Max (k \\<ominus> I \\<down>\\<le> k) \\<le> k\n 2. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P (k - t1).\n                       t1 \\<U> t2 k \\<ominus>\n                                  (k \\<ominus> I \\<down>\\<le> k).\n                       Q (k - t2)) =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (subst iT_Minus_Max)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> I \\<down>\\<le> k \\<noteq> {}\n 2. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> iMin (I \\<down>\\<le> k) \\<le> k\n 3. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> k - iMin (I \\<down>\\<le> k) \\<le> k\n 4. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P (k - t1).\n                       t1 \\<U> t2 k \\<ominus>\n                                  (k \\<ominus> I \\<down>\\<le> k).\n                       Q (k - t2)) =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> iMin (I \\<down>\\<le> k) \\<le> k\n 2. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> k - iMin (I \\<down>\\<le> k) \\<le> k\n 3. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P (k - t1).\n                       t1 \\<U> t2 k \\<ominus>\n                                  (k \\<ominus> I \\<down>\\<le> k).\n                       Q (k - t2)) =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (rule cut_le_bound, rule iMinI_ex2, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> k - iMin (I \\<down>\\<le> k) \\<le> k\n 2. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P (k - t1).\n                       t1 \\<U> t2 k \\<ominus>\n                                  (k \\<ominus> I \\<down>\\<le> k).\n                       Q (k - t2)) =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I \\<noteq> {}; I \\<down>\\<le> k \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P (k - t1).\n                       t1 \\<U> t2 k \\<ominus>\n                                  (k \\<ominus> I \\<down>\\<le> k).\n                       Q (k - t2)) =\n                      (P (k - t1). t1 \\<U> t2 I \\<down>\\<le> k. Q (k - t2))", "apply (simp add: iT_Minus_Minus_cut_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma iT_Div_iSince_conv: \"\n  0 < k \\<Longrightarrow> (P t1. t1 \\<S> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<S> t2 I. Q (t2 div k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    (P t1. t1 \\<S> t2 I \\<oslash> k. Q t2) =\n    (P (t1 div k). t1 \\<S> t2 I. Q (t2 div k))", "apply (case_tac \"I = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < k; I = {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 I \\<oslash> k. Q t2) =\n                      (P (t1 div k). t1 \\<S> t2 I. Q (t2 div k))\n 2. \\<lbrakk>0 < k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 I \\<oslash> k. Q t2) =\n                      (P (t1 div k). t1 \\<S> t2 I. Q (t2 div k))", "apply (simp add: iT_Div_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (P t1. t1 \\<S> t2 I \\<oslash> k. Q t2) =\n                      (P (t1 div k). t1 \\<S> t2 I. Q (t2 div k))", "apply (simp add: iSince_def iT_Div_iAll_conv iT_Div_iEx_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          iAll ((I \\<oslash> k) \\<down>> (t div k)) P) =\n                      (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          (\\<box> t' I \\<down>> t. P (t' div k)))", "apply (simp add: iT_Div_cut_greater)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          iAll\n                           (I \\<down>> (t div k * k + k - Suc 0) \\<oslash>\n                            k)\n                           P) =\n                      (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          (\\<box> t' I \\<down>> t. P (t' div k)))", "apply (subgoal_tac \"\\<forall>t. t \\<le> t div k * k + (k - Suc 0)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          iAll\n                           (I \\<down>> (t div k * k + k - Suc 0) \\<oslash>\n                            k)\n                           P) =\n                      (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          (\\<box> t' I \\<down>> t. P (t' div k)))\n 2. \\<lbrakk>0 < k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>t. t \\<le> t div k * k + (k - Suc 0)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < k; I \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<forall>t. t \\<le> t div k * k + (k - Suc 0)\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          iAll\n                           (I \\<down>> (t div k * k + k - Suc 0) \\<oslash>\n                            k)\n                           P) =\n                      (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          (\\<box> t' I \\<down>> t. P (t' div k)))", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> t \\<le> t div k * k + k - Suc 0\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          iAll\n                           (I \\<down>> (t div k * k + k - Suc 0) \\<oslash>\n                            k)\n                           P) =\n                      (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          (\\<box> t' I \\<down>> t. P (t' div k)))", "apply (simp add: div_mult_cancel add.commute[of _ k])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> t \\<le> k + t - Suc (t mod k)\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          iAll\n                           (I \\<down>> (t div k * k + k - Suc 0) \\<oslash>\n                            k)\n                           P) =\n                      (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          (\\<box> t' I \\<down>> t. P (t' div k)))", "apply (simp add: le_add_diff Suc_mod_le_divisor)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n    \\<Longrightarrow> (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          iAll\n                           (I \\<down>> (t div k * k + k - Suc 0) \\<oslash>\n                            k)\n                           P) =\n                      (\\<diamond> t I.\n                          Q (t div k) \\<and>\n                          (\\<box> t' I \\<down>> t. P (t' div k)))", "apply (rule iffI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and>\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {};\n        \\<forall>t. t \\<le> t div k * k + k - Suc 0; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (drule_tac x=t in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (subgoal_tac \"I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq>\n                         {}\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq>\n                         {}\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (simp add: cut_le_not_empty_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>I. x \\<le> t div k * k + k - Suc 0\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (rule_tac x=t in bexI, assumption+)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (subgoal_tac \"t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> t \\<le> Max (I \\<down>\\<le>\n(t div k * k + (k - Suc 0)))\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> t \\<le> Max (I \\<down>\\<le>\n(t div k * k + (k - Suc 0)))\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (simp add: nat_cut_le_finite cut_le_mem_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (subgoal_tac \"Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) \\<le> t div k * k + (k - Suc 0)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<le> t div k * k + (k - Suc 0)\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<le> t div k * k + (k - Suc 0)\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (simp add: nat_cut_le_finite cut_le_mem_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (subgoal_tac \"Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k = t div k\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le>\n                              (t div k * k + (k - Suc 0))) div\n                         k =\n                         t div k\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le>\n                              (t div k * k + (k - Suc 0))) div\n                         k =\n                         t div k\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (rule order_antisym)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le>\n                              (t div k * k + (k - Suc 0))) div\n                         k\n                         \\<le> t div k\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> t div k\n                         \\<le> Max (I \\<down>\\<le>\n                                    (t div k * k + (k - Suc 0))) div\n                               k\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (rule_tac t=\"t div k\" and s=\"(t div k * k + (k - Suc 0)) div k\" in subst)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> (t div k * k + (k - Suc 0)) div k = t div k\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le>\n                              ((t div k * k + (k - Suc 0)) div k * k +\n                               (k - Suc 0))) div\n                         k\n                         \\<le> (t div k * k + (k - Suc 0)) div k\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> t div k\n                         \\<le> Max (I \\<down>\\<le>\n                                    (t div k * k + (k - Suc 0))) div\n                               k\n 4. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 5. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (simp only: div_add1_eq1_mod_0_left[OF mod_mult_self2_is_0])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> t div k * k div k + (k - Suc 0) div k = t div k\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le>\n                              ((t div k * k + (k - Suc 0)) div k * k +\n                               (k - Suc 0))) div\n                         k\n                         \\<le> (t div k * k + (k - Suc 0)) div k\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> t div k\n                         \\<le> Max (I \\<down>\\<le>\n                                    (t div k * k + (k - Suc 0))) div\n                               k\n 4. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 5. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le>\n                              ((t div k * k + (k - Suc 0)) div k * k +\n                               (k - Suc 0))) div\n                         k\n                         \\<le> (t div k * k + (k - Suc 0)) div k\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> t div k\n                         \\<le> Max (I \\<down>\\<le>\n                                    (t div k * k + (k - Suc 0))) div\n                               k\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (rule div_le_mono)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le>\n                              ((t div k * k + (k - Suc 0)) div k * k +\n                               (k - Suc 0)))\n                         \\<le> t div k * k + (k - Suc 0)\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> t div k\n                         \\<le> Max (I \\<down>\\<le>\n                                    (t div k * k + (k - Suc 0))) div\n                               k\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (simp only: div_add1_eq1_mod_0_left[OF mod_mult_self2_is_0])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le>\n                              ((t div k * k div k + (k - Suc 0) div k) * k +\n                               (k - Suc 0)))\n                         \\<le> t div k * k + (k - Suc 0)\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> t div k\n                         \\<le> Max (I \\<down>\\<le>\n                                    (t div k * k + (k - Suc 0))) div\n                               k\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> t div k\n                         \\<le> Max (I \\<down>\\<le>\n                                    (t div k * k + (k - Suc 0))) div\n                               k\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (rule div_le_mono, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            (\\<box> t' I \\<down>> t. P (t' div k))\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (rule_tac t=\"Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\" in iexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Q (Max (I \\<down>\\<le>\n                                 (t div k * k + (k - Suc 0))) div\n                            k) \\<and>\n                         (\\<box> t' I \\<down>>\n                                    Max (I \\<down>\\<le>\n   (t div k * k + (k - Suc 0))).\n                             P (t' div k))\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (clarsimp, rename_tac t1)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (subgoal_tac \"t1 \\<in> I\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1\\<rbrakk>\n       \\<Longrightarrow> t1 \\<in> I\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1\\<rbrakk>\n       \\<Longrightarrow> t1 \\<in> I\n 2. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (subgoal_tac \"t div k * k + (k - Suc 0) < t1\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I; t div k * k + (k - Suc 0) < t1\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I\\<rbrakk>\n       \\<Longrightarrow> t div k * k + (k - Suc 0) < t1\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I\\<rbrakk>\n       \\<Longrightarrow> t div k * k + (k - Suc 0) < t1\n 2. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I; t div k * k + (k - Suc 0) < t1\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (rule ccontr)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I; \\<not> t div k * k + (k - Suc 0) < t1\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I; t div k * k + (k - Suc 0) < t1\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (drule not_greater_Max[OF nat_cut_le_finite])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; t1 \\<in> I; \\<not> t div k * k + (k - Suc 0) < t1;\n        t1 \\<notin> I \\<down>\\<le> (t div k * k + k - Suc 0)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I; t div k * k + (k - Suc 0) < t1\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (simp add: i_cut_mem_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I; t div k * k + (k - Suc 0) < t1\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (drule_tac t=\"t1 div k\" in ispec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I; t div k * k + (k - Suc 0) < t1\\<rbrakk>\n       \\<Longrightarrow> t1 div k\n                         \\<in> I \\<down>>\n                               (t div k * k + k - Suc 0) \\<oslash>\n                               k\n 2. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I; t div k * k + (k - Suc 0) < t1; P (t1 div k)\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 4. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (simp add: iT_Div_imp_mem cut_greater_mem_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t t1.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        I \\<down>\\<le> (t div k * k + k - Suc 0) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + k - Suc 0));\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0))\n        \\<le> t div k * k + k - Suc 0;\n        Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) div k = t div k;\n        t1 \\<in> I; Max (I \\<down>\\<le> (t div k * k + k - Suc 0)) < t1;\n        t1 \\<in> I; t div k * k + (k - Suc 0) < t1; P (t1 div k)\\<rbrakk>\n       \\<Longrightarrow> P (t1 div k)\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 3. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        iAll (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k) P;\n        t \\<le> t div k * k + k - Suc 0;\n        I \\<down>\\<le> (t div k * k + (k - Suc 0)) \\<noteq> {};\n        t \\<le> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)));\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n        \\<le> t div k * k + (k - Suc 0);\n        Max (I \\<down>\\<le> (t div k * k + (k - Suc 0))) div k =\n        t div k\\<rbrakk>\n       \\<Longrightarrow> Max (I \\<down>\\<le> (t div k * k + (k - Suc 0)))\n                         \\<in> I\n 2. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (blast intro: subsetD[OF _ Max_in[OF nat_cut_le_finite]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < k; I \\<noteq> {};\n     \\<forall>t. t \\<le> t div k * k + (k - Suc 0);\n     \\<diamond> t I.\n        Q (t div k) \\<and> (\\<box> t' I \\<down>> t. P (t' div k))\\<rbrakk>\n    \\<Longrightarrow> \\<diamond> t I.\n                         Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P", "apply (clarsimp, rename_tac t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {};\n        \\<forall>t. t \\<le> t div k * k + k - Suc 0; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>> t. P (t' div k)\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            iAll\n                             (I \\<down>> (t div k * k + k - Suc 0) \\<oslash>\n                              k)\n                             P", "apply (drule_tac x=t in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>> t. P (t' div k);\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> \\<diamond> t I.\n                            Q (t div k) \\<and>\n                            iAll\n                             (I \\<down>> (t div k * k + k - Suc 0) \\<oslash>\n                              k)\n                             P", "apply (rule_tac t=t in iexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>> t. P (t' div k);\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> Q (t div k) \\<and>\n                         iAll\n                          (I \\<down>> (t div k * k + k - Suc 0) \\<oslash> k)\n                          P\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>> t. P (t' div k);\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply (clarsimp simp: iT_Div_mem_iff, rename_tac t1 t2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t1 \\<in> I; Q (t1 div k);\n        \\<box> t' I \\<down>> t1. P (t' div k);\n        t1 \\<le> t1 div k * k + k - Suc 0; t2 \\<in> I;\n        t1 div k * k + k - Suc 0 < t2\\<rbrakk>\n       \\<Longrightarrow> P (t2 div k)\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>> t. P (t' div k);\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply (drule_tac t=t2 in ispec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t1 \\<in> I; Q (t1 div k);\n        t1 \\<le> t1 div k * k + k - Suc 0; t2 \\<in> I;\n        t1 div k * k + k - Suc 0 < t2\\<rbrakk>\n       \\<Longrightarrow> t2 \\<in> I \\<down>> t1\n 2. \\<And>t1 t2.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t1 \\<in> I; Q (t1 div k);\n        t1 \\<le> t1 div k * k + k - Suc 0; t2 \\<in> I;\n        t1 div k * k + k - Suc 0 < t2; P (t2 div k)\\<rbrakk>\n       \\<Longrightarrow> P (t2 div k)\n 3. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>> t. P (t' div k);\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply (simp add: cut_greater_mem_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>t1 t2.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t1 \\<in> I; Q (t1 div k);\n        t1 \\<le> t1 div k * k + k - Suc 0; t2 \\<in> I;\n        t1 div k * k + k - Suc 0 < t2; P (t2 div k)\\<rbrakk>\n       \\<Longrightarrow> P (t2 div k)\n 2. \\<And>t.\n       \\<lbrakk>0 < k; I \\<noteq> {}; t \\<in> I; Q (t div k);\n        \\<box> t' I \\<down>> t. P (t' div k);\n        t \\<le> t div k * k + k - Suc 0\\<rbrakk>\n       \\<Longrightarrow> t \\<in> I", "apply simp+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>Weak Until and Weak Since operators\\<close>"], ["", "lemma iT_Plus_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<W> t2 I. Q (t2 + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<W> t2 I \\<oplus> k. Q t2) =\n    (P (t1 + k). t1 \\<W> t2 I. Q (t2 + k))", "by (simp add: iWeakUntil_iUntil_conv iT_Plus_iUntil_conv iT_Plus_iAll_conv)"], ["", "lemma iT_Mult_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<W> t2 I. Q (t2 * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<W> t2 I \\<otimes> k. Q t2) =\n    (P (t1 * k). t1 \\<W> t2 I. Q (t2 * k))", "by (simp add: iWeakUntil_iUntil_conv iT_Mult_iUntil_conv iT_Mult_iAll_conv)"], ["", "lemma iT_Plus_neg_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<W> t2 (I \\<down>\\<ge> k). Q (t2 - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<W> t2 I \\<oplus>- k. Q t2) =\n    (P (t1 - k). t1 \\<W> t2 I \\<down>\\<ge> k. Q (t2 - k))", "by (simp add: iWeakUntil_iUntil_conv iT_Plus_neg_iUntil_conv iT_Plus_neg_iAll_conv)"], ["", "lemma iT_Minus_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<B> t2 (I \\<down>\\<le> k). Q (k - t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<W> t2 k \\<ominus> I. Q t2) =\n    (P (k - t1). t1 \\<B> t2 I \\<down>\\<le> k. Q (k - t2))", "by (simp add: iWeakUntil_iUntil_conv iWeakSince_iSince_conv iT_Minus_iUntil_conv iT_Minus_iAll_conv)"], ["", "lemma iT_Div_iWeakUntil_conv: \"(P t1. t1 \\<W> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<W> t2 I. Q (t2 div k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<W> t2 I \\<oslash> k. Q t2) =\n    (P (t1 div k). t1 \\<W> t2 I. Q (t2 div k))", "by (simp add: iWeakUntil_iUntil_conv iT_Div_iUntil_conv iT_Div_iAll_conv)"], ["", "lemma iT_Plus_iWeakSince_conv: \"(P t1. t1 \\<B> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<B> t2 I. Q (t2 + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<B> t2 I \\<oplus> k. Q t2) =\n    (P (t1 + k). t1 \\<B> t2 I. Q (t2 + k))", "by (simp add: iWeakSince_iSince_conv iT_Plus_iSince_conv iT_Plus_iAll_conv)"], ["", "lemma iT_Mult_iWeakSince_conv: \"0 < k \\<Longrightarrow> (P t1. t1 \\<B> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<B> t2 I. Q (t2 * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    (P t1. t1 \\<B> t2 I \\<otimes> k. Q t2) =\n    (P (t1 * k). t1 \\<B> t2 I. Q (t2 * k))", "by (simp add: iWeakSince_iSince_conv iT_Mult_iSince_conv iT_Mult_iAll_conv)"], ["", "lemma iT_Plus_neg_iWeakSince_conv: \"(P t1. t1 \\<B> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<B> t2 (I \\<down>\\<ge> k). Q (t2 - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<B> t2 I \\<oplus>- k. Q t2) =\n    (P (t1 - k). t1 \\<B> t2 I \\<down>\\<ge> k. Q (t2 - k))", "by (simp add: iWeakSince_iSince_conv iT_Plus_neg_iSince_conv iT_Plus_neg_iAll_conv)"], ["", "lemma iT_Minus_iWeakSince_conv: \"\n  (P t1. t1 \\<B> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<W> t2 (I \\<down>\\<le> k). Q (k - t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<B> t2 k \\<ominus> I. Q t2) =\n    (P (k - t1). t1 \\<W> t2 I \\<down>\\<le> k. Q (k - t2))", "by (simp add: iWeakSince_iSince_conv iT_Minus_iSince_conv iT_Minus_iAll_conv iWeakUntil_iUntil_conv)"], ["", "lemma iT_Div_iWeakSince_conv: \"\n  0 < k \\<Longrightarrow> (P t1. t1 \\<B> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<B> t2 I. Q (t2 div k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    (P t1. t1 \\<B> t2 I \\<oslash> k. Q t2) =\n    (P (t1 div k). t1 \\<B> t2 I. Q (t2 div k))", "by (simp add: iWeakSince_iSince_conv iT_Div_iSince_conv iT_Div_iAll_conv)"], ["", "text \\<open>Release and Trigger operators\\<close>"], ["", "lemma iT_Plus_iRelease_conv: \"(P t1. t1 \\<R> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<R> t2 I. Q (t2 + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<R> t2 I \\<oplus> k. Q t2) =\n    (P (t1 + k). t1 \\<R> t2 I. Q (t2 + k))", "by (simp add: iRelease_iWeakUntil_conv iT_Plus_iWeakUntil_conv)"], ["", "lemma iT_Mult_iRelease_conv: \"(P t1. t1 \\<R> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<R> t2 I. Q (t2 * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<R> t2 I \\<otimes> k. Q t2) =\n    (P (t1 * k). t1 \\<R> t2 I. Q (t2 * k))", "by (simp add: iRelease_iWeakUntil_conv iT_Mult_iWeakUntil_conv)"], ["", "lemma iT_Plus_neg_iRelease_conv: \"(P t1. t1 \\<R> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<R> t2 (I \\<down>\\<ge> k). Q (t2 - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<R> t2 I \\<oplus>- k. Q t2) =\n    (P (t1 - k). t1 \\<R> t2 I \\<down>\\<ge> k. Q (t2 - k))", "by (simp add: iRelease_iWeakUntil_conv iT_Plus_neg_iWeakUntil_conv)"], ["", "lemma iT_Minus_iRelease_conv: \"(P t1. t1 \\<R> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<T> t2 (I \\<down>\\<le> k). Q (k - t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<R> t2 k \\<ominus> I. Q t2) =\n    (P (k - t1). t1 \\<T> t2 I \\<down>\\<le> k. Q (k - t2))", "by (simp add: iRelease_iWeakUntil_conv iT_Minus_iWeakUntil_conv \n  iTrigger_iSince_conv iWeakSince_iSince_conv disj_commute)"], ["", "lemma iT_Div_iRelease_conv: \"(P t1. t1 \\<R> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<R> t2 I. Q (t2 div k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<R> t2 I \\<oslash> k. Q t2) =\n    (P (t1 div k). t1 \\<R> t2 I. Q (t2 div k))", "by (simp add: iRelease_iWeakUntil_conv iT_Div_iWeakUntil_conv)"], ["", "lemma iT_Plus_iTrigger_conv: \"(P t1. t1 \\<T> t2 (I \\<oplus> k). Q t2) = (P (t1 + k). t1 \\<T> t2 I. Q (t2 + k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<T> t2 I \\<oplus> k. Q t2) =\n    (P (t1 + k). t1 \\<T> t2 I. Q (t2 + k))", "by (simp add: iTrigger_iWeakSince_conv iT_Plus_iWeakSince_conv)"], ["", "lemma iT_Mult_iTrigger_conv: \"0 < k \\<Longrightarrow> (P t1. t1 \\<T> t2 (I \\<otimes> k). Q t2) = (P (t1 * k). t1 \\<T> t2 I. Q (t2 * k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    (P t1. t1 \\<T> t2 I \\<otimes> k. Q t2) =\n    (P (t1 * k). t1 \\<T> t2 I. Q (t2 * k))", "by (simp add: iTrigger_iWeakSince_conv iT_Mult_iWeakSince_conv)"], ["", "lemma iT_Plus_neg_iTrigger_conv: \"(P t1. t1 \\<T> t2 (I \\<oplus>- k). Q t2) = (P (t1 - k). t1 \\<T> t2 (I \\<down>\\<ge> k). Q (t2 - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<T> t2 I \\<oplus>- k. Q t2) =\n    (P (t1 - k). t1 \\<T> t2 I \\<down>\\<ge> k. Q (t2 - k))", "by (simp add: iTrigger_iWeakSince_conv iT_Plus_neg_iWeakSince_conv)"], ["", "lemma iT_Minus_iTrigger_conv: \"\n  (P t1. t1 \\<T> t2 (k \\<ominus> I). Q t2) = (P (k - t1). t1 \\<R> t2 (I \\<down>\\<le> k). Q (k - t2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P t1. t1 \\<T> t2 k \\<ominus> I. Q t2) =\n    (P (k - t1). t1 \\<R> t2 I \\<down>\\<le> k. Q (k - t2))", "by (fastforce simp add: iTrigger_iWeakSince_conv iT_Minus_iWeakSince_conv iRelease_iUntil_conv iWeakUntil_iUntil_conv)"], ["", "lemma iT_Div_iTrigger_conv: \"\n  0 < k \\<Longrightarrow> (P t1. t1 \\<T> t2 (I \\<oslash> k). Q t2) = (P (t1 div k). t1 \\<T> t2 I. Q (t2 div k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < k \\<Longrightarrow>\n    (P t1. t1 \\<T> t2 I \\<oslash> k. Q t2) =\n    (P (t1 div k). t1 \\<T> t2 I. Q (t2 div k))", "by (simp add: iTrigger_iWeakSince_conv iT_Div_iWeakSince_conv)"], ["", "end"]]}