{"file_name": "/home/qj213/afp-2021-10-22/thys/Sunflowers/Erdos_Rado_Sunflower.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Sunflowers", "problem_names": ["lemma sunflower_remove_element_lift: \n  assumes S: \"S \\<subseteq> { A - {a} | A . A \\<in> F \\<and> a \\<in> A}\" \n    and sf: \"sunflower S\" \n  shows \"\\<exists> Sa. sunflower Sa \\<and> Sa \\<subseteq> F \\<and> card Sa = card S \\<and> Sa = insert a ` S\"", "lemma Erdos_Rado_sunflower_same_card: \n  assumes \"\\<forall> A \\<in> F. finite A \\<and> card A = k\" \n    and \"card F > (r - 1)^k * fact k\"\n  shows \"\\<exists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S = r \\<and> {} \\<notin> S\"", "lemma Erdos_Rado_sunflower: \n  assumes \"\\<forall> A \\<in> F. finite A \\<and> card A \\<le> k\" \n    and \"card F > (r - 1)^k * fact k\"\n  shows \"\\<exists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S = r\"", "lemma sunflower_lower_bound:\n  assumes inf: \"infinite (UNIV :: 'a set)\" \n    and r: \"r \\<noteq> 0\"\n    and rk: \"r = 1 \\<Longrightarrow> k \\<noteq> 0\" \n  shows \"\\<exists> F. \n    card F = (r - 1)^k \\<and> finite F \\<and>\n    (\\<forall> A \\<in> F. finite (A :: 'a set) \\<and> card A = k) \\<and>\n    (\\<nexists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S \\<ge> r)\"", "lemma Erdos_Rado_sunflower_card_core: \n  assumes \"finite E\" \n    and \"\\<forall> A \\<in> F. A \\<subseteq> E \\<and> s \\<le> card A \\<and> card A \\<le> k\" \n    and \"card F > (card E choose s) * (r - 1)^k * fact k\"\n    and \"s \\<noteq> 0\" \n    and \"r \\<noteq> 0\" \n  shows \"\\<exists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S = r \\<and> card (\\<Inter> S) \\<ge> s\"", "lemma Erdos_Rado_sunflower_nonempty_core: \n  assumes \"finite E\" \n    and \"\\<forall> A \\<in> F. A \\<subseteq> E \\<and> card A \\<le> k\" \n    and \"{} \\<notin> F\" \n    and \"card F > card E * (r - 1)^k * fact k\"\n  shows \"\\<exists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S = r \\<and> \\<Inter> S \\<noteq> {}\""], "translations": [["", "lemma sunflower_remove_element_lift: \n  assumes S: \"S \\<subseteq> { A - {a} | A . A \\<in> F \\<and> a \\<in> A}\" \n    and sf: \"sunflower S\" \n  shows \"\\<exists> Sa. sunflower Sa \\<and> Sa \\<subseteq> F \\<and> card Sa = card S \\<and> Sa = insert a ` S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Sa.\n       sunflower Sa \\<and>\n       Sa \\<subseteq> F \\<and> card Sa = card S \\<and> Sa = insert a ` S", "proof (intro exI[of _ \"insert a ` S\"] conjI refl)"], ["proof (state)\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "let ?Sa = \"insert a ` S\""], ["proof (state)\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "{"], ["proof (state)\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "fix B"], ["proof (state)\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "assume \"B \\<in> ?Sa\""], ["proof (state)\nthis:\n  B \\<in> insert a ` S\n\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "then"], ["proof (chain)\npicking this:\n  B \\<in> insert a ` S", "obtain C where C: \"C \\<in> S\" and B: \"B = insert a C\""], ["proof (prove)\nusing this:\n  B \\<in> insert a ` S\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        \\<lbrakk>C \\<in> S; B = insert a C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<in> S\n  B = insert a C\n\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "from C S"], ["proof (chain)\npicking this:\n  C \\<in> S\n  S \\<subseteq> {A - {a} |A. A \\<in> F \\<and> a \\<in> A}", "obtain T where \"T \\<in> F\" \"a \\<in> T\" \"C = T - {a}\""], ["proof (prove)\nusing this:\n  C \\<in> S\n  S \\<subseteq> {A - {a} |A. A \\<in> F \\<and> a \\<in> A}\n\ngoal (1 subgoal):\n 1. (\\<And>T.\n        \\<lbrakk>T \\<in> F; a \\<in> T; C = T - {a}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  T \\<in> F\n  a \\<in> T\n  C = T - {a}\n\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "with B"], ["proof (chain)\npicking this:\n  B = insert a C\n  T \\<in> F\n  a \\<in> T\n  C = T - {a}", "have \"B = T\""], ["proof (prove)\nusing this:\n  B = insert a C\n  T \\<in> F\n  a \\<in> T\n  C = T - {a}\n\ngoal (1 subgoal):\n 1. B = T", "by auto"], ["proof (state)\nthis:\n  B = T\n\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "with \\<open>T \\<in> F\\<close>"], ["proof (chain)\npicking this:\n  T \\<in> F\n  B = T", "have \"B \\<in> F\""], ["proof (prove)\nusing this:\n  T \\<in> F\n  B = T\n\ngoal (1 subgoal):\n 1. B \\<in> F", "by auto"], ["proof (state)\nthis:\n  B \\<in> F\n\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "}"], ["proof (state)\nthis:\n  ?B2 \\<in> insert a ` S \\<Longrightarrow> ?B2 \\<in> F\n\ngoal (3 subgoals):\n 1. sunflower (insert a ` S)\n 2. insert a ` S \\<subseteq> F\n 3. card (insert a ` S) = card S", "thus SaF: \"?Sa \\<subseteq> F\""], ["proof (prove)\nusing this:\n  ?B2 \\<in> insert a ` S \\<Longrightarrow> ?B2 \\<in> F\n\ngoal (1 subgoal):\n 1. insert a ` S \\<subseteq> F", "by auto"], ["proof (state)\nthis:\n  insert a ` S \\<subseteq> F\n\ngoal (2 subgoals):\n 1. sunflower (insert a ` S)\n 2. card (insert a ` S) = card S", "have inj: \"inj_on (insert a) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (insert a) S", "using S"], ["proof (prove)\nusing this:\n  S \\<subseteq> {A - {a} |A. A \\<in> F \\<and> a \\<in> A}\n\ngoal (1 subgoal):\n 1. inj_on (insert a) S", "by (intro inj_on_inverseI[of _ \"\\<lambda> B. B - {a}\"], auto)"], ["proof (state)\nthis:\n  inj_on (insert a) S\n\ngoal (2 subgoals):\n 1. sunflower (insert a ` S)\n 2. card (insert a ` S) = card S", "thus \"card ?Sa = card S\""], ["proof (prove)\nusing this:\n  inj_on (insert a) S\n\ngoal (1 subgoal):\n 1. card (insert a ` S) = card S", "by (rule card_image)"], ["proof (state)\nthis:\n  card (insert a ` S) = card S\n\ngoal (1 subgoal):\n 1. sunflower (insert a ` S)", "show \"sunflower ?Sa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sunflower (insert a ` S)", "unfolding sunflower_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<exists>A B.\n           A \\<in> insert a ` S \\<and>\n           B \\<in> insert a ` S \\<and>\n           A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B) \\<longrightarrow>\n       (\\<forall>A. A \\<in> insert a ` S \\<longrightarrow> x \\<in> A)", "proof (intro allI, intro impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>A B.\n          A \\<in> insert a ` S \\<and>\n          B \\<in> insert a ` S \\<and>\n          A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B \\<Longrightarrow>\n       \\<forall>A. A \\<in> insert a ` S \\<longrightarrow> x \\<in> A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>A B.\n          A \\<in> insert a ` S \\<and>\n          B \\<in> insert a ` S \\<and>\n          A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B \\<Longrightarrow>\n       \\<forall>A. A \\<in> insert a ` S \\<longrightarrow> x \\<in> A", "assume \"\\<exists>C D. C \\<in> ?Sa \\<and> D \\<in> ?Sa \\<and> C \\<noteq> D \\<and> x \\<in> C \\<and> x \\<in> D\""], ["proof (state)\nthis:\n  \\<exists>C D.\n     C \\<in> insert a ` S \\<and>\n     D \\<in> insert a ` S \\<and>\n     C \\<noteq> D \\<and> x \\<in> C \\<and> x \\<in> D\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>A B.\n          A \\<in> insert a ` S \\<and>\n          B \\<in> insert a ` S \\<and>\n          A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B \\<Longrightarrow>\n       \\<forall>A. A \\<in> insert a ` S \\<longrightarrow> x \\<in> A", "then"], ["proof (chain)\npicking this:\n  \\<exists>C D.\n     C \\<in> insert a ` S \\<and>\n     D \\<in> insert a ` S \\<and>\n     C \\<noteq> D \\<and> x \\<in> C \\<and> x \\<in> D", "obtain C D where *: \"C \\<in> ?Sa\" \"D \\<in> ?Sa\" \"C \\<noteq> D\" \"x \\<in> C\" \"x \\<in> D\""], ["proof (prove)\nusing this:\n  \\<exists>C D.\n     C \\<in> insert a ` S \\<and>\n     D \\<in> insert a ` S \\<and>\n     C \\<noteq> D \\<and> x \\<in> C \\<and> x \\<in> D\n\ngoal (1 subgoal):\n 1. (\\<And>C D.\n        \\<lbrakk>C \\<in> insert a ` S; D \\<in> insert a ` S; C \\<noteq> D;\n         x \\<in> C; x \\<in> D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<in> insert a ` S\n  D \\<in> insert a ` S\n  C \\<noteq> D\n  x \\<in> C\n  x \\<in> D\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>A B.\n          A \\<in> insert a ` S \\<and>\n          B \\<in> insert a ` S \\<and>\n          A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B \\<Longrightarrow>\n       \\<forall>A. A \\<in> insert a ` S \\<longrightarrow> x \\<in> A", "from *(1-2)"], ["proof (chain)\npicking this:\n  C \\<in> insert a ` S\n  D \\<in> insert a ` S", "obtain C' D' where \n      **: \"C' \\<in> S\" \"D' \\<in> S\" \"C = insert a C'\" \"D = insert a D'\""], ["proof (prove)\nusing this:\n  C \\<in> insert a ` S\n  D \\<in> insert a ` S\n\ngoal (1 subgoal):\n 1. (\\<And>C' D'.\n        \\<lbrakk>C' \\<in> S; D' \\<in> S; C = insert a C';\n         D = insert a D'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C' \\<in> S\n  D' \\<in> S\n  C = insert a C'\n  D = insert a D'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>A B.\n          A \\<in> insert a ` S \\<and>\n          B \\<in> insert a ` S \\<and>\n          A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B \\<Longrightarrow>\n       \\<forall>A. A \\<in> insert a ` S \\<longrightarrow> x \\<in> A", "with \\<open>C \\<noteq> D\\<close> inj"], ["proof (chain)\npicking this:\n  C \\<noteq> D\n  inj_on (insert a) S\n  C' \\<in> S\n  D' \\<in> S\n  C = insert a C'\n  D = insert a D'", "have CD': \"C' \\<noteq> D'\""], ["proof (prove)\nusing this:\n  C \\<noteq> D\n  inj_on (insert a) S\n  C' \\<in> S\n  D' \\<in> S\n  C = insert a C'\n  D = insert a D'\n\ngoal (1 subgoal):\n 1. C' \\<noteq> D'", "by auto"], ["proof (state)\nthis:\n  C' \\<noteq> D'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<exists>A B.\n          A \\<in> insert a ` S \\<and>\n          B \\<in> insert a ` S \\<and>\n          A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B \\<Longrightarrow>\n       \\<forall>A. A \\<in> insert a ` S \\<longrightarrow> x \\<in> A", "show \"\\<forall>E. E \\<in> ?Sa \\<longrightarrow> x \\<in> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E", "proof (cases \"x = a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E", "case False"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E", "with * **"], ["proof (chain)\npicking this:\n  C \\<in> insert a ` S\n  D \\<in> insert a ` S\n  C \\<noteq> D\n  x \\<in> C\n  x \\<in> D\n  C' \\<in> S\n  D' \\<in> S\n  C = insert a C'\n  D = insert a D'\n  x \\<noteq> a", "have \"x \\<in> C'\" \"x \\<in> D'\""], ["proof (prove)\nusing this:\n  C \\<in> insert a ` S\n  D \\<in> insert a ` S\n  C \\<noteq> D\n  x \\<in> C\n  x \\<in> D\n  C' \\<in> S\n  D' \\<in> S\n  C = insert a C'\n  D = insert a D'\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<in> C' &&& x \\<in> D'", "by auto"], ["proof (state)\nthis:\n  x \\<in> C'\n  x \\<in> D'\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E", "with ** CD'"], ["proof (chain)\npicking this:\n  C' \\<in> S\n  D' \\<in> S\n  C = insert a C'\n  D = insert a D'\n  C' \\<noteq> D'\n  x \\<in> C'\n  x \\<in> D'", "have \"\\<exists>C D. C \\<in> S \\<and> D \\<in> S \\<and> C \\<noteq> D \\<and> x \\<in> C \\<and> x \\<in> D\""], ["proof (prove)\nusing this:\n  C' \\<in> S\n  D' \\<in> S\n  C = insert a C'\n  D = insert a D'\n  C' \\<noteq> D'\n  x \\<in> C'\n  x \\<in> D'\n\ngoal (1 subgoal):\n 1. \\<exists>C D.\n       C \\<in> S \\<and>\n       D \\<in> S \\<and> C \\<noteq> D \\<and> x \\<in> C \\<and> x \\<in> D", "by auto"], ["proof (state)\nthis:\n  \\<exists>C D.\n     C \\<in> S \\<and>\n     D \\<in> S \\<and> C \\<noteq> D \\<and> x \\<in> C \\<and> x \\<in> D\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E", "from sf[unfolded sunflower_def, rule_format, OF this]"], ["proof (chain)\npicking this:\n  ?A \\<in> S \\<Longrightarrow> x \\<in> ?A", "show ?thesis"], ["proof (prove)\nusing this:\n  ?A \\<in> S \\<Longrightarrow> x \\<in> ?A\n\ngoal (1 subgoal):\n 1. \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E", "by auto"], ["proof (state)\nthis:\n  \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E\n\ngoal (1 subgoal):\n 1. x = a \\<Longrightarrow>\n    \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E", "qed auto"], ["proof (state)\nthis:\n  \\<forall>E. E \\<in> insert a ` S \\<longrightarrow> x \\<in> E\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sunflower (insert a ` S)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The sunflower-lemma of Erd?s and Rado: \n  if a set has a certain size and all elements\n  have the same cardinality, then a sunflower exists.\\<close>"], ["", "lemma Erdos_Rado_sunflower_same_card: \n  assumes \"\\<forall> A \\<in> F. finite A \\<and> card A = k\" \n    and \"card F > (r - 1)^k * fact k\"\n  shows \"\\<exists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S = r \\<and> {} \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>F. finite A \\<and> card A = k\n  (r - 1) ^ k * fact k < card F\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "proof (induct k arbitrary: F)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = 0;\n        (r - 1) ^ 0 * fact 0 < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S\n 2. \\<And>k F.\n       \\<lbrakk>\\<And>F.\n                   \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = k;\n                    (r - 1) ^ k * fact k < card F\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n  sunflower S \\<and> card S = r \\<and> {} \\<notin> S;\n        \\<forall>A\\<in>F. finite A \\<and> card A = Suc k;\n        (r - 1) ^ Suc k * fact (Suc k) < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S", "case 0"], ["proof (state)\nthis:\n  \\<forall>A\\<in>F. finite A \\<and> card A = 0\n  (r - 1) ^ 0 * fact 0 < card F\n\ngoal (2 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = 0;\n        (r - 1) ^ 0 * fact 0 < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S\n 2. \\<And>k F.\n       \\<lbrakk>\\<And>F.\n                   \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = k;\n                    (r - 1) ^ k * fact k < card F\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n  sunflower S \\<and> card S = r \\<and> {} \\<notin> S;\n        \\<forall>A\\<in>F. finite A \\<and> card A = Suc k;\n        (r - 1) ^ Suc k * fact (Suc k) < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S", "hence \"F = {{}} \\<or> F = {}\" \"card F \\<ge> 2\""], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>F. finite A \\<and> card A = 0\n  (r - 1) ^ 0 * fact 0 < card F\n\ngoal (1 subgoal):\n 1. F = {{}} \\<or> F = {} &&& 2 \\<le> card F", "by auto"], ["proof (state)\nthis:\n  F = {{}} \\<or> F = {}\n  2 \\<le> card F\n\ngoal (2 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = 0;\n        (r - 1) ^ 0 * fact 0 < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S\n 2. \\<And>k F.\n       \\<lbrakk>\\<And>F.\n                   \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = k;\n                    (r - 1) ^ k * fact k < card F\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n  sunflower S \\<and> card S = r \\<and> {} \\<notin> S;\n        \\<forall>A\\<in>F. finite A \\<and> card A = Suc k;\n        (r - 1) ^ Suc k * fact (Suc k) < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S", "hence False"], ["proof (prove)\nusing this:\n  F = {{}} \\<or> F = {}\n  2 \\<le> card F\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>F.\n       \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = 0;\n        (r - 1) ^ 0 * fact 0 < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S\n 2. \\<And>k F.\n       \\<lbrakk>\\<And>F.\n                   \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = k;\n                    (r - 1) ^ k * fact k < card F\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n  sunflower S \\<and> card S = r \\<and> {} \\<notin> S;\n        \\<forall>A\\<in>F. finite A \\<and> card A = Suc k;\n        (r - 1) ^ Suc k * fact (Suc k) < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "by simp"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>F. sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<And>k F.\n       \\<lbrakk>\\<And>F.\n                   \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = k;\n                    (r - 1) ^ k * fact k < card F\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n  sunflower S \\<and> card S = r \\<and> {} \\<notin> S;\n        \\<forall>A\\<in>F. finite A \\<and> card A = Suc k;\n        (r - 1) ^ Suc k * fact (Suc k) < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k F.\n       \\<lbrakk>\\<And>F.\n                   \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = k;\n                    (r - 1) ^ k * fact k < card F\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n  sunflower S \\<and> card S = r \\<and> {} \\<notin> S;\n        \\<forall>A\\<in>F. finite A \\<and> card A = Suc k;\n        (r - 1) ^ Suc k * fact (Suc k) < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S", "case (Suc k F)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>A\\<in>?F. finite A \\<and> card A = k;\n   (r - 1) ^ k * fact k < card ?F\\<rbrakk>\n  \\<Longrightarrow> \\<exists>S\\<subseteq>?F.\n                       sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n  \\<forall>A\\<in>F. finite A \\<and> card A = Suc k\n  (r - 1) ^ Suc k * fact (Suc k) < card F\n\ngoal (1 subgoal):\n 1. \\<And>k F.\n       \\<lbrakk>\\<And>F.\n                   \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = k;\n                    (r - 1) ^ k * fact k < card F\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n  sunflower S \\<and> card S = r \\<and> {} \\<notin> S;\n        \\<forall>A\\<in>F. finite A \\<and> card A = Suc k;\n        (r - 1) ^ Suc k * fact (Suc k) < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S", "define pd_sub :: \"'a set set \\<Rightarrow> nat \\<Rightarrow> bool\" where\n    \"pd_sub = (\\<lambda> G t. G \\<subseteq> F \\<and> card G = t \\<and> pairwise disjnt G \\<and> {} \\<notin> G)\""], ["proof (state)\nthis:\n  pd_sub =\n  (\\<lambda>G t.\n      G \\<subseteq> F \\<and>\n      card G = t \\<and> pairwise disjnt G \\<and> {} \\<notin> G)\n\ngoal (1 subgoal):\n 1. \\<And>k F.\n       \\<lbrakk>\\<And>F.\n                   \\<lbrakk>\\<forall>A\\<in>F. finite A \\<and> card A = k;\n                    (r - 1) ^ k * fact k < card F\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n  sunflower S \\<and> card S = r \\<and> {} \\<notin> S;\n        \\<forall>A\\<in>F. finite A \\<and> card A = Suc k;\n        (r - 1) ^ Suc k * fact (Suc k) < card F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S\\<subseteq>F.\n                            sunflower S \\<and>\n                            card S = r \\<and> {} \\<notin> S", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "proof (cases \"\\<exists> t G. pd_sub G t \\<and> t \\<ge> r\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n 2. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "case True"], ["proof (state)\nthis:\n  \\<exists>t G. pd_sub G t \\<and> r \\<le> t\n\ngoal (2 subgoals):\n 1. \\<exists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n 2. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "then"], ["proof (chain)\npicking this:\n  \\<exists>t G. pd_sub G t \\<and> r \\<le> t", "obtain t G where pd_sub: \"pd_sub G t\" and t: \"t \\<ge> r\""], ["proof (prove)\nusing this:\n  \\<exists>t G. pd_sub G t \\<and> r \\<le> t\n\ngoal (1 subgoal):\n 1. (\\<And>G t.\n        \\<lbrakk>pd_sub G t; r \\<le> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  pd_sub G t\n  r \\<le> t\n\ngoal (2 subgoals):\n 1. \\<exists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n 2. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from pd_sub[unfolded pd_sub_def] pairwise_disjnt_imp_sunflower"], ["proof (chain)\npicking this:\n  G \\<subseteq> F \\<and>\n  card G = t \\<and> pairwise disjnt G \\<and> {} \\<notin> G\n  pairwise disjnt ?F \\<Longrightarrow> sunflower ?F", "have *: \"G \\<subseteq> F\" \"card G = t\" \"sunflower G\" \"{} \\<notin> G\""], ["proof (prove)\nusing this:\n  G \\<subseteq> F \\<and>\n  card G = t \\<and> pairwise disjnt G \\<and> {} \\<notin> G\n  pairwise disjnt ?F \\<Longrightarrow> sunflower ?F\n\ngoal (1 subgoal):\n 1. (G \\<subseteq> F &&& card G = t) &&& sunflower G &&& {} \\<notin> G", "by auto"], ["proof (state)\nthis:\n  G \\<subseteq> F\n  card G = t\n  sunflower G\n  {} \\<notin> G\n\ngoal (2 subgoals):\n 1. \\<exists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n 2. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from t \\<open>card G = t\\<close>"], ["proof (chain)\npicking this:\n  r \\<le> t\n  card G = t", "obtain H where \"H \\<subseteq> G\" \"card H = r\""], ["proof (prove)\nusing this:\n  r \\<le> t\n  card G = t\n\ngoal (1 subgoal):\n 1. (\\<And>H.\n        \\<lbrakk>H \\<subseteq> G; card H = r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis obtain_subset_with_card_n)"], ["proof (state)\nthis:\n  H \\<subseteq> G\n  card H = r\n\ngoal (2 subgoals):\n 1. \\<exists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n 2. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "with sunflower_subset[OF \\<open>H \\<subseteq> G\\<close>] *"], ["proof (chain)\npicking this:\n  sunflower G \\<Longrightarrow> sunflower H\n  G \\<subseteq> F\n  card G = t\n  sunflower G\n  {} \\<notin> G\n  H \\<subseteq> G\n  card H = r", "show ?thesis"], ["proof (prove)\nusing this:\n  sunflower G \\<Longrightarrow> sunflower H\n  G \\<subseteq> F\n  card G = t\n  sunflower G\n  {} \\<notin> G\n  H \\<subseteq> G\n  card H = r\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "by blast"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>F. sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "case False"], ["proof (state)\nthis:\n  \\<nexists>t G. pd_sub G t \\<and> r \\<le> t\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "define P where \"P = (\\<lambda> t. \\<exists> G. pd_sub G t)\""], ["proof (state)\nthis:\n  P = (\\<lambda>t. \\<exists>G. pd_sub G t)\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have ex: \"\\<exists> t. P t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. P t", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t G. pd_sub G t", "by (intro exI[of _ 0] exI[of _ \"{}\"], auto simp: pd_sub_def)"], ["proof (state)\nthis:\n  \\<exists>t. P t\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have large': \"\\<And> t. P t \\<Longrightarrow> t < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. P t \\<Longrightarrow> t < r", "using False"], ["proof (prove)\nusing this:\n  \\<nexists>t G. pd_sub G t \\<and> r \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>t. P t \\<Longrightarrow> t < r", "unfolding P_def"], ["proof (prove)\nusing this:\n  \\<nexists>t G. pd_sub G t \\<and> r \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>t. \\<exists>G. pd_sub G t \\<Longrightarrow> t < r", "by auto"], ["proof (state)\nthis:\n  P ?t \\<Longrightarrow> ?t < r\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "hence large: \"\\<And> t. P t \\<Longrightarrow> t \\<le> r\""], ["proof (prove)\nusing this:\n  P ?t \\<Longrightarrow> ?t < r\n\ngoal (1 subgoal):\n 1. \\<And>t. P t \\<Longrightarrow> t \\<le> r", "by fastforce"], ["proof (state)\nthis:\n  P ?t \\<Longrightarrow> ?t \\<le> r\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "define t where \"t = (GREATEST t. P t)\""], ["proof (state)\nthis:\n  t = (GREATEST t. P t)\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from GreatestI_ex_nat[OF ex large, folded t_def]"], ["proof (chain)\npicking this:\n  (\\<And>y. P y \\<Longrightarrow> P y) \\<Longrightarrow> P t", "have Pt: \"P t\""], ["proof (prove)\nusing this:\n  (\\<And>y. P y \\<Longrightarrow> P y) \\<Longrightarrow> P t\n\ngoal (1 subgoal):\n 1. P t", "."], ["proof (state)\nthis:\n  P t\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from Greatest_le_nat[of P, OF _ large]"], ["proof (chain)\npicking this:\n  \\<lbrakk>P ?k; \\<And>y. P y \\<Longrightarrow> P y\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> Greatest P", "have greatest: \"\\<And> s. P s \\<Longrightarrow> s \\<le> t\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P ?k; \\<And>y. P y \\<Longrightarrow> P y\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> Greatest P\n\ngoal (1 subgoal):\n 1. \\<And>s. P s \\<Longrightarrow> s \\<le> t", "unfolding t_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>P ?k; \\<And>y. P y \\<Longrightarrow> P y\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> Greatest P\n\ngoal (1 subgoal):\n 1. \\<And>s. P s \\<Longrightarrow> s \\<le> Greatest P", "by auto"], ["proof (state)\nthis:\n  P ?s \\<Longrightarrow> ?s \\<le> t\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from large'[OF Pt]"], ["proof (chain)\npicking this:\n  t < r", "have tr: \"t \\<le> r - 1\""], ["proof (prove)\nusing this:\n  t < r\n\ngoal (1 subgoal):\n 1. t \\<le> r - 1", "by simp"], ["proof (state)\nthis:\n  t \\<le> r - 1\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from Pt[unfolded P_def pd_sub_def]"], ["proof (chain)\npicking this:\n  \\<exists>G\\<subseteq>F.\n     card G = t \\<and> pairwise disjnt G \\<and> {} \\<notin> G", "obtain G where \n      cardG: \"card G = t\" and \n      disj: \"pairwise disjnt G\" and \n      GF: \"G \\<subseteq> F\""], ["proof (prove)\nusing this:\n  \\<exists>G\\<subseteq>F.\n     card G = t \\<and> pairwise disjnt G \\<and> {} \\<notin> G\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>card G = t; pairwise disjnt G; G \\<subseteq> F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  card G = t\n  pairwise disjnt G\n  G \\<subseteq> F\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "define A where \"A = (\\<Union> G)\""], ["proof (state)\nthis:\n  A = \\<Union> G\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from Suc(3)"], ["proof (chain)\npicking this:\n  (r - 1) ^ Suc k * fact (Suc k) < card F", "have \"card F > 0\""], ["proof (prove)\nusing this:\n  (r - 1) ^ Suc k * fact (Suc k) < card F\n\ngoal (1 subgoal):\n 1. 0 < card F", "by simp"], ["proof (state)\nthis:\n  0 < card F\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "hence \"finite F\""], ["proof (prove)\nusing this:\n  0 < card F\n\ngoal (1 subgoal):\n 1. finite F", "by (rule card_ge_0_finite)"], ["proof (state)\nthis:\n  finite F\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from GF \\<open>finite F\\<close>"], ["proof (chain)\npicking this:\n  G \\<subseteq> F\n  finite F", "have finG: \"finite G\""], ["proof (prove)\nusing this:\n  G \\<subseteq> F\n  finite F\n\ngoal (1 subgoal):\n 1. finite G", "by (rule finite_subset)"], ["proof (state)\nthis:\n  finite G\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"card (\\<Union> G) \\<le> sum card G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union> G) \\<le> sum card G", "by (rule card_Union_le_sum_card, insert Suc(2) GF, auto)"], ["proof (state)\nthis:\n  card (\\<Union> G) \\<le> sum card G\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "also"], ["proof (state)\nthis:\n  card (\\<Union> G) \\<le> sum card G\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"\\<dots> \\<le> of_nat (card G) * Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum card G \\<le> of_nat (card G) * Suc k", "by (rule sum_bounded_above, insert GF Suc(2), auto)"], ["proof (state)\nthis:\n  sum card G \\<le> of_nat (card G) * Suc k\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "also"], ["proof (state)\nthis:\n  sum card G \\<le> of_nat (card G) * Suc k\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"\\<dots> \\<le> (r - 1) * Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat (card G) * Suc k \\<le> (r - 1) * Suc k", "using tr[folded cardG]"], ["proof (prove)\nusing this:\n  card G \\<le> r - 1\n\ngoal (1 subgoal):\n 1. of_nat (card G) * Suc k \\<le> (r - 1) * Suc k", "by (metis id_apply mult_le_mono1 of_nat_eq_id)"], ["proof (state)\nthis:\n  of_nat (card G) * Suc k \\<le> (r - 1) * Suc k\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "finally"], ["proof (chain)\npicking this:\n  card (\\<Union> G) \\<le> (r - 1) * Suc k", "have cardA: \"card A \\<le> (r - 1) * Suc k\""], ["proof (prove)\nusing this:\n  card (\\<Union> G) \\<le> (r - 1) * Suc k\n\ngoal (1 subgoal):\n 1. card A \\<le> (r - 1) * Suc k", "unfolding A_def"], ["proof (prove)\nusing this:\n  card (\\<Union> G) \\<le> (r - 1) * Suc k\n\ngoal (1 subgoal):\n 1. card (\\<Union> G) \\<le> (r - 1) * Suc k", "."], ["proof (state)\nthis:\n  card A \\<le> (r - 1) * Suc k\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "{"], ["proof (state)\nthis:\n  card A \\<le> (r - 1) * Suc k\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "assume *: \"B \\<in> F\""], ["proof (state)\nthis:\n  B \\<in> F\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "with Suc(2)"], ["proof (chain)\npicking this:\n  \\<forall>A\\<in>F. finite A \\<and> card A = Suc k\n  B \\<in> F", "have nE: \"B \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>F. finite A \\<and> card A = Suc k\n  B \\<in> F\n\ngoal (1 subgoal):\n 1. B \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from Suc(2)"], ["proof (chain)\npicking this:\n  \\<forall>A\\<in>F. finite A \\<and> card A = Suc k", "have eF: \"{} \\<notin> F\""], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>F. finite A \\<and> card A = Suc k\n\ngoal (1 subgoal):\n 1. {} \\<notin> F", "by auto"], ["proof (state)\nthis:\n  {} \\<notin> F\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"B \\<inter> A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<inter> A \\<noteq> {}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<inter> A = {} \\<Longrightarrow> False", "assume dis: \"B \\<inter> A = {}\""], ["proof (state)\nthis:\n  B \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. B \\<inter> A = {} \\<Longrightarrow> False", "hence disj: \"pairwise disjnt ({B} \\<union> G)\""], ["proof (prove)\nusing this:\n  B \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. pairwise disjnt ({B} \\<union> G)", "using disj"], ["proof (prove)\nusing this:\n  B \\<inter> A = {}\n  pairwise disjnt G\n\ngoal (1 subgoal):\n 1. pairwise disjnt ({B} \\<union> G)", "unfolding A_def"], ["proof (prove)\nusing this:\n  B \\<inter> \\<Union> G = {}\n  pairwise disjnt G\n\ngoal (1 subgoal):\n 1. pairwise disjnt ({B} \\<union> G)", "by (smt (verit, ccfv_SIG) Int_commute Un_iff \n              Union_disjoint disjnt_def pairwise_def singleton_iff)"], ["proof (state)\nthis:\n  pairwise disjnt ({B} \\<union> G)\n\ngoal (1 subgoal):\n 1. B \\<inter> A = {} \\<Longrightarrow> False", "from nE dis"], ["proof (chain)\npicking this:\n  B \\<noteq> {}\n  B \\<inter> A = {}", "have \"B \\<notin> G\""], ["proof (prove)\nusing this:\n  B \\<noteq> {}\n  B \\<inter> A = {}\n\ngoal (1 subgoal):\n 1. B \\<notin> G", "unfolding A_def"], ["proof (prove)\nusing this:\n  B \\<noteq> {}\n  B \\<inter> \\<Union> G = {}\n\ngoal (1 subgoal):\n 1. B \\<notin> G", "by auto"], ["proof (state)\nthis:\n  B \\<notin> G\n\ngoal (1 subgoal):\n 1. B \\<inter> A = {} \\<Longrightarrow> False", "with finG"], ["proof (chain)\npicking this:\n  finite G\n  B \\<notin> G", "have c: \"card ({B} \\<union> G) = Suc t\""], ["proof (prove)\nusing this:\n  finite G\n  B \\<notin> G\n\ngoal (1 subgoal):\n 1. card ({B} \\<union> G) = Suc t", "by (simp add: cardG)"], ["proof (state)\nthis:\n  card ({B} \\<union> G) = Suc t\n\ngoal (1 subgoal):\n 1. B \\<inter> A = {} \\<Longrightarrow> False", "have \"P (Suc t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Suc t)", "unfolding P_def pd_sub_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>G\\<subseteq>F.\n       card G = Suc t \\<and> pairwise disjnt G \\<and> {} \\<notin> G", "by (intro exI[of _ \"{B} \\<union> G\"], insert eF disj c * GF, auto)"], ["proof (state)\nthis:\n  P (Suc t)\n\ngoal (1 subgoal):\n 1. B \\<inter> A = {} \\<Longrightarrow> False", "with greatest"], ["proof (chain)\npicking this:\n  P ?s \\<Longrightarrow> ?s \\<le> t\n  P (Suc t)", "show False"], ["proof (prove)\nusing this:\n  P ?s \\<Longrightarrow> ?s \\<le> t\n  P (Suc t)\n\ngoal (1 subgoal):\n 1. False", "by force"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<inter> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "}"], ["proof (state)\nthis:\n  ?B2 \\<in> F \\<Longrightarrow> ?B2 \\<inter> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "note overlap = this"], ["proof (state)\nthis:\n  ?B2 \\<in> F \\<Longrightarrow> ?B2 \\<inter> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"F \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<noteq> {}", "using Suc(2-)"], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>F. finite A \\<and> card A = Suc k\n  (r - 1) ^ Suc k * fact (Suc k) < card F\n\ngoal (1 subgoal):\n 1. F \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "with overlap"], ["proof (chain)\npicking this:\n  ?B2 \\<in> F \\<Longrightarrow> ?B2 \\<inter> A \\<noteq> {}\n  F \\<noteq> {}", "have Ane: \"A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  ?B2 \\<in> F \\<Longrightarrow> ?B2 \\<inter> A \\<noteq> {}\n  F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A \\<noteq> {}", "unfolding A_def"], ["proof (prove)\nusing this:\n  ?B2 \\<in> F \\<Longrightarrow> ?B2 \\<inter> \\<Union> G \\<noteq> {}\n  F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<Union> G \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A", "unfolding A_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<Union> G)", "using finG Suc(2-) GF"], ["proof (prove)\nusing this:\n  finite G\n  \\<forall>A\\<in>F. finite A \\<and> card A = Suc k\n  (r - 1) ^ Suc k * fact (Suc k) < card F\n  G \\<subseteq> F\n\ngoal (1 subgoal):\n 1. finite (\\<Union> G)", "by auto"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "let ?g = \"\\<lambda> B x. x \\<in> B \\<inter> A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "define f where \"f = (\\<lambda> B. SOME x. ?g B x)\""], ["proof (state)\nthis:\n  f = (\\<lambda>B. SOME x. x \\<in> B \\<inter> A)\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"f \\<in> F \\<rightarrow> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> F \\<rightarrow> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> f x \\<in> A", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> f x \\<in> A", "assume \"B \\<in> F\""], ["proof (state)\nthis:\n  B \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> f x \\<in> A", "from overlap[OF this]"], ["proof (chain)\npicking this:\n  B \\<inter> A \\<noteq> {}", "have \"\\<exists> x. ?g B x\""], ["proof (prove)\nusing this:\n  B \\<inter> A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> B \\<inter> A", "unfolding A_def"], ["proof (prove)\nusing this:\n  B \\<inter> \\<Union> G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> B \\<inter> \\<Union> G", "by auto"], ["proof (state)\nthis:\n  \\<exists>x. x \\<in> B \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> f x \\<in> A", "from someI_ex[OF this]"], ["proof (chain)\npicking this:\n  (SOME x. x \\<in> B \\<inter> A) \\<in> B \\<inter> A", "show \"f B \\<in> A\""], ["proof (prove)\nusing this:\n  (SOME x. x \\<in> B \\<inter> A) \\<in> B \\<inter> A\n\ngoal (1 subgoal):\n 1. f B \\<in> A", "unfolding f_def"], ["proof (prove)\nusing this:\n  (SOME x. x \\<in> B \\<inter> A) \\<in> B \\<inter> A\n\ngoal (1 subgoal):\n 1. (SOME x. x \\<in> B \\<inter> A) \\<in> A", "by auto"], ["proof (state)\nthis:\n  f B \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<in> F \\<rightarrow> A\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from pigeonhole_card[OF this \\<open>finite F\\<close> \\<open>finite A\\<close> Ane]"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>A. card F \\<le> card (f -` {y} \\<inter> F) * card A", "obtain a where a: \"a \\<in> A\" \n      and le: \"card F \\<le> card (f -` {a} \\<inter> F) * card A\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>A. card F \\<le> card (f -` {y} \\<inter> F) * card A\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> A;\n         card F \\<le> card (f -` {a} \\<inter> F) * card A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> A\n  card F \\<le> card (f -` {a} \\<inter> F) * card A\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "{"], ["proof (state)\nthis:\n  a \\<in> A\n  card F \\<le> card (f -` {a} \\<inter> F) * card A\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "assume \"S \\<in> F\" \"f S \\<in> {a}\""], ["proof (state)\nthis:\n  S \\<in> F\n  f S \\<in> {a}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "with someI_ex[of \"?g S\"] a overlap[OF this(1)]"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> S \\<inter> A \\<Longrightarrow>\n  (SOME x. x \\<in> S \\<inter> A) \\<in> S \\<inter> A\n  a \\<in> A\n  S \\<inter> A \\<noteq> {}\n  S \\<in> F\n  f S \\<in> {a}", "have \"a \\<in> S\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S \\<inter> A \\<Longrightarrow>\n  (SOME x. x \\<in> S \\<inter> A) \\<in> S \\<inter> A\n  a \\<in> A\n  S \\<inter> A \\<noteq> {}\n  S \\<in> F\n  f S \\<in> {a}\n\ngoal (1 subgoal):\n 1. a \\<in> S", "unfolding f_def"], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S \\<inter> A \\<Longrightarrow>\n  (SOME x. x \\<in> S \\<inter> A) \\<in> S \\<inter> A\n  a \\<in> A\n  S \\<inter> A \\<noteq> {}\n  S \\<in> F\n  (SOME x. x \\<in> S \\<inter> A) \\<in> {a}\n\ngoal (1 subgoal):\n 1. a \\<in> S", "by auto"], ["proof (state)\nthis:\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?S2 \\<in> F; f ?S2 \\<in> {a}\\<rbrakk>\n  \\<Longrightarrow> a \\<in> ?S2\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "note FaS = this"], ["proof (state)\nthis:\n  \\<lbrakk>?S2 \\<in> F; f ?S2 \\<in> {a}\\<rbrakk>\n  \\<Longrightarrow> a \\<in> ?S2\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "let ?F = \"{S - {a} | S . S \\<in> F \\<and> f S \\<in> {a}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from cardA"], ["proof (chain)\npicking this:\n  card A \\<le> (r - 1) * Suc k", "have \"((r - 1) ^ k * fact k) * card A \\<le> ((r - 1) ^ k * fact k) * ((r - 1) * Suc k)\""], ["proof (prove)\nusing this:\n  card A \\<le> (r - 1) * Suc k\n\ngoal (1 subgoal):\n 1. (r - 1) ^ k * fact k * card A\n    \\<le> (r - 1) ^ k * fact k * ((r - 1) * Suc k)", "by simp"], ["proof (state)\nthis:\n  (r - 1) ^ k * fact k * card A\n  \\<le> (r - 1) ^ k * fact k * ((r - 1) * Suc k)\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "also"], ["proof (state)\nthis:\n  (r - 1) ^ k * fact k * card A\n  \\<le> (r - 1) ^ k * fact k * ((r - 1) * Suc k)\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"\\<dots> = (r - 1) ^ (Suc k) * fact (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r - 1) ^ k * fact k * ((r - 1) * Suc k) =\n    (r - 1) ^ Suc k * fact (Suc k)", "by (metis (no_types, lifting) fact_Suc mult.assoc mult.commute of_nat_id power_Suc2)"], ["proof (state)\nthis:\n  (r - 1) ^ k * fact k * ((r - 1) * Suc k) = (r - 1) ^ Suc k * fact (Suc k)\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "also"], ["proof (state)\nthis:\n  (r - 1) ^ k * fact k * ((r - 1) * Suc k) = (r - 1) ^ Suc k * fact (Suc k)\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"\\<dots> < card (f -` {a} \\<inter> F) * card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r - 1) ^ Suc k * fact (Suc k) < card (f -` {a} \\<inter> F) * card A", "using Suc(3) le"], ["proof (prove)\nusing this:\n  (r - 1) ^ Suc k * fact (Suc k) < card F\n  card F \\<le> card (f -` {a} \\<inter> F) * card A\n\ngoal (1 subgoal):\n 1. (r - 1) ^ Suc k * fact (Suc k) < card (f -` {a} \\<inter> F) * card A", "by auto"], ["proof (state)\nthis:\n  (r - 1) ^ Suc k * fact (Suc k) < card (f -` {a} \\<inter> F) * card A\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "also"], ["proof (state)\nthis:\n  (r - 1) ^ Suc k * fact (Suc k) < card (f -` {a} \\<inter> F) * card A\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"f -` {a} \\<inter> F = {S \\<in> F. f S \\<in> {a}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f -` {a} \\<inter> F = {S \\<in> F. f S \\<in> {a}}", "by auto"], ["proof (state)\nthis:\n  f -` {a} \\<inter> F = {S \\<in> F. f S \\<in> {a}}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "also"], ["proof (state)\nthis:\n  f -` {a} \\<inter> F = {S \\<in> F. f S \\<in> {a}}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"card \\<dots> = card ((\\<lambda> S. S - {a}) ` {S \\<in> F. f S \\<in> {a}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {S \\<in> F. f S \\<in> {a}} =\n    card ((\\<lambda>S. S - {a}) ` {S \\<in> F. f S \\<in> {a}})", "by (subst card_image; intro inj_onI refl, insert FaS) auto"], ["proof (state)\nthis:\n  card {S \\<in> F. f S \\<in> {a}} =\n  card ((\\<lambda>S. S - {a}) ` {S \\<in> F. f S \\<in> {a}})\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "also"], ["proof (state)\nthis:\n  card {S \\<in> F. f S \\<in> {a}} =\n  card ((\\<lambda>S. S - {a}) ` {S \\<in> F. f S \\<in> {a}})\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"(\\<lambda> S. S - {a}) ` {S \\<in> F. f S \\<in> {a}} = ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>S. S - {a}) ` {S \\<in> F. f S \\<in> {a}} =\n    {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>S. S - {a}) ` {S \\<in> F. f S \\<in> {a}} =\n  {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "finally"], ["proof (chain)\npicking this:\n  (r - 1) ^ k * fact k * card A\n  < card {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}} * card A", "have lt: \"(r - 1) ^ k * fact k < card ?F\""], ["proof (prove)\nusing this:\n  (r - 1) ^ k * fact k * card A\n  < card {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}} * card A\n\ngoal (1 subgoal):\n 1. (r - 1) ^ k * fact k < card {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}", "by simp"], ["proof (state)\nthis:\n  (r - 1) ^ k * fact k < card {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "have \"\\<forall> A \\<in> ?F. finite A \\<and> card A = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>{S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}.\n       finite A \\<and> card A = k", "using Suc(2) FaS"], ["proof (prove)\nusing this:\n  \\<forall>A\\<in>F. finite A \\<and> card A = Suc k\n  \\<lbrakk>?S2 \\<in> F; f ?S2 \\<in> {a}\\<rbrakk>\n  \\<Longrightarrow> a \\<in> ?S2\n\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>{S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}.\n       finite A \\<and> card A = k", "by auto"], ["proof (state)\nthis:\n  \\<forall>A\\<in>{S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}.\n     finite A \\<and> card A = k\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from Suc(1)[OF this lt]"], ["proof (chain)\npicking this:\n  \\<exists>S\\<subseteq>{S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}.\n     sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "obtain S\n      where \"sunflower S\" \"card S = r\" \"S \\<subseteq> ?F\""], ["proof (prove)\nusing this:\n  \\<exists>S\\<subseteq>{S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}.\n     sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>sunflower S; card S = r;\n         S \\<subseteq> {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sunflower S\n  card S = r\n  S \\<subseteq> {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from \\<open>S \\<subseteq> ?F\\<close> FaS"], ["proof (chain)\npicking this:\n  S \\<subseteq> {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}\n  \\<lbrakk>?S2 \\<in> F; f ?S2 \\<in> {a}\\<rbrakk>\n  \\<Longrightarrow> a \\<in> ?S2", "have \"S \\<subseteq> {A - {a} |A. A \\<in> F \\<and> a \\<in> A}\""], ["proof (prove)\nusing this:\n  S \\<subseteq> {S - {a} |S. S \\<in> F \\<and> f S \\<in> {a}}\n  \\<lbrakk>?S2 \\<in> F; f ?S2 \\<in> {a}\\<rbrakk>\n  \\<Longrightarrow> a \\<in> ?S2\n\ngoal (1 subgoal):\n 1. S \\<subseteq> {A - {a} |A. A \\<in> F \\<and> a \\<in> A}", "by auto"], ["proof (state)\nthis:\n  S \\<subseteq> {A - {a} |A. A \\<in> F \\<and> a \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<nexists>t G. pd_sub G t \\<and> r \\<le> t \\<Longrightarrow>\n    \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "from sunflower_remove_element_lift[OF this \\<open>sunflower S\\<close>] \\<open>card S = r\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>Sa.\n     sunflower Sa \\<and>\n     Sa \\<subseteq> F \\<and> card Sa = card S \\<and> Sa = insert a ` S\n  card S = r", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>Sa.\n     sunflower Sa \\<and>\n     Sa \\<subseteq> F \\<and> card Sa = card S \\<and> Sa = insert a ` S\n  card S = r\n\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> {} \\<notin> S", "by auto"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>F. sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>F. sunflower S \\<and> card S = r \\<and> {} \\<notin> S\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Using @{thm [source] sunflower_card_subset_lift} we can easily \n  replace the condition that the cardinality is exactly @{term k}\n  by the requirement that the cardinality is at most @{term k}. \n  However, then @{term \"{} \\<notin> S\"} cannot be ensured.\n  Consider @{term \"(r :: nat) = 1 \\<and> (k :: nat) > 0 \\<and> F = {{}}\"}.\\<close>"], ["", "lemma Erdos_Rado_sunflower: \n  assumes \"\\<forall> A \\<in> F. finite A \\<and> card A \\<le> k\" \n    and \"card F > (r - 1)^k * fact k\"\n  shows \"\\<exists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F. sunflower S \\<and> card S = r", "by (rule sunflower_card_subset_lift[OF _ assms], \n      metis Erdos_Rado_sunflower_same_card)"], ["", "text \\<open>We further provide a lower bound on the existence of sunflowers, \ni.e., Exercise 6.2 of the textbook~\\cite{book}.\nTo be more precise, we prove that there is a set of sets of cardinality \n@{term \\<open>(r - 1 :: nat)^k\\<close>}, where each element is a set of cardinality \n@{term k}, such that there is no subset which is a sunflower with cardinality\nof at least @{term r}.\\<close>"], ["", "lemma sunflower_lower_bound:\n  assumes inf: \"infinite (UNIV :: 'a set)\" \n    and r: \"r \\<noteq> 0\"\n    and rk: \"r = 1 \\<Longrightarrow> k \\<noteq> 0\" \n  shows \"\\<exists> F. \n    card F = (r - 1)^k \\<and> finite F \\<and>\n    (\\<forall> A \\<in> F. finite (A :: 'a set) \\<and> card A = k) \\<and>\n    (\\<nexists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S \\<ge> r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "proof (cases \"r = 1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. r = 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n 2. r \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "case False"], ["proof (state)\nthis:\n  r \\<noteq> 1\n\ngoal (2 subgoals):\n 1. r = 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n 2. r \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "with r"], ["proof (chain)\npicking this:\n  r \\<noteq> 0\n  r \\<noteq> 1", "have r: \"r > 1\""], ["proof (prove)\nusing this:\n  r \\<noteq> 0\n  r \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < r", "by auto"], ["proof (state)\nthis:\n  1 < r\n\ngoal (2 subgoals):\n 1. r = 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n 2. r \\<noteq> 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>F.\n       card F = (r - 1) ^ 0 \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = 0) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n 2. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<exists>F.\n       card F = (r - 1) ^ 0 \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = 0) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n 2. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "have id: \"S \\<subseteq> {{}} \\<longleftrightarrow> (S = {} \\<or> S = {{}})\" for S :: \"'a set set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S \\<subseteq> {{}}) = (S = {} \\<or> S = {{}})", "by auto"], ["proof (state)\nthis:\n  (?S \\<subseteq> {{}}) = (?S = {} \\<or> ?S = {{}})\n\ngoal (2 subgoals):\n 1. \\<exists>F.\n       card F = (r - 1) ^ 0 \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = 0) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n 2. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       card F = (r - 1) ^ 0 \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = 0) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "using r"], ["proof (prove)\nusing this:\n  1 < r\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       card F = (r - 1) ^ 0 \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = 0) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "by (intro exI[of _ \"{{}}\"], auto simp: id)"], ["proof (state)\nthis:\n  \\<exists>F.\n     card F = (r - 1) ^ 0 \\<and>\n     finite F \\<and>\n     (\\<forall>A\\<in>F. finite A \\<and> card A = 0) \\<and>\n     \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "case (Suc k)"], ["proof (state)\nthis:\n  \\<exists>F.\n     card F = (r - 1) ^ k \\<and>\n     finite F \\<and>\n     (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n     \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "then"], ["proof (chain)\npicking this:\n  \\<exists>F.\n     card F = (r - 1) ^ k \\<and>\n     finite F \\<and>\n     (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n     \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "obtain F where\n      cardF: \"card F = (r - 1) ^ k\" and\n      fin: \"finite F\" and\n      AF: \"\\<And> A. (A :: 'a set) \\<in> F \\<Longrightarrow> finite A \\<and> card A = k\" and\n      sf: \"\\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\""], ["proof (prove)\nusing this:\n  \\<exists>F.\n     card F = (r - 1) ^ k \\<and>\n     finite F \\<and>\n     (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n     \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>card F = (r - 1) ^ k; finite F;\n         \\<And>A. A \\<in> F \\<Longrightarrow> finite A \\<and> card A = k;\n         \\<not> (\\<exists>S\\<subseteq>F.\n                    sunflower S \\<and> r \\<le> card S)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  card F = (r - 1) ^ k\n  finite F\n  ?A \\<in> F \\<Longrightarrow> finite ?A \\<and> card ?A = k\n  \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "text \\<open>main idea: get @{term \"k-1 :: nat\"} fresh elements \n      and add one of these to all elements of F\\<close>"], ["proof (state)\nthis:\n  card F = (r - 1) ^ k\n  finite F\n  ?A \\<in> F \\<Longrightarrow> finite ?A \\<and> card ?A = k\n  \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "have \"finite (\\<Union> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (\\<Union> F)", "using fin AF"], ["proof (prove)\nusing this:\n  finite F\n  ?A \\<in> F \\<Longrightarrow> finite ?A \\<and> card ?A = k\n\ngoal (1 subgoal):\n 1. finite (\\<Union> F)", "by simp"], ["proof (state)\nthis:\n  finite (\\<Union> F)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "hence \"infinite (UNIV - \\<Union> F)\""], ["proof (prove)\nusing this:\n  finite (\\<Union> F)\n\ngoal (1 subgoal):\n 1. infinite (UNIV - \\<Union> F)", "using inf"], ["proof (prove)\nusing this:\n  finite (\\<Union> F)\n  infinite UNIV\n\ngoal (1 subgoal):\n 1. infinite (UNIV - \\<Union> F)", "by simp"], ["proof (state)\nthis:\n  infinite (UNIV - \\<Union> F)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "from infinite_arbitrarily_large[OF this, of \"r - 1\"]"], ["proof (chain)\npicking this:\n  \\<exists>B.\n     finite B \\<and> card B = r - 1 \\<and> B \\<subseteq> UNIV - \\<Union> F", "obtain New where New: \"finite New\" \"card New = r - 1\" \n      \"New \\<inter> \\<Union> F = {}\""], ["proof (prove)\nusing this:\n  \\<exists>B.\n     finite B \\<and> card B = r - 1 \\<and> B \\<subseteq> UNIV - \\<Union> F\n\ngoal (1 subgoal):\n 1. (\\<And>New.\n        \\<lbrakk>finite New; card New = r - 1;\n         New \\<inter> \\<Union> F = {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "define G where \"G = (\\<lambda> (A, a). insert a A) ` (F \\<times> New)\""], ["proof (state)\nthis:\n  G = (\\<lambda>(A, a). insert a A) ` (F \\<times> New)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<exists>F.\n          card F = (r - 1) ^ k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F.\n                     sunflower S \\<and> r \\<le> card S) \\<Longrightarrow>\n       \\<exists>F.\n          card F = (r - 1) ^ Suc k \\<and>\n          finite F \\<and>\n          (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n          \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       card F = (r - 1) ^ Suc k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "proof (intro exI[of _ G] conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. card G = (r - 1) ^ Suc k\n 2. finite G\n 3. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 4. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "show \"finite G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite G", "using New fin"], ["proof (prove)\nusing this:\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n  finite F\n\ngoal (1 subgoal):\n 1. finite G", "unfolding G_def"], ["proof (prove)\nusing this:\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n  finite F\n\ngoal (1 subgoal):\n 1. finite ((\\<lambda>(A, a). insert a A) ` (F \\<times> New))", "by simp"], ["proof (state)\nthis:\n  finite G\n\ngoal (3 subgoals):\n 1. card G = (r - 1) ^ Suc k\n 2. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 3. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "have \"card G = card (F \\<times> New)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card G = card (F \\<times> New)", "unfolding G_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<lambda>(A, a). insert a A) ` (F \\<times> New)) =\n    card (F \\<times> New)", "proof ((subst card_image; (intro refl)?), intro inj_onI, clarsimp, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>insert b a = insert ba aa; a \\<in> F; b \\<in> New;\n        aa \\<in> F; ba \\<in> New\\<rbrakk>\n       \\<Longrightarrow> a = aa \\<and> b = ba", "case (1 A a B b)"], ["proof (state)\nthis:\n  insert a A = insert b B\n  A \\<in> F\n  a \\<in> New\n  B \\<in> F\n  b \\<in> New\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>insert b a = insert ba aa; a \\<in> F; b \\<in> New;\n        aa \\<in> F; ba \\<in> New\\<rbrakk>\n       \\<Longrightarrow> a = aa \\<and> b = ba", "hence ab: \"a = b\""], ["proof (prove)\nusing this:\n  insert a A = insert b B\n  A \\<in> F\n  a \\<in> New\n  B \\<in> F\n  b \\<in> New\n\ngoal (1 subgoal):\n 1. a = b", "using New"], ["proof (prove)\nusing this:\n  insert a A = insert b B\n  A \\<in> F\n  a \\<in> New\n  B \\<in> F\n  b \\<in> New\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n\ngoal (1 subgoal):\n 1. a = b", "by auto"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>insert b a = insert ba aa; a \\<in> F; b \\<in> New;\n        aa \\<in> F; ba \\<in> New\\<rbrakk>\n       \\<Longrightarrow> a = aa \\<and> b = ba", "from 1(1)"], ["proof (chain)\npicking this:\n  insert a A = insert b B", "have \"insert a A - {a} = insert b B - {a}\""], ["proof (prove)\nusing this:\n  insert a A = insert b B\n\ngoal (1 subgoal):\n 1. insert a A - {a} = insert b B - {a}", "by simp"], ["proof (state)\nthis:\n  insert a A - {a} = insert b B - {a}\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>insert b a = insert ba aa; a \\<in> F; b \\<in> New;\n        aa \\<in> F; ba \\<in> New\\<rbrakk>\n       \\<Longrightarrow> a = aa \\<and> b = ba", "also"], ["proof (state)\nthis:\n  insert a A - {a} = insert b B - {a}\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>insert b a = insert ba aa; a \\<in> F; b \\<in> New;\n        aa \\<in> F; ba \\<in> New\\<rbrakk>\n       \\<Longrightarrow> a = aa \\<and> b = ba", "have \"insert a A - {a} = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert a A - {a} = A", "using New 1"], ["proof (prove)\nusing this:\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n  insert a A = insert b B\n  A \\<in> F\n  a \\<in> New\n  B \\<in> F\n  b \\<in> New\n\ngoal (1 subgoal):\n 1. insert a A - {a} = A", "by auto"], ["proof (state)\nthis:\n  insert a A - {a} = A\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>insert b a = insert ba aa; a \\<in> F; b \\<in> New;\n        aa \\<in> F; ba \\<in> New\\<rbrakk>\n       \\<Longrightarrow> a = aa \\<and> b = ba", "also"], ["proof (state)\nthis:\n  insert a A - {a} = A\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>insert b a = insert ba aa; a \\<in> F; b \\<in> New;\n        aa \\<in> F; ba \\<in> New\\<rbrakk>\n       \\<Longrightarrow> a = aa \\<and> b = ba", "have \"insert b B - {a} = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert b B - {a} = B", "using New 1 ab[symmetric]"], ["proof (prove)\nusing this:\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n  insert a A = insert b B\n  A \\<in> F\n  a \\<in> New\n  B \\<in> F\n  b \\<in> New\n  b = a\n\ngoal (1 subgoal):\n 1. insert b B - {a} = B", "by auto"], ["proof (state)\nthis:\n  insert b B - {a} = B\n\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>insert b a = insert ba aa; a \\<in> F; b \\<in> New;\n        aa \\<in> F; ba \\<in> New\\<rbrakk>\n       \\<Longrightarrow> a = aa \\<and> b = ba", "finally"], ["proof (chain)\npicking this:\n  A = B", "show ?case"], ["proof (prove)\nusing this:\n  A = B\n\ngoal (1 subgoal):\n 1. A = B \\<and> a = b", "using ab"], ["proof (prove)\nusing this:\n  A = B\n  a = b\n\ngoal (1 subgoal):\n 1. A = B \\<and> a = b", "by auto"], ["proof (state)\nthis:\n  A = B \\<and> a = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card G = card (F \\<times> New)\n\ngoal (3 subgoals):\n 1. card G = (r - 1) ^ Suc k\n 2. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 3. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "also"], ["proof (state)\nthis:\n  card G = card (F \\<times> New)\n\ngoal (3 subgoals):\n 1. card G = (r - 1) ^ Suc k\n 2. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 3. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "have \"\\<dots> = card F * card New\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (F \\<times> New) = card F * card New", "using New fin"], ["proof (prove)\nusing this:\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n  finite F\n\ngoal (1 subgoal):\n 1. card (F \\<times> New) = card F * card New", "by auto"], ["proof (state)\nthis:\n  card (F \\<times> New) = card F * card New\n\ngoal (3 subgoals):\n 1. card G = (r - 1) ^ Suc k\n 2. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 3. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "finally"], ["proof (chain)\npicking this:\n  card G = card F * card New", "show \"card G = (r - 1) ^ Suc k\""], ["proof (prove)\nusing this:\n  card G = card F * card New\n\ngoal (1 subgoal):\n 1. card G = (r - 1) ^ Suc k", "unfolding cardF New"], ["proof (prove)\nusing this:\n  card G = (r - 1) ^ k * (r - 1)\n\ngoal (1 subgoal):\n 1. card G = (r - 1) ^ Suc k", "by simp"], ["proof (state)\nthis:\n  card G = (r - 1) ^ Suc k\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 2. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "{"], ["proof (state)\nthis:\n  card G = (r - 1) ^ Suc k\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 2. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "fix B"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 2. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "assume \"B \\<in> G\""], ["proof (state)\nthis:\n  B \\<in> G\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 2. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "then"], ["proof (chain)\npicking this:\n  B \\<in> G", "obtain a A where G: \"a \\<in> New\" \"A \\<in> F\" \"B = insert a A\""], ["proof (prove)\nusing this:\n  B \\<in> G\n\ngoal (1 subgoal):\n 1. (\\<And>a A.\n        \\<lbrakk>a \\<in> New; A \\<in> F; B = insert a A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding G_def"], ["proof (prove)\nusing this:\n  B \\<in> (\\<lambda>(A, a). insert a A) ` (F \\<times> New)\n\ngoal (1 subgoal):\n 1. (\\<And>a A.\n        \\<lbrakk>a \\<in> New; A \\<in> F; B = insert a A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> New\n  A \\<in> F\n  B = insert a A\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 2. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "with AF[of A] New"], ["proof (chain)\npicking this:\n  A \\<in> F \\<Longrightarrow> finite A \\<and> card A = k\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n  a \\<in> New\n  A \\<in> F\n  B = insert a A", "have \"finite B\" \"card B = Suc k\""], ["proof (prove)\nusing this:\n  A \\<in> F \\<Longrightarrow> finite A \\<and> card A = k\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n  a \\<in> New\n  A \\<in> F\n  B = insert a A\n\ngoal (1 subgoal):\n 1. finite B &&& card B = Suc k", "by (auto simp: card_insert_if)"], ["proof (state)\nthis:\n  finite B\n  card B = Suc k\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 2. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "}"], ["proof (state)\nthis:\n  ?B2 \\<in> G \\<Longrightarrow> finite ?B2\n  ?B2 \\<in> G \\<Longrightarrow> card ?B2 = Suc k\n\ngoal (2 subgoals):\n 1. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n 2. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "thus \"\\<forall>A\\<in>G. finite A \\<and> card A = Suc k\""], ["proof (prove)\nusing this:\n  ?B2 \\<in> G \\<Longrightarrow> finite ?B2\n  ?B2 \\<in> G \\<Longrightarrow> card ?B2 = Suc k\n\ngoal (1 subgoal):\n 1. \\<forall>A\\<in>G. finite A \\<and> card A = Suc k", "by auto"], ["proof (state)\nthis:\n  \\<forall>A\\<in>G. finite A \\<and> card A = Suc k\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "show \"\\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)", "proof (intro notI, elim exE conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "assume *: \"S \\<subseteq> G\" \"sunflower S\" \"r \\<le> card S\""], ["proof (state)\nthis:\n  S \\<subseteq> G\n  sunflower S\n  r \\<le> card S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "define g where \"g B = (SOME a. a \\<in> New \\<and> a \\<in> B)\" for B"], ["proof (state)\nthis:\n  g ?B = (SOME a. a \\<in> New \\<and> a \\<in> ?B)\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  g ?B = (SOME a. a \\<in> New \\<and> a \\<in> ?B)\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"B \\<in> S\""], ["proof (state)\nthis:\n  B \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "with \\<open>S \\<subseteq> G\\<close>"], ["proof (chain)\npicking this:\n  S \\<subseteq> G\n  B \\<in> S", "have \"B \\<in> G\""], ["proof (prove)\nusing this:\n  S \\<subseteq> G\n  B \\<in> S\n\ngoal (1 subgoal):\n 1. B \\<in> G", "by auto"], ["proof (state)\nthis:\n  B \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"\\<exists> a. a \\<in> New \\<and> a \\<in> B\""], ["proof (prove)\nusing this:\n  B \\<in> G\n\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<in> New \\<and> a \\<in> B", "unfolding G_def"], ["proof (prove)\nusing this:\n  B \\<in> (\\<lambda>(A, a). insert a A) ` (F \\<times> New)\n\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<in> New \\<and> a \\<in> B", "by auto"], ["proof (state)\nthis:\n  \\<exists>a. a \\<in> New \\<and> a \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "from someI_ex[OF this, folded g_def]"], ["proof (chain)\npicking this:\n  g B \\<in> New \\<and> g B \\<in> B", "have \"g B \\<in> New\" \"g B \\<in> B\""], ["proof (prove)\nusing this:\n  g B \\<in> New \\<and> g B \\<in> B\n\ngoal (1 subgoal):\n 1. g B \\<in> New &&& g B \\<in> B", "by auto"], ["proof (state)\nthis:\n  g B \\<in> New\n  g B \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?B2 \\<in> S \\<Longrightarrow> g ?B2 \\<in> New\n  ?B2 \\<in> S \\<Longrightarrow> g ?B2 \\<in> ?B2\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "note gB = this"], ["proof (state)\nthis:\n  ?B2 \\<in> S \\<Longrightarrow> g ?B2 \\<in> New\n  ?B2 \\<in> S \\<Longrightarrow> g ?B2 \\<in> ?B2\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "have \"card (g ` S) \\<le> card New\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (g ` S) \\<le> card New", "by (rule card_mono, insert New gB, auto)"], ["proof (state)\nthis:\n  card (g ` S) \\<le> card New\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  card (g ` S) \\<le> card New\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card New < r", "unfolding New"], ["proof (prove)\ngoal (1 subgoal):\n 1. r - 1 < r", "using r"], ["proof (prove)\nusing this:\n  1 < r\n\ngoal (1 subgoal):\n 1. r - 1 < r", "by simp"], ["proof (state)\nthis:\n  card New < r\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  card New < r\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<dots> \\<le> card S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le> card S", "by fact"], ["proof (state)\nthis:\n  r \\<le> card S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  card (g ` S) < card S", "have \"card (g ` S) < card S\""], ["proof (prove)\nusing this:\n  card (g ` S) < card S\n\ngoal (1 subgoal):\n 1. card (g ` S) < card S", "."], ["proof (state)\nthis:\n  card (g ` S) < card S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "from pigeonhole[OF this]"], ["proof (chain)\npicking this:\n  \\<not> inj_on g S", "have \"\\<not> inj_on g S\""], ["proof (prove)\nusing this:\n  \\<not> inj_on g S\n\ngoal (1 subgoal):\n 1. \\<not> inj_on g S", "."], ["proof (state)\nthis:\n  \\<not> inj_on g S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> inj_on g S", "obtain B1 B2 where B12: \"B1 \\<in> S\" \"B2 \\<in> S\" \"B1 \\<noteq> B2\" \"g B1 = g B2\""], ["proof (prove)\nusing this:\n  \\<not> inj_on g S\n\ngoal (1 subgoal):\n 1. (\\<And>B1 B2.\n        \\<lbrakk>B1 \\<in> S; B2 \\<in> S; B1 \\<noteq> B2;\n         g B1 = g B2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x\\<in>S.\n             \\<forall>y\\<in>S. g x = g y \\<longrightarrow> x = y)\n\ngoal (1 subgoal):\n 1. (\\<And>B1 B2.\n        \\<lbrakk>B1 \\<in> S; B2 \\<in> S; B1 \\<noteq> B2;\n         g B1 = g B2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B1 \\<in> S\n  B2 \\<in> S\n  B1 \\<noteq> B2\n  g B1 = g B2\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "define a where \"a = g B2\""], ["proof (state)\nthis:\n  a = g B2\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "from B12 gB[of B1] gB[of B2]"], ["proof (chain)\npicking this:\n  B1 \\<in> S\n  B2 \\<in> S\n  B1 \\<noteq> B2\n  g B1 = g B2\n  B1 \\<in> S \\<Longrightarrow> g B1 \\<in> New\n  B1 \\<in> S \\<Longrightarrow> g B1 \\<in> B1\n  B2 \\<in> S \\<Longrightarrow> g B2 \\<in> New\n  B2 \\<in> S \\<Longrightarrow> g B2 \\<in> B2", "have a: \"a \\<in> New\" \"a \\<in> B1\" \"a \\<in> B2\""], ["proof (prove)\nusing this:\n  B1 \\<in> S\n  B2 \\<in> S\n  B1 \\<noteq> B2\n  g B1 = g B2\n  B1 \\<in> S \\<Longrightarrow> g B1 \\<in> New\n  B1 \\<in> S \\<Longrightarrow> g B1 \\<in> B1\n  B2 \\<in> S \\<Longrightarrow> g B2 \\<in> New\n  B2 \\<in> S \\<Longrightarrow> g B2 \\<in> B2\n\ngoal (1 subgoal):\n 1. a \\<in> New &&& a \\<in> B1 &&& a \\<in> B2", "unfolding a_def"], ["proof (prove)\nusing this:\n  B1 \\<in> S\n  B2 \\<in> S\n  B1 \\<noteq> B2\n  g B1 = g B2\n  B1 \\<in> S \\<Longrightarrow> g B1 \\<in> New\n  B1 \\<in> S \\<Longrightarrow> g B1 \\<in> B1\n  B2 \\<in> S \\<Longrightarrow> g B2 \\<in> New\n  B2 \\<in> S \\<Longrightarrow> g B2 \\<in> B2\n\ngoal (1 subgoal):\n 1. g B2 \\<in> New &&& g B2 \\<in> B1 &&& g B2 \\<in> B2", "by auto"], ["proof (state)\nthis:\n  a \\<in> New\n  a \\<in> B1\n  a \\<in> B2\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "with B12"], ["proof (chain)\npicking this:\n  B1 \\<in> S\n  B2 \\<in> S\n  B1 \\<noteq> B2\n  g B1 = g B2\n  a \\<in> New\n  a \\<in> B1\n  a \\<in> B2", "have \"\\<exists>B1 B2. B1 \\<in> S \\<and> B2 \\<in> S \\<and> B1 \\<noteq> B2 \\<and> a \\<in> B1 \\<and> a \\<in> B2\""], ["proof (prove)\nusing this:\n  B1 \\<in> S\n  B2 \\<in> S\n  B1 \\<noteq> B2\n  g B1 = g B2\n  a \\<in> New\n  a \\<in> B1\n  a \\<in> B2\n\ngoal (1 subgoal):\n 1. \\<exists>B1 B2.\n       B1 \\<in> S \\<and>\n       B2 \\<in> S \\<and> B1 \\<noteq> B2 \\<and> a \\<in> B1 \\<and> a \\<in> B2", "unfolding a_def"], ["proof (prove)\nusing this:\n  B1 \\<in> S\n  B2 \\<in> S\n  B1 \\<noteq> B2\n  g B1 = g B2\n  g B2 \\<in> New\n  g B2 \\<in> B1\n  g B2 \\<in> B2\n\ngoal (1 subgoal):\n 1. \\<exists>B1 B2a.\n       B1 \\<in> S \\<and>\n       B2a \\<in> S \\<and>\n       B1 \\<noteq> B2a \\<and> g B2 \\<in> B1 \\<and> g B2 \\<in> B2a", "by blast"], ["proof (state)\nthis:\n  \\<exists>B1 B2.\n     B1 \\<in> S \\<and>\n     B2 \\<in> S \\<and> B1 \\<noteq> B2 \\<and> a \\<in> B1 \\<and> a \\<in> B2\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "from \\<open>sunflower S\\<close>[unfolded sunflower_def, rule_format, OF this]"], ["proof (chain)\npicking this:\n  ?A \\<in> S \\<Longrightarrow> a \\<in> ?A", "have aS: \"B \\<in> S \\<Longrightarrow> a \\<in> B\" for B"], ["proof (prove)\nusing this:\n  ?A \\<in> S \\<Longrightarrow> a \\<in> ?A\n\ngoal (1 subgoal):\n 1. B \\<in> S \\<Longrightarrow> a \\<in> B", "by auto"], ["proof (state)\nthis:\n  ?B \\<in> S \\<Longrightarrow> a \\<in> ?B\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "define h where \"h B = B - {a}\" for B"], ["proof (state)\nthis:\n  h ?B = ?B - {a}\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "define T where \"T = h ` S\""], ["proof (state)\nthis:\n  T = h ` S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S", "proof (intro exI[of _ T] conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "{"], ["proof (state)\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "fix B"], ["proof (state)\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "assume \"B \\<in> S\""], ["proof (state)\nthis:\n  B \\<in> S\n\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "have hB: \"h B = B - {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h B = B - {a}", "unfolding h_def T_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. B - {a} = B - {a}", "by auto"], ["proof (state)\nthis:\n  h B = B - {a}\n\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "from aS \\<open>B \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  ?B \\<in> S \\<Longrightarrow> a \\<in> ?B\n  B \\<in> S", "have aB: \"a \\<in> B\""], ["proof (prove)\nusing this:\n  ?B \\<in> S \\<Longrightarrow> a \\<in> ?B\n  B \\<in> S\n\ngoal (1 subgoal):\n 1. a \\<in> B", "by auto"], ["proof (state)\nthis:\n  a \\<in> B\n\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "from \\<open>B \\<in> S\\<close> \\<open>S \\<subseteq> G\\<close>"], ["proof (chain)\npicking this:\n  B \\<in> S\n  S \\<subseteq> G", "obtain a' A where AF: \"A \\<in> F\" \n              and B: \"B = insert a' A\" \n              and a': \"a' \\<in> New\""], ["proof (prove)\nusing this:\n  B \\<in> S\n  S \\<subseteq> G\n\ngoal (1 subgoal):\n 1. (\\<And>A a'.\n        \\<lbrakk>A \\<in> F; B = insert a' A; a' \\<in> New\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding G_def"], ["proof (prove)\nusing this:\n  B \\<in> S\n  S \\<subseteq> (\\<lambda>(A, a). insert a A) ` (F \\<times> New)\n\ngoal (1 subgoal):\n 1. (\\<And>A a'.\n        \\<lbrakk>A \\<in> F; B = insert a' A; a' \\<in> New\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  A \\<in> F\n  B = insert a' A\n  a' \\<in> New\n\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "from aB B a' New AF a(1) hB AF"], ["proof (chain)\npicking this:\n  a \\<in> B\n  B = insert a' A\n  a' \\<in> New\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n  A \\<in> F\n  a \\<in> New\n  h B = B - {a}\n  A \\<in> F", "have \"insert a (h B) = B\" \"h B = A\""], ["proof (prove)\nusing this:\n  a \\<in> B\n  B = insert a' A\n  a' \\<in> New\n  finite New\n  card New = r - 1\n  New \\<inter> \\<Union> F = {}\n  A \\<in> F\n  a \\<in> New\n  h B = B - {a}\n  A \\<in> F\n\ngoal (1 subgoal):\n 1. insert a (h B) = B &&& h B = A", "by auto"], ["proof (state)\nthis:\n  insert a (h B) = B\n  h B = A\n\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "hence \"insert a (h B) = B\" \"h B \\<in> F\" \"insert a (h B) \\<in> S\""], ["proof (prove)\nusing this:\n  insert a (h B) = B\n  h B = A\n\ngoal (1 subgoal):\n 1. insert a (h B) = B &&& h B \\<in> F &&& insert a (h B) \\<in> S", "using AF \\<open>B \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  insert a (h B) = B\n  h B = A\n  A \\<in> F\n  B \\<in> S\n\ngoal (1 subgoal):\n 1. insert a (h B) = B &&& h B \\<in> F &&& insert a (h B) \\<in> S", "by auto"], ["proof (state)\nthis:\n  insert a (h B) = B\n  h B \\<in> F\n  insert a (h B) \\<in> S\n\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "}"], ["proof (state)\nthis:\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) = ?B2\n  ?B2 \\<in> S \\<Longrightarrow> h ?B2 \\<in> F\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) \\<in> S\n\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "note main = this"], ["proof (state)\nthis:\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) = ?B2\n  ?B2 \\<in> S \\<Longrightarrow> h ?B2 \\<in> F\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) \\<in> S\n\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "have CTS: \"C \\<in> T \\<Longrightarrow> insert a C \\<in> S\" for C"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> T \\<Longrightarrow> insert a C \\<in> S", "using main"], ["proof (prove)\nusing this:\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) = ?B2\n  ?B2 \\<in> S \\<Longrightarrow> h ?B2 \\<in> F\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) \\<in> S\n\ngoal (1 subgoal):\n 1. C \\<in> T \\<Longrightarrow> insert a C \\<in> S", "unfolding T_def"], ["proof (prove)\nusing this:\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) = ?B2\n  ?B2 \\<in> S \\<Longrightarrow> h ?B2 \\<in> F\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) \\<in> S\n\ngoal (1 subgoal):\n 1. C \\<in> h ` S \\<Longrightarrow> insert a C \\<in> S", "by force"], ["proof (state)\nthis:\n  ?C \\<in> T \\<Longrightarrow> insert a ?C \\<in> S\n\ngoal (3 subgoals):\n 1. T \\<subseteq> F\n 2. sunflower T\n 3. r \\<le> card T", "show \"T \\<subseteq> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<subseteq> F", "unfolding T_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. h ` S \\<subseteq> F", "using main"], ["proof (prove)\nusing this:\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) = ?B2\n  ?B2 \\<in> S \\<Longrightarrow> h ?B2 \\<in> F\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) \\<in> S\n\ngoal (1 subgoal):\n 1. h ` S \\<subseteq> F", "by auto"], ["proof (state)\nthis:\n  T \\<subseteq> F\n\ngoal (2 subgoals):\n 1. sunflower T\n 2. r \\<le> card T", "have \"r \\<le> card S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le> card S", "by fact"], ["proof (state)\nthis:\n  r \\<le> card S\n\ngoal (2 subgoals):\n 1. sunflower T\n 2. r \\<le> card T", "also"], ["proof (state)\nthis:\n  r \\<le> card S\n\ngoal (2 subgoals):\n 1. sunflower T\n 2. r \\<le> card T", "have \"\\<dots> = card T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card S = card T", "unfolding T_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card S = card (h ` S)", "by (subst card_image, intro inj_on_inverseI[of _ \"insert a\"], insert main, auto)"], ["proof (state)\nthis:\n  card S = card T\n\ngoal (2 subgoals):\n 1. sunflower T\n 2. r \\<le> card T", "finally"], ["proof (chain)\npicking this:\n  r \\<le> card T", "show \"r \\<le> card T\""], ["proof (prove)\nusing this:\n  r \\<le> card T\n\ngoal (1 subgoal):\n 1. r \\<le> card T", "."], ["proof (state)\nthis:\n  r \\<le> card T\n\ngoal (1 subgoal):\n 1. sunflower T", "show \"sunflower T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sunflower T", "unfolding sunflower_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<exists>A B.\n           A \\<in> T \\<and>\n           B \\<in> T \\<and>\n           A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B) \\<longrightarrow>\n       (\\<forall>A. A \\<in> T \\<longrightarrow> x \\<in> A)", "proof (intro allI impI, elim exE conjE, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x A Aa B.\n       \\<lbrakk>A \\<in> T; Aa \\<in> T; B \\<in> T; Aa \\<noteq> B; x \\<in> Aa;\n        x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> x \\<in> A", "case (1 x C C1 C2)"], ["proof (state)\nthis:\n  C \\<in> T\n  C1 \\<in> T\n  C2 \\<in> T\n  C1 \\<noteq> C2\n  x \\<in> C1\n  x \\<in> C2\n\ngoal (1 subgoal):\n 1. \\<And>x A Aa B.\n       \\<lbrakk>A \\<in> T; Aa \\<in> T; B \\<in> T; Aa \\<noteq> B; x \\<in> Aa;\n        x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> x \\<in> A", "from CTS[OF \\<open>C1 \\<in> T\\<close>] CTS[OF \\<open>C2 \\<in> T\\<close>] CTS[OF \\<open>C \\<in> T\\<close>]"], ["proof (chain)\npicking this:\n  insert a C1 \\<in> S\n  insert a C2 \\<in> S\n  insert a C \\<in> S", "have *: \"insert a C1 \\<in> S\" \"insert a C2 \\<in> S\" \"insert a C \\<in> S\""], ["proof (prove)\nusing this:\n  insert a C1 \\<in> S\n  insert a C2 \\<in> S\n  insert a C \\<in> S\n\ngoal (1 subgoal):\n 1. insert a C1 \\<in> S &&& insert a C2 \\<in> S &&& insert a C \\<in> S", "by auto"], ["proof (state)\nthis:\n  insert a C1 \\<in> S\n  insert a C2 \\<in> S\n  insert a C \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x A Aa B.\n       \\<lbrakk>A \\<in> T; Aa \\<in> T; B \\<in> T; Aa \\<noteq> B; x \\<in> Aa;\n        x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> x \\<in> A", "from 1"], ["proof (chain)\npicking this:\n  C \\<in> T\n  C1 \\<in> T\n  C2 \\<in> T\n  C1 \\<noteq> C2\n  x \\<in> C1\n  x \\<in> C2", "have \"insert a C1 \\<noteq> insert a C2\""], ["proof (prove)\nusing this:\n  C \\<in> T\n  C1 \\<in> T\n  C2 \\<in> T\n  C1 \\<noteq> C2\n  x \\<in> C1\n  x \\<in> C2\n\ngoal (1 subgoal):\n 1. insert a C1 \\<noteq> insert a C2", "using main"], ["proof (prove)\nusing this:\n  C \\<in> T\n  C1 \\<in> T\n  C2 \\<in> T\n  C1 \\<noteq> C2\n  x \\<in> C1\n  x \\<in> C2\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) = ?B2\n  ?B2 \\<in> S \\<Longrightarrow> h ?B2 \\<in> F\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) \\<in> S\n\ngoal (1 subgoal):\n 1. insert a C1 \\<noteq> insert a C2", "unfolding T_def"], ["proof (prove)\nusing this:\n  C \\<in> h ` S\n  C1 \\<in> h ` S\n  C2 \\<in> h ` S\n  C1 \\<noteq> C2\n  x \\<in> C1\n  x \\<in> C2\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) = ?B2\n  ?B2 \\<in> S \\<Longrightarrow> h ?B2 \\<in> F\n  ?B2 \\<in> S \\<Longrightarrow> insert a (h ?B2) \\<in> S\n\ngoal (1 subgoal):\n 1. insert a C1 \\<noteq> insert a C2", "by auto"], ["proof (state)\nthis:\n  insert a C1 \\<noteq> insert a C2\n\ngoal (1 subgoal):\n 1. \\<And>x A Aa B.\n       \\<lbrakk>A \\<in> T; Aa \\<in> T; B \\<in> T; Aa \\<noteq> B; x \\<in> Aa;\n        x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> x \\<in> A", "hence \"\\<exists>A B. A \\<in> S \\<and> B \\<in> S \\<and> A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B\""], ["proof (prove)\nusing this:\n  insert a C1 \\<noteq> insert a C2\n\ngoal (1 subgoal):\n 1. \\<exists>A B.\n       A \\<in> S \\<and>\n       B \\<in> S \\<and> A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B", "using * 1"], ["proof (prove)\nusing this:\n  insert a C1 \\<noteq> insert a C2\n  insert a C1 \\<in> S\n  insert a C2 \\<in> S\n  insert a C \\<in> S\n  C \\<in> T\n  C1 \\<in> T\n  C2 \\<in> T\n  C1 \\<noteq> C2\n  x \\<in> C1\n  x \\<in> C2\n\ngoal (1 subgoal):\n 1. \\<exists>A B.\n       A \\<in> S \\<and>\n       B \\<in> S \\<and> A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B", "by auto"], ["proof (state)\nthis:\n  \\<exists>A B.\n     A \\<in> S \\<and>\n     B \\<in> S \\<and> A \\<noteq> B \\<and> x \\<in> A \\<and> x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x A Aa B.\n       \\<lbrakk>A \\<in> T; Aa \\<in> T; B \\<in> T; Aa \\<noteq> B; x \\<in> Aa;\n        x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> x \\<in> A", "from \\<open>sunflower S\\<close>[unfolded sunflower_def, rule_format, OF this *(3)]"], ["proof (chain)\npicking this:\n  x \\<in> insert a C", "have \"x \\<in> insert a C\""], ["proof (prove)\nusing this:\n  x \\<in> insert a C\n\ngoal (1 subgoal):\n 1. x \\<in> insert a C", "."], ["proof (state)\nthis:\n  x \\<in> insert a C\n\ngoal (1 subgoal):\n 1. \\<And>x A Aa B.\n       \\<lbrakk>A \\<in> T; Aa \\<in> T; B \\<in> T; Aa \\<noteq> B; x \\<in> Aa;\n        x \\<in> B\\<rbrakk>\n       \\<Longrightarrow> x \\<in> A", "with 1"], ["proof (chain)\npicking this:\n  C \\<in> T\n  C1 \\<in> T\n  C2 \\<in> T\n  C1 \\<noteq> C2\n  x \\<in> C1\n  x \\<in> C2\n  x \\<in> insert a C", "show \"x \\<in> C\""], ["proof (prove)\nusing this:\n  C \\<in> T\n  C1 \\<in> T\n  C2 \\<in> T\n  C1 \\<noteq> C2\n  x \\<in> C1\n  x \\<in> C2\n  x \\<in> insert a C\n\ngoal (1 subgoal):\n 1. x \\<in> C", "unfolding T_def h_def"], ["proof (prove)\nusing this:\n  C \\<in> (\\<lambda>B. B - {a}) ` S\n  C1 \\<in> (\\<lambda>B. B - {a}) ` S\n  C2 \\<in> (\\<lambda>B. B - {a}) ` S\n  C1 \\<noteq> C2\n  x \\<in> C1\n  x \\<in> C2\n  x \\<in> insert a C\n\ngoal (1 subgoal):\n 1. x \\<in> C", "by auto"], ["proof (state)\nthis:\n  x \\<in> C\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sunflower T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<subseteq> G; sunflower S; r \\<le> card S\\<rbrakk>\n       \\<Longrightarrow> False", "with sf"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n  \\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S", "show False"], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n  \\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<exists>S\\<subseteq>G. sunflower S \\<and> r \\<le> card S)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>F.\n     card F = (r - 1) ^ Suc k \\<and>\n     finite F \\<and>\n     (\\<forall>A\\<in>F. finite A \\<and> card A = Suc k) \\<and>\n     \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>F.\n     card F = (r - 1) ^ k \\<and>\n     finite F \\<and>\n     (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n     \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n\ngoal (1 subgoal):\n 1. r = 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. r = 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "case r: True"], ["proof (state)\nthis:\n  r = 1\n\ngoal (1 subgoal):\n 1. r = 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "with rk"], ["proof (chain)\npicking this:\n  r = 1 \\<Longrightarrow> k \\<noteq> 0\n  r = 1", "have \"k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  r = 1 \\<Longrightarrow> k \\<noteq> 0\n  r = 1\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. r = 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "then"], ["proof (chain)\npicking this:\n  k \\<noteq> 0", "obtain l where k: \"k = Suc l\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>l. k = Suc l \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (cases k, auto)"], ["proof (state)\nthis:\n  k = Suc l\n\ngoal (1 subgoal):\n 1. r = 1 \\<Longrightarrow>\n    \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       card F = (r - 1) ^ k \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)", "unfolding r k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       card F = (1 - 1) ^ Suc l \\<and>\n       finite F \\<and>\n       (\\<forall>A\\<in>F. finite A \\<and> card A = Suc l) \\<and>\n       \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> 1 \\<le> card S)", "by (intro exI[of _ \"{}\"], auto)"], ["proof (state)\nthis:\n  \\<exists>F.\n     card F = (r - 1) ^ k \\<and>\n     finite F \\<and>\n     (\\<forall>A\\<in>F. finite A \\<and> card A = k) \\<and>\n     \\<not> (\\<exists>S\\<subseteq>F. sunflower S \\<and> r \\<le> card S)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The difference between the lower and the\nupper bound on the existence of sunflowers as they have been formalized\nis @{term \\<open>fact k\\<close>}. There is more recent work with tighter bounds\n\\cite{sunflower_new}, but we only integrate the initial \nresult of Erd?s and Rado in this theory.\\<close>"], ["", "text \\<open>We further provide the Erd?s Rado lemma \n  lifted to obtain non-empty cores or cores of arbitrary cardinality.\\<close>"], ["", "lemma Erdos_Rado_sunflower_card_core: \n  assumes \"finite E\" \n    and \"\\<forall> A \\<in> F. A \\<subseteq> E \\<and> s \\<le> card A \\<and> card A \\<le> k\" \n    and \"card F > (card E choose s) * (r - 1)^k * fact k\"\n    and \"s \\<noteq> 0\" \n    and \"r \\<noteq> 0\" \n  shows \"\\<exists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S = r \\<and> card (\\<Inter> S) \\<ge> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> s \\<le> card (\\<Inter> S)", "by (rule sunflower_card_core_lift[OF assms(1) _ assms(2) _ assms(4-5), \n        of \"(r - 1)^k * fact k\"],\n      rule Erdos_Rado_sunflower, insert assms(3), auto simp: ac_simps)"], ["", "lemma Erdos_Rado_sunflower_nonempty_core: \n  assumes \"finite E\" \n    and \"\\<forall> A \\<in> F. A \\<subseteq> E \\<and> card A \\<le> k\" \n    and \"{} \\<notin> F\" \n    and \"card F > card E * (r - 1)^k * fact k\"\n  shows \"\\<exists> S. S \\<subseteq> F \\<and> sunflower S \\<and> card S = r \\<and> \\<Inter> S \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S\\<subseteq>F.\n       sunflower S \\<and> card S = r \\<and> \\<Inter> S \\<noteq> {}", "by (rule sunflower_nonempty_core_lift[OF assms(1) \n      _ assms(2-3), of \"(r - 1)^k * fact k\"],\n      rule Erdos_Rado_sunflower, insert assms(4), auto simp: ac_simps)"], ["", "end"]]}