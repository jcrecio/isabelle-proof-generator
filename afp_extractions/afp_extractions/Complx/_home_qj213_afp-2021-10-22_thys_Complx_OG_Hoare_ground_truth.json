{"file_name": "/home/qj213/afp-2021-10-22/thys/Complx/OG_Hoare.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Complx", "problem_names": ["lemma atomicsR_Skip[simp]:\n  \"atomicsR \\<Gamma> \\<Theta> a Skip r = False\"", "lemma atomicsR_Throw[simp]:\n  \"atomicsR \\<Gamma> \\<Theta> a Throw r = False\"", "lemmas oghoare_intros = \"oghoare_oghoare_seq.intros\"", "lemmas oghoare_inducts = oghoare_oghoare_seq.inducts", "lemmas oghoare_induct = oghoare_oghoare_seq.inducts(1)", "lemmas oghoare_seq_induct = oghoare_oghoare_seq.inducts(2)"], "translations": [["", "lemma atomicsR_Skip[simp]:\n  \"atomicsR \\<Gamma> \\<Theta> a Skip r = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atomicsR \\<Gamma> \\<Theta> a Skip r = False", "by (auto elim: atomicsR.cases)"], ["", "lemma atomicsR_Throw[simp]:\n  \"atomicsR \\<Gamma> \\<Theta> a Throw r = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atomicsR \\<Gamma> \\<Theta> a Throw r = False", "by (auto elim: atomicsR.cases)"], ["", "inductive\n assertionsR :: \"('s,'p,'f) body \\<Rightarrow> ('s,'p,'f) proc_assns \\<Rightarrow> 's assn \\<Rightarrow> 's assn \\<Rightarrow> ('s, 'p, 'f) ann \\<Rightarrow> ('s,'p,'f) com \\<Rightarrow> 's assn \\<Rightarrow> bool\"\n  for \\<Gamma>::\"('s,'p,'f) body\"\n  and \\<Theta> :: \" ('s,'p,'f) proc_assns\"\nwhere\n  AsSkip: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnExpr p) Skip p\"\n| AsThrow: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnExpr p) Throw p\"\n| AsBasic: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnExpr p) (Basic f) p\"\n| AsBasicSkip: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnExpr p) (Basic f) Q\"\n| AsSpec: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnExpr p) (Spec r) p\"\n| AsSpecSkip: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnExpr p) (Spec r) Q\"\n| AsAwaitSkip: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnRec r ae) (Await b e) Q\"\n| AsAwaitThrow: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnRec r ae) (Await b e) A\"\n| AsAwait: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnRec r ae) (Await b e) r\"\n| AsWhileExpr: \"assertionsR \\<Gamma> \\<Theta> i A p e a \\<Longrightarrow> assertionsR \\<Gamma> \\<Theta> Q A (AnnWhile r i p) (While b e) a\" \n| AsWhileAs: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnWhile r i p) (While b e) r\"\n| AsWhileInv: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnWhile r i p) (While b e) i\"\n| AsWhileSkip: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnWhile r i p) (While b e) Q\"\n| AsGuardExpr: \"assertionsR \\<Gamma> \\<Theta> Q A p e a \\<Longrightarrow> assertionsR \\<Gamma> \\<Theta> Q A (AnnRec r p) (Guard f b e) a\" \n| AsGuardAs: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnRec r p) (Guard f b e) r\" \n| AsDynComExpr: \"x \\<in> r \\<Longrightarrow> assertionsR \\<Gamma> \\<Theta> Q A ad (f x) a \\<Longrightarrow> assertionsR \\<Gamma> \\<Theta> Q A (AnnRec r ad) (DynCom f) a\" \n| AsDynComAs: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnRec r p) (DynCom f) r\" \n| AsCallAs: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnCall r n) (Call f) r\" \n| AsCallExpr: \"\\<Gamma> f = Some b \\<Longrightarrow> \\<Theta> f = Some as \\<Longrightarrow>\n                n < length as \\<Longrightarrow>\n                assertionsR \\<Gamma> \\<Theta> Q A (as!n) b a \\<Longrightarrow>\n               assertionsR \\<Gamma> \\<Theta> Q A (AnnCall r n) (Call f) a\" \n| AsSeqExpr1: \"assertionsR \\<Gamma> \\<Theta> (pre a2) A a1 c1 a \\<Longrightarrow>\n               assertionsR \\<Gamma> \\<Theta> Q A (AnnComp a1 a2) (Seq c1 c2) a\" \n| AsSeqExpr2: \"assertionsR \\<Gamma> \\<Theta> Q A a2 c2 a \\<Longrightarrow>\n               assertionsR \\<Gamma> \\<Theta> Q A (AnnComp a1 a2) (Seq c1 c2) a\" \n| AsCondExpr1: \"assertionsR \\<Gamma> \\<Theta> Q A a1 c1 a \\<Longrightarrow>\n               assertionsR \\<Gamma> \\<Theta> Q A (AnnBin r a1 a2) (Cond b c1 c2) a\" \n| AsCondExpr2: \"assertionsR \\<Gamma> \\<Theta> Q A a2 c2 a \\<Longrightarrow>\n               assertionsR \\<Gamma> \\<Theta> Q A (AnnBin r a1 a2) (Cond b c1 c2) a\" \n| AsCondAs: \"assertionsR \\<Gamma> \\<Theta> Q A (AnnBin r a1 a2) (Cond b c1 c2) r\" \n| AsCatchExpr1: \"assertionsR \\<Gamma> \\<Theta> Q (pre a2) a1 c1 a \\<Longrightarrow>\n               assertionsR \\<Gamma> \\<Theta> Q A (AnnComp a1 a2) (Catch c1 c2) a\" \n| AsCatchExpr2: \"assertionsR \\<Gamma> \\<Theta> Q A a2 c2 a \\<Longrightarrow>\n               assertionsR \\<Gamma> \\<Theta> Q A (AnnComp a1 a2) (Catch c1 c2) a\" \n\n| AsParallelExprs: \"i < length cs \\<Longrightarrow> assertionsR \\<Gamma> \\<Theta> (postcond (as!i)) (abrcond (as!i)) (pres (as!i)) (cs!i) a \\<Longrightarrow>\n    assertionsR \\<Gamma> \\<Theta> Q A (AnnPar as) (Parallel cs) a\" \n| AsParallelSkips: \"Qs = \\<Inter> (set (map postcond as)) \\<Longrightarrow>\n  assertionsR \\<Gamma> \\<Theta> Q A (AnnPar as) (Parallel cs) (Qs)\""], ["", "definition\n  interfree_aux :: \"('s,'p,'f) body \\<Rightarrow> ('s,'p,'f) proc_assns \\<Rightarrow> 'f set \\<Rightarrow> (('s,'p,'f) com \\<times> ('s, 'p, 'f) ann_triple \\<times> ('s,'p,'f) com \\<times> ('s, 'p, 'f) ann) \\<Rightarrow> bool\"\nwhere\n  \"interfree_aux \\<Gamma> \\<Theta> F \\<equiv> \\<lambda>(c\\<^sub>1, (P\\<^sub>1, Q\\<^sub>1, A\\<^sub>1), c\\<^sub>2, P\\<^sub>2).\n                              (\\<forall>p c .atomicsR \\<Gamma> \\<Theta> P\\<^sub>2 c\\<^sub>2 (p,c) \\<longrightarrow> \n                               \\<Gamma>\\<Turnstile>\\<^bsub>/F\\<^esub> (Q\\<^sub>1 \\<inter> p) c Q\\<^sub>1,Q\\<^sub>1  \\<and> \\<Gamma>\\<Turnstile>\\<^bsub>/F\\<^esub> (A\\<^sub>1 \\<inter> p) c A\\<^sub>1,A\\<^sub>1  \\<and>\n                                (\\<forall>a. assertionsR \\<Gamma> \\<Theta> Q\\<^sub>1 A\\<^sub>1 P\\<^sub>1 c\\<^sub>1 a \\<longrightarrow> \\<Gamma>\\<Turnstile>\\<^bsub>/F\\<^esub> (a \\<inter> p) c a,a))\""], ["", "definition\n  interfree :: \"('s,'p,'f) body \\<Rightarrow> ('s,'p,'f) proc_assns \\<Rightarrow> 'f set \\<Rightarrow> (('s, 'p, 'f) ann_triple) list \\<Rightarrow> ('s,'p,'f) com list  \\<Rightarrow> bool\"\nwhere \n  \"interfree \\<Gamma> \\<Theta> F Ps Ts \\<equiv> \\<forall>i j. i < length Ts \\<and> j < length Ts \\<and> i \\<noteq> j \\<longrightarrow> \n                         interfree_aux \\<Gamma> \\<Theta> F (Ts!i, Ps!i, Ts!j, fst (Ps!j))\""], ["", "subsection \\<open>The Owicki-Gries Logic for COMPLX\\<close>"], ["", "inductive\n  oghoare :: \"('s,'p,'f) body \\<Rightarrow> ('s,'p,'f) proc_assns \\<Rightarrow> 'f set\n              \\<Rightarrow> ('s, 'p, 'f) ann \\<Rightarrow> ('s,'p,'f) com \\<Rightarrow> 's assn \\<Rightarrow> 's assn \\<Rightarrow> bool\"\n    (\"(4_, _/ \\<turnstile>\\<^bsub>'/_\\<^esub> (_/ (_)/ _, _))\" [60,60,60,1000,1000,1000,1000]60)\nand\n  oghoare_seq :: \"('s,'p,'f) body \\<Rightarrow> ('s,'p,'f) proc_assns \\<Rightarrow> 'f set\n              \\<Rightarrow> 's assn \\<Rightarrow> ('s, 'p, 'f) ann \\<Rightarrow> ('s,'p,'f) com \\<Rightarrow> 's assn \\<Rightarrow> 's assn \\<Rightarrow> bool\"\n    (\"(4_, _/ \\<tturnstile>\\<^bsub>'/_\\<^esub> (_/ _/ (_)/ _, _))\" [60,60,60,1000,1000,1000,1000]60)\n\nwhere\n Skip: \" \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnExpr Q) Skip Q,A\"\n\n| Throw: \"\\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnExpr A) Throw Q,A\"\n\n| Basic: \"\\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnExpr {s. f s \\<in> Q}) (Basic f) Q,A\"\n\n| Spec: \"\\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnExpr {s. (\\<forall>t. (s,t) \\<in> rel \\<longrightarrow> t \\<in> Q) \\<and> (\\<exists>t. (s,t) \\<in> rel)}) (Spec rel) Q,A\"\n\n| Seq: \"\\<lbrakk>\\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>1 c\\<^sub>1 (pre P\\<^sub>2),A;\n         \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>2 c\\<^sub>2 Q,A \\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnComp P\\<^sub>1 P\\<^sub>2) (Seq c\\<^sub>1 c\\<^sub>2) Q,A\"\n\n| Catch: \"\\<lbrakk>\\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>1 c\\<^sub>1 Q,(pre P\\<^sub>2);\n           \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>2 c\\<^sub>2 Q,A \\<rbrakk> \n      \\<Longrightarrow>  \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnComp P\\<^sub>1 P\\<^sub>2) (Catch c\\<^sub>1 c\\<^sub>2) Q,A\"\n  \n| Cond: \"\\<lbrakk> \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>1 c\\<^sub>1 Q,A;\n           \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> P\\<^sub>2 c\\<^sub>2 Q,A;\n          r \\<inter> b \\<subseteq> pre P\\<^sub>1;\n          r \\<inter> -b \\<subseteq> pre P\\<^sub>2 \\<rbrakk>\n         \\<Longrightarrow> \n         \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnBin r P\\<^sub>1 P\\<^sub>2) (Cond b c\\<^sub>1 c\\<^sub>2) Q,A\"\n\n| While: \"\\<lbrakk> \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> P c i,A;\n            i \\<inter> b \\<subseteq> pre P;\n            i \\<inter> -b \\<subseteq> Q;\n            r \\<subseteq> i  \\<rbrakk>\n          \\<Longrightarrow>\n          \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnWhile r i P) (While b c) Q,A\"\n\n| Guard: \"\\<lbrakk> \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A;\n            r \\<inter> g \\<subseteq> pre P;\n            r \\<inter> -g \\<noteq> {} \\<longrightarrow> f \\<in> F\\<rbrakk> \\<Longrightarrow>\n          \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnRec r P) (Guard f g c) Q,A\"\n\n| Call: \"\\<lbrakk>  \\<Theta> p = Some as;\n          (as ! n) = P;\n          r \\<subseteq> pre P;\n          \\<Gamma> p = Some b;\n          n < length as;\n          \\<Gamma>,\\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> P b Q,A\n          \\<rbrakk> \n         \\<Longrightarrow> \n         \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnCall r n) (Call p) Q,A\"\n\n| DynCom:\n      \"r \\<subseteq> pre a \\<Longrightarrow> \\<forall>s\\<in>r. \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> a (c s) Q,A \n      \\<Longrightarrow> \n      \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnRec r a) (DynCom c) Q,A\"\n\n| Await: \"\\<lbrakk>\\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub>(r \\<inter> b) P c Q,A; atom_com c \\<rbrakk> \\<Longrightarrow>\n  \\<Gamma>, \\<Theta> \\<turnstile>\\<^bsub>/F\\<^esub> (AnnRec r P) (Await b c) Q,A\"\n\n| Parallel: \"\\<lbrakk> length as = length cs;\n               \\<forall>i < length cs. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub>(pres (as!i)) (cs!i) (postcond (as!i)),(abrcond (as!i));\n               interfree \\<Gamma> \\<Theta> F as cs;\n               \\<Inter> (set (map postcond as)) \\<subseteq> Q;\n               \\<Union> (set (map abrcond as)) \\<subseteq> A\n              \\<rbrakk>\n        \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (AnnPar as) (Parallel cs) Q,A\"\n\n| Conseq: \"\\<exists>P' Q' A'. \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (weaken_pre P P') c Q',A' \\<and> Q' \\<subseteq> Q \\<and> A' \\<subseteq> A \n           \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> P c Q,A\"\n\n| SeqSkip:   \"\\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> Q (AnnExpr x) Skip Q,A\"\n\n| SeqThrow:   \"\\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> A (AnnExpr x) Throw Q,A\"\n\n| SeqBasic:   \"\\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> {s. f s \\<in> Q} (AnnExpr x) (Basic f) Q,A\"\n\n| SeqSpec:   \"\\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> {s. (\\<forall>t. (s,t) \\<in> r \\<longrightarrow> t \\<in> Q) \\<and> (\\<exists>t. (s,t) \\<in> r)} (AnnExpr x) (Spec r) Q,A\"\n\n| SeqSeq:    \"\\<lbrakk> \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> R P\\<^sub>2 c\\<^sub>2 Q,A ; \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P P\\<^sub>1 c\\<^sub>1 R,A\\<rbrakk>\n         \\<Longrightarrow> \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P (AnnComp P\\<^sub>1 P\\<^sub>2) (Seq c\\<^sub>1 c\\<^sub>2) Q,A\"\n\n| SeqCatch:  \"\\<lbrakk>\\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> R P\\<^sub>2 c2 Q,A ; \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P P\\<^sub>1 c1 Q,R \\<rbrakk> \\<Longrightarrow>\n    \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P (AnnComp P\\<^sub>1 P\\<^sub>2) (Catch c1 c2) Q,A\"\n\n| SeqCond: \"\\<lbrakk> \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> (P \\<inter> b) P\\<^sub>1 c\\<^sub>1 Q,A;\n           \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> (P \\<inter> -b) P\\<^sub>2 c\\<^sub>2 Q,A \\<rbrakk>\n         \\<Longrightarrow> \n         \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P (AnnBin r P\\<^sub>1 P\\<^sub>2) (Cond b c\\<^sub>1 c\\<^sub>2) Q,A\"\n\n| SeqWhile: \"\\<lbrakk> \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> (P\\<inter>b) a c P,A \\<rbrakk>\n          \\<Longrightarrow>\n          \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P (AnnWhile r i a) (While b c) (P \\<inter> -b),A\"\n\n| SeqGuard: \"\\<lbrakk> \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> (P\\<inter>g) a c Q,A;\n            P \\<inter> -g \\<noteq> {} \\<Longrightarrow> f \\<in> F\\<rbrakk> \\<Longrightarrow>\n          \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P (AnnRec r a) (Guard f g c) Q,A\"\n\n| SeqCall: \"\\<lbrakk>  \\<Theta> p = Some as;\n          (as ! n) = P'';\n          \\<Gamma> p = Some b;\n          n < length as;\n          \\<Gamma>,\\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P P'' b Q,A\n          \\<rbrakk> \n         \\<Longrightarrow> \n         \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P (AnnCall r n) (Call p) Q,A\"\n\n| SeqDynCom:\n      \"r \\<subseteq> pre a \\<Longrightarrow>\n      \\<forall>s\\<in>r. \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub>P a (c s) Q,A \\<Longrightarrow>\n      P\\<subseteq>r\n      \\<Longrightarrow> \n      \\<Gamma>, \\<Theta> \\<tturnstile>\\<^bsub>/F\\<^esub> P (AnnRec r a) (DynCom c) Q,A\"\n\n| SeqConseq: \"\\<lbrakk> P \\<subseteq> P'; \\<Gamma>,\\<Theta>\\<tturnstile>\\<^bsub>/F\\<^esub> P' a c Q',A'; Q' \\<subseteq> Q; A' \\<subseteq> A \\<rbrakk>\n           \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<tturnstile>\\<^bsub>/F\\<^esub> P a c Q,A\"\n\n| SeqParallel: \"P \\<subseteq> pre (AnnPar as) \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<turnstile>\\<^bsub>/F\\<^esub> (AnnPar as) (Parallel cs) Q,A\n  \\<Longrightarrow> \\<Gamma>,\\<Theta>\\<tturnstile>\\<^bsub>/F\\<^esub> P (AnnPar as) (Parallel cs) Q,A\""], ["", "lemmas oghoare_intros = \"oghoare_oghoare_seq.intros\""], ["", "lemmas oghoare_inducts = oghoare_oghoare_seq.inducts"], ["", "lemmas oghoare_induct = oghoare_oghoare_seq.inducts(1)"], ["", "lemmas oghoare_seq_induct = oghoare_oghoare_seq.inducts(2)"], ["", "end"]]}