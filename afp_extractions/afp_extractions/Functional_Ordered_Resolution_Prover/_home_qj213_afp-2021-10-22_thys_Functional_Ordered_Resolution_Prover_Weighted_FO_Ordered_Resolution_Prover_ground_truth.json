{"file_name": "/home/qj213/afp-2021-10-22/thys/Functional_Ordered_Resolution_Prover/Weighted_FO_Ordered_Resolution_Prover.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Functional_Ordered_Resolution_Prover", "problem_names": ["lemma of_wstate_split[simp]:\n  \"(wN_of_wstate St, wP_of_wstate St, wQ_of_wstate St, n_of_wstate St) = St\"", "lemma timestamp_le_weight: \"n \\<le> weight (C, n)\"", "lemma weighted_RP_imp_RP: \"St \\<leadsto>\\<^sub>w St' \\<Longrightarrow> state_of_wstate St \\<leadsto> state_of_wstate St'\"", "lemma final_weighted_RP: \"\\<not> ({#}, {#}, Q, n) \\<leadsto>\\<^sub>w St\"", "lemma finite_Sts0: \"finite (clss_of_wstate (lhd Sts))\"", "lemmas deriv = full_chain_imp_chain[OF full_deriv]", "lemmas lhd_lmap_Sts = llist.map_sel(1)[OF chain_not_lnull[OF deriv]]", "lemma deriv_RP: \"chain (\\<leadsto>) (lmap state_of_wstate Sts)\"", "lemma finite_Sts0_RP: \"finite (clss_of_state (lhd (lmap state_of_wstate Sts)))\"", "lemma empty_P0_RP: \"P_of_state (lhd (lmap state_of_wstate Sts)) = {}\"", "lemma empty_Q0_RP: \"Q_of_state (lhd (lmap state_of_wstate Sts)) = {}\"", "lemmas Sts_thms = deriv_RP finite_Sts0_RP empty_P0_RP empty_Q0_RP", "theorem weighted_RP_model:\n  \"St \\<leadsto>\\<^sub>w St' \\<Longrightarrow> I \\<Turnstile>s grounding_of_wstate St' \\<longleftrightarrow> I \\<Turnstile>s grounding_of_wstate St\"", "lemmas ord_\\<Gamma>_saturated_upto_def = src.saturated_upto_def", "lemmas ord_\\<Gamma>_saturated_upto_complete = src.saturated_upto_complete", "lemmas ord_\\<Gamma>_contradiction_Rf = src.contradiction_Rf", "theorem weighted_RP_sound:\n  assumes \"{#} \\<in> clss_of_state (Liminf_wstate Sts)\"\n  shows \"\\<not> satisfiable (grounding_of_wstate (lhd Sts))\"", "lemma\n  wf_RP_filtered_relation: \"wf RP_filtered_relation\" and\n  wf_RP_combined_relation: \"wf RP_combined_relation\"", "lemma multiset_sum_of_Suc_f_monotone: \"N \\<subset># M \\<Longrightarrow> (\\<Sum>x \\<in># N. Suc (f x)) < (\\<Sum>x \\<in># M. Suc (f x))\"", "lemma multiset_sum_monotone_f':\n  assumes \"CC \\<subset># DD\"\n  shows \"(\\<Sum>(C, i) \\<in># CC. Suc (f C)) < (\\<Sum>(C, i) \\<in># DD. Suc (f C))\"", "lemma filter_mset_strict_subset:\n  assumes \"x \\<in># M\" and \"\\<not> p x\"\n  shows \"{#y \\<in># M. p y#} \\<subset># M\"", "lemma weighted_RP_measure_decreasing_N:\n  assumes \"St \\<leadsto>\\<^sub>w St'\" and \"(C, l) \\<in># wN_of_wstate St\"\n  shows \"(RP_filtered_measure (\\<lambda>Ci. True) St', RP_filtered_measure (\\<lambda>Ci. True) St)\n    \\<in> RP_filtered_relation\"", "lemma weighted_RP_measure_decreasing_P:\n  assumes \"St \\<leadsto>\\<^sub>w St'\" and \"(C, i) \\<in># wP_of_wstate St\"\n  shows \"(RP_combined_measure (weight (C, i)) St', RP_combined_measure (weight (C, i)) St)\n    \\<in> RP_combined_relation\"", "lemma preserve_min_or_delete_completely:\n  assumes \"St \\<leadsto>\\<^sub>w St'\" \"(C, i) \\<in># wP_of_wstate St\"\n    \"\\<forall>k. (C, k) \\<in># wP_of_wstate St \\<longrightarrow> i \\<le> k\"\n  shows \"(C, i) \\<in># wP_of_wstate St' \\<or> (\\<forall>j. (C, j) \\<notin># wP_of_wstate St')\"", "lemma preserve_min_P:\n  assumes\n    \"St \\<leadsto>\\<^sub>w St'\" \"(C, j) \\<in># wP_of_wstate St'\" and\n    \"(C, i) \\<in># wP_of_wstate St\" and\n    \"\\<forall>k. (C, k) \\<in># wP_of_wstate St \\<longrightarrow> i \\<le> k\"\n  shows \"(C, i) \\<in># wP_of_wstate St'\"", "lemma preserve_min_P_Sts:\n  assumes\n    \"enat (Suc k) < llength Sts\" and\n    \"(C, i) \\<in># wP_of_wstate (lnth Sts k)\" and\n    \"(C, j) \\<in># wP_of_wstate (lnth Sts (Suc k))\" and\n    \"\\<forall>j. (C, j) \\<in># wP_of_wstate (lnth Sts k) \\<longrightarrow> i \\<le> j\"\n  shows \"(C, i) \\<in># wP_of_wstate (lnth Sts (Suc k))\"", "lemma in_lnth_in_Supremum_ldrop:\n  assumes \"i < llength xs\" and \"x \\<in># (lnth xs i)\"\n  shows \"x \\<in> Sup_llist (lmap set_mset (ldrop (enat i) xs))\"", "lemma persistent_wclause_in_P_if_persistent_clause_in_P:\n  assumes \"C \\<in> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\"\n  shows \"\\<exists>i. (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\"", "lemma lfinite_not_LNil_nth_llast:\n  assumes \"lfinite Sts\" and \"Sts \\<noteq> LNil\"\n  shows \"\\<exists>i < llength Sts. lnth Sts i = llast Sts \\<and> (\\<forall>j < llength Sts. j \\<le> i)\"", "lemma fair_if_finite:\n  assumes fin: \"lfinite Sts\"\n  shows \"fair_state_seq (lmap state_of_wstate Sts)\"", "lemma N_of_state_state_of_wstate_wN_of_wstate:\n  assumes \"C \\<in> N_of_state (state_of_wstate St)\"\n  shows \"\\<exists>i. (C, i) \\<in># wN_of_wstate St\"", "lemma in_wN_of_wstate_in_N_of_wstate: \"(C, i) \\<in># wN_of_wstate St \\<Longrightarrow> C \\<in> N_of_wstate St\"", "lemma in_wP_of_wstate_in_P_of_wstate: \"(C, i) \\<in># wP_of_wstate St \\<Longrightarrow> C \\<in> P_of_wstate St\"", "lemma in_wQ_of_wstate_in_Q_of_wstate: \"(C, i) \\<in># wQ_of_wstate St \\<Longrightarrow> C \\<in> Q_of_wstate St\"", "lemma n_of_wstate_weighted_RP_increasing: \"St \\<leadsto>\\<^sub>w St' \\<Longrightarrow> n_of_wstate St \\<le> n_of_wstate St'\"", "lemma nth_of_wstate_monotonic:\n  assumes \"j < llength Sts\" and \"i \\<le> j\"\n  shows \"n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts j)\"", "lemma infinite_chain_relation_measure:\n  assumes\n    measure_decreasing: \"\\<And>St St'. P St \\<Longrightarrow> R St St' \\<Longrightarrow> (m St', m St) \\<in> mR\" and\n    non_infer_chain: \"chain R (ldrop (enat k) Sts)\" and\n    inf: \"llength Sts = \\<infinity>\" and\n    P: \"\\<And>i. P (lnth (ldrop (enat k) Sts) i)\"\n  shows \"chain (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse> (lmap m (ldrop (enat k) Sts))\"", "theorem weighted_RP_fair: \"fair_state_seq (lmap state_of_wstate Sts)\"", "lemma weight_mono: \"i < j \\<Longrightarrow> weight (C, i) < weight (C, j)\""], "translations": [["", "lemma of_wstate_split[simp]:\n  \"(wN_of_wstate St, wP_of_wstate St, wQ_of_wstate St, n_of_wstate St) = St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (wN_of_wstate St, wP_of_wstate St, wQ_of_wstate St, n_of_wstate St) = St", "by (cases St) auto"], ["", "abbreviation grounding_of_wstate :: \"'a wstate \\<Rightarrow> 'a clause set\" where\n  \"grounding_of_wstate St \\<equiv> grounding_of_state (state_of_wstate St)\""], ["", "abbreviation Liminf_wstate :: \"'a wstate llist \\<Rightarrow> 'a state\" where\n  \"Liminf_wstate Sts \\<equiv> Liminf_state (lmap state_of_wstate Sts)\""], ["", "lemma timestamp_le_weight: \"n \\<le> weight (C, n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> weight (C, n)", "by (induct n, simp, metis weight_mono[of k \"Suc k\" for k] Suc_le_eq le_less le_trans)"], ["", "inductive weighted_RP :: \"'a wstate \\<Rightarrow> 'a wstate \\<Rightarrow> bool\" (infix \"\\<leadsto>\\<^sub>w\" 50) where\n  tautology_deletion: \"Neg A \\<in># C \\<Longrightarrow> Pos A \\<in># C \\<Longrightarrow> (N + {#(C, i)#}, P, Q, n) \\<leadsto>\\<^sub>w (N, P, Q, n)\"\n| forward_subsumption: \"D \\<in># image_mset fst (P + Q) \\<Longrightarrow> subsumes D C \\<Longrightarrow>\n    (N + {#(C, i)#}, P, Q, n) \\<leadsto>\\<^sub>w (N, P, Q, n)\"\n| backward_subsumption_P: \"D \\<in># image_mset fst N \\<Longrightarrow> C \\<in># image_mset fst P \\<Longrightarrow>\n    strictly_subsumes D C \\<Longrightarrow> (N, P, Q, n) \\<leadsto>\\<^sub>w (N, {#(E, k) \\<in># P. E \\<noteq> C#}, Q, n)\"\n| backward_subsumption_Q: \"D \\<in># image_mset fst N \\<Longrightarrow> strictly_subsumes D C \\<Longrightarrow>\n    (N, P, Q + {#(C, i)#}, n) \\<leadsto>\\<^sub>w (N, P, Q, n)\"\n| forward_reduction: \"D + {#L'#} \\<in># image_mset fst (P + Q) \\<Longrightarrow> - L = L' \\<cdot>l \\<sigma> \\<Longrightarrow> D \\<cdot> \\<sigma> \\<subseteq># C \\<Longrightarrow>\n    (N + {#(C + {#L#}, i)#}, P, Q, n) \\<leadsto>\\<^sub>w (N + {#(C, i)#}, P, Q, n)\"\n| backward_reduction_P: \"D + {#L'#} \\<in># image_mset fst N \\<Longrightarrow> - L = L' \\<cdot>l \\<sigma> \\<Longrightarrow> D \\<cdot> \\<sigma> \\<subseteq># C \\<Longrightarrow>\n    (\\<forall>j. (C + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i) \\<Longrightarrow>\n    (N, P + {#(C + {#L#}, i)#}, Q, n) \\<leadsto>\\<^sub>w (N, P + {#(C, i)#}, Q, n)\"\n| backward_reduction_Q: \"D + {#L'#} \\<in># image_mset fst N \\<Longrightarrow> - L = L' \\<cdot>l \\<sigma> \\<Longrightarrow> D \\<cdot> \\<sigma> \\<subseteq># C \\<Longrightarrow>\n    (N, P, Q + {#(C + {#L#}, i)#}, n) \\<leadsto>\\<^sub>w (N, P + {#(C, i)#}, Q, n)\"\n| clause_processing: \"(N + {#(C, i)#}, P, Q, n) \\<leadsto>\\<^sub>w (N, P + {#(C, i)#}, Q, n)\"\n| inference_computation: \"(\\<forall>(D, j) \\<in># P. weight (C, i) \\<le> weight (D, j)) \\<Longrightarrow>\n    N = mset_set ((\\<lambda>D. (D, n)) ` concls_of\n      (inference_system.inferences_between (ord_FO_\\<Gamma> S) (set_mset (image_mset fst Q)) C)) \\<Longrightarrow>\n    ({#}, P + {#(C, i)#}, Q, n) \\<leadsto>\\<^sub>w (N, {#(D, j) \\<in># P. D \\<noteq> C#}, Q + {#(C, i)#}, Suc n)\""], ["", "lemma weighted_RP_imp_RP: \"St \\<leadsto>\\<^sub>w St' \\<Longrightarrow> state_of_wstate St \\<leadsto> state_of_wstate St'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. St \\<leadsto>\\<^sub>w St' \\<Longrightarrow>\n    state_of_wstate St \\<leadsto> state_of_wstate St'", "proof (induction rule: weighted_RP.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>A C N i P Q n.\n       \\<lbrakk>Neg A \\<in># C; Pos A \\<in># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 2. \\<And>D P Q C N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 3. \\<And>D N C P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; C \\<in># image_mset fst P;\n        strictly_subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate (N, P, Q, n) \\<leadsto>\n                         state_of_wstate\n                          (N, {#(E, k) \\<in># P. E \\<noteq> C#}, Q, n)\n 4. \\<And>D N C P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 5. \\<And>D L' P Q L \\<sigma> C N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C + {#L#}, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N + {#(C, i)#}, P, Q, n)\n 6. \\<And>D L' N L \\<sigma> C P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># C;\n        \\<forall>j.\n           (C + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P + {#(C + {#L#}, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 7. \\<And>D L' N L \\<sigma> C P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C + {#L#}, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 8. \\<And>N C i P Q n.\n       state_of_wstate (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n       state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 9. \\<And>P C i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) C))\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          ({#}, P + {#(C, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate\n                          (N, {#(D, j) \\<in># P. D \\<noteq> C#},\n                           Q + {#(C, i)#}, Suc n)", "case (backward_subsumption_P D N C P Q n)"], ["proof (state)\nthis:\n  D \\<in># image_mset fst N\n  C \\<in># image_mset fst P\n  strictly_subsumes D C\n\ngoal (9 subgoals):\n 1. \\<And>A C N i P Q n.\n       \\<lbrakk>Neg A \\<in># C; Pos A \\<in># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 2. \\<And>D P Q C N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 3. \\<And>D N C P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; C \\<in># image_mset fst P;\n        strictly_subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate (N, P, Q, n) \\<leadsto>\n                         state_of_wstate\n                          (N, {#(E, k) \\<in># P. E \\<noteq> C#}, Q, n)\n 4. \\<And>D N C P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 5. \\<And>D L' P Q L \\<sigma> C N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C + {#L#}, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N + {#(C, i)#}, P, Q, n)\n 6. \\<And>D L' N L \\<sigma> C P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># C;\n        \\<forall>j.\n           (C + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P + {#(C + {#L#}, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 7. \\<And>D L' N L \\<sigma> C P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C + {#L#}, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 8. \\<And>N C i P Q n.\n       state_of_wstate (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n       state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 9. \\<And>P C i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) C))\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          ({#}, P + {#(C, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate\n                          (N, {#(D, j) \\<in># P. D \\<noteq> C#},\n                           Q + {#(C, i)#}, Suc n)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. state_of_wstate (N, P, Q, n) \\<leadsto>\n    state_of_wstate (N, {#(E, k) \\<in># P. E \\<noteq> C#}, Q, n)", "by (rule arg_cong2[THEN iffD1, of _ _ _ _ \"(\\<leadsto>)\", OF _ _\n          RP.backward_subsumption_P[of D \"fst ` set_mset N\" C \"fst ` set_mset P - {C}\"\n            \"fst ` set_mset Q\"]])\n      (use backward_subsumption_P in auto)"], ["proof (state)\nthis:\n  state_of_wstate (N, P, Q, n) \\<leadsto>\n  state_of_wstate (N, {#(E, k) \\<in># P. E \\<noteq> C#}, Q, n)\n\ngoal (8 subgoals):\n 1. \\<And>A C N i P Q n.\n       \\<lbrakk>Neg A \\<in># C; Pos A \\<in># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 2. \\<And>D P Q C N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 3. \\<And>D N C P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 4. \\<And>D L' P Q L \\<sigma> C N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C + {#L#}, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N + {#(C, i)#}, P, Q, n)\n 5. \\<And>D L' N L \\<sigma> C P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># C;\n        \\<forall>j.\n           (C + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P + {#(C + {#L#}, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 6. \\<And>D L' N L \\<sigma> C P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C + {#L#}, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 7. \\<And>N C i P Q n.\n       state_of_wstate (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n       state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 8. \\<And>P C i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) C))\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          ({#}, P + {#(C, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate\n                          (N, {#(D, j) \\<in># P. D \\<noteq> C#},\n                           Q + {#(C, i)#}, Suc n)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>A C N i P Q n.\n       \\<lbrakk>Neg A \\<in># C; Pos A \\<in># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 2. \\<And>D P Q C N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 3. \\<And>D N C P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 4. \\<And>D L' P Q L \\<sigma> C N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C + {#L#}, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N + {#(C, i)#}, P, Q, n)\n 5. \\<And>D L' N L \\<sigma> C P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># C;\n        \\<forall>j.\n           (C + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P + {#(C + {#L#}, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 6. \\<And>D L' N L \\<sigma> C P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C + {#L#}, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 7. \\<And>N C i P Q n.\n       state_of_wstate (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n       state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 8. \\<And>P C i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) C))\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          ({#}, P + {#(C, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate\n                          (N, {#(D, j) \\<in># P. D \\<noteq> C#},\n                           Q + {#(C, i)#}, Suc n)", "case (inference_computation P C i N n Q)"], ["proof (state)\nthis:\n  \\<forall>(D, j)\\<in>#P. weight (C, i) \\<le> weight (D, j)\n  N =\n  mset_set\n   ((\\<lambda>D. (D, n)) `\n    concls_of\n     (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n       (set_mset (image_mset fst Q)) C))\n\ngoal (8 subgoals):\n 1. \\<And>A C N i P Q n.\n       \\<lbrakk>Neg A \\<in># C; Pos A \\<in># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 2. \\<And>D P Q C N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 3. \\<And>D N C P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 4. \\<And>D L' P Q L \\<sigma> C N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C + {#L#}, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N + {#(C, i)#}, P, Q, n)\n 5. \\<And>D L' N L \\<sigma> C P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># C;\n        \\<forall>j.\n           (C + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P + {#(C + {#L#}, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 6. \\<And>D L' N L \\<sigma> C P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C + {#L#}, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 7. \\<And>N C i P Q n.\n       state_of_wstate (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n       state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 8. \\<And>P C i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) C))\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          ({#}, P + {#(C, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate\n                          (N, {#(D, j) \\<in># P. D \\<noteq> C#},\n                           Q + {#(C, i)#}, Suc n)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. state_of_wstate ({#}, P + {#(C, i)#}, Q, n) \\<leadsto>\n    state_of_wstate\n     (N, {#(D, j) \\<in># P. D \\<noteq> C#}, Q + {#(C, i)#}, Suc n)", "by (rule arg_cong2[THEN iffD1, of _ _ _ _ \"(\\<leadsto>)\", OF _ _\n           RP.inference_computation[of \"fst ` set_mset N\" \"fst ` set_mset Q\" C\n             \"fst ` set_mset P - {C}\"]],\n         use inference_computation(2) finite_ord_FO_resolution_inferences_between in\n           \\<open>auto simp: comp_def image_comp inference_system.inferences_between_def\\<close>)"], ["proof (state)\nthis:\n  state_of_wstate ({#}, P + {#(C, i)#}, Q, n) \\<leadsto>\n  state_of_wstate\n   (N, {#(D, j) \\<in># P. D \\<noteq> C#}, Q + {#(C, i)#}, Suc n)\n\ngoal (7 subgoals):\n 1. \\<And>A C N i P Q n.\n       \\<lbrakk>Neg A \\<in># C; Pos A \\<in># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 2. \\<And>D P Q C N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 3. \\<And>D N C P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P, Q, n)\n 4. \\<And>D L' P Q L \\<sigma> C N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N + {#(C + {#L#}, i)#}, P, Q, n) \\<leadsto>\n                         state_of_wstate (N + {#(C, i)#}, P, Q, n)\n 5. \\<And>D L' N L \\<sigma> C P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># C;\n        \\<forall>j.\n           (C + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P + {#(C + {#L#}, i)#}, Q, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 6. \\<And>D L' N L \\<sigma> C P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>;\n        D \\<cdot> \\<sigma> \\<subseteq># C\\<rbrakk>\n       \\<Longrightarrow> state_of_wstate\n                          (N, P, Q + {#(C + {#L#}, i)#}, n) \\<leadsto>\n                         state_of_wstate (N, P + {#(C, i)#}, Q, n)\n 7. \\<And>N C i P Q n.\n       state_of_wstate (N + {#(C, i)#}, P, Q, n) \\<leadsto>\n       state_of_wstate (N, P + {#(C, i)#}, Q, n)", "qed (use RP.intros in simp_all)"], ["", "lemma final_weighted_RP: \"\\<not> ({#}, {#}, Q, n) \\<leadsto>\\<^sub>w St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> ({#}, {#}, Q, n) \\<leadsto>\\<^sub>w St", "by (auto elim: weighted_RP.cases)"], ["", "context\n  fixes\n    Sts :: \"'a wstate llist\"\n  assumes\n    full_deriv: \"full_chain (\\<leadsto>\\<^sub>w) Sts\" and\n    empty_P0: \"P_of_wstate (lhd Sts) = {}\" and\n    empty_Q0: \"Q_of_wstate (lhd Sts) = {}\"\nbegin"], ["", "lemma finite_Sts0: \"finite (clss_of_wstate (lhd Sts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (N_of_wstate (lhd Sts) \\<union> P_of_wstate (lhd Sts) \\<union>\n      Q_of_wstate (lhd Sts))", "by (cases \"lhd Sts\") auto"], ["", "lemmas deriv = full_chain_imp_chain[OF full_deriv]"], ["", "lemmas lhd_lmap_Sts = llist.map_sel(1)[OF chain_not_lnull[OF deriv]]"], ["", "lemma deriv_RP: \"chain (\\<leadsto>) (lmap state_of_wstate Sts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<leadsto>) (lmap state_of_wstate Sts)", "using deriv weighted_RP_imp_RP"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>\\<^sub>w) Sts\n  ?St \\<leadsto>\\<^sub>w ?St' \\<Longrightarrow>\n  state_of_wstate ?St \\<leadsto> state_of_wstate ?St'\n\ngoal (1 subgoal):\n 1. chain (\\<leadsto>) (lmap state_of_wstate Sts)", "by (metis chain_lmap)"], ["", "lemma finite_Sts0_RP: \"finite (clss_of_state (lhd (lmap state_of_wstate Sts)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (N_of_state (lhd (lmap state_of_wstate Sts)) \\<union>\n      P_of_state (lhd (lmap state_of_wstate Sts)) \\<union>\n      Q_of_state (lhd (lmap state_of_wstate Sts)))", "using finite_Sts0 chain_length_pos[OF deriv]"], ["proof (prove)\nusing this:\n  finite\n   (N_of_wstate (lhd Sts) \\<union> P_of_wstate (lhd Sts) \\<union>\n    Q_of_wstate (lhd Sts))\n  0 < llength Sts\n\ngoal (1 subgoal):\n 1. finite\n     (N_of_state (lhd (lmap state_of_wstate Sts)) \\<union>\n      P_of_state (lhd (lmap state_of_wstate Sts)) \\<union>\n      Q_of_state (lhd (lmap state_of_wstate Sts)))", "by auto"], ["", "lemma empty_P0_RP: \"P_of_state (lhd (lmap state_of_wstate Sts)) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_of_state (lhd (lmap state_of_wstate Sts)) = {}", "using empty_P0 chain_length_pos[OF deriv]"], ["proof (prove)\nusing this:\n  P_of_wstate (lhd Sts) = {}\n  0 < llength Sts\n\ngoal (1 subgoal):\n 1. P_of_state (lhd (lmap state_of_wstate Sts)) = {}", "by auto"], ["", "lemma empty_Q0_RP: \"Q_of_state (lhd (lmap state_of_wstate Sts)) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q_of_state (lhd (lmap state_of_wstate Sts)) = {}", "using empty_Q0 chain_length_pos[OF deriv]"], ["proof (prove)\nusing this:\n  Q_of_wstate (lhd Sts) = {}\n  0 < llength Sts\n\ngoal (1 subgoal):\n 1. Q_of_state (lhd (lmap state_of_wstate Sts)) = {}", "by auto"], ["", "lemmas Sts_thms = deriv_RP finite_Sts0_RP empty_P0_RP empty_Q0_RP"], ["", "theorem weighted_RP_model:\n  \"St \\<leadsto>\\<^sub>w St' \\<Longrightarrow> I \\<Turnstile>s grounding_of_wstate St' \\<longleftrightarrow> I \\<Turnstile>s grounding_of_wstate St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. St \\<leadsto>\\<^sub>w St' \\<Longrightarrow>\n    (I \\<Turnstile>s\n     grounding_of_clss\n      (N_of_wstate St' \\<union> P_of_wstate St' \\<union> Q_of_wstate St')) =\n    (I \\<Turnstile>s\n     grounding_of_clss\n      (N_of_wstate St \\<union> P_of_wstate St \\<union> Q_of_wstate St))", "using RP_model Sts_thms weighted_RP_imp_RP"], ["proof (prove)\nusing this:\n  ?St \\<leadsto> ?St' \\<Longrightarrow>\n  (?I \\<Turnstile>s\n   grounding_of_clss\n    (N_of_state ?St' \\<union> P_of_state ?St' \\<union> Q_of_state ?St')) =\n  (?I \\<Turnstile>s\n   grounding_of_clss\n    (N_of_state ?St \\<union> P_of_state ?St \\<union> Q_of_state ?St))\n  chain (\\<leadsto>) (lmap state_of_wstate Sts)\n  finite\n   (N_of_state (lhd (lmap state_of_wstate Sts)) \\<union>\n    P_of_state (lhd (lmap state_of_wstate Sts)) \\<union>\n    Q_of_state (lhd (lmap state_of_wstate Sts)))\n  P_of_state (lhd (lmap state_of_wstate Sts)) = {}\n  Q_of_state (lhd (lmap state_of_wstate Sts)) = {}\n  ?St \\<leadsto>\\<^sub>w ?St' \\<Longrightarrow>\n  state_of_wstate ?St \\<leadsto> state_of_wstate ?St'\n\ngoal (1 subgoal):\n 1. St \\<leadsto>\\<^sub>w St' \\<Longrightarrow>\n    (I \\<Turnstile>s\n     grounding_of_clss\n      (N_of_wstate St' \\<union> P_of_wstate St' \\<union> Q_of_wstate St')) =\n    (I \\<Turnstile>s\n     grounding_of_clss\n      (N_of_wstate St \\<union> P_of_wstate St \\<union> Q_of_wstate St))", "by (simp only: comp_def)"], ["", "abbreviation S_gQ :: \"'a clause \\<Rightarrow> 'a clause\" where\n  \"S_gQ \\<equiv> S_Q (lmap state_of_wstate Sts)\""], ["", "interpretation sq: selection S_gQ"], ["proof (prove)\ngoal (1 subgoal):\n 1. selection S_gQ", "unfolding S_Q_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. selection (S_M S (Q_of_state (Liminf_wstate Sts)))", "using S_M_selects_subseteq S_M_selects_neg_lits selection_axioms"], ["proof (prove)\nusing this:\n  selection ?S \\<Longrightarrow> S_M ?S ?M ?C \\<subseteq># ?C\n  \\<lbrakk>selection ?S; ?L \\<in># S_M ?S ?M ?C\\<rbrakk>\n  \\<Longrightarrow> is_neg ?L\n  selection S\n\ngoal (1 subgoal):\n 1. selection (S_M S (Q_of_state (Liminf_wstate Sts)))", "by unfold_locales auto"], ["", "interpretation gd: ground_resolution_with_selection S_gQ"], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_resolution_with_selection S_gQ", "by unfold_locales"], ["", "interpretation src: standard_redundancy_criterion_reductive gd.ord_\\<Gamma>"], ["proof (prove)\ngoal (1 subgoal):\n 1. standard_redundancy_criterion_reductive gd.ord_\\<Gamma>", "by unfold_locales"], ["", "interpretation src: standard_redundancy_criterion_counterex_reducing gd.ord_\\<Gamma>\n  \"ground_resolution_with_selection.INTERP S_gQ\""], ["proof (prove)\ngoal (1 subgoal):\n 1. standard_redundancy_criterion_counterex_reducing gd.ord_\\<Gamma>\n     gd.INTERP", "by unfold_locales"], ["", "lemmas ord_\\<Gamma>_saturated_upto_def = src.saturated_upto_def"], ["", "lemmas ord_\\<Gamma>_saturated_upto_complete = src.saturated_upto_complete"], ["", "lemmas ord_\\<Gamma>_contradiction_Rf = src.contradiction_Rf"], ["", "theorem weighted_RP_sound:\n  assumes \"{#} \\<in> clss_of_state (Liminf_wstate Sts)\"\n  shows \"\\<not> satisfiable (grounding_of_wstate (lhd Sts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> satisfiable\n            (grounding_of_clss\n              (N_of_wstate (lhd Sts) \\<union> P_of_wstate (lhd Sts) \\<union>\n               Q_of_wstate (lhd Sts)))", "by (rule RP_sound[OF deriv_RP assms, unfolded lhd_lmap_Sts])"], ["", "abbreviation RP_filtered_measure :: \"('a wclause \\<Rightarrow> bool) \\<Rightarrow> 'a wstate \\<Rightarrow> nat \\<times> nat \\<times> nat\" where\n  \"RP_filtered_measure \\<equiv> \\<lambda>p (N, P, Q, n).\n     (sum_mset (image_mset (\\<lambda>(C, i). Suc (size C)) {#Di \\<in># N + P + Q. p Di#}),\n      size {#Di \\<in># N. p Di#}, size {#Di \\<in># P. p Di#})\""], ["", "abbreviation RP_combined_measure :: \"nat \\<Rightarrow> 'a wstate \\<Rightarrow> nat \\<times> (nat \\<times> nat \\<times> nat) \\<times> (nat \\<times> nat \\<times> nat)\" where\n  \"RP_combined_measure \\<equiv> \\<lambda>w St.\n     (w + 1 - n_of_wstate St, RP_filtered_measure (\\<lambda>(C, i). i \\<le> w) St,\n      RP_filtered_measure (\\<lambda>Ci. True) St)\""], ["", "abbreviation (input) RP_filtered_relation :: \"((nat \\<times> nat \\<times> nat) \\<times> (nat \\<times> nat \\<times> nat)) set\" where\n  \"RP_filtered_relation \\<equiv> natLess <*lex*> natLess <*lex*> natLess\""], ["", "abbreviation (input) RP_combined_relation :: \"((nat \\<times> ((nat \\<times> nat \\<times> nat) \\<times> (nat \\<times> nat \\<times> nat))) \\<times>\n    (nat \\<times> ((nat \\<times> nat \\<times> nat) \\<times> (nat \\<times> nat \\<times> nat)))) set\" where\n  \"RP_combined_relation \\<equiv> natLess <*lex*> RP_filtered_relation <*lex*> RP_filtered_relation\""], ["", "abbreviation \"(fst3 :: 'b * 'c * 'd \\<Rightarrow> 'b) \\<equiv> fst\""], ["", "abbreviation \"(snd3 :: 'b * 'c * 'd \\<Rightarrow> 'c) \\<equiv> \\<lambda>x. fst (snd x)\""], ["", "abbreviation \"(trd3 :: 'b * 'c * 'd \\<Rightarrow> 'd) \\<equiv> \\<lambda>x. snd (snd x)\""], ["", "lemma\n  wf_RP_filtered_relation: \"wf RP_filtered_relation\" and\n  wf_RP_combined_relation: \"wf RP_combined_relation\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (natLess <*lex*> natLess <*lex*> natLess) &&&\n    wf (natLess <*lex*>\n        (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n        natLess <*lex*> natLess <*lex*> natLess)", "unfolding natLess_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf ({(x, y). x < y} <*lex*> {(x, y). x < y} <*lex*> {(x, y). x < y}) &&&\n    wf ({(x, y). x < y} <*lex*>\n        ({(x, y). x < y} <*lex*>\n         {(x, y). x < y} <*lex*> {(x, y). x < y}) <*lex*>\n        {(x, y). x < y} <*lex*> {(x, y). x < y} <*lex*> {(x, y). x < y})", "using wf_less wf_mult"], ["proof (prove)\nusing this:\n  wf {(x, y). x < y}\n  wf ?r \\<Longrightarrow> wf (mult ?r)\n\ngoal (1 subgoal):\n 1. wf ({(x, y). x < y} <*lex*> {(x, y). x < y} <*lex*> {(x, y). x < y}) &&&\n    wf ({(x, y). x < y} <*lex*>\n        ({(x, y). x < y} <*lex*>\n         {(x, y). x < y} <*lex*> {(x, y). x < y}) <*lex*>\n        {(x, y). x < y} <*lex*> {(x, y). x < y} <*lex*> {(x, y). x < y})", "by auto"], ["", "lemma multiset_sum_of_Suc_f_monotone: \"N \\<subset># M \\<Longrightarrow> (\\<Sum>x \\<in># N. Suc (f x)) < (\\<Sum>x \\<in># M. Suc (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subset># M \\<Longrightarrow>\n    (\\<Sum>x\\<in>#N. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))", "proof (induction N arbitrary: M)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M.\n       {#} \\<subset># M \\<Longrightarrow>\n       (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n 2. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "case empty"], ["proof (state)\nthis:\n  {#} \\<subset># M\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       {#} \\<subset># M \\<Longrightarrow>\n       (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n 2. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "then"], ["proof (chain)\npicking this:\n  {#} \\<subset># M", "obtain y where \"y \\<in># M\""], ["proof (prove)\nusing this:\n  {#} \\<subset># M\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in># M \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  y \\<in># M\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       {#} \\<subset># M \\<Longrightarrow>\n       (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n 2. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "then"], ["proof (chain)\npicking this:\n  y \\<in># M", "have \"(\\<Sum>x \\<in># M. 1) = (\\<Sum>x \\<in># M - {#y#} + {#y#}. 1)\""], ["proof (prove)\nusing this:\n  y \\<in># M\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#M. (1::'c)) =\n    (\\<Sum>x\\<in>#remove1_mset y M + {#y#}. (1::'c))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>#M. (1::?'c1)) =\n  (\\<Sum>x\\<in>#remove1_mset y M + {#y#}. (1::?'c1))\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       {#} \\<subset># M \\<Longrightarrow>\n       (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n 2. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>#M. (1::?'c1)) =\n  (\\<Sum>x\\<in>#remove1_mset y M + {#y#}. (1::?'c1))\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       {#} \\<subset># M \\<Longrightarrow>\n       (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n 2. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "have \"... = (\\<Sum>x \\<in># M - {#y#}. 1) + (\\<Sum>x \\<in># {#y#}. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#remove1_mset y M + {#y#}. (1::'c)) =\n    (\\<Sum>x\\<in>#remove1_mset y M. (1::'c)) + (\\<Sum>x\\<in>#{#y#}. (1::'c))", "by (metis image_mset_union sum_mset.union)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>#remove1_mset y M + {#y#}. (1::?'c2)) =\n  (\\<Sum>x\\<in>#remove1_mset y M. (1::?'c2)) +\n  (\\<Sum>x\\<in>#{#y#}. (1::?'c2))\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       {#} \\<subset># M \\<Longrightarrow>\n       (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n 2. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>#remove1_mset y M + {#y#}. (1::?'c2)) =\n  (\\<Sum>x\\<in>#remove1_mset y M. (1::?'c2)) +\n  (\\<Sum>x\\<in>#{#y#}. (1::?'c2))\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       {#} \\<subset># M \\<Longrightarrow>\n       (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n 2. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "have \"... > (0 :: nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (\\<Sum>x\\<in>#remove1_mset y M. 1) + (\\<Sum>x\\<in>#{#y#}. 1)", "by auto"], ["proof (state)\nthis:\n  0 < (\\<Sum>x\\<in>#remove1_mset y M. 1) + (\\<Sum>x\\<in>#{#y#}. 1)\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       {#} \\<subset># M \\<Longrightarrow>\n       (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n 2. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "finally"], ["proof (chain)\npicking this:\n  0 < (\\<Sum>x\\<in>#M. 1)", "have \"0 < (\\<Sum>x \\<in># M. Suc (f x))\""], ["proof (prove)\nusing this:\n  0 < (\\<Sum>x\\<in>#M. 1)\n\ngoal (1 subgoal):\n 1. 0 < (\\<Sum>x\\<in>#M. Suc (f x))", "by (fastforce intro: gr_zeroI)"], ["proof (state)\nthis:\n  0 < (\\<Sum>x\\<in>#M. Suc (f x))\n\ngoal (2 subgoals):\n 1. \\<And>M.\n       {#} \\<subset># M \\<Longrightarrow>\n       (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n 2. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "then"], ["proof (chain)\npicking this:\n  0 < (\\<Sum>x\\<in>#M. Suc (f x))", "show ?case"], ["proof (prove)\nusing this:\n  0 < (\\<Sum>x\\<in>#M. Suc (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))", "using empty"], ["proof (prove)\nusing this:\n  0 < (\\<Sum>x\\<in>#M. Suc (f x))\n  {#} \\<subset># M\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>#{#}. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n\ngoal (1 subgoal):\n 1. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "case (add x N)"], ["proof (state)\nthis:\n  N \\<subset># ?M \\<Longrightarrow>\n  (\\<Sum>x\\<in>#N. Suc (f x)) < (\\<Sum>x\\<in>#?M. Suc (f x))\n  add_mset x N \\<subset># M\n\ngoal (1 subgoal):\n 1. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "from this(2)"], ["proof (chain)\npicking this:\n  add_mset x N \\<subset># M", "have \"(\\<Sum>y \\<in># N. Suc (f y)) < (\\<Sum>y \\<in># M - {#x#}. Suc (f y))\""], ["proof (prove)\nusing this:\n  add_mset x N \\<subset># M\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>#N. Suc (f y)) < (\\<Sum>y\\<in>#remove1_mset x M. Suc (f y))", "using add(1)[of \"M - {#x#}\"]"], ["proof (prove)\nusing this:\n  add_mset x N \\<subset># M\n  N \\<subset># remove1_mset x M \\<Longrightarrow>\n  (\\<Sum>x\\<in>#N. Suc (f x)) < (\\<Sum>x\\<in>#remove1_mset x M. Suc (f x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>#N. Suc (f y)) < (\\<Sum>y\\<in>#remove1_mset x M. Suc (f y))", "by (simp add: insert_union_subset_iff)"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>#N. Suc (f y)) < (\\<Sum>y\\<in>#remove1_mset x M. Suc (f y))\n\ngoal (1 subgoal):\n 1. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>#N. Suc (f y)) < (\\<Sum>y\\<in>#remove1_mset x M. Suc (f y))\n\ngoal (1 subgoal):\n 1. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "have \"add_mset x (remove1_mset x M) = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. add_mset x (remove1_mset x M) = M", "by (meson add.prems add_mset_remove_trivial_If mset_subset_insertD)"], ["proof (state)\nthis:\n  add_mset x (remove1_mset x M) = M\n\ngoal (1 subgoal):\n 1. \\<And>x N M.\n       \\<lbrakk>\\<And>M.\n                   N \\<subset># M \\<Longrightarrow>\n                   (\\<Sum>x\\<in>#N. Suc (f x))\n                   < (\\<Sum>x\\<in>#M. Suc (f x));\n        add_mset x N \\<subset># M\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>x\\<in>#add_mset x N. Suc (f x))\n                         < (\\<Sum>x\\<in>#M. Suc (f x))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>y\\<in>#N. Suc (f y)) < (\\<Sum>y\\<in>#remove1_mset x M. Suc (f y))\n  add_mset x (remove1_mset x M) = M", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Sum>y\\<in>#N. Suc (f y)) < (\\<Sum>y\\<in>#remove1_mset x M. Suc (f y))\n  add_mset x (remove1_mset x M) = M\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#add_mset x N. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))", "by (metis (no_types) add.commute add_less_cancel_right sum_mset.insert)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>#add_mset x N. Suc (f x)) < (\\<Sum>x\\<in>#M. Suc (f x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma multiset_sum_monotone_f':\n  assumes \"CC \\<subset># DD\"\n  shows \"(\\<Sum>(C, i) \\<in># CC. Suc (f C)) < (\\<Sum>(C, i) \\<in># DD. Suc (f C))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(C, i)\\<in>#CC. Suc (f C)) < (\\<Sum>(C, i)\\<in>#DD. Suc (f C))", "using multiset_sum_of_Suc_f_monotone[OF assms, of \"f \\<circ> fst\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>#CC. Suc ((f \\<circ> fst) x))\n  < (\\<Sum>x\\<in>#DD. Suc ((f \\<circ> fst) x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(C, i)\\<in>#CC. Suc (f C)) < (\\<Sum>(C, i)\\<in>#DD. Suc (f C))", "by (metis (mono_tags) comp_apply image_mset_cong2 split_beta)"], ["", "lemma filter_mset_strict_subset:\n  assumes \"x \\<in># M\" and \"\\<not> p x\"\n  shows \"{#y \\<in># M. p y#} \\<subset># M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_mset p M \\<subset># M", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. filter_mset p M \\<subset># M", "have subseteq: \"{#E \\<in># M. p E#} \\<subseteq># M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_mset p M \\<subseteq># M", "by auto"], ["proof (state)\nthis:\n  filter_mset p M \\<subseteq># M\n\ngoal (1 subgoal):\n 1. filter_mset p M \\<subset># M", "have \"count {#E \\<in># M. p E#} x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. count (filter_mset p M) x = 0", "using assms"], ["proof (prove)\nusing this:\n  x \\<in># M\n  \\<not> p x\n\ngoal (1 subgoal):\n 1. count (filter_mset p M) x = 0", "by auto"], ["proof (state)\nthis:\n  count (filter_mset p M) x = 0\n\ngoal (1 subgoal):\n 1. filter_mset p M \\<subset># M", "moreover"], ["proof (state)\nthis:\n  count (filter_mset p M) x = 0\n\ngoal (1 subgoal):\n 1. filter_mset p M \\<subset># M", "have \"0 < count M x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < count M x", "using assms"], ["proof (prove)\nusing this:\n  x \\<in># M\n  \\<not> p x\n\ngoal (1 subgoal):\n 1. 0 < count M x", "by auto"], ["proof (state)\nthis:\n  0 < count M x\n\ngoal (1 subgoal):\n 1. filter_mset p M \\<subset># M", "ultimately"], ["proof (chain)\npicking this:\n  count (filter_mset p M) x = 0\n  0 < count M x", "have lt_count: \"count {#y \\<in># M. p y#} x < count M x\""], ["proof (prove)\nusing this:\n  count (filter_mset p M) x = 0\n  0 < count M x\n\ngoal (1 subgoal):\n 1. count (filter_mset p M) x < count M x", "by auto"], ["proof (state)\nthis:\n  count (filter_mset p M) x < count M x\n\ngoal (1 subgoal):\n 1. filter_mset p M \\<subset># M", "then"], ["proof (chain)\npicking this:\n  count (filter_mset p M) x < count M x", "show ?thesis"], ["proof (prove)\nusing this:\n  count (filter_mset p M) x < count M x\n\ngoal (1 subgoal):\n 1. filter_mset p M \\<subset># M", "using subseteq"], ["proof (prove)\nusing this:\n  count (filter_mset p M) x < count M x\n  filter_mset p M \\<subseteq># M\n\ngoal (1 subgoal):\n 1. filter_mset p M \\<subset># M", "by (metis less_not_refl2 subset_mset.le_neq_trans)"], ["proof (state)\nthis:\n  filter_mset p M \\<subset># M\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weighted_RP_measure_decreasing_N:\n  assumes \"St \\<leadsto>\\<^sub>w St'\" and \"(C, l) \\<in># wN_of_wstate St\"\n  shows \"(RP_filtered_measure (\\<lambda>Ci. True) St', RP_filtered_measure (\\<lambda>Ci. True) St)\n    \\<in> RP_filtered_relation\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (RP_filtered_measure (\\<lambda>Di. True) St',\n     RP_filtered_measure (\\<lambda>Di. True) St)\n    \\<in> natLess <*lex*> natLess <*lex*> natLess", "using assms"], ["proof (prove)\nusing this:\n  St \\<leadsto>\\<^sub>w St'\n  (C, l) \\<in># wN_of_wstate St\n\ngoal (1 subgoal):\n 1. (RP_filtered_measure (\\<lambda>Di. True) St',\n     RP_filtered_measure (\\<lambda>Di. True) St)\n    \\<in> natLess <*lex*> natLess <*lex*> natLess", "proof (induction rule: weighted_RP.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>A Ca N i P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q + {#(Ca, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N + {#(Ca + {#L#}, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca + {#L#}, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i;\n        (C, l)\n        \\<in># wN_of_wstate (N, P + {#(Ca + {#L#}, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca + {#L#}, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N, P, Q + {#(Ca + {#L#}, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca + {#L#}, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca i P Q n.\n       (C, l)\n       \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n) \\<Longrightarrow>\n       (RP_filtered_measure (\\<lambda>Di. True) (N, P + {#(Ca, i)#}, Q, n),\n        RP_filtered_measure (\\<lambda>Di. True) (N + {#(Ca, i)#}, P, Q, n))\n       \\<in> natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, l) \\<in># wN_of_wstate ({#}, P + {#(Ca, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, i)#}, Suc n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           ({#}, P + {#(Ca, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess", "case (backward_subsumption_P D N C' P Q n)"], ["proof (state)\nthis:\n  D \\<in># image_mset fst N\n  C' \\<in># image_mset fst P\n  strictly_subsumes D C'\n  (C, l) \\<in># wN_of_wstate (N, P, Q, n)\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N i P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q + {#(Ca, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N + {#(Ca + {#L#}, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca + {#L#}, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i;\n        (C, l)\n        \\<in># wN_of_wstate (N, P + {#(Ca + {#L#}, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca + {#L#}, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N, P, Q + {#(Ca + {#L#}, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca + {#L#}, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca i P Q n.\n       (C, l)\n       \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n) \\<Longrightarrow>\n       (RP_filtered_measure (\\<lambda>Di. True) (N, P + {#(Ca, i)#}, Q, n),\n        RP_filtered_measure (\\<lambda>Di. True) (N + {#(Ca, i)#}, P, Q, n))\n       \\<in> natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, l) \\<in># wN_of_wstate ({#}, P + {#(Ca, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, i)#}, Suc n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           ({#}, P + {#(Ca, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  D \\<in># image_mset fst N\n  C' \\<in># image_mset fst P\n  strictly_subsumes D C'\n  (C, l) \\<in># wN_of_wstate (N, P, Q, n)", "obtain i' where  \"(C', i') \\<in># P\""], ["proof (prove)\nusing this:\n  D \\<in># image_mset fst N\n  C' \\<in># image_mset fst P\n  strictly_subsumes D C'\n  (C, l) \\<in># wN_of_wstate (N, P, Q, n)\n\ngoal (1 subgoal):\n 1. (\\<And>i'. (C', i') \\<in># P \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (C', i') \\<in># P\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N i P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q + {#(Ca, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N + {#(Ca + {#L#}, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca + {#L#}, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i;\n        (C, l)\n        \\<in># wN_of_wstate (N, P + {#(Ca + {#L#}, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca + {#L#}, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N, P, Q + {#(Ca + {#L#}, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca + {#L#}, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca i P Q n.\n       (C, l)\n       \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n) \\<Longrightarrow>\n       (RP_filtered_measure (\\<lambda>Di. True) (N, P + {#(Ca, i)#}, Q, n),\n        RP_filtered_measure (\\<lambda>Di. True) (N + {#(Ca, i)#}, P, Q, n))\n       \\<in> natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, l) \\<in># wN_of_wstate ({#}, P + {#(Ca, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, i)#}, Suc n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           ({#}, P + {#(Ca, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  (C', i') \\<in># P", "have \"{#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P\""], ["proof (prove)\nusing this:\n  (C', i') \\<in># P\n\ngoal (1 subgoal):\n 1. {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P", "using filter_mset_strict_subset[of \"(C', i')\" P \"\\<lambda>X. \\<not>fst X =  C'\"]"], ["proof (prove)\nusing this:\n  (C', i') \\<in># P\n  \\<lbrakk>(C', i') \\<in># P; \\<not> fst (C', i') \\<noteq> C'\\<rbrakk>\n  \\<Longrightarrow> {#y \\<in># P. fst y \\<noteq> C'#} \\<subset># P\n\ngoal (1 subgoal):\n 1. {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P", "by (metis (mono_tags, lifting) filter_mset_cong fst_conv prod.case_eq_if)"], ["proof (state)\nthis:\n  {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N i P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q + {#(Ca, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N + {#(Ca + {#L#}, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca + {#L#}, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i;\n        (C, l)\n        \\<in># wN_of_wstate (N, P + {#(Ca + {#L#}, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca + {#L#}, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N, P, Q + {#(Ca + {#L#}, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca + {#L#}, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca i P Q n.\n       (C, l)\n       \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n) \\<Longrightarrow>\n       (RP_filtered_measure (\\<lambda>Di. True) (N, P + {#(Ca, i)#}, Q, n),\n        RP_filtered_measure (\\<lambda>Di. True) (N + {#(Ca, i)#}, P, Q, n))\n       \\<in> natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, l) \\<in># wN_of_wstate ({#}, P + {#(Ca, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, i)#}, Suc n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           ({#}, P + {#(Ca, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P", "have \"(\\<Sum>(C, i) \\<in># {#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C)) < (\\<Sum>(C, i) \\<in># P. Suc (size C))\""], ["proof (prove)\nusing this:\n  {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P\n\ngoal (1 subgoal):\n 1. (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n    < (\\<Sum>(C, i)\\<in>#P. Suc (size C))", "using multiset_sum_monotone_f'[of \"{#(E, k) \\<in># P. E \\<noteq> C'#}\" P size]"], ["proof (prove)\nusing this:\n  {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P\n  {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P \\<Longrightarrow>\n  (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n  < (\\<Sum>(C, i)\\<in>#P. Suc (size C))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n    < (\\<Sum>(C, i)\\<in>#P. Suc (size C))", "by metis"], ["proof (state)\nthis:\n  (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n  < (\\<Sum>(C, i)\\<in>#P. Suc (size C))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N i P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q + {#(Ca, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N + {#(Ca + {#L#}, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca + {#L#}, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i;\n        (C, l)\n        \\<in># wN_of_wstate (N, P + {#(Ca + {#L#}, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca + {#L#}, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N, P, Q + {#(Ca + {#L#}, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca + {#L#}, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca i P Q n.\n       (C, l)\n       \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n) \\<Longrightarrow>\n       (RP_filtered_measure (\\<lambda>Di. True) (N, P + {#(Ca, i)#}, Q, n),\n        RP_filtered_measure (\\<lambda>Di. True) (N + {#(Ca, i)#}, P, Q, n))\n       \\<in> natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, l) \\<in># wN_of_wstate ({#}, P + {#(Ca, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, i)#}, Suc n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           ({#}, P + {#(Ca, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n  < (\\<Sum>(C, i)\\<in>#P. Suc (size C))", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n  < (\\<Sum>(C, i)\\<in>#P. Suc (size C))\n\ngoal (1 subgoal):\n 1. (RP_filtered_measure (\\<lambda>Di. True)\n      (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n),\n     RP_filtered_measure (\\<lambda>Di. True) (N, P, Q, n))\n    \\<in> natLess <*lex*> natLess <*lex*> natLess", "unfolding natLess_def"], ["proof (prove)\nusing this:\n  (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n  < (\\<Sum>(C, i)\\<in>#P. Suc (size C))\n\ngoal (1 subgoal):\n 1. (RP_filtered_measure (\\<lambda>Di. True)\n      (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n),\n     RP_filtered_measure (\\<lambda>Di. True) (N, P, Q, n))\n    \\<in> {(x, y). x < y} <*lex*> {(x, y). x < y} <*lex*> {(x, y). x < y}", "by auto"], ["proof (state)\nthis:\n  (RP_filtered_measure (\\<lambda>Di. True)\n    (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n),\n   RP_filtered_measure (\\<lambda>Di. True) (N, P, Q, n))\n  \\<in> natLess <*lex*> natLess <*lex*> natLess\n\ngoal (8 subgoals):\n 1. \\<And>A Ca N i P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N i n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q i n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, l) \\<in># wN_of_wstate (N, P, Q + {#(Ca, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D L' P Q L \\<sigma> Ca N i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N + {#(Ca + {#L#}, i)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca, i)#}, P, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N + {#(Ca + {#L#}, i)#}, P, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' N L \\<sigma> Ca P i Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i;\n        (C, l)\n        \\<in># wN_of_wstate (N, P + {#(Ca + {#L#}, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca + {#L#}, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P Q i n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, l)\n        \\<in># wN_of_wstate (N, P, Q + {#(Ca + {#L#}, i)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P + {#(Ca, i)#}, Q, n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           (N, P, Q + {#(Ca + {#L#}, i)#}, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>N Ca i P Q n.\n       (C, l)\n       \\<in># wN_of_wstate (N + {#(Ca, i)#}, P, Q, n) \\<Longrightarrow>\n       (RP_filtered_measure (\\<lambda>Di. True) (N, P + {#(Ca, i)#}, Q, n),\n        RP_filtered_measure (\\<lambda>Di. True) (N + {#(Ca, i)#}, P, Q, n))\n       \\<in> natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>P Ca i N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, i) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, l) \\<in># wN_of_wstate ({#}, P + {#(Ca, i)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True)\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, i)#}, Suc n),\n                          RP_filtered_measure (\\<lambda>Di. True)\n                           ({#}, P + {#(Ca, i)#}, Q, n))\n                         \\<in> natLess <*lex*> natLess <*lex*> natLess", "qed (auto simp: natLess_def)"], ["", "lemma weighted_RP_measure_decreasing_P:\n  assumes \"St \\<leadsto>\\<^sub>w St'\" and \"(C, i) \\<in># wP_of_wstate St\"\n  shows \"(RP_combined_measure (weight (C, i)) St', RP_combined_measure (weight (C, i)) St)\n    \\<in> RP_combined_relation\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (RP_combined_measure (weight (C, i)) St',\n     RP_combined_measure (weight (C, i)) St)\n    \\<in> natLess <*lex*>\n          (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n          natLess <*lex*> natLess <*lex*> natLess", "using assms"], ["proof (prove)\nusing this:\n  St \\<leadsto>\\<^sub>w St'\n  (C, i) \\<in># wP_of_wstate St\n\ngoal (1 subgoal):\n 1. (RP_combined_measure (weight (C, i)) St',\n     RP_combined_measure (weight (C, i)) St)\n    \\<in> natLess <*lex*>\n          (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n          natLess <*lex*> natLess <*lex*> natLess", "proof (induction rule: weighted_RP.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "case (backward_subsumption_P D N C' P Q n)"], ["proof (state)\nthis:\n  D \\<in># image_mset fst N\n  C' \\<in># image_mset fst P\n  strictly_subsumes D C'\n  (C, i) \\<in># wP_of_wstate (N, P, Q, n)\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "define St where \"St = (N, P, Q, n)\""], ["proof (state)\nthis:\n  St = (N, P, Q, n)\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "define P' where \"P' = {#(E, k) \\<in># P. E \\<noteq> C'#}\""], ["proof (state)\nthis:\n  P' = {#(E, k) \\<in># P. E \\<noteq> C'#}\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "define St' where \"St' = (N, P', Q, n)\""], ["proof (state)\nthis:\n  St' = (N, P', Q, n)\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "from backward_subsumption_P"], ["proof (chain)\npicking this:\n  D \\<in># image_mset fst N\n  C' \\<in># image_mset fst P\n  strictly_subsumes D C'\n  (C, i) \\<in># wP_of_wstate (N, P, Q, n)", "obtain i' where  \"(C', i') \\<in># P\""], ["proof (prove)\nusing this:\n  D \\<in># image_mset fst N\n  C' \\<in># image_mset fst P\n  strictly_subsumes D C'\n  (C, i) \\<in># wP_of_wstate (N, P, Q, n)\n\ngoal (1 subgoal):\n 1. (\\<And>i'. (C', i') \\<in># P \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (C', i') \\<in># P\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  (C', i') \\<in># P", "have P'_sub_P: \"P' \\<subset># P\""], ["proof (prove)\nusing this:\n  (C', i') \\<in># P\n\ngoal (1 subgoal):\n 1. P' \\<subset># P", "unfolding P'_def"], ["proof (prove)\nusing this:\n  (C', i') \\<in># P\n\ngoal (1 subgoal):\n 1. {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P", "using filter_mset_strict_subset[of \"(C', i')\" P \"\\<lambda>Dj. fst Dj \\<noteq> C'\"]"], ["proof (prove)\nusing this:\n  (C', i') \\<in># P\n  \\<lbrakk>(C', i') \\<in># P; \\<not> fst (C', i') \\<noteq> C'\\<rbrakk>\n  \\<Longrightarrow> {#y \\<in># P. fst y \\<noteq> C'#} \\<subset># P\n\ngoal (1 subgoal):\n 1. {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P", "by (metis (no_types, lifting) filter_mset_cong fst_conv prod.case_eq_if)"], ["proof (state)\nthis:\n  P' \\<subset># P\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "have P'_subeq_P_filter:\n    \"{#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#} \\<subseteq># {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#} \\<subseteq>#\n    {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}", "using P'_sub_P"], ["proof (prove)\nusing this:\n  P' \\<subset># P\n\ngoal (1 subgoal):\n 1. {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#} \\<subseteq>#\n    {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}", "by (auto intro: multiset_filter_mono)"], ["proof (state)\nthis:\n  {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#} \\<subseteq>#\n  {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "have \"fst3 (RP_combined_measure (weight (C, i)) St')\n    \\<le> fst3 (RP_combined_measure (weight (C, i)) St)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (RP_combined_measure (weight (C, i)) St')\n    \\<le> fst (RP_combined_measure (weight (C, i)) St)", "unfolding St'_def St_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (RP_combined_measure (weight (C, i)) (N, P', Q, n))\n    \\<le> fst (RP_combined_measure (weight (C, i)) (N, P, Q, n))", "by auto"], ["proof (state)\nthis:\n  fst (RP_combined_measure (weight (C, i)) St')\n  \\<le> fst (RP_combined_measure (weight (C, i)) St)\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "moreover"], ["proof (state)\nthis:\n  fst (RP_combined_measure (weight (C, i)) St')\n  \\<le> fst (RP_combined_measure (weight (C, i)) St)\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "have \"(\\<Sum>(C, i) \\<in># {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}. Suc (size C))\n    \\<le> (\\<Sum>x \\<in># {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}. case x of (C, i) \\<Rightarrow> Suc (size C))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(C,\n        i)\\<in>#{#(Ca, ia) \\<in># P'.\n                 ia \\<le> weight (C, i)#}. Suc (size C))\n    \\<le> (\\<Sum>x\\<in>#{#(Ca, ia) \\<in># P.\n                         ia \\<le> weight\n                                   (C, i)#}. case x of\n       (C, i) \\<Rightarrow> Suc (size C))", "using P'_subeq_P_filter"], ["proof (prove)\nusing this:\n  {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#} \\<subseteq>#\n  {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}\n\ngoal (1 subgoal):\n 1. (\\<Sum>(C,\n        i)\\<in>#{#(Ca, ia) \\<in># P'.\n                 ia \\<le> weight (C, i)#}. Suc (size C))\n    \\<le> (\\<Sum>x\\<in>#{#(Ca, ia) \\<in># P.\n                         ia \\<le> weight\n                                   (C, i)#}. case x of\n       (C, i) \\<Rightarrow> Suc (size C))", "by (rule sum_image_mset_mono)"], ["proof (state)\nthis:\n  (\\<Sum>(C,\n      i)\\<in>#{#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}. Suc (size C))\n  \\<le> (\\<Sum>x\\<in>#{#(Ca, ia) \\<in># P.\n                       ia \\<le> weight\n                                 (C, i)#}. case x of\n     (C, i) \\<Rightarrow> Suc (size C))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>(C,\n      i)\\<in>#{#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}. Suc (size C))\n  \\<le> (\\<Sum>x\\<in>#{#(Ca, ia) \\<in># P.\n                       ia \\<le> weight\n                                 (C, i)#}. case x of\n     (C, i) \\<Rightarrow> Suc (size C))", "have \"fst3 (snd3 (RP_combined_measure (weight (C, i)) St'))\n    \\<le> fst3 (snd3 (RP_combined_measure (weight (C, i)) St))\""], ["proof (prove)\nusing this:\n  (\\<Sum>(C,\n      i)\\<in>#{#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}. Suc (size C))\n  \\<le> (\\<Sum>x\\<in>#{#(Ca, ia) \\<in># P.\n                       ia \\<le> weight\n                                 (C, i)#}. case x of\n     (C, i) \\<Rightarrow> Suc (size C))\n\ngoal (1 subgoal):\n 1. fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n    \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))", "unfolding St'_def St_def"], ["proof (prove)\nusing this:\n  (\\<Sum>(C,\n      i)\\<in>#{#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}. Suc (size C))\n  \\<le> (\\<Sum>x\\<in>#{#(Ca, ia) \\<in># P.\n                       ia \\<le> weight\n                                 (C, i)#}. case x of\n     (C, i) \\<Rightarrow> Suc (size C))\n\ngoal (1 subgoal):\n 1. fst (fst (snd (RP_combined_measure (weight (C, i)) (N, P', Q, n))))\n    \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) (N, P, Q, n))))", "by auto"], ["proof (state)\nthis:\n  fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "moreover"], ["proof (state)\nthis:\n  fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "have \"snd3 (snd3 (RP_combined_measure (weight (C, i)) St'))\n    \\<le> snd3 (snd3 (RP_combined_measure (weight (C, i)) St))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n    \\<le> fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))", "unfolding St'_def St_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                         (N, P', Q, n)))))\n    \\<le> fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                               (N, P, Q, n)))))", "by auto"], ["proof (state)\nthis:\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  \\<le> fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "moreover"], ["proof (state)\nthis:\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  \\<le> fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "from P'_subeq_P_filter"], ["proof (chain)\npicking this:\n  {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#} \\<subseteq>#\n  {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}", "have \"size {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}\n    \\<le> size {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}\""], ["proof (prove)\nusing this:\n  {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#} \\<subseteq>#\n  {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}\n\ngoal (1 subgoal):\n 1. size {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}\n    \\<le> size {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}", "by (simp add: size_mset_mono)"], ["proof (state)\nthis:\n  size {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}\n  \\<le> size {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  size {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}\n  \\<le> size {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}", "have \"trd3 (snd3 (RP_combined_measure (weight (C, i)) St'))\n    \\<le> trd3 (snd3 (RP_combined_measure (weight (C, i)) St))\""], ["proof (prove)\nusing this:\n  size {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}\n  \\<le> size {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}\n\ngoal (1 subgoal):\n 1. snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n    \\<le> snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))", "unfolding St'_def St_def"], ["proof (prove)\nusing this:\n  size {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}\n  \\<le> size {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}\n\ngoal (1 subgoal):\n 1. snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                         (N, P', Q, n)))))\n    \\<le> snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                               (N, P, Q, n)))))", "unfolding fst_def snd_def"], ["proof (prove)\nusing this:\n  size {#(Ca, ia) \\<in># P'. ia \\<le> weight (C, i)#}\n  \\<le> size {#(Ca, ia) \\<in># P. ia \\<le> weight (C, i)#}\n\ngoal (1 subgoal):\n 1. (case case case case RP_combined_measure (weight (C, i))\n                          (N, P', Q, n) of\n                    (x1, x2) \\<Rightarrow> x2 of\n               (x1, x2) \\<Rightarrow> x1 of\n          (x1, x2) \\<Rightarrow> x2 of\n     (x1, x2) \\<Rightarrow> x2)\n    \\<le> (case case case case RP_combined_measure (weight (C, i))\n                                (N, P, Q, n) of\n                          (x1, x2) \\<Rightarrow> x2 of\n                     (x1, x2) \\<Rightarrow> x1 of\n                (x1, x2) \\<Rightarrow> x2 of\n           (x1, x2) \\<Rightarrow> x2)", "by auto"], ["proof (state)\nthis:\n  snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  \\<le> snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "moreover"], ["proof (state)\nthis:\n  snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  \\<le> snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "from P'_sub_P"], ["proof (chain)\npicking this:\n  P' \\<subset># P", "have \"(\\<Sum>(C, i) \\<in># P'. Suc (size C)) < (\\<Sum>(C, i) \\<in># P. Suc (size C))\""], ["proof (prove)\nusing this:\n  P' \\<subset># P\n\ngoal (1 subgoal):\n 1. (\\<Sum>(C, i)\\<in>#P'. Suc (size C))\n    < (\\<Sum>(C, i)\\<in>#P. Suc (size C))", "using multiset_sum_monotone_f'[of \"{#(E, k) \\<in># P. E \\<noteq> C'#}\" P size]"], ["proof (prove)\nusing this:\n  P' \\<subset># P\n  {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P \\<Longrightarrow>\n  (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n  < (\\<Sum>(C, i)\\<in>#P. Suc (size C))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(C, i)\\<in>#P'. Suc (size C))\n    < (\\<Sum>(C, i)\\<in>#P. Suc (size C))", "unfolding P'_def"], ["proof (prove)\nusing this:\n  {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P\n  {#(E, k) \\<in># P. E \\<noteq> C'#} \\<subset># P \\<Longrightarrow>\n  (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n  < (\\<Sum>(C, i)\\<in>#P. Suc (size C))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n    < (\\<Sum>(C, i)\\<in>#P. Suc (size C))", "by metis"], ["proof (state)\nthis:\n  (\\<Sum>(C, i)\\<in>#P'. Suc (size C)) < (\\<Sum>(C, i)\\<in>#P. Suc (size C))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>(C, i)\\<in>#P'. Suc (size C)) < (\\<Sum>(C, i)\\<in>#P. Suc (size C))", "have \"fst3 (trd3 (RP_combined_measure (weight (C, i)) St'))\n    < fst3 (trd3 (RP_combined_measure (weight (C, i)) St))\""], ["proof (prove)\nusing this:\n  (\\<Sum>(C, i)\\<in>#P'. Suc (size C)) < (\\<Sum>(C, i)\\<in>#P. Suc (size C))\n\ngoal (1 subgoal):\n 1. fst (snd (snd (RP_combined_measure (weight (C, i)) St')))\n    < fst (snd (snd (RP_combined_measure (weight (C, i)) St)))", "unfolding P'_def St'_def St_def"], ["proof (prove)\nusing this:\n  (\\<Sum>(C, i)\\<in>#{#(E, k) \\<in># P. E \\<noteq> C'#}. Suc (size C))\n  < (\\<Sum>(C, i)\\<in>#P. Suc (size C))\n\ngoal (1 subgoal):\n 1. fst (snd (snd (RP_combined_measure (weight (C, i))\n                    (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n))))\n    < fst (snd (snd (RP_combined_measure (weight (C, i)) (N, P, Q, n))))", "by auto"], ["proof (state)\nthis:\n  fst (snd (snd (RP_combined_measure (weight (C, i)) St')))\n  < fst (snd (snd (RP_combined_measure (weight (C, i)) St)))\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n),\n                          RP_combined_measure (weight (C, i)) (N, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "ultimately"], ["proof (chain)\npicking this:\n  fst (RP_combined_measure (weight (C, i)) St')\n  \\<le> fst (RP_combined_measure (weight (C, i)) St)\n  fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  \\<le> fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n  snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  \\<le> snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n  fst (snd (snd (RP_combined_measure (weight (C, i)) St')))\n  < fst (snd (snd (RP_combined_measure (weight (C, i)) St)))", "show ?case"], ["proof (prove)\nusing this:\n  fst (RP_combined_measure (weight (C, i)) St')\n  \\<le> fst (RP_combined_measure (weight (C, i)) St)\n  fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  \\<le> fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n  snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  \\<le> snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n  fst (snd (snd (RP_combined_measure (weight (C, i)) St')))\n  < fst (snd (snd (RP_combined_measure (weight (C, i)) St)))\n\ngoal (1 subgoal):\n 1. (RP_combined_measure (weight (C, i))\n      (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n),\n     RP_combined_measure (weight (C, i)) (N, P, Q, n))\n    \\<in> natLess <*lex*>\n          (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n          natLess <*lex*> natLess <*lex*> natLess", "unfolding natLess_def P'_def St'_def St_def"], ["proof (prove)\nusing this:\n  fst (RP_combined_measure (weight (C, i))\n        (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n))\n  \\<le> fst (RP_combined_measure (weight (C, i)) (N, P, Q, n))\n  fst (fst (snd (RP_combined_measure (weight (C, i))\n                  (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n))))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) (N, P, Q, n))))\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                       (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n)))))\n  \\<le> fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                             (N, P, Q, n)))))\n  snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                       (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n)))))\n  \\<le> snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                             (N, P, Q, n)))))\n  fst (snd (snd (RP_combined_measure (weight (C, i))\n                  (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n))))\n  < fst (snd (snd (RP_combined_measure (weight (C, i)) (N, P, Q, n))))\n\ngoal (1 subgoal):\n 1. (RP_combined_measure (weight (C, i))\n      (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n),\n     RP_combined_measure (weight (C, i)) (N, P, Q, n))\n    \\<in> {(x, y). x < y} <*lex*>\n          ({(x, y). x < y} <*lex*>\n           {(x, y). x < y} <*lex*> {(x, y). x < y}) <*lex*>\n          {(x, y). x < y} <*lex*> {(x, y). x < y} <*lex*> {(x, y). x < y}", "by auto"], ["proof (state)\nthis:\n  (RP_combined_measure (weight (C, i))\n    (N, {#(E, k) \\<in># P. E \\<noteq> C'#}, Q, n),\n   RP_combined_measure (weight (C, i)) (N, P, Q, n))\n  \\<in> natLess <*lex*>\n        (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n        natLess <*lex*> natLess <*lex*> natLess\n\ngoal (8 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "case (inference_computation P C' i' N n Q)"], ["proof (state)\nthis:\n  \\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j)\n  N =\n  mset_set\n   ((\\<lambda>D. (D, n)) `\n    concls_of\n     (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n       (set_mset (image_mset fst Q)) C'))\n  (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n)\n\ngoal (8 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess\n 8. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                            Q + {#(Ca, ia)#}, Suc n),\n                          RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(Ca, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  \\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j)\n  N =\n  mset_set\n   ((\\<lambda>D. (D, n)) `\n    concls_of\n     (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n       (set_mset (image_mset fst Q)) C'))\n  (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n)", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j)\n  N =\n  mset_set\n   ((\\<lambda>D. (D, n)) `\n    concls_of\n     (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n       (set_mset (image_mset fst Q)) C'))\n  (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n)\n\ngoal (1 subgoal):\n 1. (RP_combined_measure (weight (C, i))\n      (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n),\n     RP_combined_measure (weight (C, i)) ({#}, P + {#(C', i')#}, Q, n))\n    \\<in> natLess <*lex*>\n          (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n          natLess <*lex*> natLess <*lex*> natLess", "proof (cases \"n \\<le> weight (C, i)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess\n 2. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "case True"], ["proof (state)\nthis:\n  n \\<le> weight (C, i)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess\n 2. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  n \\<le> weight (C, i)", "have \"weight (C, i) + 1 - n > weight (C, i) + 1 - Suc n\""], ["proof (prove)\nusing this:\n  n \\<le> weight (C, i)\n\ngoal (1 subgoal):\n 1. weight (C, i) + 1 - Suc n < weight (C, i) + 1 - n", "by auto"], ["proof (state)\nthis:\n  weight (C, i) + 1 - Suc n < weight (C, i) + 1 - n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess\n 2. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  weight (C, i) + 1 - Suc n < weight (C, i) + 1 - n", "show ?thesis"], ["proof (prove)\nusing this:\n  weight (C, i) + 1 - Suc n < weight (C, i) + 1 - n\n\ngoal (1 subgoal):\n 1. (RP_combined_measure (weight (C, i))\n      (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n),\n     RP_combined_measure (weight (C, i)) ({#}, P + {#(C', i')#}, Q, n))\n    \\<in> natLess <*lex*>\n          (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n          natLess <*lex*> natLess <*lex*> natLess", "unfolding natLess_def"], ["proof (prove)\nusing this:\n  weight (C, i) + 1 - Suc n < weight (C, i) + 1 - n\n\ngoal (1 subgoal):\n 1. (RP_combined_measure (weight (C, i))\n      (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n),\n     RP_combined_measure (weight (C, i)) ({#}, P + {#(C', i')#}, Q, n))\n    \\<in> {(x, y). x < y} <*lex*>\n          ({(x, y). x < y} <*lex*>\n           {(x, y). x < y} <*lex*> {(x, y). x < y}) <*lex*>\n          {(x, y). x < y} <*lex*> {(x, y). x < y} <*lex*> {(x, y). x < y}", "by auto"], ["proof (state)\nthis:\n  (RP_combined_measure (weight (C, i))\n    (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n),\n   RP_combined_measure (weight (C, i)) ({#}, P + {#(C', i')#}, Q, n))\n  \\<in> natLess <*lex*>\n        (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n        natLess <*lex*> natLess <*lex*> natLess\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "case n_nle_w: False"], ["proof (state)\nthis:\n  \\<not> n \\<le> weight (C, i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "define St :: \"'a wstate\" where \"St = ({#}, P + {#(C', i')#}, Q, n)\""], ["proof (state)\nthis:\n  St = ({#}, P + {#(C', i')#}, Q, n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "define St' :: \"'a wstate\" where \"St' =  (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n)\""], ["proof (state)\nthis:\n  St' = (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "define concls :: \"'a wclause set\" where\n      \"concls = (\\<lambda>D. (D, n)) ` concls_of (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n         (fst ` set_mset Q) C')\""], ["proof (state)\nthis:\n  concls =\n  (\\<lambda>D. (D, n)) `\n  concls_of\n   (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n     (fst ` set_mset Q) C')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have fin: \"finite concls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite concls", "unfolding concls_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>D. (D, n)) `\n      concls_of\n       (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n         (fst ` set_mset Q) C'))", "using finite_ord_FO_resolution_inferences_between"], ["proof (prove)\nusing this:\n  finite ?CC \\<Longrightarrow>\n  finite (inference_system.inferences_between (ord_FO_\\<Gamma> ?S) ?CC ?C)\n\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>D. (D, n)) `\n      concls_of\n       (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n         (fst ` set_mset Q) C'))", "by auto"], ["proof (state)\nthis:\n  finite concls\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have \"{(D, ia) \\<in> concls. ia \\<le> weight (C, i)} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(D, ia). (D, ia) \\<in> concls \\<and> ia \\<le> weight (C, i)} = {}", "unfolding concls_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(D, ia).\n     (D, ia)\n     \\<in> (\\<lambda>D. (D, n)) `\n           concls_of\n            (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n              (fst ` set_mset Q) C') \\<and>\n     ia \\<le> weight (C, i)} =\n    {}", "using n_nle_w"], ["proof (prove)\nusing this:\n  \\<not> n \\<le> weight (C, i)\n\ngoal (1 subgoal):\n 1. {(D, ia).\n     (D, ia)\n     \\<in> (\\<lambda>D. (D, n)) `\n           concls_of\n            (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n              (fst ` set_mset Q) C') \\<and>\n     ia \\<le> weight (C, i)} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {(D, ia). (D, ia) \\<in> concls \\<and> ia \\<le> weight (C, i)} = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  {(D, ia). (D, ia) \\<in> concls \\<and> ia \\<le> weight (C, i)} = {}", "have \"{#(D, ia) \\<in># mset_set concls. ia \\<le> weight (C, i)#} = {#}\""], ["proof (prove)\nusing this:\n  {(D, ia). (D, ia) \\<in> concls \\<and> ia \\<le> weight (C, i)} = {}\n\ngoal (1 subgoal):\n 1. {#(D, ia) \\<in># mset_set concls. ia \\<le> weight (C, i)#} = {#}", "using fin filter_mset_empty_if_finite_and_filter_set_empty[of concls]"], ["proof (prove)\nusing this:\n  {(D, ia). (D, ia) \\<in> concls \\<and> ia \\<le> weight (C, i)} = {}\n  finite concls\n  \\<lbrakk>{x \\<in> concls. ?P x} = {}; finite concls\\<rbrakk>\n  \\<Longrightarrow> filter_mset ?P (mset_set concls) = {#}\n\ngoal (1 subgoal):\n 1. {#(D, ia) \\<in># mset_set concls. ia \\<le> weight (C, i)#} = {#}", "by auto"], ["proof (state)\nthis:\n  {#(D, ia) \\<in># mset_set concls. ia \\<le> weight (C, i)#} = {#}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  {#(D, ia) \\<in># mset_set concls. ia \\<le> weight (C, i)#} = {#}", "have n_low_weight_empty: \"{#(D, ia) \\<in># N. ia \\<le> weight (C, i)#} = {#}\""], ["proof (prove)\nusing this:\n  {#(D, ia) \\<in># mset_set concls. ia \\<le> weight (C, i)#} = {#}\n\ngoal (1 subgoal):\n 1. {#(D, ia) \\<in># N. ia \\<le> weight (C, i)#} = {#}", "unfolding inference_computation"], ["proof (prove)\nusing this:\n  {#(D, ia) \\<in># mset_set concls. ia \\<le> weight (C, i)#} = {#}\n\ngoal (1 subgoal):\n 1. {#(D,\n     ia) \\<in># mset_set\n                 ((\\<lambda>D. (D, n)) `\n                  concls_of\n                   (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n                     (set_mset (image_mset fst Q)) C')).\n     ia \\<le> weight (C, i)#} =\n    {#}", "unfolding concls_def"], ["proof (prove)\nusing this:\n  {#(D,\n   ia) \\<in># mset_set\n               ((\\<lambda>D. (D, n)) `\n                concls_of\n                 (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n                   (fst ` set_mset Q) C')).\n   ia \\<le> weight (C, i)#} =\n  {#}\n\ngoal (1 subgoal):\n 1. {#(D,\n     ia) \\<in># mset_set\n                 ((\\<lambda>D. (D, n)) `\n                  concls_of\n                   (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n                     (set_mset (image_mset fst Q)) C')).\n     ia \\<le> weight (C, i)#} =\n    {#}", "by auto"], ["proof (state)\nthis:\n  {#(D, ia) \\<in># N. ia \\<le> weight (C, i)#} = {#}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have \"weight (C', i') \\<le> weight (C, i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weight (C', i') \\<le> weight (C, i)", "using inference_computation"], ["proof (prove)\nusing this:\n  \\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j)\n  N =\n  mset_set\n   ((\\<lambda>D. (D, n)) `\n    concls_of\n     (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n       (set_mset (image_mset fst Q)) C'))\n  (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n)\n\ngoal (1 subgoal):\n 1. weight (C', i') \\<le> weight (C, i)", "by auto"], ["proof (state)\nthis:\n  weight (C', i') \\<le> weight (C, i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "then"], ["proof (chain)\npicking this:\n  weight (C', i') \\<le> weight (C, i)", "have i'_le_w_Ci: \"i' \\<le> weight (C, i)\""], ["proof (prove)\nusing this:\n  weight (C', i') \\<le> weight (C, i)\n\ngoal (1 subgoal):\n 1. i' \\<le> weight (C, i)", "using timestamp_le_weight[of i' C']"], ["proof (prove)\nusing this:\n  weight (C', i') \\<le> weight (C, i)\n  i' \\<le> weight (C', i')\n\ngoal (1 subgoal):\n 1. i' \\<le> weight (C, i)", "by auto"], ["proof (state)\nthis:\n  i' \\<le> weight (C, i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have subs: \"{#(D, ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} + (Q + {#(C', i')#}). ia \\<le> weight (C, i)#}\n      \\<subseteq># {#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q. ia \\<le> weight (C, i)#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#(D,\n     ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} + (Q + {#(C', i')#}).\n     ia \\<le> weight (C, i)#} \\<subseteq>#\n    {#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q. ia \\<le> weight (C, i)#}", "using n_low_weight_empty"], ["proof (prove)\nusing this:\n  {#(D, ia) \\<in># N. ia \\<le> weight (C, i)#} = {#}\n\ngoal (1 subgoal):\n 1. {#(D,\n     ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} + (Q + {#(C', i')#}).\n     ia \\<le> weight (C, i)#} \\<subseteq>#\n    {#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q. ia \\<le> weight (C, i)#}", "by (auto simp: multiset_filter_mono)"], ["proof (state)\nthis:\n  {#(D,\n   ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} + (Q + {#(C', i')#}).\n   ia \\<le> weight (C, i)#} \\<subseteq>#\n  {#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q. ia \\<le> weight (C, i)#}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have \"fst3 (RP_combined_measure (weight (C, i)) St')\n      \\<le> fst3 (RP_combined_measure (weight (C, i)) St)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (RP_combined_measure (weight (C, i)) St')\n    \\<le> fst (RP_combined_measure (weight (C, i)) St)", "unfolding St'_def St_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (RP_combined_measure (weight (C, i))\n          (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n))\n    \\<le> fst (RP_combined_measure (weight (C, i))\n                ({#}, P + {#(C', i')#}, Q, n))", "by auto"], ["proof (state)\nthis:\n  fst (RP_combined_measure (weight (C, i)) St')\n  \\<le> fst (RP_combined_measure (weight (C, i)) St)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "moreover"], ["proof (state)\nthis:\n  fst (RP_combined_measure (weight (C, i)) St')\n  \\<le> fst (RP_combined_measure (weight (C, i)) St)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have \"fst (RP_filtered_measure ((\\<lambda>(D, ia). ia \\<le> weight (C, i))) St') =\n      (\\<Sum>(C, i) \\<in># {#(D, ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} + (Q + {#(C', i')#}).\n         ia \\<le> weight (C, i)#}. Suc (size C))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (RP_filtered_measure\n          (\\<lambda>Di.\n              case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n          St') =\n    (\\<Sum>(C,\n        i)\\<in>#{#(D,\n                 ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} +\n                            (Q + {#(C', i')#}).\n                 ia \\<le> weight (C, i)#}. Suc (size C))", "unfolding St'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (RP_filtered_measure\n          (\\<lambda>Di.\n              case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n          (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#},\n           Suc n)) =\n    (\\<Sum>(C,\n        i)\\<in>#{#(D,\n                 ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} +\n                            (Q + {#(C', i')#}).\n                 ia \\<le> weight (C, i)#}. Suc (size C))", "by auto"], ["proof (state)\nthis:\n  fst (RP_filtered_measure\n        (\\<lambda>Di.\n            case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n        St') =\n  (\\<Sum>(C,\n      i)\\<in>#{#(D,\n               ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} +\n                          (Q + {#(C', i')#}).\n               ia \\<le> weight (C, i)#}. Suc (size C))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "also"], ["proof (state)\nthis:\n  fst (RP_filtered_measure\n        (\\<lambda>Di.\n            case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n        St') =\n  (\\<Sum>(C,\n      i)\\<in>#{#(D,\n               ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} +\n                          (Q + {#(C', i')#}).\n               ia \\<le> weight (C, i)#}. Suc (size C))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have \"... \\<le> (\\<Sum>(C, i) \\<in># {#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q. ia \\<le> weight (C, i)#}.\n      Suc (size C))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(C,\n        i)\\<in>#{#(D,\n                 ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} +\n                            (Q + {#(C', i')#}).\n                 ia \\<le> weight (C, i)#}. Suc (size C))\n    \\<le> (\\<Sum>(C,\n              i)\\<in>#{#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q.\n                       ia \\<le> weight (C, i)#}. Suc (size C))", "using subs sum_image_mset_mono"], ["proof (prove)\nusing this:\n  {#(D,\n   ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} + (Q + {#(C', i')#}).\n   ia \\<le> weight (C, i)#} \\<subseteq>#\n  {#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q. ia \\<le> weight (C, i)#}\n  ?A \\<subseteq># ?B \\<Longrightarrow>\n  \\<Sum>\\<^sub># (image_mset ?f ?A) \\<le> \\<Sum>\\<^sub># (image_mset ?f ?B)\n\ngoal (1 subgoal):\n 1. (\\<Sum>(C,\n        i)\\<in>#{#(D,\n                 ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} +\n                            (Q + {#(C', i')#}).\n                 ia \\<le> weight (C, i)#}. Suc (size C))\n    \\<le> (\\<Sum>(C,\n              i)\\<in>#{#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q.\n                       ia \\<le> weight (C, i)#}. Suc (size C))", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>(C,\n      i)\\<in>#{#(D,\n               ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} +\n                          (Q + {#(C', i')#}).\n               ia \\<le> weight (C, i)#}. Suc (size C))\n  \\<le> (\\<Sum>(C,\n            i)\\<in>#{#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q.\n                     ia \\<le> weight (C, i)#}. Suc (size C))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "also"], ["proof (state)\nthis:\n  (\\<Sum>(C,\n      i)\\<in>#{#(D,\n               ia) \\<in># N + {#(D, j) \\<in># P. D \\<noteq> C'#} +\n                          (Q + {#(C', i')#}).\n               ia \\<le> weight (C, i)#}. Suc (size C))\n  \\<le> (\\<Sum>(C,\n            i)\\<in>#{#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q.\n                     ia \\<le> weight (C, i)#}. Suc (size C))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have \"... = fst (RP_filtered_measure (\\<lambda>(D, ia). ia \\<le> weight (C, i)) St)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(C,\n        i)\\<in>#{#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q.\n                 ia \\<le> weight (C, i)#}. Suc (size C)) =\n    fst (RP_filtered_measure\n          (\\<lambda>Di.\n              case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n          St)", "unfolding St_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(C,\n        i)\\<in>#{#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q.\n                 ia \\<le> weight (C, i)#}. Suc (size C)) =\n    fst (RP_filtered_measure\n          (\\<lambda>Di.\n              case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n          ({#}, P + {#(C', i')#}, Q, n))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>(C,\n      i)\\<in>#{#(D, ia) \\<in># {#} + (P + {#(C', i')#}) + Q.\n               ia \\<le> weight (C, i)#}. Suc (size C)) =\n  fst (RP_filtered_measure\n        (\\<lambda>Di.\n            case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n        St)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      fst (RP_filtered_measure\n            (\\<lambda>Di.\n                case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n            St')\n      \\<le> fst (RP_filtered_measure\n                  (\\<lambda>Di.\n                      case Di of\n                      (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n                  St')) \\<Longrightarrow>\n  fst (RP_filtered_measure\n        (\\<lambda>Di.\n            case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n        St')\n  \\<le> fst (RP_filtered_measure\n              (\\<lambda>Di.\n                  case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n              St)", "have \"fst3 (snd3 (RP_combined_measure (weight (C, i)) St'))\n      \\<le> fst3 (snd3 (RP_combined_measure (weight (C, i)) St))\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      fst (RP_filtered_measure\n            (\\<lambda>Di.\n                case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n            St')\n      \\<le> fst (RP_filtered_measure\n                  (\\<lambda>Di.\n                      case Di of\n                      (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n                  St')) \\<Longrightarrow>\n  fst (RP_filtered_measure\n        (\\<lambda>Di.\n            case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n        St')\n  \\<le> fst (RP_filtered_measure\n              (\\<lambda>Di.\n                  case Di of (D, ia) \\<Rightarrow> ia \\<le> weight (C, i))\n              St)\n\ngoal (1 subgoal):\n 1. fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n    \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))", "by auto"], ["proof (state)\nthis:\n  fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "moreover"], ["proof (state)\nthis:\n  fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have \"snd3 (snd3 (RP_combined_measure (weight (C, i)) St')) =\n      snd3 (snd3 (RP_combined_measure (weight (C, i)) St))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St')))) =\n    fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))", "unfolding St_def St'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                         (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                          Q + {#(C', i')#}, Suc n))))) =\n    fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                         ({#}, P + {#(C', i')#}, Q, n)))))", "using n_low_weight_empty"], ["proof (prove)\nusing this:\n  {#(D, ia) \\<in># N. ia \\<le> weight (C, i)#} = {#}\n\ngoal (1 subgoal):\n 1. fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                         (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                          Q + {#(C', i')#}, Suc n))))) =\n    fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                         ({#}, P + {#(C', i')#}, Q, n)))))", "by auto"], ["proof (state)\nthis:\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St')))) =\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "moreover"], ["proof (state)\nthis:\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St')))) =\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "have \"trd3 (snd3 (RP_combined_measure (weight (C, i)) St')) <\n      trd3 (snd3 (RP_combined_measure (weight (C, i)) St))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n    < snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))", "unfolding St_def St'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                         (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                          Q + {#(C', i')#}, Suc n)))))\n    < snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(C', i')#}, Q, n)))))", "using i'_le_w_Ci"], ["proof (prove)\nusing this:\n  i' \\<le> weight (C, i)\n\ngoal (1 subgoal):\n 1. snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                         (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                          Q + {#(C', i')#}, Suc n)))))\n    < snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                           ({#}, P + {#(C', i')#}, Q, n)))))", "by (simp add: le_imp_less_Suc multiset_filter_mono size_mset_mono)"], ["proof (state)\nthis:\n  snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  < snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (C', i') \\<le> weight (D, j);\n     N =\n     mset_set\n      ((\\<lambda>D. (D, n)) `\n       concls_of\n        (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n          (set_mset (image_mset fst Q)) C'));\n     (C, i) \\<in># wP_of_wstate ({#}, P + {#(C', i')#}, Q, n);\n     \\<not> n \\<le> weight (C, i)\\<rbrakk>\n    \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                        (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                         Q + {#(C', i')#}, Suc n),\n                       RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))\n                      \\<in> natLess <*lex*>\n                            (natLess <*lex*>\n                             natLess <*lex*> natLess) <*lex*>\n                            natLess <*lex*> natLess <*lex*> natLess", "ultimately"], ["proof (chain)\npicking this:\n  fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St')))) =\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n  snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  < snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))", "show ?thesis"], ["proof (prove)\nusing this:\n  fst (fst (snd (RP_combined_measure (weight (C, i)) St')))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i)) St)))\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St')))) =\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n  snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St'))))\n  < snd (snd (fst (snd (RP_combined_measure (weight (C, i)) St))))\n\ngoal (1 subgoal):\n 1. (RP_combined_measure (weight (C, i))\n      (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n),\n     RP_combined_measure (weight (C, i)) ({#}, P + {#(C', i')#}, Q, n))\n    \\<in> natLess <*lex*>\n          (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n          natLess <*lex*> natLess <*lex*> natLess", "unfolding natLess_def St'_def St_def lex_prod_def"], ["proof (prove)\nusing this:\n  fst (fst (snd (RP_combined_measure (weight (C, i))\n                  (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#},\n                   Suc n))))\n  \\<le> fst (fst (snd (RP_combined_measure (weight (C, i))\n                        ({#}, P + {#(C', i')#}, Q, n))))\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                       (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                        Q + {#(C', i')#}, Suc n))))) =\n  fst (snd (fst (snd (RP_combined_measure (weight (C, i))\n                       ({#}, P + {#(C', i')#}, Q, n)))))\n  snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                       (N, {#(D, j) \\<in># P. D \\<noteq> C'#},\n                        Q + {#(C', i')#}, Suc n)))))\n  < snd (snd (fst (snd (RP_combined_measure (weight (C, i))\n                         ({#}, P + {#(C', i')#}, Q, n)))))\n\ngoal (1 subgoal):\n 1. (RP_combined_measure (weight (C, i))\n      (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n),\n     RP_combined_measure (weight (C, i)) ({#}, P + {#(C', i')#}, Q, n))\n    \\<in> {((a, b), a', b').\n           (a, a') \\<in> {(x, y). x < y} \\<or>\n           a = a' \\<and>\n           (b, b')\n           \\<in> {((a, b), a', b').\n                  (a, a')\n                  \\<in> {((a, b), a', b').\n                         (a, a') \\<in> {(x, y). x < y} \\<or>\n                         a = a' \\<and>\n                         (b, b')\n                         \\<in> {((a, b), a', b').\n                                (a, a') \\<in> {(x, y). x < y} \\<or>\n                                a = a' \\<and>\n                                (b, b') \\<in> {(x, y). x < y}}} \\<or>\n                  a = a' \\<and>\n                  (b, b')\n                  \\<in> {((a, b), a', b').\n                         (a, a') \\<in> {(x, y). x < y} \\<or>\n                         a = a' \\<and>\n                         (b, b')\n                         \\<in> {((a, b), a', b').\n                                (a, a') \\<in> {(x, y). x < y} \\<or>\n                                a = a' \\<and>\n                                (b, b') \\<in> {(x, y). x < y}}}}}", "by force"], ["proof (state)\nthis:\n  (RP_combined_measure (weight (C, i))\n    (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n),\n   RP_combined_measure (weight (C, i)) ({#}, P + {#(C', i')#}, Q, n))\n  \\<in> natLess <*lex*>\n        (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n        natLess <*lex*> natLess <*lex*> natLess\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (RP_combined_measure (weight (C, i))\n    (N, {#(D, j) \\<in># P. D \\<noteq> C'#}, Q + {#(C', i')#}, Suc n),\n   RP_combined_measure (weight (C, i)) ({#}, P + {#(C', i')#}, Q, n))\n  \\<in> natLess <*lex*>\n        (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n        natLess <*lex*> natLess <*lex*> natLess\n\ngoal (7 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 3. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i)) (N, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 4. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N + {#(Ca, ia)#}, P, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N + {#(Ca + {#L#}, ia)#}, P, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 5. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i)\n        \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca + {#L#}, ia)#}, Q, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 6. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i)\n        \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n)\\<rbrakk>\n       \\<Longrightarrow> (RP_combined_measure (weight (C, i))\n                           (N, P + {#(Ca, ia)#}, Q, n),\n                          RP_combined_measure (weight (C, i))\n                           (N, P, Q + {#(Ca + {#L#}, ia)#}, n))\n                         \\<in> natLess <*lex*>\n                               (natLess <*lex*>\n                                natLess <*lex*> natLess) <*lex*>\n                               natLess <*lex*> natLess <*lex*> natLess\n 7. \\<And>N Ca ia P Q n.\n       (C, i)\n       \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<Longrightarrow>\n       (RP_combined_measure (weight (C, i)) (N, P + {#(Ca, ia)#}, Q, n),\n        RP_combined_measure (weight (C, i)) (N + {#(Ca, ia)#}, P, Q, n))\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess", "qed (auto simp: natLess_def)"], ["", "lemma preserve_min_or_delete_completely:\n  assumes \"St \\<leadsto>\\<^sub>w St'\" \"(C, i) \\<in># wP_of_wstate St\"\n    \"\\<forall>k. (C, k) \\<in># wP_of_wstate St \\<longrightarrow> i \\<le> k\"\n  shows \"(C, i) \\<in># wP_of_wstate St' \\<or> (\\<forall>j. (C, j) \\<notin># wP_of_wstate St')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate St' \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate St')", "using assms"], ["proof (prove)\nusing this:\n  St \\<leadsto>\\<^sub>w St'\n  (C, i) \\<in># wP_of_wstate St\n  \\<forall>k. (C, k) \\<in># wP_of_wstate St \\<longrightarrow> i \\<le> k\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate St' \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate St')", "proof (induction rule: weighted_RP.induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (N, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j) \\<notin># wP_of_wstate (N, P, Q, n))\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (N, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j) \\<notin># wP_of_wstate (N, P, Q, n))\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca; (C, i) \\<in># wP_of_wstate (N, P, Q, n);\n        \\<forall>k.\n           (C, k) \\<in># wP_of_wstate (N, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q,\n                                  n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n))\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (N, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j) \\<notin># wP_of_wstate (N, P, Q, n))\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   (N + {#(Ca + {#L#}, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N + {#(Ca, ia)#}, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N + {#(Ca, ia)#}, P, Q, n))\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i) \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   (N, P + {#(Ca + {#L#}, ia)#}, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, P + {#(Ca, ia)#}, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, P + {#(Ca, ia)#}, Q, n))\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   (N, P, Q + {#(Ca + {#L#}, ia)#}, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, P + {#(Ca, ia)#}, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, P + {#(Ca, ia)#}, Q, n))\n 8. \\<And>N Ca ia P Q n.\n       \\<lbrakk>(C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, P + {#(Ca, ia)#}, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, P + {#(Ca, ia)#}, Q, n))\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   ({#}, P + {#(Ca, ia)#}, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                                  Q + {#(Ca, ia)#}, Suc n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, {#(D, j) \\<in># P. D \\<noteq> Ca#}, Q + {#(Ca, ia)#}, Suc n))", "case (backward_reduction_P D L' N L \\<sigma> C' P i' Q n)"], ["proof (state)\nthis:\n  D + {#L'#} \\<in># image_mset fst N\n  - L = L' \\<cdot>l \\<sigma>\n  D \\<cdot> \\<sigma> \\<subseteq># C'\n  \\<forall>j. (C' + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i'\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C' + {#L#}, i')#}, Q, n)\n  \\<forall>k.\n     (C, k)\n     \\<in># wP_of_wstate\n             (N, P + {#(C' + {#L#}, i')#}, Q, n) \\<longrightarrow>\n     i \\<le> k\n\ngoal (9 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (N, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j) \\<notin># wP_of_wstate (N, P, Q, n))\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (N, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j) \\<notin># wP_of_wstate (N, P, Q, n))\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca; (C, i) \\<in># wP_of_wstate (N, P, Q, n);\n        \\<forall>k.\n           (C, k) \\<in># wP_of_wstate (N, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q,\n                                  n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n))\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (N, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j) \\<notin># wP_of_wstate (N, P, Q, n))\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   (N + {#(Ca + {#L#}, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N + {#(Ca, ia)#}, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N + {#(Ca, ia)#}, P, Q, n))\n 6. \\<And>D L' N L \\<sigma> Ca P ia Q n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        \\<forall>j. (Ca + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> ia;\n        (C, i) \\<in># wP_of_wstate (N, P + {#(Ca + {#L#}, ia)#}, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   (N, P + {#(Ca + {#L#}, ia)#}, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, P + {#(Ca, ia)#}, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, P + {#(Ca, ia)#}, Q, n))\n 7. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   (N, P, Q + {#(Ca + {#L#}, ia)#}, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, P + {#(Ca, ia)#}, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, P + {#(Ca, ia)#}, Q, n))\n 8. \\<And>N Ca ia P Q n.\n       \\<lbrakk>(C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, P + {#(Ca, ia)#}, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, P + {#(Ca, ia)#}, Q, n))\n 9. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   ({#}, P + {#(Ca, ia)#}, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                                  Q + {#(Ca, ia)#}, Suc n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, {#(D, j) \\<in># P. D \\<noteq> Ca#}, Q + {#(Ca, ia)#}, Suc n))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "proof (cases \"C = C' + {#L#}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "case True_outer: True"], ["proof (state)\nthis:\n  C = C' + {#L#}\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  C = C' + {#L#}", "have C_i_in: \"(C, i) \\<in># P + {#(C, i')#}\""], ["proof (prove)\nusing this:\n  C = C' + {#L#}\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># P + {#(C, i')#}", "using backward_reduction_P"], ["proof (prove)\nusing this:\n  C = C' + {#L#}\n  D + {#L'#} \\<in># image_mset fst N\n  - L = L' \\<cdot>l \\<sigma>\n  D \\<cdot> \\<sigma> \\<subseteq># C'\n  \\<forall>j. (C' + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i'\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C' + {#L#}, i')#}, Q, n)\n  \\<forall>k.\n     (C, k)\n     \\<in># wP_of_wstate\n             (N, P + {#(C' + {#L#}, i')#}, Q, n) \\<longrightarrow>\n     i \\<le> k\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># P + {#(C, i')#}", "by auto"], ["proof (state)\nthis:\n  (C, i) \\<in># P + {#(C, i')#}\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  (C, i) \\<in># P + {#(C, i')#}", "have max: \"\\<And>k. (C, k) \\<in># P + {#(C, i')#} \\<Longrightarrow> k \\<le> i'\""], ["proof (prove)\nusing this:\n  (C, i) \\<in># P + {#(C, i')#}\n\ngoal (1 subgoal):\n 1. \\<And>k. (C, k) \\<in># P + {#(C, i')#} \\<Longrightarrow> k \\<le> i'", "using backward_reduction_P"], ["proof (prove)\nusing this:\n  (C, i) \\<in># P + {#(C, i')#}\n  D + {#L'#} \\<in># image_mset fst N\n  - L = L' \\<cdot>l \\<sigma>\n  D \\<cdot> \\<sigma> \\<subseteq># C'\n  \\<forall>j. (C' + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i'\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C' + {#L#}, i')#}, Q, n)\n  \\<forall>k.\n     (C, k)\n     \\<in># wP_of_wstate\n             (N, P + {#(C' + {#L#}, i')#}, Q, n) \\<longrightarrow>\n     i \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>k. (C, k) \\<in># P + {#(C, i')#} \\<Longrightarrow> k \\<le> i'", "unfolding True_outer[symmetric]"], ["proof (prove)\nusing this:\n  (C, i) \\<in># P + {#(C, i')#}\n  D + {#L'#} \\<in># image_mset fst N\n  - L = L' \\<cdot>l \\<sigma>\n  D \\<cdot> \\<sigma> \\<subseteq># C'\n  \\<forall>j. (C, j) \\<in># P \\<longrightarrow> j \\<le> i'\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C, i')#}, Q, n)\n  \\<forall>k.\n     (C, k) \\<in># wP_of_wstate (N, P + {#(C, i')#}, Q, n) \\<longrightarrow>\n     i \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>k. (C, k) \\<in># P + {#(C, i')#} \\<Longrightarrow> k \\<le> i'", "by auto"], ["proof (state)\nthis:\n  (C, ?k) \\<in># P + {#(C, i')#} \\<Longrightarrow> ?k \\<le> i'\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  (C, ?k) \\<in># P + {#(C, i')#} \\<Longrightarrow> ?k \\<le> i'", "have \"count (P + {#(C, i')#}) (C, i') \\<ge> 1\""], ["proof (prove)\nusing this:\n  (C, ?k) \\<in># P + {#(C, i')#} \\<Longrightarrow> ?k \\<le> i'\n\ngoal (1 subgoal):\n 1. 1 \\<le> count (P + {#(C, i')#}) (C, i')", "by auto"], ["proof (state)\nthis:\n  1 \\<le> count (P + {#(C, i')#}) (C, i')\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "moreover"], ["proof (state)\nthis:\n  1 \\<le> count (P + {#(C, i')#}) (C, i')\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "{"], ["proof (state)\nthis:\n  1 \\<le> count (P + {#(C, i')#}) (C, i')\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "assume asm: \"count (P + {#(C, i')#}) (C, i') = 1\""], ["proof (state)\nthis:\n  count (P + {#(C, i')#}) (C, i') = 1\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  count (P + {#(C, i')#}) (C, i') = 1", "have nin_P: \"(C, i') \\<notin># P\""], ["proof (prove)\nusing this:\n  count (P + {#(C, i')#}) (C, i') = 1\n\ngoal (1 subgoal):\n 1. (C, i') \\<notin># P", "using not_in_iff"], ["proof (prove)\nusing this:\n  count (P + {#(C, i')#}) (C, i') = 1\n  (?x \\<notin># ?M) = (count ?M ?x = 0)\n\ngoal (1 subgoal):\n 1. (C, i') \\<notin># P", "by force"], ["proof (state)\nthis:\n  (C, i') \\<notin># P\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "proof (cases \"(C, i) = (C, i')\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (C, i) = (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. (C, i) \\<noteq> (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "case True"], ["proof (state)\nthis:\n  (C, i) = (C, i')\n\ngoal (2 subgoals):\n 1. (C, i) = (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. (C, i) \\<noteq> (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  (C, i) = (C, i')", "have \"i = i'\""], ["proof (prove)\nusing this:\n  (C, i) = (C, i')\n\ngoal (1 subgoal):\n 1. i = i'", "by auto"], ["proof (state)\nthis:\n  i = i'\n\ngoal (2 subgoals):\n 1. (C, i) = (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. (C, i) \\<noteq> (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  i = i'", "have \"\\<forall>j. (C, j) \\<in># P + {#(C, i')#} \\<longrightarrow> j = i'\""], ["proof (prove)\nusing this:\n  i = i'\n\ngoal (1 subgoal):\n 1. \\<forall>j. (C, j) \\<in># P + {#(C, i')#} \\<longrightarrow> j = i'", "using max backward_reduction_P(6)"], ["proof (prove)\nusing this:\n  i = i'\n  (C, ?k) \\<in># P + {#(C, i')#} \\<Longrightarrow> ?k \\<le> i'\n  \\<forall>k.\n     (C, k)\n     \\<in># wP_of_wstate\n             (N, P + {#(C' + {#L#}, i')#}, Q, n) \\<longrightarrow>\n     i \\<le> k\n\ngoal (1 subgoal):\n 1. \\<forall>j. (C, j) \\<in># P + {#(C, i')#} \\<longrightarrow> j = i'", "unfolding True_outer[symmetric]"], ["proof (prove)\nusing this:\n  i = i'\n  (C, ?k) \\<in># P + {#(C, i')#} \\<Longrightarrow> ?k \\<le> i'\n  \\<forall>k.\n     (C, k) \\<in># wP_of_wstate (N, P + {#(C, i')#}, Q, n) \\<longrightarrow>\n     i \\<le> k\n\ngoal (1 subgoal):\n 1. \\<forall>j. (C, j) \\<in># P + {#(C, i')#} \\<longrightarrow> j = i'", "by force"], ["proof (state)\nthis:\n  \\<forall>j. (C, j) \\<in># P + {#(C, i')#} \\<longrightarrow> j = i'\n\ngoal (2 subgoals):\n 1. (C, i) = (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. (C, i) \\<noteq> (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  \\<forall>j. (C, j) \\<in># P + {#(C, i')#} \\<longrightarrow> j = i'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>j. (C, j) \\<in># P + {#(C, i')#} \\<longrightarrow> j = i'\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "using True_outer[symmetric] nin_P"], ["proof (prove)\nusing this:\n  \\<forall>j. (C, j) \\<in># P + {#(C, i')#} \\<longrightarrow> j = i'\n  C' + {#L#} = C\n  (C, i') \\<notin># P\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "by auto"], ["proof (state)\nthis:\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (1 subgoal):\n 1. (C, i) \\<noteq> (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (C, i) \\<noteq> (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "case False"], ["proof (state)\nthis:\n  (C, i) \\<noteq> (C, i')\n\ngoal (1 subgoal):\n 1. (C, i) \\<noteq> (C, i') \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  (C, i) \\<noteq> (C, i')", "show ?thesis"], ["proof (prove)\nusing this:\n  (C, i) \\<noteq> (C, i')\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "using C_i_in"], ["proof (prove)\nusing this:\n  (C, i) \\<noteq> (C, i')\n  (C, i) \\<in># P + {#(C, i')#}\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "by auto"], ["proof (state)\nthis:\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "}"], ["proof (state)\nthis:\n  count (P + {#(C, i')#}) (C, i') = 1 \\<Longrightarrow>\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "moreover"], ["proof (state)\nthis:\n  count (P + {#(C, i')#}) (C, i') = 1 \\<Longrightarrow>\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "{"], ["proof (state)\nthis:\n  count (P + {#(C, i')#}) (C, i') = 1 \\<Longrightarrow>\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "assume \"count (P + {#(C, i')#}) (C, i') > 1\""], ["proof (state)\nthis:\n  1 < count (P + {#(C, i')#}) (C, i')\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  1 < count (P + {#(C, i')#}) (C, i')", "have ?thesis"], ["proof (prove)\nusing this:\n  1 < count (P + {#(C, i')#}) (C, i')\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "using C_i_in"], ["proof (prove)\nusing this:\n  1 < count (P + {#(C, i')#}) (C, i')\n  (C, i) \\<in># P + {#(C, i')#}\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "by auto"], ["proof (state)\nthis:\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "}"], ["proof (state)\nthis:\n  1 < count (P + {#(C, i')#}) (C, i') \\<Longrightarrow>\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (2 subgoals):\n 1. C = C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n 2. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> count (P + {#(C, i')#}) (C, i')\n  count (P + {#(C, i')#}) (C, i') = 1 \\<Longrightarrow>\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n  1 < count (P + {#(C, i')#}) (C, i') \\<Longrightarrow>\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<le> count (P + {#(C, i')#}) (C, i')\n  count (P + {#(C, i')#}) (C, i') = 1 \\<Longrightarrow>\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n  1 < count (P + {#(C, i')#}) (C, i') \\<Longrightarrow>\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "by (cases \"count (P + {#(C, i')#}) (C, i') = 1\") auto"], ["proof (state)\nthis:\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (1 subgoal):\n 1. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "case False"], ["proof (state)\nthis:\n  C \\<noteq> C' + {#L#}\n\ngoal (1 subgoal):\n 1. C \\<noteq> C' + {#L#} \\<Longrightarrow>\n    (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "then"], ["proof (chain)\npicking this:\n  C \\<noteq> C' + {#L#}", "show ?thesis"], ["proof (prove)\nusing this:\n  C \\<noteq> C' + {#L#}\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "using backward_reduction_P"], ["proof (prove)\nusing this:\n  C \\<noteq> C' + {#L#}\n  D + {#L'#} \\<in># image_mset fst N\n  - L = L' \\<cdot>l \\<sigma>\n  D \\<cdot> \\<sigma> \\<subseteq># C'\n  \\<forall>j. (C' + {#L#}, j) \\<in># P \\<longrightarrow> j \\<le> i'\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C' + {#L#}, i')#}, Q, n)\n  \\<forall>k.\n     (C, k)\n     \\<in># wP_of_wstate\n             (N, P + {#(C' + {#L#}, i')#}, Q, n) \\<longrightarrow>\n     i \\<le> k\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n    (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))", "by auto"], ["proof (state)\nthis:\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (C, i) \\<in># wP_of_wstate (N, P + {#(C', i')#}, Q, n) \\<or>\n  (\\<forall>j. (C, j) \\<notin># wP_of_wstate (N, P + {#(C', i')#}, Q, n))\n\ngoal (8 subgoals):\n 1. \\<And>A Ca N ia P Q n.\n       \\<lbrakk>Neg A \\<in># Ca; Pos A \\<in># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (N, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j) \\<notin># wP_of_wstate (N, P, Q, n))\n 2. \\<And>D P Q Ca N ia n.\n       \\<lbrakk>D \\<in># image_mset fst (P + Q); subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (N, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j) \\<notin># wP_of_wstate (N, P, Q, n))\n 3. \\<And>D N Ca P Q n.\n       \\<lbrakk>D \\<in># image_mset fst N; Ca \\<in># image_mset fst P;\n        strictly_subsumes D Ca; (C, i) \\<in># wP_of_wstate (N, P, Q, n);\n        \\<forall>k.\n           (C, k) \\<in># wP_of_wstate (N, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q,\n                                  n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, {#(E, k) \\<in># P. E \\<noteq> Ca#}, Q, n))\n 4. \\<And>D N Ca P Q ia n.\n       \\<lbrakk>D \\<in># image_mset fst N; strictly_subsumes D Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N, P, Q + {#(Ca, ia)#}, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (N, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j) \\<notin># wP_of_wstate (N, P, Q, n))\n 5. \\<And>D L' P Q L \\<sigma> Ca N ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst (P + Q);\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i) \\<in># wP_of_wstate (N + {#(Ca + {#L#}, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   (N + {#(Ca + {#L#}, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N + {#(Ca, ia)#}, P, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N + {#(Ca, ia)#}, P, Q, n))\n 6. \\<And>D L' N L \\<sigma> Ca P Q ia n.\n       \\<lbrakk>D + {#L'#} \\<in># image_mset fst N;\n        - L = L' \\<cdot>l \\<sigma>; D \\<cdot> \\<sigma> \\<subseteq># Ca;\n        (C, i) \\<in># wP_of_wstate (N, P, Q + {#(Ca + {#L#}, ia)#}, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   (N, P, Q + {#(Ca + {#L#}, ia)#}, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, P + {#(Ca, ia)#}, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, P + {#(Ca, ia)#}, Q, n))\n 7. \\<And>N Ca ia P Q n.\n       \\<lbrakk>(C, i) \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate (N + {#(Ca, ia)#}, P, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, P + {#(Ca, ia)#}, Q, n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, P + {#(Ca, ia)#}, Q, n))\n 8. \\<And>P Ca ia N n Q.\n       \\<lbrakk>\\<forall>(D, j)\\<in>#P. weight (Ca, ia) \\<le> weight (D, j);\n        N =\n        mset_set\n         ((\\<lambda>D. (D, n)) `\n          concls_of\n           (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n             (set_mset (image_mset fst Q)) Ca));\n        (C, i) \\<in># wP_of_wstate ({#}, P + {#(Ca, ia)#}, Q, n);\n        \\<forall>k.\n           (C, k)\n           \\<in># wP_of_wstate\n                   ({#}, P + {#(Ca, ia)#}, Q, n) \\<longrightarrow>\n           i \\<le> k\\<rbrakk>\n       \\<Longrightarrow> (C, i)\n                         \\<in># wP_of_wstate\n                                 (N, {#(D, j) \\<in># P. D \\<noteq> Ca#},\n                                  Q + {#(Ca, ia)#}, Suc n) \\<or>\n                         (\\<forall>j.\n                             (C, j)\n                             \\<notin># wP_of_wstate\n  (N, {#(D, j) \\<in># P. D \\<noteq> Ca#}, Q + {#(Ca, ia)#}, Suc n))", "qed auto"], ["", "lemma preserve_min_P:\n  assumes\n    \"St \\<leadsto>\\<^sub>w St'\" \"(C, j) \\<in># wP_of_wstate St'\" and\n    \"(C, i) \\<in># wP_of_wstate St\" and\n    \"\\<forall>k. (C, k) \\<in># wP_of_wstate St \\<longrightarrow> i \\<le> k\"\n  shows \"(C, i) \\<in># wP_of_wstate St'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate St'", "using assms preserve_min_or_delete_completely"], ["proof (prove)\nusing this:\n  St \\<leadsto>\\<^sub>w St'\n  (C, j) \\<in># wP_of_wstate St'\n  (C, i) \\<in># wP_of_wstate St\n  \\<forall>k. (C, k) \\<in># wP_of_wstate St \\<longrightarrow> i \\<le> k\n  \\<lbrakk>?St \\<leadsto>\\<^sub>w ?St'; (?C, ?i) \\<in># wP_of_wstate ?St;\n   \\<forall>k.\n      (?C, k) \\<in># wP_of_wstate ?St \\<longrightarrow> ?i \\<le> k\\<rbrakk>\n  \\<Longrightarrow> (?C, ?i) \\<in># wP_of_wstate ?St' \\<or>\n                    (\\<forall>j. (?C, j) \\<notin># wP_of_wstate ?St')\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate St'", "by blast"], ["", "lemma preserve_min_P_Sts:\n  assumes\n    \"enat (Suc k) < llength Sts\" and\n    \"(C, i) \\<in># wP_of_wstate (lnth Sts k)\" and\n    \"(C, j) \\<in># wP_of_wstate (lnth Sts (Suc k))\" and\n    \"\\<forall>j. (C, j) \\<in># wP_of_wstate (lnth Sts k) \\<longrightarrow> i \\<le> j\"\n  shows \"(C, i) \\<in># wP_of_wstate (lnth Sts (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (lnth Sts (Suc k))", "using deriv assms chain_lnth_rel preserve_min_P"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>\\<^sub>w) Sts\n  enat (Suc k) < llength Sts\n  (C, i) \\<in># wP_of_wstate (lnth Sts k)\n  (C, j) \\<in># wP_of_wstate (lnth Sts (Suc k))\n  \\<forall>j.\n     (C, j) \\<in># wP_of_wstate (lnth Sts k) \\<longrightarrow> i \\<le> j\n  \\<lbrakk>chain ?R ?xs; enat (Suc ?j) < llength ?xs\\<rbrakk>\n  \\<Longrightarrow> ?R (lnth ?xs ?j) (lnth ?xs (Suc ?j))\n  \\<lbrakk>?St \\<leadsto>\\<^sub>w ?St'; (?C, ?j) \\<in># wP_of_wstate ?St';\n   (?C, ?i) \\<in># wP_of_wstate ?St;\n   \\<forall>k.\n      (?C, k) \\<in># wP_of_wstate ?St \\<longrightarrow> ?i \\<le> k\\<rbrakk>\n  \\<Longrightarrow> (?C, ?i) \\<in># wP_of_wstate ?St'\n\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate (lnth Sts (Suc k))", "by metis"], ["", "lemma in_lnth_in_Supremum_ldrop:\n  assumes \"i < llength xs\" and \"x \\<in># (lnth xs i)\"\n  shows \"x \\<in> Sup_llist (lmap set_mset (ldrop (enat i) xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> Sup_llist (lmap set_mset (ldrop (enat i) xs))", "using assms"], ["proof (prove)\nusing this:\n  enat i < llength xs\n  x \\<in># lnth xs i\n\ngoal (1 subgoal):\n 1. x \\<in> Sup_llist (lmap set_mset (ldrop (enat i) xs))", "by (metis (no_types) ldrop_eq_LConsD ldropn_0 llist.simps(13) contra_subsetD\n      ldrop_enat ldropn_Suc_conv_ldropn lnth_0 lnth_lmap lnth_subset_Sup_llist)"], ["", "lemma persistent_wclause_in_P_if_persistent_clause_in_P:\n  assumes \"C \\<in> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\"\n  shows \"\\<exists>i. (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "obtain t_C where t_C_p:\n    \"enat t_C < llength Sts\"\n    \"\\<And>t. t_C \\<le> t \\<Longrightarrow> t < llength Sts \\<Longrightarrow> C \\<in> P_of_state (state_of_wstate (lnth Sts t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t_C.\n        \\<lbrakk>enat t_C < llength Sts;\n         \\<And>t.\n            \\<lbrakk>t_C \\<le> t; enat t < llength Sts\\<rbrakk>\n            \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  C \\<in> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\n\ngoal (1 subgoal):\n 1. (\\<And>t_C.\n        \\<lbrakk>enat t_C < llength Sts;\n         \\<And>t.\n            \\<lbrakk>t_C \\<le> t; enat t < llength Sts\\<rbrakk>\n            \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  C \\<in> (\\<Union>i\\<in>{i. enat i\n                             < llength\n                                (lmap P_of_state\n                                  (lmap state_of_wstate Sts))}.\n              \\<Inter>\n               (lnth (lmap P_of_state (lmap state_of_wstate Sts)) `\n                {j. i \\<le> j \\<and>\n                    enat j\n                    < llength\n                       (lmap P_of_state (lmap state_of_wstate Sts))}))\n\ngoal (1 subgoal):\n 1. (\\<And>t_C.\n        \\<lbrakk>enat t_C < llength Sts;\n         \\<And>t.\n            \\<lbrakk>t_C \\<le> t; enat t < llength Sts\\<rbrakk>\n            \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  enat t_C < llength Sts\n  \\<lbrakk>t_C \\<le> ?t; enat ?t < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts ?t)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "then"], ["proof (chain)\npicking this:\n  enat t_C < llength Sts\n  \\<lbrakk>t_C \\<le> ?t; enat ?t < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts ?t)", "obtain i where i_p:\n    \"(C, i) \\<in># wP_of_wstate (lnth Sts t_C)\""], ["proof (prove)\nusing this:\n  enat t_C < llength Sts\n  \\<lbrakk>t_C \\<le> ?t; enat ?t < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts ?t)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (C, i) \\<in># wP_of_wstate (lnth Sts t_C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using t_C_p"], ["proof (prove)\nusing this:\n  enat t_C < llength Sts\n  \\<lbrakk>t_C \\<le> ?t; enat ?t < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts ?t)\n  enat t_C < llength Sts\n  \\<lbrakk>t_C \\<le> ?t; enat ?t < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts ?t)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (C, i) \\<in># wP_of_wstate (lnth Sts t_C) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"lnth Sts t_C\") force"], ["proof (state)\nthis:\n  (C, i) \\<in># wP_of_wstate (lnth Sts t_C)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "have Ci_in_nth_wP: \"\\<exists>i. (C, i) \\<in># wP_of_wstate (lnth Sts (t_C + t))\" if \"t_C + t < llength Sts\"\n    for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. (C, i) \\<in># wP_of_wstate (lnth Sts (t_C + t))", "using that t_C_p(2)[of \"t_C + _\"]"], ["proof (prove)\nusing this:\n  enat (t_C + t) < llength Sts\n  \\<lbrakk>t_C \\<le> t_C + ?uu3; enat (t_C + ?uu3) < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts (t_C + ?uu3))\n\ngoal (1 subgoal):\n 1. \\<exists>i. (C, i) \\<in># wP_of_wstate (lnth Sts (t_C + t))", "by (cases \"lnth Sts (t_C + t)\") force"], ["proof (state)\nthis:\n  enat (t_C + ?t) < llength Sts \\<Longrightarrow>\n  \\<exists>i. (C, i) \\<in># wP_of_wstate (lnth Sts (t_C + ?t))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "define in_Sup_wP :: \"nat \\<Rightarrow> bool\" where\n    \"in_Sup_wP = (\\<lambda>i. (C, i) \\<in> Sup_llist (lmap (set_mset \\<circ> wP_of_wstate) (ldrop t_C Sts)))\""], ["proof (state)\nthis:\n  in_Sup_wP =\n  (\\<lambda>i.\n      (C, i)\n      \\<in> Sup_llist\n             (lmap (set_mset \\<circ> wP_of_wstate) (ldrop (enat t_C) Sts)))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "have \"in_Sup_wP i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. in_Sup_wP i", "using i_p assms(1) in_lnth_in_Supremum_ldrop[of t_C \"lmap wP_of_wstate Sts\" \"(C, i)\"] t_C_p"], ["proof (prove)\nusing this:\n  (C, i) \\<in># wP_of_wstate (lnth Sts t_C)\n  C \\<in> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\n  \\<lbrakk>enat t_C < llength (lmap wP_of_wstate Sts);\n   (C, i) \\<in># lnth (lmap wP_of_wstate Sts) t_C\\<rbrakk>\n  \\<Longrightarrow> (C, i)\n                    \\<in> Sup_llist\n                           (lmap set_mset\n                             (ldrop (enat t_C) (lmap wP_of_wstate Sts)))\n  enat t_C < llength Sts\n  \\<lbrakk>t_C \\<le> ?t; enat ?t < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts ?t)\n\ngoal (1 subgoal):\n 1. in_Sup_wP i", "by (simp add: in_Sup_wP_def llist.map_comp)"], ["proof (state)\nthis:\n  in_Sup_wP i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "then"], ["proof (chain)\npicking this:\n  in_Sup_wP i", "obtain j where j_p: \"is_least in_Sup_wP j\""], ["proof (prove)\nusing this:\n  in_Sup_wP i\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        is_least in_Sup_wP j \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding in_Sup_wP_def[symmetric]"], ["proof (prove)\nusing this:\n  in_Sup_wP i\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        is_least in_Sup_wP j \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using least_exists"], ["proof (prove)\nusing this:\n  in_Sup_wP i\n  ?P ?n \\<Longrightarrow> \\<exists>n. is_least ?P n\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        is_least in_Sup_wP j \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  is_least in_Sup_wP j\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "then"], ["proof (chain)\npicking this:\n  is_least in_Sup_wP j", "have \"\\<forall>i. (C, i) \\<in> Sup_llist (lmap (set_mset \\<circ> wP_of_wstate) (ldrop t_C Sts)) \\<longrightarrow> j \\<le> i\""], ["proof (prove)\nusing this:\n  is_least in_Sup_wP j\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (C, i)\n       \\<in> Sup_llist\n              (lmap (set_mset \\<circ> wP_of_wstate)\n                (ldrop (enat t_C) Sts)) \\<longrightarrow>\n       j \\<le> i", "unfolding is_least_def in_Sup_wP_def"], ["proof (prove)\nusing this:\n  (C, j)\n  \\<in> Sup_llist\n         (lmap (set_mset \\<circ> wP_of_wstate)\n           (ldrop (enat t_C) Sts)) \\<and>\n  (\\<forall>n'<j.\n      (C, n')\n      \\<notin> Sup_llist\n                (lmap (set_mset \\<circ> wP_of_wstate)\n                  (ldrop (enat t_C) Sts)))\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (C, i)\n       \\<in> Sup_llist\n              (lmap (set_mset \\<circ> wP_of_wstate)\n                (ldrop (enat t_C) Sts)) \\<longrightarrow>\n       j \\<le> i", "using not_less"], ["proof (prove)\nusing this:\n  (C, j)\n  \\<in> Sup_llist\n         (lmap (set_mset \\<circ> wP_of_wstate)\n           (ldrop (enat t_C) Sts)) \\<and>\n  (\\<forall>n'<j.\n      (C, n')\n      \\<notin> Sup_llist\n                (lmap (set_mset \\<circ> wP_of_wstate)\n                  (ldrop (enat t_C) Sts)))\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (C, i)\n       \\<in> Sup_llist\n              (lmap (set_mset \\<circ> wP_of_wstate)\n                (ldrop (enat t_C) Sts)) \\<longrightarrow>\n       j \\<le> i", "by blast"], ["proof (state)\nthis:\n  \\<forall>i.\n     (C, i)\n     \\<in> Sup_llist\n            (lmap (set_mset \\<circ> wP_of_wstate)\n              (ldrop (enat t_C) Sts)) \\<longrightarrow>\n     j \\<le> i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "then"], ["proof (chain)\npicking this:\n  \\<forall>i.\n     (C, i)\n     \\<in> Sup_llist\n            (lmap (set_mset \\<circ> wP_of_wstate)\n              (ldrop (enat t_C) Sts)) \\<longrightarrow>\n     j \\<le> i", "have j_smallest:\n    \"\\<And>i t. enat (t_C + t) < llength Sts \\<Longrightarrow> (C, i) \\<in># wP_of_wstate (lnth Sts (t_C + t)) \\<Longrightarrow> j \\<le> i\""], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (C, i)\n     \\<in> Sup_llist\n            (lmap (set_mset \\<circ> wP_of_wstate)\n              (ldrop (enat t_C) Sts)) \\<longrightarrow>\n     j \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>enat (t_C + t) < llength Sts;\n        (C, i) \\<in># wP_of_wstate (lnth Sts (t_C + t))\\<rbrakk>\n       \\<Longrightarrow> j \\<le> i", "unfolding comp_def"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (C, i)\n     \\<in> Sup_llist\n            (lmap (\\<lambda>x. set_mset (wP_of_wstate x))\n              (ldrop (enat t_C) Sts)) \\<longrightarrow>\n     j \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>enat (t_C + t) < llength Sts;\n        (C, i) \\<in># wP_of_wstate (lnth Sts (t_C + t))\\<rbrakk>\n       \\<Longrightarrow> j \\<le> i", "by (smt add.commute ldrop_enat ldrop_eq_LConsD ldrop_ldrop ldropn_Suc_conv_ldropn\n        plus_enat_simps(1)  lnth_ldropn Sup_llist_def UN_I ldrop_lmap llength_lmap lnth_lmap\n        mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>enat (t_C + ?t) < llength Sts;\n   (C, ?i) \\<in># wP_of_wstate (lnth Sts (t_C + ?t))\\<rbrakk>\n  \\<Longrightarrow> j \\<le> ?i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "from j_p"], ["proof (chain)\npicking this:\n  is_least in_Sup_wP j", "have \"\\<exists>t_Cj. t_Cj < llength (ldrop (enat t_C) Sts)\n    \\<and> (C, j) \\<in># wP_of_wstate (lnth (ldrop t_C Sts) t_Cj)\""], ["proof (prove)\nusing this:\n  is_least in_Sup_wP j\n\ngoal (1 subgoal):\n 1. \\<exists>t_Cj.\n       enat t_Cj < llength (ldrop (enat t_C) Sts) \\<and>\n       (C, j) \\<in># wP_of_wstate (lnth (ldrop (enat t_C) Sts) t_Cj)", "unfolding in_Sup_wP_def Sup_llist_def is_least_def"], ["proof (prove)\nusing this:\n  (C, j)\n  \\<in> \\<Union>\n         (lnth\n           (lmap (set_mset \\<circ> wP_of_wstate) (ldrop (enat t_C) Sts)) `\n          {i. enat i\n              < llength\n                 (lmap (set_mset \\<circ> wP_of_wstate)\n                   (ldrop (enat t_C) Sts))}) \\<and>\n  (\\<forall>n'<j.\n      (C, n')\n      \\<notin> \\<Union>\n                (lnth\n                  (lmap (set_mset \\<circ> wP_of_wstate)\n                    (ldrop (enat t_C) Sts)) `\n                 {i. enat i\n                     < llength\n                        (lmap (set_mset \\<circ> wP_of_wstate)\n                          (ldrop (enat t_C) Sts))}))\n\ngoal (1 subgoal):\n 1. \\<exists>t_Cj.\n       enat t_Cj < llength (ldrop (enat t_C) Sts) \\<and>\n       (C, j) \\<in># wP_of_wstate (lnth (ldrop (enat t_C) Sts) t_Cj)", "by simp"], ["proof (state)\nthis:\n  \\<exists>t_Cj.\n     enat t_Cj < llength (ldrop (enat t_C) Sts) \\<and>\n     (C, j) \\<in># wP_of_wstate (lnth (ldrop (enat t_C) Sts) t_Cj)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "then"], ["proof (chain)\npicking this:\n  \\<exists>t_Cj.\n     enat t_Cj < llength (ldrop (enat t_C) Sts) \\<and>\n     (C, j) \\<in># wP_of_wstate (lnth (ldrop (enat t_C) Sts) t_Cj)", "obtain t_Cj where j_p:\n    \"(C,j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj))\"\n    \"enat (t_C + t_Cj) < llength Sts\""], ["proof (prove)\nusing this:\n  \\<exists>t_Cj.\n     enat t_Cj < llength (ldrop (enat t_C) Sts) \\<and>\n     (C, j) \\<in># wP_of_wstate (lnth (ldrop (enat t_C) Sts) t_Cj)\n\ngoal (1 subgoal):\n 1. (\\<And>t_Cj.\n        \\<lbrakk>(C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj));\n         enat (t_C + t_Cj) < llength Sts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (smt add.commute ldrop_enat ldrop_eq_LConsD ldrop_ldrop ldropn_Suc_conv_ldropn\n        plus_enat_simps(1) lhd_ldropn)"], ["proof (state)\nthis:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj))\n  enat (t_C + t_Cj) < llength Sts\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "have Ci_stays:\n    \"t_C + t_Cj + t < llength Sts \\<Longrightarrow> (C,j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\" for t"], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n    (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))", "proof (induction t)"], ["proof (state)\ngoal (2 subgoals):\n 1. enat (t_C + t_Cj + 0) < llength Sts \\<Longrightarrow>\n    (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + 0))\n 2. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "case 0"], ["proof (state)\nthis:\n  enat (t_C + t_Cj + 0) < llength Sts\n\ngoal (2 subgoals):\n 1. enat (t_C + t_Cj + 0) < llength Sts \\<Longrightarrow>\n    (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + 0))\n 2. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "then"], ["proof (chain)\npicking this:\n  enat (t_C + t_Cj + 0) < llength Sts", "show ?case"], ["proof (prove)\nusing this:\n  enat (t_C + t_Cj + 0) < llength Sts\n\ngoal (1 subgoal):\n 1. (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + 0))", "using j_p"], ["proof (prove)\nusing this:\n  enat (t_C + t_Cj + 0) < llength Sts\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj))\n  enat (t_C + t_Cj) < llength Sts\n\ngoal (1 subgoal):\n 1. (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + 0))", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + 0))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "case (Suc t)"], ["proof (state)\nthis:\n  enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n  enat (t_C + t_Cj + Suc t) < llength Sts\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "have any_Ck_in_wP: \"j \\<le> k\" if \"(C, k) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<le> k", "using that j_p j_smallest Suc"], ["proof (prove)\nusing this:\n  (C, k) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj))\n  enat (t_C + t_Cj) < llength Sts\n  \\<lbrakk>enat (t_C + ?t) < llength Sts;\n   (C, ?i) \\<in># wP_of_wstate (lnth Sts (t_C + ?t))\\<rbrakk>\n  \\<Longrightarrow> j \\<le> ?i\n  enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n  enat (t_C + t_Cj + Suc t) < llength Sts\n\ngoal (1 subgoal):\n 1. j \\<le> k", "by (smt Suc_ile_eq add.commute add.left_commute add_Suc less_imp_le plus_enat_simps(1)\n          the_enat.simps)"], ["proof (state)\nthis:\n  (C, ?k) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t)) \\<Longrightarrow>\n  j \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "from Suc"], ["proof (chain)\npicking this:\n  enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n  enat (t_C + t_Cj + Suc t) < llength Sts", "have Cj_in_wP: \"(C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\""], ["proof (prove)\nusing this:\n  enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n  enat (t_C + t_Cj + Suc t) < llength Sts\n\ngoal (1 subgoal):\n 1. (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))", "by (metis (no_types, hide_lams) Suc_ile_eq add.commute add_Suc_right less_imp_le)"], ["proof (state)\nthis:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "moreover"], ["proof (state)\nthis:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "have \"C \\<in> P_of_state (state_of_wstate (lnth Sts (Suc (t_C + t_Cj + t))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> P_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))", "using t_C_p(2) Suc.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>t_C \\<le> ?t; enat ?t < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> P_of_wstate (lnth Sts ?t)\n  enat (t_C + t_Cj + Suc t) < llength Sts\n\ngoal (1 subgoal):\n 1. C \\<in> P_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))", "by auto"], ["proof (state)\nthis:\n  C \\<in> P_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "then"], ["proof (chain)\npicking this:\n  C \\<in> P_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))", "have \"\\<exists>k. (C, k) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\""], ["proof (prove)\nusing this:\n  C \\<in> P_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\n\ngoal (1 subgoal):\n 1. \\<exists>k. (C, k) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))", "by (smt Suc.prems Ci_in_nth_wP add.commute add.left_commute add_Suc_right enat_ord_code(4))"], ["proof (state)\nthis:\n  \\<exists>k. (C, k) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "ultimately"], ["proof (chain)\npicking this:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n  \\<exists>k. (C, k) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))", "have \"(C, j) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\""], ["proof (prove)\nusing this:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n  \\<exists>k. (C, k) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\n\ngoal (1 subgoal):\n 1. (C, j) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))", "using preserve_min_P_Sts Cj_in_wP any_Ck_in_wP Suc.prems"], ["proof (prove)\nusing this:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n  \\<exists>k. (C, k) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\n  \\<lbrakk>enat (Suc ?k) < llength Sts;\n   (?C, ?i) \\<in># wP_of_wstate (lnth Sts ?k);\n   (?C, ?j) \\<in># wP_of_wstate (lnth Sts (Suc ?k));\n   \\<forall>j.\n      (?C, j) \\<in># wP_of_wstate (lnth Sts ?k) \\<longrightarrow>\n      ?i \\<le> j\\<rbrakk>\n  \\<Longrightarrow> (?C, ?i) \\<in># wP_of_wstate (lnth Sts (Suc ?k))\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t))\n  (C, ?k) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t)) \\<Longrightarrow>\n  j \\<le> ?k\n  enat (t_C + t_Cj + Suc t) < llength Sts\n\ngoal (1 subgoal):\n 1. (C, j) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))", "by force"], ["proof (state)\nthis:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "then"], ["proof (chain)\npicking this:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))", "have \"(C, j) \\<in># lnth (lmap wP_of_wstate Sts) (Suc (t_C + t_Cj + t))\""], ["proof (prove)\nusing this:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\n\ngoal (1 subgoal):\n 1. (C, j) \\<in># lnth (lmap wP_of_wstate Sts) (Suc (t_C + t_Cj + t))", "using Suc.prems"], ["proof (prove)\nusing this:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (Suc (t_C + t_Cj + t)))\n  enat (t_C + t_Cj + Suc t) < llength Sts\n\ngoal (1 subgoal):\n 1. (C, j) \\<in># lnth (lmap wP_of_wstate Sts) (Suc (t_C + t_Cj + t))", "by auto"], ["proof (state)\nthis:\n  (C, j) \\<in># lnth (lmap wP_of_wstate Sts) (Suc (t_C + t_Cj + t))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>enat (t_C + t_Cj + t) < llength Sts \\<Longrightarrow>\n                (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + t));\n        enat (t_C + t_Cj + Suc t) < llength Sts\\<rbrakk>\n       \\<Longrightarrow> (C, j)\n                         \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "then"], ["proof (chain)\npicking this:\n  (C, j) \\<in># lnth (lmap wP_of_wstate Sts) (Suc (t_C + t_Cj + t))", "show ?case"], ["proof (prove)\nusing this:\n  (C, j) \\<in># lnth (lmap wP_of_wstate Sts) (Suc (t_C + t_Cj + t))\n\ngoal (1 subgoal):\n 1. (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))", "by (smt Suc.prems add.commute add_Suc_right lnth_lmap)"], ["proof (state)\nthis:\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + Suc t))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enat (t_C + t_Cj + ?t) < llength Sts \\<Longrightarrow>\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + ?t))\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "then"], ["proof (chain)\npicking this:\n  enat (t_C + t_Cj + ?t) < llength Sts \\<Longrightarrow>\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + ?t))", "have \"(\\<And>t. t_C + t_Cj \\<le> t \\<Longrightarrow> t < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts) \\<Longrightarrow>\n    (C, j) \\<in># wP_of_wstate (lnth Sts t))\""], ["proof (prove)\nusing this:\n  enat (t_C + t_Cj + ?t) < llength Sts \\<Longrightarrow>\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + ?t))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t_C + t_Cj \\<le> t;\n        enat t < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)\\<rbrakk>\n       \\<Longrightarrow> (C, j) \\<in># wP_of_wstate (lnth Sts t)", "using Ci_stays[of \"_ - (t_C + t_Cj)\"]"], ["proof (prove)\nusing this:\n  enat (t_C + t_Cj + ?t) < llength Sts \\<Longrightarrow>\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + ?t))\n  enat (t_C + t_Cj + (?uu3 - (t_C + t_Cj))) < llength Sts \\<Longrightarrow>\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj + (?uu3 - (t_C + t_Cj))))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t_C + t_Cj \\<le> t;\n        enat t < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)\\<rbrakk>\n       \\<Longrightarrow> (C, j) \\<in># wP_of_wstate (lnth Sts t)", "by (metis le_add_diff_inverse llength_lmap)"], ["proof (state)\nthis:\n  \\<lbrakk>t_C + t_Cj \\<le> ?t;\n   enat ?t < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)\\<rbrakk>\n  \\<Longrightarrow> (C, j) \\<in># wP_of_wstate (lnth Sts ?t)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>t_C + t_Cj \\<le> ?t;\n   enat ?t < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)\\<rbrakk>\n  \\<Longrightarrow> (C, j) \\<in># wP_of_wstate (lnth Sts ?t)", "have \"(C, j) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>t_C + t_Cj \\<le> ?t;\n   enat ?t < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)\\<rbrakk>\n  \\<Longrightarrow> (C, j) \\<in># wP_of_wstate (lnth Sts ?t)\n\ngoal (1 subgoal):\n 1. (C, j) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>t_C + t_Cj \\<le> ?t;\n   enat ?t < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)\\<rbrakk>\n  \\<Longrightarrow> (C, j) \\<in># wP_of_wstate (lnth Sts ?t)\n\ngoal (1 subgoal):\n 1. (C, j)\n    \\<in> (\\<Union>i\\<in>{i. enat i\n                             < llength\n                                (lmap (set_mset \\<circ> wP_of_wstate) Sts)}.\n              \\<Inter>\n               (lnth (lmap (set_mset \\<circ> wP_of_wstate) Sts) `\n                {j. i \\<le> j \\<and>\n                    enat j\n                    < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)}))", "using j_p"], ["proof (prove)\nusing this:\n  \\<lbrakk>t_C + t_Cj \\<le> ?t;\n   enat ?t < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)\\<rbrakk>\n  \\<Longrightarrow> (C, j) \\<in># wP_of_wstate (lnth Sts ?t)\n  (C, j) \\<in># wP_of_wstate (lnth Sts (t_C + t_Cj))\n  enat (t_C + t_Cj) < llength Sts\n\ngoal (1 subgoal):\n 1. (C, j)\n    \\<in> (\\<Union>i\\<in>{i. enat i\n                             < llength\n                                (lmap (set_mset \\<circ> wP_of_wstate) Sts)}.\n              \\<Inter>\n               (lnth (lmap (set_mset \\<circ> wP_of_wstate) Sts) `\n                {j. i \\<le> j \\<and>\n                    enat j\n                    < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)}))", "by auto"], ["proof (state)\nthis:\n  (C, j) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "then"], ["proof (chain)\npicking this:\n  (C, j) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "show \"\\<exists>i. (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\""], ["proof (prove)\nusing this:\n  (C, j) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lfinite_not_LNil_nth_llast:\n  assumes \"lfinite Sts\" and \"Sts \\<noteq> LNil\"\n  shows \"\\<exists>i < llength Sts. lnth Sts i = llast Sts \\<and> (\\<forall>j < llength Sts. j \\<le> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Sts \\<and>\n       lnth Sts i = llast Sts \\<and>\n       (\\<forall>j<llength Sts. j \\<le> enat i)", "using assms"], ["proof (prove)\nusing this:\n  lfinite Sts\n  Sts \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength Sts \\<and>\n       lnth Sts i = llast Sts \\<and>\n       (\\<forall>j<llength Sts. j \\<le> enat i)", "proof (induction rule: lfinite.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. LNil \\<noteq> LNil \\<Longrightarrow>\n    \\<exists>i.\n       enat i < llength LNil \\<and>\n       lnth LNil i = llast LNil \\<and>\n       (\\<forall>j<llength LNil. j \\<le> enat i)\n 2. \\<And>xs x.\n       \\<lbrakk>lfinite xs;\n        xs \\<noteq> LNil \\<Longrightarrow>\n        \\<exists>i.\n           enat i < llength xs \\<and>\n           lnth xs i = llast xs \\<and>\n           (\\<forall>j<llength xs. j \\<le> enat i);\n        LCons x xs \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i.\n                            enat i < llength (LCons x xs) \\<and>\n                            lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                            (\\<forall>j<llength (LCons x xs).\n                                j \\<le> enat i)", "case (lfinite_LConsI xs x)"], ["proof (state)\nthis:\n  lfinite xs\n  xs \\<noteq> LNil \\<Longrightarrow>\n  \\<exists>i.\n     enat i < llength xs \\<and>\n     lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)\n  LCons x xs \\<noteq> LNil\n\ngoal (2 subgoals):\n 1. LNil \\<noteq> LNil \\<Longrightarrow>\n    \\<exists>i.\n       enat i < llength LNil \\<and>\n       lnth LNil i = llast LNil \\<and>\n       (\\<forall>j<llength LNil. j \\<le> enat i)\n 2. \\<And>xs x.\n       \\<lbrakk>lfinite xs;\n        xs \\<noteq> LNil \\<Longrightarrow>\n        \\<exists>i.\n           enat i < llength xs \\<and>\n           lnth xs i = llast xs \\<and>\n           (\\<forall>j<llength xs. j \\<le> enat i);\n        LCons x xs \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> \\<exists>i.\n                            enat i < llength (LCons x xs) \\<and>\n                            lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                            (\\<forall>j<llength (LCons x xs).\n                                j \\<le> enat i)", "then"], ["proof (chain)\npicking this:\n  lfinite xs\n  xs \\<noteq> LNil \\<Longrightarrow>\n  \\<exists>i.\n     enat i < llength xs \\<and>\n     lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)\n  LCons x xs \\<noteq> LNil", "show ?case"], ["proof (prove)\nusing this:\n  lfinite xs\n  xs \\<noteq> LNil \\<Longrightarrow>\n  \\<exists>i.\n     enat i < llength xs \\<and>\n     lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)\n  LCons x xs \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength (LCons x xs) \\<and>\n       lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n       (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "proof (cases \"xs = LNil\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs = LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)\n 2. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "case True"], ["proof (state)\nthis:\n  xs = LNil\n\ngoal (2 subgoals):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs = LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)\n 2. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength (LCons x xs) \\<and>\n       lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n       (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "using True zero_enat_def"], ["proof (prove)\nusing this:\n  xs = LNil\n  0 = enat 0\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength (LCons x xs) \\<and>\n       lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n       (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     enat i < llength (LCons x xs) \\<and>\n     lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n     (\\<forall>j<llength (LCons x xs). j \\<le> enat i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "case False"], ["proof (state)\nthis:\n  xs \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "then"], ["proof (chain)\npicking this:\n  xs \\<noteq> LNil", "obtain i where\n      i_p: \"enat i < llength xs \\<and> lnth xs i = llast xs \\<and> (\\<forall>j < llength xs. j \\<le> enat i)\""], ["proof (prove)\nusing this:\n  xs \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and>\n        (\\<forall>j<llength xs. j \\<le> enat i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using lfinite_LConsI"], ["proof (prove)\nusing this:\n  xs \\<noteq> LNil\n  lfinite xs\n  xs \\<noteq> LNil \\<Longrightarrow>\n  \\<exists>i.\n     enat i < llength xs \\<and>\n     lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)\n  LCons x xs \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and>\n        (\\<forall>j<llength xs. j \\<le> enat i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  enat i < llength xs \\<and>\n  lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "then"], ["proof (chain)\npicking this:\n  enat i < llength xs \\<and>\n  lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)", "have \"enat (Suc i) < llength (LCons x xs)\""], ["proof (prove)\nusing this:\n  enat i < llength xs \\<and>\n  lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)\n\ngoal (1 subgoal):\n 1. enat (Suc i) < llength (LCons x xs)", "by (simp add: Suc_ile_eq)"], ["proof (state)\nthis:\n  enat (Suc i) < llength (LCons x xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "moreover"], ["proof (state)\nthis:\n  enat (Suc i) < llength (LCons x xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "from i_p"], ["proof (chain)\npicking this:\n  enat i < llength xs \\<and>\n  lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)", "have \"lnth (LCons x xs) (Suc i) = llast (LCons x xs)\""], ["proof (prove)\nusing this:\n  enat i < llength xs \\<and>\n  lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)\n\ngoal (1 subgoal):\n 1. lnth (LCons x xs) (Suc i) = llast (LCons x xs)", "by (metis gr_implies_not_zero llast_LCons llength_lnull lnth_Suc_LCons)"], ["proof (state)\nthis:\n  lnth (LCons x xs) (Suc i) = llast (LCons x xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "moreover"], ["proof (state)\nthis:\n  lnth (LCons x xs) (Suc i) = llast (LCons x xs)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "from i_p"], ["proof (chain)\npicking this:\n  enat i < llength xs \\<and>\n  lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)", "have \"\\<forall>j < llength (LCons x xs). j \\<le> enat (Suc i)\""], ["proof (prove)\nusing this:\n  enat i < llength xs \\<and>\n  lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i)\n\ngoal (1 subgoal):\n 1. \\<forall>j<llength (LCons x xs). j \\<le> enat (Suc i)", "by (metis antisym_conv2 eSuc_enat eSuc_ile_mono ileI1 iless_Suc_eq llength_LCons)"], ["proof (state)\nthis:\n  \\<forall>j<llength (LCons x xs). j \\<le> enat (Suc i)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lfinite xs;\n     xs \\<noteq> LNil \\<Longrightarrow>\n     \\<exists>i.\n        enat i < llength xs \\<and>\n        lnth xs i = llast xs \\<and> (\\<forall>j<llength xs. j \\<le> enat i);\n     LCons x xs \\<noteq> LNil; xs \\<noteq> LNil\\<rbrakk>\n    \\<Longrightarrow> \\<exists>i.\n                         enat i < llength (LCons x xs) \\<and>\n                         lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n                         (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "ultimately"], ["proof (chain)\npicking this:\n  enat (Suc i) < llength (LCons x xs)\n  lnth (LCons x xs) (Suc i) = llast (LCons x xs)\n  \\<forall>j<llength (LCons x xs). j \\<le> enat (Suc i)", "show ?thesis"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength (LCons x xs)\n  lnth (LCons x xs) (Suc i) = llast (LCons x xs)\n  \\<forall>j<llength (LCons x xs). j \\<le> enat (Suc i)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       enat i < llength (LCons x xs) \\<and>\n       lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n       (\\<forall>j<llength (LCons x xs). j \\<le> enat i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     enat i < llength (LCons x xs) \\<and>\n     lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n     (\\<forall>j<llength (LCons x xs). j \\<le> enat i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i.\n     enat i < llength (LCons x xs) \\<and>\n     lnth (LCons x xs) i = llast (LCons x xs) \\<and>\n     (\\<forall>j<llength (LCons x xs). j \\<le> enat i)\n\ngoal (1 subgoal):\n 1. LNil \\<noteq> LNil \\<Longrightarrow>\n    \\<exists>i.\n       enat i < llength LNil \\<and>\n       lnth LNil i = llast LNil \\<and>\n       (\\<forall>j<llength LNil. j \\<le> enat i)", "qed auto"], ["", "lemma fair_if_finite:\n  assumes fin: \"lfinite Sts\"\n  shows \"fair_state_seq (lmap state_of_wstate Sts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fair_state_seq (lmap state_of_wstate Sts)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "assume unfair: \"\\<not> fair_state_seq (lmap state_of_wstate Sts)\""], ["proof (state)\nthis:\n  \\<not> fair_state_seq (lmap state_of_wstate Sts)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "have no_inf_from_last: \"\\<forall>y. \\<not> llast Sts \\<leadsto>\\<^sub>w y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y. \\<not> llast Sts \\<leadsto>\\<^sub>w y", "using fin full_chain_iff_chain[of \"(\\<leadsto>\\<^sub>w)\" Sts] full_deriv"], ["proof (prove)\nusing this:\n  lfinite Sts\n  full_chain (\\<leadsto>\\<^sub>w) Sts =\n  (chain (\\<leadsto>\\<^sub>w) Sts \\<and>\n   (lfinite Sts \\<longrightarrow>\n    (\\<forall>y. \\<not> llast Sts \\<leadsto>\\<^sub>w y)))\n  full_chain (\\<leadsto>\\<^sub>w) Sts\n\ngoal (1 subgoal):\n 1. \\<forall>y. \\<not> llast Sts \\<leadsto>\\<^sub>w y", "by auto"], ["proof (state)\nthis:\n  \\<forall>y. \\<not> llast Sts \\<leadsto>\\<^sub>w y\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "from unfair"], ["proof (chain)\npicking this:\n  \\<not> fair_state_seq (lmap state_of_wstate Sts)", "obtain C where\n    \"C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts))\n       \\<union> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\""], ["proof (prove)\nusing this:\n  \\<not> fair_state_seq (lmap state_of_wstate Sts)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        C \\<in> Liminf_llist\n                 (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n                Liminf_llist\n                 (lmap P_of_state\n                   (lmap state_of_wstate Sts)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding fair_state_seq_def Liminf_state_def"], ["proof (prove)\nusing this:\n  \\<not> (N_of_state\n           (Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)),\n            Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts)),\n            Liminf_llist (lmap Q_of_state (lmap state_of_wstate Sts))) =\n          {} \\<and>\n          P_of_state\n           (Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)),\n            Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts)),\n            Liminf_llist (lmap Q_of_state (lmap state_of_wstate Sts))) =\n          {})\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        C \\<in> Liminf_llist\n                 (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n                Liminf_llist\n                 (lmap P_of_state\n                   (lmap state_of_wstate Sts)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n          Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n          Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))", "obtain i where i_p:\n    \"enat i < llength Sts\"\n    \"\\<And>j. i \\<le> j \\<Longrightarrow> enat j < llength Sts \\<Longrightarrow>\n     C \\<in> N_of_state (state_of_wstate (lnth Sts j)) \\<union> P_of_state (state_of_wstate (lnth Sts j))\""], ["proof (prove)\nusing this:\n  C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n          Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>enat i < llength Sts;\n         \\<And>j.\n            \\<lbrakk>i \\<le> j; enat j < llength Sts\\<rbrakk>\n            \\<Longrightarrow> C \\<in> N_of_wstate (lnth Sts j) \\<union>\nP_of_wstate (lnth Sts j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  C \\<in> (\\<Union>i\\<in>{i. enat i\n                             < llength\n                                (lmap N_of_state\n                                  (lmap state_of_wstate Sts))}.\n              \\<Inter>\n               (lnth (lmap N_of_state (lmap state_of_wstate Sts)) `\n                {j. i \\<le> j \\<and>\n                    enat j\n                    < llength\n                       (lmap N_of_state\n                         (lmap state_of_wstate Sts))})) \\<union>\n          (\\<Union>i\\<in>{i. enat i\n                             < llength\n                                (lmap P_of_state\n                                  (lmap state_of_wstate Sts))}.\n              \\<Inter>\n               (lnth (lmap P_of_state (lmap state_of_wstate Sts)) `\n                {j. i \\<le> j \\<and>\n                    enat j\n                    < llength\n                       (lmap P_of_state (lmap state_of_wstate Sts))}))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>enat i < llength Sts;\n         \\<And>j.\n            \\<lbrakk>i \\<le> j; enat j < llength Sts\\<rbrakk>\n            \\<Longrightarrow> C \\<in> N_of_wstate (lnth Sts j) \\<union>\nP_of_wstate (lnth Sts j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  enat i < llength Sts\n  \\<lbrakk>i \\<le> ?j; enat ?j < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> N_of_wstate (lnth Sts ?j) \\<union>\n                            P_of_wstate (lnth Sts ?j)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "have C_in_llast:\n    \"C \\<in> N_of_state (state_of_wstate (llast Sts)) \\<union> P_of_state (state_of_wstate (llast Sts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<in> N_of_wstate (llast Sts) \\<union> P_of_wstate (llast Sts)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<in> N_of_wstate (llast Sts) \\<union> P_of_wstate (llast Sts)", "obtain l where\n      l_p: \"enat l < llength Sts \\<and> lnth Sts l = llast Sts \\<and> (\\<forall>j < llength Sts. j \\<le> enat l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>l.\n        enat l < llength Sts \\<and>\n        lnth Sts l = llast Sts \\<and>\n        (\\<forall>j<llength Sts. j \\<le> enat l) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using fin lfinite_not_LNil_nth_llast i_p(1)"], ["proof (prove)\nusing this:\n  lfinite Sts\n  \\<lbrakk>lfinite Sts; Sts \\<noteq> LNil\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       enat i < llength Sts \\<and>\n                       lnth Sts i = llast Sts \\<and>\n                       (\\<forall>j<llength Sts. j \\<le> enat i)\n  enat i < llength Sts\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        enat l < llength Sts \\<and>\n        lnth Sts l = llast Sts \\<and>\n        (\\<forall>j<llength Sts. j \\<le> enat l) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  enat l < llength Sts \\<and>\n  lnth Sts l = llast Sts \\<and> (\\<forall>j<llength Sts. j \\<le> enat l)\n\ngoal (1 subgoal):\n 1. C \\<in> N_of_wstate (llast Sts) \\<union> P_of_wstate (llast Sts)", "then"], ["proof (chain)\npicking this:\n  enat l < llength Sts \\<and>\n  lnth Sts l = llast Sts \\<and> (\\<forall>j<llength Sts. j \\<le> enat l)", "have\n      \"C \\<in> N_of_state (state_of_wstate (lnth Sts l)) \\<union> P_of_state (state_of_wstate (lnth Sts l))\""], ["proof (prove)\nusing this:\n  enat l < llength Sts \\<and>\n  lnth Sts l = llast Sts \\<and> (\\<forall>j<llength Sts. j \\<le> enat l)\n\ngoal (1 subgoal):\n 1. C \\<in> N_of_wstate (lnth Sts l) \\<union> P_of_wstate (lnth Sts l)", "using i_p(1) i_p(2)[of l]"], ["proof (prove)\nusing this:\n  enat l < llength Sts \\<and>\n  lnth Sts l = llast Sts \\<and> (\\<forall>j<llength Sts. j \\<le> enat l)\n  enat i < llength Sts\n  \\<lbrakk>i \\<le> l; enat l < llength Sts\\<rbrakk>\n  \\<Longrightarrow> C \\<in> N_of_wstate (lnth Sts l) \\<union>\n                            P_of_wstate (lnth Sts l)\n\ngoal (1 subgoal):\n 1. C \\<in> N_of_wstate (lnth Sts l) \\<union> P_of_wstate (lnth Sts l)", "by auto"], ["proof (state)\nthis:\n  C \\<in> N_of_wstate (lnth Sts l) \\<union> P_of_wstate (lnth Sts l)\n\ngoal (1 subgoal):\n 1. C \\<in> N_of_wstate (llast Sts) \\<union> P_of_wstate (llast Sts)", "then"], ["proof (chain)\npicking this:\n  C \\<in> N_of_wstate (lnth Sts l) \\<union> P_of_wstate (lnth Sts l)", "show ?thesis"], ["proof (prove)\nusing this:\n  C \\<in> N_of_wstate (lnth Sts l) \\<union> P_of_wstate (lnth Sts l)\n\ngoal (1 subgoal):\n 1. C \\<in> N_of_wstate (llast Sts) \\<union> P_of_wstate (llast Sts)", "using l_p"], ["proof (prove)\nusing this:\n  C \\<in> N_of_wstate (lnth Sts l) \\<union> P_of_wstate (lnth Sts l)\n  enat l < llength Sts \\<and>\n  lnth Sts l = llast Sts \\<and> (\\<forall>j<llength Sts. j \\<le> enat l)\n\ngoal (1 subgoal):\n 1. C \\<in> N_of_wstate (llast Sts) \\<union> P_of_wstate (llast Sts)", "by auto"], ["proof (state)\nthis:\n  C \\<in> N_of_wstate (llast Sts) \\<union> P_of_wstate (llast Sts)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  C \\<in> N_of_wstate (llast Sts) \\<union> P_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "define N :: \"'a wclause multiset\" where \"N = wN_of_wstate (llast Sts)\""], ["proof (state)\nthis:\n  N = wN_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "define P :: \"'a wclause multiset\" where \"P = wP_of_wstate (llast Sts)\""], ["proof (state)\nthis:\n  P = wP_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "define Q :: \"'a wclause multiset\" where \"Q = wQ_of_wstate (llast Sts)\""], ["proof (state)\nthis:\n  Q = wQ_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "define n :: nat where \"n = n_of_wstate (llast Sts)\""], ["proof (state)\nthis:\n  n = n_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  n = n_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "assume \"N_of_state (state_of_wstate (llast Sts)) \\<noteq> {}\""], ["proof (state)\nthis:\n  N_of_wstate (llast Sts) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  N_of_wstate (llast Sts) \\<noteq> {}", "obtain D j where \"(D, j) \\<in># N\""], ["proof (prove)\nusing this:\n  N_of_wstate (llast Sts) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>D j. (D, j) \\<in># N \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding N_def"], ["proof (prove)\nusing this:\n  N_of_wstate (llast Sts) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>D j.\n        (D, j) \\<in># wN_of_wstate (llast Sts) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"llast Sts\") auto"], ["proof (state)\nthis:\n  (D, j) \\<in># N\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (D, j) \\<in># N", "have \"llast Sts \\<leadsto>\\<^sub>w (N - {#(D, j)#}, P + {#(D, j)#}, Q, n)\""], ["proof (prove)\nusing this:\n  (D, j) \\<in># N\n\ngoal (1 subgoal):\n 1. llast Sts \\<leadsto>\\<^sub>w\n    (remove1_mset (D, j) N, P + {#(D, j)#}, Q, n)", "using weighted_RP.clause_processing[of \"N - {#(D, j)#}\" D j P Q n]"], ["proof (prove)\nusing this:\n  (D, j) \\<in># N\n  (remove1_mset (D, j) N + {#(D, j)#}, P, Q, n) \\<leadsto>\\<^sub>w\n  (remove1_mset (D, j) N, P + {#(D, j)#}, Q, n)\n\ngoal (1 subgoal):\n 1. llast Sts \\<leadsto>\\<^sub>w\n    (remove1_mset (D, j) N, P + {#(D, j)#}, Q, n)", "unfolding N_def P_def Q_def n_def"], ["proof (prove)\nusing this:\n  (D, j) \\<in># wN_of_wstate (llast Sts)\n  (remove1_mset (D, j) (wN_of_wstate (llast Sts)) + {#(D, j)#},\n   wP_of_wstate (llast Sts), wQ_of_wstate (llast Sts),\n   n_of_wstate (llast Sts)) \\<leadsto>\\<^sub>w\n  (remove1_mset (D, j) (wN_of_wstate (llast Sts)),\n   wP_of_wstate (llast Sts) + {#(D, j)#}, wQ_of_wstate (llast Sts),\n   n_of_wstate (llast Sts))\n\ngoal (1 subgoal):\n 1. llast Sts \\<leadsto>\\<^sub>w\n    (remove1_mset (D, j) (wN_of_wstate (llast Sts)),\n     wP_of_wstate (llast Sts) + {#(D, j)#}, wQ_of_wstate (llast Sts),\n     n_of_wstate (llast Sts))", "by auto"], ["proof (state)\nthis:\n  llast Sts \\<leadsto>\\<^sub>w (remove1_mset (D, j) N, P + {#(D, j)#}, Q, n)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  llast Sts \\<leadsto>\\<^sub>w (remove1_mset (D, j) N, P + {#(D, j)#}, Q, n)", "have \"\\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\""], ["proof (prove)\nusing this:\n  llast Sts \\<leadsto>\\<^sub>w (remove1_mset (D, j) N, P + {#(D, j)#}, Q, n)\n\ngoal (1 subgoal):\n 1. \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'", "by auto"], ["proof (state)\nthis:\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  N_of_wstate (llast Sts) \\<noteq> {} \\<Longrightarrow>\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  N_of_wstate (llast Sts) \\<noteq> {} \\<Longrightarrow>\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  N_of_wstate (llast Sts) \\<noteq> {} \\<Longrightarrow>\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "assume a: \"N_of_state (state_of_wstate (llast Sts)) = {}\""], ["proof (state)\nthis:\n  N_of_wstate (llast Sts) = {}\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  N_of_wstate (llast Sts) = {}", "have b: \"N = {#}\""], ["proof (prove)\nusing this:\n  N_of_wstate (llast Sts) = {}\n\ngoal (1 subgoal):\n 1. N = {#}", "unfolding N_def"], ["proof (prove)\nusing this:\n  N_of_wstate (llast Sts) = {}\n\ngoal (1 subgoal):\n 1. wN_of_wstate (llast Sts) = {#}", "by (cases \"llast Sts\") auto"], ["proof (state)\nthis:\n  N = {#}\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "from a"], ["proof (chain)\npicking this:\n  N_of_wstate (llast Sts) = {}", "have \"C \\<in> P_of_state (state_of_wstate (llast Sts))\""], ["proof (prove)\nusing this:\n  N_of_wstate (llast Sts) = {}\n\ngoal (1 subgoal):\n 1. C \\<in> P_of_wstate (llast Sts)", "using C_in_llast"], ["proof (prove)\nusing this:\n  N_of_wstate (llast Sts) = {}\n  C \\<in> N_of_wstate (llast Sts) \\<union> P_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. C \\<in> P_of_wstate (llast Sts)", "by auto"], ["proof (state)\nthis:\n  C \\<in> P_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  C \\<in> P_of_wstate (llast Sts)", "obtain D j where \"(D, j) \\<in># P\""], ["proof (prove)\nusing this:\n  C \\<in> P_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. (\\<And>D j. (D, j) \\<in># P \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding P_def"], ["proof (prove)\nusing this:\n  C \\<in> P_of_wstate (llast Sts)\n\ngoal (1 subgoal):\n 1. (\\<And>D j.\n        (D, j) \\<in># wP_of_wstate (llast Sts) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"llast Sts\") auto"], ["proof (state)\nthis:\n  (D, j) \\<in># P\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (D, j) \\<in># P", "have \"weight (D, j) \\<in> weight ` set_mset P\""], ["proof (prove)\nusing this:\n  (D, j) \\<in># P\n\ngoal (1 subgoal):\n 1. weight (D, j) \\<in> weight ` set_mset P", "by auto"], ["proof (state)\nthis:\n  weight (D, j) \\<in> weight ` set_mset P\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  weight (D, j) \\<in> weight ` set_mset P", "have \"\\<exists>w. is_least (\\<lambda>w. w \\<in> (weight ` set_mset P)) w\""], ["proof (prove)\nusing this:\n  weight (D, j) \\<in> weight ` set_mset P\n\ngoal (1 subgoal):\n 1. \\<exists>w. is_least (\\<lambda>w. w \\<in> weight ` set_mset P) w", "using least_exists"], ["proof (prove)\nusing this:\n  weight (D, j) \\<in> weight ` set_mset P\n  ?P ?n \\<Longrightarrow> \\<exists>n. is_least ?P n\n\ngoal (1 subgoal):\n 1. \\<exists>w. is_least (\\<lambda>w. w \\<in> weight ` set_mset P) w", "by auto"], ["proof (state)\nthis:\n  \\<exists>w. is_least (\\<lambda>w. w \\<in> weight ` set_mset P) w\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>w. is_least (\\<lambda>w. w \\<in> weight ` set_mset P) w", "have \"\\<exists>D j. (\\<forall>(D', j') \\<in># P. weight (D, j) \\<le> weight (D', j')) \\<and> (D, j) \\<in># P\""], ["proof (prove)\nusing this:\n  \\<exists>w. is_least (\\<lambda>w. w \\<in> weight ` set_mset P) w\n\ngoal (1 subgoal):\n 1. \\<exists>D j.\n       (\\<forall>(D', j')\\<in>#P.\n           weight (D, j) \\<le> weight (D', j')) \\<and>\n       (D, j) \\<in># P", "using assms linorder_not_less"], ["proof (prove)\nusing this:\n  \\<exists>w. is_least (\\<lambda>w. w \\<in> weight ` set_mset P) w\n  lfinite Sts\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<exists>D j.\n       (\\<forall>(D', j')\\<in>#P.\n           weight (D, j) \\<le> weight (D', j')) \\<and>\n       (D, j) \\<in># P", "unfolding is_least_def"], ["proof (prove)\nusing this:\n  \\<exists>w.\n     w \\<in> weight ` set_mset P \\<and>\n     (\\<forall>n'<w. n' \\<notin> weight ` set_mset P)\n  lfinite Sts\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<exists>D j.\n       (\\<forall>(D', j')\\<in>#P.\n           weight (D, j) \\<le> weight (D', j')) \\<and>\n       (D, j) \\<in># P", "by (auto 6 0)"], ["proof (state)\nthis:\n  \\<exists>D j.\n     (\\<forall>(D', j')\\<in>#P. weight (D, j) \\<le> weight (D', j')) \\<and>\n     (D, j) \\<in># P\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>D j.\n     (\\<forall>(D', j')\\<in>#P. weight (D, j) \\<le> weight (D', j')) \\<and>\n     (D, j) \\<in># P", "obtain D j where\n      min: \"(\\<forall>(D', j') \\<in># P. weight (D, j) \\<le> weight (D', j'))\" and\n      Dj_in_p: \"(D, j) \\<in># P\""], ["proof (prove)\nusing this:\n  \\<exists>D j.\n     (\\<forall>(D', j')\\<in>#P. weight (D, j) \\<le> weight (D', j')) \\<and>\n     (D, j) \\<in># P\n\ngoal (1 subgoal):\n 1. (\\<And>D j.\n        \\<lbrakk>\\<forall>(D', j')\\<in>#P.\n                    weight (D, j) \\<le> weight (D', j');\n         (D, j) \\<in># P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>(D', j')\\<in>#P. weight (D, j) \\<le> weight (D', j')\n  (D, j) \\<in># P\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "from min"], ["proof (chain)\npicking this:\n  \\<forall>(D', j')\\<in>#P. weight (D, j) \\<le> weight (D', j')", "have min: \"(\\<forall>(D', j') \\<in># P - {#(D, j)#}. weight (D, j) \\<le> weight (D', j'))\""], ["proof (prove)\nusing this:\n  \\<forall>(D', j')\\<in>#P. weight (D, j) \\<le> weight (D', j')\n\ngoal (1 subgoal):\n 1. \\<forall>(D', j')\\<in>#remove1_mset (D, j) P.\n       weight (D, j) \\<le> weight (D', j')", "using mset_subset_diff_self[OF Dj_in_p]"], ["proof (prove)\nusing this:\n  \\<forall>(D', j')\\<in>#P. weight (D, j) \\<le> weight (D', j')\n  remove1_mset (D, j) P \\<subset># P\n\ngoal (1 subgoal):\n 1. \\<forall>(D', j')\\<in>#remove1_mset (D, j) P.\n       weight (D, j) \\<le> weight (D', j')", "by auto"], ["proof (state)\nthis:\n  \\<forall>(D', j')\\<in>#remove1_mset (D, j) P.\n     weight (D, j) \\<le> weight (D', j')\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "define N' where\n      \"N' = mset_set ((\\<lambda>D'. (D', n)) ` concls_of (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n         (set_mset (image_mset fst Q)) D))\""], ["proof (state)\nthis:\n  N' =\n  mset_set\n   ((\\<lambda>D'. (D', n)) `\n    concls_of\n     (inference_system.inferences_between (ord_FO_\\<Gamma> S)\n       (set_mset (image_mset fst Q)) D))\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "have \"llast Sts \\<leadsto>\\<^sub>w (N', {#(D', j') \\<in># P - {#(D, j)#}. D' \\<noteq> D#}, Q + {#(D,j)#}, Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. llast Sts \\<leadsto>\\<^sub>w\n    (N', {#(D', j') \\<in># remove1_mset (D, j) P. D' \\<noteq> D#},\n     Q + {#(D, j)#}, Suc n)", "using weighted_RP.inference_computation[of \"P - {#(D, j)#}\" D j N' n Q, OF min N'_def]\n        of_wstate_split[symmetric, of \"llast Sts\"] Dj_in_p"], ["proof (prove)\nusing this:\n  ({#}, remove1_mset (D, j) P + {#(D, j)#}, Q, n) \\<leadsto>\\<^sub>w\n  (N', {#(D, j) \\<in># remove1_mset (D, j) P. D \\<noteq> D#},\n   Q + {#(D, j)#}, Suc n)\n  llast Sts =\n  (wN_of_wstate (llast Sts), wP_of_wstate (llast Sts),\n   wQ_of_wstate (llast Sts), n_of_wstate (llast Sts))\n  (D, j) \\<in># P\n\ngoal (1 subgoal):\n 1. llast Sts \\<leadsto>\\<^sub>w\n    (N', {#(D', j') \\<in># remove1_mset (D, j) P. D' \\<noteq> D#},\n     Q + {#(D, j)#}, Suc n)", "unfolding N_def[symmetric] P_def[symmetric] Q_def[symmetric] n_def[symmetric] b"], ["proof (prove)\nusing this:\n  ({#}, remove1_mset (D, j) P + {#(D, j)#}, Q, n) \\<leadsto>\\<^sub>w\n  (N', {#(D, j) \\<in># remove1_mset (D, j) P. D \\<noteq> D#},\n   Q + {#(D, j)#}, Suc n)\n  llast Sts = ({#}, P, Q, n)\n  (D, j) \\<in># P\n\ngoal (1 subgoal):\n 1. llast Sts \\<leadsto>\\<^sub>w\n    (N', {#(D', j') \\<in># remove1_mset (D, j) P. D' \\<noteq> D#},\n     Q + {#(D, j)#}, Suc n)", "by auto"], ["proof (state)\nthis:\n  llast Sts \\<leadsto>\\<^sub>w\n  (N', {#(D', j') \\<in># remove1_mset (D, j) P. D' \\<noteq> D#},\n   Q + {#(D, j)#}, Suc n)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  llast Sts \\<leadsto>\\<^sub>w\n  (N', {#(D', j') \\<in># remove1_mset (D, j) P. D' \\<noteq> D#},\n   Q + {#(D, j)#}, Suc n)", "have \"\\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\""], ["proof (prove)\nusing this:\n  llast Sts \\<leadsto>\\<^sub>w\n  (N', {#(D', j') \\<in># remove1_mset (D, j) P. D' \\<noteq> D#},\n   Q + {#(D, j)#}, Suc n)\n\ngoal (1 subgoal):\n 1. \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'", "by auto"], ["proof (state)\nthis:\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  N_of_wstate (llast Sts) = {} \\<Longrightarrow>\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  N_of_wstate (llast Sts) \\<noteq> {} \\<Longrightarrow>\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n  N_of_wstate (llast Sts) = {} \\<Longrightarrow>\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'", "have \"\\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\""], ["proof (prove)\nusing this:\n  N_of_wstate (llast Sts) \\<noteq> {} \\<Longrightarrow>\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n  N_of_wstate (llast Sts) = {} \\<Longrightarrow>\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n\ngoal (1 subgoal):\n 1. \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'", "by auto"], ["proof (state)\nthis:\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'", "show False"], ["proof (prove)\nusing this:\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n\ngoal (1 subgoal):\n 1. False", "using no_inf_from_last"], ["proof (prove)\nusing this:\n  \\<exists>St'. llast Sts \\<leadsto>\\<^sub>w St'\n  \\<forall>y. \\<not> llast Sts \\<leadsto>\\<^sub>w y\n\ngoal (1 subgoal):\n 1. False", "by metis"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma N_of_state_state_of_wstate_wN_of_wstate:\n  assumes \"C \\<in> N_of_state (state_of_wstate St)\"\n  shows \"\\<exists>i. (C, i) \\<in># wN_of_wstate St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. (C, i) \\<in># wN_of_wstate St", "by (smt N_of_state.elims assms eq_fst_iff fstI fst_conv image_iff of_wstate_split set_image_mset\n      state_of_wstate.simps)"], ["", "lemma in_wN_of_wstate_in_N_of_wstate: \"(C, i) \\<in># wN_of_wstate St \\<Longrightarrow> C \\<in> N_of_wstate St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, i) \\<in># wN_of_wstate St \\<Longrightarrow> C \\<in> N_of_wstate St", "by (metis (mono_guards_query_query) N_of_state.simps fst_conv image_eqI of_wstate_split\n      set_image_mset state_of_wstate.simps)"], ["", "lemma in_wP_of_wstate_in_P_of_wstate: \"(C, i) \\<in># wP_of_wstate St \\<Longrightarrow> C \\<in> P_of_wstate St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, i) \\<in># wP_of_wstate St \\<Longrightarrow> C \\<in> P_of_wstate St", "by (metis (mono_guards_query_query) P_of_state.simps fst_conv image_eqI of_wstate_split\n      set_image_mset state_of_wstate.simps)"], ["", "lemma in_wQ_of_wstate_in_Q_of_wstate: \"(C, i) \\<in># wQ_of_wstate St \\<Longrightarrow> C \\<in> Q_of_wstate St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C, i) \\<in># wQ_of_wstate St \\<Longrightarrow> C \\<in> Q_of_wstate St", "by (metis (mono_guards_query_query) Q_of_state.simps fst_conv image_eqI of_wstate_split\n      set_image_mset state_of_wstate.simps)"], ["", "lemma n_of_wstate_weighted_RP_increasing: \"St \\<leadsto>\\<^sub>w St' \\<Longrightarrow> n_of_wstate St \\<le> n_of_wstate St'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. St \\<leadsto>\\<^sub>w St' \\<Longrightarrow>\n    n_of_wstate St \\<le> n_of_wstate St'", "by (induction rule: weighted_RP.induct) auto"], ["", "lemma nth_of_wstate_monotonic:\n  assumes \"j < llength Sts\" and \"i \\<le> j\"\n  shows \"n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts j)", "using assms"], ["proof (prove)\nusing this:\n  enat j < llength Sts\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts j)", "proof (induction \"j - i\" arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)\n 2. \\<And>x i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>x = j - i; enat j < llength Sts;\n                    i \\<le> j\\<rbrakk>\n                   \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                                     \\<le> n_of_wstate (lnth Sts j);\n        Suc x = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "case (Suc x)"], ["proof (state)\nthis:\n  \\<lbrakk>x = j - ?i; enat j < llength Sts; ?i \\<le> j\\<rbrakk>\n  \\<Longrightarrow> n_of_wstate (lnth Sts ?i) \\<le> n_of_wstate (lnth Sts j)\n  Suc x = j - i\n  enat j < llength Sts\n  i \\<le> j\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)\n 2. \\<And>x i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>x = j - i; enat j < llength Sts;\n                    i \\<le> j\\<rbrakk>\n                   \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                                     \\<le> n_of_wstate (lnth Sts j);\n        Suc x = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x = j - ?i; enat j < llength Sts; ?i \\<le> j\\<rbrakk>\n  \\<Longrightarrow> n_of_wstate (lnth Sts ?i) \\<le> n_of_wstate (lnth Sts j)\n  Suc x = j - i\n  enat j < llength Sts\n  i \\<le> j", "have \"x = j - (i + 1)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x = j - ?i; enat j < llength Sts; ?i \\<le> j\\<rbrakk>\n  \\<Longrightarrow> n_of_wstate (lnth Sts ?i) \\<le> n_of_wstate (lnth Sts j)\n  Suc x = j - i\n  enat j < llength Sts\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. x = j - (i + 1)", "by auto"], ["proof (state)\nthis:\n  x = j - (i + 1)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)\n 2. \\<And>x i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>x = j - i; enat j < llength Sts;\n                    i \\<le> j\\<rbrakk>\n                   \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                                     \\<le> n_of_wstate (lnth Sts j);\n        Suc x = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "then"], ["proof (chain)\npicking this:\n  x = j - (i + 1)", "have \"n_of_wstate (lnth Sts (i + 1)) \\<le> n_of_wstate (lnth Sts j)\""], ["proof (prove)\nusing this:\n  x = j - (i + 1)\n\ngoal (1 subgoal):\n 1. n_of_wstate (lnth Sts (i + 1)) \\<le> n_of_wstate (lnth Sts j)", "using Suc"], ["proof (prove)\nusing this:\n  x = j - (i + 1)\n  \\<lbrakk>x = j - ?i; enat j < llength Sts; ?i \\<le> j\\<rbrakk>\n  \\<Longrightarrow> n_of_wstate (lnth Sts ?i) \\<le> n_of_wstate (lnth Sts j)\n  Suc x = j - i\n  enat j < llength Sts\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. n_of_wstate (lnth Sts (i + 1)) \\<le> n_of_wstate (lnth Sts j)", "by auto"], ["proof (state)\nthis:\n  n_of_wstate (lnth Sts (i + 1)) \\<le> n_of_wstate (lnth Sts j)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)\n 2. \\<And>x i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>x = j - i; enat j < llength Sts;\n                    i \\<le> j\\<rbrakk>\n                   \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                                     \\<le> n_of_wstate (lnth Sts j);\n        Suc x = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "moreover"], ["proof (state)\nthis:\n  n_of_wstate (lnth Sts (i + 1)) \\<le> n_of_wstate (lnth Sts j)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)\n 2. \\<And>x i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>x = j - i; enat j < llength Sts;\n                    i \\<le> j\\<rbrakk>\n                   \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                                     \\<le> n_of_wstate (lnth Sts j);\n        Suc x = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "have \"i < j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j", "using Suc"], ["proof (prove)\nusing this:\n  \\<lbrakk>x = j - ?i; enat j < llength Sts; ?i \\<le> j\\<rbrakk>\n  \\<Longrightarrow> n_of_wstate (lnth Sts ?i) \\<le> n_of_wstate (lnth Sts j)\n  Suc x = j - i\n  enat j < llength Sts\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. i < j", "by auto"], ["proof (state)\nthis:\n  i < j\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)\n 2. \\<And>x i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>x = j - i; enat j < llength Sts;\n                    i \\<le> j\\<rbrakk>\n                   \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                                     \\<le> n_of_wstate (lnth Sts j);\n        Suc x = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "then"], ["proof (chain)\npicking this:\n  i < j", "have \"Suc i < llength Sts\""], ["proof (prove)\nusing this:\n  i < j\n\ngoal (1 subgoal):\n 1. enat (Suc i) < llength Sts", "using Suc"], ["proof (prove)\nusing this:\n  i < j\n  \\<lbrakk>x = j - ?i; enat j < llength Sts; ?i \\<le> j\\<rbrakk>\n  \\<Longrightarrow> n_of_wstate (lnth Sts ?i) \\<le> n_of_wstate (lnth Sts j)\n  Suc x = j - i\n  enat j < llength Sts\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. enat (Suc i) < llength Sts", "by (metis enat_ord_simps(2) le_less_Suc_eq less_le_trans not_le)"], ["proof (state)\nthis:\n  enat (Suc i) < llength Sts\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)\n 2. \\<And>x i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>x = j - i; enat j < llength Sts;\n                    i \\<le> j\\<rbrakk>\n                   \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                                     \\<le> n_of_wstate (lnth Sts j);\n        Suc x = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "then"], ["proof (chain)\npicking this:\n  enat (Suc i) < llength Sts", "have \"lnth Sts i \\<leadsto>\\<^sub>w lnth Sts (Suc i)\""], ["proof (prove)\nusing this:\n  enat (Suc i) < llength Sts\n\ngoal (1 subgoal):\n 1. lnth Sts i \\<leadsto>\\<^sub>w lnth Sts (Suc i)", "using deriv chain_lnth_rel[of \"(\\<leadsto>\\<^sub>w)\" Sts i]"], ["proof (prove)\nusing this:\n  enat (Suc i) < llength Sts\n  chain (\\<leadsto>\\<^sub>w) Sts\n  \\<lbrakk>chain (\\<leadsto>\\<^sub>w) Sts;\n   enat (Suc i) < llength Sts\\<rbrakk>\n  \\<Longrightarrow> lnth Sts i \\<leadsto>\\<^sub>w lnth Sts (Suc i)\n\ngoal (1 subgoal):\n 1. lnth Sts i \\<leadsto>\\<^sub>w lnth Sts (Suc i)", "by auto"], ["proof (state)\nthis:\n  lnth Sts i \\<leadsto>\\<^sub>w lnth Sts (Suc i)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)\n 2. \\<And>x i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>x = j - i; enat j < llength Sts;\n                    i \\<le> j\\<rbrakk>\n                   \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                                     \\<le> n_of_wstate (lnth Sts j);\n        Suc x = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "then"], ["proof (chain)\npicking this:\n  lnth Sts i \\<leadsto>\\<^sub>w lnth Sts (Suc i)", "have \"n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts (i + 1))\""], ["proof (prove)\nusing this:\n  lnth Sts i \\<leadsto>\\<^sub>w lnth Sts (Suc i)\n\ngoal (1 subgoal):\n 1. n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts (i + 1))", "using n_of_wstate_weighted_RP_increasing[of \"lnth Sts i\" \"lnth Sts (i + 1)\"]"], ["proof (prove)\nusing this:\n  lnth Sts i \\<leadsto>\\<^sub>w lnth Sts (Suc i)\n  lnth Sts i \\<leadsto>\\<^sub>w lnth Sts (i + 1) \\<Longrightarrow>\n  n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts (i + 1))\n\ngoal (1 subgoal):\n 1. n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts (i + 1))", "by auto"], ["proof (state)\nthis:\n  n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts (i + 1))\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)\n 2. \\<And>x i.\n       \\<lbrakk>\\<And>i.\n                   \\<lbrakk>x = j - i; enat j < llength Sts;\n                    i \\<le> j\\<rbrakk>\n                   \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                                     \\<le> n_of_wstate (lnth Sts j);\n        Suc x = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "ultimately"], ["proof (chain)\npicking this:\n  n_of_wstate (lnth Sts (i + 1)) \\<le> n_of_wstate (lnth Sts j)\n  n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts (i + 1))", "show ?case"], ["proof (prove)\nusing this:\n  n_of_wstate (lnth Sts (i + 1)) \\<le> n_of_wstate (lnth Sts j)\n  n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts (i + 1))\n\ngoal (1 subgoal):\n 1. n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts j)", "by auto"], ["proof (state)\nthis:\n  n_of_wstate (lnth Sts i) \\<le> n_of_wstate (lnth Sts j)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>0 = j - i; enat j < llength Sts; i \\<le> j\\<rbrakk>\n       \\<Longrightarrow> n_of_wstate (lnth Sts i)\n                         \\<le> n_of_wstate (lnth Sts j)", "qed auto"], ["", "lemma infinite_chain_relation_measure:\n  assumes\n    measure_decreasing: \"\\<And>St St'. P St \\<Longrightarrow> R St St' \\<Longrightarrow> (m St', m St) \\<in> mR\" and\n    non_infer_chain: \"chain R (ldrop (enat k) Sts)\" and\n    inf: \"llength Sts = \\<infinity>\" and\n    P: \"\\<And>i. P (lnth (ldrop (enat k) Sts) i)\"\n  shows \"chain (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse> (lmap m (ldrop (enat k) Sts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n     (lmap m (ldrop (enat k) Sts))", "proof (rule lnth_rel_chain)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> lnull (lmap m (ldrop (enat k) Sts))\n 2. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "show \"\\<not> lnull (lmap m (ldrop (enat k) Sts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> lnull (lmap m (ldrop (enat k) Sts))", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>P ?St; R ?St ?St'\\<rbrakk>\n  \\<Longrightarrow> (m ?St', m ?St) \\<in> mR\n  chain R (ldrop (enat k) Sts)\n  llength Sts = \\<infinity>\n  P (lnth (ldrop (enat k) Sts) ?i)\n\ngoal (1 subgoal):\n 1. \\<not> lnull (lmap m (ldrop (enat k) Sts))", "by auto"], ["proof (state)\nthis:\n  \\<not> lnull (lmap m (ldrop (enat k) Sts))\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "from inf"], ["proof (chain)\npicking this:\n  llength Sts = \\<infinity>", "have ldrop_inf: \"llength (ldrop (enat k) Sts) = \\<infinity> \\<and> \\<not> lfinite (ldrop (enat k) Sts)\""], ["proof (prove)\nusing this:\n  llength Sts = \\<infinity>\n\ngoal (1 subgoal):\n 1. llength (ldrop (enat k) Sts) = \\<infinity> \\<and>\n    \\<not> lfinite (ldrop (enat k) Sts)", "using inf"], ["proof (prove)\nusing this:\n  llength Sts = \\<infinity>\n  llength Sts = \\<infinity>\n\ngoal (1 subgoal):\n 1. llength (ldrop (enat k) Sts) = \\<infinity> \\<and>\n    \\<not> lfinite (ldrop (enat k) Sts)", "by (auto simp: llength_eq_infty_conv_lfinite)"], ["proof (state)\nthis:\n  llength (ldrop (enat k) Sts) = \\<infinity> \\<and>\n  \\<not> lfinite (ldrop (enat k) Sts)\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "{"], ["proof (state)\nthis:\n  llength (ldrop (enat k) Sts) = \\<infinity> \\<and>\n  \\<not> lfinite (ldrop (enat k) Sts)\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "fix j :: \"nat\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "define St where \"St = lnth (ldrop (enat k) Sts) j\""], ["proof (state)\nthis:\n  St = lnth (ldrop (enat k) Sts) j\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "define St' where \"St' = lnth (ldrop (enat k) Sts) (j + 1)\""], ["proof (state)\nthis:\n  St' = lnth (ldrop (enat k) Sts) (j + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "have P': \"P St \\<and> P St'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P St \\<and> P St'", "unfolding St_def St'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (lnth (ldrop (enat k) Sts) j) \\<and>\n    P (lnth (ldrop (enat k) Sts) (j + 1))", "using P"], ["proof (prove)\nusing this:\n  P (lnth (ldrop (enat k) Sts) ?i)\n\ngoal (1 subgoal):\n 1. P (lnth (ldrop (enat k) Sts) j) \\<and>\n    P (lnth (ldrop (enat k) Sts) (j + 1))", "by auto"], ["proof (state)\nthis:\n  P St \\<and> P St'\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "from ldrop_inf"], ["proof (chain)\npicking this:\n  llength (ldrop (enat k) Sts) = \\<infinity> \\<and>\n  \\<not> lfinite (ldrop (enat k) Sts)", "have \"R St St'\""], ["proof (prove)\nusing this:\n  llength (ldrop (enat k) Sts) = \\<infinity> \\<and>\n  \\<not> lfinite (ldrop (enat k) Sts)\n\ngoal (1 subgoal):\n 1. R St St'", "unfolding St_def St'_def"], ["proof (prove)\nusing this:\n  llength (ldrop (enat k) Sts) = \\<infinity> \\<and>\n  \\<not> lfinite (ldrop (enat k) Sts)\n\ngoal (1 subgoal):\n 1. R (lnth (ldrop (enat k) Sts) j) (lnth (ldrop (enat k) Sts) (j + 1))", "using non_infer_chain infinite_chain_lnth_rel[of \"ldrop (enat k) Sts\" R j]"], ["proof (prove)\nusing this:\n  llength (ldrop (enat k) Sts) = \\<infinity> \\<and>\n  \\<not> lfinite (ldrop (enat k) Sts)\n  chain R (ldrop (enat k) Sts)\n  \\<lbrakk>\\<not> lfinite (ldrop (enat k) Sts);\n   chain R (ldrop (enat k) Sts)\\<rbrakk>\n  \\<Longrightarrow> R (lnth (ldrop (enat k) Sts) j)\n                     (lnth (ldrop (enat k) Sts) (Suc j))\n\ngoal (1 subgoal):\n 1. R (lnth (ldrop (enat k) Sts) j) (lnth (ldrop (enat k) Sts) (j + 1))", "by auto"], ["proof (state)\nthis:\n  R St St'\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "then"], ["proof (chain)\npicking this:\n  R St St'", "have \"(m St', m St) \\<in> mR\""], ["proof (prove)\nusing this:\n  R St St'\n\ngoal (1 subgoal):\n 1. (m St', m St) \\<in> mR", "using measure_decreasing P'"], ["proof (prove)\nusing this:\n  R St St'\n  \\<lbrakk>P ?St; R ?St ?St'\\<rbrakk>\n  \\<Longrightarrow> (m ?St', m ?St) \\<in> mR\n  P St \\<and> P St'\n\ngoal (1 subgoal):\n 1. (m St', m St) \\<in> mR", "by auto"], ["proof (state)\nthis:\n  (m St', m St) \\<in> mR\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "then"], ["proof (chain)\npicking this:\n  (m St', m St) \\<in> mR", "have \"(lnth (lmap m (ldrop (enat k) Sts)) (j + 1), lnth (lmap m (ldrop (enat k) Sts)) j)\n      \\<in> mR\""], ["proof (prove)\nusing this:\n  (m St', m St) \\<in> mR\n\ngoal (1 subgoal):\n 1. (lnth (lmap m (ldrop (enat k) Sts)) (j + 1),\n     lnth (lmap m (ldrop (enat k) Sts)) j)\n    \\<in> mR", "unfolding St_def St'_def"], ["proof (prove)\nusing this:\n  (m (lnth (ldrop (enat k) Sts) (j + 1)), m (lnth (ldrop (enat k) Sts) j))\n  \\<in> mR\n\ngoal (1 subgoal):\n 1. (lnth (lmap m (ldrop (enat k) Sts)) (j + 1),\n     lnth (lmap m (ldrop (enat k) Sts)) j)\n    \\<in> mR", "using lnth_lmap"], ["proof (prove)\nusing this:\n  (m (lnth (ldrop (enat k) Sts) (j + 1)), m (lnth (ldrop (enat k) Sts) j))\n  \\<in> mR\n  enat ?n < llength ?xs \\<Longrightarrow>\n  lnth (lmap ?f ?xs) ?n = ?f (lnth ?xs ?n)\n\ngoal (1 subgoal):\n 1. (lnth (lmap m (ldrop (enat k) Sts)) (j + 1),\n     lnth (lmap m (ldrop (enat k) Sts)) j)\n    \\<in> mR", "by (smt enat.distinct(1) enat_add_left_cancel enat_ord_simps(4) inf ldrop_lmap llength_lmap\n          lnth_ldrop plus_enat_simps(3))"], ["proof (state)\nthis:\n  (lnth (lmap m (ldrop (enat k) Sts)) (j + 1),\n   lnth (lmap m (ldrop (enat k) Sts)) j)\n  \\<in> mR\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "}"], ["proof (state)\nthis:\n  (lnth (lmap m (ldrop (enat k) Sts)) (?j2 + 1),\n   lnth (lmap m (ldrop (enat k) Sts)) ?j2)\n  \\<in> mR\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "then"], ["proof (chain)\npicking this:\n  (lnth (lmap m (ldrop (enat k) Sts)) (?j2 + 1),\n   lnth (lmap m (ldrop (enat k) Sts)) ?j2)\n  \\<in> mR", "show \"\\<forall>j. enat (j + 1) < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n    (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse> (lnth (lmap m (ldrop (enat k) Sts)) j)\n      (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))\""], ["proof (prove)\nusing this:\n  (lnth (lmap m (ldrop (enat k) Sts)) (?j2 + 1),\n   lnth (lmap m (ldrop (enat k) Sts)) ?j2)\n  \\<in> mR\n\ngoal (1 subgoal):\n 1. \\<forall>j.\n       enat (j + 1)\n       < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n       (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n        (lnth (lmap m (ldrop (enat k) Sts)) j)\n        (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))", "by blast"], ["proof (state)\nthis:\n  \\<forall>j.\n     enat (j + 1) < llength (lmap m (ldrop (enat k) Sts)) \\<longrightarrow>\n     (\\<lambda>x y. (x, y) \\<in> mR)\\<inverse>\\<inverse>\n      (lnth (lmap m (ldrop (enat k) Sts)) j)\n      (lnth (lmap m (ldrop (enat k) Sts)) (j + 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem weighted_RP_fair: \"fair_state_seq (lmap state_of_wstate Sts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fair_state_seq (lmap state_of_wstate Sts)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "assume asm: \"\\<not> fair_state_seq (lmap state_of_wstate Sts)\""], ["proof (state)\nthis:\n  \\<not> fair_state_seq (lmap state_of_wstate Sts)\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> fair_state_seq (lmap state_of_wstate Sts)", "have inff: \"\\<not> lfinite Sts\""], ["proof (prove)\nusing this:\n  \\<not> fair_state_seq (lmap state_of_wstate Sts)\n\ngoal (1 subgoal):\n 1. \\<not> lfinite Sts", "using fair_if_finite"], ["proof (prove)\nusing this:\n  \\<not> fair_state_seq (lmap state_of_wstate Sts)\n  lfinite Sts \\<Longrightarrow> fair_state_seq (lmap state_of_wstate Sts)\n\ngoal (1 subgoal):\n 1. \\<not> lfinite Sts", "by auto"], ["proof (state)\nthis:\n  \\<not> lfinite Sts\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> lfinite Sts", "have inf: \"llength Sts = \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<not> lfinite Sts\n\ngoal (1 subgoal):\n 1. llength Sts = \\<infinity>", "using llength_eq_infty_conv_lfinite"], ["proof (prove)\nusing this:\n  \\<not> lfinite Sts\n  (llength ?xs = \\<infinity>) = (\\<not> lfinite ?xs)\n\ngoal (1 subgoal):\n 1. llength Sts = \\<infinity>", "by auto"], ["proof (state)\nthis:\n  llength Sts = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "from asm"], ["proof (chain)\npicking this:\n  \\<not> fair_state_seq (lmap state_of_wstate Sts)", "obtain C where\n    \"C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts))\n       \\<union> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\""], ["proof (prove)\nusing this:\n  \\<not> fair_state_seq (lmap state_of_wstate Sts)\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        C \\<in> Liminf_llist\n                 (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n                Liminf_llist\n                 (lmap P_of_state\n                   (lmap state_of_wstate Sts)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding fair_state_seq_def Liminf_state_def"], ["proof (prove)\nusing this:\n  \\<not> (N_of_state\n           (Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)),\n            Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts)),\n            Liminf_llist (lmap Q_of_state (lmap state_of_wstate Sts))) =\n          {} \\<and>\n          P_of_state\n           (Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)),\n            Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts)),\n            Liminf_llist (lmap Q_of_state (lmap state_of_wstate Sts))) =\n          {})\n\ngoal (1 subgoal):\n 1. (\\<And>C.\n        C \\<in> Liminf_llist\n                 (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n                Liminf_llist\n                 (lmap P_of_state\n                   (lmap state_of_wstate Sts)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n          Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\n\ngoal (1 subgoal):\n 1. \\<not> fair_state_seq (lmap state_of_wstate Sts) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n          Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))", "show False"], ["proof (prove)\nusing this:\n  C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts)) \\<union>\n          Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\n\ngoal (1 subgoal):\n 1. False", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. C \\<in> Liminf_llist\n             (lmap N_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False\n 2. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "assume \"C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts))\""], ["proof (state)\nthis:\n  C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts))\n\ngoal (2 subgoals):\n 1. C \\<in> Liminf_llist\n             (lmap N_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False\n 2. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts))", "obtain x where \"enat x < llength Sts\"\n      \"\\<forall>xa. x \\<le> xa \\<and> enat xa < llength Sts \\<longrightarrow> C \\<in> N_of_state (state_of_wstate (lnth Sts xa))\""], ["proof (prove)\nusing this:\n  C \\<in> Liminf_llist (lmap N_of_state (lmap state_of_wstate Sts))\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>enat x < llength Sts;\n         \\<forall>xa.\n            x \\<le> xa \\<and> enat xa < llength Sts \\<longrightarrow>\n            C \\<in> N_of_wstate (lnth Sts xa)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  C \\<in> (\\<Union>i\\<in>{i. enat i\n                             < llength\n                                (lmap N_of_state\n                                  (lmap state_of_wstate Sts))}.\n              \\<Inter>\n               (lnth (lmap N_of_state (lmap state_of_wstate Sts)) `\n                {j. i \\<le> j \\<and>\n                    enat j\n                    < llength\n                       (lmap N_of_state (lmap state_of_wstate Sts))}))\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>enat x < llength Sts;\n         \\<forall>xa.\n            x \\<le> xa \\<and> enat xa < llength Sts \\<longrightarrow>\n            C \\<in> N_of_wstate (lnth Sts xa)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  enat x < llength Sts\n  \\<forall>xa.\n     x \\<le> xa \\<and> enat xa < llength Sts \\<longrightarrow>\n     C \\<in> N_of_wstate (lnth Sts xa)\n\ngoal (2 subgoals):\n 1. C \\<in> Liminf_llist\n             (lmap N_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False\n 2. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  enat x < llength Sts\n  \\<forall>xa.\n     x \\<le> xa \\<and> enat xa < llength Sts \\<longrightarrow>\n     C \\<in> N_of_wstate (lnth Sts xa)", "have \"\\<exists>k. \\<forall>j. k \\<le> j \\<longrightarrow> (\\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts j))\""], ["proof (prove)\nusing this:\n  enat x < llength Sts\n  \\<forall>xa.\n     x \\<le> xa \\<and> enat xa < llength Sts \\<longrightarrow>\n     C \\<in> N_of_wstate (lnth Sts xa)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       \\<forall>j\\<ge>k. \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts j)", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  enat x < llength Sts\n  \\<forall>xa.\n     x \\<le> xa \\<and> enat xa < llength Sts \\<longrightarrow>\n     C \\<in> N_of_wstate (lnth Sts xa)\n\ngoal (1 subgoal):\n 1. \\<exists>k.\n       \\<forall>j\\<ge>k. \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts j)", "by (force simp add: inf N_of_state_state_of_wstate_wN_of_wstate)"], ["proof (state)\nthis:\n  \\<exists>k.\n     \\<forall>j\\<ge>k. \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts j)\n\ngoal (2 subgoals):\n 1. C \\<in> Liminf_llist\n             (lmap N_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False\n 2. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>k.\n     \\<forall>j\\<ge>k. \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts j)", "obtain k where k_p:\n      \"\\<And>j. k \\<le> j \\<Longrightarrow> \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts j)\""], ["proof (prove)\nusing this:\n  \\<exists>k.\n     \\<forall>j\\<ge>k. \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts j)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        (\\<And>j.\n            k \\<le> j \\<Longrightarrow>\n            \\<exists>i.\n               (C, i) \\<in># wN_of_wstate (lnth Sts j)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  \\<exists>k.\n     \\<forall>j\\<ge>k. \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts j)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        (\\<And>j.\n            k \\<le> j \\<Longrightarrow>\n            \\<exists>i.\n               (C, i) \\<in># wN_of_wstate (lnth Sts j)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  k \\<le> ?j \\<Longrightarrow>\n  \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts ?j)\n\ngoal (2 subgoals):\n 1. C \\<in> Liminf_llist\n             (lmap N_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False\n 2. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "have chain_drop_Sts: \"chain (\\<leadsto>\\<^sub>w) (ldrop k Sts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)", "using deriv inf inff"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>\\<^sub>w) Sts\n  llength Sts = \\<infinity>\n  \\<not> lfinite Sts\n\ngoal (1 subgoal):\n 1. chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)", "by (simp add: inf_chain_ldropn_chain ldrop_enat)"], ["proof (state)\nthis:\n  chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)\n\ngoal (2 subgoals):\n 1. C \\<in> Liminf_llist\n             (lmap N_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False\n 2. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "have in_N_j: \"\\<And>j. \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth (ldrop k Sts) j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth (ldrop (enat k) Sts) j)", "using k_p"], ["proof (prove)\nusing this:\n  k \\<le> ?j \\<Longrightarrow>\n  \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth Sts ?j)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth (ldrop (enat k) Sts) j)", "by (simp add: add.commute inf)"], ["proof (state)\nthis:\n  \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth (ldrop (enat k) Sts) ?j)\n\ngoal (2 subgoals):\n 1. C \\<in> Liminf_llist\n             (lmap N_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False\n 2. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth (ldrop (enat k) Sts) ?j)", "have \"chain (\\<lambda>x y. (x, y) \\<in> RP_filtered_relation)\\<inverse>\\<inverse> (lmap (RP_filtered_measure (\\<lambda>Ci. True))\n      (ldrop k Sts))\""], ["proof (prove)\nusing this:\n  \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth (ldrop (enat k) Sts) ?j)\n\ngoal (1 subgoal):\n 1. chain\n     (\\<lambda>x y.\n         (x, y)\n         \\<in> natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n     (lmap (RP_filtered_measure (\\<lambda>Di. True)) (ldrop (enat k) Sts))", "using inff inf weighted_RP_measure_decreasing_N chain_drop_Sts\n        infinite_chain_relation_measure[of \"\\<lambda>St. \\<exists>i. (C, i) \\<in># wN_of_wstate St\" \"(\\<leadsto>\\<^sub>w)\"]"], ["proof (prove)\nusing this:\n  \\<exists>i. (C, i) \\<in># wN_of_wstate (lnth (ldrop (enat k) Sts) ?j)\n  \\<not> lfinite Sts\n  llength Sts = \\<infinity>\n  \\<lbrakk>?St \\<leadsto>\\<^sub>w ?St';\n   (?C, ?l) \\<in># wN_of_wstate ?St\\<rbrakk>\n  \\<Longrightarrow> (RP_filtered_measure (\\<lambda>Di. True) ?St',\n                     RP_filtered_measure (\\<lambda>Di. True) ?St)\n                    \\<in> natLess <*lex*> natLess <*lex*> natLess\n  chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)\n  \\<lbrakk>\\<And>St St'.\n              \\<lbrakk>\\<exists>i. (C, i) \\<in># wN_of_wstate St;\n               St \\<leadsto>\\<^sub>w St'\\<rbrakk>\n              \\<Longrightarrow> (?m St', ?m St) \\<in> ?mR;\n   chain (\\<leadsto>\\<^sub>w) (ldrop (enat ?k) Sts);\n   llength Sts = \\<infinity>;\n   \\<And>i.\n      \\<exists>ia.\n         (C, ia) \\<in># wN_of_wstate (lnth (ldrop (enat ?k) Sts) i)\\<rbrakk>\n  \\<Longrightarrow> chain\n                     (\\<lambda>x y. (x, y) \\<in> ?mR)\\<inverse>\\<inverse>\n                     (lmap ?m (ldrop (enat ?k) Sts))\n\ngoal (1 subgoal):\n 1. chain\n     (\\<lambda>x y.\n         (x, y)\n         \\<in> natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n     (lmap (RP_filtered_measure (\\<lambda>Di. True)) (ldrop (enat k) Sts))", "by blast"], ["proof (state)\nthis:\n  chain\n   (\\<lambda>x y.\n       (x, y)\n       \\<in> natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n   (lmap (RP_filtered_measure (\\<lambda>Di. True)) (ldrop (enat k) Sts))\n\ngoal (2 subgoals):\n 1. C \\<in> Liminf_llist\n             (lmap N_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False\n 2. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  chain\n   (\\<lambda>x y.\n       (x, y)\n       \\<in> natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n   (lmap (RP_filtered_measure (\\<lambda>Di. True)) (ldrop (enat k) Sts))", "show False"], ["proof (prove)\nusing this:\n  chain\n   (\\<lambda>x y.\n       (x, y)\n       \\<in> natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n   (lmap (RP_filtered_measure (\\<lambda>Di. True)) (ldrop (enat k) Sts))\n\ngoal (1 subgoal):\n 1. False", "using wfP_iff_no_infinite_down_chain_llist[of \"\\<lambda>x y. (x, y) \\<in> RP_filtered_relation\"]\n        wf_RP_filtered_relation inff"], ["proof (prove)\nusing this:\n  chain\n   (\\<lambda>x y.\n       (x, y)\n       \\<in> natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n   (lmap (RP_filtered_measure (\\<lambda>Di. True)) (ldrop (enat k) Sts))\n  wfP (\\<lambda>x y. (x, y) \\<in> natLess <*lex*> natLess <*lex*> natLess) =\n  (\\<nexists>c.\n      \\<not> lfinite c \\<and>\n      chain\n       (\\<lambda>x y.\n           (x, y)\n           \\<in> natLess <*lex*>\n                 natLess <*lex*> natLess)\\<inverse>\\<inverse>\n       c)\n  wf (natLess <*lex*> natLess <*lex*> natLess)\n  \\<not> lfinite Sts\n\ngoal (1 subgoal):\n 1. False", "by (metis (no_types, lifting) inf_llist_lnth ldrop_enat_inf_llist lfinite_inf_llist\n        lfinite_lmap wfPUNIVI wf_induct_rule)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "assume asm: \"C \\<in> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\""], ["proof (state)\nthis:\n  C \\<in> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "from asm"], ["proof (chain)\npicking this:\n  C \\<in> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))", "obtain i where i_p:\n      \"enat i < llength Sts\"\n      \"\\<And>j. i \\<le> j \\<and> enat j < llength Sts \\<Longrightarrow> C \\<in> P_of_state (state_of_wstate (lnth Sts j))\""], ["proof (prove)\nusing this:\n  C \\<in> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>enat i < llength Sts;\n         \\<And>j.\n            i \\<le> j \\<and> enat j < llength Sts \\<Longrightarrow>\n            C \\<in> P_of_wstate (lnth Sts j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  C \\<in> (\\<Union>i\\<in>{i. enat i\n                             < llength\n                                (lmap P_of_state\n                                  (lmap state_of_wstate Sts))}.\n              \\<Inter>\n               (lnth (lmap P_of_state (lmap state_of_wstate Sts)) `\n                {j. i \\<le> j \\<and>\n                    enat j\n                    < llength\n                       (lmap P_of_state (lmap state_of_wstate Sts))}))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>enat i < llength Sts;\n         \\<And>j.\n            i \\<le> j \\<and> enat j < llength Sts \\<Longrightarrow>\n            C \\<in> P_of_wstate (lnth Sts j)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  enat i < llength Sts\n  i \\<le> ?j \\<and> enat ?j < llength Sts \\<Longrightarrow>\n  C \\<in> P_of_wstate (lnth Sts ?j)\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  enat i < llength Sts\n  i \\<le> ?j \\<and> enat ?j < llength Sts \\<Longrightarrow>\n  C \\<in> P_of_wstate (lnth Sts ?j)", "obtain i where \"(C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\""], ["proof (prove)\nusing this:\n  enat i < llength Sts\n  i \\<le> ?j \\<and> enat ?j < llength Sts \\<Longrightarrow>\n  C \\<in> P_of_wstate (lnth Sts ?j)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (C, i)\n        \\<in> Liminf_llist\n               (lmap (set_mset \\<circ> wP_of_wstate) Sts) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using persistent_wclause_in_P_if_persistent_clause_in_P[of C]"], ["proof (prove)\nusing this:\n  enat i < llength Sts\n  i \\<le> ?j \\<and> enat ?j < llength Sts \\<Longrightarrow>\n  C \\<in> P_of_wstate (lnth Sts ?j)\n  C \\<in> Liminf_llist\n           (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n  \\<exists>i.\n     (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (C, i)\n        \\<in> Liminf_llist\n               (lmap (set_mset \\<circ> wP_of_wstate) Sts) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using asm inf"], ["proof (prove)\nusing this:\n  enat i < llength Sts\n  i \\<le> ?j \\<and> enat ?j < llength Sts \\<Longrightarrow>\n  C \\<in> P_of_wstate (lnth Sts ?j)\n  C \\<in> Liminf_llist\n           (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n  \\<exists>i.\n     (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\n  C \\<in> Liminf_llist (lmap P_of_state (lmap state_of_wstate Sts))\n  llength Sts = \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (C, i)\n        \\<in> Liminf_llist\n               (lmap (set_mset \\<circ> wP_of_wstate) Sts) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)", "have \"\\<exists>l. \\<forall>k \\<ge> l. (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k)\""], ["proof (prove)\nusing this:\n  (C, i) \\<in> Liminf_llist (lmap (set_mset \\<circ> wP_of_wstate) Sts)\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       \\<forall>k\\<ge>l.\n          (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k)", "unfolding Liminf_llist_def"], ["proof (prove)\nusing this:\n  (C, i)\n  \\<in> (\\<Union>i\\<in>{i. enat i\n                           < llength\n                              (lmap (set_mset \\<circ> wP_of_wstate) Sts)}.\n            \\<Inter>\n             (lnth (lmap (set_mset \\<circ> wP_of_wstate) Sts) `\n              {j. i \\<le> j \\<and>\n                  enat j\n                  < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)}))\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       \\<forall>k\\<ge>l.\n          (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k)", "using inff inf"], ["proof (prove)\nusing this:\n  (C, i)\n  \\<in> (\\<Union>i\\<in>{i. enat i\n                           < llength\n                              (lmap (set_mset \\<circ> wP_of_wstate) Sts)}.\n            \\<Inter>\n             (lnth (lmap (set_mset \\<circ> wP_of_wstate) Sts) `\n              {j. i \\<le> j \\<and>\n                  enat j\n                  < llength (lmap (set_mset \\<circ> wP_of_wstate) Sts)}))\n  \\<not> lfinite Sts\n  llength Sts = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>l.\n       \\<forall>k\\<ge>l.\n          (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k)", "by auto"], ["proof (state)\nthis:\n  \\<exists>l.\n     \\<forall>k\\<ge>l.\n        (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k)\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>l.\n     \\<forall>k\\<ge>l.\n        (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k)", "obtain k where k_p:\n      \"(\\<forall>k'\\<ge>k. (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k'))\""], ["proof (prove)\nusing this:\n  \\<exists>l.\n     \\<forall>k\\<ge>l.\n        (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>k'\\<ge>k.\n           (C, i)\n           \\<in> (set_mset \\<circ> wP_of_wstate)\n                  (lnth Sts k') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>k'\\<ge>k.\n     (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k')\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "have Ci_in: \"\\<forall>k'. (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth (ldrop k Sts) k')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k'.\n       (C, i)\n       \\<in> (set_mset \\<circ> wP_of_wstate) (lnth (ldrop (enat k) Sts) k')", "using k_p lnth_ldrop[of k _ Sts] inf inff"], ["proof (prove)\nusing this:\n  \\<forall>k'\\<ge>k.\n     (C, i) \\<in> (set_mset \\<circ> wP_of_wstate) (lnth Sts k')\n  enat k + enat ?m < llength Sts \\<Longrightarrow>\n  lnth (ldrop (enat k) Sts) ?m = lnth Sts (?m + the_enat (enat k))\n  llength Sts = \\<infinity>\n  \\<not> lfinite Sts\n\ngoal (1 subgoal):\n 1. \\<forall>k'.\n       (C, i)\n       \\<in> (set_mset \\<circ> wP_of_wstate) (lnth (ldrop (enat k) Sts) k')", "by force"], ["proof (state)\nthis:\n  \\<forall>k'.\n     (C, i)\n     \\<in> (set_mset \\<circ> wP_of_wstate) (lnth (ldrop (enat k) Sts) k')\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>k'.\n     (C, i)\n     \\<in> (set_mset \\<circ> wP_of_wstate) (lnth (ldrop (enat k) Sts) k')", "have Ci_inn: \"\\<forall>k'. (C, i) \\<in># (wP_of_wstate) (lnth (ldrop k Sts) k')\""], ["proof (prove)\nusing this:\n  \\<forall>k'.\n     (C, i)\n     \\<in> (set_mset \\<circ> wP_of_wstate) (lnth (ldrop (enat k) Sts) k')\n\ngoal (1 subgoal):\n 1. \\<forall>k'. (C, i) \\<in># wP_of_wstate (lnth (ldrop (enat k) Sts) k')", "by auto"], ["proof (state)\nthis:\n  \\<forall>k'. (C, i) \\<in># wP_of_wstate (lnth (ldrop (enat k) Sts) k')\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "have \"chain (\\<leadsto>\\<^sub>w) (ldrop k Sts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)", "using deriv inf_chain_ldropn_chain inf inff"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>\\<^sub>w) Sts\n  \\<lbrakk>chain ?R ?xs; \\<not> lfinite ?xs\\<rbrakk>\n  \\<Longrightarrow> chain ?R (ldropn ?n ?xs)\n  llength Sts = \\<infinity>\n  \\<not> lfinite Sts\n\ngoal (1 subgoal):\n 1. chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)", "by (simp add: inf_chain_ldropn_chain ldrop_enat)"], ["proof (state)\nthis:\n  chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)", "have \"chain (\\<lambda>x y. (x, y) \\<in> RP_combined_relation)\\<inverse>\\<inverse>\n      (lmap (RP_combined_measure (weight (C, i))) (ldrop k Sts))\""], ["proof (prove)\nusing this:\n  chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)\n\ngoal (1 subgoal):\n 1. chain\n     (\\<lambda>x y.\n         (x, y)\n         \\<in> natLess <*lex*>\n               (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n               natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n     (lmap (RP_combined_measure (weight (C, i))) (ldrop (enat k) Sts))", "using inff inf Ci_in weighted_RP_measure_decreasing_P\n        infinite_chain_relation_measure[of \"\\<lambda>St. (C, i) \\<in># wP_of_wstate St\" \"(\\<leadsto>\\<^sub>w)\"\n          \"RP_combined_measure (weight (C, i))\" ]"], ["proof (prove)\nusing this:\n  chain (\\<leadsto>\\<^sub>w) (ldrop (enat k) Sts)\n  \\<not> lfinite Sts\n  llength Sts = \\<infinity>\n  \\<forall>k'.\n     (C, i)\n     \\<in> (set_mset \\<circ> wP_of_wstate) (lnth (ldrop (enat k) Sts) k')\n  \\<lbrakk>?St \\<leadsto>\\<^sub>w ?St';\n   (?C, ?i) \\<in># wP_of_wstate ?St\\<rbrakk>\n  \\<Longrightarrow> (RP_combined_measure (weight (?C, ?i)) ?St',\n                     RP_combined_measure (weight (?C, ?i)) ?St)\n                    \\<in> natLess <*lex*>\n                          (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n                          natLess <*lex*> natLess <*lex*> natLess\n  \\<lbrakk>\\<And>St St'.\n              \\<lbrakk>(C, i) \\<in># wP_of_wstate St;\n               St \\<leadsto>\\<^sub>w St'\\<rbrakk>\n              \\<Longrightarrow> (RP_combined_measure (weight (C, i)) St',\n                                 RP_combined_measure (weight (C, i)) St)\n                                \\<in> ?mR;\n   chain (\\<leadsto>\\<^sub>w) (ldrop (enat ?k) Sts);\n   llength Sts = \\<infinity>;\n   \\<And>i.\n      (C, i) \\<in># wP_of_wstate (lnth (ldrop (enat ?k) Sts) i)\\<rbrakk>\n  \\<Longrightarrow> chain\n                     (\\<lambda>x y. (x, y) \\<in> ?mR)\\<inverse>\\<inverse>\n                     (lmap (RP_combined_measure (weight (C, i)))\n                       (ldrop (enat ?k) Sts))\n\ngoal (1 subgoal):\n 1. chain\n     (\\<lambda>x y.\n         (x, y)\n         \\<in> natLess <*lex*>\n               (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n               natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n     (lmap (RP_combined_measure (weight (C, i))) (ldrop (enat k) Sts))", "by auto"], ["proof (state)\nthis:\n  chain\n   (\\<lambda>x y.\n       (x, y)\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n   (lmap (RP_combined_measure (weight (C, i))) (ldrop (enat k) Sts))\n\ngoal (1 subgoal):\n 1. C \\<in> Liminf_llist\n             (lmap P_of_state (lmap state_of_wstate Sts)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  chain\n   (\\<lambda>x y.\n       (x, y)\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n   (lmap (RP_combined_measure (weight (C, i))) (ldrop (enat k) Sts))", "show False"], ["proof (prove)\nusing this:\n  chain\n   (\\<lambda>x y.\n       (x, y)\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n   (lmap (RP_combined_measure (weight (C, i))) (ldrop (enat k) Sts))\n\ngoal (1 subgoal):\n 1. False", "using wfP_iff_no_infinite_down_chain_llist[of \"\\<lambda>x y. (x, y) \\<in> RP_combined_relation\"]\n        wf_RP_combined_relation inff"], ["proof (prove)\nusing this:\n  chain\n   (\\<lambda>x y.\n       (x, y)\n       \\<in> natLess <*lex*>\n             (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n             natLess <*lex*> natLess <*lex*> natLess)\\<inverse>\\<inverse>\n   (lmap (RP_combined_measure (weight (C, i))) (ldrop (enat k) Sts))\n  wfP (\\<lambda>x y.\n          (x, y)\n          \\<in> natLess <*lex*>\n                (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n                natLess <*lex*> natLess <*lex*> natLess) =\n  (\\<nexists>c.\n      \\<not> lfinite c \\<and>\n      chain\n       (\\<lambda>x y.\n           (x, y)\n           \\<in> natLess <*lex*>\n                 (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n                 natLess <*lex*>\n                 natLess <*lex*> natLess)\\<inverse>\\<inverse>\n       c)\n  wf (natLess <*lex*>\n      (natLess <*lex*> natLess <*lex*> natLess) <*lex*>\n      natLess <*lex*> natLess <*lex*> natLess)\n  \\<not> lfinite Sts\n\ngoal (1 subgoal):\n 1. False", "by (smt inf_llist_lnth ldrop_enat_inf_llist lfinite_inf_llist lfinite_lmap wfPUNIVI\n          wf_induct_rule)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary weighted_RP_saturated: \"src.saturated_upto (Liminf_llist (lmap grounding_of_wstate Sts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. src.saturated_upto\n     (Liminf_llist\n       (lmap\n         (\\<lambda>St.\n             grounding_of_clss\n              (N_of_wstate St \\<union> P_of_wstate St \\<union>\n               Q_of_wstate St))\n         Sts))", "using RP_saturated_if_fair[OF deriv_RP weighted_RP_fair empty_Q0_RP, unfolded llist.map_comp]"], ["proof (prove)\nusing this:\n  src.saturated_upto\n   (Liminf_llist\n     (lmap\n       ((\\<lambda>St.\n            grounding_of_clss\n             (N_of_state St \\<union> P_of_state St \\<union>\n              Q_of_state St)) \\<circ>\n        state_of_wstate)\n       Sts))\n\ngoal (1 subgoal):\n 1. src.saturated_upto\n     (Liminf_llist\n       (lmap\n         (\\<lambda>St.\n             grounding_of_clss\n              (N_of_wstate St \\<union> P_of_wstate St \\<union>\n               Q_of_wstate St))\n         Sts))", "by simp"], ["", "corollary weighted_RP_complete:\n  \"\\<not> satisfiable (grounding_of_wstate (lhd Sts)) \\<Longrightarrow> {#} \\<in> Q_of_state (Liminf_wstate Sts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> satisfiable\n            (grounding_of_clss\n              (N_of_wstate (lhd Sts) \\<union> P_of_wstate (lhd Sts) \\<union>\n               Q_of_wstate (lhd Sts))) \\<Longrightarrow>\n    {#} \\<in> Q_of_state (Liminf_wstate Sts)", "using RP_complete_if_fair[OF deriv_RP weighted_RP_fair empty_Q0_RP, simplified lhd_lmap_Sts]"], ["proof (prove)\nusing this:\n  \\<not> satisfiable\n          (grounding_of_clss\n            (N_of_wstate (lhd Sts) \\<union> P_of_wstate (lhd Sts) \\<union>\n             Q_of_wstate (lhd Sts))) \\<Longrightarrow>\n  {#} \\<in> Q_of_state (Liminf_wstate Sts)\n\ngoal (1 subgoal):\n 1. \\<not> satisfiable\n            (grounding_of_clss\n              (N_of_wstate (lhd Sts) \\<union> P_of_wstate (lhd Sts) \\<union>\n               Q_of_wstate (lhd Sts))) \\<Longrightarrow>\n    {#} \\<in> Q_of_state (Liminf_wstate Sts)", "."], ["", "end"], ["", "end"], ["", "locale weighted_FO_resolution_prover_with_size_timestamp_factors =\n  FO_resolution_prover S subst_atm id_subst comp_subst renamings_apart atm_of_atms mgu less_atm\n  for\n    S :: \"('a :: wellorder) clause \\<Rightarrow> 'a clause\" and\n    subst_atm :: \"'a \\<Rightarrow> 's \\<Rightarrow> 'a\" and\n    id_subst :: \"'s\" and\n    comp_subst :: \"'s \\<Rightarrow> 's \\<Rightarrow> 's\" and\n    renamings_apart :: \"'a literal multiset list \\<Rightarrow> 's list\" and\n    atm_of_atms :: \"'a list \\<Rightarrow> 'a\" and\n    mgu :: \"'a set set \\<Rightarrow> 's option\" and\n    less_atm :: \"'a \\<Rightarrow> 'a \\<Rightarrow> bool\" +\n  fixes\n    size_atm :: \"'a \\<Rightarrow> nat\" and\n    size_factor :: nat and\n    timestamp_factor :: nat\n  assumes\n    timestamp_factor_pos: \"timestamp_factor > 0\"\nbegin"], ["", "fun weight :: \"'a wclause \\<Rightarrow> nat\" where\n  \"weight (C, i) = size_factor * size_multiset (size_literal size_atm) C + timestamp_factor * i\""], ["", "lemma weight_mono: \"i < j \\<Longrightarrow> weight (C, i) < weight (C, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> weight (C, i) < weight (C, j)", "using timestamp_factor_pos"], ["proof (prove)\nusing this:\n  0 < timestamp_factor\n\ngoal (1 subgoal):\n 1. i < j \\<Longrightarrow> weight (C, i) < weight (C, j)", "by simp"], ["", "declare weight.simps [simp del]"], ["", "sublocale wrp: weighted_FO_resolution_prover _ _ _ _ _ _ _ _ weight"], ["proof (prove)\ngoal (1 subgoal):\n 1. weighted_FO_resolution_prover S (\\<cdot>a) id_subst (\\<odot>)\n     renamings_apart atm_of_atms mgu less_atm weight", "by unfold_locales (rule weight_mono)"], ["", "notation wrp.weighted_RP (infix \"\\<leadsto>\\<^sub>w\" 50)"], ["", "end"], ["", "end"]]}