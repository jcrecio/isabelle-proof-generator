{"file_name": "/home/qj213/afp-2021-10-22/thys/Locally-Nameless-Sigma/Sigma/TypedSigma.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Locally-Nameless-Sigma", "problem_names": ["lemma not_bvar: \"e \\<turnstile> t : T \\<Longrightarrow> \\<forall>i. t \\<noteq> Bvar i\"", "lemma typing_regular': \"e \\<turnstile> t : T \\<Longrightarrow> ok e\"", "lemma typing_regular'': \"e \\<turnstile> t : T \\<Longrightarrow> lc t\"", "theorem typing_regular: \"e \\<turnstile> t : T \\<Longrightarrow> ok e \\<and> lc t\"", "lemma obj_inv: \"e \\<turnstile> Obj f U : A \\<Longrightarrow> A = U\"", "lemma obj_inv_elim: \n  \"e \\<turnstile> Obj f U : U \n  \\<Longrightarrow> (dom f = do U) \n    \\<and> (\\<exists>F. finite F \\<and> (\\<forall>l\\<in>do U. \\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \n        \\<longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param(the U^l)\\<rparr>\n            \\<turnstile> (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the (U^l))))\"", "lemma typing_induct[consumes 1, case_names Fvar Call Upd Obj Bnd]:\n  fixes \n  env :: \"type environment\" and t :: sterm and T :: type and \n  P1 :: \"type environment \\<Rightarrow> sterm \\<Rightarrow> type \\<Rightarrow> bool\" and\n  P2 :: \"type environment \\<Rightarrow> sterm \\<Rightarrow> type \\<Rightarrow> Label \\<Rightarrow> bool\"\n  assumes\n  \"env \\<turnstile> t : T\" and\n  \"\\<And>env T x. \\<lbrakk> ok env; x \\<in> env_dom env; the env!x = T \\<rbrakk>\n  \\<Longrightarrow> P1 env (Fvar x) T\" and\n  \"\\<And>env T t l p. \\<lbrakk> env \\<turnstile> t : T; P1 env t T; env \\<turnstile> p : param (the(T^l));\n                    P1 env p (param (the(T^l))); l \\<in> do T \\<rbrakk>\n  \\<Longrightarrow> P1 env (Call t l p) (return (the(T^l)))\" and\n  \"\\<And>env T t l u. \\<lbrakk> env \\<turnstile> t : T; P1 env t T; l \\<in> do T; P2 env u T l \\<rbrakk>\n  \\<Longrightarrow> P1 env (Upd t l u) T\" and\n  \"\\<And>env T f. \\<lbrakk> ok env; dom f = do T; \\<forall>l\\<in>dom f. P2 env (the(f l)) T l \\<rbrakk>\n  \\<Longrightarrow> P1 env (Obj f T) T\" and\n  \"\\<And>env T l t L. \\<lbrakk> ok env; finite L; \n                  \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n                   \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the(T^l))\\<rparr> \n                       \\<turnstile> (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) : return (the(T^l))\n                      \\<and> P1 (env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the(T^l))\\<rparr>) (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \n                           (return (the(T^l))) \\<rbrakk>\n  \\<Longrightarrow> P2 env t T l\"\n  shows\n  \"P1 env t T\"", "lemma ball_Tltsp:\n  fixes \n  P1 :: \"type \\<Rightarrow> Label \\<Rightarrow> sterm \\<Rightarrow> string \\<Rightarrow> string \\<Rightarrow> bool\" and \n  P2 :: \"type \\<Rightarrow> Label \\<Rightarrow> sterm \\<Rightarrow> string \\<Rightarrow> string \\<Rightarrow> bool\"\n  assumes \n  \"\\<And>l t t'. \\<lbrakk> \\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow> P1 T l t s p \\<rbrakk> \n  \\<Longrightarrow> \\<forall>s p. s \\<notin> F' \\<and> p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow> P2 T l t s p\" and\n  \"\\<forall>l\\<in>do T. \\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow> P1 T l (the(f l)) s p\"\n  shows \"\\<forall>l\\<in>do T. \\<forall>s p. s \\<notin> F' \\<and> p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow> P2 T l (the(f l)) s p\"", "lemma ball_ex_finite:\n  fixes \n  S :: \"'a set\" and F :: \"'b set\" and x :: 'a and \n  P :: \"'a \\<Rightarrow> 'b \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes \n  \"finite S\" and \"finite F\" and\n  \"\\<forall>x\\<in>S. (\\<exists>F'. finite F'\n              \\<and> (\\<forall>s p. s \\<notin> F' \\<union> F \\<and> p \\<notin> F' \\<union> F \\<and> s \\<noteq> p\n                  \\<longrightarrow> P x s p))\"\n  shows \n  \"\\<exists>F'. finite F'\n      \\<and> (\\<forall>x\\<in>S. \\<forall>s p. s \\<notin> F' \\<union> F \\<and> p \\<notin> F' \\<union> F \\<and> s \\<noteq> p\n                 \\<longrightarrow> P x s p)\"", "lemma bnd_renaming_lem:\n  assumes \n  \"s \\<notin> FV t'\" and \"p \\<notin> FV t'\" and \"x \\<notin> FV t'\" and \"y \\<notin> FV t'\" and\n  \"x \\<notin> env_dom env'\" and \"y \\<notin> env_dom env'\" and \"s \\<noteq> p\" and \"x \\<noteq> y\" and\n  \"t = {Suc n \\<rightarrow> [Fvar s, Fvar p]} t'\" and \"env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\" and\n  pred_bnd:\n  \"\\<forall>sa pa. sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa \n    \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> \\<turnstile> (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l))\n        \\<and> (\\<forall>env'' t'' s' p' x' y' A' B' n'. \n            s' \\<notin> FV t'' \\<longrightarrow> p' \\<notin> FV t'' \\<longrightarrow> x' \\<notin> FV t'' \\<longrightarrow> y' \\<notin> FV t'' \\<longrightarrow> \n            x' \\<notin> env_dom env'' \\<longrightarrow> y' \\<notin> env_dom env'' \\<longrightarrow> x' \\<noteq> y' \\<longrightarrow> s' \\<noteq> p' \n            \\<longrightarrow> (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) = {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \n            \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> = env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \n            \\<longrightarrow> env''\\<lparr>x':A'\\<rparr>\\<lparr>y':B'\\<rparr> \n                \\<turnstile> {n' \\<rightarrow> [Fvar x',Fvar y']} t'' : return(the(T^l)))\" and\n  \"FV t' \\<subseteq> F'\"\n  shows\n  \"\\<forall>sa pa. sa \\<notin> F \\<union> {s,p,x,y} \\<union> F' \\<union> env_dom env' \n         \\<and> pa \\<notin> F \\<union> {s,p,x,y} \\<union> F' \\<union> env_dom env' \n         \\<and> sa \\<noteq> pa\n    \\<longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n        \\<turnstile> ({Suc n \\<rightarrow> [Fvar x, Fvar y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return (the(T^l))\"", "lemma type_renaming'[rule_format]:\n  \"e \\<turnstile> t : C \\<Longrightarrow>\n  (\\<And>env t' s p x y A B n. \\<lbrakk> s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t'; y \\<notin> FV t'; \n                             x \\<notin> env_dom env; y \\<notin> env_dom env; s \\<noteq> p;  x \\<noteq> y;\n                             t = {n \\<rightarrow> [Fvar s,Fvar p]} t'; e = env\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr> \\<rbrakk>\n    \\<Longrightarrow> env\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar x,Fvar y]} t' : C)\"", "lemma type_renaming: \n  \"\\<lbrakk> e\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar s,Fvar p]} t : T; \n     s \\<notin> FV t; p \\<notin> FV t; x \\<notin> FV t; y \\<notin> FV t; \n     x \\<notin> env_dom e; y \\<notin> env_dom e; x \\<noteq> y; s \\<noteq> p\\<rbrakk> \n  \\<Longrightarrow> e\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar x,Fvar y]} t : T\"", "lemma obj_inv_elim': \n  assumes \n  \"e \\<turnstile> Obj f U : U\" and \n  nin_s: \"s \\<notin> FV (Obj f U) \\<union> env_dom e\" and\n  nin_p: \"p \\<notin> FV (Obj f U) \\<union> env_dom e\" and \"s \\<noteq> p\"\n  shows \n  \"(dom f = do U) \\<and> (\\<forall>l\\<in>do U. e\\<lparr>s:U\\<rparr>\\<lparr>p:param(the(U^l))\\<rparr>\n                               \\<turnstile> (the(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(U^l)))\"", "lemma dom_lem: \"e \\<turnstile> Obj f (Object fun) : Object fun \\<Longrightarrow> dom f = dom fun\"", "lemma abs_typeE: \n  assumes \"e \\<turnstile> Call (Obj f U) l b : T\"\n  shows \n  \"(\\<exists>F. finite F \n      \\<and> (\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \n          \\<longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p: param(the(U^l))\\<rparr> \\<turnstile> (the(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : T) \\<Longrightarrow> P) \n  \\<Longrightarrow> P\"", "lemma bigger_env_lemma[rule_format]: \n  assumes \"e \\<turnstile> t : T\"\n  shows \"\\<forall>x X. x \\<notin> env_dom e \\<longrightarrow> e\\<lparr>x:X\\<rparr> \\<turnstile> t: T\"", "lemma bnd_disj_env_lem: \n  assumes \n  \"ok e1\" and \"env_dom e1 \\<inter> env_dom e2 = {}\" and \"ok e2\" and\n  \"\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \n    \\<longrightarrow> e1\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>\n        \\<turnstile> (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l)) \n        \\<and> (env_dom (e1\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>) \\<inter> env_dom e2 = {} \n    \\<longrightarrow> ok e2 \n    \\<longrightarrow> e1\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>+e2 \n        \\<turnstile> (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l)))\"\n  shows \n  \"\\<forall>s p. s \\<notin> F \\<union> env_dom (e1+e2) \\<and> p \\<notin> F \\<union> env_dom (e1+e2) \\<and> s \\<noteq> p\n    \\<longrightarrow> (e1+e2)\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \\<turnstile> (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l))\"", "lemma disjunct_env: \n  assumes \"e \\<turnstile> t : A\" \n  shows \"(env_dom e \\<inter> env_dom e' = {} \\<Longrightarrow> ok e' \\<Longrightarrow> e + e' \\<turnstile> t : A)\"", "lemma empty_env: \n  assumes \"(Env Map.empty) \\<turnstile> t : A\" and \"ok env\"\n  shows \"env \\<turnstile> t : A\"", "lemma bnd_open_lem:\n  assumes\n  pred_bnd:\n  \"\\<forall>sa pa. sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa \n    \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> \n        \\<turnstile> (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l)) \n     \\<and> (\\<forall>env'' t'' s' p' x' y' A' B' n'. s' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \n         \\<longrightarrow> p' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \\<longrightarrow> s' \\<noteq> p' \n         \\<longrightarrow> env'' \\<turnstile> x' : A' \\<longrightarrow> env'' \\<turnstile> y' : B' \n         \\<longrightarrow> (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) = {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \n         \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> = env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \n         \\<longrightarrow> env'' \\<turnstile> {n' \\<rightarrow> [x',y']} t'' : return(the(T^l)))\" and\n  \"ok env\" and \"env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\" and \n  \"s \\<notin> FV t'' \\<union> FV x \\<union> FV y\" and \"p \\<notin> FV t'' \\<union> FV x \\<union> FV y\" and \"s \\<noteq> p\" and \n  \"env' \\<turnstile> x : A\" and \"env' \\<turnstile> y : B\" and \n  \"t = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t'\" and \"FV t' \\<subseteq> FV t''\"\n  shows \n  \"\\<forall>sa pa. sa \\<notin> F \\<union> {s,p} \\<union> env_dom env' \n         \\<and> pa \\<notin> F \\<union> {s,p} \\<union> env_dom env' \\<and> sa \\<noteq> pa\n    \\<longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n        \\<turnstile> ({Suc n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar sa, Fvar pa]\\<^esup>) : return(the(T^l))\"", "lemma open_lemma':\n  shows \n  \"e \\<turnstile> t : C \n  \\<Longrightarrow> (\\<And>env t' s p x y A B n. s \\<notin> FV t' \\<union> FV x \\<union> FV y \n         \\<Longrightarrow> p \\<notin> FV t' \\<union> FV x \\<union> FV y \\<Longrightarrow> s \\<noteq> p\n         \\<Longrightarrow> env \\<turnstile> x : A \\<Longrightarrow> env \\<turnstile> y : B \n         \\<Longrightarrow> t = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n         \\<Longrightarrow> e = env\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n         \\<Longrightarrow> env \\<turnstile> {n \\<rightarrow> [x,y]} t' : C)\"", "lemma open_lemma: \n  \"\\<lbrakk> env\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar s,Fvar p]} t : T; \n     s \\<notin> FV t \\<union> FV x \\<union> FV y;  p \\<notin> FV t \\<union> FV x \\<union> FV y; s \\<noteq> p; \n     env \\<turnstile> x : A; env \\<turnstile> y : B \\<rbrakk> \n  \\<Longrightarrow> env \\<turnstile> {n \\<rightarrow> [x,y]} t : T\"", "lemma type_dom[simp]: \"env \\<turnstile> (Obj a A) : A \\<Longrightarrow> dom a = do A\"", "lemma select_preserve_type[simp]:\n  assumes \n  \"env \\<turnstile> Obj f (Object t) : Object t\" and \"s \\<notin> FV a\" and \"p \\<notin> FV a\" and\n  \"env\\<lparr>s:(Object t)\\<rparr>\\<lparr>p:param(the(t l2))\\<rparr> \\<turnstile> (a\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(t l2))\" and\n  \"l1 \\<in> dom t\" and \"l2 \\<in> dom t\"\n  shows \n  \"\\<exists>F. finite F \n     \\<and> (\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p\n         \\<longrightarrow> env\\<lparr>s:(Object t)\\<rparr>\\<lparr>p:param(the(t l1))\\<rparr>\n             \\<turnstile> (the((f(l2 \\<mapsto> a)) l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(t l1)))\"", "lemma subject_reduction: \"e \\<turnstile> t : T \\<Longrightarrow> (\\<And>t'. t \\<rightarrow>\\<^sub>\\<beta> t' \\<Longrightarrow> e \\<turnstile> t' : T)\"", "theorem subject_reduction': \"t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t' \\<Longrightarrow> e \\<turnstile> t : T \\<Longrightarrow> e \\<turnstile> t' : T\"", "lemma type_members_equal: \n  fixes A :: type and B :: type\n  assumes \"do A = do B\" and \"\\<forall>i. (A^i) = (B^i)\"\n  shows \"A = B\"", "lemma not_var: \"Env Map.empty \\<turnstile> a : A \\<Longrightarrow> \\<forall>x. a \\<noteq> Fvar x\"", "lemma Call_label_range: \"(Env Map.empty) \\<turnstile> Call (Obj c T) l b : A \\<Longrightarrow> l \\<in> dom c\"", "lemma  Call_subterm_type: \"Env Map.empty \\<turnstile> Call t l b: T \n  \\<Longrightarrow> (\\<exists>T'. Env Map.empty \\<turnstile> t : T') \\<and>  (\\<exists>T'. Env Map.empty \\<turnstile> b : T')\"", "lemma Upd_label_range: \"Env Map.empty \\<turnstile> Upd (Obj c T) l x : A \\<Longrightarrow> l \\<in> dom c\"", "lemma Upd_subterm_type: \n  \"Env Map.empty \\<turnstile> Upd t l x : T \\<Longrightarrow> \\<exists>T'. Env Map.empty \\<turnstile> t : T'\"", "lemma no_var: \"\\<exists>T. Env Map.empty \\<turnstile> Fvar x : T \\<Longrightarrow> False\"", "lemma no_bvar: \"e \\<turnstile> Bvar x : T \\<Longrightarrow> False\"", "theorem type_unique[rule_format]: \n  assumes \"env \\<turnstile> a: T\"\n  shows \"\\<forall>T'. env \\<turnstile> a: T' \\<longrightarrow> T = T'\"", "theorem progress: \n  assumes \"Env Map.empty \\<turnstile> t : A\" and \"\\<not>(\\<exists>c A. t = Obj c A)\"\n  shows \"\\<exists>b. t \\<rightarrow>\\<^sub>\\<beta> b\""], "translations": [["", "lemma not_bvar: \"e \\<turnstile> t : T \\<Longrightarrow> \\<forall>i. t \\<noteq> Bvar i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> t : T \\<Longrightarrow> \\<forall>i. t \\<noteq> Bvar i", "by (erule typing.cases, simp_all)"], ["", "lemma typing_regular': \"e \\<turnstile> t : T \\<Longrightarrow> ok e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> t : T \\<Longrightarrow> ok e", "by (induct rule:typing.induct, auto)"], ["", "lemma typing_regular'': \"e \\<turnstile> t : T \\<Longrightarrow> lc t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> t : T \\<Longrightarrow> lc t", "by (induct rule:typing.induct, auto)"], ["", "theorem typing_regular: \"e \\<turnstile> t : T \\<Longrightarrow> ok e \\<and> lc t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> t : T \\<Longrightarrow> ok e \\<and> lc t", "by (simp add: typing_regular' typing_regular'')"], ["", "lemma obj_inv: \"e \\<turnstile> Obj f U : A \\<Longrightarrow> A = U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> Obj f U : A \\<Longrightarrow> A = U", "by (erule typing.cases, auto)"], ["", "lemma obj_inv_elim: \n  \"e \\<turnstile> Obj f U : U \n  \\<Longrightarrow> (dom f = do U) \n    \\<and> (\\<exists>F. finite F \\<and> (\\<forall>l\\<in>do U. \\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \n        \\<longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param(the U^l)\\<rparr>\n            \\<turnstile> (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the (U^l))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> Obj f U : U \\<Longrightarrow>\n    dom f = do U \\<and>\n    (\\<exists>F.\n        finite F \\<and>\n        (\\<forall>l\\<in>do U.\n            \\<forall>s p.\n               s \\<notin> F \\<and>\n               p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n               e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n        (the U^l)\\<rparr> \\<turnstile> the\n  (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)))", "by (erule typing.cases, simp_all, blast)"], ["", "lemma typing_induct[consumes 1, case_names Fvar Call Upd Obj Bnd]:\n  fixes \n  env :: \"type environment\" and t :: sterm and T :: type and \n  P1 :: \"type environment \\<Rightarrow> sterm \\<Rightarrow> type \\<Rightarrow> bool\" and\n  P2 :: \"type environment \\<Rightarrow> sterm \\<Rightarrow> type \\<Rightarrow> Label \\<Rightarrow> bool\"\n  assumes\n  \"env \\<turnstile> t : T\" and\n  \"\\<And>env T x. \\<lbrakk> ok env; x \\<in> env_dom env; the env!x = T \\<rbrakk>\n  \\<Longrightarrow> P1 env (Fvar x) T\" and\n  \"\\<And>env T t l p. \\<lbrakk> env \\<turnstile> t : T; P1 env t T; env \\<turnstile> p : param (the(T^l));\n                    P1 env p (param (the(T^l))); l \\<in> do T \\<rbrakk>\n  \\<Longrightarrow> P1 env (Call t l p) (return (the(T^l)))\" and\n  \"\\<And>env T t l u. \\<lbrakk> env \\<turnstile> t : T; P1 env t T; l \\<in> do T; P2 env u T l \\<rbrakk>\n  \\<Longrightarrow> P1 env (Upd t l u) T\" and\n  \"\\<And>env T f. \\<lbrakk> ok env; dom f = do T; \\<forall>l\\<in>dom f. P2 env (the(f l)) T l \\<rbrakk>\n  \\<Longrightarrow> P1 env (Obj f T) T\" and\n  \"\\<And>env T l t L. \\<lbrakk> ok env; finite L; \n                  \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n                   \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the(T^l))\\<rparr> \n                       \\<turnstile> (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) : return (the(T^l))\n                      \\<and> P1 (env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the(T^l))\\<rparr>) (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \n                           (return (the(T^l))) \\<rbrakk>\n  \\<Longrightarrow> P2 env t T l\"\n  shows\n  \"P1 env t T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P1 env t T", "using assms"], ["proof (prove)\nusing this:\n  env \\<turnstile> t : T\n  \\<lbrakk>ok ?env; ?x \\<in> env_dom ?env; the ?env!?x = ?T\\<rbrakk>\n  \\<Longrightarrow> P1 ?env (Fvar ?x) ?T\n  \\<lbrakk>?env \\<turnstile> ?t : ?T; P1 ?env ?t ?T;\n   ?env \\<turnstile> ?p : param (the ?T^?l); P1 ?env ?p (param (the ?T^?l));\n   ?l \\<in> do ?T\\<rbrakk>\n  \\<Longrightarrow> P1 ?env (Call ?t ?l ?p) (return (the ?T^?l))\n  \\<lbrakk>?env \\<turnstile> ?t : ?T; P1 ?env ?t ?T; ?l \\<in> do ?T;\n   P2 ?env ?u ?T ?l\\<rbrakk>\n  \\<Longrightarrow> P1 ?env (Upd ?t ?l ?u) ?T\n  \\<lbrakk>ok ?env; dom ?f = do ?T;\n   \\<forall>l\\<in>dom ?f. P2 ?env (the (?f l)) ?T l\\<rbrakk>\n  \\<Longrightarrow> P1 ?env (Obj ?f ?T) ?T\n  \\<lbrakk>ok ?env; finite ?L;\n   \\<forall>s p.\n      s \\<notin> ?L \\<and>\n      p \\<notin> ?L \\<and> s \\<noteq> p \\<longrightarrow>\n      ?env\\<lparr>s:?T\\<rparr>\\<lparr>p:param\n   (the ?T^?l)\\<rparr> \\<turnstile> ?t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the ?T^?l) \\<and>\n      P1 (?env\\<lparr>s:?T\\<rparr>\\<lparr>p:param (the ?T^?l)\\<rparr>)\n       (?t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) (return (the ?T^?l))\\<rbrakk>\n  \\<Longrightarrow> P2 ?env ?t ?T ?l\n\ngoal (1 subgoal):\n 1. P1 env t T", "by (induct rule: typing.induct, auto simp: typing_regular')"], ["", "(* TODO: delete after refactoring of disjunct_env *)"], ["", "lemma ball_Tltsp:\n  fixes \n  P1 :: \"type \\<Rightarrow> Label \\<Rightarrow> sterm \\<Rightarrow> string \\<Rightarrow> string \\<Rightarrow> bool\" and \n  P2 :: \"type \\<Rightarrow> Label \\<Rightarrow> sterm \\<Rightarrow> string \\<Rightarrow> string \\<Rightarrow> bool\"\n  assumes \n  \"\\<And>l t t'. \\<lbrakk> \\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow> P1 T l t s p \\<rbrakk> \n  \\<Longrightarrow> \\<forall>s p. s \\<notin> F' \\<and> p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow> P2 T l t s p\" and\n  \"\\<forall>l\\<in>do T. \\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow> P1 T l (the(f l)) s p\"\n  shows \"\\<forall>l\\<in>do T. \\<forall>s p. s \\<notin> F' \\<and> p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow> P2 T l (the(f l)) s p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>do T.\n       \\<forall>s p.\n          s \\<notin> F' \\<and>\n          p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n          P2 T l (the (f l)) s p", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>s p.\n          s \\<notin> F' \\<and>\n          p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n          P2 T l (the (f l)) s p", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>s p.\n          s \\<notin> F' \\<and>\n          p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n          P2 T l (the (f l)) s p", "assume \"l \\<in> do T\""], ["proof (state)\nthis:\n  l \\<in> do T\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>s p.\n          s \\<notin> F' \\<and>\n          p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n          P2 T l (the (f l)) s p", "with assms(2)"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        P1 T l (the (f l)) s p\n  l \\<in> do T", "have \"\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow> P1 T l (the(f l)) s p\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        P1 T l (the (f l)) s p\n  l \\<in> do T\n\ngoal (1 subgoal):\n 1. \\<forall>s p.\n       s \\<notin> F \\<and>\n       p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n       P1 T l (the (f l)) s p", "by simp"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     P1 T l (the (f l)) s p\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>s p.\n          s \\<notin> F' \\<and>\n          p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n          P2 T l (the (f l)) s p", "with assms(1)"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     P1 T ?l ?t s p \\<Longrightarrow>\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 T ?l ?t s p\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     P1 T l (the (f l)) s p", "show \"\\<forall>s p. s \\<notin> F' \\<and> p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow> P2 T l (the(f l)) s p\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     P1 T ?l ?t s p \\<Longrightarrow>\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 T ?l ?t s p\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     P1 T l (the (f l)) s p\n\ngoal (1 subgoal):\n 1. \\<forall>s p.\n       s \\<notin> F' \\<and>\n       p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n       P2 T l (the (f l)) s p", "by simp"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 T l (the (f l)) s p\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: delete after refactoring of subject_reduction *)"], ["", "lemma ball_ex_finite:\n  fixes \n  S :: \"'a set\" and F :: \"'b set\" and x :: 'a and \n  P :: \"'a \\<Rightarrow> 'b \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  assumes \n  \"finite S\" and \"finite F\" and\n  \"\\<forall>x\\<in>S. (\\<exists>F'. finite F'\n              \\<and> (\\<forall>s p. s \\<notin> F' \\<union> F \\<and> p \\<notin> F' \\<union> F \\<and> s \\<noteq> p\n                  \\<longrightarrow> P x s p))\"\n  shows \n  \"\\<exists>F'. finite F'\n      \\<and> (\\<forall>x\\<in>S. \\<forall>s p. s \\<notin> F' \\<union> F \\<and> p \\<notin> F' \\<union> F \\<and> s \\<noteq> p\n                 \\<longrightarrow> P x s p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F'.\n       finite F' \\<and>\n       (\\<forall>x\\<in>S.\n           \\<forall>s p.\n              s \\<notin> F' \\<union> F \\<and>\n              p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n              P x s p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>F'.\n       finite F' \\<and>\n       (\\<forall>x\\<in>S.\n           \\<forall>s p.\n              s \\<notin> F' \\<union> F \\<and>\n              p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n              P x s p)", "from assms"], ["proof (chain)\npicking this:\n  finite S\n  finite F\n  \\<forall>x\\<in>S.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite S\n  finite F\n  \\<forall>x\\<in>S.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal (1 subgoal):\n 1. \\<exists>F'.\n       finite F' \\<and>\n       (\\<forall>x\\<in>S.\n           \\<forall>s p.\n              s \\<notin> F' \\<union> F \\<and>\n              p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n              P x s p)", "proof (induct S)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite F;\n     \\<forall>x\\<in>{}.\n        \\<exists>F'.\n           finite F' \\<and>\n           (\\<forall>s p.\n               s \\<notin> F' \\<union> F \\<and>\n               p \\<notin> F' \\<union> F \\<and>\n               s \\<noteq> p \\<longrightarrow>\n               P x s p)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>F'.\n                         finite F' \\<and>\n                         (\\<forall>x\\<in>{}.\n                             \\<forall>s p.\n                                s \\<notin> F' \\<union> F \\<and>\n                                p \\<notin> F' \\<union> F \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                P x s p)\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "case empty"], ["proof (state)\nthis:\n  finite F\n  \\<forall>x\\<in>{}.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite F;\n     \\<forall>x\\<in>{}.\n        \\<exists>F'.\n           finite F' \\<and>\n           (\\<forall>s p.\n               s \\<notin> F' \\<union> F \\<and>\n               p \\<notin> F' \\<union> F \\<and>\n               s \\<noteq> p \\<longrightarrow>\n               P x s p)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>F'.\n                         finite F' \\<and>\n                         (\\<forall>x\\<in>{}.\n                             \\<forall>s p.\n                                s \\<notin> F' \\<union> F \\<and>\n                                p \\<notin> F' \\<union> F \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                P x s p)\n 2. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "thus ?case"], ["proof (prove)\nusing this:\n  finite F\n  \\<forall>x\\<in>{}.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal (1 subgoal):\n 1. \\<exists>F'.\n       finite F' \\<and>\n       (\\<forall>x\\<in>{}.\n           \\<forall>s p.\n              s \\<notin> F' \\<union> F \\<and>\n              p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n              P x s p)", "by force"], ["proof (state)\nthis:\n  \\<exists>F'.\n     finite F' \\<and>\n     (\\<forall>x\\<in>{}.\n         \\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "case (insert x S)"], ["proof (state)\nthis:\n  finite S\n  x \\<notin> S\n  \\<lbrakk>finite F;\n   \\<forall>x\\<in>S.\n      \\<exists>F'.\n         finite F' \\<and>\n         (\\<forall>s p.\n             s \\<notin> F' \\<union> F \\<and>\n             p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n             P x s p)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>F'.\n                       finite F' \\<and>\n                       (\\<forall>x\\<in>S.\n                           \\<forall>s p.\n                              s \\<notin> F' \\<union> F \\<and>\n                              p \\<notin> F' \\<union> F \\<and>\n                              s \\<noteq> p \\<longrightarrow>\n                              P x s p)\n  finite F\n  \\<forall>x\\<in>insert x S.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "from insert(5)"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>insert x S.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)", "have \n      \"\\<forall>y\\<in>S. (\\<exists>F'. finite F' \n                  \\<and> (\\<forall>s p. s \\<notin> F' \\<union> F \\<and> p \\<notin> F' \\<union> F \\<and> s \\<noteq> p\n                      \\<longrightarrow> P y s p))\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert x S.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>S.\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> F \\<and>\n              p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n              P y s p)", "by simp"], ["proof (state)\nthis:\n  \\<forall>y\\<in>S.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P y s p)\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "from insert(3)[OF \\<open>finite F\\<close> this]"], ["proof (chain)\npicking this:\n  \\<exists>F'.\n     finite F' \\<and>\n     (\\<forall>x\\<in>S.\n         \\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)", "obtain F1 where \n      \"finite F1\" and\n      pred_S: \"\\<forall>y\\<in>S. \\<forall>s p. s \\<notin> F1 \\<union> F \\<and> p \\<notin> F1 \\<union> F \\<and> s \\<noteq> p\n                       \\<longrightarrow> P y s p\""], ["proof (prove)\nusing this:\n  \\<exists>F'.\n     finite F' \\<and>\n     (\\<forall>x\\<in>S.\n         \\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal (1 subgoal):\n 1. (\\<And>F1.\n        \\<lbrakk>finite F1;\n         \\<forall>y\\<in>S.\n            \\<forall>s p.\n               s \\<notin> F1 \\<union> F \\<and>\n               p \\<notin> F1 \\<union> F \\<and>\n               s \\<noteq> p \\<longrightarrow>\n               P y s p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite F1\n  \\<forall>y\\<in>S.\n     \\<forall>s p.\n        s \\<notin> F1 \\<union> F \\<and>\n        p \\<notin> F1 \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n        P y s p\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "from insert(5)"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>insert x S.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)", "obtain F2 where \n      \"finite F2\" and\n      \"\\<forall>s p. s \\<notin> F2 \\<union> F \\<and> p \\<notin> F2 \\<union> F \\<and> s \\<noteq> p \\<longrightarrow> P x s p\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>insert x S.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal (1 subgoal):\n 1. (\\<And>F2.\n        \\<lbrakk>finite F2;\n         \\<forall>s p.\n            s \\<notin> F2 \\<union> F \\<and>\n            p \\<notin> F2 \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite F2\n  \\<forall>s p.\n     s \\<notin> F2 \\<union> F \\<and>\n     p \\<notin> F2 \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n     P x s p\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "with pred_S"], ["proof (chain)\npicking this:\n  \\<forall>y\\<in>S.\n     \\<forall>s p.\n        s \\<notin> F1 \\<union> F \\<and>\n        p \\<notin> F1 \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n        P y s p\n  finite F2\n  \\<forall>s p.\n     s \\<notin> F2 \\<union> F \\<and>\n     p \\<notin> F2 \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n     P x s p", "have \n      \"\\<forall>y\\<in>insert x S. \\<forall>s p. s \\<notin> F1 \\<union> F2 \\<union> F \\<and> p \\<notin> F1 \\<union> F2 \\<union> F \\<and> s \\<noteq> p\n                        \\<longrightarrow> P y s p\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>S.\n     \\<forall>s p.\n        s \\<notin> F1 \\<union> F \\<and>\n        p \\<notin> F1 \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n        P y s p\n  finite F2\n  \\<forall>s p.\n     s \\<notin> F2 \\<union> F \\<and>\n     p \\<notin> F2 \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n     P x s p\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>insert x S.\n       \\<forall>s p.\n          s \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n          p \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n          s \\<noteq> p \\<longrightarrow>\n          P y s p", "by auto"], ["proof (state)\nthis:\n  \\<forall>y\\<in>insert x S.\n     \\<forall>s p.\n        s \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n        p \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        P y s p\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "moreover"], ["proof (state)\nthis:\n  \\<forall>y\\<in>insert x S.\n     \\<forall>s p.\n        s \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n        p \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        P y s p\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "from \\<open>finite F1\\<close> \\<open>finite F2\\<close>"], ["proof (chain)\npicking this:\n  finite F1\n  finite F2", "have \"finite (F1 \\<union> F2)\""], ["proof (prove)\nusing this:\n  finite F1\n  finite F2\n\ngoal (1 subgoal):\n 1. finite (F1 \\<union> F2)", "by simp"], ["proof (state)\nthis:\n  finite (F1 \\<union> F2)\n\ngoal (1 subgoal):\n 1. \\<And>x Fa.\n       \\<lbrakk>finite Fa; x \\<notin> Fa;\n        \\<lbrakk>finite F;\n         \\<forall>x\\<in>Fa.\n            \\<exists>F'.\n               finite F' \\<and>\n               (\\<forall>s p.\n                   s \\<notin> F' \\<union> F \\<and>\n                   p \\<notin> F' \\<union> F \\<and>\n                   s \\<noteq> p \\<longrightarrow>\n                   P x s p)\\<rbrakk>\n        \\<Longrightarrow> \\<exists>F'.\n                             finite F' \\<and>\n                             (\\<forall>x\\<in>Fa.\n                                 \\<forall>s p.\n                                    s \\<notin> F' \\<union> F \\<and>\n                                    p \\<notin> F' \\<union> F \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    P x s p);\n        finite F;\n        \\<forall>x\\<in>insert x Fa.\n           \\<exists>F'.\n              finite F' \\<and>\n              (\\<forall>s p.\n                  s \\<notin> F' \\<union> F \\<and>\n                  p \\<notin> F' \\<union> F \\<and>\n                  s \\<noteq> p \\<longrightarrow>\n                  P x s p)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>F'.\n                            finite F' \\<and>\n                            (\\<forall>x\\<in>insert x Fa.\n                                \\<forall>s p.\n                                   s \\<notin> F' \\<union> F \\<and>\n                                   p \\<notin> F' \\<union> F \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   P x s p)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>y\\<in>insert x S.\n     \\<forall>s p.\n        s \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n        p \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        P y s p\n  finite (F1 \\<union> F2)", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>insert x S.\n     \\<forall>s p.\n        s \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n        p \\<notin> F1 \\<union> F2 \\<union> F \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        P y s p\n  finite (F1 \\<union> F2)\n\ngoal (1 subgoal):\n 1. \\<exists>F'.\n       finite F' \\<and>\n       (\\<forall>x\\<in>insert x S.\n           \\<forall>s p.\n              s \\<notin> F' \\<union> F \\<and>\n              p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n              P x s p)", "by blast"], ["proof (state)\nthis:\n  \\<exists>F'.\n     finite F' \\<and>\n     (\\<forall>x\\<in>insert x S.\n         \\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>F'.\n     finite F' \\<and>\n     (\\<forall>x\\<in>S.\n         \\<forall>s p.\n            s \\<notin> F' \\<union> F \\<and>\n            p \\<notin> F' \\<union> F \\<and> s \\<noteq> p \\<longrightarrow>\n            P x s p)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: delete after refactoring of type_renaming' *)"], ["", "lemma bnd_renaming_lem:\n  assumes \n  \"s \\<notin> FV t'\" and \"p \\<notin> FV t'\" and \"x \\<notin> FV t'\" and \"y \\<notin> FV t'\" and\n  \"x \\<notin> env_dom env'\" and \"y \\<notin> env_dom env'\" and \"s \\<noteq> p\" and \"x \\<noteq> y\" and\n  \"t = {Suc n \\<rightarrow> [Fvar s, Fvar p]} t'\" and \"env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\" and\n  pred_bnd:\n  \"\\<forall>sa pa. sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa \n    \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> \\<turnstile> (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l))\n        \\<and> (\\<forall>env'' t'' s' p' x' y' A' B' n'. \n            s' \\<notin> FV t'' \\<longrightarrow> p' \\<notin> FV t'' \\<longrightarrow> x' \\<notin> FV t'' \\<longrightarrow> y' \\<notin> FV t'' \\<longrightarrow> \n            x' \\<notin> env_dom env'' \\<longrightarrow> y' \\<notin> env_dom env'' \\<longrightarrow> x' \\<noteq> y' \\<longrightarrow> s' \\<noteq> p' \n            \\<longrightarrow> (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) = {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \n            \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> = env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \n            \\<longrightarrow> env''\\<lparr>x':A'\\<rparr>\\<lparr>y':B'\\<rparr> \n                \\<turnstile> {n' \\<rightarrow> [Fvar x',Fvar y']} t'' : return(the(T^l)))\" and\n  \"FV t' \\<subseteq> F'\"\n  shows\n  \"\\<forall>sa pa. sa \\<notin> F \\<union> {s,p,x,y} \\<union> F' \\<union> env_dom env' \n         \\<and> pa \\<notin> F \\<union> {s,p,x,y} \\<union> F' \\<union> env_dom env' \n         \\<and> sa \\<noteq> pa\n    \\<longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n        \\<turnstile> ({Suc n \\<rightarrow> [Fvar x, Fvar y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return (the(T^l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                   env_dom env' \\<and>\n       pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                   env_dom env' \\<and>\n       sa \\<noteq> pa \\<longrightarrow>\n       env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n     (the T^l)\\<rparr> \\<turnstile> {Suc\nn \\<rightarrow> [Fvar\n                  x,Fvar\n                     y]} t'\\<^bsup>[Fvar\n                                     sa,Fvar pa]\\<^esup> : return (the T^l)", "proof (intro strip, elim conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "fix sa pa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "assume \n    nin_sa: \"sa \\<notin> F \\<union> {s,p,x,y} \\<union> F' \\<union> env_dom env'\" and\n    nin_pa: \"pa \\<notin> F \\<union> {s,p,x,y} \\<union> F' \\<union> env_dom env'\" and \"sa \\<noteq> pa\""], ["proof (state)\nthis:\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "hence \"sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "moreover"], ["proof (state)\nthis:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "{"], ["proof (state)\nthis:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "assume \"a \\<notin> FV t'\" and \"a \\<in> {s,p,x,y}\""], ["proof (state)\nthis:\n  a \\<notin> FV t'\n  a \\<in> {s, p, x, y}\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "with \n      \\<open>FV t' \\<subseteq> F'\\<close> nin_sa nin_pa \\<open>sa \\<noteq> pa\\<close> \n      sopen_FV[of 0 \"Fvar sa\" \"Fvar pa\" t']"], ["proof (chain)\npicking this:\n  FV t' \\<subseteq> F'\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  sa \\<noteq> pa\n  FV ({0 \\<rightarrow> [Fvar sa,Fvar pa]} t')\n  \\<subseteq> FV t' \\<union> FV (Fvar sa) \\<union> FV (Fvar pa)\n  a \\<notin> FV t'\n  a \\<in> {s, p, x, y}", "have \"a \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  FV t' \\<subseteq> F'\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  sa \\<noteq> pa\n  FV ({0 \\<rightarrow> [Fvar sa,Fvar pa]} t')\n  \\<subseteq> FV t' \\<union> FV (Fvar sa) \\<union> FV (Fvar pa)\n  a \\<notin> FV t'\n  a \\<in> {s, p, x, y}\n\ngoal (1 subgoal):\n 1. a \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  a \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<notin> FV t'; ?a2 \\<in> {s, p, x, y}\\<rbrakk>\n  \\<Longrightarrow> ?a2 \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "note \n      this[OF \\<open>s \\<notin> FV t'\\<close>] this[OF \\<open>p \\<notin> FV t'\\<close>] \n      this[OF \\<open>x \\<notin> FV t'\\<close>] this[OF \\<open>y \\<notin> FV t'\\<close>]"], ["proof (state)\nthis:\n  s \\<in> {s, p, x, y} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  p \\<in> {s, p, x, y} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  x \\<in> {s, p, x, y} \\<Longrightarrow>\n  x \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  y \\<in> {s, p, x, y} \\<Longrightarrow>\n  y \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "moreover"], ["proof (state)\nthis:\n  s \\<in> {s, p, x, y} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  p \\<in> {s, p, x, y} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  x \\<in> {s, p, x, y} \\<Longrightarrow>\n  x \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  y \\<in> {s, p, x, y} \\<Longrightarrow>\n  y \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "from \n    not_in_env_bigger_2[OF \\<open>x \\<notin> env_dom env'\\<close>] \n    not_in_env_bigger_2[OF \\<open>y \\<notin> env_dom env'\\<close>]\n    nin_sa nin_pa"], ["proof (chain)\npicking this:\n  \\<lbrakk>x \\<noteq> ?a; x \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> x \\<notin> env_dom\n                                (env'\\<lparr>?a:?X\\<rparr>\\<lparr>?b:?Y\\<rparr>)\n  \\<lbrakk>y \\<noteq> ?a; y \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> y \\<notin> env_dom\n                                (env'\\<lparr>?a:?X\\<rparr>\\<lparr>?b:?Y\\<rparr>)\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'", "have \n    \"x \\<notin> env_dom (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>) \n    \\<and> y \\<notin> env_dom (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<noteq> ?a; x \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> x \\<notin> env_dom\n                                (env'\\<lparr>?a:?X\\<rparr>\\<lparr>?b:?Y\\<rparr>)\n  \\<lbrakk>y \\<noteq> ?a; y \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> y \\<notin> env_dom\n                                (env'\\<lparr>?a:?X\\<rparr>\\<lparr>?b:?Y\\<rparr>)\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n\ngoal (1 subgoal):\n 1. x \\<notin> env_dom\n                (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n               (the T^l)\\<rparr>) \\<and>\n    y \\<notin> env_dom\n                (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  x \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n             (the T^l)\\<rparr>) \\<and>\n  y \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "moreover"], ["proof (state)\nthis:\n  x \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n             (the T^l)\\<rparr>) \\<and>\n  y \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "from \\<open>t = {Suc n \\<rightarrow> [Fvar s, Fvar p]} t'\\<close> sopen_commute[OF Suc_not_Zero]"], ["proof (chain)\npicking this:\n  t = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t'\n  {Suc ?m1 \\<rightarrow> [Fvar\n                           ?s',Fvar\n                                ?p']} {0 \\<rightarrow> [Fvar\n                   ?s,Fvar ?p]} ?t =\n  {0 \\<rightarrow> [Fvar\n                     ?s,Fvar\n                         ?p]} {Suc ?m1 \\<rightarrow> [Fvar ?s',Fvar ?p']} ?t", "have \"(t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) = {Suc n \\<rightarrow> [Fvar s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  t = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t'\n  {Suc ?m1 \\<rightarrow> [Fvar\n                           ?s',Fvar\n                                ?p']} {0 \\<rightarrow> [Fvar\n                   ?s,Fvar ?p]} ?t =\n  {0 \\<rightarrow> [Fvar\n                     ?s,Fvar\n                         ?p]} {Suc ?m1 \\<rightarrow> [Fvar ?s',Fvar ?p']} ?t\n\ngoal (1 subgoal):\n 1. (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n    {Suc n \\<rightarrow> [Fvar\n                           s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "moreover"], ["proof (state)\nthis:\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "from \n    subst_add[of s sa env' A T] subst_add[of sa p \"env'\\<lparr>s:A\\<rparr>\" T B] \n    subst_add[of s pa \"env'\\<lparr>sa:T\\<rparr>\" A \"param(the(T^l))\"]\n    subst_add[of p pa \"env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\" B \"param(the(T^l))\"]\n    \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> nin_sa nin_pa"], ["proof (chain)\npicking this:\n  s \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>s:A\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\n  sa \\<noteq> p \\<Longrightarrow>\n  env'\\<lparr>s:A\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>p:B\\<rparr> =\n  env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<lparr>sa:T\\<rparr>\n  s \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\n  p \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr>\\<lparr>p:B\\<rparr>\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'", "have \"env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> = env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\""], ["proof (prove)\nusing this:\n  s \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>s:A\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\n  sa \\<noteq> p \\<Longrightarrow>\n  env'\\<lparr>s:A\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>p:B\\<rparr> =\n  env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<lparr>sa:T\\<rparr>\n  s \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\n  p \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr>\\<lparr>p:B\\<rparr>\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n\ngoal (1 subgoal):\n 1. env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n    env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>", "by auto"], ["proof (state)\nthis:\n  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "ultimately"], ["proof (chain)\npicking this:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n  s \\<in> {s, p, x, y} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  p \\<in> {s, p, x, y} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  x \\<in> {s, p, x, y} \\<Longrightarrow>\n  x \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  y \\<in> {s, p, x, y} \\<Longrightarrow>\n  y \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  x \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n             (the T^l)\\<rparr>) \\<and>\n  y \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr>)\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>", "have \n    \"env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\n     \\<turnstile> {Suc n \\<rightarrow> [Fvar x, Fvar y]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\nusing this:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n  s \\<in> {s, p, x, y} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  p \\<in> {s, p, x, y} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  x \\<in> {s, p, x, y} \\<Longrightarrow>\n  x \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  y \\<in> {s, p, x, y} \\<Longrightarrow>\n  y \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  x \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n             (the T^l)\\<rparr>) \\<and>\n  y \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr>)\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (1 subgoal):\n 1. env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {Suc\n                                   n \\<rightarrow> [Fvar\n               x,Fvar\n                  y]} (t'\\<^bsup>[Fvar\n                                   sa,Fvar pa]\\<^esup>) : return (the T^l)", "using \\<open>s \\<noteq> p\\<close> \\<open>x \\<noteq> y\\<close> pred_bnd"], ["proof (prove)\nusing this:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n  s \\<in> {s, p, x, y} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  p \\<in> {s, p, x, y} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  x \\<in> {s, p, x, y} \\<Longrightarrow>\n  x \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  y \\<in> {s, p, x, y} \\<Longrightarrow>\n  y \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  x \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n             (the T^l)\\<rparr>) \\<and>\n  y \\<notin> env_dom\n              (env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr>)\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  s \\<noteq> p\n  x \\<noteq> y\n  \\<forall>sa pa.\n     sa \\<notin> F \\<and>\n     pa \\<notin> F \\<and> sa \\<noteq> pa \\<longrightarrow>\n     env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n      sa,Fvar pa]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n         s' \\<notin> FV t'' \\<longrightarrow>\n         p' \\<notin> FV t'' \\<longrightarrow>\n         x' \\<notin> FV t'' \\<longrightarrow>\n         y' \\<notin> FV t'' \\<longrightarrow>\n         x' \\<notin> env_dom env'' \\<longrightarrow>\n         y' \\<notin> env_dom env'' \\<longrightarrow>\n         x' \\<noteq> y' \\<longrightarrow>\n         s' \\<noteq> p' \\<longrightarrow>\n         (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n         {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \\<longrightarrow>\n         env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n         env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \\<longrightarrow>\n         env''\\<lparr>x':A'\\<rparr>\\<lparr>y':B'\\<rparr> \\<turnstile> {n' \\<rightarrow> [Fvar\n              x',Fvar y']} t'' : return (the T^l))\n\ngoal (1 subgoal):\n 1. env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {Suc\n                                   n \\<rightarrow> [Fvar\n               x,Fvar\n                  y]} (t'\\<^bsup>[Fvar\n                                   sa,Fvar pa]\\<^esup>) : return (the T^l)", "by auto"], ["proof (state)\nthis:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {Suc\n                                 n \\<rightarrow> [Fvar\n             x,Fvar\n                y]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "moreover"], ["proof (state)\nthis:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {Suc\n                                 n \\<rightarrow> [Fvar\n             x,Fvar\n                y]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "from \n    subst_add[of y sa \"env'\\<lparr>x:A\\<rparr>\" B T] subst_add[of x sa env' A T] \n    subst_add[of y pa \"env'\\<lparr>sa:T\\<rparr>\\<lparr>x:A\\<rparr>\" B \"param(the(T^l))\"]\n    subst_add[of x pa \"env'\\<lparr>sa:T\\<rparr>\" A \"param(the(T^l))\"] \n    nin_sa nin_pa"], ["proof (chain)\npicking this:\n  y \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>x:A\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>y:B\\<rparr>\n  x \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>x:A\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>x:A\\<rparr>\n  y \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr>\\<lparr>y:B\\<rparr>\n  x \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'", "have \n    \"env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n     = env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\""], ["proof (prove)\nusing this:\n  y \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>x:A\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>y:B\\<rparr>\n  x \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>x:A\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>x:A\\<rparr>\n  y \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr>\\<lparr>y:B\\<rparr>\n  x \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\n  sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union> env_dom env'\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr> =\n    env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>", "by auto"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                            env_dom env';\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> F' \\<union>\n                    env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [Fvar\n                                    x,Fvar\n y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "ultimately"], ["proof (chain)\npicking this:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {Suc\n                                 n \\<rightarrow> [Fvar\n             x,Fvar\n                y]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return (the T^l)\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>", "show \n    \"env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n     \\<turnstile> ({Suc n \\<rightarrow> [Fvar x, Fvar y]} t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return (the(T^l))\""], ["proof (prove)\nusing this:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {Suc\n                                 n \\<rightarrow> [Fvar\n             x,Fvar\n                y]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return (the T^l)\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [Fvar\n                  x,Fvar\n                     y]} t'\\<^bsup>[Fvar\n                                     sa,Fvar pa]\\<^esup> : return (the T^l)", "using sopen_commute[OF not_sym[OF Suc_not_Zero]]"], ["proof (prove)\nusing this:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {Suc\n                                 n \\<rightarrow> [Fvar\n             x,Fvar\n                y]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return (the T^l)\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\n  {0 \\<rightarrow> [Fvar\n                     ?s',Fvar\n                          ?p']} {Suc ?m2 \\<rightarrow> [Fvar\n                   ?s,Fvar ?p]} ?t =\n  {Suc ?m2 \\<rightarrow> [Fvar\n                           ?s,Fvar\n                               ?p]} {0 \\<rightarrow> [Fvar ?s',Fvar ?p']} ?t\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [Fvar\n                  x,Fvar\n                     y]} t'\\<^bsup>[Fvar\n                                     sa,Fvar pa]\\<^esup> : return (the T^l)", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [Fvar\n                x,Fvar\n                   y]} t'\\<^bsup>[Fvar\n                                   sa,Fvar pa]\\<^esup> : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: refactor to work with typing_induct *)"], ["", "lemma type_renaming'[rule_format]:\n  \"e \\<turnstile> t : C \\<Longrightarrow>\n  (\\<And>env t' s p x y A B n. \\<lbrakk> s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t'; y \\<notin> FV t'; \n                             x \\<notin> env_dom env; y \\<notin> env_dom env; s \\<noteq> p;  x \\<noteq> y;\n                             t = {n \\<rightarrow> [Fvar s,Fvar p]} t'; e = env\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr> \\<rbrakk>\n    \\<Longrightarrow> env\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar x,Fvar y]} t' : C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> t : C \\<Longrightarrow>\n    (\\<And>env t' s p x y A B n.\n        \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n         y \\<notin> FV t'; x \\<notin> env_dom env; y \\<notin> env_dom env;\n         s \\<noteq> p; x \\<noteq> y;\n         t = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n         e = env\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> env\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                        x,Fvar y]} t' : C)", "proof (induct set:typing)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>env x T enva t' s p xa y A B n.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        s \\<notin> FV t'; p \\<notin> FV t'; xa \\<notin> FV t';\n        y \\<notin> FV t'; xa \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; xa \\<noteq> y;\n        Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>xa:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         xa,Fvar y]} t' : T\n 2. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 3. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A\n 4. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : param (the A^l);\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : return (the A^l)", "case (T_Call env t1 T t2 l env' t' s p x y A B n)"], ["proof (state)\nthis:\n  env \\<turnstile> t1 : T\n  \\<lbrakk>?s \\<notin> FV ?t'; ?p \\<notin> FV ?t'; ?x \\<notin> FV ?t';\n   ?y \\<notin> FV ?t'; ?x \\<notin> env_dom ?env; ?y \\<notin> env_dom ?env;\n   ?s \\<noteq> ?p; ?x \\<noteq> ?y;\n   t1 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env\\<lparr>?x:?A\\<rparr>\\<lparr>?y:?B\\<rparr> \\<turnstile> {?n \\<rightarrow> [Fvar\n                        ?x,Fvar ?y]} ?t' : T\n  env \\<turnstile> t2 : param (the T^l)\n  \\<lbrakk>?s \\<notin> FV ?t'; ?p \\<notin> FV ?t'; ?x \\<notin> FV ?t';\n   ?y \\<notin> FV ?t'; ?x \\<notin> env_dom ?env; ?y \\<notin> env_dom ?env;\n   ?s \\<noteq> ?p; ?x \\<noteq> ?y;\n   t2 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env\\<lparr>?x:?A\\<rparr>\\<lparr>?y:?B\\<rparr> \\<turnstile> {?n \\<rightarrow> [Fvar\n                        ?x,Fvar ?y]} ?t' : param (the T^l)\n  l \\<in> do T\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  x \\<notin> env_dom env'\n  y \\<notin> env_dom env'\n  s \\<noteq> p\n  x \\<noteq> y\n  Call t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (4 subgoals):\n 1. \\<And>env x T enva t' s p xa y A B n.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        s \\<notin> FV t'; p \\<notin> FV t'; xa \\<notin> FV t';\n        y \\<notin> FV t'; xa \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; xa \\<noteq> y;\n        Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>xa:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         xa,Fvar y]} t' : T\n 2. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 3. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A\n 4. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : param (the A^l);\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : return (the A^l)", "with sopen_eq_Call[OF sym[OF \\<open>Call t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close>]]"], ["proof (chain)\npicking this:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t' = Call t1' l t2'\n  env \\<turnstile> t1 : T\n  \\<lbrakk>?s \\<notin> FV ?t'; ?p \\<notin> FV ?t'; ?x \\<notin> FV ?t';\n   ?y \\<notin> FV ?t'; ?x \\<notin> env_dom ?env; ?y \\<notin> env_dom ?env;\n   ?s \\<noteq> ?p; ?x \\<noteq> ?y;\n   t1 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env\\<lparr>?x:?A\\<rparr>\\<lparr>?y:?B\\<rparr> \\<turnstile> {?n \\<rightarrow> [Fvar\n                        ?x,Fvar ?y]} ?t' : T\n  env \\<turnstile> t2 : param (the T^l)\n  \\<lbrakk>?s \\<notin> FV ?t'; ?p \\<notin> FV ?t'; ?x \\<notin> FV ?t';\n   ?y \\<notin> FV ?t'; ?x \\<notin> env_dom ?env; ?y \\<notin> env_dom ?env;\n   ?s \\<noteq> ?p; ?x \\<noteq> ?y;\n   t2 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env\\<lparr>?x:?A\\<rparr>\\<lparr>?y:?B\\<rparr> \\<turnstile> {?n \\<rightarrow> [Fvar\n                        ?x,Fvar ?y]} ?t' : param (the T^l)\n  l \\<in> do T\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  x \\<notin> env_dom env'\n  y \\<notin> env_dom env'\n  s \\<noteq> p\n  x \\<noteq> y\n  Call t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t' = Call t1' l t2'\n  env \\<turnstile> t1 : T\n  \\<lbrakk>?s \\<notin> FV ?t'; ?p \\<notin> FV ?t'; ?x \\<notin> FV ?t';\n   ?y \\<notin> FV ?t'; ?x \\<notin> env_dom ?env; ?y \\<notin> env_dom ?env;\n   ?s \\<noteq> ?p; ?x \\<noteq> ?y;\n   t1 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env\\<lparr>?x:?A\\<rparr>\\<lparr>?y:?B\\<rparr> \\<turnstile> {?n \\<rightarrow> [Fvar\n                        ?x,Fvar ?y]} ?t' : T\n  env \\<turnstile> t2 : param (the T^l)\n  \\<lbrakk>?s \\<notin> FV ?t'; ?p \\<notin> FV ?t'; ?x \\<notin> FV ?t';\n   ?y \\<notin> FV ?t'; ?x \\<notin> env_dom ?env; ?y \\<notin> env_dom ?env;\n   ?s \\<noteq> ?p; ?x \\<noteq> ?y;\n   t2 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env\\<lparr>?x:?A\\<rparr>\\<lparr>?y:?B\\<rparr> \\<turnstile> {?n \\<rightarrow> [Fvar\n                        ?x,Fvar ?y]} ?t' : param (the T^l)\n  l \\<in> do T\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  x \\<notin> env_dom env'\n  y \\<notin> env_dom env'\n  s \\<noteq> p\n  x \\<noteq> y\n  Call t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : return (the T^l)", "by auto"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n x,Fvar y]} t' : return (the T^l)\n\ngoal (3 subgoals):\n 1. \\<And>env x T enva t' s p xa y A B n.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        s \\<notin> FV t'; p \\<notin> FV t'; xa \\<notin> FV t';\n        y \\<notin> FV t'; xa \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; xa \\<noteq> y;\n        Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>xa:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         xa,Fvar y]} t' : T\n 2. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 3. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>env x T enva t' s p xa y A B n.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        s \\<notin> FV t'; p \\<notin> FV t'; xa \\<notin> FV t';\n        y \\<notin> FV t'; xa \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; xa \\<noteq> y;\n        Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>xa:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         xa,Fvar y]} t' : T\n 2. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 3. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "case (T_Var env a T env' t' s p x y A B n)"], ["proof (state)\nthis:\n  ok env\n  a \\<in> env_dom env\n  the env!a = T\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  x \\<notin> env_dom env'\n  y \\<notin> env_dom env'\n  s \\<noteq> p\n  x \\<noteq> y\n  Fvar a = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<And>env x T enva t' s p xa y A B n.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        s \\<notin> FV t'; p \\<notin> FV t'; xa \\<notin> FV t';\n        y \\<notin> FV t'; xa \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; xa \\<noteq> y;\n        Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>xa:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         xa,Fvar y]} t' : T\n 2. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 3. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "from \\<open>ok env\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> ok_add_2[of env' s A p B]"], ["proof (chain)\npicking this:\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p", "have \"ok env'\""], ["proof (prove)\nusing this:\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. ok env'", "by simp"], ["proof (state)\nthis:\n  ok env'\n\ngoal (3 subgoals):\n 1. \\<And>env x T enva t' s p xa y A B n.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        s \\<notin> FV t'; p \\<notin> FV t'; xa \\<notin> FV t';\n        y \\<notin> FV t'; xa \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; xa \\<noteq> y;\n        Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>xa:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         xa,Fvar y]} t' : T\n 2. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 3. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "from \n    ok_add_ok[OF ok_add_ok[OF this \\<open>x \\<notin> env_dom env'\\<close>]\n                 not_in_env_bigger[OF \\<open>y \\<notin> env_dom env'\\<close> not_sym[OF \\<open>x \\<noteq> y\\<close>]]]"], ["proof (chain)\npicking this:\n  ok (env'\\<lparr>x:?X1\\<rparr>\\<lparr>y:?X\\<rparr>)", "have ok: \"ok (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)\""], ["proof (prove)\nusing this:\n  ok (env'\\<lparr>x:?X1\\<rparr>\\<lparr>y:?X\\<rparr>)\n\ngoal (1 subgoal):\n 1. ok (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)", "by assumption"], ["proof (state)\nthis:\n  ok (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)\n\ngoal (3 subgoals):\n 1. \\<And>env x T enva t' s p xa y A B n.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        s \\<notin> FV t'; p \\<notin> FV t'; xa \\<notin> FV t';\n        y \\<notin> FV t'; xa \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; xa \\<noteq> y;\n        Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>xa:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         xa,Fvar y]} t' : T\n 2. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 3. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "from sopen_eq_Fvar[OF sym[OF \\<open>Fvar a = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close>]]"], ["proof (chain)\npicking this:\n  t' = Fvar a \\<or>\n  a = s \\<and> t' = Bvar (Self n) \\<or> a = p \\<and> t' = Bvar (Param n)", "show ?case"], ["proof (prove)\nusing this:\n  t' = Fvar a \\<or>\n  a = s \\<and> t' = Bvar (Self n) \\<or> a = p \\<and> t' = Bvar (Param n)\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T", "proof (elim disjE conjE)"], ["proof (state)\ngoal (3 subgoals):\n 1. t' = Fvar a \\<Longrightarrow>\n    env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T\n 2. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 3. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "assume \"t' = Fvar a\""], ["proof (state)\nthis:\n  t' = Fvar a\n\ngoal (3 subgoals):\n 1. t' = Fvar a \\<Longrightarrow>\n    env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T\n 2. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 3. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "with T_Var(4-7)"], ["proof (chain)\npicking this:\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  t' = Fvar a", "obtain \"a \\<noteq> s\" and \"a \\<noteq> p\" and \"a \\<noteq> x\" and \"a \\<noteq> y\""], ["proof (prove)\nusing this:\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  t' = Fvar a\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<noteq> s; a \\<noteq> p; a \\<noteq> x;\n      a \\<noteq> y\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<noteq> s\n  a \\<noteq> p\n  a \\<noteq> x\n  a \\<noteq> y\n\ngoal (3 subgoals):\n 1. t' = Fvar a \\<Longrightarrow>\n    env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T\n 2. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 3. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "note in_env_smaller2[OF _ this(1-2)]"], ["proof (state)\nthis:\n  a \\<in> env_dom\n           (?e\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>) \\<Longrightarrow>\n  a \\<in> env_dom ?e\n\ngoal (3 subgoals):\n 1. t' = Fvar a \\<Longrightarrow>\n    env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T\n 2. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 3. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "from \\<open>a \\<in> env_dom env\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> this[of env' A B]"], ["proof (chain)\npicking this:\n  a \\<in> env_dom env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  a \\<in> env_dom\n           (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  a \\<in> env_dom env'", "have \"a \\<in> env_dom env'\""], ["proof (prove)\nusing this:\n  a \\<in> env_dom env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  a \\<in> env_dom\n           (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  a \\<in> env_dom env'\n\ngoal (1 subgoal):\n 1. a \\<in> env_dom env'", "by simp"], ["proof (state)\nthis:\n  a \\<in> env_dom env'\n\ngoal (3 subgoals):\n 1. t' = Fvar a \\<Longrightarrow>\n    env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T\n 2. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 3. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "from env_bigger2[OF \\<open>x \\<notin> env_dom env'\\<close> \\<open>y \\<notin> env_dom env'\\<close> this \\<open>x \\<noteq> y\\<close>]"], ["proof (chain)\npicking this:\n  a \\<in> env_dom (env'\\<lparr>x:?X\\<rparr>\\<lparr>y:?Y\\<rparr>)", "have inenv: \"a \\<in> env_dom (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)\""], ["proof (prove)\nusing this:\n  a \\<in> env_dom (env'\\<lparr>x:?X\\<rparr>\\<lparr>y:?Y\\<rparr>)\n\ngoal (1 subgoal):\n 1. a \\<in> env_dom (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)", "by assumption"], ["proof (state)\nthis:\n  a \\<in> env_dom (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)\n\ngoal (3 subgoals):\n 1. t' = Fvar a \\<Longrightarrow>\n    env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T\n 2. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 3. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "note get_env_bigger2[OF _ \\<open>a \\<noteq> s\\<close> \\<open>a \\<noteq> p\\<close>]"], ["proof (state)\nthis:\n  a \\<in> env_dom\n           (?e\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>) \\<Longrightarrow>\n  ?e!a = ?e\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>!a\n\ngoal (3 subgoals):\n 1. t' = Fvar a \\<Longrightarrow>\n    env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T\n 2. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 3. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "from \n      this[of env' A B] \\<open>a \\<in> env_dom env\\<close> \\<open>the env!a = T\\<close> \n      \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> get_env_bigger2[OF inenv \\<open>a \\<noteq> x\\<close> \\<open>a \\<noteq> y\\<close>]"], ["proof (chain)\npicking this:\n  a \\<in> env_dom\n           (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  env'!a = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!a\n  a \\<in> env_dom env\n  the env!a = T\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  env'!a = env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>!a", "have \"the (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>!a) = T\""], ["proof (prove)\nusing this:\n  a \\<in> env_dom\n           (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  env'!a = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!a\n  a \\<in> env_dom env\n  the env!a = T\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  env'!a = env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>!a\n\ngoal (1 subgoal):\n 1. the env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>!a = T", "by simp"], ["proof (state)\nthis:\n  the env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>!a = T\n\ngoal (3 subgoals):\n 1. t' = Fvar a \\<Longrightarrow>\n    env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T\n 2. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 3. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "from typing.T_Var[OF ok inenv this] \\<open>t' = Fvar a\\<close>"], ["proof (chain)\npicking this:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> Fvar a : T\n  t' = Fvar a", "show ?case"], ["proof (prove)\nusing this:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> Fvar a : T\n  t' = Fvar a\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T", "by simp"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n x,Fvar y]} t' : T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 2. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 2. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "assume \"a = s\" and \"t' = Bvar (Self n)\""], ["proof (state)\nthis:\n  a = s\n  t' = Bvar (Self n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 2. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "from \n      this(1) \\<open>ok env\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> \\<open>the env!a = T\\<close> \n      add_get2_1[of env' s A p B]"], ["proof (chain)\npicking this:\n  a = s\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  the env!a = T\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  the env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!s = A", "have \"T = A\""], ["proof (prove)\nusing this:\n  a = s\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  the env!a = T\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  the env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!s = A\n\ngoal (1 subgoal):\n 1. T = A", "by simp"], ["proof (state)\nthis:\n  T = A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 2. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "moreover"], ["proof (state)\nthis:\n  T = A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 2. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "from \\<open>t' = Bvar (Self n)\\<close>"], ["proof (chain)\npicking this:\n  t' = Bvar (Self n)", "have \"{n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar x\""], ["proof (prove)\nusing this:\n  t' = Bvar (Self n)\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar x", "by simp"], ["proof (state)\nthis:\n  {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar x\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T\n 2. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "ultimately"], ["proof (chain)\npicking this:\n  T = A\n  {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar x", "show ?case"], ["proof (prove)\nusing this:\n  T = A\n  {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar x\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T", "using in_add_2[OF ok] typing.T_Var[OF ok _ add_get2_1[OF ok]]"], ["proof (prove)\nusing this:\n  T = A\n  {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar x\n  x \\<in> env_dom (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>) \\<and>\n  y \\<in> env_dom (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)\n  x \\<in> env_dom\n           (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>) \\<Longrightarrow>\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> Fvar x : A\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T", "by simp"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n x,Fvar y]} t' : T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "note subst = subst_add[OF \\<open>x \\<noteq> y\\<close>]"], ["proof (state)\nthis:\n  ?e\\<lparr>x:?a\\<rparr>\\<lparr>y:?b\\<rparr> =\n  ?e\\<lparr>y:?b\\<rparr>\\<lparr>x:?a\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "from subst[of env' A B] ok"], ["proof (chain)\npicking this:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> =\n  env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr>\n  ok (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)", "have ok': \"ok (env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr>)\""], ["proof (prove)\nusing this:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> =\n  env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr>\n  ok (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)\n\ngoal (1 subgoal):\n 1. ok (env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  ok (env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "assume \"a = p\" and \"t' = Bvar (Param n)\""], ["proof (state)\nthis:\n  a = p\n  t' = Bvar (Param n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "from \n      this(1) \\<open>ok env\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> \\<open>the env!a = T\\<close>\n      add_get2_2[of env' s A p B]"], ["proof (chain)\npicking this:\n  a = p\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  the env!a = T\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  the env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!p = B", "have \"T = B\""], ["proof (prove)\nusing this:\n  a = p\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  the env!a = T\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  the env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!p = B\n\ngoal (1 subgoal):\n 1. T = B", "by simp"], ["proof (state)\nthis:\n  T = B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "moreover"], ["proof (state)\nthis:\n  T = B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "from \\<open>t' = Bvar (Param n)\\<close>"], ["proof (chain)\npicking this:\n  t' = Bvar (Param n)", "have \"{n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar y\""], ["proof (prove)\nusing this:\n  t' = Bvar (Param n)\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar y", "by simp"], ["proof (state)\nthis:\n  {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                     x,Fvar y]} t' : T", "ultimately"], ["proof (chain)\npicking this:\n  T = B\n  {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar y", "show ?case"], ["proof (prove)\nusing this:\n  T = B\n  {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar y\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T", "using \n        subst[of env' A B] in_add_2[OF ok'] \n        typing.T_Var[OF ok' _ add_get2_1[OF ok']]"], ["proof (prove)\nusing this:\n  T = B\n  {n \\<rightarrow> [Fvar x,Fvar y]} t' = Fvar y\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> =\n  env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr>\n  y \\<in> env_dom (env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr>) \\<and>\n  x \\<in> env_dom (env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr>)\n  y \\<in> env_dom\n           (env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr>) \\<Longrightarrow>\n  env'\\<lparr>y:B\\<rparr>\\<lparr>x:A\\<rparr> \\<turnstile> Fvar y : B\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T", "by simp"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n x,Fvar y]} t' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n x,Fvar y]} t' : T\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "case (T_Upd F env T l t2 t1 env' t' s p x y A B n)"], ["proof (state)\nthis:\n  finite F\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x xa xb xc xd xe xf xg xh.\n         xb \\<notin> FV xa \\<longrightarrow>\n         xc \\<notin> FV xa \\<longrightarrow>\n         xd \\<notin> FV xa \\<longrightarrow>\n         xe \\<notin> FV xa \\<longrightarrow>\n         xd \\<notin> env_dom x \\<longrightarrow>\n         xe \\<notin> env_dom x \\<longrightarrow>\n         xb \\<noteq> xc \\<longrightarrow>\n         xd \\<noteq> xe \\<longrightarrow>\n         (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n         x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n         x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n          xd,Fvar xe]} xa : return (the T^l))\n  env \\<turnstile> t1 : T\n  \\<lbrakk>?s \\<notin> FV ?t'; ?p \\<notin> FV ?t'; ?x \\<notin> FV ?t';\n   ?y \\<notin> FV ?t'; ?x \\<notin> env_dom ?env; ?y \\<notin> env_dom ?env;\n   ?s \\<noteq> ?p; ?x \\<noteq> ?y;\n   t1 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env\\<lparr>?x:?A\\<rparr>\\<lparr>?y:?B\\<rparr> \\<turnstile> {?n \\<rightarrow> [Fvar\n                        ?x,Fvar ?y]} ?t' : T\n  l \\<in> do T\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  x \\<notin> env_dom env'\n  y \\<notin> env_dom env'\n  s \\<noteq> p\n  x \\<noteq> y\n  Upd t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "from sopen_eq_Upd[OF sym[OF \\<open>Upd t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close>]]"], ["proof (chain)\npicking this:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n     t' = Upd t1' l t2'", "obtain t1' t2' where \n    t1: \"t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1'\" and\n    t2: \"t2 = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2'\" and\n    t': \"t' = Upd t1' l t2'\""], ["proof (prove)\nusing this:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n     t' = Upd t1' l t2'\n\ngoal (1 subgoal):\n 1. (\\<And>t1' t2'.\n        \\<lbrakk>t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1';\n         t2 = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2';\n         t' = Upd t1' l t2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1'\n  t2 = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2'\n  t' = Upd t1' l t2'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "{"], ["proof (state)\nthis:\n  t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1'\n  t2 = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2'\n  t' = Upd t1' l t2'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "assume \"a \\<notin> FV t'\""], ["proof (state)\nthis:\n  a \\<notin> FV t'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "with t'"], ["proof (chain)\npicking this:\n  t' = Upd t1' l t2'\n  a \\<notin> FV t'", "have \"a \\<notin> FV t1'\""], ["proof (prove)\nusing this:\n  t' = Upd t1' l t2'\n  a \\<notin> FV t'\n\ngoal (1 subgoal):\n 1. a \\<notin> FV t1'", "by simp"], ["proof (state)\nthis:\n  a \\<notin> FV t1'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "}"], ["proof (state)\nthis:\n  ?a2 \\<notin> FV t' \\<Longrightarrow> ?a2 \\<notin> FV t1'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "note \n    t1' = T_Upd(4)[OF this[OF \\<open>s \\<notin> FV t'\\<close>] this[OF \\<open>p \\<notin> FV t'\\<close>] \n                      this[OF \\<open>x \\<notin> FV t'\\<close>] this[OF \\<open>y \\<notin> FV t'\\<close>] \n                      \\<open>x \\<notin> env_dom env'\\<close> \\<open>y \\<notin> env_dom env'\\<close>\n                      \\<open>s \\<noteq> p\\<close> \\<open>x \\<noteq> y\\<close> t1 \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close>]"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n x,Fvar y]} t1' : T\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "from ok_finite[of env'] ok_add_2[OF typing_regular'[OF this]]"], ["proof (chain)\npicking this:\n  ok env' \\<Longrightarrow> finite (env_dom env')\n  ok env' \\<and>\n  x \\<notin> env_dom env' \\<and> y \\<notin> env_dom env' \\<and> x \\<noteq> y", "have findom: \"finite (env_dom env')\""], ["proof (prove)\nusing this:\n  ok env' \\<Longrightarrow> finite (env_dom env')\n  ok env' \\<and>\n  x \\<notin> env_dom env' \\<and> y \\<notin> env_dom env' \\<and> x \\<noteq> y\n\ngoal (1 subgoal):\n 1. finite (env_dom env')", "by simp"], ["proof (state)\nthis:\n  finite (env_dom env')\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "{"], ["proof (state)\nthis:\n  finite (env_dom env')\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "assume \"a \\<notin> FV t'\""], ["proof (state)\nthis:\n  a \\<notin> FV t'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "with t'"], ["proof (chain)\npicking this:\n  t' = Upd t1' l t2'\n  a \\<notin> FV t'", "have \"a \\<notin> FV t2'\""], ["proof (prove)\nusing this:\n  t' = Upd t1' l t2'\n  a \\<notin> FV t'\n\ngoal (1 subgoal):\n 1. a \\<notin> FV t2'", "by simp"], ["proof (state)\nthis:\n  a \\<notin> FV t2'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "}"], ["proof (state)\nthis:\n  ?a2 \\<notin> FV t' \\<Longrightarrow> ?a2 \\<notin> FV t2'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "note \n    bnd_renaming_lem[OF this[OF \\<open>s \\<notin> FV t'\\<close>] this[OF \\<open>p \\<notin> FV t'\\<close>] \n                        this[OF \\<open>x \\<notin> FV t'\\<close>] this[OF \\<open>y \\<notin> FV t'\\<close>] \n                        \\<open>x \\<notin> env_dom env'\\<close> \\<open>y \\<notin> env_dom env'\\<close>\n                        \\<open>s \\<noteq> p\\<close> \\<open>x \\<noteq> y\\<close> t2 \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close>]"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>sa pa.\n              sa \\<notin> ?F \\<and>\n              pa \\<notin> ?F \\<and> sa \\<noteq> pa \\<longrightarrow>\n              env\\<lparr>sa:?T\\<rparr>\\<lparr>pa:param\n            (the ?T^?l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                   sa,Fvar pa]\\<^esup> : return (the ?T^?l) \\<and>\n              (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n                  s' \\<notin> FV t'' \\<longrightarrow>\n                  p' \\<notin> FV t'' \\<longrightarrow>\n                  x' \\<notin> FV t'' \\<longrightarrow>\n                  y' \\<notin> FV t'' \\<longrightarrow>\n                  x' \\<notin> env_dom env'' \\<longrightarrow>\n                  y' \\<notin> env_dom env'' \\<longrightarrow>\n                  x' \\<noteq> y' \\<longrightarrow>\n                  s' \\<noteq> p' \\<longrightarrow>\n                  (t2\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n                  {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \\<longrightarrow>\n                  env\\<lparr>sa:?T\\<rparr>\\<lparr>pa:param\n                (the ?T^?l)\\<rparr> =\n                  env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \\<longrightarrow>\n                  env''\\<lparr>x':A'\\<rparr>\\<lparr>y':B'\\<rparr> \\<turnstile> {n' \\<rightarrow> [Fvar\n                       x',Fvar y']} t'' : return (the ?T^?l));\n   FV t2' \\<subseteq> ?F'\\<rbrakk>\n  \\<Longrightarrow> \\<forall>sa pa.\n                       sa \\<notin> ?F \\<union> {s, p, x, y} \\<union>\n                                   ?F' \\<union>\n                                   env_dom env' \\<and>\n                       pa \\<notin> ?F \\<union> {s, p, x, y} \\<union>\n                                   ?F' \\<union>\n                                   env_dom env' \\<and>\n                       sa \\<noteq> pa \\<longrightarrow>\n                       env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:?T\\<rparr>\\<lparr>pa:param\n                      (the ?T^?l)\\<rparr> \\<turnstile> {Suc\n                   n \\<rightarrow> [Fvar\n                                     x,Fvar\n  y]} t2'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the ?T^?l)\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "from this[of F T l \"FV t2'\"] T_Upd(2)"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>sa pa.\n              sa \\<notin> F \\<and>\n              pa \\<notin> F \\<and> sa \\<noteq> pa \\<longrightarrow>\n              env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n           (the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                sa,Fvar pa]\\<^esup> : return (the T^l) \\<and>\n              (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n                  s' \\<notin> FV t'' \\<longrightarrow>\n                  p' \\<notin> FV t'' \\<longrightarrow>\n                  x' \\<notin> FV t'' \\<longrightarrow>\n                  y' \\<notin> FV t'' \\<longrightarrow>\n                  x' \\<notin> env_dom env'' \\<longrightarrow>\n                  y' \\<notin> env_dom env'' \\<longrightarrow>\n                  x' \\<noteq> y' \\<longrightarrow>\n                  s' \\<noteq> p' \\<longrightarrow>\n                  (t2\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n                  {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \\<longrightarrow>\n                  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n               (the T^l)\\<rparr> =\n                  env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \\<longrightarrow>\n                  env''\\<lparr>x':A'\\<rparr>\\<lparr>y':B'\\<rparr> \\<turnstile> {n' \\<rightarrow> [Fvar\n                       x',Fvar y']} t'' : return (the T^l));\n   FV t2' \\<subseteq> FV t2'\\<rbrakk>\n  \\<Longrightarrow> \\<forall>sa pa.\n                       sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                                   FV t2' \\<union>\n                                   env_dom env' \\<and>\n                       pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                                   FV t2' \\<union>\n                                   env_dom env' \\<and>\n                       sa \\<noteq> pa \\<longrightarrow>\n                       env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                     (the T^l)\\<rparr> \\<turnstile> {Suc\n                n \\<rightarrow> [Fvar\n                                  x,Fvar\n                                     y]} t2'\\<^bsup>[Fvar\n                sa,Fvar pa]\\<^esup> : return (the T^l)\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x xa xb xc xd xe xf xg xh.\n         xb \\<notin> FV xa \\<longrightarrow>\n         xc \\<notin> FV xa \\<longrightarrow>\n         xd \\<notin> FV xa \\<longrightarrow>\n         xe \\<notin> FV xa \\<longrightarrow>\n         xd \\<notin> env_dom x \\<longrightarrow>\n         xe \\<notin> env_dom x \\<longrightarrow>\n         xb \\<noteq> xc \\<longrightarrow>\n         xd \\<noteq> xe \\<longrightarrow>\n         (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n         x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n         x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n          xd,Fvar xe]} xa : return (the T^l))", "have \n    \"\\<forall>sa pa. sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV t2' \\<union> env_dom env' \n           \\<and> pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV t2' \\<union> env_dom env' \n           \\<and> sa \\<noteq> pa \n      \\<longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n          \\<turnstile> ({Suc n \\<rightarrow> [Fvar x,Fvar y]} t2'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>sa pa.\n              sa \\<notin> F \\<and>\n              pa \\<notin> F \\<and> sa \\<noteq> pa \\<longrightarrow>\n              env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n           (the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                sa,Fvar pa]\\<^esup> : return (the T^l) \\<and>\n              (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n                  s' \\<notin> FV t'' \\<longrightarrow>\n                  p' \\<notin> FV t'' \\<longrightarrow>\n                  x' \\<notin> FV t'' \\<longrightarrow>\n                  y' \\<notin> FV t'' \\<longrightarrow>\n                  x' \\<notin> env_dom env'' \\<longrightarrow>\n                  y' \\<notin> env_dom env'' \\<longrightarrow>\n                  x' \\<noteq> y' \\<longrightarrow>\n                  s' \\<noteq> p' \\<longrightarrow>\n                  (t2\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n                  {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \\<longrightarrow>\n                  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n               (the T^l)\\<rparr> =\n                  env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \\<longrightarrow>\n                  env''\\<lparr>x':A'\\<rparr>\\<lparr>y':B'\\<rparr> \\<turnstile> {n' \\<rightarrow> [Fvar\n                       x',Fvar y']} t'' : return (the T^l));\n   FV t2' \\<subseteq> FV t2'\\<rbrakk>\n  \\<Longrightarrow> \\<forall>sa pa.\n                       sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                                   FV t2' \\<union>\n                                   env_dom env' \\<and>\n                       pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                                   FV t2' \\<union>\n                                   env_dom env' \\<and>\n                       sa \\<noteq> pa \\<longrightarrow>\n                       env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                     (the T^l)\\<rparr> \\<turnstile> {Suc\n                n \\<rightarrow> [Fvar\n                                  x,Fvar\n                                     y]} t2'\\<^bsup>[Fvar\n                sa,Fvar pa]\\<^esup> : return (the T^l)\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x xa xb xc xd xe xf xg xh.\n         xb \\<notin> FV xa \\<longrightarrow>\n         xc \\<notin> FV xa \\<longrightarrow>\n         xd \\<notin> FV xa \\<longrightarrow>\n         xe \\<notin> FV xa \\<longrightarrow>\n         xd \\<notin> env_dom x \\<longrightarrow>\n         xe \\<notin> env_dom x \\<longrightarrow>\n         xb \\<noteq> xc \\<longrightarrow>\n         xd \\<noteq> xe \\<longrightarrow>\n         (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n         x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n         x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n          xd,Fvar xe]} xa : return (the T^l))\n\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV t2' \\<union>\n                   env_dom env' \\<and>\n       pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV t2' \\<union>\n                   env_dom env' \\<and>\n       sa \\<noteq> pa \\<longrightarrow>\n       env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n     (the T^l)\\<rparr> \\<turnstile> {Suc\nn \\<rightarrow> [Fvar\n                  x,Fvar\n                     y]} t2'\\<^bsup>[Fvar\nsa,Fvar pa]\\<^esup> : return (the T^l)", "by simp"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV t2' \\<union>\n                 env_dom env' \\<and>\n     pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV t2' \\<union>\n                 env_dom env' \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n   (the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [Fvar\n                   x,Fvar\n                      y]} t2'\\<^bsup>[Fvar\n sa,Fvar pa]\\<^esup> : return (the T^l)\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<longrightarrow>\n               xc \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> FV xa \\<longrightarrow>\n               xe \\<notin> FV xa \\<longrightarrow>\n               xd \\<notin> env_dom x \\<longrightarrow>\n               xe \\<notin> env_dom x \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               xd \\<noteq> xe \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                xd,Fvar xe]} xa : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n            y \\<notin> FV t'; x \\<notin> env_dom enva;\n            y \\<notin> env_dom enva; s \\<noteq> p; x \\<noteq> y;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                             x,Fvar y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {na \\<rightarrow> [Fvar\n                          x,Fvar y]} t' : A", "from \n    typing.T_Upd[OF _ this t1' \\<open>l \\<in> do T\\<close>]\n    \\<open>finite F\\<close> findom t'"], ["proof (chain)\npicking this:\n  finite\n   (F \\<union> {s, p, x, y} \\<union> FV t2' \\<union>\n    env_dom env') \\<Longrightarrow>\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> Upd\n                     ({n \\<rightarrow> [Fvar x,Fvar y]} t1') l\n                     ({Suc n \\<rightarrow> [Fvar x,Fvar y]} t2') : T\n  finite F\n  finite (env_dom env')\n  t' = Upd t1' l t2'", "show ?case"], ["proof (prove)\nusing this:\n  finite\n   (F \\<union> {s, p, x, y} \\<union> FV t2' \\<union>\n    env_dom env') \\<Longrightarrow>\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> Upd\n                     ({n \\<rightarrow> [Fvar x,Fvar y]} t1') l\n                     ({Suc n \\<rightarrow> [Fvar x,Fvar y]} t2') : T\n  finite F\n  finite (env_dom env')\n  t' = Upd t1' l t2'\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T", "by simp"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n x,Fvar y]} t' : T\n\ngoal (1 subgoal):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A", "case (T_Obj env f T F env' t' s p x y A B n)"], ["proof (state)\nthis:\n  ok env\n  dom f = do T\n  finite F\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x xa xb xc xd xe xf xg xh.\n            xb \\<notin> FV xa \\<longrightarrow>\n            xc \\<notin> FV xa \\<longrightarrow>\n            xd \\<notin> FV xa \\<longrightarrow>\n            xe \\<notin> FV xa \\<longrightarrow>\n            xd \\<notin> env_dom x \\<longrightarrow>\n            xe \\<notin> env_dom x \\<longrightarrow>\n            xb \\<noteq> xc \\<longrightarrow>\n            xd \\<noteq> xe \\<longrightarrow>\n            (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n            {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n            x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n            x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n             xd,Fvar xe]} xa : return (the T^l))\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  x \\<notin> env_dom env'\n  y \\<notin> env_dom env'\n  s \\<noteq> p\n  x \\<noteq> y\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A", "from \\<open>ok env\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> ok_add_2[of env' s A p B]"], ["proof (chain)\npicking this:\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p", "have \"ok env'\""], ["proof (prove)\nusing this:\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. ok env'", "by simp"], ["proof (state)\nthis:\n  ok env'\n\ngoal (1 subgoal):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A", "from \n    ok_add_ok[OF ok_add_ok[OF this \\<open>x \\<notin> env_dom env'\\<close>]\n                 not_in_env_bigger[OF \\<open>y \\<notin> env_dom env'\\<close> not_sym[OF \\<open>x \\<noteq> y\\<close>]]]"], ["proof (chain)\npicking this:\n  ok (env'\\<lparr>x:?X1\\<rparr>\\<lparr>y:?X\\<rparr>)", "have ok: \"ok (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)\""], ["proof (prove)\nusing this:\n  ok (env'\\<lparr>x:?X1\\<rparr>\\<lparr>y:?X\\<rparr>)\n\ngoal (1 subgoal):\n 1. ok (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)", "by assumption"], ["proof (state)\nthis:\n  ok (env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A", "from sopen_eq_Obj[OF sym[OF \\<open>Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close>]]"], ["proof (chain)\npicking this:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t' = Obj f' T", "obtain f' where \n    obj: \"{n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\" and\n    t': \"t' = Obj f' T\""], ["proof (prove)\nusing this:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t' = Obj f' T\n\ngoal (1 subgoal):\n 1. (\\<And>f'.\n        \\<lbrakk>{n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T;\n         t' = Obj f' T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\n  t' = Obj f' T\n\ngoal (1 subgoal):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A", "from \n    this(1) \\<open>dom f = do T\\<close>\n    sym[OF dom_sopenoption_lem[of \"Suc n\" \"Fvar s\" \"Fvar p\" f']]\n    dom_sopenoption_lem[of \"Suc n\" \"Fvar x\" \"Fvar y\" f']"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\n  dom f = do T\n  dom f' = dom (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))\n  dom (\\<lambda>l. sopen_option (Suc n) (Fvar x) (Fvar y) (f' l)) = dom f'", "have dom: \"dom (\\<lambda>l. sopen_option (Suc n) (Fvar x) (Fvar y) (f' l)) = do T\""], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\n  dom f = do T\n  dom f' = dom (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))\n  dom (\\<lambda>l. sopen_option (Suc n) (Fvar x) (Fvar y) (f' l)) = dom f'\n\ngoal (1 subgoal):\n 1. dom (\\<lambda>l. sopen_option (Suc n) (Fvar x) (Fvar y) (f' l)) = do T", "by simp"], ["proof (state)\nthis:\n  dom (\\<lambda>l. sopen_option (Suc n) (Fvar x) (Fvar y) (f' l)) = do T\n\ngoal (1 subgoal):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A", "from \n    \\<open>finite F\\<close> finite_FV[of \"Obj f' T\"] \n    ok_finite[of env'] ok_add_2[OF ok]"], ["proof (chain)\npicking this:\n  finite F\n  finite (FV (Obj f' T))\n  ok env' \\<Longrightarrow> finite (env_dom env')\n  ok env' \\<and>\n  x \\<notin> env_dom env' \\<and> y \\<notin> env_dom env' \\<and> x \\<noteq> y", "have finF: \"finite (F \\<union> {s,p,x,y} \\<union>  FV (Obj f' T) \\<union> env_dom env')\""], ["proof (prove)\nusing this:\n  finite F\n  finite (FV (Obj f' T))\n  ok env' \\<Longrightarrow> finite (env_dom env')\n  ok env' \\<and>\n  x \\<notin> env_dom env' \\<and> y \\<notin> env_dom env' \\<and> x \\<noteq> y\n\ngoal (1 subgoal):\n 1. finite\n     (F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union> env_dom env')", "by simp"], ["proof (state)\nthis:\n  finite\n   (F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union> env_dom env')\n\ngoal (1 subgoal):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A", "have \n    \"\\<forall>l\\<in>do T. \\<forall>sa pa. sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union> env_dom env' \n                     \\<and> pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union> env_dom env' \n                     \\<and> sa \\<noteq> pa \n      \\<longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n          \\<turnstile> (the(sopen_option (Suc n) (Fvar x) (Fvar y) (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : \n          return(the(T^l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>do T.\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) (Fvar x) (Fvar y)\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) (Fvar x) (Fvar y)\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) (Fvar x) (Fvar y)\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "assume \"l \\<in> do T\""], ["proof (state)\nthis:\n  l \\<in> do T\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) (Fvar x) (Fvar y)\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "with T_Obj(4)"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x xa xb xc xd xe xf xg xh.\n            xb \\<notin> FV xa \\<longrightarrow>\n            xc \\<notin> FV xa \\<longrightarrow>\n            xd \\<notin> FV xa \\<longrightarrow>\n            xe \\<notin> FV xa \\<longrightarrow>\n            xd \\<notin> env_dom x \\<longrightarrow>\n            xe \\<notin> env_dom x \\<longrightarrow>\n            xb \\<noteq> xc \\<longrightarrow>\n            xd \\<noteq> xe \\<longrightarrow>\n            (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n            {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n            x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n            x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n             xd,Fvar xe]} xa : return (the T^l))\n  l \\<in> do T", "have cof: \n      \"\\<forall>sa pa. sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n        \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n            \\<turnstile> (the(f l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l))\n          \\<and> (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n               s' \\<notin> FV t'' \\<longrightarrow> p' \\<notin> FV t'' \\<longrightarrow> x' \\<notin> FV t'' \\<longrightarrow> y' \\<notin> FV t'' \n               \\<longrightarrow> x' \\<notin> env_dom env'' \\<longrightarrow> y' \\<notin> env_dom env'' \\<longrightarrow> x' \\<noteq> y' \n               \\<longrightarrow> s' \\<noteq> p' \n               \\<longrightarrow> (the(f l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) = {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \n               \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> = env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \n               \\<longrightarrow> env''\\<lparr>x':A'\\<rparr>\\<lparr>y':B'\\<rparr>\n                   \\<turnstile> {n' \\<rightarrow> [Fvar x',Fvar y']} t'' : return(the(T^l)))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x xa xb xc xd xe xf xg xh.\n            xb \\<notin> FV xa \\<longrightarrow>\n            xc \\<notin> FV xa \\<longrightarrow>\n            xd \\<notin> FV xa \\<longrightarrow>\n            xe \\<notin> FV xa \\<longrightarrow>\n            xd \\<notin> env_dom x \\<longrightarrow>\n            xe \\<notin> env_dom x \\<longrightarrow>\n            xb \\<noteq> xc \\<longrightarrow>\n            xd \\<noteq> xe \\<longrightarrow>\n            (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n            {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n            x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n            x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n             xd,Fvar xe]} xa : return (the T^l))\n  l \\<in> do T\n\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> F \\<and>\n       pa \\<notin> F \\<and> sa \\<noteq> pa \\<longrightarrow>\n       env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n    (the T^l)\\<rparr> \\<turnstile> the (f\n   l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l) \\<and>\n       (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n           s' \\<notin> FV t'' \\<longrightarrow>\n           p' \\<notin> FV t'' \\<longrightarrow>\n           x' \\<notin> FV t'' \\<longrightarrow>\n           y' \\<notin> FV t'' \\<longrightarrow>\n           x' \\<notin> env_dom env'' \\<longrightarrow>\n           y' \\<notin> env_dom env'' \\<longrightarrow>\n           x' \\<noteq> y' \\<longrightarrow>\n           s' \\<noteq> p' \\<longrightarrow>\n           (the (f l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n           {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \\<longrightarrow>\n           env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n           env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \\<longrightarrow>\n           env''\\<lparr>x':A'\\<rparr>\\<lparr>y':B'\\<rparr> \\<turnstile> {n' \\<rightarrow> [Fvar\n                x',Fvar y']} t'' : return (the T^l))", "by simp"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> F \\<and>\n     pa \\<notin> F \\<and> sa \\<noteq> pa \\<longrightarrow>\n     env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr> \\<turnstile> the (f\n l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n         s' \\<notin> FV t'' \\<longrightarrow>\n         p' \\<notin> FV t'' \\<longrightarrow>\n         x' \\<notin> FV t'' \\<longrightarrow>\n         y' \\<notin> FV t'' \\<longrightarrow>\n         x' \\<notin> env_dom env'' \\<longrightarrow>\n         y' \\<notin> env_dom env'' \\<longrightarrow>\n         x' \\<noteq> y' \\<longrightarrow>\n         s' \\<noteq> p' \\<longrightarrow>\n         (the (f l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n         {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \\<longrightarrow>\n         env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n         env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \\<longrightarrow>\n         env''\\<lparr>x':A'\\<rparr>\\<lparr>y':B'\\<rparr> \\<turnstile> {n' \\<rightarrow> [Fvar\n              x',Fvar y']} t'' : return (the T^l))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) (Fvar x) (Fvar y)\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "from \n      \\<open>l \\<in> do T\\<close> \\<open>dom f = do T\\<close> \\<open>Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close> obj t'\n      dom_sopenoption_lem[of \"Suc n\" \"Fvar s\" \"Fvar p\" f']"], ["proof (chain)\npicking this:\n  l \\<in> do T\n  dom f = do T\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\n  t' = Obj f' T\n  dom (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)) = dom f'", "have indomf': \"l \\<in> dom f'\""], ["proof (prove)\nusing this:\n  l \\<in> do T\n  dom f = do T\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\n  t' = Obj f' T\n  dom (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)) = dom f'\n\ngoal (1 subgoal):\n 1. l \\<in> dom f'", "by auto"], ["proof (state)\nthis:\n  l \\<in> dom f'\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) (Fvar x) (Fvar y)\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "hence \n      opened: \"the (sopen_option (Suc n) (Fvar x) (Fvar y) (f' l)) \n               = {Suc n \\<rightarrow> [Fvar x,Fvar y]} the(f' l)\""], ["proof (prove)\nusing this:\n  l \\<in> dom f'\n\ngoal (1 subgoal):\n 1. the (sopen_option (Suc n) (Fvar x) (Fvar y) (f' l)) =\n    {Suc n \\<rightarrow> [Fvar x,Fvar y]} the (f' l)", "by force"], ["proof (state)\nthis:\n  the (sopen_option (Suc n) (Fvar x) (Fvar y) (f' l)) =\n  {Suc n \\<rightarrow> [Fvar x,Fvar y]} the (f' l)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) (Fvar x) (Fvar y)\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "from indomf'"], ["proof (chain)\npicking this:\n  l \\<in> dom f'", "have FVsubset: \"FV (the(f' l)) \\<subseteq> FV (Obj f' T)\""], ["proof (prove)\nusing this:\n  l \\<in> dom f'\n\ngoal (1 subgoal):\n 1. FV (the (f' l)) \\<subseteq> FV (Obj f' T)", "by force"], ["proof (state)\nthis:\n  FV (the (f' l)) \\<subseteq> FV (Obj f' T)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) (Fvar x) (Fvar y)\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "with \n      \\<open>s \\<notin> FV t'\\<close> \\<open>p \\<notin> FV t'\\<close> \\<open>x \\<notin> FV t'\\<close> \\<open>y \\<notin> FV t'\\<close> obj t'\n      indomf' FV_option_lem[of f']"], ["proof (chain)\npicking this:\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\n  t' = Obj f' T\n  l \\<in> dom f'\n  \\<forall>l\\<in>dom f'. FV (the (f' l)) = FVoption (f' l)\n  FV (the (f' l)) \\<subseteq> FV (Obj f' T)", "obtain \n      \"s \\<notin> FV (the(f' l))\" and \"p \\<notin> FV (the(f' l))\" and\n      \"x \\<notin> FV (the(f' l))\" and \"y \\<notin> FV (the(f' l))\" and\n      \"the(f l) = {Suc n \\<rightarrow> [Fvar s,Fvar p]} the(f' l)\""], ["proof (prove)\nusing this:\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n  x \\<notin> FV t'\n  y \\<notin> FV t'\n  {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\n  t' = Obj f' T\n  l \\<in> dom f'\n  \\<forall>l\\<in>dom f'. FV (the (f' l)) = FVoption (f' l)\n  FV (the (f' l)) \\<subseteq> FV (Obj f' T)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>s \\<notin> FV (the (f' l)); p \\<notin> FV (the (f' l));\n      x \\<notin> FV (the (f' l)); y \\<notin> FV (the (f' l));\n      the (f l) = {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f' l)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> FV (the (f' l))\n  p \\<notin> FV (the (f' l))\n  x \\<notin> FV (the (f' l))\n  y \\<notin> FV (the (f' l))\n  the (f l) = {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f' l)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p, x, y} \\<union>\n                      FV (Obj f' T) \\<union>\n                      env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) (Fvar x) (Fvar y)\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "from \n      bnd_renaming_lem[OF this(1-4) \\<open>x \\<notin> env_dom env'\\<close> \\<open>y \\<notin> env_dom env'\\<close>\n                          \\<open>s \\<noteq> p\\<close> \\<open>x \\<noteq> y\\<close> this(5) \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> \n                          cof FVsubset]"], ["proof (chain)\npicking this:\n  \\<forall>sa pa.\n     sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                 env_dom env' \\<and>\n     pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                 env_dom env' \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n   (the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [Fvar\n                   x,Fvar\n                      y]} the (f' l)\\<^bsup>[Fvar\n        sa,Fvar pa]\\<^esup> : return (the T^l)", "show \n      \"\\<forall>sa pa. sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union> env_dom env' \n             \\<and> pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union> env_dom env' \n             \\<and> sa \\<noteq> pa \n        \\<longrightarrow> env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n            \\<turnstile> (the(sopen_option (Suc n) (Fvar x) (Fvar y) (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : \n              return(the(T^l))\""], ["proof (prove)\nusing this:\n  \\<forall>sa pa.\n     sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                 env_dom env' \\<and>\n     pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                 env_dom env' \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n   (the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [Fvar\n                   x,Fvar\n                      y]} the (f' l)\\<^bsup>[Fvar\n        sa,Fvar pa]\\<^esup> : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                   env_dom env' \\<and>\n       pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                   env_dom env' \\<and>\n       sa \\<noteq> pa \\<longrightarrow>\n       env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n     (the T^l)\\<rparr> \\<turnstile> the (sopen_option (Suc n) (Fvar x)\n    (Fvar y) (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "by (subst opened, assumption)"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                 env_dom env' \\<and>\n     pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                 env_dom env' \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n   (the T^l)\\<rparr> \\<turnstile> the (sopen_option (Suc n) (Fvar x)\n  (Fvar y) (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l\\<in>do T.\n     \\<forall>sa pa.\n        sa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                    env_dom env' \\<and>\n        pa \\<notin> F \\<union> {s, p, x, y} \\<union> FV (Obj f' T) \\<union>\n                    env_dom env' \\<and>\n        sa \\<noteq> pa \\<longrightarrow>\n        env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(sopen_option (Suc n) (Fvar x) (Fvar y)\n  (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<longrightarrow>\n                  xc \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> FV xa \\<longrightarrow>\n                  xe \\<notin> FV xa \\<longrightarrow>\n                  xd \\<notin> env_dom x \\<longrightarrow>\n                  xe \\<notin> env_dom x \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  xd \\<noteq> xe \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x\\<lparr>xd:xf\\<rparr>\\<lparr>xe:xg\\<rparr> \\<turnstile> {xh \\<rightarrow> [Fvar\n                   xd,Fvar xe]} xa : return (the A^l));\n        s \\<notin> FV t'; p \\<notin> FV t'; x \\<notin> FV t';\n        y \\<notin> FV t'; x \\<notin> env_dom enva; y \\<notin> env_dom enva;\n        s \\<noteq> p; x \\<noteq> y;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva\\<lparr>x:Aa\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                         x,Fvar y]} t' : A", "from typing.T_Obj[OF ok dom finF this] t'"], ["proof (chain)\npicking this:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> Obj\n                     (\\<lambda>l.\n                         sopen_option (Suc n) (Fvar x) (Fvar y) (f' l))\n                     T : T\n  t' = Obj f' T", "show ?case"], ["proof (prove)\nusing this:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> Obj\n                     (\\<lambda>l.\n                         sopen_option (Suc n) (Fvar x) (Fvar y) (f' l))\n                     T : T\n  t' = Obj f' T\n\ngoal (1 subgoal):\n 1. env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n   x,Fvar y]} t' : T", "by simp"], ["proof (state)\nthis:\n  env'\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n x,Fvar y]} t' : T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma type_renaming: \n  \"\\<lbrakk> e\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar s,Fvar p]} t : T; \n     s \\<notin> FV t; p \\<notin> FV t; x \\<notin> FV t; y \\<notin> FV t; \n     x \\<notin> env_dom e; y \\<notin> env_dom e; x \\<noteq> y; s \\<noteq> p\\<rbrakk> \n  \\<Longrightarrow> e\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar x,Fvar y]} t : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>e\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n         s,Fvar p]} t : T;\n     s \\<notin> FV t; p \\<notin> FV t; x \\<notin> FV t; y \\<notin> FV t;\n     x \\<notin> env_dom e; y \\<notin> env_dom e; x \\<noteq> y;\n     s \\<noteq> p\\<rbrakk>\n    \\<Longrightarrow> e\\<lparr>x:A\\<rparr>\\<lparr>y:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n                  x,Fvar y]} t : T", "by (auto simp: type_renaming')"], ["", "(* too weak, as we need specific s,p *)"], ["", "lemma obj_inv_elim': \n  assumes \n  \"e \\<turnstile> Obj f U : U\" and \n  nin_s: \"s \\<notin> FV (Obj f U) \\<union> env_dom e\" and\n  nin_p: \"p \\<notin> FV (Obj f U) \\<union> env_dom e\" and \"s \\<noteq> p\"\n  shows \n  \"(dom f = do U) \\<and> (\\<forall>l\\<in>do U. e\\<lparr>s:U\\<rparr>\\<lparr>p:param(the(U^l))\\<rparr>\n                               \\<turnstile> (the(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(U^l)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom f = do U \\<and>\n    (\\<forall>l\\<in>do U.\n        e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n (the U^l)\\<rparr> \\<turnstile> the (f\nl)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l))", "using assms"], ["proof (prove)\nusing this:\n  e \\<turnstile> Obj f U : U\n  s \\<notin> FV (Obj f U) \\<union> env_dom e\n  p \\<notin> FV (Obj f U) \\<union> env_dom e\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. dom f = do U \\<and>\n    (\\<forall>l\\<in>do U.\n        e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n (the U^l)\\<rparr> \\<turnstile> the (f\nl)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l))", "proof (cases rule: typing.cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>s \\<notin> FV (Obj f U) \\<union> env_dom e;\n        p \\<notin> FV (Obj f U) \\<union> env_dom e; s \\<noteq> p; ok e;\n        dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)\\<rbrakk>\n       \\<Longrightarrow> dom f = do U \\<and>\n                         (\\<forall>l\\<in>do U.\n                             e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                      (the U^l)\\<rparr> \\<turnstile> the\n                (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l))", "case (T_Obj F)"], ["proof (state)\nthis:\n  ok e\n  dom f = do U\n  finite F\n  \\<forall>l\\<in>do U.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n (the U^l)\\<rparr> \\<turnstile> the (f\nl)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>s \\<notin> FV (Obj f U) \\<union> env_dom e;\n        p \\<notin> FV (Obj f U) \\<union> env_dom e; s \\<noteq> p; ok e;\n        dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)\\<rbrakk>\n       \\<Longrightarrow> dom f = do U \\<and>\n                         (\\<forall>l\\<in>do U.\n                             e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                      (the U^l)\\<rparr> \\<turnstile> the\n                (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l))", "(*  from `e = env` `Obj f U = Obj f' T` `dom f' = do T`\n  have \"dom f = do U\" by simp*)"], ["proof (state)\nthis:\n  ok e\n  dom f = do U\n  finite F\n  \\<forall>l\\<in>do U.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n (the U^l)\\<rparr> \\<turnstile> the (f\nl)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>s \\<notin> FV (Obj f U) \\<union> env_dom e;\n        p \\<notin> FV (Obj f U) \\<union> env_dom e; s \\<noteq> p; ok e;\n        dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)\\<rbrakk>\n       \\<Longrightarrow> dom f = do U \\<and>\n                         (\\<forall>l\\<in>do U.\n                             e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                      (the U^l)\\<rparr> \\<turnstile> the\n                (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ok e\n  dom f = do U\n  finite F\n  \\<forall>l\\<in>do U.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n (the U^l)\\<rparr> \\<turnstile> the (f\nl)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)\n\ngoal (1 subgoal):\n 1. dom f = do U \\<and>\n    (\\<forall>l\\<in>do U.\n        e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n (the U^l)\\<rparr> \\<turnstile> the (f\nl)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l))", "proof (simp, intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        l \\<in> do U\\<rbrakk>\n       \\<Longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                  (the U^l)\\<rparr> \\<turnstile> the\n            (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        l \\<in> do U\\<rbrakk>\n       \\<Longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                  (the U^l)\\<rparr> \\<turnstile> the\n            (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)", "assume \"l \\<in> do U\""], ["proof (state)\nthis:\n  l \\<in> do U\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        l \\<in> do U\\<rbrakk>\n       \\<Longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                  (the U^l)\\<rparr> \\<turnstile> the\n            (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)", "from \\<open>finite F\\<close> finite_FV[of \"Obj f U\"]"], ["proof (chain)\npicking this:\n  finite F\n  finite (FV (Obj f U))", "have \"finite (F \\<union> FV (Obj f U) \\<union> {s,p})\""], ["proof (prove)\nusing this:\n  finite F\n  finite (FV (Obj f U))\n\ngoal (1 subgoal):\n 1. finite (F \\<union> FV (Obj f U) \\<union> {s, p})", "by simp"], ["proof (state)\nthis:\n  finite (F \\<union> FV (Obj f U) \\<union> {s, p})\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        l \\<in> do U\\<rbrakk>\n       \\<Longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                  (the U^l)\\<rparr> \\<turnstile> the\n            (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)", "from exFresh_s_p_cof[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>sa pa.\n     sa \\<notin> F \\<union> FV (Obj f U) \\<union> {s, p} \\<and>\n     pa \\<notin> F \\<union> FV (Obj f U) \\<union> {s, p} \\<and>\n     sa \\<noteq> pa", "obtain sa pa where \n      \"sa \\<noteq> pa\" and\n      nin_sa: \"sa \\<notin> F \\<union> FV (Obj f U)\" and\n      nin_pa: \"pa \\<notin> F \\<union> FV (Obj f U)\""], ["proof (prove)\nusing this:\n  \\<exists>sa pa.\n     sa \\<notin> F \\<union> FV (Obj f U) \\<union> {s, p} \\<and>\n     pa \\<notin> F \\<union> FV (Obj f U) \\<union> {s, p} \\<and>\n     sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. (\\<And>sa pa.\n        \\<lbrakk>sa \\<noteq> pa; sa \\<notin> F \\<union> FV (Obj f U);\n         pa \\<notin> F \\<union> FV (Obj f U)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sa \\<noteq> pa\n  sa \\<notin> F \\<union> FV (Obj f U)\n  pa \\<notin> F \\<union> FV (Obj f U)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        l \\<in> do U\\<rbrakk>\n       \\<Longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                  (the U^l)\\<rparr> \\<turnstile> the\n            (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)", "with \\<open>l \\<in> do U\\<close> T_Obj(4)"], ["proof (chain)\npicking this:\n  l \\<in> do U\n  \\<forall>l\\<in>do U.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n (the U^l)\\<rparr> \\<turnstile> the (f\nl)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)\n  sa \\<noteq> pa\n  sa \\<notin> F \\<union> FV (Obj f U)\n  pa \\<notin> F \\<union> FV (Obj f U)", "have \n      \"e\\<lparr>sa:U\\<rparr>\\<lparr>pa:param(the(U^l))\\<rparr> \n       \\<turnstile> (the(f l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(U^l))\""], ["proof (prove)\nusing this:\n  l \\<in> do U\n  \\<forall>l\\<in>do U.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n (the U^l)\\<rparr> \\<turnstile> the (f\nl)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)\n  sa \\<noteq> pa\n  sa \\<notin> F \\<union> FV (Obj f U)\n  pa \\<notin> F \\<union> FV (Obj f U)\n\ngoal (1 subgoal):\n 1. e\\<lparr>sa:U\\<rparr>\\<lparr>pa:param\n                                     (the\n U^l)\\<rparr> \\<turnstile> the (f l)\\<^bsup>[Fvar\n        sa,Fvar pa]\\<^esup> : return (the U^l)", "by simp"], ["proof (state)\nthis:\n  e\\<lparr>sa:U\\<rparr>\\<lparr>pa:param\n                                   (the U^l)\\<rparr> \\<turnstile> the\n                             (f l)\\<^bsup>[Fvar\n      sa,Fvar pa]\\<^esup> : return (the U^l)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        l \\<in> do U\\<rbrakk>\n       \\<Longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                  (the U^l)\\<rparr> \\<turnstile> the\n            (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)", "moreover"], ["proof (state)\nthis:\n  e\\<lparr>sa:U\\<rparr>\\<lparr>pa:param\n                                   (the U^l)\\<rparr> \\<turnstile> the\n                             (f l)\\<^bsup>[Fvar\n      sa,Fvar pa]\\<^esup> : return (the U^l)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        l \\<in> do U\\<rbrakk>\n       \\<Longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                  (the U^l)\\<rparr> \\<turnstile> the\n            (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)", "from \\<open>l \\<in> do U\\<close> \\<open>dom f = do U\\<close>"], ["proof (chain)\npicking this:\n  l \\<in> do U\n  dom f = do U", "have \"l \\<in> dom f\""], ["proof (prove)\nusing this:\n  l \\<in> do U\n  dom f = do U\n\ngoal (1 subgoal):\n 1. l \\<in> dom f", "by simp"], ["proof (state)\nthis:\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        l \\<in> do U\\<rbrakk>\n       \\<Longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                  (the U^l)\\<rparr> \\<turnstile> the\n            (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)", "with nin_s nin_p nin_sa nin_pa FV_option_lem[of f]"], ["proof (chain)\npicking this:\n  s \\<notin> FV (Obj f U) \\<union> env_dom e\n  p \\<notin> FV (Obj f U) \\<union> env_dom e\n  sa \\<notin> F \\<union> FV (Obj f U)\n  pa \\<notin> F \\<union> FV (Obj f U)\n  \\<forall>l\\<in>dom f. FV (the (f l)) = FVoption (f l)\n  l \\<in> dom f", "have \n      \"sa \\<notin> FV (the(f l)) \\<and> pa \\<notin> FV (the(f l)) \n       \\<and> s \\<notin> FV (the(f l)) \\<and> p \\<notin> FV (the(f l))\n       \\<and> s \\<notin> env_dom e \\<and> p \\<notin> env_dom e\""], ["proof (prove)\nusing this:\n  s \\<notin> FV (Obj f U) \\<union> env_dom e\n  p \\<notin> FV (Obj f U) \\<union> env_dom e\n  sa \\<notin> F \\<union> FV (Obj f U)\n  pa \\<notin> F \\<union> FV (Obj f U)\n  \\<forall>l\\<in>dom f. FV (the (f l)) = FVoption (f l)\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. sa \\<notin> FV (the (f l)) \\<and>\n    pa \\<notin> FV (the (f l)) \\<and>\n    s \\<notin> FV (the (f l)) \\<and>\n    p \\<notin> FV (the (f l)) \\<and>\n    s \\<notin> env_dom e \\<and> p \\<notin> env_dom e", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> FV (the (f l)) \\<and>\n  pa \\<notin> FV (the (f l)) \\<and>\n  s \\<notin> FV (the (f l)) \\<and>\n  p \\<notin> FV (the (f l)) \\<and>\n  s \\<notin> env_dom e \\<and> p \\<notin> env_dom e\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       \\<lbrakk>ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        ok e; dom f = do U; finite F;\n        \\<forall>l\\<in>do U.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n       (the U^l)\\<rparr> \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l);\n        l \\<in> do U\\<rbrakk>\n       \\<Longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                  (the U^l)\\<rparr> \\<turnstile> the\n            (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)", "ultimately"], ["proof (chain)\npicking this:\n  e\\<lparr>sa:U\\<rparr>\\<lparr>pa:param\n                                   (the U^l)\\<rparr> \\<turnstile> the\n                             (f l)\\<^bsup>[Fvar\n      sa,Fvar pa]\\<^esup> : return (the U^l)\n  sa \\<notin> FV (the (f l)) \\<and>\n  pa \\<notin> FV (the (f l)) \\<and>\n  s \\<notin> FV (the (f l)) \\<and>\n  p \\<notin> FV (the (f l)) \\<and>\n  s \\<notin> env_dom e \\<and> p \\<notin> env_dom e", "show \n      \"e\\<lparr>s:U\\<rparr>\\<lparr>p:param(the(U^l))\\<rparr> \n       \\<turnstile> (the(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(U^l))\""], ["proof (prove)\nusing this:\n  e\\<lparr>sa:U\\<rparr>\\<lparr>pa:param\n                                   (the U^l)\\<rparr> \\<turnstile> the\n                             (f l)\\<^bsup>[Fvar\n      sa,Fvar pa]\\<^esup> : return (the U^l)\n  sa \\<notin> FV (the (f l)) \\<and>\n  pa \\<notin> FV (the (f l)) \\<and>\n  s \\<notin> FV (the (f l)) \\<and>\n  p \\<notin> FV (the (f l)) \\<and>\n  s \\<notin> env_dom e \\<and> p \\<notin> env_dom e\n\ngoal (1 subgoal):\n 1. e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                                   (the U^l)\\<rparr> \\<turnstile> the\n                             (f l)\\<^bsup>[Fvar\n      s,Fvar p]\\<^esup> : return (the U^l)", "using type_renaming[OF _ _ _ _ _ _ _ \\<open>s \\<noteq> p\\<close> \\<open>sa \\<noteq> pa\\<close>]"], ["proof (prove)\nusing this:\n  e\\<lparr>sa:U\\<rparr>\\<lparr>pa:param\n                                   (the U^l)\\<rparr> \\<turnstile> the\n                             (f l)\\<^bsup>[Fvar\n      sa,Fvar pa]\\<^esup> : return (the U^l)\n  sa \\<notin> FV (the (f l)) \\<and>\n  pa \\<notin> FV (the (f l)) \\<and>\n  s \\<notin> FV (the (f l)) \\<and>\n  p \\<notin> FV (the (f l)) \\<and>\n  s \\<notin> env_dom e \\<and> p \\<notin> env_dom e\n  \\<lbrakk>?e\\<lparr>sa:?A\\<rparr>\\<lparr>pa:?B\\<rparr> \\<turnstile> {?n \\<rightarrow> [Fvar\n             sa,Fvar pa]} ?t : ?T;\n   sa \\<notin> FV ?t; pa \\<notin> FV ?t; s \\<notin> FV ?t; p \\<notin> FV ?t;\n   s \\<notin> env_dom ?e; p \\<notin> env_dom ?e\\<rbrakk>\n  \\<Longrightarrow> ?e\\<lparr>s:?A\\<rparr>\\<lparr>p:?B\\<rparr> \\<turnstile> {?n \\<rightarrow> [Fvar\n                    s,Fvar p]} ?t : ?T\n\ngoal (1 subgoal):\n 1. e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                                   (the U^l)\\<rparr> \\<turnstile> the\n                             (f l)\\<^bsup>[Fvar\n      s,Fvar p]\\<^esup> : return (the U^l)", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                                 (the U^l)\\<rparr> \\<turnstile> the\n                           (f l)\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup> : return (the U^l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dom f = do U \\<and>\n  (\\<forall>l\\<in>do U.\n      e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                                     (the\n U^l)\\<rparr> \\<turnstile> the (f l)\\<^bsup>[Fvar\n        s,Fvar p]\\<^esup> : return (the U^l))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_lem: \"e \\<turnstile> Obj f (Object fun) : Object fun \\<Longrightarrow> dom f = dom fun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> Obj f (Object fun) : Object fun \\<Longrightarrow>\n    dom f = dom fun", "by (erule typing.cases, auto)"], ["", "lemma abs_typeE: \n  assumes \"e \\<turnstile> Call (Obj f U) l b : T\"\n  shows \n  \"(\\<exists>F. finite F \n      \\<and> (\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \n          \\<longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p: param(the(U^l))\\<rparr> \\<turnstile> (the(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : T) \\<Longrightarrow> P) \n  \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>F.\n        finite F \\<and>\n        (\\<forall>s p.\n            s \\<notin> F \\<and>\n            p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n            e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n     (the U^l)\\<rparr> \\<turnstile> the (f\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T) \\<Longrightarrow>\n     P) \\<Longrightarrow>\n    P", "using assms"], ["proof (prove)\nusing this:\n  e \\<turnstile> Call (Obj f U) l b : T\n\ngoal (1 subgoal):\n 1. (\\<exists>F.\n        finite F \\<and>\n        (\\<forall>s p.\n            s \\<notin> F \\<and>\n            p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n            e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n     (the U^l)\\<rparr> \\<turnstile> the (f\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T) \\<Longrightarrow>\n     P) \\<Longrightarrow>\n    P", "proof (cases rule: typing.cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>F.\n                   finite F \\<and>\n                   (\\<forall>s p.\n                       s \\<notin> F \\<and>\n                       p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n                       e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                (the U^l)\\<rparr> \\<turnstile> the\n          (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T) \\<Longrightarrow>\n                P;\n        T = return (the A^l); e \\<turnstile> Obj f U : A;\n        e \\<turnstile> b : param (the A^l); l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> P", "case (T_Call A (*env t1 t2=b*))"], ["proof (state)\nthis:\n  T = return (the A^l)\n  e \\<turnstile> Obj f U : A\n  e \\<turnstile> b : param (the A^l)\n  l \\<in> do A\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>F.\n                   finite F \\<and>\n                   (\\<forall>s p.\n                       s \\<notin> F \\<and>\n                       p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n                       e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                (the U^l)\\<rparr> \\<turnstile> the\n          (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T) \\<Longrightarrow>\n                P;\n        T = return (the A^l); e \\<turnstile> Obj f U : A;\n        e \\<turnstile> b : param (the A^l); l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> P", "assume \n    cof: \"\\<exists>F. finite F \n            \\<and> (\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \n                \\<longrightarrow> e\\<lparr>s:U\\<rparr>\\<lparr>p: param(the(U^l))\\<rparr> \\<turnstile> (the(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : T) \n          \\<Longrightarrow> P\""], ["proof (state)\nthis:\n  \\<exists>F.\n     finite F \\<and>\n     (\\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n  (the U^l)\\<rparr> \\<turnstile> the (f\n l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T) \\<Longrightarrow>\n  P\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>F.\n                   finite F \\<and>\n                   (\\<forall>s p.\n                       s \\<notin> F \\<and>\n                       p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n                       e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                (the U^l)\\<rparr> \\<turnstile> the\n          (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T) \\<Longrightarrow>\n                P;\n        T = return (the A^l); e \\<turnstile> Obj f U : A;\n        e \\<turnstile> b : param (the A^l); l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> P", "from \n    \\<open>T = return(the(A^l))\\<close>\n    \\<open>e \\<turnstile> Obj f U : A\\<close> \\<open>l \\<in> do A\\<close> obj_inv[of e f U A]"], ["proof (chain)\npicking this:\n  T = return (the A^l)\n  e \\<turnstile> Obj f U : A\n  l \\<in> do A\n  e \\<turnstile> Obj f U : A \\<Longrightarrow> A = U", "obtain \"e \\<turnstile> (Obj f U) : U\" and \"T = return(the(U^l))\" and \"l \\<in> do U\""], ["proof (prove)\nusing this:\n  T = return (the A^l)\n  e \\<turnstile> Obj f U : A\n  l \\<in> do A\n  e \\<turnstile> Obj f U : A \\<Longrightarrow> A = U\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>e \\<turnstile> Obj f U : U; T = return (the U^l);\n      l \\<in> do U\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by simp"], ["proof (state)\nthis:\n  e \\<turnstile> Obj f U : U\n  T = return (the U^l)\n  l \\<in> do U\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<exists>F.\n                   finite F \\<and>\n                   (\\<forall>s p.\n                       s \\<notin> F \\<and>\n                       p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n                       e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n                (the U^l)\\<rparr> \\<turnstile> the\n          (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T) \\<Longrightarrow>\n                P;\n        T = return (the A^l); e \\<turnstile> Obj f U : A;\n        e \\<turnstile> b : param (the A^l); l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> P", "from obj_inv_elim[OF this(1)] this(2-3) cof"], ["proof (chain)\npicking this:\n  dom f = do U \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do U.\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n      (the U^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)))\n  T = return (the U^l)\n  l \\<in> do U\n  \\<exists>F.\n     finite F \\<and>\n     (\\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n  (the U^l)\\<rparr> \\<turnstile> the (f\n l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T) \\<Longrightarrow>\n  P", "show ?thesis"], ["proof (prove)\nusing this:\n  dom f = do U \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do U.\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n      (the U^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the U^l)))\n  T = return (the U^l)\n  l \\<in> do U\n  \\<exists>F.\n     finite F \\<and>\n     (\\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         e\\<lparr>s:U\\<rparr>\\<lparr>p:param\n  (the U^l)\\<rparr> \\<turnstile> the (f\n l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T) \\<Longrightarrow>\n  P\n\ngoal (1 subgoal):\n 1. P", "by blast"], ["proof (state)\nthis:\n  P\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Substitution preserves Well-Typedness\\<close>"], ["", "lemma bigger_env_lemma[rule_format]: \n  assumes \"e \\<turnstile> t : T\"\n  shows \"\\<forall>x X. x \\<notin> env_dom e \\<longrightarrow> e\\<lparr>x:X\\<rparr> \\<turnstile> t: T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom e \\<longrightarrow>\n       e\\<lparr>x:X\\<rparr> \\<turnstile> t : T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom e \\<longrightarrow>\n       e\\<lparr>x:X\\<rparr> \\<turnstile> t : T", "define pred_cof\n    where \"pred_cof L env t T l \\<longleftrightarrow>\n      (\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n        \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the(T^l))\\<rparr> \\<turnstile> (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return (the(T^l)))\"\n    for L env t T l"], ["proof (state)\nthis:\n  pred_cof ?L ?env ?t ?T ?l =\n  (\\<forall>s p.\n      s \\<notin> ?L \\<and>\n      p \\<notin> ?L \\<and> s \\<noteq> p \\<longrightarrow>\n      ?env\\<lparr>s:?T\\<rparr>\\<lparr>p:param\n   (the ?T^?l)\\<rparr> \\<turnstile> ?t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the ?T^?l))\n\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom e \\<longrightarrow>\n       e\\<lparr>x:X\\<rparr> \\<turnstile> t : T", "from assms"], ["proof (chain)\npicking this:\n  e \\<turnstile> t : T", "show ?thesis"], ["proof (prove)\nusing this:\n  e \\<turnstile> t : T\n\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom e \\<longrightarrow>\n       e\\<lparr>x:X\\<rparr> \\<turnstile> t : T", "proof (induct\n      taking: \"\\<lambda>env t T l. \\<forall>x X. x \\<notin> env_dom env \n                            \\<longrightarrow> (\\<exists>L. finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)\"\n      rule: typing_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>env T x.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>xa X.\n                            xa \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>xa:X\\<rparr> \\<turnstile> Fvar x : T\n 2. \\<And>env T t l p.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        env \\<turnstile> p : param (the T^l);\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> p : param (the T^l);\n        l \\<in> do T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Call t l\n                           p : return (the T^l)\n 3. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 4. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 5. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "case Call"], ["proof (state)\nthis:\n  env_ \\<turnstile> t_ : T_\n  \\<forall>x X.\n     x \\<notin> env_dom env_ \\<longrightarrow>\n     env_\\<lparr>x:X\\<rparr> \\<turnstile> t_ : T_\n  env_ \\<turnstile> p_ : param (the T_^l_)\n  \\<forall>x X.\n     x \\<notin> env_dom env_ \\<longrightarrow>\n     env_\\<lparr>x:X\\<rparr> \\<turnstile> p_ : param (the T_^l_)\n  l_ \\<in> do T_\n\ngoal (5 subgoals):\n 1. \\<And>env T x.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>xa X.\n                            xa \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>xa:X\\<rparr> \\<turnstile> Fvar x : T\n 2. \\<And>env T t l p.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        env \\<turnstile> p : param (the T^l);\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> p : param (the T^l);\n        l \\<in> do T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Call t l\n                           p : return (the T^l)\n 3. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 4. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 5. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "thus ?case"], ["proof (prove)\nusing this:\n  env_ \\<turnstile> t_ : T_\n  \\<forall>x X.\n     x \\<notin> env_dom env_ \\<longrightarrow>\n     env_\\<lparr>x:X\\<rparr> \\<turnstile> t_ : T_\n  env_ \\<turnstile> p_ : param (the T_^l_)\n  \\<forall>x X.\n     x \\<notin> env_dom env_ \\<longrightarrow>\n     env_\\<lparr>x:X\\<rparr> \\<turnstile> p_ : param (the T_^l_)\n  l_ \\<in> do T_\n\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom env_ \\<longrightarrow>\n       env_\\<lparr>x:X\\<rparr> \\<turnstile> Call t_ l_\n       p_ : return (the T_^l_)", "by auto"], ["proof (state)\nthis:\n  \\<forall>x X.\n     x \\<notin> env_dom env_ \\<longrightarrow>\n     env_\\<lparr>x:X\\<rparr> \\<turnstile> Call t_ l_ p_ : return (the T_^l_)\n\ngoal (4 subgoals):\n 1. \\<And>env T x.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>xa X.\n                            xa \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>xa:X\\<rparr> \\<turnstile> Fvar x : T\n 2. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 3. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 4. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>env T x.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>xa X.\n                            xa \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>xa:X\\<rparr> \\<turnstile> Fvar x : T\n 2. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 3. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 4. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "case (Fvar env Ta xa)"], ["proof (state)\nthis:\n  ok env\n  xa \\<in> env_dom env\n  the env!xa = Ta\n\ngoal (4 subgoals):\n 1. \\<And>env T x.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>xa X.\n                            xa \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>xa:X\\<rparr> \\<turnstile> Fvar x : T\n 2. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 3. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 4. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "thus ?case"], ["proof (prove)\nusing this:\n  ok env\n  xa \\<in> env_dom env\n  the env!xa = Ta\n\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom env \\<longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Fvar xa : Ta", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X.\n       \\<lbrakk>ok env; xa \\<in> env_dom env; the env!xa = Ta;\n        x \\<notin> env_dom env\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>x:X\\<rparr> \\<turnstile> Fvar xa : Ta", "fix x X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X.\n       \\<lbrakk>ok env; xa \\<in> env_dom env; the env!xa = Ta;\n        x \\<notin> env_dom env\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>x:X\\<rparr> \\<turnstile> Fvar xa : Ta", "assume \"x \\<notin> env_dom env\""], ["proof (state)\nthis:\n  x \\<notin> env_dom env\n\ngoal (1 subgoal):\n 1. \\<And>x X.\n       \\<lbrakk>ok env; xa \\<in> env_dom env; the env!xa = Ta;\n        x \\<notin> env_dom env\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>x:X\\<rparr> \\<turnstile> Fvar xa : Ta", "from \n        get_env_smaller[OF \\<open>xa \\<in> env_dom env\\<close> this]\n        T_Var[OF ok_add_ok[OF \\<open>ok env\\<close> this]\n        env_bigger[OF this \\<open>xa \\<in> env_dom env\\<close>]]\n        \\<open>the env!xa = Ta\\<close>"], ["proof (chain)\npicking this:\n  env\\<lparr>x:?X\\<rparr>!xa = env!xa\n  the env\\<lparr>x:?X1\\<rparr>!xa = ?T \\<Longrightarrow>\n  env\\<lparr>x:?X1\\<rparr> \\<turnstile> Fvar xa : ?T\n  the env!xa = Ta", "show \"env\\<lparr>x:X\\<rparr> \\<turnstile> Fvar xa : Ta\""], ["proof (prove)\nusing this:\n  env\\<lparr>x:?X\\<rparr>!xa = env!xa\n  the env\\<lparr>x:?X1\\<rparr>!xa = ?T \\<Longrightarrow>\n  env\\<lparr>x:?X1\\<rparr> \\<turnstile> Fvar xa : ?T\n  the env!xa = Ta\n\ngoal (1 subgoal):\n 1. env\\<lparr>x:X\\<rparr> \\<turnstile> Fvar xa : Ta", "by simp"], ["proof (state)\nthis:\n  env\\<lparr>x:X\\<rparr> \\<turnstile> Fvar xa : Ta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     env\\<lparr>x:X\\<rparr> \\<turnstile> Fvar xa : Ta\n\ngoal (3 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 3. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 3. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "case (Obj env Ta f)"], ["proof (state)\nthis:\n  ok env\n  dom f = do Ta\n  \\<forall>l\\<in>dom f.\n     \\<forall>x X.\n        x \\<notin> env_dom env \\<longrightarrow>\n        (\\<exists>L.\n            finite L \\<and>\n            pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) Ta l)\n\ngoal (3 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 3. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "note pred_o = this(3)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<forall>x X.\n        x \\<notin> env_dom env \\<longrightarrow>\n        (\\<exists>L.\n            finite L \\<and>\n            pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) Ta l)\n\ngoal (3 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 3. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "define pred_cof'\n      where \"pred_cof' x X b l \\<longleftrightarrow> (\\<exists>L. finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) (the b) Ta l)\" for x X b l"], ["proof (state)\nthis:\n  pred_cof' ?x ?X ?b ?l =\n  (\\<exists>L.\n      finite L \\<and> pred_cof L (env\\<lparr>?x:?X\\<rparr>) (the ?b) Ta ?l)\n\ngoal (3 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 3. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "from pred_o"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>x X.\n        x \\<notin> env_dom env \\<longrightarrow>\n        (\\<exists>L.\n            finite L \\<and>\n            pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) Ta l)", "have pred: \"\\<forall>x X. x \\<notin> env_dom env \\<longrightarrow> (\\<forall>l\\<in>dom f. pred_cof' x X (f l) l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>x X.\n        x \\<notin> env_dom env \\<longrightarrow>\n        (\\<exists>L.\n            finite L \\<and>\n            pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) Ta l)\n\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom env \\<longrightarrow>\n       (\\<forall>l\\<in>dom f. pred_cof' x X (f l) l)", "by (intro fmap_ball_all2'[of f \"\\<lambda>x X. x \\<notin> env_dom env\" pred_cof'],\n        unfold pred_cof_def pred_cof'_def, simp)"], ["proof (state)\nthis:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     (\\<forall>l\\<in>dom f. pred_cof' x X (f l) l)\n\ngoal (3 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T f.\n       \\<lbrakk>ok env; dom f = do T;\n        \\<forall>l\\<in>dom f.\n           \\<forall>x X.\n              x \\<notin> env_dom env \\<longrightarrow>\n              (\\<exists>L.\n                  finite L \\<and>\n                  pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) T\n                   l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f T : T\n 3. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom env \\<longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta", "fix x X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta", "define pred_bnd\n        where \"pred_bnd s p b l \\<longleftrightarrow>\n          env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param (the(Ta^l))\\<rparr> \\<turnstile> (the b\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return (the(Ta^l))\"\n        for s p b l"], ["proof (state)\nthis:\n  pred_bnd ?s ?p ?b ?l =\n  env\\<lparr>x:X\\<rparr>\\<lparr>?s:Ta\\<rparr>\\<lparr>?p:param\n                   (the Ta^?l)\\<rparr> \\<turnstile> the\n               ?b\\<^bsup>[Fvar ?s,Fvar ?p]\\<^esup> : return (the Ta^?l)\n\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta", "assume \"x \\<notin> env_dom env\""], ["proof (state)\nthis:\n  x \\<notin> env_dom env\n\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta", "with pred fmap_ex_cof[of f pred_bnd] \\<open>dom f = do Ta\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     (\\<forall>l\\<in>dom f. pred_cof' x X (f l) l)\n  \\<forall>l\\<in>dom f.\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            pred_bnd s p (f l) l) \\<Longrightarrow>\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom f.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            pred_bnd s p (f l) l)\n  dom f = do Ta\n  x \\<notin> env_dom env", "obtain L where\n        \"finite L\" and \"\\<forall>l\\<in>do Ta. pred_cof L (env\\<lparr>x:X\\<rparr>) (the(f l)) Ta l\""], ["proof (prove)\nusing this:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     (\\<forall>l\\<in>dom f. pred_cof' x X (f l) l)\n  \\<forall>l\\<in>dom f.\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            pred_bnd s p (f l) l) \\<Longrightarrow>\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom f.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            pred_bnd s p (f l) l)\n  dom f = do Ta\n  x \\<notin> env_dom env\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         \\<forall>l\\<in>do Ta.\n            pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) Ta l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding pred_bnd_def pred_cof_def pred_cof'_def"], ["proof (prove)\nusing this:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     (\\<forall>l\\<in>dom f.\n         \\<exists>L.\n            finite L \\<and>\n            (\\<forall>s p.\n                s \\<notin> L \\<and>\n                p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n                env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                               (the Ta^l)\\<rparr> \\<turnstile> the\n                          (f l)\\<^bsup>[Fvar\n   s,Fvar p]\\<^esup> : return (the Ta^l)))\n  \\<forall>l\\<in>dom f.\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                           (the Ta^l)\\<rparr> \\<turnstile> the\n                      (f l)\\<^bsup>[Fvar\n                                     s,Fvar\n  p]\\<^esup> : return (the Ta^l)) \\<Longrightarrow>\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom f.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                           (the Ta^l)\\<rparr> \\<turnstile> the\n                      (f l)\\<^bsup>[Fvar\n                                     s,Fvar p]\\<^esup> : return (the Ta^l))\n  dom f = do Ta\n  x \\<notin> env_dom env\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         \\<forall>l\\<in>do Ta.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                              (the Ta^l)\\<rparr> \\<turnstile> the\n                         (f l)\\<^bsup>[Fvar\n  s,Fvar p]\\<^esup> : return (the Ta^l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L\n  \\<forall>l\\<in>do Ta. pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) Ta l\n\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta", "from \n        T_Obj[OF ok_add_ok[OF \\<open>ok env\\<close> \\<open>x \\<notin> env_dom env\\<close>] \n                 \\<open>dom f = do Ta\\<close> this(1)]\n        this(2)"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>do Ta.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>x:?X1\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                         (the Ta^l)\\<rparr> \\<turnstile> the\n                    (f l)\\<^bsup>[Fvar\n                                   s,Fvar\np]\\<^esup> : return (the Ta^l) \\<Longrightarrow>\n  env\\<lparr>x:?X1\\<rparr> \\<turnstile> Obj f Ta : Ta\n  \\<forall>l\\<in>do Ta. pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) Ta l", "show \"env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>do Ta.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>x:?X1\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                         (the Ta^l)\\<rparr> \\<turnstile> the\n                    (f l)\\<^bsup>[Fvar\n                                   s,Fvar\np]\\<^esup> : return (the Ta^l) \\<Longrightarrow>\n  env\\<lparr>x:?X1\\<rparr> \\<turnstile> Obj f Ta : Ta\n  \\<forall>l\\<in>do Ta. pred_cof L (env\\<lparr>x:X\\<rparr>) (the (f l)) Ta l\n\ngoal (1 subgoal):\n 1. env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta", "unfolding pred_cof_def"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>do Ta.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>x:?X1\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                         (the Ta^l)\\<rparr> \\<turnstile> the\n                    (f l)\\<^bsup>[Fvar\n                                   s,Fvar\np]\\<^esup> : return (the Ta^l) \\<Longrightarrow>\n  env\\<lparr>x:?X1\\<rparr> \\<turnstile> Obj f Ta : Ta\n  \\<forall>l\\<in>do Ta.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                       (the Ta^l)\\<rparr> \\<turnstile> the\n                  (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Ta^l)\n\ngoal (1 subgoal):\n 1. env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta", "by simp"], ["proof (state)\nthis:\n  env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     env\\<lparr>x:X\\<rparr> \\<turnstile> Obj f Ta : Ta\n\ngoal (2 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "case (Upd env Ta t l u)"], ["proof (state)\nthis:\n  env \\<turnstile> t : Ta\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     env\\<lparr>x:X\\<rparr> \\<turnstile> t : Ta\n  l \\<in> do Ta\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) u Ta l)\n\ngoal (2 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "note pred_t = this(2) and pred_u = this(4)"], ["proof (state)\nthis:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     env\\<lparr>x:X\\<rparr> \\<turnstile> t : Ta\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) u Ta l)\n\ngoal (2 subgoals):\n 1. \\<And>env T t l u.\n       \\<lbrakk>env \\<turnstile> t : T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           env\\<lparr>x:X\\<rparr> \\<turnstile> t : T;\n        l \\<in> do T;\n        \\<forall>x X.\n           x \\<notin> env_dom env \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L (env\\<lparr>x:X\\<rparr>) u T l)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l\n                           u : T\n 2. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom env \\<longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta", "fix x X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta", "assume \"x \\<notin> env_dom env\""], ["proof (state)\nthis:\n  x \\<notin> env_dom env\n\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta", "with pred_u"], ["proof (chain)\npicking this:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) u Ta l)\n  x \\<notin> env_dom env", "obtain L where\n        \"finite L\" and \"pred_cof L (env\\<lparr>x:X\\<rparr>) u Ta l\""], ["proof (prove)\nusing this:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) u Ta l)\n  x \\<notin> env_dom env\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         pred_cof L (env\\<lparr>x:X\\<rparr>) u Ta l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L\n  pred_cof L (env\\<lparr>x:X\\<rparr>) u Ta l\n\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta", "with \\<open>l \\<in> do Ta\\<close> \\<open>x \\<notin> env_dom env\\<close> pred_t"], ["proof (chain)\npicking this:\n  l \\<in> do Ta\n  x \\<notin> env_dom env\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     env\\<lparr>x:X\\<rparr> \\<turnstile> t : Ta\n  finite L\n  pred_cof L (env\\<lparr>x:X\\<rparr>) u Ta l", "show \"env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta\""], ["proof (prove)\nusing this:\n  l \\<in> do Ta\n  x \\<notin> env_dom env\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     env\\<lparr>x:X\\<rparr> \\<turnstile> t : Ta\n  finite L\n  pred_cof L (env\\<lparr>x:X\\<rparr>) u Ta l\n\ngoal (1 subgoal):\n 1. env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta", "unfolding pred_cof_def"], ["proof (prove)\nusing this:\n  l \\<in> do Ta\n  x \\<notin> env_dom env\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     env\\<lparr>x:X\\<rparr> \\<turnstile> t : Ta\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                    (the Ta^l)\\<rparr> \\<turnstile> u\\<^bsup>[Fvar\n                         s,Fvar p]\\<^esup> : return (the Ta^l)\n\ngoal (1 subgoal):\n 1. env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta", "by auto"], ["proof (state)\nthis:\n  env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     env\\<lparr>x:X\\<rparr> \\<turnstile> Upd t l u : Ta\n\ngoal (1 subgoal):\n 1. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "case (Bnd env Ta l t L)"], ["proof (state)\nthis:\n  ok env\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n      s,Fvar p]\\<^esup> : return (the Ta^l) \\<and>\n     (\\<forall>x X.\n         x \\<notin> env_dom\n                     (env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                  (the Ta^l)\\<rparr>) \\<longrightarrow>\n         env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n     (the Ta^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                             s,Fvar p]\\<^esup> : return (the Ta^l))\n\ngoal (1 subgoal):\n 1. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "note pred = this(3)"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n      s,Fvar p]\\<^esup> : return (the Ta^l) \\<and>\n     (\\<forall>x X.\n         x \\<notin> env_dom\n                     (env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                  (the Ta^l)\\<rparr>) \\<longrightarrow>\n         env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n     (the Ta^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                             s,Fvar p]\\<^esup> : return (the Ta^l))\n\ngoal (1 subgoal):\n 1. \\<And>env T l t L.\n       \\<lbrakk>ok env; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n           (\\<forall>x X.\n               x \\<notin> env_dom\n                           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                       (the T^l)\\<rparr>) \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                                 s,Fvar\n                                    p]\\<^esup> : return (the T^l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x X.\n                            x \\<notin> env_dom env \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L (env\\<lparr>x:X\\<rparr>) t T l)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x X.\n       x \\<notin> env_dom env \\<longrightarrow>\n       (\\<exists>L.\n           finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) t Ta l)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       \\<exists>L.\n          finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) t Ta l", "fix x X"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       \\<exists>L.\n          finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) t Ta l", "assume \"x \\<notin> env_dom env\""], ["proof (state)\nthis:\n  x \\<notin> env_dom env\n\ngoal (1 subgoal):\n 1. \\<And>x X.\n       x \\<notin> env_dom env \\<Longrightarrow>\n       \\<exists>L.\n          finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) t Ta l", "thus \"\\<exists>L. finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) t Ta l\""], ["proof (prove)\nusing this:\n  x \\<notin> env_dom env\n\ngoal (1 subgoal):\n 1. \\<exists>L. finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) t Ta l", "proof (rule_tac x = \"L \\<union> {x}\" in exI, simp add: \\<open>finite L\\<close>, \n          unfold pred_cof_def, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>x \\<notin> env_dom env; s \\<noteq> x; s \\<notin> L;\n        p \\<noteq> x; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n  (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n       s,Fvar p]\\<^esup> : return (the Ta^l)", "fix s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>x \\<notin> env_dom env; s \\<noteq> x; s \\<notin> L;\n        p \\<noteq> x; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n  (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n       s,Fvar p]\\<^esup> : return (the Ta^l)", "assume \n          \"s \\<notin> L\" and \"p \\<notin> L\" and \"s \\<noteq> p\" and\n          \"s \\<noteq> x\" and \"p \\<noteq> x\""], ["proof (state)\nthis:\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n  s \\<noteq> x\n  p \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>x \\<notin> env_dom env; s \\<noteq> x; s \\<notin> L;\n        p \\<noteq> x; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n  (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n       s,Fvar p]\\<^esup> : return (the Ta^l)", "note \n          subst_add[OF not_sym[OF \\<open>s \\<noteq> x\\<close>]]\n          subst_add[OF not_sym[OF \\<open>p \\<noteq> x\\<close>]]"], ["proof (state)\nthis:\n  ?e\\<lparr>x:?a\\<rparr>\\<lparr>s:?b\\<rparr> =\n  ?e\\<lparr>s:?b\\<rparr>\\<lparr>x:?a\\<rparr>\n  ?e\\<lparr>x:?a\\<rparr>\\<lparr>p:?b\\<rparr> =\n  ?e\\<lparr>p:?b\\<rparr>\\<lparr>x:?a\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>x \\<notin> env_dom env; s \\<noteq> x; s \\<notin> L;\n        p \\<noteq> x; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n  (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n       s,Fvar p]\\<^esup> : return (the Ta^l)", "from \n          this(1)[of env X Ta] this(2)[of \"env\\<lparr>s:Ta\\<rparr>\" X \"param (the(Ta^l))\"]\n          pred \\<open>s \\<notin> L\\<close> \\<open>p \\<notin> L\\<close> \\<open>s \\<noteq> p\\<close>\n          not_in_env_bigger_2[OF \\<open>x \\<notin> env_dom env\\<close> \n                                 not_sym[OF \\<open>s \\<noteq> x\\<close>] not_sym[OF \\<open>p \\<noteq> x\\<close>]]"], ["proof (chain)\npicking this:\n  env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr> =\n  env\\<lparr>s:Ta\\<rparr>\\<lparr>x:X\\<rparr>\n  env\\<lparr>s:Ta\\<rparr>\\<lparr>x:X\\<rparr>\\<lparr>p:param\n                 (the Ta^l)\\<rparr> =\n  env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                                    (the Ta^l)\\<rparr>\\<lparr>x:X\\<rparr>\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n      s,Fvar p]\\<^esup> : return (the Ta^l) \\<and>\n     (\\<forall>x X.\n         x \\<notin> env_dom\n                     (env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                  (the Ta^l)\\<rparr>) \\<longrightarrow>\n         env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n     (the Ta^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                             s,Fvar p]\\<^esup> : return (the Ta^l))\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n  x \\<notin> env_dom (env\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>)", "show \n          \"env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param (the(Ta^l))\\<rparr> \n          \\<turnstile> (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return (the(Ta^l))\""], ["proof (prove)\nusing this:\n  env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr> =\n  env\\<lparr>s:Ta\\<rparr>\\<lparr>x:X\\<rparr>\n  env\\<lparr>s:Ta\\<rparr>\\<lparr>x:X\\<rparr>\\<lparr>p:param\n                 (the Ta^l)\\<rparr> =\n  env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                                    (the Ta^l)\\<rparr>\\<lparr>x:X\\<rparr>\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n      s,Fvar p]\\<^esup> : return (the Ta^l) \\<and>\n     (\\<forall>x X.\n         x \\<notin> env_dom\n                     (env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                  (the Ta^l)\\<rparr>) \\<longrightarrow>\n         env\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n     (the Ta^l)\\<rparr>\\<lparr>x:X\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                             s,Fvar p]\\<^esup> : return (the Ta^l))\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n  x \\<notin> env_dom (env\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>)\n\ngoal (1 subgoal):\n 1. env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                   (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                        s,Fvar p]\\<^esup> : return (the Ta^l)", "by auto"], ["proof (state)\nthis:\n  env\\<lparr>x:X\\<rparr>\\<lparr>s:Ta\\<rparr>\\<lparr>p:param\n                 (the Ta^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                      s,Fvar p]\\<^esup> : return (the Ta^l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>L. finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) t Ta l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x X.\n     x \\<notin> env_dom env \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and> pred_cof L (env\\<lparr>x:X\\<rparr>) t Ta l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x X.\n     x \\<notin> env_dom e \\<longrightarrow>\n     e\\<lparr>x:X\\<rparr> \\<turnstile> t : T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bnd_disj_env_lem: \n  assumes \n  \"ok e1\" and \"env_dom e1 \\<inter> env_dom e2 = {}\" and \"ok e2\" and\n  \"\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \n    \\<longrightarrow> e1\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>\n        \\<turnstile> (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l)) \n        \\<and> (env_dom (e1\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>) \\<inter> env_dom e2 = {} \n    \\<longrightarrow> ok e2 \n    \\<longrightarrow> e1\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>+e2 \n        \\<turnstile> (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l)))\"\n  shows \n  \"\\<forall>s p. s \\<notin> F \\<union> env_dom (e1+e2) \\<and> p \\<notin> F \\<union> env_dom (e1+e2) \\<and> s \\<noteq> p\n    \\<longrightarrow> (e1+e2)\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \\<turnstile> (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s p.\n       s \\<notin> F \\<union> env_dom e1+e2 \\<and>\n       p \\<notin> F \\<union> env_dom e1+e2 \\<and>\n       s \\<noteq> p \\<longrightarrow>\n       e1+e2\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n         s,Fvar p]\\<^esup> : return (the T^l)", "proof (intro strip, elim conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>s \\<notin> F \\<union> env_dom e1+e2;\n        p \\<notin> F \\<union> env_dom e1+e2; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> e1+e2\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                      (the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                           s,Fvar p]\\<^esup> : return (the T^l)", "fix s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>s \\<notin> F \\<union> env_dom e1+e2;\n        p \\<notin> F \\<union> env_dom e1+e2; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> e1+e2\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                      (the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                           s,Fvar p]\\<^esup> : return (the T^l)", "assume \n    nin_s: \"s \\<notin> F \\<union> env_dom (e1+e2)\" and\n    nin_p: \"p \\<notin> F \\<union> env_dom (e1+e2)\" and \"s \\<noteq> p\""], ["proof (state)\nthis:\n  s \\<notin> F \\<union> env_dom e1+e2\n  p \\<notin> F \\<union> env_dom e1+e2\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>s \\<notin> F \\<union> env_dom e1+e2;\n        p \\<notin> F \\<union> env_dom e1+e2; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> e1+e2\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                      (the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                           s,Fvar p]\\<^esup> : return (the T^l)", "from \n    this(1-2) env_add_dom_2[OF assms(1) _ _ this(3)]\n    assms(2) env_app_dom[OF assms(1-3)]"], ["proof (chain)\npicking this:\n  s \\<notin> F \\<union> env_dom e1+e2\n  p \\<notin> F \\<union> env_dom e1+e2\n  \\<lbrakk>s \\<notin> env_dom e1; p \\<notin> env_dom e1\\<rbrakk>\n  \\<Longrightarrow> env_dom (e1\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>) =\n                    env_dom e1 \\<union> {s, p}\n  env_dom e1 \\<inter> env_dom e2 = {}\n  env_dom e1+e2 = env_dom e1 \\<union> env_dom e2", "have \"env_dom (e1\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>) \\<inter> env_dom e2 = {}\""], ["proof (prove)\nusing this:\n  s \\<notin> F \\<union> env_dom e1+e2\n  p \\<notin> F \\<union> env_dom e1+e2\n  \\<lbrakk>s \\<notin> env_dom e1; p \\<notin> env_dom e1\\<rbrakk>\n  \\<Longrightarrow> env_dom (e1\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>) =\n                    env_dom e1 \\<union> {s, p}\n  env_dom e1 \\<inter> env_dom e2 = {}\n  env_dom e1+e2 = env_dom e1 \\<union> env_dom e2\n\ngoal (1 subgoal):\n 1. env_dom\n     (e1\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr>) \\<inter>\n    env_dom e2 =\n    {}", "by simp"], ["proof (state)\nthis:\n  env_dom (e1\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr>) \\<inter>\n  env_dom e2 =\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>s \\<notin> F \\<union> env_dom e1+e2;\n        p \\<notin> F \\<union> env_dom e1+e2; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> e1+e2\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                      (the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                           s,Fvar p]\\<^esup> : return (the T^l)", "with \n    env_app_add2[OF assms(1-3) _ _ _ _ \\<open>s \\<noteq> p\\<close>]\n    env_app_dom[OF assms(1-3)] \\<open>ok e2\\<close> assms(4) nin_s nin_p \\<open>s \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>s \\<notin> env_dom e1; s \\<notin> env_dom e2;\n   p \\<notin> env_dom e1; p \\<notin> env_dom e2\\<rbrakk>\n  \\<Longrightarrow> e1+e2\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr> =\n                    e1\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>+e2\n  env_dom e1+e2 = env_dom e1 \\<union> env_dom e2\n  ok e2\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     e1\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                                     (the\n T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (env_dom\n       (e1\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr>) \\<inter>\n      env_dom e2 =\n      {} \\<longrightarrow>\n      ok e2 \\<longrightarrow>\n      e1\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr>+e2 \\<turnstile> t2\\<^bsup>[Fvar\n        s,Fvar p]\\<^esup> : return (the T^l))\n  s \\<notin> F \\<union> env_dom e1+e2\n  p \\<notin> F \\<union> env_dom e1+e2\n  s \\<noteq> p\n  env_dom (e1\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr>) \\<inter>\n  env_dom e2 =\n  {}", "show \"(e1+e2)\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \\<turnstile> (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<notin> env_dom e1; s \\<notin> env_dom e2;\n   p \\<notin> env_dom e1; p \\<notin> env_dom e2\\<rbrakk>\n  \\<Longrightarrow> e1+e2\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr> =\n                    e1\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>+e2\n  env_dom e1+e2 = env_dom e1 \\<union> env_dom e2\n  ok e2\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     e1\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                                     (the\n T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (env_dom\n       (e1\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr>) \\<inter>\n      env_dom e2 =\n      {} \\<longrightarrow>\n      ok e2 \\<longrightarrow>\n      e1\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr>+e2 \\<turnstile> t2\\<^bsup>[Fvar\n        s,Fvar p]\\<^esup> : return (the T^l))\n  s \\<notin> F \\<union> env_dom e1+e2\n  p \\<notin> F \\<union> env_dom e1+e2\n  s \\<noteq> p\n  env_dom (e1\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr>) \\<inter>\n  env_dom e2 =\n  {}\n\ngoal (1 subgoal):\n 1. e1+e2\\<lparr>s:T\\<rparr>\\<lparr>p:param\n (the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n      s,Fvar p]\\<^esup> : return (the T^l)", "by auto"], ["proof (state)\nthis:\n  e1+e2\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                                     (the\n T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n s,Fvar p]\\<^esup> : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* TODO: refactor to work with typing_induct *)"], ["", "lemma disjunct_env: \n  assumes \"e \\<turnstile> t : A\" \n  shows \"(env_dom e \\<inter> env_dom e' = {} \\<Longrightarrow> ok e' \\<Longrightarrow> e + e' \\<turnstile> t : A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>env_dom e \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n    \\<Longrightarrow> e+e' \\<turnstile> t : A", "using assms"], ["proof (prove)\nusing this:\n  e \\<turnstile> t : A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>env_dom e \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n    \\<Longrightarrow> e+e' \\<turnstile> t : A", "proof (induct rule: typing.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>env x T.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Fvar x : T\n 2. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 3. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A\n 4. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> b : param (the A^l);\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Call a l b : return (the A^l)", "case T_Call"], ["proof (state)\nthis:\n  env_ \\<turnstile> a_ : A_\n  \\<lbrakk>env_dom env_ \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n  \\<Longrightarrow> env_+e' \\<turnstile> a_ : A_\n  env_ \\<turnstile> b_ : param (the A_^l_)\n  \\<lbrakk>env_dom env_ \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n  \\<Longrightarrow> env_+e' \\<turnstile> b_ : param (the A_^l_)\n  l_ \\<in> do A_\n  env_dom env_ \\<inter> env_dom e' = {}\n  ok e'\n\ngoal (4 subgoals):\n 1. \\<And>env x T.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Fvar x : T\n 2. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 3. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A\n 4. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> b : param (the A^l);\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Call a l b : return (the A^l)", "thus ?case"], ["proof (prove)\nusing this:\n  env_ \\<turnstile> a_ : A_\n  \\<lbrakk>env_dom env_ \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n  \\<Longrightarrow> env_+e' \\<turnstile> a_ : A_\n  env_ \\<turnstile> b_ : param (the A_^l_)\n  \\<lbrakk>env_dom env_ \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n  \\<Longrightarrow> env_+e' \\<turnstile> b_ : param (the A_^l_)\n  l_ \\<in> do A_\n  env_dom env_ \\<inter> env_dom e' = {}\n  ok e'\n\ngoal (1 subgoal):\n 1. env_+e' \\<turnstile> Call a_ l_ b_ : return (the A_^l_)", "by auto"], ["proof (state)\nthis:\n  env_+e' \\<turnstile> Call a_ l_ b_ : return (the A_^l_)\n\ngoal (3 subgoals):\n 1. \\<And>env x T.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Fvar x : T\n 2. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 3. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>env x T.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Fvar x : T\n 2. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 3. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A", "case (T_Var env x T)"], ["proof (state)\nthis:\n  ok env\n  x \\<in> env_dom env\n  the env!x = T\n  env_dom env \\<inter> env_dom e' = {}\n  ok e'\n\ngoal (3 subgoals):\n 1. \\<And>env x T.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Fvar x : T\n 2. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 3. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A", "from \n    env_app_dom[OF \\<open>ok env\\<close> \\<open>env_dom env \\<inter> env_dom e' = {}\\<close> \\<open>ok e'\\<close>]\n    \\<open>x \\<in> env_dom env\\<close>"], ["proof (chain)\npicking this:\n  env_dom env+e' = env_dom env \\<union> env_dom e'\n  x \\<in> env_dom env", "have indom: \"x \\<in> env_dom (env+e')\""], ["proof (prove)\nusing this:\n  env_dom env+e' = env_dom env \\<union> env_dom e'\n  x \\<in> env_dom env\n\ngoal (1 subgoal):\n 1. x \\<in> env_dom env+e'", "by simp"], ["proof (state)\nthis:\n  x \\<in> env_dom env+e'\n\ngoal (3 subgoals):\n 1. \\<And>env x T.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Fvar x : T\n 2. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 3. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A", "from \n    \\<open>ok env\\<close> \\<open>x \\<in> env_dom env\\<close> \\<open>the env!x = T\\<close> \\<open>env_dom env \\<inter> env_dom e' = {}\\<close>\n    \\<open>ok e'\\<close>"], ["proof (chain)\npicking this:\n  ok env\n  x \\<in> env_dom env\n  the env!x = T\n  env_dom env \\<inter> env_dom e' = {}\n  ok e'", "have \"the (env+e')!x = T\""], ["proof (prove)\nusing this:\n  ok env\n  x \\<in> env_dom env\n  the env!x = T\n  env_dom env \\<inter> env_dom e' = {}\n  ok e'\n\ngoal (1 subgoal):\n 1. the env+e'!x = T", "by simp"], ["proof (state)\nthis:\n  the env+e'!x = T\n\ngoal (3 subgoals):\n 1. \\<And>env x T.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Fvar x : T\n 2. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 3. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A", "from \n    typing.T_Var[OF env_app_ok[OF \\<open>ok env\\<close> \\<open>env_dom env \\<inter> env_dom e' = {}\\<close> \n                                  \\<open>ok e'\\<close>] \n                    indom this]"], ["proof (chain)\npicking this:\n  env+e' \\<turnstile> Fvar x : T", "show ?case"], ["proof (prove)\nusing this:\n  env+e' \\<turnstile> Fvar x : T\n\ngoal (1 subgoal):\n 1. env+e' \\<turnstile> Fvar x : T", "by assumption"], ["proof (state)\nthis:\n  env+e' \\<turnstile> Fvar x : T\n\ngoal (2 subgoals):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 2. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 2. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A", "case (T_Upd F env T l t2 t1)"], ["proof (state)\nthis:\n  finite F\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (env_dom\n       (env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr>) \\<inter>\n      env_dom e' =\n      {} \\<longrightarrow>\n      ok e' \\<longrightarrow>\n      env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n (the T^l)\\<rparr>+e' \\<turnstile> t2\\<^bsup>[Fvar\n         s,Fvar p]\\<^esup> : return (the T^l))\n  env \\<turnstile> t1 : T\n  \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n  \\<Longrightarrow> env+e' \\<turnstile> t1 : T\n  l \\<in> do T\n  env_dom env \\<inter> env_dom e' = {}\n  ok e'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A\n 2. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (env_dom\n             (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr>) \\<inter>\n            env_dom e' =\n            {} \\<longrightarrow>\n            ok e' \\<longrightarrow>\n            env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n       (the A^l)\\<rparr>+e' \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<lbrakk>env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n        \\<Longrightarrow> env+e' \\<turnstile> a : A;\n        l \\<in> do A; env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Upd a l n : A", "from \n    typing.T_Upd[OF _ bnd_disj_env_lem[OF typing_regular'[OF \\<open>env \\<turnstile> t1 : T\\<close>] \n                                          \\<open>env_dom env \\<inter> env_dom e' = {}\\<close> \\<open>ok e'\\<close> \n                                          T_Upd(2)] \n                    T_Upd(4)[OF \\<open>env_dom env \\<inter> env_dom e' = {}\\<close> \\<open>ok e'\\<close>] \n                    \\<open>l \\<in> do T\\<close>]\n    \\<open>finite F\\<close> ok_finite[OF env_app_ok[OF typing_regular'[OF \\<open>env \\<turnstile> t1 : T\\<close>] \n                                          \\<open>env_dom env \\<inter> env_dom e' = {}\\<close> \\<open>ok e'\\<close>]]"], ["proof (chain)\npicking this:\n  finite (F \\<union> env_dom env+e') \\<Longrightarrow>\n  env+e' \\<turnstile> Upd t1 l t2 : T\n  finite F\n  finite (env_dom env+e')", "show ?case"], ["proof (prove)\nusing this:\n  finite (F \\<union> env_dom env+e') \\<Longrightarrow>\n  env+e' \\<turnstile> Upd t1 l t2 : T\n  finite F\n  finite (env_dom env+e')\n\ngoal (1 subgoal):\n 1. env+e' \\<turnstile> Upd t1 l t2 : T", "by simp"], ["proof (state)\nthis:\n  env+e' \\<turnstile> Upd t1 l t2 : T\n\ngoal (1 subgoal):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A", "case (T_Obj env f T F)"], ["proof (state)\nthis:\n  ok env\n  dom f = do T\n  finite F\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (env_dom\n          (env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr>) \\<inter>\n         env_dom e' =\n         {} \\<longrightarrow>\n         ok e' \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr>+e' \\<turnstile> the\n (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l))\n  env_dom env \\<inter> env_dom e' = {}\n  ok e'\n\ngoal (1 subgoal):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A", "from \n    ok_finite[OF env_app_ok[OF \\<open>ok env\\<close> \\<open>env_dom env \\<inter> env_dom e' = {}\\<close> \\<open>ok e'\\<close>]]\n    \\<open>finite F\\<close>"], ["proof (chain)\npicking this:\n  finite (env_dom env+e')\n  finite F", "have finF: \"finite (F \\<union> env_dom (env+e'))\""], ["proof (prove)\nusing this:\n  finite (env_dom env+e')\n  finite F\n\ngoal (1 subgoal):\n 1. finite (F \\<union> env_dom env+e')", "by simp"], ["proof (state)\nthis:\n  finite (F \\<union> env_dom env+e')\n\ngoal (1 subgoal):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A", "note \n    ball_Tltsp[of F\n    \"\\<lambda>T l t s p. env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \\<turnstile> (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l))\n               \\<and> (env_dom (env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>) \\<inter> env_dom e' = {} \n                  \\<longrightarrow> ok e' \n                  \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>+e' \n                      \\<turnstile> (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l)))\"\n    T \"F \\<union> env_dom (env+e')\"\n    \"\\<lambda>T l t s p. (env+e')\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \n                 \\<turnstile> (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l))\"]"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>l t t'.\n              \\<forall>s p.\n                 s \\<notin> F \\<and>\n                 p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n                 env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n            (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n                 (env_dom\n                   (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n               (the T^l)\\<rparr>) \\<inter>\n                  env_dom e' =\n                  {} \\<longrightarrow>\n                  ok e' \\<longrightarrow>\n                  env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n             (the T^l)\\<rparr>+e' \\<turnstile> t\\<^bsup>[Fvar\n                    s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n              \\<forall>s p.\n                 s \\<notin> F \\<union> env_dom env+e' \\<and>\n                 p \\<notin> F \\<union> env_dom env+e' \\<and>\n                 s \\<noteq> p \\<longrightarrow>\n                 env+e'\\<lparr>s:T\\<rparr>\\<lparr>p:param\n               (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n                   s,Fvar p]\\<^esup> : return (the T^l);\n   \\<forall>l\\<in>do T.\n      \\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> the (?f\n   l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n         (env_dom\n           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l)\\<rparr>) \\<inter>\n          env_dom e' =\n          {} \\<longrightarrow>\n          ok e' \\<longrightarrow>\n          env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n     (the T^l)\\<rparr>+e' \\<turnstile> the\n  (?f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l))\\<rbrakk>\n  \\<Longrightarrow> \\<forall>l\\<in>do T.\n                       \\<forall>s p.\n                          s \\<notin> F \\<union> env_dom env+e' \\<and>\n                          p \\<notin> F \\<union> env_dom env+e' \\<and>\n                          s \\<noteq> p \\<longrightarrow>\n                          env+e'\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                        (the T^l)\\<rparr> \\<turnstile> the\n                  (?f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (env_dom\n                (env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n            (the A^l)\\<rparr>) \\<inter>\n               env_dom e' =\n               {} \\<longrightarrow>\n               ok e' \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr>+e' \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l));\n        env_dom env \\<inter> env_dom e' = {}; ok e'\\<rbrakk>\n       \\<Longrightarrow> env+e' \\<turnstile> Obj b A : A", "from \n    this[OF _ T_Obj(4)] \n    bnd_disj_env_lem[OF \\<open>ok env\\<close> \\<open>env_dom env \\<inter> env_dom e' = {}\\<close> \\<open>ok e'\\<close>] \n    typing.T_Obj[OF env_app_ok[OF \\<open>ok env\\<close> \n                    \\<open>env_dom env \\<inter> env_dom e' = {}\\<close> \\<open>ok e'\\<close>] \n                    \\<open>dom f = do T\\<close> finF]"], ["proof (chain)\npicking this:\n  (\\<And>l t t'.\n      \\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n        s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n         (env_dom\n           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l)\\<rparr>) \\<inter>\n          env_dom e' =\n          {} \\<longrightarrow>\n          ok e' \\<longrightarrow>\n          env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n     (the T^l)\\<rparr>+e' \\<turnstile> t\\<^bsup>[Fvar\n            s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n      \\<forall>s p.\n         s \\<notin> F \\<union> env_dom env+e' \\<and>\n         p \\<notin> F \\<union> env_dom env+e' \\<and>\n         s \\<noteq> p \\<longrightarrow>\n         env+e'\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n           s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<union> env_dom env+e' \\<and>\n        p \\<notin> F \\<union> env_dom env+e' \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env+e'\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\n  \\<forall>s p.\n     s \\<notin> ?F \\<and>\n     p \\<notin> ?F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:?T\\<rparr>\\<lparr>p:param\n (the ?T^?l)\\<rparr> \\<turnstile> ?t2.0\\<^bsup>[Fvar\n           s,Fvar p]\\<^esup> : return (the ?T^?l) \\<and>\n     (env_dom\n       (env\\<lparr>s:?T\\<rparr>\\<lparr>p:param (the ?T^?l)\\<rparr>) \\<inter>\n      env_dom e' =\n      {} \\<longrightarrow>\n      ok e' \\<longrightarrow>\n      env\\<lparr>s:?T\\<rparr>\\<lparr>p:param\n  (the ?T^?l)\\<rparr>+e' \\<turnstile> ?t2.0\\<^bsup>[Fvar\n               s,Fvar p]\\<^esup> : return (the ?T^?l)) \\<Longrightarrow>\n  \\<forall>s p.\n     s \\<notin> ?F \\<union> env_dom env+e' \\<and>\n     p \\<notin> ?F \\<union> env_dom env+e' \\<and>\n     s \\<noteq> p \\<longrightarrow>\n     env+e'\\<lparr>s:?T\\<rparr>\\<lparr>p:param\n    (the ?T^?l)\\<rparr> \\<turnstile> ?t2.0\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the ?T^?l)\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<union> env_dom env+e' \\<and>\n        p \\<notin> F \\<union> env_dom env+e' \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env+e'\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<Longrightarrow>\n  env+e' \\<turnstile> Obj f T : T", "show ?case"], ["proof (prove)\nusing this:\n  (\\<And>l t t'.\n      \\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n        s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n         (env_dom\n           (env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l)\\<rparr>) \\<inter>\n          env_dom e' =\n          {} \\<longrightarrow>\n          ok e' \\<longrightarrow>\n          env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n     (the T^l)\\<rparr>+e' \\<turnstile> t\\<^bsup>[Fvar\n            s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n      \\<forall>s p.\n         s \\<notin> F \\<union> env_dom env+e' \\<and>\n         p \\<notin> F \\<union> env_dom env+e' \\<and>\n         s \\<noteq> p \\<longrightarrow>\n         env+e'\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n           s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<union> env_dom env+e' \\<and>\n        p \\<notin> F \\<union> env_dom env+e' \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env+e'\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\n  \\<forall>s p.\n     s \\<notin> ?F \\<and>\n     p \\<notin> ?F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:?T\\<rparr>\\<lparr>p:param\n (the ?T^?l)\\<rparr> \\<turnstile> ?t2.0\\<^bsup>[Fvar\n           s,Fvar p]\\<^esup> : return (the ?T^?l) \\<and>\n     (env_dom\n       (env\\<lparr>s:?T\\<rparr>\\<lparr>p:param (the ?T^?l)\\<rparr>) \\<inter>\n      env_dom e' =\n      {} \\<longrightarrow>\n      ok e' \\<longrightarrow>\n      env\\<lparr>s:?T\\<rparr>\\<lparr>p:param\n  (the ?T^?l)\\<rparr>+e' \\<turnstile> ?t2.0\\<^bsup>[Fvar\n               s,Fvar p]\\<^esup> : return (the ?T^?l)) \\<Longrightarrow>\n  \\<forall>s p.\n     s \\<notin> ?F \\<union> env_dom env+e' \\<and>\n     p \\<notin> ?F \\<union> env_dom env+e' \\<and>\n     s \\<noteq> p \\<longrightarrow>\n     env+e'\\<lparr>s:?T\\<rparr>\\<lparr>p:param\n    (the ?T^?l)\\<rparr> \\<turnstile> ?t2.0\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : return (the ?T^?l)\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<union> env_dom env+e' \\<and>\n        p \\<notin> F \\<union> env_dom env+e' \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env+e'\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<Longrightarrow>\n  env+e' \\<turnstile> Obj f T : T\n\ngoal (1 subgoal):\n 1. env+e' \\<turnstile> Obj f T : T", "by simp"], ["proof (state)\nthis:\n  env+e' \\<turnstile> Obj f T : T\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Typed in the Empty Environment implies typed in any Environment\\<close>"], ["", "lemma empty_env: \n  assumes \"(Env Map.empty) \\<turnstile> t : A\" and \"ok env\"\n  shows \"env \\<turnstile> t : A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. env \\<turnstile> t : A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. env \\<turnstile> t : A", "from \\<open>ok env\\<close>"], ["proof (chain)\npicking this:\n  ok env", "have \"env = (Env Map.empty)+env\""], ["proof (prove)\nusing this:\n  ok env\n\ngoal (1 subgoal):\n 1. env = Env Map.empty+env", "by (cases env, auto)"], ["proof (state)\nthis:\n  env = Env Map.empty+env\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t : A", "with disjunct_env[OF assms(1) _ assms(2)]"], ["proof (chain)\npicking this:\n  env_dom (Env Map.empty) \\<inter> env_dom env = {} \\<Longrightarrow>\n  Env Map.empty+env \\<turnstile> t : A\n  env = Env Map.empty+env", "show ?thesis"], ["proof (prove)\nusing this:\n  env_dom (Env Map.empty) \\<inter> env_dom env = {} \\<Longrightarrow>\n  Env Map.empty+env \\<turnstile> t : A\n  env = Env Map.empty+env\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t : A", "by simp"], ["proof (state)\nthis:\n  env \\<turnstile> t : A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bnd_open_lem:\n  assumes\n  pred_bnd:\n  \"\\<forall>sa pa. sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa \n    \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> \n        \\<turnstile> (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l)) \n     \\<and> (\\<forall>env'' t'' s' p' x' y' A' B' n'. s' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \n         \\<longrightarrow> p' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \\<longrightarrow> s' \\<noteq> p' \n         \\<longrightarrow> env'' \\<turnstile> x' : A' \\<longrightarrow> env'' \\<turnstile> y' : B' \n         \\<longrightarrow> (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) = {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \n         \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> = env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \n         \\<longrightarrow> env'' \\<turnstile> {n' \\<rightarrow> [x',y']} t'' : return(the(T^l)))\" and\n  \"ok env\" and \"env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\" and \n  \"s \\<notin> FV t'' \\<union> FV x \\<union> FV y\" and \"p \\<notin> FV t'' \\<union> FV x \\<union> FV y\" and \"s \\<noteq> p\" and \n  \"env' \\<turnstile> x : A\" and \"env' \\<turnstile> y : B\" and \n  \"t = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t'\" and \"FV t' \\<subseteq> FV t''\"\n  shows \n  \"\\<forall>sa pa. sa \\<notin> F \\<union> {s,p} \\<union> env_dom env' \n         \\<and> pa \\<notin> F \\<union> {s,p} \\<union> env_dom env' \\<and> sa \\<noteq> pa\n    \\<longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n        \\<turnstile> ({Suc n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar sa, Fvar pa]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n       pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n       sa \\<noteq> pa \\<longrightarrow>\n       env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n     (the T^l)\\<rparr> \\<turnstile> {Suc\nn \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n                                   sa,Fvar pa]\\<^esup> : return (the T^l)", "proof (intro strip, elim conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "fix sa pa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "assume \n    nin_sa: \"sa \\<notin> F \\<union> {s,p} \\<union> env_dom env'\" and \n    nin_pa: \"pa \\<notin> F \\<union> {s,p} \\<union> env_dom env'\" and \"sa \\<noteq> pa\""], ["proof (state)\nthis:\n  sa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "hence \"sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  sa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "moreover"], ["proof (state)\nthis:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "{"], ["proof (state)\nthis:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "assume \"a \\<notin> FV t'' \\<union> FV x \\<union> FV y\" and \"a \\<in> {s,p}\""], ["proof (state)\nthis:\n  a \\<notin> FV t'' \\<union> FV x \\<union> FV y\n  a \\<in> {s, p}\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "with \n      \\<open>FV t' \\<subseteq> FV t''\\<close> nin_sa nin_pa \\<open>sa \\<noteq> pa\\<close> \n      sopen_FV[of 0 \"Fvar sa\" \"Fvar pa\" t']"], ["proof (chain)\npicking this:\n  FV t' \\<subseteq> FV t''\n  sa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  sa \\<noteq> pa\n  FV ({0 \\<rightarrow> [Fvar sa,Fvar pa]} t')\n  \\<subseteq> FV t' \\<union> FV (Fvar sa) \\<union> FV (Fvar pa)\n  a \\<notin> FV t'' \\<union> FV x \\<union> FV y\n  a \\<in> {s, p}", "have \"a \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union> FV y\""], ["proof (prove)\nusing this:\n  FV t' \\<subseteq> FV t''\n  sa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  sa \\<noteq> pa\n  FV ({0 \\<rightarrow> [Fvar sa,Fvar pa]} t')\n  \\<subseteq> FV t' \\<union> FV (Fvar sa) \\<union> FV (Fvar pa)\n  a \\<notin> FV t'' \\<union> FV x \\<union> FV y\n  a \\<in> {s, p}\n\ngoal (1 subgoal):\n 1. a \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union>\n               FV x \\<union>\n               FV y", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  a \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?a2 \\<notin> FV t'' \\<union> FV x \\<union> FV y;\n   ?a2 \\<in> {s, p}\\<rbrakk>\n  \\<Longrightarrow> ?a2\n                    \\<notin> FV (t'\\<^bsup>[Fvar\n       sa,Fvar pa]\\<^esup>) \\<union>\n                             FV x \\<union>\n                             FV y\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "note \n      this[OF \\<open>s \\<notin> FV t'' \\<union> FV x \\<union> FV y\\<close>] \n      this[OF \\<open>p \\<notin> FV t'' \\<union> FV x \\<union> FV y\\<close>]"], ["proof (state)\nthis:\n  s \\<in> {s, p} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n  p \\<in> {s, p} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "moreover"], ["proof (state)\nthis:\n  s \\<in> {s, p} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n  p \\<in> {s, p} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "{"], ["proof (state)\nthis:\n  s \\<in> {s, p} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n  p \\<in> {s, p} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "from \\<open>ok env\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> ok_add_2[of env' s A p B]"], ["proof (chain)\npicking this:\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p", "have \"ok env'\""], ["proof (prove)\nusing this:\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. ok env'", "by simp"], ["proof (state)\nthis:\n  ok env'\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "from nin_sa nin_pa \\<open>sa \\<noteq> pa\\<close> env_add_dom[OF this]"], ["proof (chain)\npicking this:\n  sa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  sa \\<noteq> pa\n  ?x \\<notin> env_dom env' \\<Longrightarrow>\n  env_dom (env'\\<lparr>?x:?X\\<rparr>) = env_dom env' \\<union> {?x}", "obtain \"sa \\<notin> env_dom env'\" and \"pa \\<notin> env_dom (env'\\<lparr>sa:T\\<rparr>)\""], ["proof (prove)\nusing this:\n  sa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  sa \\<noteq> pa\n  ?x \\<notin> env_dom env' \\<Longrightarrow>\n  env_dom (env'\\<lparr>?x:?X\\<rparr>) = env_dom env' \\<union> {?x}\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>sa \\<notin> env_dom env';\n      pa \\<notin> env_dom (env'\\<lparr>sa:T\\<rparr>)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> env_dom env'\n  pa \\<notin> env_dom (env'\\<lparr>sa:T\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "note \n      bigger_env_lemma[OF bigger_env_lemma[OF \\<open>env' \\<turnstile> x : A\\<close> this(1)] this(2)]\n      bigger_env_lemma[OF bigger_env_lemma[OF \\<open>env' \\<turnstile> y : B\\<close> this(1)] this(2)]"], ["proof (state)\nthis:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:?X\\<rparr> \\<turnstile> x : A\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:?X\\<rparr> \\<turnstile> y : B\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "}"], ["proof (state)\nthis:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:?X5\\<rparr> \\<turnstile> x : A\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:?X5\\<rparr> \\<turnstile> y : B\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "note \n      this(1)[of \"param(the(T^l))\"] \n      this(2)[of \"param(the(T^l))\"]"], ["proof (state)\nthis:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> x : A\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> y : B\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "moreover"], ["proof (state)\nthis:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> x : A\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> y : B\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "from \\<open>t = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close> sopen_commute[of 0 \"Suc n\" sa pa s p t']"], ["proof (chain)\npicking this:\n  t = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t'\n  0 \\<noteq> Suc n \\<Longrightarrow>\n  {0 \\<rightarrow> [Fvar\n                     sa,Fvar pa]} {Suc n \\<rightarrow> [Fvar s,Fvar p]} t' =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} {0 \\<rightarrow> [Fvar sa,Fvar pa]} t'", "have \"(t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) = {Suc n \\<rightarrow> [Fvar s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  t = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t'\n  0 \\<noteq> Suc n \\<Longrightarrow>\n  {0 \\<rightarrow> [Fvar\n                     sa,Fvar pa]} {Suc n \\<rightarrow> [Fvar s,Fvar p]} t' =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} {0 \\<rightarrow> [Fvar sa,Fvar pa]} t'\n\ngoal (1 subgoal):\n 1. (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n    {Suc n \\<rightarrow> [Fvar\n                           s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "moreover"], ["proof (state)\nthis:\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "from \n    subst_add[of p sa \"env'\\<lparr>s:A\\<rparr>\" B T] subst_add[of s sa env' A T]\n    subst_add[of p pa \"env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\" B \"param(the(T^l))\"] \n    subst_add[of s pa \"env'\\<lparr>sa:T\\<rparr>\" A \"param(the(T^l))\"]\n    \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> nin_sa nin_pa"], ["proof (chain)\npicking this:\n  p \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>s:A\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>p:B\\<rparr>\n  s \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>s:A\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\n  p \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr>\\<lparr>p:B\\<rparr>\n  s \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  sa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p} \\<union> env_dom env'", "have \"env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> = env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\""], ["proof (prove)\nusing this:\n  p \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>s:A\\<rparr>\\<lparr>sa:T\\<rparr>\\<lparr>p:B\\<rparr>\n  s \\<noteq> sa \\<Longrightarrow>\n  env'\\<lparr>s:A\\<rparr>\\<lparr>sa:T\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\n  p \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr>\\<lparr>p:B\\<rparr>\n  s \\<noteq> pa \\<Longrightarrow>\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>pa:param\n                   (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  sa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n  pa \\<notin> F \\<union> {s, p} \\<union> env_dom env'\n\ngoal (1 subgoal):\n 1. env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n    env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>", "by auto"], ["proof (state)\nthis:\n  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>sa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env';\n        sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n                       (the T^l)\\<rparr> \\<turnstile> {Suc\n                  n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n               sa,Fvar pa]\\<^esup> : return (the T^l)", "ultimately"], ["proof (chain)\npicking this:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n  s \\<in> {s, p} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n  p \\<in> {s, p} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> x : A\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> y : B\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>", "show \n    \"env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n     \\<turnstile> ({Suc n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar sa, Fvar pa]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\nusing this:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n  s \\<in> {s, p} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n  p \\<in> {s, p} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> x : A\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> y : B\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (1 subgoal):\n 1. env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n                                   sa,Fvar pa]\\<^esup> : return (the T^l)", "using \n      pred_bnd \\<open>s \\<noteq> p\\<close>\n      sopen_commute_gen[OF lc_Fvar[of sa] lc_Fvar[of pa] \n                           typing_regular''[OF \\<open>env' \\<turnstile> x : A\\<close>] \n                           typing_regular''[OF \\<open>env' \\<turnstile> y : B\\<close>]\n                           not_sym[OF Suc_not_Zero]]"], ["proof (prove)\nusing this:\n  sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n  s \\<in> {s, p} \\<Longrightarrow>\n  s \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n  p \\<in> {s, p} \\<Longrightarrow>\n  p \\<notin> FV (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \\<union> FV x \\<union>\n             FV y\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> x : A\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> y : B\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr>\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  \\<forall>sa pa.\n     sa \\<notin> F \\<and>\n     pa \\<notin> F \\<and> sa \\<noteq> pa \\<longrightarrow>\n     env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr> \\<turnstile> t\\<^bsup>[Fvar\n      sa,Fvar pa]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n         s' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \\<longrightarrow>\n         p' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \\<longrightarrow>\n         s' \\<noteq> p' \\<longrightarrow>\n         env'' \\<turnstile> x' : A' \\<longrightarrow>\n         env'' \\<turnstile> y' : B' \\<longrightarrow>\n         (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n         {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \\<longrightarrow>\n         env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n         env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \\<longrightarrow>\n         env'' \\<turnstile> {n' \\<rightarrow> [x',y']} t'' : return\n                        (the T^l))\n  s \\<noteq> p\n  {0 \\<rightarrow> [Fvar sa,Fvar pa]} {Suc ?m2 \\<rightarrow> [x,y]} ?t =\n  {Suc ?m2 \\<rightarrow> [x,y]} {0 \\<rightarrow> [Fvar sa,Fvar pa]} ?t\n\ngoal (1 subgoal):\n 1. env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n                                   sa,Fvar pa]\\<^esup> : return (the T^l)", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n(the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [x,y]} t'\\<^bsup>[Fvar\n                                 sa,Fvar pa]\\<^esup> : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["", "(* A variation of the Type Renaming lemma above. This is stronger and could be extended to show type renaming, using that a term typed in one environment is typed in any bigger environment *)\n(* TODO: refactor to work with typing_induct *)"], ["", "lemma open_lemma':\n  shows \n  \"e \\<turnstile> t : C \n  \\<Longrightarrow> (\\<And>env t' s p x y A B n. s \\<notin> FV t' \\<union> FV x \\<union> FV y \n         \\<Longrightarrow> p \\<notin> FV t' \\<union> FV x \\<union> FV y \\<Longrightarrow> s \\<noteq> p\n         \\<Longrightarrow> env \\<turnstile> x : A \\<Longrightarrow> env \\<turnstile> y : B \n         \\<Longrightarrow> t = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n         \\<Longrightarrow> e = env\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n         \\<Longrightarrow> env \\<turnstile> {n \\<rightarrow> [x,y]} t' : C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> t : C \\<Longrightarrow>\n    (\\<And>env t' s p x y A B n.\n        \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n         p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n         env \\<turnstile> x : A; env \\<turnstile> y : B;\n         t = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n         e = env\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n        \\<Longrightarrow> env \\<turnstile> {n \\<rightarrow> [x,y]} t' : C)", "proof (induct set:typing)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>env x T enva t' s p xa y A B n.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        s \\<notin> FV t' \\<union> FV xa \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV xa \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> xa : A; enva \\<turnstile> y : B;\n        Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [xa,y]} t' : T\n 2. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 3. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xc \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               x \\<turnstile> xd : xf \\<longrightarrow>\n               x \\<turnstile> xe : xg \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                         (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {na \\<rightarrow> [x,y]} t' : A\n 4. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "case (T_Var env x T env' t' s p y z A B n)"], ["proof (state)\nthis:\n  ok env\n  x \\<in> env_dom env\n  the env!x = T\n  s \\<notin> FV t' \\<union> FV y \\<union> FV z\n  p \\<notin> FV t' \\<union> FV y \\<union> FV z\n  s \\<noteq> p\n  env' \\<turnstile> y : A\n  env' \\<turnstile> z : B\n  Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (4 subgoals):\n 1. \\<And>env x T enva t' s p xa y A B n.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        s \\<notin> FV t' \\<union> FV xa \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV xa \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> xa : A; enva \\<turnstile> y : B;\n        Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [xa,y]} t' : T\n 2. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 3. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xc \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               x \\<turnstile> xd : xf \\<longrightarrow>\n               x \\<turnstile> xe : xg \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                         (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {na \\<rightarrow> [x,y]} t' : A\n 4. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "from sopen_eq_Fvar[OF sym[OF \\<open>Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close>]]"], ["proof (chain)\npicking this:\n  t' = Fvar x \\<or>\n  x = s \\<and> t' = Bvar (Self n) \\<or> x = p \\<and> t' = Bvar (Param n)", "show ?case"], ["proof (prove)\nusing this:\n  t' = Fvar x \\<or>\n  x = s \\<and> t' = Bvar (Self n) \\<or> x = p \\<and> t' = Bvar (Param n)\n\ngoal (1 subgoal):\n 1. env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "proof (elim disjE conjE)"], ["proof (state)\ngoal (3 subgoals):\n 1. t' = Fvar x \\<Longrightarrow>\n    env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 3. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "assume \"t' = Fvar x\""], ["proof (state)\nthis:\n  t' = Fvar x\n\ngoal (3 subgoals):\n 1. t' = Fvar x \\<Longrightarrow>\n    env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 3. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "with \\<open>s \\<notin> FV t' \\<union> FV y \\<union> FV z\\<close> \\<open>p \\<notin> FV t' \\<union> FV y \\<union> FV z\\<close>"], ["proof (chain)\npicking this:\n  s \\<notin> FV t' \\<union> FV y \\<union> FV z\n  p \\<notin> FV t' \\<union> FV y \\<union> FV z\n  t' = Fvar x", "obtain \"x \\<noteq> s\" and \"x \\<noteq> p\""], ["proof (prove)\nusing this:\n  s \\<notin> FV t' \\<union> FV y \\<union> FV z\n  p \\<notin> FV t' \\<union> FV y \\<union> FV z\n  t' = Fvar x\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>x \\<noteq> s; x \\<noteq> p\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> s\n  x \\<noteq> p\n\ngoal (3 subgoals):\n 1. t' = Fvar x \\<Longrightarrow>\n    env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 3. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "from \\<open>x \\<in> env_dom env\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> in_env_smaller2[OF _ this]"], ["proof (chain)\npicking this:\n  x \\<in> env_dom env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  x \\<in> env_dom\n           (?e\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>) \\<Longrightarrow>\n  x \\<in> env_dom ?e", "have indom: \"x \\<in> env_dom env'\""], ["proof (prove)\nusing this:\n  x \\<in> env_dom env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  x \\<in> env_dom\n           (?e\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>) \\<Longrightarrow>\n  x \\<in> env_dom ?e\n\ngoal (1 subgoal):\n 1. x \\<in> env_dom env'", "by simp"], ["proof (state)\nthis:\n  x \\<in> env_dom env'\n\ngoal (3 subgoals):\n 1. t' = Fvar x \\<Longrightarrow>\n    env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 3. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "from \n      \\<open>ok env\\<close> \\<open>the env!x = T\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close>\n      ok_add_2[of env' s A p B] get_env_smaller2[OF this _ _ \\<open>s \\<noteq> p\\<close>]"], ["proof (chain)\npicking this:\n  ok env\n  the env!x = T\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p\n  \\<lbrakk>s \\<notin> env_dom env'; p \\<notin> env_dom env'\\<rbrakk>\n  \\<Longrightarrow> env'\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>!x = env'!x", "have \"the env'!x = T\""], ["proof (prove)\nusing this:\n  ok env\n  the env!x = T\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p\n  \\<lbrakk>s \\<notin> env_dom env'; p \\<notin> env_dom env'\\<rbrakk>\n  \\<Longrightarrow> env'\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>!x = env'!x\n\ngoal (1 subgoal):\n 1. the env'!x = T", "by simp"], ["proof (state)\nthis:\n  the env'!x = T\n\ngoal (3 subgoals):\n 1. t' = Fvar x \\<Longrightarrow>\n    env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 3. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "from \n      \\<open>ok env\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> \\<open>t' = Fvar x\\<close>\n      ok_add_2[of env' s A p B] typing.T_Var[OF _ indom this]"], ["proof (chain)\npicking this:\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  t' = Fvar x\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p\n  ok env' \\<Longrightarrow> env' \\<turnstile> Fvar x : T", "show ?case"], ["proof (prove)\nusing this:\n  ok env\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  t' = Fvar x\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  ok env' \\<and>\n  s \\<notin> env_dom env' \\<and> p \\<notin> env_dom env' \\<and> s \\<noteq> p\n  ok env' \\<Longrightarrow> env' \\<turnstile> Fvar x : T\n\ngoal (1 subgoal):\n 1. env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "by simp"], ["proof (state)\nthis:\n  env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "assume \"x = s\""], ["proof (state)\nthis:\n  x = s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "with \n      \\<open>ok env\\<close> \\<open>the env!x = T\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> \n      add_get2_1[of env' s A p B]"], ["proof (chain)\npicking this:\n  ok env\n  the env!x = T\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  the env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!s = A\n  x = s", "have \"T = A\""], ["proof (prove)\nusing this:\n  ok env\n  the env!x = T\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  the env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!s = A\n  x = s\n\ngoal (1 subgoal):\n 1. T = A", "by simp"], ["proof (state)\nthis:\n  T = A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "moreover"], ["proof (state)\nthis:\n  T = A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "assume \"t' = Bvar (Self n)\""], ["proof (state)\nthis:\n  t' = Bvar (Self n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>x = s; t' = Bvar (Self n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n 2. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "ultimately"], ["proof (chain)\npicking this:\n  T = A\n  t' = Bvar (Self n)", "show ?thesis"], ["proof (prove)\nusing this:\n  T = A\n  t' = Bvar (Self n)\n\ngoal (1 subgoal):\n 1. env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "using \\<open>env' \\<turnstile> y : A\\<close>"], ["proof (prove)\nusing this:\n  T = A\n  t' = Bvar (Self n)\n  env' \\<turnstile> y : A\n\ngoal (1 subgoal):\n 1. env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "by simp"], ["proof (state)\nthis:\n  env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "assume \"x = p\""], ["proof (state)\nthis:\n  x = p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "with \n      \\<open>ok env\\<close> \\<open>the env!x = T\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> \n      add_get2_2[of env' s A p B]"], ["proof (chain)\npicking this:\n  ok env\n  the env!x = T\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  the env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!p = B\n  x = p", "have \"T = B\""], ["proof (prove)\nusing this:\n  ok env\n  the env!x = T\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n  ok (env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>) \\<Longrightarrow>\n  the env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>!p = B\n  x = p\n\ngoal (1 subgoal):\n 1. T = B", "by simp"], ["proof (state)\nthis:\n  T = B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "moreover"], ["proof (state)\nthis:\n  T = B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "assume \"t' = Bvar (Param n)\""], ["proof (state)\nthis:\n  t' = Bvar (Param n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = p; t' = Bvar (Param n)\\<rbrakk>\n    \\<Longrightarrow> env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "ultimately"], ["proof (chain)\npicking this:\n  T = B\n  t' = Bvar (Param n)", "show ?thesis"], ["proof (prove)\nusing this:\n  T = B\n  t' = Bvar (Param n)\n\ngoal (1 subgoal):\n 1. env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "using \\<open>env' \\<turnstile> z : B\\<close>"], ["proof (prove)\nusing this:\n  T = B\n  t' = Bvar (Param n)\n  env' \\<turnstile> z : B\n\ngoal (1 subgoal):\n 1. env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T", "by simp"], ["proof (state)\nthis:\n  env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  env' \\<turnstile> {n \\<rightarrow> [y,z]} t' : T\n\ngoal (3 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xc \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               x \\<turnstile> xd : xf \\<longrightarrow>\n               x \\<turnstile> xe : xg \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                         (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {na \\<rightarrow> [x,y]} t' : A\n 3. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xc \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               x \\<turnstile> xd : xf \\<longrightarrow>\n               x \\<turnstile> xe : xg \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                         (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {na \\<rightarrow> [x,y]} t' : A\n 3. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "case (T_Upd F env T l t2 t1 env' t' s p x y A B n)"], ["proof (state)\nthis:\n  finite F\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x xa xb xc xd xe xf xg xh.\n         xb \\<notin> FV xa \\<union> FV xd \\<union> FV xe \\<longrightarrow>\n         xc \\<notin> FV xa \\<union> FV xd \\<union> FV xe \\<longrightarrow>\n         xb \\<noteq> xc \\<longrightarrow>\n         x \\<turnstile> xd : xf \\<longrightarrow>\n         x \\<turnstile> xe : xg \\<longrightarrow>\n         (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n         x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n         x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return (the T^l))\n  env \\<turnstile> t1 : T\n  \\<lbrakk>?s \\<notin> FV ?t' \\<union> FV ?x \\<union> FV ?y;\n   ?p \\<notin> FV ?t' \\<union> FV ?x \\<union> FV ?y; ?s \\<noteq> ?p;\n   ?env \\<turnstile> ?x : ?A; ?env \\<turnstile> ?y : ?B;\n   t1 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env \\<turnstile> {?n \\<rightarrow> [?x,?y]} ?t' : T\n  l \\<in> do T\n  s \\<notin> FV t' \\<union> FV x \\<union> FV y\n  p \\<notin> FV t' \\<union> FV x \\<union> FV y\n  s \\<noteq> p\n  env' \\<turnstile> x : A\n  env' \\<turnstile> y : B\n  Upd t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (3 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xc \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               x \\<turnstile> xd : xf \\<longrightarrow>\n               x \\<turnstile> xe : xg \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                         (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {na \\<rightarrow> [x,y]} t' : A\n 3. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "from sopen_eq_Upd[OF sym[OF \\<open>Upd t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close>]]"], ["proof (chain)\npicking this:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n     t' = Upd t1' l t2'", "obtain t1' t2' where \n    t1': \"t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1'\" and\n    t2': \"t2 = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2'\" and\n    t': \"t' = Upd t1' l t2'\""], ["proof (prove)\nusing this:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n     t' = Upd t1' l t2'\n\ngoal (1 subgoal):\n 1. (\\<And>t1' t2'.\n        \\<lbrakk>t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1';\n         t2 = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2';\n         t' = Upd t1' l t2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1'\n  t2 = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2'\n  t' = Upd t1' l t2'\n\ngoal (3 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xc \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               x \\<turnstile> xd : xf \\<longrightarrow>\n               x \\<turnstile> xe : xg \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                         (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {na \\<rightarrow> [x,y]} t' : A\n 3. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "hence \"FV t2' \\<subseteq> FV t'\""], ["proof (prove)\nusing this:\n  t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1'\n  t2 = {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2'\n  t' = Upd t1' l t2'\n\ngoal (1 subgoal):\n 1. FV t2' \\<subseteq> FV t'", "by auto"], ["proof (state)\nthis:\n  FV t2' \\<subseteq> FV t'\n\ngoal (3 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>F env A l n a enva t' s p x y Aa B na.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x xa xb xc xd xe xf xg xh.\n               xb \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xc \\<notin> FV xa \\<union> FV xd \\<union>\n                           FV xe \\<longrightarrow>\n               xb \\<noteq> xc \\<longrightarrow>\n               x \\<turnstile> xd : xf \\<longrightarrow>\n               x \\<turnstile> xe : xg \\<longrightarrow>\n               (n\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n               x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n               x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                         (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Upd a l n = {na \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {na \\<rightarrow> [x,y]} t' : A\n 3. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "from \n    \\<open>s \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close> \\<open>p \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close>\n    t' \\<open>finite F\\<close> ok_finite[OF typing_regular'[OF \\<open>env' \\<turnstile> x : A\\<close>]]\n    typing.T_Upd[OF _ bnd_open_lem[OF T_Upd(2) \n                    typing_regular'[OF \\<open>env \\<turnstile> t1 : T\\<close>] \n                    \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> \n                    \\<open>s \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close> \n                    \\<open>p \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close> \\<open>s \\<noteq> p\\<close>\n                    \\<open>env' \\<turnstile> x : A\\<close> \\<open>env' \\<turnstile> y : B\\<close> t2' this]\n    T_Upd(4)[OF _ _ \\<open>s \\<noteq> p\\<close> \\<open>env' \\<turnstile> x : A\\<close> \\<open>env' \\<turnstile> y : B\\<close> \n                t1' \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close>] \\<open>l \\<in> do T\\<close>]"], ["proof (chain)\npicking this:\n  s \\<notin> FV t' \\<union> FV x \\<union> FV y\n  p \\<notin> FV t' \\<union> FV x \\<union> FV y\n  t' = Upd t1' l t2'\n  finite F\n  finite (env_dom env')\n  \\<lbrakk>finite (F \\<union> {s, p} \\<union> env_dom env');\n   s \\<notin> FV t1' \\<union> FV x \\<union> FV y;\n   p \\<notin> FV t1' \\<union> FV x \\<union> FV y\\<rbrakk>\n  \\<Longrightarrow> env' \\<turnstile> Upd ({n \\<rightarrow> [x,y]} t1') l\n ({Suc n \\<rightarrow> [x,y]} t2') : T", "show ?case"], ["proof (prove)\nusing this:\n  s \\<notin> FV t' \\<union> FV x \\<union> FV y\n  p \\<notin> FV t' \\<union> FV x \\<union> FV y\n  t' = Upd t1' l t2'\n  finite F\n  finite (env_dom env')\n  \\<lbrakk>finite (F \\<union> {s, p} \\<union> env_dom env');\n   s \\<notin> FV t1' \\<union> FV x \\<union> FV y;\n   p \\<notin> FV t1' \\<union> FV x \\<union> FV y\\<rbrakk>\n  \\<Longrightarrow> env' \\<turnstile> Upd ({n \\<rightarrow> [x,y]} t1') l\n ({Suc n \\<rightarrow> [x,y]} t2') : T\n\ngoal (1 subgoal):\n 1. env' \\<turnstile> {n \\<rightarrow> [x,y]} t' : T", "by simp"], ["proof (state)\nthis:\n  env' \\<turnstile> {n \\<rightarrow> [x,y]} t' : T\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "case (T_Obj env f T F env' t' s p x y A B n)"], ["proof (state)\nthis:\n  ok env\n  dom f = do T\n  finite F\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x xa xb xc xd xe xf xg xh.\n            xb \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xc \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xb \\<noteq> xc \\<longrightarrow>\n            x \\<turnstile> xd : xf \\<longrightarrow>\n            x \\<turnstile> xe : xg \\<longrightarrow>\n            (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n            {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n            x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n            x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return (the T^l))\n  s \\<notin> FV t' \\<union> FV x \\<union> FV y\n  p \\<notin> FV t' \\<union> FV x \\<union> FV y\n  s \\<noteq> p\n  env' \\<turnstile> x : A\n  env' \\<turnstile> y : B\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "from sopen_eq_Obj[OF sym[OF \\<open>Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close>]]"], ["proof (chain)\npicking this:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t' = Obj f' T", "obtain f' where \n    obj: \"Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T\" and \n    t': \"t' = Obj f' T\""], ["proof (prove)\nusing this:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t' = Obj f' T\n\ngoal (1 subgoal):\n 1. (\\<And>f'.\n        \\<lbrakk>Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T;\n         t' = Obj f' T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T\n  t' = Obj f' T\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "from \n    sym[OF this(1)] \\<open>dom f = do T\\<close>\n    sym[OF dom_sopenoption_lem[of \"Suc n\" \"Fvar s\" \"Fvar p\" f']]\n    dom_sopenoption_lem[of \"Suc n\" x y f']"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\n  dom f = do T\n  dom f' = dom (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))\n  dom (\\<lambda>l. sopen_option (Suc n) x y (f' l)) = dom f'", "have dom: \"dom (\\<lambda>l. sopen_option (Suc n) x y (f' l)) = do T\""], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T\n  dom f = do T\n  dom f' = dom (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))\n  dom (\\<lambda>l. sopen_option (Suc n) x y (f' l)) = dom f'\n\ngoal (1 subgoal):\n 1. dom (\\<lambda>l. sopen_option (Suc n) x y (f' l)) = do T", "by simp"], ["proof (state)\nthis:\n  dom (\\<lambda>l. sopen_option (Suc n) x y (f' l)) = do T\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "from \\<open>finite F\\<close> ok_finite[OF typing_regular'[OF \\<open>env' \\<turnstile> x : A\\<close>]]"], ["proof (chain)\npicking this:\n  finite F\n  finite (env_dom env')", "have finF: \"finite (F \\<union> {s,p} \\<union> env_dom env')\""], ["proof (prove)\nusing this:\n  finite F\n  finite (env_dom env')\n\ngoal (1 subgoal):\n 1. finite (F \\<union> {s, p} \\<union> env_dom env')", "by simp"], ["proof (state)\nthis:\n  finite (F \\<union> {s, p} \\<union> env_dom env')\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "have\n    \"\\<forall>l\\<in>do T. \\<forall>sa pa. sa \\<notin> F \\<union> {s,p} \\<union> env_dom env' \n                     \\<and> pa \\<notin> F \\<union> {s,p} \\<union> env_dom env' \n                     \\<and> sa \\<noteq> pa \n      \\<longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n          \\<turnstile> (the(sopen_option (Suc n) x y (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>do T.\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) x y\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) x y\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) x y\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "assume \"l \\<in> do T\""], ["proof (state)\nthis:\n  l \\<in> do T\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) x y\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "with T_Obj(4)"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x xa xb xc xd xe xf xg xh.\n            xb \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xc \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xb \\<noteq> xc \\<longrightarrow>\n            x \\<turnstile> xd : xf \\<longrightarrow>\n            x \\<turnstile> xe : xg \\<longrightarrow>\n            (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n            {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n            x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n            x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return (the T^l))\n  l \\<in> do T", "have \n      cof: \n      \"\\<forall>sa pa. sa \\<notin> F \\<and> pa \\<notin> F \\<and> sa \\<noteq> pa\n        \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> \n            \\<turnstile> (the(f l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l))\n          \\<and> (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n               s' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \\<longrightarrow> p' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \n               \\<longrightarrow> s' \\<noteq> p' \\<longrightarrow> env'' \\<turnstile> x' : A' \\<longrightarrow> env'' \\<turnstile> y' : B'\n               \\<longrightarrow> (the(f l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) = {n' \\<rightarrow> [Fvar s',Fvar p']} t''\n               \\<longrightarrow> env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr> = env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \n               \\<longrightarrow> env'' \\<turnstile> {n' \\<rightarrow> [x',y']} t'' : return(the(T^l)))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x xa xb xc xd xe xf xg xh.\n            xb \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xc \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xb \\<noteq> xc \\<longrightarrow>\n            x \\<turnstile> xd : xf \\<longrightarrow>\n            x \\<turnstile> xe : xg \\<longrightarrow>\n            (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n            {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n            x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n            x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return (the T^l))\n  l \\<in> do T\n\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> F \\<and>\n       pa \\<notin> F \\<and> sa \\<noteq> pa \\<longrightarrow>\n       env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n    (the T^l)\\<rparr> \\<turnstile> the (f\n   l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l) \\<and>\n       (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n           s' \\<notin> FV t'' \\<union> FV x' \\<union>\n                       FV y' \\<longrightarrow>\n           p' \\<notin> FV t'' \\<union> FV x' \\<union>\n                       FV y' \\<longrightarrow>\n           s' \\<noteq> p' \\<longrightarrow>\n           env'' \\<turnstile> x' : A' \\<longrightarrow>\n           env'' \\<turnstile> y' : B' \\<longrightarrow>\n           (the (f l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n           {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \\<longrightarrow>\n           env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n           env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \\<longrightarrow>\n           env'' \\<turnstile> {n' \\<rightarrow> [x',y']} t'' : return\n                          (the T^l))", "by simp"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> F \\<and>\n     pa \\<notin> F \\<and> sa \\<noteq> pa \\<longrightarrow>\n     env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n  (the T^l)\\<rparr> \\<turnstile> the (f\n l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>env'' t'' s' p' x' y' A' B' n'.\n         s' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \\<longrightarrow>\n         p' \\<notin> FV t'' \\<union> FV x' \\<union> FV y' \\<longrightarrow>\n         s' \\<noteq> p' \\<longrightarrow>\n         env'' \\<turnstile> x' : A' \\<longrightarrow>\n         env'' \\<turnstile> y' : B' \\<longrightarrow>\n         (the (f l)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n         {n' \\<rightarrow> [Fvar s',Fvar p']} t'' \\<longrightarrow>\n         env\\<lparr>sa:T\\<rparr>\\<lparr>pa:param (the T^l)\\<rparr> =\n         env''\\<lparr>s':A'\\<rparr>\\<lparr>p':B'\\<rparr> \\<longrightarrow>\n         env'' \\<turnstile> {n' \\<rightarrow> [x',y']} t'' : return\n                        (the T^l))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) x y\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "from \n      \\<open>l \\<in> do T\\<close> \\<open>dom f = do T\\<close> \\<open>Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close> obj t'\n      dom_sopenoption_lem[of \"Suc n\" \"Fvar s\" \"Fvar p\" f']"], ["proof (chain)\npicking this:\n  l \\<in> do T\n  dom f = do T\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T\n  t' = Obj f' T\n  dom (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)) = dom f'", "have indomf': \"l \\<in> dom f'\""], ["proof (prove)\nusing this:\n  l \\<in> do T\n  dom f = do T\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T\n  t' = Obj f' T\n  dom (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)) = dom f'\n\ngoal (1 subgoal):\n 1. l \\<in> dom f'", "by auto"], ["proof (state)\nthis:\n  l \\<in> dom f'\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) x y\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "with obj sopen_option_lem[of f' \"Suc n\" \"Fvar s\" \"Fvar p\"] FV_option_lem[of f'] t'"], ["proof (chain)\npicking this:\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T\n  \\<forall>l\\<in>dom f'.\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f' l) =\n     the (sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))\n  \\<forall>l\\<in>dom f'. FV (the (f' l)) = FVoption (f' l)\n  t' = Obj f' T\n  l \\<in> dom f'", "obtain \n      \"the(f l) = {Suc n \\<rightarrow> [Fvar s,Fvar p]} the(f' l)\" and\n      \"FV (the(f' l)) \\<subseteq> FV t'\""], ["proof (prove)\nusing this:\n  Obj f T = {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T\n  \\<forall>l\\<in>dom f'.\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f' l) =\n     the (sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))\n  \\<forall>l\\<in>dom f'. FV (the (f' l)) = FVoption (f' l)\n  t' = Obj f' T\n  l \\<in> dom f'\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>the (f l) = {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f' l);\n      FV (the (f' l)) \\<subseteq> FV t'\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  the (f l) = {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f' l)\n  FV (the (f' l)) \\<subseteq> FV t'\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> do T \\<Longrightarrow>\n       \\<forall>sa pa.\n          sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n          sa \\<noteq> pa \\<longrightarrow>\n          env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n        (the T^l)\\<rparr> \\<turnstile> the\n  (sopen_option (Suc n) x y\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "from \n      bnd_open_lem[OF cof \\<open>ok env\\<close> \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close> \n                      \\<open>s \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close> \\<open>p \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close>\n                      \\<open>s \\<noteq> p\\<close> \\<open>env' \\<turnstile> x : A\\<close> \\<open>env' \\<turnstile> y : B\\<close> this]\n      indomf' sopen_option_lem[of f' \"Suc n\" x y] T_Obj(4)"], ["proof (chain)\npicking this:\n  \\<forall>sa pa.\n     sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n     pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n   (the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [x,y]} the\n                         (f' l)\\<^bsup>[Fvar\n   sa,Fvar pa]\\<^esup> : return (the T^l)\n  l \\<in> dom f'\n  \\<forall>l\\<in>dom f'.\n     {Suc n \\<rightarrow> [x,y]} the (f' l) =\n     the (sopen_option (Suc n) x y (f' l))\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x xa xb xc xd xe xf xg xh.\n            xb \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xc \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xb \\<noteq> xc \\<longrightarrow>\n            x \\<turnstile> xd : xf \\<longrightarrow>\n            x \\<turnstile> xe : xg \\<longrightarrow>\n            (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n            {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n            x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n            x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return (the T^l))", "show \n      \"\\<forall>sa pa. sa \\<notin> F \\<union> {s,p} \\<union> env_dom env' \n             \\<and> pa \\<notin> F \\<union> {s,p} \\<union> env_dom env' \\<and> sa \\<noteq> pa \n        \\<longrightarrow> env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param(the(T^l))\\<rparr>\n            \\<turnstile> (the(sopen_option (Suc n) x y (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\nusing this:\n  \\<forall>sa pa.\n     sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n     pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n   (the T^l)\\<rparr> \\<turnstile> {Suc n \\<rightarrow> [x,y]} the\n                         (f' l)\\<^bsup>[Fvar\n   sa,Fvar pa]\\<^esup> : return (the T^l)\n  l \\<in> dom f'\n  \\<forall>l\\<in>dom f'.\n     {Suc n \\<rightarrow> [x,y]} the (f' l) =\n     the (sopen_option (Suc n) x y (f' l))\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x xa xb xc xd xe xf xg xh.\n            xb \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xc \\<notin> FV xa \\<union> FV xd \\<union>\n                        FV xe \\<longrightarrow>\n            xb \\<noteq> xc \\<longrightarrow>\n            x \\<turnstile> xd : xf \\<longrightarrow>\n            x \\<turnstile> xe : xg \\<longrightarrow>\n            (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n            {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param (the T^l)\\<rparr> =\n            x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n            x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return (the T^l))\n\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n       pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n       sa \\<noteq> pa \\<longrightarrow>\n       env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n     (the T^l)\\<rparr> \\<turnstile> the (sopen_option (Suc n) x y\n    (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)", "by simp"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n     pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n   (the T^l)\\<rparr> \\<turnstile> the (sopen_option (Suc n) x y\n  (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l\\<in>do T.\n     \\<forall>sa pa.\n        sa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n        pa \\<notin> F \\<union> {s, p} \\<union> env_dom env' \\<and>\n        sa \\<noteq> pa \\<longrightarrow>\n        env'\\<lparr>sa:T\\<rparr>\\<lparr>pa:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(sopen_option (Suc n) x y\n  (f' l))\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> : return (the T^l)\n\ngoal (2 subgoals):\n 1. \\<And>env b A F enva t' s p x y Aa B n.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x xa xb xc xd xe xf xg xh.\n                  xb \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xc \\<notin> FV xa \\<union> FV xd \\<union>\n                              FV xe \\<longrightarrow>\n                  xb \\<noteq> xc \\<longrightarrow>\n                  x \\<turnstile> xd : xf \\<longrightarrow>\n                  x \\<turnstile> xe : xg \\<longrightarrow>\n                  (the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n                  {xh \\<rightarrow> [Fvar xb,Fvar xc]} xa \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param (the A^l)\\<rparr> =\n                  x\\<lparr>xb:xf\\<rparr>\\<lparr>xc:xg\\<rparr> \\<longrightarrow>\n                  x \\<turnstile> {xh \\<rightarrow> [xd,xe]} xa : return\n                            (the A^l));\n        s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Obj b A = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A\n 2. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "from typing.T_Obj[OF typing_regular'[OF \\<open>env' \\<turnstile> x : A\\<close>] dom finF this] t'"], ["proof (chain)\npicking this:\n  env' \\<turnstile> Obj (\\<lambda>l. sopen_option (Suc n) x y (f' l)) T : T\n  t' = Obj f' T", "show ?case"], ["proof (prove)\nusing this:\n  env' \\<turnstile> Obj (\\<lambda>l. sopen_option (Suc n) x y (f' l)) T : T\n  t' = Obj f' T\n\ngoal (1 subgoal):\n 1. env' \\<turnstile> {n \\<rightarrow> [x,y]} t' : T", "by simp"], ["proof (state)\nthis:\n  env' \\<turnstile> {n \\<rightarrow> [x,y]} t' : T\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "case (T_Call env t1 T t2 l env' t' s p x y A B n)"], ["proof (state)\nthis:\n  env \\<turnstile> t1 : T\n  \\<lbrakk>?s \\<notin> FV ?t' \\<union> FV ?x \\<union> FV ?y;\n   ?p \\<notin> FV ?t' \\<union> FV ?x \\<union> FV ?y; ?s \\<noteq> ?p;\n   ?env \\<turnstile> ?x : ?A; ?env \\<turnstile> ?y : ?B;\n   t1 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env \\<turnstile> {?n \\<rightarrow> [?x,?y]} ?t' : T\n  env \\<turnstile> t2 : param (the T^l)\n  \\<lbrakk>?s \\<notin> FV ?t' \\<union> FV ?x \\<union> FV ?y;\n   ?p \\<notin> FV ?t' \\<union> FV ?x \\<union> FV ?y; ?s \\<noteq> ?p;\n   ?env \\<turnstile> ?x : ?A; ?env \\<turnstile> ?y : ?B;\n   t2 = {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t';\n   env = ?env\\<lparr>?s:?A\\<rparr>\\<lparr>?p:?B\\<rparr>\\<rbrakk>\n  \\<Longrightarrow> ?env \\<turnstile> {?n \\<rightarrow> [?x,?y]} ?t' : param\n                                  (the T^l)\n  l \\<in> do T\n  s \\<notin> FV t' \\<union> FV x \\<union> FV y\n  p \\<notin> FV t' \\<union> FV x \\<union> FV y\n  s \\<noteq> p\n  env' \\<turnstile> x : A\n  env' \\<turnstile> y : B\n  Call t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\n  env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "from sopen_eq_Call[OF sym[OF \\<open>Call t1 l t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t'\\<close>]]"], ["proof (chain)\npicking this:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t' = Call t1' l t2'", "obtain t1' t2' where \n    t1: \"t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1'\" and\n    t2: \"t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t2'\" and\n    t': \"t' = Call t1' l t2'\""], ["proof (prove)\nusing this:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t' = Call t1' l t2'\n\ngoal (1 subgoal):\n 1. (\\<And>t1' t2'.\n        \\<lbrakk>t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1';\n         t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t2';\n         t' = Call t1' l t2'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1'\n  t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t2'\n  t' = Call t1' l t2'\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "{"], ["proof (state)\nthis:\n  t1 = {n \\<rightarrow> [Fvar s,Fvar p]} t1'\n  t2 = {n \\<rightarrow> [Fvar s,Fvar p]} t2'\n  t' = Call t1' l t2'\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "assume \"a \\<notin> FV t' \\<union> FV x \\<union> FV y\""], ["proof (state)\nthis:\n  a \\<notin> FV t' \\<union> FV x \\<union> FV y\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "with t'"], ["proof (chain)\npicking this:\n  t' = Call t1' l t2'\n  a \\<notin> FV t' \\<union> FV x \\<union> FV y", "have \"a \\<notin> FV t1' \\<union> FV x \\<union> FV y\""], ["proof (prove)\nusing this:\n  t' = Call t1' l t2'\n  a \\<notin> FV t' \\<union> FV x \\<union> FV y\n\ngoal (1 subgoal):\n 1. a \\<notin> FV t1' \\<union> FV x \\<union> FV y", "by simp"], ["proof (state)\nthis:\n  a \\<notin> FV t1' \\<union> FV x \\<union> FV y\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "}"], ["proof (state)\nthis:\n  ?a2 \\<notin> FV t' \\<union> FV x \\<union> FV y \\<Longrightarrow>\n  ?a2 \\<notin> FV t1' \\<union> FV x \\<union> FV y\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "note \n      t1' = T_Call(2)[OF this[OF \\<open>s \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close>]\n                        this[OF \\<open>p \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close>]\n                        \\<open>s \\<noteq> p\\<close> \\<open>env' \\<turnstile> x : A\\<close> \\<open>env' \\<turnstile> y : B\\<close>\n                        t1 \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close>]"], ["proof (state)\nthis:\n  env' \\<turnstile> {n \\<rightarrow> [x,y]} t1' : T\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "{"], ["proof (state)\nthis:\n  env' \\<turnstile> {n \\<rightarrow> [x,y]} t1' : T\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "assume \"a \\<notin> FV t' \\<union> FV x \\<union> FV y\""], ["proof (state)\nthis:\n  a \\<notin> FV t' \\<union> FV x \\<union> FV y\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "with t'"], ["proof (chain)\npicking this:\n  t' = Call t1' l t2'\n  a \\<notin> FV t' \\<union> FV x \\<union> FV y", "have \"a \\<notin> FV t2' \\<union> FV x \\<union> FV y\""], ["proof (prove)\nusing this:\n  t' = Call t1' l t2'\n  a \\<notin> FV t' \\<union> FV x \\<union> FV y\n\ngoal (1 subgoal):\n 1. a \\<notin> FV t2' \\<union> FV x \\<union> FV y", "by simp"], ["proof (state)\nthis:\n  a \\<notin> FV t2' \\<union> FV x \\<union> FV y\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "}"], ["proof (state)\nthis:\n  ?a2 \\<notin> FV t' \\<union> FV x \\<union> FV y \\<Longrightarrow>\n  ?a2 \\<notin> FV t2' \\<union> FV x \\<union> FV y\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l enva t' s p x y Aa B n.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            a = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>enva t' s p x y Aa B n.\n           \\<lbrakk>s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n            p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n            enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n            b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n            env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n           \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : param\n (the A^l);\n        l \\<in> do A; s \\<notin> FV t' \\<union> FV x \\<union> FV y;\n        p \\<notin> FV t' \\<union> FV x \\<union> FV y; s \\<noteq> p;\n        enva \\<turnstile> x : Aa; enva \\<turnstile> y : B;\n        Call a l b = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        env = enva\\<lparr>s:Aa\\<rparr>\\<lparr>p:B\\<rparr>\\<rbrakk>\n       \\<Longrightarrow> enva \\<turnstile> {n \\<rightarrow> [x,y]} t' : return\n                                   (the A^l)", "from \n    typing.T_Call[OF t1' T_Call(4)[OF this[OF \\<open>s \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close>]\n                                     this[OF \\<open>p \\<notin> FV t' \\<union> FV x \\<union> FV y\\<close>]\n                                     \\<open>s \\<noteq> p\\<close> \\<open>env' \\<turnstile> x : A\\<close> \\<open>env' \\<turnstile> y : B\\<close>\n                                     t2 \\<open>env = env'\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr>\\<close>] \n                     \\<open>l \\<in> do T\\<close>]\n    t'"], ["proof (chain)\npicking this:\n  env' \\<turnstile> Call ({n \\<rightarrow> [x,y]} t1') l\n                     ({n \\<rightarrow> [x,y]} t2') : return (the T^l)\n  t' = Call t1' l t2'", "show ?case"], ["proof (prove)\nusing this:\n  env' \\<turnstile> Call ({n \\<rightarrow> [x,y]} t1') l\n                     ({n \\<rightarrow> [x,y]} t2') : return (the T^l)\n  t' = Call t1' l t2'\n\ngoal (1 subgoal):\n 1. env' \\<turnstile> {n \\<rightarrow> [x,y]} t' : return (the T^l)", "by simp"], ["proof (state)\nthis:\n  env' \\<turnstile> {n \\<rightarrow> [x,y]} t' : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma open_lemma: \n  \"\\<lbrakk> env\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar s,Fvar p]} t : T; \n     s \\<notin> FV t \\<union> FV x \\<union> FV y;  p \\<notin> FV t \\<union> FV x \\<union> FV y; s \\<noteq> p; \n     env \\<turnstile> x : A; env \\<turnstile> y : B \\<rbrakk> \n  \\<Longrightarrow> env \\<turnstile> {n \\<rightarrow> [x,y]} t : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>env\\<lparr>s:A\\<rparr>\\<lparr>p:B\\<rparr> \\<turnstile> {n \\<rightarrow> [Fvar\n           s,Fvar p]} t : T;\n     s \\<notin> FV t \\<union> FV x \\<union> FV y;\n     p \\<notin> FV t \\<union> FV x \\<union> FV y; s \\<noteq> p;\n     env \\<turnstile> x : A; env \\<turnstile> y : B\\<rbrakk>\n    \\<Longrightarrow> env \\<turnstile> {n \\<rightarrow> [x,y]} t : T", "by (simp add: open_lemma')"], ["", "subsubsection \\<open>Subject reduction\\<close>"], ["", "lemma type_dom[simp]: \"env \\<turnstile> (Obj a A) : A \\<Longrightarrow> dom a = do A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. env \\<turnstile> Obj a A : A \\<Longrightarrow> dom a = do A", "by (erule typing.cases, auto)"], ["", "lemma select_preserve_type[simp]:\n  assumes \n  \"env \\<turnstile> Obj f (Object t) : Object t\" and \"s \\<notin> FV a\" and \"p \\<notin> FV a\" and\n  \"env\\<lparr>s:(Object t)\\<rparr>\\<lparr>p:param(the(t l2))\\<rparr> \\<turnstile> (a\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(t l2))\" and\n  \"l1 \\<in> dom t\" and \"l2 \\<in> dom t\"\n  shows \n  \"\\<exists>F. finite F \n     \\<and> (\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p\n         \\<longrightarrow> env\\<lparr>s:(Object t)\\<rparr>\\<lparr>p:param(the(t l1))\\<rparr>\n             \\<turnstile> (the((f(l2 \\<mapsto> a)) l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(t l1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from ok_finite[OF typing_regular'[OF \\<open>env \\<turnstile> Obj f (Object t) : Object t\\<close>]]"], ["proof (chain)\npicking this:\n  finite (env_dom env)", "have finF: \"finite ({s,p} \\<union> env_dom env)\""], ["proof (prove)\nusing this:\n  finite (env_dom env)\n\ngoal (1 subgoal):\n 1. finite ({s, p} \\<union> env_dom env)", "by simp"], ["proof (state)\nthis:\n  finite ({s, p} \\<union> env_dom env)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "{"], ["proof (state)\nthis:\n  finite ({s, p} \\<union> env_dom env)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "note \n      ok_env = typing_regular'[OF \\<open>env \\<turnstile> Obj f (Object t) : Object t\\<close>] and\n      ok_env_sp = typing_regular'[OF assms(4)]"], ["proof (state)\nthis:\n  ok env\n  ok (env\\<lparr>s:Object t\\<rparr>\\<lparr>p:param (the (t l2))\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "fix sa pa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "assume \n      nin_sa: \"sa \\<notin> {s,p} \\<union> env_dom env\" and\n      nin_pa: \"pa \\<notin> {s,p} \\<union> env_dom env\" and \"sa \\<noteq> pa\""], ["proof (state)\nthis:\n  sa \\<notin> {s, p} \\<union> env_dom env\n  pa \\<notin> {s, p} \\<union> env_dom env\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from this(1) ok_add_2[OF ok_env_sp] env_add_dom_2[OF ok_env]"], ["proof (chain)\npicking this:\n  sa \\<notin> {s, p} \\<union> env_dom env\n  ok env \\<and>\n  s \\<notin> env_dom env \\<and> p \\<notin> env_dom env \\<and> s \\<noteq> p\n  \\<lbrakk>?x \\<notin> env_dom env; ?y \\<notin> env_dom env;\n   ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> env_dom\n                     (env\\<lparr>?x:?X\\<rparr>\\<lparr>?y:?Y\\<rparr>) =\n                    env_dom env \\<union> {?x, ?y}", "have \"sa \\<notin> env_dom (env\\<lparr>s:Object t\\<rparr>\\<lparr>p:param(the(t l2))\\<rparr>)\""], ["proof (prove)\nusing this:\n  sa \\<notin> {s, p} \\<union> env_dom env\n  ok env \\<and>\n  s \\<notin> env_dom env \\<and> p \\<notin> env_dom env \\<and> s \\<noteq> p\n  \\<lbrakk>?x \\<notin> env_dom env; ?y \\<notin> env_dom env;\n   ?x \\<noteq> ?y\\<rbrakk>\n  \\<Longrightarrow> env_dom\n                     (env\\<lparr>?x:?X\\<rparr>\\<lparr>?y:?Y\\<rparr>) =\n                    env_dom env \\<union> {?x, ?y}\n\ngoal (1 subgoal):\n 1. sa \\<notin> env_dom\n                 (env\\<lparr>s:Object\n                                t\\<rparr>\\<lparr>p:param\n              (the (t l2))\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  sa \\<notin> env_dom\n               (env\\<lparr>s:Object\n                              t\\<rparr>\\<lparr>p:param (the (t l2))\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from \n      nin_sa bigger_env_lemma[OF assms(4) this]\n      subst_add[of sa p \"env\\<lparr>s:Object t\\<rparr>\" \"Object t\" \"param(the(t l2))\"]\n      subst_add[of sa s env \"Object t\" \"Object t\"]"], ["proof (chain)\npicking this:\n  sa \\<notin> {s, p} \\<union> env_dom env\n  env\\<lparr>s:Object\n                t\\<rparr>\\<lparr>p:param\n                                    (the\n(t l2))\\<rparr>\\<lparr>sa:?X\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n                       s,Fvar p]\\<^esup> : return (the (t l2))\n  sa \\<noteq> p \\<Longrightarrow>\n  env\\<lparr>s:Object\n                t\\<rparr>\\<lparr>sa:Object\n                                     t\\<rparr>\\<lparr>p:param\n                   (the (t l2))\\<rparr> =\n  env\\<lparr>s:Object\n                t\\<rparr>\\<lparr>p:param\n                                    (the\n(t l2))\\<rparr>\\<lparr>sa:Object t\\<rparr>\n  sa \\<noteq> s \\<Longrightarrow>\n  env\\<lparr>sa:Object t\\<rparr>\\<lparr>s:Object t\\<rparr> =\n  env\\<lparr>s:Object t\\<rparr>\\<lparr>sa:Object t\\<rparr>", "have \n      aT_sa: \"env\\<lparr>sa:Object t\\<rparr>\\<lparr>s:Object t\\<rparr>\\<lparr>p:param(the(t l2))\\<rparr>\n              \\<turnstile> (a\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(t l2))\""], ["proof (prove)\nusing this:\n  sa \\<notin> {s, p} \\<union> env_dom env\n  env\\<lparr>s:Object\n                t\\<rparr>\\<lparr>p:param\n                                    (the\n(t l2))\\<rparr>\\<lparr>sa:?X\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n                       s,Fvar p]\\<^esup> : return (the (t l2))\n  sa \\<noteq> p \\<Longrightarrow>\n  env\\<lparr>s:Object\n                t\\<rparr>\\<lparr>sa:Object\n                                     t\\<rparr>\\<lparr>p:param\n                   (the (t l2))\\<rparr> =\n  env\\<lparr>s:Object\n                t\\<rparr>\\<lparr>p:param\n                                    (the\n(t l2))\\<rparr>\\<lparr>sa:Object t\\<rparr>\n  sa \\<noteq> s \\<Longrightarrow>\n  env\\<lparr>sa:Object t\\<rparr>\\<lparr>s:Object t\\<rparr> =\n  env\\<lparr>s:Object t\\<rparr>\\<lparr>sa:Object t\\<rparr>\n\ngoal (1 subgoal):\n 1. env\\<lparr>sa:Object\n                   t\\<rparr>\\<lparr>s:Object\n t\\<rparr>\\<lparr>p:param\n                     (the (t l2))\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n                            s,Fvar p]\\<^esup> : return (the (t l2))", "by simp"], ["proof (state)\nthis:\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>s:Object\n                                     t\\<rparr>\\<lparr>p:param\n                   (the (t l2))\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n                          s,Fvar p]\\<^esup> : return (the (t l2))\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from \n      \\<open>sa \\<noteq> pa\\<close> nin_sa nin_pa env_add_dom[OF ok_env] \n      ok_add_2[OF ok_env_sp]"], ["proof (chain)\npicking this:\n  sa \\<noteq> pa\n  sa \\<notin> {s, p} \\<union> env_dom env\n  pa \\<notin> {s, p} \\<union> env_dom env\n  ?x \\<notin> env_dom env \\<Longrightarrow>\n  env_dom (env\\<lparr>?x:?X\\<rparr>) = env_dom env \\<union> {?x}\n  ok env \\<and>\n  s \\<notin> env_dom env \\<and> p \\<notin> env_dom env \\<and> s \\<noteq> p", "obtain \n      \"s \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\" and\n      \"p \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\" and \"s \\<noteq> p\" and \n      \"sa \\<notin> env_dom env\" and \"pa \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\""], ["proof (prove)\nusing this:\n  sa \\<noteq> pa\n  sa \\<notin> {s, p} \\<union> env_dom env\n  pa \\<notin> {s, p} \\<union> env_dom env\n  ?x \\<notin> env_dom env \\<Longrightarrow>\n  env_dom (env\\<lparr>?x:?X\\<rparr>) = env_dom env \\<union> {?x}\n  ok env \\<and>\n  s \\<notin> env_dom env \\<and> p \\<notin> env_dom env \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>s \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>);\n      p \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>); s \\<noteq> p;\n      sa \\<notin> env_dom env;\n      pa \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\n  p \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\n  s \\<noteq> p\n  sa \\<notin> env_dom env\n  pa \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "with env_add_dom_2[OF ok_add_ok[OF ok_env this(4)] this(1-3)] nin_pa"], ["proof (chain)\npicking this:\n  env_dom\n   (env\\<lparr>sa:Object\n                   t\\<rparr>\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>) =\n  env_dom (env\\<lparr>sa:Object t\\<rparr>) \\<union> {s, p}\n  pa \\<notin> {s, p} \\<union> env_dom env\n  s \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\n  p \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\n  s \\<noteq> p\n  sa \\<notin> env_dom env\n  pa \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)", "have \"pa \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>\\<lparr>s:Object t\\<rparr>\\<lparr>p:param(the(t l2))\\<rparr>)\""], ["proof (prove)\nusing this:\n  env_dom\n   (env\\<lparr>sa:Object\n                   t\\<rparr>\\<lparr>s:?X\\<rparr>\\<lparr>p:?Y\\<rparr>) =\n  env_dom (env\\<lparr>sa:Object t\\<rparr>) \\<union> {s, p}\n  pa \\<notin> {s, p} \\<union> env_dom env\n  s \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\n  p \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\n  s \\<noteq> p\n  sa \\<notin> env_dom env\n  pa \\<notin> env_dom (env\\<lparr>sa:Object t\\<rparr>)\n\ngoal (1 subgoal):\n 1. pa \\<notin> env_dom\n                 (env\\<lparr>sa:Object\n                                 t\\<rparr>\\<lparr>s:Object\n               t\\<rparr>\\<lparr>p:param (the (t l2))\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  pa \\<notin> env_dom\n               (env\\<lparr>sa:Object\n                               t\\<rparr>\\<lparr>s:Object\n             t\\<rparr>\\<lparr>p:param (the (t l2))\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from \n      nin_pa bigger_env_lemma[OF aT_sa this]\n      subst_add[of pa p \"env\\<lparr>sa:Object t\\<rparr>\\<lparr>s:Object t\\<rparr>\" \n                   \"param(the(t l2))\" \"param(the(t l2))\"]\n      subst_add[of pa s \"env\\<lparr>sa:Object t\\<rparr>\" \"param(the(t l2))\" \"Object t\"]"], ["proof (chain)\npicking this:\n  pa \\<notin> {s, p} \\<union> env_dom env\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>s:Object\n                                     t\\<rparr>\\<lparr>p:param\n                   (the (t l2))\\<rparr>\\<lparr>pa:?X\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n         s,Fvar p]\\<^esup> : return (the (t l2))\n  pa \\<noteq> p \\<Longrightarrow>\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>s:Object\n                                     t\\<rparr>\\<lparr>pa:param\n                    (the (t l2))\\<rparr>\\<lparr>p:param\n             (the (t l2))\\<rparr> =\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>s:Object\n                                     t\\<rparr>\\<lparr>p:param\n                   (the (t l2))\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>\n  pa \\<noteq> s \\<Longrightarrow>\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>pa:param\n(the (t l2))\\<rparr>\\<lparr>s:Object t\\<rparr> =\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>s:Object\n                                     t\\<rparr>\\<lparr>pa:param\n                    (the (t l2))\\<rparr>", "have \n      aT_sapa: \n      \"env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param(the(t l2))\\<rparr>\\<lparr>s:Object t\\<rparr>\\<lparr>p:param(the(t l2))\\<rparr>\n      \\<turnstile> {0 \\<rightarrow> [Fvar s, Fvar p]} a : return(the(t l2))\""], ["proof (prove)\nusing this:\n  pa \\<notin> {s, p} \\<union> env_dom env\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>s:Object\n                                     t\\<rparr>\\<lparr>p:param\n                   (the (t l2))\\<rparr>\\<lparr>pa:?X\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n         s,Fvar p]\\<^esup> : return (the (t l2))\n  pa \\<noteq> p \\<Longrightarrow>\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>s:Object\n                                     t\\<rparr>\\<lparr>pa:param\n                    (the (t l2))\\<rparr>\\<lparr>p:param\n             (the (t l2))\\<rparr> =\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>s:Object\n                                     t\\<rparr>\\<lparr>p:param\n                   (the (t l2))\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>\n  pa \\<noteq> s \\<Longrightarrow>\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>pa:param\n(the (t l2))\\<rparr>\\<lparr>s:Object t\\<rparr> =\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>s:Object\n                                     t\\<rparr>\\<lparr>pa:param\n                    (the (t l2))\\<rparr>\n\ngoal (1 subgoal):\n 1. env\\<lparr>sa:Object\n                   t\\<rparr>\\<lparr>pa:param\n  (the (t l2))\\<rparr>\\<lparr>s:Object\n                                 t\\<rparr>\\<lparr>p:param\n               (the (t l2))\\<rparr> \\<turnstile> {0 \\<rightarrow> [Fvar\n                              s,Fvar p]} a : return (the (t l2))", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>pa:param\n(the (t l2))\\<rparr>\\<lparr>s:Object\n                               t\\<rparr>\\<lparr>p:param\n             (the (t l2))\\<rparr> \\<turnstile> {0 \\<rightarrow> [Fvar\n                            s,Fvar p]} a : return (the (t l2))\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from nin_sa nin_pa \\<open>s \\<notin> FV a\\<close> \\<open>p \\<notin> FV a\\<close> ok_add_2[OF ok_env_sp]"], ["proof (chain)\npicking this:\n  sa \\<notin> {s, p} \\<union> env_dom env\n  pa \\<notin> {s, p} \\<union> env_dom env\n  s \\<notin> FV a\n  p \\<notin> FV a\n  ok env \\<and>\n  s \\<notin> env_dom env \\<and> p \\<notin> env_dom env \\<and> s \\<noteq> p", "obtain \n      ninFV_s: \"s \\<notin> FV a \\<union> FV (Fvar sa) \\<union> FV (Fvar pa)\" and\n      ninFV_p: \"p \\<notin> FV a \\<union> FV (Fvar sa) \\<union> FV (Fvar pa)\" and \"s \\<noteq> p\""], ["proof (prove)\nusing this:\n  sa \\<notin> {s, p} \\<union> env_dom env\n  pa \\<notin> {s, p} \\<union> env_dom env\n  s \\<notin> FV a\n  p \\<notin> FV a\n  ok env \\<and>\n  s \\<notin> env_dom env \\<and> p \\<notin> env_dom env \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>s \\<notin> FV a \\<union> FV (Fvar sa) \\<union> FV (Fvar pa);\n      p \\<notin> FV a \\<union> FV (Fvar sa) \\<union> FV (Fvar pa);\n      s \\<noteq> p\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> FV a \\<union> FV (Fvar sa) \\<union> FV (Fvar pa)\n  p \\<notin> FV a \\<union> FV (Fvar sa) \\<union> FV (Fvar pa)\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from ok_add_2[OF typing_regular'[OF aT_sapa]]"], ["proof (chain)\npicking this:\n  ok (env\\<lparr>sa:Object\n                     t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>) \\<and>\n  s \\<notin> env_dom\n              (env\\<lparr>sa:Object\n                              t\\<rparr>\\<lparr>pa:param\n             (the (t l2))\\<rparr>) \\<and>\n  p \\<notin> env_dom\n              (env\\<lparr>sa:Object\n                              t\\<rparr>\\<lparr>pa:param\n             (the (t l2))\\<rparr>) \\<and>\n  s \\<noteq> p", "have ok_env_sapa: \"ok (env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param(the(t l2))\\<rparr>)\""], ["proof (prove)\nusing this:\n  ok (env\\<lparr>sa:Object\n                     t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>) \\<and>\n  s \\<notin> env_dom\n              (env\\<lparr>sa:Object\n                              t\\<rparr>\\<lparr>pa:param\n             (the (t l2))\\<rparr>) \\<and>\n  p \\<notin> env_dom\n              (env\\<lparr>sa:Object\n                              t\\<rparr>\\<lparr>pa:param\n             (the (t l2))\\<rparr>) \\<and>\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. ok (env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  ok (env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "with ok_add_reverse[OF this]"], ["proof (chain)\npicking this:\n  env\\<lparr>pa:param (the (t l2))\\<rparr>\\<lparr>sa:Object t\\<rparr> =\n  env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>\n  ok (env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>)", "have ok_env_pasa: \"ok (env\\<lparr>pa:param(the(t l2))\\<rparr>\\<lparr>sa:Object t\\<rparr>)\""], ["proof (prove)\nusing this:\n  env\\<lparr>pa:param (the (t l2))\\<rparr>\\<lparr>sa:Object t\\<rparr> =\n  env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>\n  ok (env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>)\n\ngoal (1 subgoal):\n 1. ok (env\\<lparr>pa:param (the (t l2))\\<rparr>\\<lparr>sa:Object t\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  ok (env\\<lparr>pa:param (the (t l2))\\<rparr>\\<lparr>sa:Object t\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from \n      open_lemma[OF aT_sapa ninFV_s ninFV_p \\<open>s \\<noteq> p\\<close> _\n                    T_Var[OF ok_env_sapa in_add[OF ok_env_sapa] \n                             add_get2_2[OF ok_env_sapa]]]\n      T_Var[OF ok_env_pasa in_add[OF ok_env_pasa] add_get2_2[OF ok_env_pasa]]\n      ok_add_reverse[OF ok_env_sapa]"], ["proof (chain)\npicking this:\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>pa:param\n(the (t l2))\\<rparr> \\<turnstile> Fvar sa : Object t \\<Longrightarrow>\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>pa:param\n(the (t l2))\\<rparr> \\<turnstile> {0 \\<rightarrow> [Fvar\n               sa,Fvar pa]} a : return (the (t l2))\n  env\\<lparr>pa:param\n                 (the (t l2))\\<rparr>\\<lparr>sa:Object\n           t\\<rparr> \\<turnstile> Fvar sa : Object t\n  env\\<lparr>pa:param (the (t l2))\\<rparr>\\<lparr>sa:Object t\\<rparr> =\n  env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>", "have \n      \"env\\<lparr>sa:(Object t)\\<rparr>\\<lparr>pa:param(the(t l2))\\<rparr> \n       \\<turnstile> (a\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) : return(the(t l2))\""], ["proof (prove)\nusing this:\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>pa:param\n(the (t l2))\\<rparr> \\<turnstile> Fvar sa : Object t \\<Longrightarrow>\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>pa:param\n(the (t l2))\\<rparr> \\<turnstile> {0 \\<rightarrow> [Fvar\n               sa,Fvar pa]} a : return (the (t l2))\n  env\\<lparr>pa:param\n                 (the (t l2))\\<rparr>\\<lparr>sa:Object\n           t\\<rparr> \\<turnstile> Fvar sa : Object t\n  env\\<lparr>pa:param (the (t l2))\\<rparr>\\<lparr>sa:Object t\\<rparr> =\n  env\\<lparr>sa:Object t\\<rparr>\\<lparr>pa:param (the (t l2))\\<rparr>\n\ngoal (1 subgoal):\n 1. env\\<lparr>sa:Object\n                   t\\<rparr>\\<lparr>pa:param\n  (the (t l2))\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n         sa,Fvar pa]\\<^esup> : return (the (t l2))", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  env\\<lparr>sa:Object\n                 t\\<rparr>\\<lparr>pa:param\n(the (t l2))\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n       sa,Fvar pa]\\<^esup> : return (the (t l2))\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?sa2 \\<notin> {s, p} \\<union> env_dom env;\n   ?pa2 \\<notin> {s, p} \\<union> env_dom env; ?sa2 \\<noteq> ?pa2\\<rbrakk>\n  \\<Longrightarrow> env\\<lparr>?sa2:Object\n                                     t\\<rparr>\\<lparr>?pa2:param\n                      (the (t l2))\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n                             ?sa2,Fvar ?pa2]\\<^esup> : return (the (t l2))\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "note alem = this"], ["proof (state)\nthis:\n  \\<lbrakk>?sa2 \\<notin> {s, p} \\<union> env_dom env;\n   ?pa2 \\<notin> {s, p} \\<union> env_dom env; ?sa2 \\<noteq> ?pa2\\<rbrakk>\n  \\<Longrightarrow> env\\<lparr>?sa2:Object\n                                     t\\<rparr>\\<lparr>?pa2:param\n                      (the (t l2))\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n                             ?sa2,Fvar ?pa2]\\<^esup> : return (the (t l2))\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "(* case split *)"], ["proof (state)\nthis:\n  \\<lbrakk>?sa2 \\<notin> {s, p} \\<union> env_dom env;\n   ?pa2 \\<notin> {s, p} \\<union> env_dom env; ?sa2 \\<noteq> ?pa2\\<rbrakk>\n  \\<Longrightarrow> env\\<lparr>?sa2:Object\n                                     t\\<rparr>\\<lparr>?pa2:param\n                      (the (t l2))\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n                             ?sa2,Fvar ?pa2]\\<^esup> : return (the (t l2))\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "proof (cases \"l1 = l2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l1 = l2 \\<Longrightarrow>\n    \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))\n 2. l1 \\<noteq> l2 \\<Longrightarrow>\n    \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "case True"], ["proof (state)\nthis:\n  l1 = l2\n\ngoal (2 subgoals):\n 1. l1 = l2 \\<Longrightarrow>\n    \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))\n 2. l1 \\<noteq> l2 \\<Longrightarrow>\n    \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "with assms obj_inv_elim'[OF assms(1)]"], ["proof (chain)\npicking this:\n  env \\<turnstile> Obj f (Object t) : Object t\n  s \\<notin> FV a\n  p \\<notin> FV a\n  env\\<lparr>s:Object\n                t\\<rparr>\\<lparr>p:param\n                                    (the\n(t l2))\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n  s,Fvar p]\\<^esup> : return (the (t l2))\n  l1 \\<in> dom t\n  l2 \\<in> dom t\n  \\<lbrakk>?s \\<notin> FV (Obj f (Object t)) \\<union> env_dom env;\n   ?p \\<notin> FV (Obj f (Object t)) \\<union> env_dom env;\n   ?s \\<noteq> ?p\\<rbrakk>\n  \\<Longrightarrow> dom f = do (Object t) \\<and>\n                    (\\<forall>l\\<in>do (Object t).\n                        env\\<lparr>?s:Object\n t\\<rparr>\\<lparr>?p:param\n                      (the Object\n                            t^l)\\<rparr> \\<turnstile> the\n                 (f l)\\<^bsup>[Fvar\n                                ?s,Fvar\n                                    ?p]\\<^esup> : return (the Object t^l))\n  l1 = l2", "show ?thesis"], ["proof (prove)\nusing this:\n  env \\<turnstile> Obj f (Object t) : Object t\n  s \\<notin> FV a\n  p \\<notin> FV a\n  env\\<lparr>s:Object\n                t\\<rparr>\\<lparr>p:param\n                                    (the\n(t l2))\\<rparr> \\<turnstile> a\\<^bsup>[Fvar\n  s,Fvar p]\\<^esup> : return (the (t l2))\n  l1 \\<in> dom t\n  l2 \\<in> dom t\n  \\<lbrakk>?s \\<notin> FV (Obj f (Object t)) \\<union> env_dom env;\n   ?p \\<notin> FV (Obj f (Object t)) \\<union> env_dom env;\n   ?s \\<noteq> ?p\\<rbrakk>\n  \\<Longrightarrow> dom f = do (Object t) \\<and>\n                    (\\<forall>l\\<in>do (Object t).\n                        env\\<lparr>?s:Object\n t\\<rparr>\\<lparr>?p:param\n                      (the Object\n                            t^l)\\<rparr> \\<turnstile> the\n                 (f l)\\<^bsup>[Fvar\n                                ?s,Fvar\n                                    ?p]\\<^esup> : return (the Object t^l))\n  l1 = l2\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "by (simp (no_asm_simp), rule_tac x = \"{s,p} \\<union> env_dom env\" in exI,\n          auto simp: finF alem)"], ["proof (state)\nthis:\n  \\<exists>F.\n     finite F \\<and>\n     (\\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:Object\n                       t\\<rparr>\\<lparr>p:param\n     (the (t l1))\\<rparr> \\<turnstile> the\n  ((f(l2 \\<mapsto> a))\n    l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))\n\ngoal (1 subgoal):\n 1. l1 \\<noteq> l2 \\<Longrightarrow>\n    \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l1 \\<noteq> l2 \\<Longrightarrow>\n    \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "case False"], ["proof (state)\nthis:\n  l1 \\<noteq> l2\n\ngoal (1 subgoal):\n 1. l1 \\<noteq> l2 \\<Longrightarrow>\n    \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from obj_inv_elim[OF \\<open>env \\<turnstile> Obj f (Object t) : Object t\\<close>]"], ["proof (chain)\npicking this:\n  dom f = do (Object t) \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do (Object t).\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             env\\<lparr>s:Object\n                           t\\<rparr>\\<lparr>p:param\n         (the Object\n               t^l)\\<rparr> \\<turnstile> the\n    (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l)))", "obtain F where \n      \"finite F\" and\n      \"\\<forall>l\\<in>dom t. \n        \\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p\n         \\<longrightarrow> env\\<lparr>s:Object t\\<rparr>\\<lparr>p:param(the(Object t^l))\\<rparr>\n             \\<turnstile> (the(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(Object t^l))\""], ["proof (prove)\nusing this:\n  dom f = do (Object t) \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do (Object t).\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             env\\<lparr>s:Object\n                           t\\<rparr>\\<lparr>p:param\n         (the Object\n               t^l)\\<rparr> \\<turnstile> the\n    (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l)))\n\ngoal (1 subgoal):\n 1. (\\<And>F.\n        \\<lbrakk>finite F;\n         \\<forall>l\\<in>dom t.\n            \\<forall>s p.\n               s \\<notin> F \\<and>\n               p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n               env\\<lparr>s:Object\n                             t\\<rparr>\\<lparr>p:param\n           (the Object\n                 t^l)\\<rparr> \\<turnstile> the\n      (f l)\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> : return (the Object t^l)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite F\n  \\<forall>l\\<in>dom t.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:Object\n                      t\\<rparr>\\<lparr>p:param\n    (the Object\n          t^l)\\<rparr> \\<turnstile> the (f\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l)\n\ngoal (1 subgoal):\n 1. l1 \\<noteq> l2 \\<Longrightarrow>\n    \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "from this(2) \\<open>l1 \\<in> dom t\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom t.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:Object\n                      t\\<rparr>\\<lparr>p:param\n    (the Object\n          t^l)\\<rparr> \\<turnstile> the (f\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l)\n  l1 \\<in> dom t", "have \n      \"\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p\n        \\<longrightarrow> env\\<lparr>s:Object t\\<rparr>\\<lparr>p:param(the(Object t^l1))\\<rparr>\n            \\<turnstile> (the(f l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(Object t^l1))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom t.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:Object\n                      t\\<rparr>\\<lparr>p:param\n    (the Object\n          t^l)\\<rparr> \\<turnstile> the (f\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l)\n  l1 \\<in> dom t\n\ngoal (1 subgoal):\n 1. \\<forall>s p.\n       s \\<notin> F \\<and>\n       p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n       env\\<lparr>s:Object\n                     t\\<rparr>\\<lparr>p:param\n   (the Object\n         t^l1)\\<rparr> \\<turnstile> the (f\n    l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l1)", "by auto"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:Object\n                   t\\<rparr>\\<lparr>p:param\n (the Object\n       t^l1)\\<rparr> \\<turnstile> the (f\n  l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l1)\n\ngoal (1 subgoal):\n 1. l1 \\<noteq> l2 \\<Longrightarrow>\n    \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:Object\n                   t\\<rparr>\\<lparr>p:param\n (the Object\n       t^l1)\\<rparr> \\<turnstile> the (f\n  l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l1)\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "using \\<open>finite F\\<close> \\<open>l1 \\<noteq> l2\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:Object\n                   t\\<rparr>\\<lparr>p:param\n (the Object\n       t^l1)\\<rparr> \\<turnstile> the (f\n  l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l1)\n  finite F\n  l1 \\<noteq> l2\n\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:Object\n                         t\\<rparr>\\<lparr>p:param\n       (the (t l1))\\<rparr> \\<turnstile> the\n    ((f(l2 \\<mapsto> a))\n      l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))", "by (simp,blast)"], ["proof (state)\nthis:\n  \\<exists>F.\n     finite F \\<and>\n     (\\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:Object\n                       t\\<rparr>\\<lparr>p:param\n     (the (t l1))\\<rparr> \\<turnstile> the\n  ((f(l2 \\<mapsto> a))\n    l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>F.\n     finite F \\<and>\n     (\\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:Object\n                       t\\<rparr>\\<lparr>p:param\n     (the (t l1))\\<rparr> \\<turnstile> the\n  ((f(l2 \\<mapsto> a))\n    l1)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the (t l1)))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Main Lemma\\<close>"], ["", "(* TODO: refactor to work with typing_induct *)"], ["", "lemma subject_reduction: \"e \\<turnstile> t : T \\<Longrightarrow> (\\<And>t'. t \\<rightarrow>\\<^sub>\\<beta> t' \\<Longrightarrow> e \\<turnstile> t' : T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> t : T \\<Longrightarrow>\n    (\\<And>t'. t -> t' \\<Longrightarrow> e \\<turnstile> t' : T)", "proof (induct set: typing)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>env x T t'.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        Fvar x -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>env b A F t'.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x.\n                  the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n                  x \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        Obj b A -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 3. \\<And>F env A l n a t'.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x.\n               n\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        l \\<in> do A; Upd a l n -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 4. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "case (T_Var env x T t')"], ["proof (state)\nthis:\n  ok env\n  x \\<in> env_dom env\n  the env!x = T\n  Fvar x -> t'\n\ngoal (4 subgoals):\n 1. \\<And>env x T t'.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T;\n        Fvar x -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>env b A F t'.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x.\n                  the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n                  x \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        Obj b A -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 3. \\<And>F env A l n a t'.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x.\n               n\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        l \\<in> do A; Upd a l n -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 4. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "from Fvar_beta[OF \\<open>Fvar x \\<rightarrow>\\<^sub>\\<beta> t'\\<close>]"], ["proof (chain)\npicking this:\n  False", "show ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : T", "by simp"], ["proof (state)\nthis:\n  env \\<turnstile> t' : T\n\ngoal (3 subgoals):\n 1. \\<And>env b A F t'.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x.\n                  the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n                  x \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        Obj b A -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 2. \\<And>F env A l n a t'.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x.\n               n\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        l \\<in> do A; Upd a l n -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 3. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>env b A F t'.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x.\n                  the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n                  x \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        Obj b A -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 2. \\<And>F env A l n a t'.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x.\n               n\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        l \\<in> do A; Upd a l n -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 3. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "case (T_Upd F env T l t2 t1 t')"], ["proof (state)\nthis:\n  finite F\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  env \\<turnstile> t1 : T\n  t1 -> ?t' \\<Longrightarrow> env \\<turnstile> ?t' : T\n  l \\<in> do T\n  Upd t1 l t2 -> t'\n\ngoal (3 subgoals):\n 1. \\<And>env b A F t'.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x.\n                  the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n                  x \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        Obj b A -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 2. \\<And>F env A l n a t'.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>x.\n               n\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        l \\<in> do A; Upd a l n -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 3. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "from Upd_beta[OF \\<open>Upd t1 l t2 \\<rightarrow>\\<^sub>\\<beta> t'\\<close>]"], ["proof (chain)\npicking this:\n  (\\<exists>t'a. t1 -> t'a \\<and> t' = Upd t'a l t2) \\<or>\n  (\\<exists>u' L.\n      finite L \\<and>\n      (\\<forall>s p.\n          s \\<notin> L \\<and>\n          p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n          (\\<exists>t''.\n              t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n              u' = \\<sigma>[s,p] t'')) \\<and>\n      t' = Upd t1 l u') \\<or>\n  (\\<exists>f T.\n      l \\<in> dom f \\<and>\n      Obj f T = t1 \\<and> t' = Obj (f(l \\<mapsto> t2)) T)", "show ?case"], ["proof (prove)\nusing this:\n  (\\<exists>t'a. t1 -> t'a \\<and> t' = Upd t'a l t2) \\<or>\n  (\\<exists>u' L.\n      finite L \\<and>\n      (\\<forall>s p.\n          s \\<notin> L \\<and>\n          p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n          (\\<exists>t''.\n              t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n              u' = \\<sigma>[s,p] t'')) \\<and>\n      t' = Upd t1 l u') \\<or>\n  (\\<exists>f T.\n      l \\<in> dom f \\<and>\n      Obj f T = t1 \\<and> t' = Obj (f(l \\<mapsto> t2)) T)\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : T", "proof (elim disjE exE conjE)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t'a.\n       \\<lbrakk>t1 -> t'a; t' = Upd t'a l t2\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>u' L.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               u' = \\<sigma>[s,p] t'');\n        t' = Upd t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 3. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "fix t1'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t'a.\n       \\<lbrakk>t1 -> t'a; t' = Upd t'a l t2\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>u' L.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               u' = \\<sigma>[s,p] t'');\n        t' = Upd t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 3. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "assume \"t1 \\<rightarrow>\\<^sub>\\<beta> t1'\" and \"t' = Upd t1' l t2\""], ["proof (state)\nthis:\n  t1 -> t1'\n  t' = Upd t1' l t2\n\ngoal (3 subgoals):\n 1. \\<And>t'a.\n       \\<lbrakk>t1 -> t'a; t' = Upd t'a l t2\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>u' L.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               u' = \\<sigma>[s,p] t'');\n        t' = Upd t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 3. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "from \n      this(2) T_Upd(2) \n      typing.T_Upd[OF \\<open>finite F\\<close> _ T_Upd(4)[OF this(1)] \\<open>l \\<in> do T\\<close>]"], ["proof (chain)\npicking this:\n  t' = Upd t1' l t2\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> ?n\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<Longrightarrow>\n  env \\<turnstile> Upd t1' l ?n : T", "show ?case"], ["proof (prove)\nusing this:\n  t' = Upd t1' l t2\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> ?n\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<Longrightarrow>\n  env \\<turnstile> Upd t1' l ?n : T\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : T", "by simp"], ["proof (state)\nthis:\n  env \\<turnstile> t' : T\n\ngoal (2 subgoals):\n 1. \\<And>u' L.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               u' = \\<sigma>[s,p] t'');\n        t' = Upd t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u' L.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               u' = \\<sigma>[s,p] t'');\n        t' = Upd t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "fix t2' F'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u' L.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               u' = \\<sigma>[s,p] t'');\n        t' = Upd t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "assume \n      \"finite F'\" and\n      pred_F': \"\\<forall>s p. s \\<notin> F' \\<and> p \\<notin> F' \\<and> s \\<noteq> p \n                 \\<longrightarrow> (\\<exists>t''. t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> t2' = \\<sigma>[s,p] t'')\"  and\n      t': \"t' = Upd t1 l t2'\""], ["proof (state)\nthis:\n  finite F'\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         t2' = \\<sigma>[s,p] t'')\n  t' = Upd t1 l t2'\n\ngoal (2 subgoals):\n 1. \\<And>u' L.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               u' = \\<sigma>[s,p] t'');\n        t' = Upd t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "have \n      \"\\<forall>s p. s \\<notin> F \\<union> F' \\<and> p \\<notin> F \\<union> F' \\<and> s \\<noteq> p\n        \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \\<turnstile> (t2'\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s p.\n       s \\<notin> F \\<union> F' \\<and>\n       p \\<notin> F \\<union> F' \\<and> s \\<noteq> p \\<longrightarrow>\n       env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n  (the T^l)\\<rparr> \\<turnstile> t2'\\<^bsup>[Fvar\n        s,Fvar p]\\<^esup> : return (the T^l)", "proof (intro strip, elim conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>s \\<notin> F \\<union> F'; p \\<notin> F \\<union> F';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l)\\<rparr> \\<turnstile> t2'\\<^bsup>[Fvar\n                          s,Fvar p]\\<^esup> : return (the T^l)", "fix s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>s \\<notin> F \\<union> F'; p \\<notin> F \\<union> F';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l)\\<rparr> \\<turnstile> t2'\\<^bsup>[Fvar\n                          s,Fvar p]\\<^esup> : return (the T^l)", "assume \n        nin_s: \"s \\<notin> F \\<union> F'\" and\n        nin_p: \"p \\<notin> F \\<union> F'\" and \"s \\<noteq> p\""], ["proof (state)\nthis:\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>s \\<notin> F \\<union> F'; p \\<notin> F \\<union> F';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l)\\<rparr> \\<turnstile> t2'\\<^bsup>[Fvar\n                          s,Fvar p]\\<^esup> : return (the T^l)", "with pred_F'"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         t2' = \\<sigma>[s,p] t'')\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p", "obtain t'' where \"t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t''\" and \"t2' = \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         t2' = \\<sigma>[s,p] t'')\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'';\n         t2' = \\<sigma>[s,p] t''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t''\n  t2' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>s \\<notin> F \\<union> F'; p \\<notin> F \\<union> F';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l)\\<rparr> \\<turnstile> t2'\\<^bsup>[Fvar\n                          s,Fvar p]\\<^esup> : return (the T^l)", "with beta_lc[OF this(1)] sopen_sclose_eq_t[of t'' 0 s p]"], ["proof (chain)\npicking this:\n  lc (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t''\n  lc t'' \\<Longrightarrow>\n  {0 \\<rightarrow> [Fvar s,Fvar p]} {0 \\<leftarrow> [s,p]} t'' = t''\n  t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t''\n  t2' = \\<sigma>[s,p] t''", "have \"t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> (t2'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  lc (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t''\n  lc t'' \\<Longrightarrow>\n  {0 \\<rightarrow> [Fvar s,Fvar p]} {0 \\<leftarrow> [s,p]} t'' = t''\n  t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t''\n  t2' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n    (t2'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by (simp add: openz_def closez_def)"], ["proof (state)\nthis:\n  t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> (t2'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>s \\<notin> F \\<union> F'; p \\<notin> F \\<union> F';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l)\\<rparr> \\<turnstile> t2'\\<^bsup>[Fvar\n                          s,Fvar p]\\<^esup> : return (the T^l)", "with nin_s nin_p \\<open>s \\<noteq> p\\<close> T_Upd(2)"], ["proof (chain)\npicking this:\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> (t2'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "show \"env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \\<turnstile> (t2'\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l))\""], ["proof (prove)\nusing this:\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> (t2'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                                     (the\n T^l)\\<rparr> \\<turnstile> t2'\\<^bsup>[Fvar\n  s,Fvar p]\\<^esup> : return (the T^l)", "by auto"], ["proof (state)\nthis:\n  env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                                   (the T^l)\\<rparr> \\<turnstile> t2'\\<^bsup>[Fvar\n   s,Fvar p]\\<^esup> : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> F \\<union> F' \\<and>\n     p \\<notin> F \\<union> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2'\\<^bsup>[Fvar\n      s,Fvar p]\\<^esup> : return (the T^l)\n\ngoal (2 subgoals):\n 1. \\<And>u' L.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               u' = \\<sigma>[s,p] t'');\n        t' = Upd t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T\n 2. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "from t' \\<open>finite F\\<close> \\<open>finite F'\\<close> typing.T_Upd[OF _ this \\<open>env \\<turnstile> t1 : T\\<close> \\<open>l \\<in> do T\\<close>]"], ["proof (chain)\npicking this:\n  t' = Upd t1 l t2'\n  finite F\n  finite F'\n  finite (F \\<union> F') \\<Longrightarrow> env \\<turnstile> Upd t1 l t2' : T", "show ?case"], ["proof (prove)\nusing this:\n  t' = Upd t1 l t2'\n  finite F\n  finite F'\n  finite (F \\<union> F') \\<Longrightarrow> env \\<turnstile> Upd t1 l t2' : T\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : T", "by simp"], ["proof (state)\nthis:\n  env \\<turnstile> t' : T\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "fix f U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "assume \n      \"l \\<in> dom f\" and \"Obj f U = t1\" and \n      t': \"t' = Obj (f(l \\<mapsto> t2)) U\""], ["proof (state)\nthis:\n  l \\<in> dom f\n  Obj f U = t1\n  t' = Obj (f(l \\<mapsto> t2)) U\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "from this(1-2) \\<open>env \\<turnstile> t1 : T\\<close> obj_inv[of env f U T]"], ["proof (chain)\npicking this:\n  l \\<in> dom f\n  Obj f U = t1\n  env \\<turnstile> t1 : T\n  env \\<turnstile> Obj f U : T \\<Longrightarrow> T = U", "obtain t where \n      objT: \"env \\<turnstile> Obj f (Object t) : (Object t)\" and \n      \"Object t = T\" and \"T = U\""], ["proof (prove)\nusing this:\n  l \\<in> dom f\n  Obj f U = t1\n  env \\<turnstile> t1 : T\n  env \\<turnstile> Obj f U : T \\<Longrightarrow> T = U\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>env \\<turnstile> Obj f (Object t) : Object t; Object t = T;\n         T = U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases T, auto)"], ["proof (state)\nthis:\n  env \\<turnstile> Obj f (Object t) : Object t\n  Object t = T\n  T = U\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "from obj_inv_elim[OF objT] \\<open>Object t = T\\<close> \\<open>l \\<in> dom f\\<close>"], ["proof (chain)\npicking this:\n  dom f = do (Object t) \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do (Object t).\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             env\\<lparr>s:Object\n                           t\\<rparr>\\<lparr>p:param\n         (the Object\n               t^l)\\<rparr> \\<turnstile> the\n    (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l)))\n  Object t = T\n  l \\<in> dom f", "have domf': \"dom (f(l \\<mapsto> t2)) = do T\""], ["proof (prove)\nusing this:\n  dom f = do (Object t) \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do (Object t).\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             env\\<lparr>s:Object\n                           t\\<rparr>\\<lparr>p:param\n         (the Object\n               t^l)\\<rparr> \\<turnstile> the\n    (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the Object t^l)))\n  Object t = T\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. dom (f(l \\<mapsto> t2)) = do T", "by auto"], ["proof (state)\nthis:\n  dom (f(l \\<mapsto> t2)) = do T\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "have \n      exF: \"\\<forall>l'\\<in>do T. \n             (\\<exists>F'. finite F' \n                 \\<and> (\\<forall>s p. s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and> p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and> s \\<noteq> p \n                     \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l'))\\<rparr>\n                         \\<turnstile> (the ((f(l \\<mapsto> t2)) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l'))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l'\\<in>do T.\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n         (the T^l')\\<rparr> \\<turnstile> the\n    ((f(l \\<mapsto> t2))\n      l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l'.\n       l' \\<in> do T \\<Longrightarrow>\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n         (the T^l')\\<rparr> \\<turnstile> the\n    ((f(l \\<mapsto> t2))\n      l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "fix l'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l'.\n       l' \\<in> do T \\<Longrightarrow>\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n         (the T^l')\\<rparr> \\<turnstile> the\n    ((f(l \\<mapsto> t2))\n      l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "assume \"l' \\<in> do T\""], ["proof (state)\nthis:\n  l' \\<in> do T\n\ngoal (1 subgoal):\n 1. \\<And>l'.\n       l' \\<in> do T \\<Longrightarrow>\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n         (the T^l')\\<rparr> \\<turnstile> the\n    ((f(l \\<mapsto> t2))\n      l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "with dom_lem[OF objT] \\<open>l \\<in> dom f\\<close> \\<open>Object t = T\\<close>"], ["proof (chain)\npicking this:\n  dom f = dom t\n  l \\<in> dom f\n  Object t = T\n  l' \\<in> do T", "obtain ll': \"l' \\<in> dom t\" and \"l \\<in> dom t\""], ["proof (prove)\nusing this:\n  dom f = dom t\n  l \\<in> dom f\n  Object t = T\n  l' \\<in> do T\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>l' \\<in> dom t; l \\<in> dom t\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l' \\<in> dom t\n  l \\<in> dom t\n\ngoal (1 subgoal):\n 1. \\<And>l'.\n       l' \\<in> do T \\<Longrightarrow>\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n         (the T^l')\\<rparr> \\<turnstile> the\n    ((f(l \\<mapsto> t2))\n      l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "from \\<open>finite F\\<close>"], ["proof (chain)\npicking this:\n  finite F", "have \"finite (F \\<union> FV t2)\""], ["proof (prove)\nusing this:\n  finite F\n\ngoal (1 subgoal):\n 1. finite (F \\<union> FV t2)", "by simp"], ["proof (state)\nthis:\n  finite (F \\<union> FV t2)\n\ngoal (1 subgoal):\n 1. \\<And>l'.\n       l' \\<in> do T \\<Longrightarrow>\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n         (the T^l')\\<rparr> \\<turnstile> the\n    ((f(l \\<mapsto> t2))\n      l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "from exFresh_s_p_cof[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>s p.\n     s \\<notin> F \\<union> FV t2 \\<and>\n     p \\<notin> F \\<union> FV t2 \\<and> s \\<noteq> p", "obtain s p where \n        nin_s: \"s \\<notin> F \\<union> FV t2\" and \n        nin_p: \"p \\<notin> F \\<union> FV t2\" and \"s \\<noteq> p\""], ["proof (prove)\nusing this:\n  \\<exists>s p.\n     s \\<notin> F \\<union> FV t2 \\<and>\n     p \\<notin> F \\<union> FV t2 \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>s p.\n        \\<lbrakk>s \\<notin> F \\<union> FV t2; p \\<notin> F \\<union> FV t2;\n         s \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> F \\<union> FV t2\n  p \\<notin> F \\<union> FV t2\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>l'.\n       l' \\<in> do T \\<Longrightarrow>\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n         (the T^l')\\<rparr> \\<turnstile> the\n    ((f(l \\<mapsto> t2))\n      l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "with T_Upd(2) \\<open>Object t = T\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  Object t = T\n  s \\<notin> F \\<union> FV t2\n  p \\<notin> F \\<union> FV t2\n  s \\<noteq> p", "have \n        \"env\\<lparr>s:Object t\\<rparr>\\<lparr>p:param(the(t l))\\<rparr> \n         \\<turnstile> (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(t l))\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n     s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n     (\\<forall>x.\n         t2\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  Object t = T\n  s \\<notin> F \\<union> FV t2\n  p \\<notin> F \\<union> FV t2\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. env\\<lparr>s:Object\n                  t\\<rparr>\\<lparr>p:param\n(the (t l))\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n       s,Fvar p]\\<^esup> : return (the (t l))", "by auto"], ["proof (state)\nthis:\n  env\\<lparr>s:Object\n                t\\<rparr>\\<lparr>p:param\n                                    (the\n(t l))\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n  s,Fvar p]\\<^esup> : return (the (t l))\n\ngoal (1 subgoal):\n 1. \\<And>l'.\n       l' \\<in> do T \\<Longrightarrow>\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n         (the T^l')\\<rparr> \\<turnstile> the\n    ((f(l \\<mapsto> t2))\n      l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "from \n        select_preserve_type[OF objT _ _ this ll'] sym[OF \\<open>Object t = T\\<close>]\n        nin_s nin_p \\<open>l \\<in> dom t\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>s \\<notin> FV t2; p \\<notin> FV t2; l \\<in> dom t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>F.\n                       finite F \\<and>\n                       (\\<forall>s p.\n                           s \\<notin> F \\<and>\n                           p \\<notin> F \\<and>\n                           s \\<noteq> p \\<longrightarrow>\n                           env\\<lparr>s:Object\n   t\\<rparr>\\<lparr>p:param\n                       (the (t l'))\\<rparr> \\<turnstile> the\n                    ((f(l \\<mapsto> t2))\n                      l')\\<^bsup>[Fvar\n                                   s,Fvar p]\\<^esup> : return (the (t l')))\n  T = Object t\n  s \\<notin> F \\<union> FV t2\n  p \\<notin> F \\<union> FV t2\n  l \\<in> dom t", "obtain F' where \n        \"finite F'\" and\n        \"\\<forall>s p. s \\<notin> F' \\<and> p \\<notin> F' \\<and> s \\<noteq> p\n          \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l'))\\<rparr>\n              \\<turnstile> (the ((f(l \\<mapsto> t2)) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l'))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<notin> FV t2; p \\<notin> FV t2; l \\<in> dom t\\<rbrakk>\n  \\<Longrightarrow> \\<exists>F.\n                       finite F \\<and>\n                       (\\<forall>s p.\n                           s \\<notin> F \\<and>\n                           p \\<notin> F \\<and>\n                           s \\<noteq> p \\<longrightarrow>\n                           env\\<lparr>s:Object\n   t\\<rparr>\\<lparr>p:param\n                       (the (t l'))\\<rparr> \\<turnstile> the\n                    ((f(l \\<mapsto> t2))\n                      l')\\<^bsup>[Fvar\n                                   s,Fvar p]\\<^esup> : return (the (t l')))\n  T = Object t\n  s \\<notin> F \\<union> FV t2\n  p \\<notin> F \\<union> FV t2\n  l \\<in> dom t\n\ngoal (1 subgoal):\n 1. (\\<And>F'.\n        \\<lbrakk>finite F';\n         \\<forall>s p.\n            s \\<notin> F' \\<and>\n            p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l')\\<rparr> \\<turnstile> the\n  ((f(l \\<mapsto> t2))\n    l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite F'\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l')\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\nl')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\n\ngoal (1 subgoal):\n 1. \\<And>l'.\n       l' \\<in> do T \\<Longrightarrow>\n       \\<exists>F'.\n          finite F' \\<and>\n          (\\<forall>s p.\n              s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n              s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n         (the T^l')\\<rparr> \\<turnstile> the\n    ((f(l \\<mapsto> t2))\n      l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "thus \n        \"\\<exists>F'. finite F' \n            \\<and> (\\<forall>s p. s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and> p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and> s \\<noteq> p\n                \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l'))\\<rparr>\n                    \\<turnstile> (the ((f(l \\<mapsto> t2)) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l')))\""], ["proof (prove)\nusing this:\n  finite F'\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l')\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\nl')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\n\ngoal (1 subgoal):\n 1. \\<exists>F'.\n       finite F' \\<and>\n       (\\<forall>s p.\n           s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n           p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n           s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l')\\<rparr> \\<turnstile> the\n ((f(l \\<mapsto> t2))\n   l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))", "by blast"], ["proof (state)\nthis:\n  \\<exists>F'.\n     finite F' \\<and>\n     (\\<forall>s p.\n         s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n         p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n         s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l')\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n    l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l'\\<in>do T.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n            p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n            s \\<noteq> p \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l')\\<rparr> \\<turnstile> the\n  ((f(l \\<mapsto> t2))\n    l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "{"], ["proof (state)\nthis:\n  \\<forall>l'\\<in>do T.\n     \\<exists>F'.\n        finite F' \\<and>\n        (\\<forall>s p.\n            s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n            p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n            s \\<noteq> p \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l')\\<rparr> \\<turnstile> the\n  ((f(l \\<mapsto> t2))\n    l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l'))\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "fix Ta"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "from finite_dom_fmap"], ["proof (chain)\npicking this:\n  finite (dom ?F)", "have \"finite (do Ta)\""], ["proof (prove)\nusing this:\n  finite (dom ?F)\n\ngoal (1 subgoal):\n 1. finite (do Ta)", "by (cases Ta, auto)"], ["proof (state)\nthis:\n  finite (do Ta)\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "}"], ["proof (state)\nthis:\n  finite (do ?Taa2)\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "note fin_doT = this ball_ex_finite[of \"do T\" \"F \\<union> FV t2\"]"], ["proof (state)\nthis:\n  finite (do ?Taa2)\n  \\<lbrakk>finite (do T); finite (F \\<union> FV t2);\n   \\<forall>x\\<in>do T.\n      \\<exists>F'.\n         finite F' \\<and>\n         (\\<forall>s p.\n             s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n             p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n             s \\<noteq> p \\<longrightarrow>\n             ?P x s p)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>F'.\n                       finite F' \\<and>\n                       (\\<forall>x\\<in>do T.\n                           \\<forall>s p.\n                              s \\<notin> F' \\<union>\n   (F \\<union> FV t2) \\<and>\n                              p \\<notin> F' \\<union>\n   (F \\<union> FV t2) \\<and>\n                              s \\<noteq> p \\<longrightarrow>\n                              ?P x s p)\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "from this(2)[OF this(1)[of T] _ exF] \\<open>finite F\\<close>"], ["proof (chain)\npicking this:\n  finite (F \\<union> FV t2) \\<Longrightarrow>\n  \\<exists>F'.\n     finite F' \\<and>\n     (\\<forall>x\\<in>do T.\n         \\<forall>s p.\n            s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n            p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n            s \\<noteq> p \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^x)\\<rparr> \\<turnstile> the\n ((f(l \\<mapsto> t2)) x)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^x))\n  finite F", "obtain F' where \n      \"finite F'\" and\n      \"\\<forall>l'\\<in>do T. \\<forall>s p. s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and> p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and> s \\<noteq> p\n                   \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l'))\\<rparr>\n                       \\<turnstile> (the ((f(l \\<mapsto> t2)) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l'))\""], ["proof (prove)\nusing this:\n  finite (F \\<union> FV t2) \\<Longrightarrow>\n  \\<exists>F'.\n     finite F' \\<and>\n     (\\<forall>x\\<in>do T.\n         \\<forall>s p.\n            s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n            p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n            s \\<noteq> p \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^x)\\<rparr> \\<turnstile> the\n ((f(l \\<mapsto> t2)) x)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^x))\n  finite F\n\ngoal (1 subgoal):\n 1. (\\<And>F'.\n        \\<lbrakk>finite F';\n         \\<forall>l'\\<in>do T.\n            \\<forall>s p.\n               s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n               p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n               s \\<noteq> p \\<longrightarrow>\n               env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l')\\<rparr> \\<turnstile> the\n     ((f(l \\<mapsto> t2))\n       l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite F'\n  \\<forall>l'\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l')\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n   l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "moreover"], ["proof (state)\nthis:\n  finite F'\n  \\<forall>l'\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l')\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n   l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "from \\<open>finite F'\\<close> \\<open>finite F\\<close>"], ["proof (chain)\npicking this:\n  finite F'\n  finite F", "have \"finite (F' \\<union> (F \\<union> FV t2))\""], ["proof (prove)\nusing this:\n  finite F'\n  finite F\n\ngoal (1 subgoal):\n 1. finite (F' \\<union> (F \\<union> FV t2))", "by simp"], ["proof (state)\nthis:\n  finite (F' \\<union> (F \\<union> FV t2))\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "note typing.T_Obj[OF typing_regular'[OF \\<open>env \\<turnstile> t1 : T\\<close>] domf' this]"], ["proof (state)\nthis:\n  \\<forall>la\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^la)\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n   la)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^la) \\<Longrightarrow>\n  env \\<turnstile> Obj (f(l \\<mapsto> t2)) T : T\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>l \\<in> dom f; Obj f T = t1;\n        t' = Obj (f(l \\<mapsto> t2)) T\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "ultimately"], ["proof (chain)\npicking this:\n  finite F'\n  \\<forall>l'\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l')\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n   l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\n  \\<forall>la\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^la)\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n   la)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^la) \\<Longrightarrow>\n  env \\<turnstile> Obj (f(l \\<mapsto> t2)) T : T", "show ?case"], ["proof (prove)\nusing this:\n  finite F'\n  \\<forall>l'\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l')\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n   l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\n  \\<forall>la\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^la)\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n   la)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^la) \\<Longrightarrow>\n  env \\<turnstile> Obj (f(l \\<mapsto> t2)) T : T\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : T", "using t' \\<open>T = U\\<close>"], ["proof (prove)\nusing this:\n  finite F'\n  \\<forall>l'\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l')\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n   l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\n  \\<forall>la\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        p \\<notin> F' \\<union> (F \\<union> FV t2) \\<and>\n        s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^la)\\<rparr> \\<turnstile> the ((f(l \\<mapsto> t2))\n   la)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^la) \\<Longrightarrow>\n  env \\<turnstile> Obj (f(l \\<mapsto> t2)) T : T\n  t' = Obj (f(l \\<mapsto> t2)) U\n  T = U\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : T", "by auto"], ["proof (state)\nthis:\n  env \\<turnstile> t' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  env \\<turnstile> t' : T\n\ngoal (2 subgoals):\n 1. \\<And>env b A F t'.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x.\n                  the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n                  x \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        Obj b A -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 2. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>env b A F t'.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x.\n                  the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n                  x \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        Obj b A -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 2. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "case (T_Obj env f T F t')"], ["proof (state)\nthis:\n  ok env\n  dom f = do T\n  finite F\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x.\n            the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  Obj f T -> t'\n\ngoal (2 subgoals):\n 1. \\<And>env b A F t'.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>x.\n                  the (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n                  x \\<longrightarrow>\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> x : return (the A^l));\n        Obj b A -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : A\n 2. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "from Obj_beta[OF \\<open>Obj f T \\<rightarrow>\\<^sub>\\<beta> t'\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>l f' t t'a.\n     dom f = dom f' \\<and>\n     f = f'(l \\<mapsto> t) \\<and>\n     l \\<in> dom f' \\<and>\n     (\\<exists>L.\n         finite L \\<and>\n         (\\<forall>s p.\n             s \\<notin> L \\<and>\n             p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n             (\\<exists>t''.\n                 t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n                 t'a = \\<sigma>[s,p] t''))) \\<and>\n     t' = Obj (f'(l \\<mapsto> t'a)) T", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>l f' t t'a.\n     dom f = dom f' \\<and>\n     f = f'(l \\<mapsto> t) \\<and>\n     l \\<in> dom f' \\<and>\n     (\\<exists>L.\n         finite L \\<and>\n         (\\<forall>s p.\n             s \\<notin> L \\<and>\n             p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n             (\\<exists>t''.\n                 t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n                 t'a = \\<sigma>[s,p] t''))) \\<and>\n     t' = Obj (f'(l \\<mapsto> t'a)) T\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : T", "proof (elim exE conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l f' t t'a L.\n       \\<lbrakk>dom f = dom f'; f = f'(l \\<mapsto> t); l \\<in> dom f';\n        t' = Obj (f'(l \\<mapsto> t'a)) T; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               t'a = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "fix l f' a a' F'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l f' t t'a L.\n       \\<lbrakk>dom f = dom f'; f = f'(l \\<mapsto> t); l \\<in> dom f';\n        t' = Obj (f'(l \\<mapsto> t'a)) T; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               t'a = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "assume \n      \"dom f = dom f'\" and \"f = f'(l \\<mapsto> a)\" and \"l \\<in> dom f'\" and\n      t': \"t' = Obj (f'(l \\<mapsto> a')) T\" and \"finite F'\" and\n      red_sp: \"\\<forall>s p. s \\<notin> F' \\<and> p \\<notin> F' \\<and> s \\<noteq> p \n                \\<longrightarrow> (\\<exists>t''. a\\<^bsup>[Fvar s, Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> a' = \\<sigma>[s,p] t'')\""], ["proof (state)\nthis:\n  dom f = dom f'\n  f = f'(l \\<mapsto> a)\n  l \\<in> dom f'\n  t' = Obj (f'(l \\<mapsto> a')) T\n  finite F'\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         a\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         a' = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. \\<And>l f' t t'a L.\n       \\<lbrakk>dom f = dom f'; f = f'(l \\<mapsto> t); l \\<in> dom f';\n        t' = Obj (f'(l \\<mapsto> t'a)) T; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               t'a = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "from this(2) \\<open>dom f = do T\\<close>"], ["proof (chain)\npicking this:\n  f = f'(l \\<mapsto> a)\n  dom f = do T", "have domf': \"dom (f'(l \\<mapsto> a')) = do T\""], ["proof (prove)\nusing this:\n  f = f'(l \\<mapsto> a)\n  dom f = do T\n\ngoal (1 subgoal):\n 1. dom (f'(l \\<mapsto> a')) = do T", "by auto"], ["proof (state)\nthis:\n  dom (f'(l \\<mapsto> a')) = do T\n\ngoal (1 subgoal):\n 1. \\<And>l f' t t'a L.\n       \\<lbrakk>dom f = dom f'; f = f'(l \\<mapsto> t); l \\<in> dom f';\n        t' = Obj (f'(l \\<mapsto> t'a)) T; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               t'a = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "have \n      exF: \"\\<forall>l'\\<in>do T. \\<forall>s p. s \\<notin> F \\<union> F' \\<and> p \\<notin> F \\<union> F' \\<and> s \\<noteq> p \n             \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l'))\\<rparr>\n                 \\<turnstile> (the ((f'(l \\<mapsto> a')) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l'\\<in>do T.\n       \\<forall>s p.\n          s \\<notin> F \\<union> F' \\<and>\n          p \\<notin> F \\<union> F' \\<and> s \\<noteq> p \\<longrightarrow>\n          env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n     (the T^l')\\<rparr> \\<turnstile> the\n((f'(l \\<mapsto> a')) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')", "proof (intro strip, elim conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l' s p.\n       \\<lbrakk>l' \\<in> do T; s \\<notin> F \\<union> F';\n        p \\<notin> F \\<union> F'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l')\\<rparr> \\<turnstile> the\n               ((f'(l \\<mapsto> a'))\n                 l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')", "fix l' s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l' s p.\n       \\<lbrakk>l' \\<in> do T; s \\<notin> F \\<union> F';\n        p \\<notin> F \\<union> F'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l')\\<rparr> \\<turnstile> the\n               ((f'(l \\<mapsto> a'))\n                 l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')", "assume \n        \"l' \\<in> do T\" and \n        nin_s: \"s \\<notin> F \\<union> F'\" and\n        nin_p: \"p \\<notin> F \\<union> F'\" and \"s \\<noteq> p\""], ["proof (state)\nthis:\n  l' \\<in> do T\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>l' s p.\n       \\<lbrakk>l' \\<in> do T; s \\<notin> F \\<union> F';\n        p \\<notin> F \\<union> F'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l')\\<rparr> \\<turnstile> the\n               ((f'(l \\<mapsto> a'))\n                 l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')", "with red_sp"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         a\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         a' = \\<sigma>[s,p] t'')\n  l' \\<in> do T\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p", "obtain t'' where \"a\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t''\" and \"a' = \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> F' \\<and>\n     p \\<notin> F' \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         a\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         a' = \\<sigma>[s,p] t'')\n  l' \\<in> do T\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>a\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'';\n         a' = \\<sigma>[s,p] t''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t''\n  a' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. \\<And>l' s p.\n       \\<lbrakk>l' \\<in> do T; s \\<notin> F \\<union> F';\n        p \\<notin> F \\<union> F'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l')\\<rparr> \\<turnstile> the\n               ((f'(l \\<mapsto> a'))\n                 l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')", "with \n        beta_lc[OF this(1)] sopen_sclose_eq_t[of t'' 0 s p] \n        \\<open>f = f'(l \\<mapsto> a)\\<close>"], ["proof (chain)\npicking this:\n  lc (a\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t''\n  lc t'' \\<Longrightarrow>\n  {0 \\<rightarrow> [Fvar s,Fvar p]} {0 \\<leftarrow> [s,p]} t'' = t''\n  f = f'(l \\<mapsto> a)\n  a\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t''\n  a' = \\<sigma>[s,p] t''", "have \"the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> (the((f'(l \\<mapsto> a')) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  lc (a\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t''\n  lc t'' \\<Longrightarrow>\n  {0 \\<rightarrow> [Fvar s,Fvar p]} {0 \\<leftarrow> [s,p]} t'' = t''\n  f = f'(l \\<mapsto> a)\n  a\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t''\n  a' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n    (the ((f'(l \\<mapsto> a')) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by (simp add: openz_def closez_def)"], ["proof (state)\nthis:\n  the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n  (the ((f'(l \\<mapsto> a')) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>l' s p.\n       \\<lbrakk>l' \\<in> do T; s \\<notin> F \\<union> F';\n        p \\<notin> F \\<union> F'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                    (the T^l')\\<rparr> \\<turnstile> the\n               ((f'(l \\<mapsto> a'))\n                 l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')", "with T_Obj(4) nin_s nin_p \\<open>s \\<noteq> p\\<close> \\<open>l' \\<in> do T\\<close> \\<open>f = f'(l \\<mapsto> a)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x.\n            the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p\n  l' \\<in> do T\n  f = f'(l \\<mapsto> a)\n  the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n  (the ((f'(l \\<mapsto> a')) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "show \n        \"env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l'))\\<rparr>\n         \\<turnstile> (the((f'(l \\<mapsto> a')) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l'))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<and>\n        p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l)\\<rparr> \\<turnstile> the (f\n  l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l) \\<and>\n        (\\<forall>x.\n            the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> x \\<longrightarrow>\n            env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n       (the T^l)\\<rparr> \\<turnstile> x : return (the T^l))\n  s \\<notin> F \\<union> F'\n  p \\<notin> F \\<union> F'\n  s \\<noteq> p\n  l' \\<in> do T\n  f = f'(l \\<mapsto> a)\n  the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n  (the ((f'(l \\<mapsto> a')) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                                     (the\n T^l')\\<rparr> \\<turnstile> the ((f'(l \\<mapsto> a'))\n                                  l')\\<^bsup>[Fvar\n         s,Fvar p]\\<^esup> : return (the T^l')", "by auto"], ["proof (state)\nthis:\n  env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                                   (the T^l')\\<rparr> \\<turnstile> the\n                              ((f'(l \\<mapsto> a'))\n                                l')\\<^bsup>[Fvar\n       s,Fvar p]\\<^esup> : return (the T^l')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l'\\<in>do T.\n     \\<forall>s p.\n        s \\<notin> F \\<union> F' \\<and>\n        p \\<notin> F \\<union> F' \\<and> s \\<noteq> p \\<longrightarrow>\n        env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n   (the T^l')\\<rparr> \\<turnstile> the ((f'(l \\<mapsto> a'))\n   l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l')\n\ngoal (1 subgoal):\n 1. \\<And>l f' t t'a L.\n       \\<lbrakk>dom f = dom f'; f = f'(l \\<mapsto> t); l \\<in> dom f';\n        t' = Obj (f'(l \\<mapsto> t'a)) T; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               t'a = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : T", "from typing.T_Obj[OF \\<open>ok env\\<close> domf' _ this] \\<open>finite F\\<close> \\<open>finite F'\\<close> t'"], ["proof (chain)\npicking this:\n  finite (F \\<union> F') \\<Longrightarrow>\n  env \\<turnstile> Obj (f'(l \\<mapsto> a')) T : T\n  finite F\n  finite F'\n  t' = Obj (f'(l \\<mapsto> a')) T", "show ?case"], ["proof (prove)\nusing this:\n  finite (F \\<union> F') \\<Longrightarrow>\n  env \\<turnstile> Obj (f'(l \\<mapsto> a')) T : T\n  finite F\n  finite F'\n  t' = Obj (f'(l \\<mapsto> a')) T\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : T", "by (simp (no_asm_simp))"], ["proof (state)\nthis:\n  env \\<turnstile> t' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  env \\<turnstile> t' : T\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "case (T_Call env t1 T t2 l t')"], ["proof (state)\nthis:\n  env \\<turnstile> t1 : T\n  t1 -> ?t' \\<Longrightarrow> env \\<turnstile> ?t' : T\n  env \\<turnstile> t2 : param (the T^l)\n  t2 -> ?t' \\<Longrightarrow> env \\<turnstile> ?t' : param (the T^l)\n  l \\<in> do T\n  Call t1 l t2 -> t'\n\ngoal (1 subgoal):\n 1. \\<And>env a A b l t'.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<And>t'. a -> t' \\<Longrightarrow> env \\<turnstile> t' : A;\n        env \\<turnstile> b : param (the A^l);\n        \\<And>t'.\n           b -> t' \\<Longrightarrow> env \\<turnstile> t' : param (the A^l);\n        l \\<in> do A; Call a l b -> t'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the A^l)", "from Call_beta[OF \\<open>Call t1 l t2 \\<rightarrow>\\<^sub>\\<beta> t'\\<close>]"], ["proof (chain)\npicking this:\n  (\\<exists>t'a. t1 -> t'a \\<and> t' = Call t'a l t2) \\<or>\n  (\\<exists>u'. t2 -> u' \\<and> t' = Call t1 l u') \\<or>\n  (\\<exists>f T.\n      Obj f T = t1 \\<and>\n      l \\<in> dom f \\<and> t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>))", "show ?case"], ["proof (prove)\nusing this:\n  (\\<exists>t'a. t1 -> t'a \\<and> t' = Call t'a l t2) \\<or>\n  (\\<exists>u'. t2 -> u' \\<and> t' = Call t1 l u') \\<or>\n  (\\<exists>f T.\n      Obj f T = t1 \\<and>\n      l \\<in> dom f \\<and> t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>))\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : return (the T^l)", "proof (elim disjE conjE exE)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t'a.\n       \\<lbrakk>t1 -> t'a; t' = Call t'a l t2\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 2. \\<And>u'.\n       \\<lbrakk>t2 -> u'; t' = Call t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 3. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "fix t1'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t'a.\n       \\<lbrakk>t1 -> t'a; t' = Call t'a l t2\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 2. \\<And>u'.\n       \\<lbrakk>t2 -> u'; t' = Call t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 3. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "assume \"t1 \\<rightarrow>\\<^sub>\\<beta> t1'\" and \"t' = Call t1' l t2\""], ["proof (state)\nthis:\n  t1 -> t1'\n  t' = Call t1' l t2\n\ngoal (3 subgoals):\n 1. \\<And>t'a.\n       \\<lbrakk>t1 -> t'a; t' = Call t'a l t2\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 2. \\<And>u'.\n       \\<lbrakk>t2 -> u'; t' = Call t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 3. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "from \n      typing.T_Call[OF T_Call(2)[OF this(1)] \n                       \\<open>env \\<turnstile> t2 : param(the(T^l))\\<close> \\<open>l \\<in> do T\\<close>]\n      this(2)"], ["proof (chain)\npicking this:\n  env \\<turnstile> Call t1' l t2 : return (the T^l)\n  t' = Call t1' l t2", "show ?case"], ["proof (prove)\nusing this:\n  env \\<turnstile> Call t1' l t2 : return (the T^l)\n  t' = Call t1' l t2\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : return (the T^l)", "by simp"], ["proof (state)\nthis:\n  env \\<turnstile> t' : return (the T^l)\n\ngoal (2 subgoals):\n 1. \\<And>u'.\n       \\<lbrakk>t2 -> u'; t' = Call t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 2. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u'.\n       \\<lbrakk>t2 -> u'; t' = Call t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 2. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "fix t2'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u'.\n       \\<lbrakk>t2 -> u'; t' = Call t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 2. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "assume \"t2 \\<rightarrow>\\<^sub>\\<beta> t2'\" and \"t' = Call t1 l t2'\""], ["proof (state)\nthis:\n  t2 -> t2'\n  t' = Call t1 l t2'\n\ngoal (2 subgoals):\n 1. \\<And>u'.\n       \\<lbrakk>t2 -> u'; t' = Call t1 l u'\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)\n 2. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "from \n      typing.T_Call[OF \\<open>env \\<turnstile> t1 : T\\<close> T_Call(4)[OF this(1)] \\<open>l \\<in> do T\\<close>]\n      this(2)"], ["proof (chain)\npicking this:\n  env \\<turnstile> Call t1 l t2' : return (the T^l)\n  t' = Call t1 l t2'", "show ?case"], ["proof (prove)\nusing this:\n  env \\<turnstile> Call t1 l t2' : return (the T^l)\n  t' = Call t1 l t2'\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : return (the T^l)", "by simp"], ["proof (state)\nthis:\n  env \\<turnstile> t' : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "fix f U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "assume \"Obj f U = t1\" and \"l \\<in> dom f\" and t': \"t' = (the(f l)\\<^bsup>[Obj f U,t2]\\<^esup>)\""], ["proof (state)\nthis:\n  Obj f U = t1\n  l \\<in> dom f\n  t' = (the (f l)\\<^bsup>[Obj f U,t2]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "from \n      typing.T_Call[OF \\<open>env \\<turnstile> t1 : T\\<close> \\<open>env \\<turnstile> t2 : param(the(T^l))\\<close> \\<open>l \\<in> do T\\<close>]\n      sym[OF this(1)] \\<open>env \\<turnstile> t1 : T\\<close> \\<open>env \\<turnstile> t2 : param(the(T^l))\\<close> \n      obj_inv[of env f U T]"], ["proof (chain)\npicking this:\n  env \\<turnstile> Call t1 l t2 : return (the T^l)\n  t1 = Obj f U\n  env \\<turnstile> t1 : T\n  env \\<turnstile> t2 : param (the T^l)\n  env \\<turnstile> Obj f U : T \\<Longrightarrow> T = U", "obtain \n      objT: \"env \\<turnstile> (Obj f T) : T\" and \"T = U\" and\n      callT: \"env \\<turnstile> Call (Obj f T) l t2 : return(the(T^l))\""], ["proof (prove)\nusing this:\n  env \\<turnstile> Call t1 l t2 : return (the T^l)\n  t1 = Obj f U\n  env \\<turnstile> t1 : T\n  env \\<turnstile> t2 : param (the T^l)\n  env \\<turnstile> Obj f U : T \\<Longrightarrow> T = U\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>env \\<turnstile> Obj f T : T; T = U;\n      env \\<turnstile> Call (Obj f T) l t2 : return (the T^l)\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  env \\<turnstile> Obj f T : T\n  T = U\n  env \\<turnstile> Call (Obj f T) l t2 : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "have \n      \"(\\<exists>F. finite F \n          \\<and> (\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \n              \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \n                  \\<turnstile> (the(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l)))\n      \\<Longrightarrow> env \\<turnstile> (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>) : return (the(T^l)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F.\n       finite F \\<and>\n       (\\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n    env \\<turnstile> the (f l)\\<^bsup>[Obj f\n  T,t2]\\<^esup> : return (the T^l)", "proof (elim exE conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> the\n     (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)", "fix F"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> the\n     (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)", "assume \n        \"finite F\" and\n        pred_F:\n        \"\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p\n          \\<longrightarrow> env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \n              \\<turnstile> (the(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l))\""], ["proof (state)\nthis:\n  finite F\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> the (f l)\\<^bsup>[Fvar\n            s,Fvar p]\\<^esup> : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> the\n     (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)", "from this(1) finite_FV[of \"Obj f T\"]"], ["proof (chain)\npicking this:\n  finite F\n  finite (FV (Obj f T))", "have \"finite (F \\<union> FV (Obj f T) \\<union> FV t2)\""], ["proof (prove)\nusing this:\n  finite F\n  finite (FV (Obj f T))\n\ngoal (1 subgoal):\n 1. finite (F \\<union> FV (Obj f T) \\<union> FV t2)", "by simp"], ["proof (state)\nthis:\n  finite (F \\<union> FV (Obj f T) \\<union> FV t2)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> the\n     (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)", "from exFresh_s_p_cof[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>s p.\n     s \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2 \\<and>\n     p \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2 \\<and> s \\<noteq> p", "obtain s p where \n        nin_s: \"s \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\" and\n        nin_p: \"p \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\" and \"s \\<noteq> p\""], ["proof (prove)\nusing this:\n  \\<exists>s p.\n     s \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2 \\<and>\n     p \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2 \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>s p.\n        \\<lbrakk>s \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2;\n         p \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2;\n         s \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  p \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> the\n     (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)", "with pred_F"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> the (f l)\\<^bsup>[Fvar\n            s,Fvar p]\\<^esup> : return (the T^l)\n  s \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  p \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  s \\<noteq> p", "have \n        type_opened: \"env\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr>\n                      \\<turnstile> {0 \\<rightarrow> [Fvar s,Fvar p]} the(f l) : return(the(T^l))\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n(the T^l)\\<rparr> \\<turnstile> the (f l)\\<^bsup>[Fvar\n            s,Fvar p]\\<^esup> : return (the T^l)\n  s \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  p \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                                     (the\n T^l)\\<rparr> \\<turnstile> {0 \\<rightarrow> [Fvar\n        s,Fvar p]} the (f l) : return (the T^l)", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n                                   (the T^l)\\<rparr> \\<turnstile> {0 \\<rightarrow> [Fvar\n         s,Fvar p]} the (f l) : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> the\n     (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)", "from nin_s nin_p FV_option_lem[of f] objT \\<open>l \\<in> do T\\<close>"], ["proof (chain)\npicking this:\n  s \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  p \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  \\<forall>l\\<in>dom f. FV (the (f l)) = FVoption (f l)\n  env \\<turnstile> Obj f T : T\n  l \\<in> do T", "obtain \n        \"s \\<notin> FV (the(f l)) \\<union> FV (Obj f T) \\<union> FV t2\" and\n        \"p \\<notin> FV (the(f l)) \\<union> FV (Obj f T) \\<union> FV t2\""], ["proof (prove)\nusing this:\n  s \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  p \\<notin> F \\<union> FV (Obj f T) \\<union> FV t2\n  \\<forall>l\\<in>dom f. FV (the (f l)) = FVoption (f l)\n  env \\<turnstile> Obj f T : T\n  l \\<in> do T\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>s \\<notin> FV (the (f l)) \\<union> FV (Obj f T) \\<union>\n                         FV t2;\n      p \\<notin> FV (the (f l)) \\<union> FV (Obj f T) \\<union>\n                 FV t2\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> FV (the (f l)) \\<union> FV (Obj f T) \\<union> FV t2\n  p \\<notin> FV (the (f l)) \\<union> FV (Obj f T) \\<union> FV t2\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n      (the T^l)\\<rparr> \\<turnstile> the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> the\n     (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)", "from \n        open_lemma[OF type_opened this \\<open>s \\<noteq> p\\<close> \n        objT \\<open>env \\<turnstile> t2 : param(the(T^l))\\<close>]"], ["proof (chain)\npicking this:\n  env \\<turnstile> {0 \\<rightarrow> [Obj f\nT,t2]} the (f l) : return (the T^l)", "show ?thesis"], ["proof (prove)\nusing this:\n  env \\<turnstile> {0 \\<rightarrow> [Obj f\nT,t2]} the (f l) : return (the T^l)\n\ngoal (1 subgoal):\n 1. env \\<turnstile> the (f l)\\<^bsup>[Obj f\n  T,t2]\\<^esup> : return (the T^l)", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  env \\<turnstile> the (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>F.\n     finite F \\<and>\n     (\\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> the (f\n   l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n  env \\<turnstile> the (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)\n\ngoal (1 subgoal):\n 1. \\<And>f T.\n       \\<lbrakk>Obj f T = t1; l \\<in> dom f;\n        t' = (the (f l)\\<^bsup>[Obj f T,t2]\\<^esup>)\\<rbrakk>\n       \\<Longrightarrow> env \\<turnstile> t' : return (the T^l)", "with abs_typeE[OF callT] t' \\<open>T = U\\<close>"], ["proof (chain)\npicking this:\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>s p.\n          s \\<notin> F \\<and>\n          p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n          env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n     (the T^l)\\<rparr> \\<turnstile> the (f\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n   ?P) \\<Longrightarrow>\n  ?P\n  t' = (the (f l)\\<^bsup>[Obj f U,t2]\\<^esup>)\n  T = U\n  \\<exists>F.\n     finite F \\<and>\n     (\\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> the (f\n   l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n  env \\<turnstile> the (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)", "show ?case"], ["proof (prove)\nusing this:\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>s p.\n          s \\<notin> F \\<and>\n          p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n          env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n     (the T^l)\\<rparr> \\<turnstile> the (f\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n   ?P) \\<Longrightarrow>\n  ?P\n  t' = (the (f l)\\<^bsup>[Obj f U,t2]\\<^esup>)\n  T = U\n  \\<exists>F.\n     finite F \\<and>\n     (\\<forall>s p.\n         s \\<notin> F \\<and>\n         p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n         env\\<lparr>s:T\\<rparr>\\<lparr>p:param\n    (the T^l)\\<rparr> \\<turnstile> the (f\n   l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the T^l)) \\<Longrightarrow>\n  env \\<turnstile> the (f l)\\<^bsup>[Obj f T,t2]\\<^esup> : return (the T^l)\n\ngoal (1 subgoal):\n 1. env \\<turnstile> t' : return (the T^l)", "by auto"], ["proof (state)\nthis:\n  env \\<turnstile> t' : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  env \\<turnstile> t' : return (the T^l)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem subject_reduction': \"t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t' \\<Longrightarrow> e \\<turnstile> t : T \\<Longrightarrow> e \\<turnstile> t' : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t ->> t'; e \\<turnstile> t : T\\<rbrakk>\n    \\<Longrightarrow> e \\<turnstile> t' : T", "by (induct set: rtranclp) (iprover intro: subject_reduction)+"], ["", "lemma type_members_equal: \n  fixes A :: type and B :: type\n  assumes \"do A = do B\" and \"\\<forall>i. (A^i) = (B^i)\"\n  shows \"A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = B", "proof (cases A)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. A = Object x \\<Longrightarrow> A = B", "case (Object ta)"], ["proof (state)\nthis:\n  A = Object ta\n\ngoal (1 subgoal):\n 1. \\<And>x. A = Object x \\<Longrightarrow> A = B", "thus ?thesis"], ["proof (prove)\nusing this:\n  A = Object ta\n\ngoal (1 subgoal):\n 1. A = B", "proof (cases B)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>A = Object ta; B = Object x\\<rbrakk> \\<Longrightarrow> A = B", "case (Object tb)"], ["proof (state)\nthis:\n  B = Object tb\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>A = Object ta; B = Object x\\<rbrakk> \\<Longrightarrow> A = B", "from \\<open>\\<forall>i. (A^i) = (B^i)\\<close> \\<open>A = Object ta\\<close> \\<open>B = Object tb\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i. A^i = B^i\n  A = Object ta\n  B = Object tb", "have \"\\<And>i. ta i = tb i\""], ["proof (prove)\nusing this:\n  \\<forall>i. A^i = B^i\n  A = Object ta\n  B = Object tb\n\ngoal (1 subgoal):\n 1. \\<And>i. ta i = tb i", "by auto"], ["proof (state)\nthis:\n  ta ?i = tb ?i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>A = Object ta; B = Object x\\<rbrakk> \\<Longrightarrow> A = B", "with \\<open>A = Object ta\\<close> \\<open>B = Object tb\\<close>"], ["proof (chain)\npicking this:\n  A = Object ta\n  B = Object tb\n  ta ?i = tb ?i", "show ?thesis"], ["proof (prove)\nusing this:\n  A = Object ta\n  B = Object tb\n  ta ?i = tb ?i\n\ngoal (1 subgoal):\n 1. A = B", "by (simp add: ext)"], ["proof (state)\nthis:\n  A = B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A = B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_var: \"Env Map.empty \\<turnstile> a : A \\<Longrightarrow> \\<forall>x. a \\<noteq> Fvar x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Env Map.empty \\<turnstile> a : A \\<Longrightarrow>\n    \\<forall>x. a \\<noteq> Fvar x", "by (rule allI, case_tac x, auto)"], ["", "lemma Call_label_range: \"(Env Map.empty) \\<turnstile> Call (Obj c T) l b : A \\<Longrightarrow> l \\<in> dom c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Env Map.empty \\<turnstile> Call (Obj c T) l b : A \\<Longrightarrow>\n    l \\<in> dom c", "by (erule typing_elims, erule typing.cases, simp_all)"], ["", "lemma  Call_subterm_type: \"Env Map.empty \\<turnstile> Call t l b: T \n  \\<Longrightarrow> (\\<exists>T'. Env Map.empty \\<turnstile> t : T') \\<and>  (\\<exists>T'. Env Map.empty \\<turnstile> b : T')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Env Map.empty \\<turnstile> Call t l b : T \\<Longrightarrow>\n    (\\<exists>T'. Env Map.empty \\<turnstile> t : T') \\<and>\n    (\\<exists>T'. Env Map.empty \\<turnstile> b : T')", "by (erule typing.cases) auto"], ["", "lemma Upd_label_range: \"Env Map.empty \\<turnstile> Upd (Obj c T) l x : A \\<Longrightarrow> l \\<in> dom c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Env Map.empty \\<turnstile> Upd (Obj c T) l x : A \\<Longrightarrow>\n    l \\<in> dom c", "by (erule typing_elims, erule typing.cases, simp_all)"], ["", "lemma Upd_subterm_type: \n  \"Env Map.empty \\<turnstile> Upd t l x : T \\<Longrightarrow> \\<exists>T'. Env Map.empty \\<turnstile> t : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Env Map.empty \\<turnstile> Upd t l x : T \\<Longrightarrow>\n    \\<exists>T'. Env Map.empty \\<turnstile> t : T'", "by (erule typing.cases) auto"], ["", "lemma no_var: \"\\<exists>T. Env Map.empty \\<turnstile> Fvar x : T \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T. Env Map.empty \\<turnstile> Fvar x : T \\<Longrightarrow>\n    False", "by (case_tac x, auto)"], ["", "lemma no_bvar: \"e \\<turnstile> Bvar x : T \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e \\<turnstile> Bvar x : T \\<Longrightarrow> False", "by (erule typing.cases, auto)"], ["", "subsubsection\\<open>Unique Type\\<close>"], ["", "theorem type_unique[rule_format]: \n  assumes \"env \\<turnstile> a: T\"\n  shows \"\\<forall>T'. env \\<turnstile> a: T' \\<longrightarrow> T = T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> T = T'", "using assms"], ["proof (prove)\nusing this:\n  env \\<turnstile> a : T\n\ngoal (1 subgoal):\n 1. \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> T = T'", "proof (induct rule: typing.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>env x T.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Fvar x : T' \\<longrightarrow>\n                            T = T'\n 2. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>T'.\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n                  return (the A^l) = T')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Obj b A : T' \\<longrightarrow>\n                            A = T'\n 3. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'\n 4. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        env \\<turnstile> b : param (the A^l);\n        \\<forall>T'.\n           env \\<turnstile> b : T' \\<longrightarrow> param (the A^l) = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Call a l\n        b : T' \\<longrightarrow>\n                            return (the A^l) = T'", "case T_Var"], ["proof (state)\nthis:\n  ok env_\n  x_ \\<in> env_dom env_\n  the env_!x_ = T_\n\ngoal (4 subgoals):\n 1. \\<And>env x T.\n       \\<lbrakk>ok env; x \\<in> env_dom env; the env!x = T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Fvar x : T' \\<longrightarrow>\n                            T = T'\n 2. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>T'.\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n                  return (the A^l) = T')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Obj b A : T' \\<longrightarrow>\n                            A = T'\n 3. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'\n 4. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        env \\<turnstile> b : param (the A^l);\n        \\<forall>T'.\n           env \\<turnstile> b : T' \\<longrightarrow> param (the A^l) = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Call a l\n        b : T' \\<longrightarrow>\n                            return (the A^l) = T'", "thus ?case"], ["proof (prove)\nusing this:\n  ok env_\n  x_ \\<in> env_dom env_\n  the env_!x_ = T_\n\ngoal (1 subgoal):\n 1. \\<forall>T'. env_ \\<turnstile> Fvar x_ : T' \\<longrightarrow> T_ = T'", "by (auto simp: add_get_eq)"], ["proof (state)\nthis:\n  \\<forall>T'. env_ \\<turnstile> Fvar x_ : T' \\<longrightarrow> T_ = T'\n\ngoal (3 subgoals):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>T'.\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n                  return (the A^l) = T')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Obj b A : T' \\<longrightarrow>\n                            A = T'\n 2. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'\n 3. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        env \\<turnstile> b : param (the A^l);\n        \\<forall>T'.\n           env \\<turnstile> b : T' \\<longrightarrow> param (the A^l) = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Call a l\n        b : T' \\<longrightarrow>\n                            return (the A^l) = T'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>T'.\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n                  return (the A^l) = T')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Obj b A : T' \\<longrightarrow>\n                            A = T'\n 2. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'\n 3. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        env \\<turnstile> b : param (the A^l);\n        \\<forall>T'.\n           env \\<turnstile> b : T' \\<longrightarrow> param (the A^l) = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Call a l\n        b : T' \\<longrightarrow>\n                            return (the A^l) = T'", "case T_Obj"], ["proof (state)\nthis:\n  ok env_\n  dom b_ = do A_\n  finite F_\n  \\<forall>l\\<in>do A_.\n     \\<forall>s p.\n        s \\<notin> F_ \\<and>\n        p \\<notin> F_ \\<and> s \\<noteq> p \\<longrightarrow>\n        env_\\<lparr>s:A_\\<rparr>\\<lparr>p:param\n     (the A_^l)\\<rparr> \\<turnstile> the\n(b_ l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A_^l) \\<and>\n        (\\<forall>T'.\n            env_\\<lparr>s:A_\\<rparr>\\<lparr>p:param\n         (the A_^l)\\<rparr> \\<turnstile> the\n    (b_ l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n            return (the A_^l) = T')\n\ngoal (3 subgoals):\n 1. \\<And>env b A F.\n       \\<lbrakk>ok env; dom b = do A; finite F;\n        \\<forall>l\\<in>do A.\n           \\<forall>s p.\n              s \\<notin> F \\<and>\n              p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n              env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n         (the A^l)\\<rparr> \\<turnstile> the\n   (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n              (\\<forall>T'.\n                  env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n             (the A^l)\\<rparr> \\<turnstile> the\n       (b l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n                  return (the A^l) = T')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Obj b A : T' \\<longrightarrow>\n                            A = T'\n 2. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'\n 3. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        env \\<turnstile> b : param (the A^l);\n        \\<forall>T'.\n           env \\<turnstile> b : T' \\<longrightarrow> param (the A^l) = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Call a l\n        b : T' \\<longrightarrow>\n                            return (the A^l) = T'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>T'. env_ \\<turnstile> Obj b_ A_ : T' \\<longrightarrow> A_ = T'", "by (auto simp: sym[OF obj_inv])"], ["proof (state)\nthis:\n  \\<forall>T'. env_ \\<turnstile> Obj b_ A_ : T' \\<longrightarrow> A_ = T'\n\ngoal (2 subgoals):\n 1. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'\n 2. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        env \\<turnstile> b : param (the A^l);\n        \\<forall>T'.\n           env \\<turnstile> b : T' \\<longrightarrow> param (the A^l) = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Call a l\n        b : T' \\<longrightarrow>\n                            return (the A^l) = T'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'\n 2. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        env \\<turnstile> b : param (the A^l);\n        \\<forall>T'.\n           env \\<turnstile> b : T' \\<longrightarrow> param (the A^l) = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Call a l\n        b : T' \\<longrightarrow>\n                            return (the A^l) = T'", "case T_Call"], ["proof (state)\nthis:\n  env_ \\<turnstile> a_ : A_\n  \\<forall>T'. env_ \\<turnstile> a_ : T' \\<longrightarrow> A_ = T'\n  env_ \\<turnstile> b_ : param (the A_^l_)\n  \\<forall>T'.\n     env_ \\<turnstile> b_ : T' \\<longrightarrow> param (the A_^l_) = T'\n  l_ \\<in> do A_\n\ngoal (2 subgoals):\n 1. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'\n 2. \\<And>env a A b l.\n       \\<lbrakk>env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        env \\<turnstile> b : param (the A^l);\n        \\<forall>T'.\n           env \\<turnstile> b : T' \\<longrightarrow> param (the A^l) = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Call a l\n        b : T' \\<longrightarrow>\n                            return (the A^l) = T'", "from this(2)"], ["proof (chain)\npicking this:\n  \\<forall>T'. env_ \\<turnstile> a_ : T' \\<longrightarrow> A_ = T'", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>T'. env_ \\<turnstile> a_ : T' \\<longrightarrow> A_ = T'\n\ngoal (1 subgoal):\n 1. \\<forall>T'.\n       env_ \\<turnstile> Call a_ l_ b_ : T' \\<longrightarrow>\n       return (the A_^l_) = T'", "by auto"], ["proof (state)\nthis:\n  \\<forall>T'.\n     env_ \\<turnstile> Call a_ l_ b_ : T' \\<longrightarrow>\n     return (the A_^l_) = T'\n\ngoal (1 subgoal):\n 1. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'", "case T_Upd"], ["proof (state)\nthis:\n  finite F_\n  \\<forall>s p.\n     s \\<notin> F_ \\<and>\n     p \\<notin> F_ \\<and> s \\<noteq> p \\<longrightarrow>\n     env_\\<lparr>s:A_\\<rparr>\\<lparr>p:param\n  (the A_^l_)\\<rparr> \\<turnstile> n_\\<^bsup>[Fvar\n         s,Fvar p]\\<^esup> : return (the A_^l_) \\<and>\n     (\\<forall>T'.\n         env_\\<lparr>s:A_\\<rparr>\\<lparr>p:param\n      (the A_^l_)\\<rparr> \\<turnstile> n_\\<^bsup>[Fvar\n             s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n         return (the A_^l_) = T')\n  env_ \\<turnstile> a_ : A_\n  \\<forall>T'. env_ \\<turnstile> a_ : T' \\<longrightarrow> A_ = T'\n  l_ \\<in> do A_\n\ngoal (1 subgoal):\n 1. \\<And>F env A l n a.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n      (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n          s,Fvar p]\\<^esup> : return (the A^l) \\<and>\n           (\\<forall>T'.\n               env\\<lparr>s:A\\<rparr>\\<lparr>p:param\n          (the A^l)\\<rparr> \\<turnstile> n\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup> : T' \\<longrightarrow>\n               return (the A^l) = T');\n        env \\<turnstile> a : A;\n        \\<forall>T'. env \\<turnstile> a : T' \\<longrightarrow> A = T';\n        l \\<in> do A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>T'.\n                            env \\<turnstile> Upd a l\n        n : T' \\<longrightarrow>\n                            A = T'", "from this(4)"], ["proof (chain)\npicking this:\n  \\<forall>T'. env_ \\<turnstile> a_ : T' \\<longrightarrow> A_ = T'", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>T'. env_ \\<turnstile> a_ : T' \\<longrightarrow> A_ = T'\n\ngoal (1 subgoal):\n 1. \\<forall>T'.\n       env_ \\<turnstile> Upd a_ l_ n_ : T' \\<longrightarrow> A_ = T'", "by auto"], ["proof (state)\nthis:\n  \\<forall>T'. env_ \\<turnstile> Upd a_ l_ n_ : T' \\<longrightarrow> A_ = T'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Progress\\<close>"], ["", "text \\<open>Final Type Soundness Lemma\\<close>"], ["", "theorem progress: \n  assumes \"Env Map.empty \\<turnstile> t : A\" and \"\\<not>(\\<exists>c A. t = Obj c A)\"\n  shows \"\\<exists>b. t \\<rightarrow>\\<^sub>\\<beta> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>b. t -> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b. t -> b", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>b. t -> b", "have \n    \"(\\<forall>A. Env Map.empty \\<turnstile> t : A \\<longrightarrow> \\<not>(\\<exists>c T. t = Obj c T) \\<longrightarrow> (\\<exists>b. t \\<rightarrow>\\<^sub>\\<beta> b))\n    &(\\<forall>A. Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow> \\<not>(\\<exists>c T. Obj f A = Obj c T) \n       \\<longrightarrow> (\\<exists>b. Obj f A \\<rightarrow>\\<^sub>\\<beta> b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>A.\n        Env Map.empty \\<turnstile> t : A \\<longrightarrow>\n        (\\<nexists>c T. t = Obj c T) \\<longrightarrow>\n        (\\<exists>b. t -> b)) \\<and>\n    (\\<forall>A.\n        Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n        (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n        (\\<exists>b. Obj f A -> b))", "proof (induct rule: sterm_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>b.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Bvar b : A \\<longrightarrow>\n          (\\<nexists>c T. Bvar b = Obj c T) \\<longrightarrow>\n          (\\<exists>ba. Bvar b -> ba)\n 2. \\<And>x.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Fvar x : A \\<longrightarrow>\n          (\\<nexists>c T. Fvar x = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Fvar x -> b)\n 3. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 4. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 5. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 6. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 7. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "case (Bvar b)"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<And>b.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Bvar b : A \\<longrightarrow>\n          (\\<nexists>c T. Bvar b = Obj c T) \\<longrightarrow>\n          (\\<exists>ba. Bvar b -> ba)\n 2. \\<And>x.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Fvar x : A \\<longrightarrow>\n          (\\<nexists>c T. Fvar x = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Fvar x -> b)\n 3. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 4. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 5. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 6. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 7. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "with no_bvar[of \"Env Map.empty\" b]"], ["proof (chain)\npicking this:\n  Env Map.empty \\<turnstile> Bvar b : ?T \\<Longrightarrow> False", "show ?case"], ["proof (prove)\nusing this:\n  Env Map.empty \\<turnstile> Bvar b : ?T \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<forall>A.\n       Env Map.empty \\<turnstile> Bvar b : A \\<longrightarrow>\n       (\\<nexists>c T. Bvar b = Obj c T) \\<longrightarrow>\n       (\\<exists>ba. Bvar b -> ba)", "by auto"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Bvar b : A \\<longrightarrow>\n     (\\<nexists>c T. Bvar b = Obj c T) \\<longrightarrow>\n     (\\<exists>ba. Bvar b -> ba)\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Fvar x : A \\<longrightarrow>\n          (\\<nexists>c T. Fvar x = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Fvar x -> b)\n 2. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 3. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 4. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 5. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 6. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "(* contradiction *)"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Bvar b : A \\<longrightarrow>\n     (\\<nexists>c T. Bvar b = Obj c T) \\<longrightarrow>\n     (\\<exists>ba. Bvar b -> ba)\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Fvar x : A \\<longrightarrow>\n          (\\<nexists>c T. Fvar x = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Fvar x -> b)\n 2. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 3. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 4. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 5. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 6. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Fvar x : A \\<longrightarrow>\n          (\\<nexists>c T. Fvar x = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Fvar x -> b)\n 2. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 3. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 4. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 5. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 6. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "case (Fvar x)"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Fvar x : A \\<longrightarrow>\n          (\\<nexists>c T. Fvar x = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Fvar x -> b)\n 2. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 3. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 4. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 5. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 6. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "with Fvar_beta[of x]"], ["proof (chain)\npicking this:\n  Fvar x -> ?t \\<Longrightarrow> False", "show ?case"], ["proof (prove)\nusing this:\n  Fvar x -> ?t \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<forall>A.\n       Env Map.empty \\<turnstile> Fvar x : A \\<longrightarrow>\n       (\\<nexists>c T. Fvar x = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Fvar x -> b)", "by auto"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Fvar x : A \\<longrightarrow>\n     (\\<nexists>c T. Fvar x = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Fvar x -> b)\n\ngoal (5 subgoals):\n 1. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 3. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 4. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 5. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "(* contradiction *)"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Fvar x : A \\<longrightarrow>\n     (\\<nexists>c T. Fvar x = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Fvar x -> b)\n\ngoal (5 subgoals):\n 1. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 3. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 4. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 5. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 3. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 4. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 5. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "case Obj"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Obj f_ A : A \\<longrightarrow>\n     (\\<nexists>c T. Obj f_ A = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Obj f_ A -> b)\n\ngoal (5 subgoals):\n 1. \\<And>f T.\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n          (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n          (\\<exists>b. Obj f A -> b) \\<Longrightarrow>\n       \\<forall>A.\n          Env Map.empty \\<turnstile> Obj f T : A \\<longrightarrow>\n          (\\<nexists>c Ta. Obj f T = Obj c Ta) \\<longrightarrow>\n          (\\<exists>b. Obj f T -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 3. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 4. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 5. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj f_ T_ : A \\<longrightarrow>\n       (\\<nexists>c Ta. Obj f_ T_ = Obj c Ta) \\<longrightarrow>\n       (\\<exists>b. Obj f_ T_ -> b)", "by auto"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Obj f_ T_ : A \\<longrightarrow>\n     (\\<nexists>c Ta. Obj f_ T_ = Obj c Ta) \\<longrightarrow>\n     (\\<exists>b. Obj f_ T_ -> b)\n\ngoal (4 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 3. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 4. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "(* contradiction *)"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Obj f_ T_ : A \\<longrightarrow>\n     (\\<nexists>c Ta. Obj f_ T_ = Obj c Ta) \\<longrightarrow>\n     (\\<exists>b. Obj f_ T_ -> b)\n\ngoal (4 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 3. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 4. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 3. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 4. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 3. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)\n 4. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n       (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj Map.empty A -> b)", "by auto"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n     (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Obj Map.empty A -> b)\n\ngoal (3 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 3. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "(* contradiction *)"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Obj Map.empty A : A \\<longrightarrow>\n     (\\<nexists>c T. Obj Map.empty A = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Obj Map.empty A -> b)\n\ngoal (3 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 3. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 3. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "case insert"], ["proof (state)\nthis:\n  l_ \\<notin> dom f_\n  \\<forall>A.\n     Env Map.empty \\<turnstile> t1_ : A \\<longrightarrow>\n     (\\<nexists>c T. t1_ = Obj c T) \\<longrightarrow> (\\<exists>b. t1_ -> b)\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Obj f_ A : A \\<longrightarrow>\n     (\\<nexists>c T. Obj f_ A = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Obj f_ A -> b)\n\ngoal (3 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)\n 3. \\<And>t1 f l.\n       \\<lbrakk>l \\<notin> dom f;\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n           (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n           (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n           (\\<exists>b. Obj f A -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Obj\n                  (f(l \\<mapsto> t1)) A : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Obj (f(l \\<mapsto> t1)) A =\n                                Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Obj (f(l \\<mapsto> t1)) A -> b)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A.\n       Env Map.empty \\<turnstile> Obj (f_(l_ \\<mapsto> t1_))\n                                   A : A \\<longrightarrow>\n       (\\<nexists>c T.\n           Obj (f_(l_ \\<mapsto> t1_)) A = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Obj (f_(l_ \\<mapsto> t1_)) A -> b)", "by auto"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Obj (f_(l_ \\<mapsto> t1_))\n                                 A : A \\<longrightarrow>\n     (\\<nexists>c T.\n         Obj (f_(l_ \\<mapsto> t1_)) A = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Obj (f_(l_ \\<mapsto> t1_)) A -> b)\n\ngoal (2 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)", "(* contradiction *)"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Obj (f_(l_ \\<mapsto> t1_))\n                                 A : A \\<longrightarrow>\n     (\\<nexists>c T.\n         Obj (f_(l_ \\<mapsto> t1_)) A = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Obj (f_(l_ \\<mapsto> t1_)) A -> b)\n\ngoal (2 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)", "case (Call t1 l t2)"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n     (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow> (\\<exists>b. t1 -> b)\n  \\<forall>A.\n     Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n     (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow> (\\<exists>b. t2 -> b)\n\ngoal (2 subgoals):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Call t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Call t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Call t1 l t2 -> b)\n 2. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A.\n       Env Map.empty \\<turnstile> Call t1 l t2 : A \\<longrightarrow>\n       (\\<nexists>c T. Call t1 l t2 = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Call t1 l t2 -> b)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A Aa.\n       \\<lbrakk>Env Map.empty \\<turnstile> t1 : Aa;\n        Env Map.empty \\<turnstile> t2 : param (the Aa^l); l \\<in> do Aa;\n        \\<nexists>c T. Call t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "fix T"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A Aa.\n       \\<lbrakk>Env Map.empty \\<turnstile> t1 : Aa;\n        Env Map.empty \\<turnstile> t2 : param (the Aa^l); l \\<in> do Aa;\n        \\<nexists>c T. Call t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "assume \n        \"Env Map.empty \\<turnstile> t1 : T\" and \"Env Map.empty \\<turnstile> t2 : param(the(T^l))\" and \"l \\<in> do T\""], ["proof (state)\nthis:\n  Env Map.empty \\<turnstile> t1 : T\n  Env Map.empty \\<turnstile> t2 : param (the T^l)\n  l \\<in> do T\n\ngoal (1 subgoal):\n 1. \\<And>A Aa.\n       \\<lbrakk>Env Map.empty \\<turnstile> t1 : Aa;\n        Env Map.empty \\<turnstile> t2 : param (the Aa^l); l \\<in> do Aa;\n        \\<nexists>c T. Call t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "note lc = typing_regular''[OF this(1)] typing_regular''[OF this(2)]"], ["proof (state)\nthis:\n  lc t1\n  lc t2\n\ngoal (1 subgoal):\n 1. \\<And>A Aa.\n       \\<lbrakk>Env Map.empty \\<turnstile> t1 : Aa;\n        Env Map.empty \\<turnstile> t2 : param (the Aa^l); l \\<in> do Aa;\n        \\<nexists>c T. Call t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "from \n        \\<open>Env Map.empty \\<turnstile> t1 : T\\<close> \n        \\<open>\\<forall>A. Env Map.empty \\<turnstile> t1 : A \\<longrightarrow> \\<not> (\\<exists>c T. t1 = Obj c T) \\<longrightarrow> (\\<exists>b. t1 \\<rightarrow>\\<^sub>\\<beta> b)\\<close>"], ["proof (chain)\npicking this:\n  Env Map.empty \\<turnstile> t1 : T\n  \\<forall>A.\n     Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n     (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow> (\\<exists>b. t1 -> b)", "have \"(\\<exists>c B. t1 = Obj c B) \\<or> (\\<exists>b. t1 \\<rightarrow>\\<^sub>\\<beta> b)\""], ["proof (prove)\nusing this:\n  Env Map.empty \\<turnstile> t1 : T\n  \\<forall>A.\n     Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n     (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow> (\\<exists>b. t1 -> b)\n\ngoal (1 subgoal):\n 1. (\\<exists>c B. t1 = Obj c B) \\<or> (\\<exists>b. t1 -> b)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>c B. t1 = Obj c B) \\<or> (\\<exists>b. t1 -> b)\n\ngoal (1 subgoal):\n 1. \\<And>A Aa.\n       \\<lbrakk>Env Map.empty \\<turnstile> t1 : Aa;\n        Env Map.empty \\<turnstile> t2 : param (the Aa^l); l \\<in> do Aa;\n        \\<nexists>c T. Call t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "thus \"\\<exists>b. Call t1 l t2 \\<rightarrow>\\<^sub>\\<beta> b\""], ["proof (prove)\nusing this:\n  (\\<exists>c B. t1 = Obj c B) \\<or> (\\<exists>b. t1 -> b)\n\ngoal (1 subgoal):\n 1. \\<exists>b. Call t1 l t2 -> b", "proof (elim disjE exE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c B. t1 = Obj c B \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b\n 2. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "fix c B"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c B. t1 = Obj c B \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b\n 2. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "assume \"t1 = Obj c B\""], ["proof (state)\nthis:\n  t1 = Obj c B\n\ngoal (2 subgoals):\n 1. \\<And>c B. t1 = Obj c B \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b\n 2. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "with \n          \\<open>Env Map.empty \\<turnstile> t1 : T\\<close> obj_inv[of \"Env Map.empty\" c B T] \n          \\<open>l \\<in> do T\\<close> obj_inv_elim[of \"Env Map.empty\" c B]"], ["proof (chain)\npicking this:\n  Env Map.empty \\<turnstile> t1 : T\n  Env Map.empty \\<turnstile> Obj c B : T \\<Longrightarrow> T = B\n  l \\<in> do T\n  Env Map.empty \\<turnstile> Obj c B : B \\<Longrightarrow>\n  dom c = do B \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do B.\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             Env Map.empty\\<lparr>s:B\\<rparr>\\<lparr>p:param\n                  (the B^l)\\<rparr> \\<turnstile> the\n            (c l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the B^l)))\n  t1 = Obj c B", "have \"l \\<in> dom c\""], ["proof (prove)\nusing this:\n  Env Map.empty \\<turnstile> t1 : T\n  Env Map.empty \\<turnstile> Obj c B : T \\<Longrightarrow> T = B\n  l \\<in> do T\n  Env Map.empty \\<turnstile> Obj c B : B \\<Longrightarrow>\n  dom c = do B \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do B.\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             Env Map.empty\\<lparr>s:B\\<rparr>\\<lparr>p:param\n                  (the B^l)\\<rparr> \\<turnstile> the\n            (c l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the B^l)))\n  t1 = Obj c B\n\ngoal (1 subgoal):\n 1. l \\<in> dom c", "by auto"], ["proof (state)\nthis:\n  l \\<in> dom c\n\ngoal (2 subgoals):\n 1. \\<And>c B. t1 = Obj c B \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b\n 2. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "with \\<open>t1 = Obj c B\\<close> lc beta.beta[of l c B t2]"], ["proof (chain)\npicking this:\n  t1 = Obj c B\n  lc t1\n  lc t2\n  \\<lbrakk>l \\<in> dom c; lc (Obj c B); lc t2\\<rbrakk>\n  \\<Longrightarrow> Call (Obj c B) l t2 ->\n                    (the (c l)\\<^bsup>[Obj c B,t2]\\<^esup>)\n  l \\<in> dom c", "show ?thesis"], ["proof (prove)\nusing this:\n  t1 = Obj c B\n  lc t1\n  lc t2\n  \\<lbrakk>l \\<in> dom c; lc (Obj c B); lc t2\\<rbrakk>\n  \\<Longrightarrow> Call (Obj c B) l t2 ->\n                    (the (c l)\\<^bsup>[Obj c B,t2]\\<^esup>)\n  l \\<in> dom c\n\ngoal (1 subgoal):\n 1. \\<exists>b. Call t1 l t2 -> b", "by auto"], ["proof (state)\nthis:\n  \\<exists>b. Call t1 l t2 -> b\n\ngoal (1 subgoal):\n 1. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "assume \"t1 \\<rightarrow>\\<^sub>\\<beta> b\""], ["proof (state)\nthis:\n  t1 -> b\n\ngoal (1 subgoal):\n 1. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Call t1 l t2 -> b", "from beta.beta_CallL[OF this lc(2)]"], ["proof (chain)\npicking this:\n  Call t1 ?l t2 -> Call b ?l t2", "show ?thesis"], ["proof (prove)\nusing this:\n  Call t1 ?l t2 -> Call b ?l t2\n\ngoal (1 subgoal):\n 1. \\<exists>b. Call t1 l t2 -> b", "by auto"], ["proof (state)\nthis:\n  \\<exists>b. Call t1 l t2 -> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>b. Call t1 l t2 -> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Call t1 l t2 : A \\<longrightarrow>\n     (\\<nexists>c T. Call t1 l t2 = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Call t1 l t2 -> b)\n\ngoal (1 subgoal):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)", "case (Upd t1 l t2)"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n     (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow> (\\<exists>b. t1 -> b)\n  \\<forall>A.\n     Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n     (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow> (\\<exists>b. t2 -> b)\n\ngoal (1 subgoal):\n 1. \\<And>t1 l t2.\n       \\<lbrakk>\\<forall>A.\n                   Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n                   (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow>\n                   (\\<exists>b. t1 -> b);\n        \\<forall>A.\n           Env Map.empty \\<turnstile> t2 : A \\<longrightarrow>\n           (\\<nexists>c T. t2 = Obj c T) \\<longrightarrow>\n           (\\<exists>b. t2 -> b)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A.\n                            Env Map.empty \\<turnstile> Upd t1 l\n                  t2 : A \\<longrightarrow>\n                            (\\<nexists>c T.\n                                Upd t1 l t2 = Obj c T) \\<longrightarrow>\n                            (\\<exists>b. Upd t1 l t2 -> b)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A.\n       Env Map.empty \\<turnstile> Upd t1 l t2 : A \\<longrightarrow>\n       (\\<nexists>c T. Upd t1 l t2 = Obj c T) \\<longrightarrow>\n       (\\<exists>b. Upd t1 l t2 -> b)", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           Env Map.empty\\<lparr>s:A\\<rparr>\\<lparr>p:param\n                (the A^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> : return (the A^l);\n        Env Map.empty \\<turnstile> t1 : A; l \\<in> do A;\n        \\<nexists>c T. Upd t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "fix T F"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           Env Map.empty\\<lparr>s:A\\<rparr>\\<lparr>p:param\n                (the A^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> : return (the A^l);\n        Env Map.empty \\<turnstile> t1 : A; l \\<in> do A;\n        \\<nexists>c T. Upd t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "assume \n        \"finite F\" and\n        \"\\<forall>s p. s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p\n          \\<longrightarrow> Env Map.empty\\<lparr>s:T\\<rparr>\\<lparr>p:param(the(T^l))\\<rparr> \n              \\<turnstile> (t2\\<^bsup>[Fvar s,Fvar p]\\<^esup>) : return(the(T^l))\" and\n        \"Env Map.empty \\<turnstile> t1 : T\" and\n        \"l \\<in> do T\""], ["proof (state)\nthis:\n  finite F\n  \\<forall>s p.\n     s \\<notin> F \\<and> p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n     Env Map.empty\\<lparr>s:T\\<rparr>\\<lparr>p:param\n          (the T^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n               s,Fvar p]\\<^esup> : return (the T^l)\n  Env Map.empty \\<turnstile> t1 : T\n  l \\<in> do T\n\ngoal (1 subgoal):\n 1. \\<And>A F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           Env Map.empty\\<lparr>s:A\\<rparr>\\<lparr>p:param\n                (the A^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> : return (the A^l);\n        Env Map.empty \\<turnstile> t1 : A; l \\<in> do A;\n        \\<nexists>c T. Upd t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "from typing_regular''[OF T_Upd[OF this]] lc_upd[of t1 l t2]"], ["proof (chain)\npicking this:\n  lc (Upd t1 l t2)\n  lc (Upd t1 l t2) = (lc t1 \\<and> body t2)", "obtain \"lc t1\" and \"body t2\""], ["proof (prove)\nusing this:\n  lc (Upd t1 l t2)\n  lc (Upd t1 l t2) = (lc t1 \\<and> body t2)\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>lc t1; body t2\\<rbrakk>\n     \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lc t1\n  body t2\n\ngoal (1 subgoal):\n 1. \\<And>A F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           Env Map.empty\\<lparr>s:A\\<rparr>\\<lparr>p:param\n                (the A^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> : return (the A^l);\n        Env Map.empty \\<turnstile> t1 : A; l \\<in> do A;\n        \\<nexists>c T. Upd t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "from \n        \\<open>Env Map.empty \\<turnstile> t1 : T\\<close> \n        \\<open>\\<forall>A. Env Map.empty \\<turnstile> t1 : A \\<longrightarrow> \\<not> (\\<exists>c T. t1 = Obj c T) \\<longrightarrow> (\\<exists>b. t1 \\<rightarrow>\\<^sub>\\<beta> b)\\<close>"], ["proof (chain)\npicking this:\n  Env Map.empty \\<turnstile> t1 : T\n  \\<forall>A.\n     Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n     (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow> (\\<exists>b. t1 -> b)", "have \"(\\<exists>c B. t1 = Obj c B) \\<or> (\\<exists>b. t1 \\<rightarrow>\\<^sub>\\<beta> b)\""], ["proof (prove)\nusing this:\n  Env Map.empty \\<turnstile> t1 : T\n  \\<forall>A.\n     Env Map.empty \\<turnstile> t1 : A \\<longrightarrow>\n     (\\<nexists>c T. t1 = Obj c T) \\<longrightarrow> (\\<exists>b. t1 -> b)\n\ngoal (1 subgoal):\n 1. (\\<exists>c B. t1 = Obj c B) \\<or> (\\<exists>b. t1 -> b)", "by auto"], ["proof (state)\nthis:\n  (\\<exists>c B. t1 = Obj c B) \\<or> (\\<exists>b. t1 -> b)\n\ngoal (1 subgoal):\n 1. \\<And>A F.\n       \\<lbrakk>finite F;\n        \\<forall>s p.\n           s \\<notin> F \\<and>\n           p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n           Env Map.empty\\<lparr>s:A\\<rparr>\\<lparr>p:param\n                (the A^l)\\<rparr> \\<turnstile> t2\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> : return (the A^l);\n        Env Map.empty \\<turnstile> t1 : A; l \\<in> do A;\n        \\<nexists>c T. Upd t1 l t2 = Obj c T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "thus \"\\<exists>b. Upd t1 l t2 \\<rightarrow>\\<^sub>\\<beta> b\""], ["proof (prove)\nusing this:\n  (\\<exists>c B. t1 = Obj c B) \\<or> (\\<exists>b. t1 -> b)\n\ngoal (1 subgoal):\n 1. \\<exists>b. Upd t1 l t2 -> b", "proof (elim disjE exE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c B. t1 = Obj c B \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b\n 2. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "fix c B"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c B. t1 = Obj c B \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b\n 2. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "assume \"t1 = Obj c B\""], ["proof (state)\nthis:\n  t1 = Obj c B\n\ngoal (2 subgoals):\n 1. \\<And>c B. t1 = Obj c B \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b\n 2. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "with \n          \\<open>Env Map.empty \\<turnstile> t1 : T\\<close> obj_inv[of \"Env Map.empty\" c B T] \n          \\<open>l \\<in> do T\\<close> obj_inv_elim[of \"Env Map.empty\" c B]"], ["proof (chain)\npicking this:\n  Env Map.empty \\<turnstile> t1 : T\n  Env Map.empty \\<turnstile> Obj c B : T \\<Longrightarrow> T = B\n  l \\<in> do T\n  Env Map.empty \\<turnstile> Obj c B : B \\<Longrightarrow>\n  dom c = do B \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do B.\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             Env Map.empty\\<lparr>s:B\\<rparr>\\<lparr>p:param\n                  (the B^l)\\<rparr> \\<turnstile> the\n            (c l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the B^l)))\n  t1 = Obj c B", "have \"l \\<in> dom c\""], ["proof (prove)\nusing this:\n  Env Map.empty \\<turnstile> t1 : T\n  Env Map.empty \\<turnstile> Obj c B : T \\<Longrightarrow> T = B\n  l \\<in> do T\n  Env Map.empty \\<turnstile> Obj c B : B \\<Longrightarrow>\n  dom c = do B \\<and>\n  (\\<exists>F.\n      finite F \\<and>\n      (\\<forall>l\\<in>do B.\n          \\<forall>s p.\n             s \\<notin> F \\<and>\n             p \\<notin> F \\<and> s \\<noteq> p \\<longrightarrow>\n             Env Map.empty\\<lparr>s:B\\<rparr>\\<lparr>p:param\n                  (the B^l)\\<rparr> \\<turnstile> the\n            (c l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> : return (the B^l)))\n  t1 = Obj c B\n\ngoal (1 subgoal):\n 1. l \\<in> dom c", "by auto"], ["proof (state)\nthis:\n  l \\<in> dom c\n\ngoal (2 subgoals):\n 1. \\<And>c B. t1 = Obj c B \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b\n 2. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "with \\<open>t1 = Obj c B\\<close> \\<open>lc t1\\<close> \\<open>body t2\\<close> beta.beta_Upd[of l c B t2]"], ["proof (chain)\npicking this:\n  t1 = Obj c B\n  lc t1\n  body t2\n  \\<lbrakk>l \\<in> dom c; lc (Obj c B); body t2\\<rbrakk>\n  \\<Longrightarrow> Upd (Obj c B) l t2 -> Obj (c(l \\<mapsto> t2)) B\n  l \\<in> dom c", "show ?thesis"], ["proof (prove)\nusing this:\n  t1 = Obj c B\n  lc t1\n  body t2\n  \\<lbrakk>l \\<in> dom c; lc (Obj c B); body t2\\<rbrakk>\n  \\<Longrightarrow> Upd (Obj c B) l t2 -> Obj (c(l \\<mapsto> t2)) B\n  l \\<in> dom c\n\ngoal (1 subgoal):\n 1. \\<exists>b. Upd t1 l t2 -> b", "by auto"], ["proof (state)\nthis:\n  \\<exists>b. Upd t1 l t2 -> b\n\ngoal (1 subgoal):\n 1. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "assume \"t1 \\<rightarrow>\\<^sub>\\<beta> b\""], ["proof (state)\nthis:\n  t1 -> b\n\ngoal (1 subgoal):\n 1. \\<And>b. t1 -> b \\<Longrightarrow> \\<exists>b. Upd t1 l t2 -> b", "from beta.beta_UpdL[OF this \\<open>body t2\\<close>]"], ["proof (chain)\npicking this:\n  Upd t1 ?l t2 -> Upd b ?l t2", "show ?thesis"], ["proof (prove)\nusing this:\n  Upd t1 ?l t2 -> Upd b ?l t2\n\ngoal (1 subgoal):\n 1. \\<exists>b. Upd t1 l t2 -> b", "by auto"], ["proof (state)\nthis:\n  \\<exists>b. Upd t1 l t2 -> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>b. Upd t1 l t2 -> b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>A.\n     Env Map.empty \\<turnstile> Upd t1 l t2 : A \\<longrightarrow>\n     (\\<nexists>c T. Upd t1 l t2 = Obj c T) \\<longrightarrow>\n     (\\<exists>b. Upd t1 l t2 -> b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>A.\n      Env Map.empty \\<turnstile> t : A \\<longrightarrow>\n      (\\<nexists>c T. t = Obj c T) \\<longrightarrow>\n      (\\<exists>b. t -> b)) \\<and>\n  (\\<forall>A.\n      Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n      (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n      (\\<exists>b. Obj f A -> b))\n\ngoal (1 subgoal):\n 1. \\<exists>b. t -> b", "with assms"], ["proof (chain)\npicking this:\n  Env Map.empty \\<turnstile> t : A\n  \\<nexists>c A. t = Obj c A\n  (\\<forall>A.\n      Env Map.empty \\<turnstile> t : A \\<longrightarrow>\n      (\\<nexists>c T. t = Obj c T) \\<longrightarrow>\n      (\\<exists>b. t -> b)) \\<and>\n  (\\<forall>A.\n      Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n      (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n      (\\<exists>b. Obj f A -> b))", "show ?thesis"], ["proof (prove)\nusing this:\n  Env Map.empty \\<turnstile> t : A\n  \\<nexists>c A. t = Obj c A\n  (\\<forall>A.\n      Env Map.empty \\<turnstile> t : A \\<longrightarrow>\n      (\\<nexists>c T. t = Obj c T) \\<longrightarrow>\n      (\\<exists>b. t -> b)) \\<and>\n  (\\<forall>A.\n      Env Map.empty \\<turnstile> Obj f A : A \\<longrightarrow>\n      (\\<nexists>c T. Obj f A = Obj c T) \\<longrightarrow>\n      (\\<exists>b. Obj f A -> b))\n\ngoal (1 subgoal):\n 1. \\<exists>b. t -> b", "by auto"], ["proof (state)\nthis:\n  \\<exists>b. t -> b\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}