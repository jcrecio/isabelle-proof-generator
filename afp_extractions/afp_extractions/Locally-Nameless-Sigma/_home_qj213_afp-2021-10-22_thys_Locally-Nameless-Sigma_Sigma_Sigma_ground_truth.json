{"file_name": "/home/qj213/afp-2021-10-22/thys/Locally-Nameless-Sigma/Sigma/Sigma.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Locally-Nameless-Sigma", "problem_names": ["lemmas finite_Label_set = Finite_Set.finite_Collect_le_nat[of max_label]", "lemma Univ_abs_label: \n  \"(UNIV :: (Label set)) = Abs_Label ` {n :: nat. n \\<le> max_label}\"", "lemma finite_Label: \"finite (UNIV :: (Label set))\"", "lemma Ltake_eq_all:\n  fixes f g\n  assumes \"dom f = dom g\" and \"Ltake_eq (dom f) f g\"\n  shows \"f = g\"", "lemma Ltake_eq_dom: \n  fixes L :: \"Label set\" and f :: \"Label -~> 'a\"\n  assumes \"L \\<subseteq> dom f\" and \"card L = card (dom f)\"\n  shows \"L = (dom f)\"", "lemma sterm_induct[case_names Bvar Fvar Obj Call Upd empty insert]:\n  fixes \n  t :: sterm and P1 :: \"sterm \\<Rightarrow> bool\" and \n  f :: \"Label -~> sterm\" and P3 :: \"(Label -~> sterm) \\<Rightarrow> bool\"\n  assumes \n  \"\\<And>b. P1 (Bvar b)\" and\n  \"\\<And>x. P1 (Fvar x)\" and\n   a_obj: \"\\<And>f T. P3 f \\<Longrightarrow> P1 (Obj f T)\" and\n  \"\\<And>t1 l t2. \\<lbrakk> P1 t1; P1 t2 \\<rbrakk> \\<Longrightarrow> P1 (Call t1 l t2)\" and\n  \"\\<And>t1 l t2. \\<lbrakk> P1 t1; P1 t2 \\<rbrakk> \\<Longrightarrow> P1 (Upd t1 l t2)\" and\n  \"P3 Map.empty\" and\n  a_f: \"\\<And>t1 f l . \\<lbrakk> l \\<notin> dom f; P1 t1; P3 f \\<rbrakk> \\<Longrightarrow> (P3 (f(l \\<mapsto> t1)))\"\n  shows \"P1 t \\<and> P3 f\"", "lemma ball_tsp_P3:\n  fixes \n  P1 :: \"sterm \\<Rightarrow> bool\" and \n  P2 :: \"sterm \\<Rightarrow> fVariable \\<Rightarrow> fVariable \\<Rightarrow> bool\" and \n  P3 :: \"sterm \\<Rightarrow> bool\" and f :: \"Label -~> sterm\"\n  assumes \n  \"\\<And>t. \\<lbrakk> P1 t; \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 t s p \\<rbrakk> \\<Longrightarrow> P3 t\" and\n  \"\\<forall>l\\<in>dom f. P1 (the(f l))\" and\n  \"\\<forall>l\\<in>dom f. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 (the(f l)) s p\"\n  shows \"\\<forall>l\\<in>dom f. P3 (the(f l))\"", "lemma ball_tt'sp_P3:\n  fixes \n  P1 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> bool\" and \n  P2 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> fVariable \\<Rightarrow> fVariable \\<Rightarrow> bool\" and \n  P3 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> bool\" and \n  f :: \"Label -~> sterm\" and f' :: \"Label -~> sterm\"\n  assumes \n  \"\\<And>t t'. \\<lbrakk> P1 t t'; \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 t t' s p \\<rbrakk> \\<Longrightarrow> P3 t t'\" and\n  \"dom f = dom f'\" and\n  \"\\<forall>l\\<in>dom f. P1 (the(f l)) (the(f' l))\" and\n  \"\\<forall>l\\<in>dom f. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 (the(f l)) (the(f' l)) s p\"\n  shows \"\\<forall>l\\<in>dom f'. P3 (the(f l)) (the(f' l))\"", "lemma finite_FV_FVoption: \"finite (FV t) \\<and> finite (FVoption s)\"", "lemma finite_FV[simp]: \"finite (FV t)\"", "lemma FV_and_cofinite: \"\\<lbrakk> \\<forall>x. x \\<notin> L \\<longrightarrow> P x; finite L \\<rbrakk> \n  \\<Longrightarrow> \\<exists>L'. (finite L' \\<and> FV t \\<subseteq> L' \\<and> (\\<forall> x. x \\<notin> L' \\<longrightarrow> P x))\"", "lemma exFresh_s_p_cof: \n  fixes L :: \"fVariable set\"\n  assumes \"finite L\"\n  shows \"\\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\"", "lemma FV_option_lem: \"\\<forall>l\\<in>dom f. FV (the(f l)) = FVoption (f l)\"", "lemma sopen_eq_Fvar:\n  fixes n s p t x\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\"\n  shows \n  \"(t = Fvar x) \\<or> (x = s \\<and> t = (Bvar (Self n))) \n  \\<or> (x = p \\<and> t = (Bvar (Param n)))\"", "lemma sopen_eq_Fvar': \n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\" and \"x \\<noteq> s\" and \"x \\<noteq> p\"\n  shows \"t = Fvar x\"", "lemma sopen_eq_Bvar: \n  fixes n s p t b\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\"\n  shows \"t = Bvar b\"", "lemma sopen_eq_Obj: \n  fixes n s p t f T\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\"\n  shows \n  \"\\<exists>f'. {n \\<rightarrow> [Fvar s, Fvar p]} Obj f' T = Obj f T  \n      \\<and>  t = Obj f' T\"", "lemma sopen_eq_Upd: \n  fixes n s p t t1 l t2\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\"\n  shows \n  \"\\<exists>t1' t2'. {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \n           \\<and> {(Suc n) \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Upd t1' l t2'\"", "lemma sopen_eq_Call: \n  fixes n s p t t1 l t2\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\"\n  shows \n  \"\\<exists>t1' t2'. {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \n           \\<and> {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'\"", "lemma dom_sopenoption_lem[simp]: \"dom (\\<lambda>l. sopen_option k s t (f l)) = dom f\"", "lemma sopen_option_lem: \n  \"\\<forall>l\\<in>dom f. {n \\<rightarrow> [s,p]} the(f l) = the (sopen_option n s p (f l))\"", "lemma pred_sopenoption_lem:\n  \"(\\<forall>l\\<in>dom (\\<lambda>l. sopen_option n s p (f l)).\n     (P::sterm \\<Rightarrow> bool) (the (sopen_option n s p (f l)))) = \n   (\\<forall>l\\<in>dom f. (P::sterm \\<Rightarrow> bool) ({n \\<rightarrow> [s,p]} the (f l)))\"", "lemma sopen_FV[rule_format]:\n  \"\\<forall>n s p. FV ({n \\<rightarrow> [s,p]} t) \\<subseteq> FV t \\<union> FV s \\<union> FV p\"", "lemma sopen_commute[rule_format]:\n  \"\\<forall>n k s p s' p'. n \\<noteq> k\n     \\<longrightarrow> {n \\<rightarrow> [Fvar s', Fvar p']} {k \\<rightarrow> [Fvar s, Fvar p]} t \n         = {k \\<rightarrow> [Fvar s, Fvar p]} {n \\<rightarrow> [Fvar s', Fvar p']} t\"", "lemma sopen_fresh_inj[rule_format]:\n  \"\\<forall>n s p t'. {n \\<rightarrow> [Fvar s, Fvar p]} t = {n \\<rightarrow> [Fvar s, Fvar p]} t'\n     \\<longrightarrow> s \\<notin> FV t \\<longrightarrow> s \\<notin> FV t' \\<longrightarrow> p \\<notin> FV t \\<longrightarrow> p \\<notin> FV t' \\<longrightarrow> s \\<noteq> p\n     \\<longrightarrow> t = t'\"", "lemma dom_scloseoption_lem[simp]: \"dom (\\<lambda>l. sclose_option k s t (f l)) = dom f\"", "lemma sclose_option_lem: \n  \"\\<forall>l\\<in>dom f. {n \\<leftarrow> [s,p]} the(f l) = the (sclose_option n s p (f l))\"", "lemma pred_scloseoption_lem:\n  \"(\\<forall>l\\<in>dom (\\<lambda>l. sclose_option n s p (f l)).\n     (P::sterm \\<Rightarrow> bool) (the (sclose_option n s p (f l)))) = \n   (\\<forall>l\\<in>dom f. (P::sterm \\<Rightarrow> bool) ({n \\<leftarrow> [s,p]} the (f l)))\"", "lemma sclose_fresh[simp, rule_format]:\n  \"\\<forall>n s p. s \\<notin> FV t \\<longrightarrow> p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t\"", "lemma sclose_FV[rule_format]:\n  \"\\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}\"", "lemma sclose_subset_FV[rule_format]:\n  \"FV ({n \\<leftarrow> [s,p]} t) \\<subseteq> FV t\"", "lemma Self_not_in_closed[simp]: \"sa \\<notin> FV ({n \\<leftarrow> [sa,pa]} t)\"", "lemma Param_not_in_closed[simp]: \"pa \\<notin> FV ({n \\<leftarrow> [sa,pa]} t)\"", "lemma dom_ssubstoption_lem[simp]: \"dom (\\<lambda>l. ssubst_option z u (f l)) = dom f\"", "lemma ssubst_option_lem: \n  \"\\<forall>l\\<in>dom f. [z \\<rightarrow> u] the(f l) = the (ssubst_option z u (f l))\"", "lemma pred_ssubstoption_lem:\n  \"(\\<forall>l\\<in>dom (\\<lambda>l. ssubst_option x t (f l)).\n     (P::sterm \\<Rightarrow> bool) (the (ssubst_option x t (f l)))) = \n   (\\<forall>l\\<in>dom f. (P::sterm \\<Rightarrow> bool) ([x \\<rightarrow> t] the (f l)))\"", "lemma ssubst_fresh[simp, rule_format]:\n  \"\\<forall>s sa. sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t\"", "lemma ssubst_commute[rule_format]:\n  \"\\<forall>s p sa pa. s \\<noteq> p \\<longrightarrow> s \\<notin> FV pa \\<longrightarrow> p \\<notin> FV sa \n     \\<longrightarrow> [s \\<rightarrow> sa] [p \\<rightarrow> pa] t = [p \\<rightarrow> pa] [s \\<rightarrow> sa] t\"", "lemma ssubst_FV[rule_format]:\n  \"\\<forall>x s. FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x})\"", "lemma ssubstoption_insert: \n  \"l \\<in> dom f \n  \\<Longrightarrow> (\\<lambda>(la::Label). ssubst_option x t' (if la = l then Some t else f la))\n      = (\\<lambda>(la::Label). ssubst_option x t' (f la))(l \\<mapsto> [x \\<rightarrow> t'] t)\"", "lemma lc_bvar: \"lc (Bvar b) = False\"", "lemma lc_obj:\n  \"lc (Obj f T) = (\\<forall>l\\<in>dom f. body (the(f l)))\"", "lemma lc_upd: \"lc (Upd t l s) = (lc t \\<and> body s)\"", "lemma lc_call: \"lc (Call t l s) = (lc t \\<and> lc s)\"", "lemma lc_induct[consumes 1, case_names Fvar Call Upd Obj Bnd]:\n  fixes P1 :: \"sterm \\<Rightarrow> bool\" and P2 :: \"sterm \\<Rightarrow> bool\"\n  assumes\n  \"lc t\" and\n  \"\\<And>x. P1 (Fvar x)\" and\n  \"\\<And>t l a. \\<lbrakk> lc t; P1 t; lc a; P1 a \\<rbrakk> \\<Longrightarrow> P1 (Call t l a)\" and\n  \"\\<And>t l u. \\<lbrakk> lc t; P1 t; P2 u \\<rbrakk> \\<Longrightarrow> P1 (Upd t l u)\" and\n  \"\\<And>f T. \\<forall>l\\<in>dom f. P2 (the(f l)) \\<Longrightarrow> P1 (Obj f T)\" and\n  \"\\<And>L t. \\<lbrakk> finite L; \n            \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n             \\<longrightarrow> lc (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<and> P1 (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rbrakk>\n  \\<Longrightarrow> P2 t\"\n  shows \"P1 t\"", "lemma ssubst_intro[rule_format]:\n  \"\\<forall>n s p sa pa. sa \\<notin> FV t \\<longrightarrow> pa \\<notin> FV t \\<longrightarrow> sa \\<noteq> pa\n     \\<longrightarrow> sa \\<notin> FV p\n     \\<longrightarrow> {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar sa, Fvar pa]} t\"", "lemma sopen_lc_FV[rule_format]:\n  fixes t\n  assumes \"lc t\"\n  shows \"\\<forall>n s p. {n \\<rightarrow> [Fvar s, Fvar p]} t = t\"", "lemma sopen_lc[simp]: \n  fixes t n s p\n  assumes \"lc t\"\n  shows \"{n \\<rightarrow> [s,p]} t = t\"", "lemma sopen_twice[rule_format]:\n  \"\\<forall>s p s' p' n. lc s \\<longrightarrow> lc p \n     \\<longrightarrow> {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t = {n \\<rightarrow> [s,p]} t\"", "lemma sopen_sclose_commute[rule_format]:\n  \"\\<forall>n k s p sa pa. n \\<noteq> k \\<longrightarrow> sa \\<notin> FV s \\<longrightarrow> sa \\<notin> FV p \n     \\<longrightarrow> pa \\<notin> FV s \\<longrightarrow> pa \\<notin> FV p\n     \\<longrightarrow> {n \\<rightarrow> [s, p]} {k \\<leftarrow> [sa,pa]} t = {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s, p]} t\"", "lemma sclose_sopen_eq_t[rule_format]:\n  \"\\<forall>n s p. s \\<notin> FV t \\<longrightarrow> p \\<notin> FV t \\<longrightarrow> s \\<noteq> p\n     \\<longrightarrow> {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s, Fvar p]} t = t\"", "lemma sopen_sclose_eq_t[simp, rule_format]:\n  fixes t\n  assumes \"lc t\"\n  shows \"\\<forall>n s p. {n \\<rightarrow> [Fvar s, Fvar p]} {n \\<leftarrow> [s,p]} t = t\"", "lemma ssubst_sopen_distrib[rule_format]:\n  \"\\<forall>n s p t'. lc t' \\<longrightarrow> [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t \n   = {n \\<rightarrow> [[x \\<rightarrow> t']s, [x \\<rightarrow> t']p]} [x \\<rightarrow> t'] t\"", "lemma ssubst_openz_distrib:\n  \"lc t' \\<Longrightarrow> [x \\<rightarrow> t'] (t\\<^bsup>[s,p]\\<^esup>) = (([x \\<rightarrow> t'] t)\\<^bsup>[[x \\<rightarrow> t'] s, [x \\<rightarrow> t'] p]\\<^esup>)\"", "lemma ssubst_sopen_commute: \"\\<lbrakk> lc t'; x \\<notin> FV s; x \\<notin> FV p \\<rbrakk> \n  \\<Longrightarrow> [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t = {n \\<rightarrow> [s,p]} [x \\<rightarrow> t'] t\"", "lemma sopen_commute_gen:\n  fixes s p s' p' n k t\n  assumes \"lc s\" and \"lc p\" and \"lc s'\" and \"lc p'\" and \"n \\<noteq> k\"\n  shows \"{n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t = {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t\"", "lemma ssubst_preserves_lc[simp, rule_format]:\n  fixes t\n  assumes \"lc t\"\n  shows \"\\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)\"", "lemma sopen_sclose_eq_ssubst: \"\\<lbrakk> sa \\<noteq> pa; sa \\<notin> FV p; lc t \\<rbrakk> \n  \\<Longrightarrow> {n \\<rightarrow> [s,p]} {n \\<leftarrow> [sa,pa]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] t\"", "lemma ssubst_sclose_commute[rule_format]:\n  \"\\<forall>x n s p t'. s \\<notin> FV t' \\<longrightarrow> p \\<notin> FV t' \\<longrightarrow> x \\<noteq> s \\<longrightarrow> x \\<noteq> p \n     \\<longrightarrow> [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t = {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t\"", "lemma body_lc_FV: \n  fixes t s p\n  assumes \"body t\"\n  shows \"lc (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>)\"", "lemma body_lc: \n  fixes t s p\n  assumes \"body t\" and \"lc s\" and \"lc p\"\n  shows \"lc (t\\<^bsup>[s, p]\\<^esup>)\"", "lemma lc_body: \n  fixes t s p\n  assumes \"lc t\" and \"s \\<noteq> p\"\n  shows \"body (\\<sigma>[s,p] t)\"", "lemma ssubst_preserves_lcE_lem[rule_format]:\n  fixes t\n  assumes \"lc t\"\n  shows \"\\<forall>x u t'. t = [x \\<rightarrow> u] t' \\<longrightarrow> lc u \\<longrightarrow> lc t'\"", "lemma ssubst_preserves_lcE: \"\\<lbrakk> lc ([x \\<rightarrow> t'] t); lc t' \\<rbrakk> \\<Longrightarrow> lc t\"", "lemma obj_openz_lc: \"\\<lbrakk> lc (Obj f T); lc p; l \\<in> dom f \\<rbrakk> \\<Longrightarrow> lc (the(f l)\\<^bsup>[Obj f T, p]\\<^esup>)\"", "lemma obj_insert_lc: \n  fixes f T t l\n  assumes \"lc (Obj f T)\" and \"body t\"\n  shows \"lc (Obj (f(l \\<mapsto> t)) T)\"", "lemma ssubst_preserves_body[simp]:\n  fixes t t' x\n  assumes \"body t\" and \"lc t'\"\n  shows \"body ([x \\<rightarrow> t'] t)\"", "lemma sopen_preserves_body[simp]:\n  fixes t s p\n  assumes \"body t\" and \"lc s\" and \"lc p\"\n  shows \"body ({n \\<rightarrow> [s,p]} t)\"", "lemma beta_induct[consumes 1, \n  case_names CallL CallR UpdL UpdR Upd Obj beta Bnd]:\n  fixes \n  t :: sterm and t' :: sterm and \n  P1 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> bool\" and P2 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> bool\"\n  assumes\n  \"t \\<rightarrow>\\<^sub>\\<beta> t'\" and\n  \"\\<And>t t' u l. \\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta> t'; P1 t t'; lc u \\<rbrakk> \\<Longrightarrow> P1 (Call t l u) (Call t' l u)\" and\n  \"\\<And>t t' u l. \\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta> t'; P1 t t'; lc u \\<rbrakk> \\<Longrightarrow> P1 (Call u l t) (Call u l t')\" and\n  \"\\<And>t t' u l. \\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta> t'; P1 t t'; body u\\<rbrakk> \\<Longrightarrow> P1 (Upd t l u) (Upd t' l u)\" and\n  \"\\<And>t t' u l. \\<lbrakk> P2 t t'; lc u \\<rbrakk> \\<Longrightarrow> P1 (Upd u l t) (Upd u l t')\" and\n  \"\\<And>l f T t. \\<lbrakk> l \\<in> dom f; lc (Obj f T); body t \\<rbrakk> \n      \\<Longrightarrow> P1 (Upd (Obj f T) l t) (Obj (f(l \\<mapsto> t)) T)\" and\n  \"\\<And>l f t t' T. \\<lbrakk> l \\<in> dom f; P2 t t'; \\<forall>l\\<in>dom f. body (the (f l)) \\<rbrakk>\n      \\<Longrightarrow> P1 (Obj (f(l \\<mapsto> t)) T) (Obj (f(l \\<mapsto> t')) T)\" and\n  \"\\<And>l f T a. \\<lbrakk> l \\<in> dom f; lc (Obj f T); lc a \\<rbrakk> \n      \\<Longrightarrow> P1 (Call (Obj f T) l a) (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\" and\n  \"\\<And>L t t'. \n      \\<lbrakk> finite L; \n        \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n        \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \n                 \\<and> P1 (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) t'' \\<and> t' = \\<sigma>[s,p] t'') \\<rbrakk>\n      \\<Longrightarrow> P2 t t'\"\n  shows \"P1 t t'\"", "lemma Fvar_beta: \"Fvar x \\<rightarrow>\\<^sub>\\<beta> t \\<Longrightarrow> False\"", "lemma Obj_beta: \n  assumes \"Obj f T \\<rightarrow>\\<^sub>\\<beta> z\"\n  shows\n  \"\\<exists>l f' t t'. dom f = dom f' \\<and> f = (f'(l \\<mapsto> t)) \\<and> l \\<in> dom f' \n             \\<and> (\\<exists>L. finite L \n                  \\<and> (\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n                      \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> t'= \\<sigma>[s,p]t'')))\n             \\<and> z = Obj (f'(l \\<mapsto> t')) T\"", "lemma Upd_beta: \"Upd t l u \\<rightarrow>\\<^sub>\\<beta> z \\<Longrightarrow>\n  (\\<exists>t'. t \\<rightarrow>\\<^sub>\\<beta> t' \\<and> z = Upd t' l u) \n  \\<or>(\\<exists>u' L. finite L \n         \\<and> (\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n             \\<longrightarrow> (\\<exists>t''. (u\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> u' = \\<sigma>[s,p]t'')) \n         \\<and> z = Upd t l u')\n  \\<or>(\\<exists>f T. l \\<in> dom f \\<and> Obj f T = t \\<and> z = Obj (f(l \\<mapsto> u)) T)\"", "lemma Call_beta: \"Call t l u \\<rightarrow>\\<^sub>\\<beta> z \\<Longrightarrow>\n  (\\<exists>t'. t \\<rightarrow>\\<^sub>\\<beta> t' \\<and> z = Call t' l u) \\<or> (\\<exists>u'. u \\<rightarrow>\\<^sub>\\<beta> u' \\<and> z = Call t l u')\n  \\<or>(\\<exists>f T. Obj f T = t \\<and> l \\<in> dom f \\<and> z = (the (f l)\\<^bsup>[Obj f T, u]\\<^esup>))\"", "lemma beta_lc[simp]:\n  fixes t t'\n  assumes \"t \\<rightarrow>\\<^sub>\\<beta> t'\"\n  shows \"lc t \\<and> lc t'\"", "lemma beta_ssubst[rule_format]:\n  fixes t t'\n  assumes \"t \\<rightarrow>\\<^sub>\\<beta> t'\"\n  shows \"\\<forall>x v. lc v \\<longrightarrow> [x \\<rightarrow> v] t \\<rightarrow>\\<^sub>\\<beta> [x \\<rightarrow> v] t'\"", "lemma beta_preserves_FV[simp, rule_format]:\n  fixes t t' x\n  assumes \"t \\<rightarrow>\\<^sub>\\<beta> t'\"\n  shows \"x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'\"", "lemma rtrancl_beta_lc[simp, rule_format]: \"t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t' \\<Longrightarrow> t \\<noteq> t' \\<longrightarrow> lc t \\<and> lc t'\"", "lemma rtrancl_beta_lc2[simp]: \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; lc t \\<rbrakk> \\<Longrightarrow> lc t'\"", "lemma rtrancl_beta_body:\n  fixes L t t'\n  assumes \n  \"finite L\" and\n  \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p] t'')\" and\n  \"body t\"\n  shows \"body t'\"", "lemma rtrancl_beta_preserves_FV[simp, rule_format]: \n  \"t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t' \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'\"", "lemma rtrancl_beta_CallL [intro!, rule_format]:\n  \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; lc u \\<rbrakk> \\<Longrightarrow> Call t l u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Call t' l u\"", "lemma rtrancl_beta_CallR [intro!, rule_format]:\n  \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; lc u \\<rbrakk> \\<Longrightarrow> Call u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Call u l t'\"", "lemma rtrancl_beta_Call [intro!, rule_format]:\n  \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; lc t; u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* u'; lc u \\<rbrakk> \n  \\<Longrightarrow> Call t l u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Call t' l u'\"", "lemma rtrancl_beta_UpdL:\n  \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; body u \\<rbrakk> \\<Longrightarrow> Upd t l u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd t' l u\"", "lemma beta_binder[rule_format]:\n  fixes t t'\n  assumes \"t \\<rightarrow>\\<^sub>\\<beta> t'\"\n  shows \n  \"\\<forall>L s p. finite L \\<longrightarrow> s \\<notin> L \\<longrightarrow> p \\<notin> L \\<longrightarrow> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>L'. finite L' \\<and> (\\<forall>sa pa. sa \\<notin> L' \\<and> pa \\<notin> L' \\<and> sa \\<noteq> pa\n                            \\<longrightarrow> (\\<exists>t''. (\\<sigma>[s,p] t)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \n                                     \\<and> \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t'')))\"", "lemma rtrancl_beta_UpdR:\n  fixes L t t' u l\n  assumes \n  \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>t''. (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p]t'')\" and\n  \"finite L\" and \"lc u\"\n  shows \"Upd u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd u l t'\"", "lemma rtrancl_beta_Upd: \n  \"\\<lbrakk> u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* u'; finite L; \n     \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n      \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p]t'');\n     lc u; body t \\<rbrakk>\n  \\<Longrightarrow> Upd u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd u' l t'\"", "lemma rtrancl_beta_obj: \n  fixes l f L T t t'\n  assumes \n  \"l \\<in> dom f\" and \"finite L\" and\n  \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p]t'')\" and\n  \"\\<forall>l\\<in>dom f. body (the(f l))\" and \"body t\"\n  shows \"Obj (f (l \\<mapsto> t)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f (l \\<mapsto> t')) T\"", "lemma obj_lem: \n  fixes l f T L t'\n  assumes \n  \"l \\<in> dom f\" and \"finite L\" and\n  \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>t''. ((the(f l))\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p]t'')\" and\n  \"\\<forall>l\\<in>dom f. body (the(f l))\"\n  shows \"Obj f T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f(l \\<mapsto> t')) T\"", "lemma rtrancl_beta_obj_lem00: \n  fixes L f g\n  assumes \n  \"finite L\" and\n  \"\\<forall>l\\<in>dom f. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n               \\<longrightarrow> (\\<exists>t''. ((the(f l))\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \n                        \\<and> the(g l) = \\<sigma>[s,p]t'')\" and\n  \"dom f = dom g\" and \"\\<forall>l\\<in>dom f. body (the (f l))\"\n  shows \n  \"\\<forall>k \\<le> (card (dom f)). \n    (\\<exists>ob. length ob = (k + 1)\n        \\<and> (\\<forall>obi. obi \\<in> set ob \\<longrightarrow> dom (fst(obi)) = dom f \\<and> ((snd obi) \\<subseteq> dom f)) \n        \\<and> (fst (ob!0) = f)\n        \\<and> (card (snd (ob!k)) = k)\n        \\<and> (\\<forall>i < k. snd (ob!i) \\<subset> snd (ob!k))\n        \\<and> (Obj (fst (ob!0)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst (ob!k)) T)\n        \\<and> (card (snd (ob!k)) = k \n           \\<longrightarrow> (Ltake_eq (snd (ob!k)) (fst (ob!k)) g)\n                \\<and> (Ltake_eq ((dom f) - (snd (ob!k))) (fst (ob!k)) f)))\"", "lemma rtrancl_beta_obj_n: \n  fixes f g L T\n  assumes \n  \"finite L\" and\n  \"\\<forall>l\\<in>dom f. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n               \\<longrightarrow> (\\<exists>t''. ((the(f l))\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \n                        \\<and> the(g l) = \\<sigma>[s,p]t'')\" and\n  \"dom f = dom g\" and \"\\<forall>l\\<in>dom f. body (the(f l))\"\n  shows \"Obj f T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj g T\"", "lemma SizeOfObjectPos: \"ssize (Obj (f::Label -~> sterm) T) > 0\""], "translations": [["", "lemmas finite_Label_set = Finite_Set.finite_Collect_le_nat[of max_label]"], ["", "lemma Univ_abs_label: \n  \"(UNIV :: (Label set)) = Abs_Label ` {n :: nat. n \\<le> max_label}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV = Abs_Label ` {n. n \\<le> max_label}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. UNIV = Abs_Label ` {n. n \\<le> max_label}", "have \"\\<forall>x :: Label. x : Abs_Label ` {n :: nat. n \\<le> max_label}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> Abs_Label ` {n. n \\<le> max_label}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Abs_Label ` {n. n \\<le> max_label}", "fix x :: Label"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Abs_Label ` {n. n \\<le> max_label}", "have \"Rep_Label x \\<in> {n. n \\<le> max_label}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_Label x \\<in> {n. n \\<le> max_label}", "by (fold Label_def, rule Rep_Label)"], ["proof (state)\nthis:\n  Rep_Label x \\<in> {n. n \\<le> max_label}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Abs_Label ` {n. n \\<le> max_label}", "hence \"Abs_Label (Rep_Label x) \\<in> Abs_Label ` {n. n \\<le> max_label}\""], ["proof (prove)\nusing this:\n  Rep_Label x \\<in> {n. n \\<le> max_label}\n\ngoal (1 subgoal):\n 1. Abs_Label (Rep_Label x) \\<in> Abs_Label ` {n. n \\<le> max_label}", "by (rule imageI)"], ["proof (state)\nthis:\n  Abs_Label (Rep_Label x) \\<in> Abs_Label ` {n. n \\<le> max_label}\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Abs_Label ` {n. n \\<le> max_label}", "thus \"x \\<in> Abs_Label ` {n. n \\<le> max_label}\""], ["proof (prove)\nusing this:\n  Abs_Label (Rep_Label x) \\<in> Abs_Label ` {n. n \\<le> max_label}\n\ngoal (1 subgoal):\n 1. x \\<in> Abs_Label ` {n. n \\<le> max_label}", "by (simp add: Rep_Label_inverse)"], ["proof (state)\nthis:\n  x \\<in> Abs_Label ` {n. n \\<le> max_label}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x. x \\<in> Abs_Label ` {n. n \\<le> max_label}\n\ngoal (1 subgoal):\n 1. UNIV = Abs_Label ` {n. n \\<le> max_label}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> Abs_Label ` {n. n \\<le> max_label}\n\ngoal (1 subgoal):\n 1. UNIV = Abs_Label ` {n. n \\<le> max_label}", "by force"], ["proof (state)\nthis:\n  UNIV = Abs_Label ` {n. n \\<le> max_label}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_Label: \"finite (UNIV :: (Label set))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite UNIV", "by (simp add: Univ_abs_label finite_Label_set)"], ["", "instance Label :: finite"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(Label, finite_class)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. finite UNIV", "show \"finite (UNIV :: (Label set))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite UNIV", "by (rule finite_Label)"], ["proof (state)\nthis:\n  finite UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "consts\nLsuc :: \"(Label set) \\<Rightarrow> Label \\<Rightarrow> Label\"\nLmin :: \"(Label set) \\<Rightarrow> Label\"\nLmax :: \"(Label set) \\<Rightarrow> Label\""], ["", "definition Llt :: \"[Label, Label] \\<Rightarrow> bool\" (infixl \"<\" 50) where\n  \"Llt a b == Rep_Label a < Rep_Label b\""], ["", "definition Lle :: \"[Label, Label] \\<Rightarrow> bool\" (infixl \"\\<le>\" 50) where\n  \"Lle a b == Rep_Label a \\<le> Rep_Label b\""], ["", "definition Ltake_eq :: \"[Label set, (Label \\<rightharpoonup> 'a),  (Label \\<rightharpoonup> 'a)] \\<Rightarrow> bool\"\nwhere  \"Ltake_eq L f g  == \\<forall>l\\<in>L. f l = g l\""], ["", "lemma Ltake_eq_all:\n  fixes f g\n  assumes \"dom f = dom g\" and \"Ltake_eq (dom f) f g\"\n  shows \"f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = g", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "from assms"], ["proof (chain)\npicking this:\n  dom f = dom g\n  Ltake_eq (dom f) f g", "show \"f x = g x\""], ["proof (prove)\nusing this:\n  dom f = dom g\n  Ltake_eq (dom f) f g\n\ngoal (1 subgoal):\n 1. f x = g x", "unfolding Ltake_eq_def"], ["proof (prove)\nusing this:\n  dom f = dom g\n  \\<forall>l\\<in>dom f. f l = g l\n\ngoal (1 subgoal):\n 1. f x = g x", "by (cases \"x \\<in> dom f\", auto)"], ["proof (state)\nthis:\n  f x = g x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Ltake_eq_dom: \n  fixes L :: \"Label set\" and f :: \"Label -~> 'a\"\n  assumes \"L \\<subseteq> dom f\" and \"card L = card (dom f)\"\n  shows \"L = (dom f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. L = dom f", "proof (auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> L \\<Longrightarrow> \\<exists>y. f x = Some y\n 2. \\<And>x y. f x = Some y \\<Longrightarrow> x \\<in> L", "fix x :: Label"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> L \\<Longrightarrow> \\<exists>y. f x = Some y\n 2. \\<And>x y. f x = Some y \\<Longrightarrow> x \\<in> L", "assume \"x \\<in> L\""], ["proof (state)\nthis:\n  x \\<in> L\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> L \\<Longrightarrow> \\<exists>y. f x = Some y\n 2. \\<And>x y. f x = Some y \\<Longrightarrow> x \\<in> L", "with in_mono[OF assms(1)]"], ["proof (chain)\npicking this:\n  ?x \\<in> L \\<longrightarrow> ?x \\<in> dom f\n  x \\<in> L", "show \"\\<exists>y. f x = Some y\""], ["proof (prove)\nusing this:\n  ?x \\<in> L \\<longrightarrow> ?x \\<in> dom f\n  x \\<in> L\n\ngoal (1 subgoal):\n 1. \\<exists>y. f x = Some y", "by blast"], ["proof (state)\nthis:\n  \\<exists>y. f x = Some y\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x = Some y \\<Longrightarrow> x \\<in> L", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f x = Some y \\<Longrightarrow> x \\<in> L", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f x = Some y \\<Longrightarrow> x \\<in> L", "assume \"f x = Some y\""], ["proof (state)\nthis:\n  f x = Some y\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x = Some y \\<Longrightarrow> x \\<in> L", "from card_seteq[OF finite_dom_fmap[of f] \\<open>L \\<subseteq> dom f\\<close>] \\<open>card L = card (dom f)\\<close>"], ["proof (chain)\npicking this:\n  card (dom f) \\<le> card L \\<Longrightarrow> L = dom f\n  card L = card (dom f)", "have \"L = dom f\""], ["proof (prove)\nusing this:\n  card (dom f) \\<le> card L \\<Longrightarrow> L = dom f\n  card L = card (dom f)\n\ngoal (1 subgoal):\n 1. L = dom f", "by simp"], ["proof (state)\nthis:\n  L = dom f\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x = Some y \\<Longrightarrow> x \\<in> L", "with \\<open>f x = Some y\\<close>"], ["proof (chain)\npicking this:\n  f x = Some y\n  L = dom f", "show \"x \\<in> L\""], ["proof (prove)\nusing this:\n  f x = Some y\n  L = dom f\n\ngoal (1 subgoal):\n 1. x \\<in> L", "by force"], ["proof (state)\nthis:\n  x \\<in> L\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Object-terms in Locally Nameless representation notation, beta-reduction and substitution\\<close>"], ["", "datatype type = Object \"Label -~> (type \\<times> type)\""], ["", "datatype bVariable = Self nat | Param nat"], ["", "type_synonym fVariable = string"], ["", "(* each binder introduces 2 variables: self and parameter *)\n(* thus to each deBruijn index (nat) correspond 2 variables of the same depth *)"], ["", "subsubsection \\<open>Enriched Sigma datatype of objects\\<close>"], ["", "datatype sterm =\n  Bvar bVariable             (* bound variable -- as deBruijn index *)\n| Fvar fVariable             (* free variable *)\n| Obj \"Label -~> sterm\" type (* An object maps labels to terms and has a type *)\n| Call sterm Label sterm     (* Call a l b calls method l on object a with param b *)\n| Upd sterm Label sterm"], ["", "(* Upd a l b updates method l of object a with body b *)"], ["", "datatype_compat sterm"], ["", "primrec applyPropOnOption:: \"(sterm \\<Rightarrow> bool) \\<Rightarrow> sterm option \\<Rightarrow> bool\" where\nf1:  \"applyPropOnOption P None  = True\" |\nf2:  \"applyPropOnOption P (Some t) = P t\""], ["", "lemma sterm_induct[case_names Bvar Fvar Obj Call Upd empty insert]:\n  fixes \n  t :: sterm and P1 :: \"sterm \\<Rightarrow> bool\" and \n  f :: \"Label -~> sterm\" and P3 :: \"(Label -~> sterm) \\<Rightarrow> bool\"\n  assumes \n  \"\\<And>b. P1 (Bvar b)\" and\n  \"\\<And>x. P1 (Fvar x)\" and\n   a_obj: \"\\<And>f T. P3 f \\<Longrightarrow> P1 (Obj f T)\" and\n  \"\\<And>t1 l t2. \\<lbrakk> P1 t1; P1 t2 \\<rbrakk> \\<Longrightarrow> P1 (Call t1 l t2)\" and\n  \"\\<And>t1 l t2. \\<lbrakk> P1 t1; P1 t2 \\<rbrakk> \\<Longrightarrow> P1 (Upd t1 l t2)\" and\n  \"P3 Map.empty\" and\n  a_f: \"\\<And>t1 f l . \\<lbrakk> l \\<notin> dom f; P1 t1; P3 f \\<rbrakk> \\<Longrightarrow> (P3 (f(l \\<mapsto> t1)))\"\n  shows \"P1 t \\<and> P3 f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P1 t \\<and> P3 f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P1 t \\<and> P3 f", "have \"\\<forall>t (f::Label -~> sterm) l.  P1 t \\<and> (applyPropOnOption P1) (f l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t f l. P1 t \\<and> applyPropOnOption P1 (f l)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t f l. P1 t \\<and> applyPropOnOption P1 (f l)", "fix t :: sterm and f' :: \"Label -~> sterm\" and l :: Label"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t f l. P1 t \\<and> applyPropOnOption P1 (f l)", "define foobar where \"foobar = f' l\""], ["proof (state)\nthis:\n  foobar = f' l\n\ngoal (1 subgoal):\n 1. \\<And>t f l. P1 t \\<and> applyPropOnOption P1 (f l)", "from assms"], ["proof (chain)\npicking this:\n  P1 (Bvar ?b)\n  P1 (Fvar ?x)\n  P3 ?f \\<Longrightarrow> P1 (Obj ?f ?T)\n  \\<lbrakk>P1 ?t1.0; P1 ?t2.0\\<rbrakk>\n  \\<Longrightarrow> P1 (Call ?t1.0 ?l ?t2.0)\n  \\<lbrakk>P1 ?t1.0; P1 ?t2.0\\<rbrakk>\n  \\<Longrightarrow> P1 (Upd ?t1.0 ?l ?t2.0)\n  P3 Map.empty\n  \\<lbrakk>?l \\<notin> dom ?f; P1 ?t1.0; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))", "show \"P1 t \\<and> applyPropOnOption P1 foobar\""], ["proof (prove)\nusing this:\n  P1 (Bvar ?b)\n  P1 (Fvar ?x)\n  P3 ?f \\<Longrightarrow> P1 (Obj ?f ?T)\n  \\<lbrakk>P1 ?t1.0; P1 ?t2.0\\<rbrakk>\n  \\<Longrightarrow> P1 (Call ?t1.0 ?l ?t2.0)\n  \\<lbrakk>P1 ?t1.0; P1 ?t2.0\\<rbrakk>\n  \\<Longrightarrow> P1 (Upd ?t1.0 ?l ?t2.0)\n  P3 Map.empty\n  \\<lbrakk>?l \\<notin> dom ?f; P1 ?t1.0; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n\ngoal (1 subgoal):\n 1. P1 t \\<and> applyPropOnOption P1 foobar", "proof (induct_tac t and foobar rule: compat_sterm.induct compat_sterm_option.induct, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<And>x. applyPropOnOption P1 (x1 x); \\<And>b. P1 (Bvar b);\n        \\<And>x. P1 (Fvar x);\n        \\<And>f T. P3 f \\<Longrightarrow> P1 (Obj f T);\n        \\<And>t1 t2 l.\n           \\<lbrakk>P1 t1; P1 t2\\<rbrakk>\n           \\<Longrightarrow> P1 (Call t1 l t2);\n        \\<And>t1 t2 l.\n           \\<lbrakk>P1 t1; P1 t2\\<rbrakk>\n           \\<Longrightarrow> P1 (Upd t1 l t2);\n        P3 Map.empty;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1))\\<rbrakk>\n       \\<Longrightarrow> P1 (Obj x1 x2)", "fix f :: \"Label -~> sterm\" and T :: type"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<And>x. applyPropOnOption P1 (x1 x); \\<And>b. P1 (Bvar b);\n        \\<And>x. P1 (Fvar x);\n        \\<And>f T. P3 f \\<Longrightarrow> P1 (Obj f T);\n        \\<And>t1 t2 l.\n           \\<lbrakk>P1 t1; P1 t2\\<rbrakk>\n           \\<Longrightarrow> P1 (Call t1 l t2);\n        \\<And>t1 t2 l.\n           \\<lbrakk>P1 t1; P1 t2\\<rbrakk>\n           \\<Longrightarrow> P1 (Upd t1 l t2);\n        P3 Map.empty;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1))\\<rbrakk>\n       \\<Longrightarrow> P1 (Obj x1 x2)", "assume \"\\<And>x. applyPropOnOption P1 (f x)\""], ["proof (state)\nthis:\n  applyPropOnOption P1 (f ?x)\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<And>x. applyPropOnOption P1 (x1 x); \\<And>b. P1 (Bvar b);\n        \\<And>x. P1 (Fvar x);\n        \\<And>f T. P3 f \\<Longrightarrow> P1 (Obj f T);\n        \\<And>t1 t2 l.\n           \\<lbrakk>P1 t1; P1 t2\\<rbrakk>\n           \\<Longrightarrow> P1 (Call t1 l t2);\n        \\<And>t1 t2 l.\n           \\<lbrakk>P1 t1; P1 t2\\<rbrakk>\n           \\<Longrightarrow> P1 (Upd t1 l t2);\n        P3 Map.empty;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1))\\<rbrakk>\n       \\<Longrightarrow> P1 (Obj x1 x2)", "with a_f \\<open>P3 Map.empty\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>?l \\<notin> dom ?f; P1 ?t1.0; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n  P3 Map.empty\n  applyPropOnOption P1 (f ?x)", "have \"P3 f\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?l \\<notin> dom ?f; P1 ?t1.0; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n  P3 Map.empty\n  applyPropOnOption P1 (f ?x)\n\ngoal (1 subgoal):\n 1. P3 f", "proof (induct f rule: fmap_induct, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<lbrakk>\\<And>l f t1.\n                    \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n                    \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n         P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n        \\<Longrightarrow> P3 F;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n        P3 Map.empty;\n        \\<And>xa. applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)\\<rbrakk>\n       \\<Longrightarrow> P3 (F(x \\<mapsto> z))", "case (insert F x z)"], ["proof (state)\nthis:\n  x \\<notin> dom F\n  \\<lbrakk>\\<And>l f t1.\n              \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n              \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n   P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n  \\<Longrightarrow> P3 F\n  \\<lbrakk>?l \\<notin> dom ?f; P1 ?t1.0; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n  P3 Map.empty\n  applyPropOnOption P1 ((F(x \\<mapsto> z)) ?x)\n\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<lbrakk>\\<And>l f t1.\n                    \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n                    \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n         P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n        \\<Longrightarrow> P3 F;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n        P3 Map.empty;\n        \\<And>xa. applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)\\<rbrakk>\n       \\<Longrightarrow> P3 (F(x \\<mapsto> z))", "note \n          P1F'   = \\<open>\\<And>xa. applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)\\<close> and\n          predP3 = \\<open>\\<lbrakk> \\<And>l f t1. \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk> \\<Longrightarrow> P3 (f(l \\<mapsto> t1)); \n                      P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n                    \\<Longrightarrow> P3 F\\<close> and\n          P3F'   = \\<open>\\<And>l f t f. \\<lbrakk> l \\<notin> dom f; P1 t; P3 f \\<rbrakk> \\<Longrightarrow> P3 (f(l \\<mapsto> t))\\<close>"], ["proof (state)\nthis:\n  applyPropOnOption P1 ((F(x \\<mapsto> z)) ?xa)\n  \\<lbrakk>\\<And>l f t1.\n              \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n              \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n   P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n  \\<Longrightarrow> P3 F\n  \\<lbrakk>?l \\<notin> dom ?fa; P1 ?t; P3 ?fa\\<rbrakk>\n  \\<Longrightarrow> P3 (?fa(?l \\<mapsto> ?t))\n\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<lbrakk>\\<And>l f t1.\n                    \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n                    \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n         P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n        \\<Longrightarrow> P3 F;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n        P3 Map.empty;\n        \\<And>xa. applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)\\<rbrakk>\n       \\<Longrightarrow> P3 (F(x \\<mapsto> z))", "have \"\\<And>xa. applyPropOnOption P1 (F xa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa. applyPropOnOption P1 (F xa)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. applyPropOnOption P1 (F xa)", "fix xa :: Label"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. applyPropOnOption P1 (F xa)", "show \"applyPropOnOption P1 (F xa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. applyPropOnOption P1 (F xa)", "proof (cases \"xa = x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. xa = x \\<Longrightarrow> applyPropOnOption P1 (F xa)\n 2. xa \\<noteq> x \\<Longrightarrow> applyPropOnOption P1 (F xa)", "case True"], ["proof (state)\nthis:\n  xa = x\n\ngoal (2 subgoals):\n 1. xa = x \\<Longrightarrow> applyPropOnOption P1 (F xa)\n 2. xa \\<noteq> x \\<Longrightarrow> applyPropOnOption P1 (F xa)", "with P1F' \\<open>x \\<notin> dom F\\<close>"], ["proof (chain)\npicking this:\n  applyPropOnOption P1 ((F(x \\<mapsto> z)) ?xa)\n  x \\<notin> dom F\n  xa = x", "have \"F xa = None\""], ["proof (prove)\nusing this:\n  applyPropOnOption P1 ((F(x \\<mapsto> z)) ?xa)\n  x \\<notin> dom F\n  xa = x\n\ngoal (1 subgoal):\n 1. F xa = None", "by force"], ["proof (state)\nthis:\n  F xa = None\n\ngoal (2 subgoals):\n 1. xa = x \\<Longrightarrow> applyPropOnOption P1 (F xa)\n 2. xa \\<noteq> x \\<Longrightarrow> applyPropOnOption P1 (F xa)", "thus ?thesis"], ["proof (prove)\nusing this:\n  F xa = None\n\ngoal (1 subgoal):\n 1. applyPropOnOption P1 (F xa)", "by simp"], ["proof (state)\nthis:\n  applyPropOnOption P1 (F xa)\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow> applyPropOnOption P1 (F xa)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow> applyPropOnOption P1 (F xa)", "case False"], ["proof (state)\nthis:\n  xa \\<noteq> x\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow> applyPropOnOption P1 (F xa)", "hence eq: \"F xa = (F(x \\<mapsto> z)) xa\""], ["proof (prove)\nusing this:\n  xa \\<noteq> x\n\ngoal (1 subgoal):\n 1. F xa = (F(x \\<mapsto> z)) xa", "by auto"], ["proof (state)\nthis:\n  F xa = (F(x \\<mapsto> z)) xa\n\ngoal (1 subgoal):\n 1. xa \\<noteq> x \\<Longrightarrow> applyPropOnOption P1 (F xa)", "from P1F'[of xa]"], ["proof (chain)\npicking this:\n  applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)", "show \"applyPropOnOption P1 (F xa)\""], ["proof (prove)\nusing this:\n  applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)\n\ngoal (1 subgoal):\n 1. applyPropOnOption P1 (F xa)", "by (simp only: ssubst[OF eq])"], ["proof (state)\nthis:\n  applyPropOnOption P1 (F xa)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  applyPropOnOption P1 (F xa)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  applyPropOnOption P1 (F ?xa)\n\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<lbrakk>\\<And>l f t1.\n                    \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n                    \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n         P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n        \\<Longrightarrow> P3 F;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n        P3 Map.empty;\n        \\<And>xa. applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)\\<rbrakk>\n       \\<Longrightarrow> P3 (F(x \\<mapsto> z))", "from a_f predP3[OF _ \\<open>P3 Map.empty\\<close> this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>?l \\<notin> dom ?f; P1 ?t1.0; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n  (\\<And>l f t1.\n      \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n      \\<Longrightarrow> P3 (f(l \\<mapsto> t1))) \\<Longrightarrow>\n  P3 F", "have P3F: \"P3 F\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?l \\<notin> dom ?f; P1 ?t1.0; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n  (\\<And>l f t1.\n      \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n      \\<Longrightarrow> P3 (f(l \\<mapsto> t1))) \\<Longrightarrow>\n  P3 F\n\ngoal (1 subgoal):\n 1. P3 F", "by simp"], ["proof (state)\nthis:\n  P3 F\n\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<lbrakk>\\<And>l f t1.\n                    \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n                    \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n         P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n        \\<Longrightarrow> P3 F;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n        P3 Map.empty;\n        \\<And>xa. applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)\\<rbrakk>\n       \\<Longrightarrow> P3 (F(x \\<mapsto> z))", "from P1F'[of x]"], ["proof (chain)\npicking this:\n  applyPropOnOption P1 ((F(x \\<mapsto> z)) x)", "have \"applyPropOnOption P1 (Some z)\""], ["proof (prove)\nusing this:\n  applyPropOnOption P1 ((F(x \\<mapsto> z)) x)\n\ngoal (1 subgoal):\n 1. applyPropOnOption P1 (Some z)", "by auto"], ["proof (state)\nthis:\n  applyPropOnOption P1 (Some z)\n\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<lbrakk>\\<And>l f t1.\n                    \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n                    \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n         P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n        \\<Longrightarrow> P3 F;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n        P3 Map.empty;\n        \\<And>xa. applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)\\<rbrakk>\n       \\<Longrightarrow> P3 (F(x \\<mapsto> z))", "hence \"P1 z\""], ["proof (prove)\nusing this:\n  applyPropOnOption P1 (Some z)\n\ngoal (1 subgoal):\n 1. P1 z", "by simp"], ["proof (state)\nthis:\n  P1 z\n\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<lbrakk>\\<And>l f t1.\n                    \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n                    \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n         P3 Map.empty; \\<And>x. applyPropOnOption P1 (F x)\\<rbrakk>\n        \\<Longrightarrow> P3 F;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n        P3 Map.empty;\n        \\<And>xa. applyPropOnOption P1 ((F(x \\<mapsto> z)) xa)\\<rbrakk>\n       \\<Longrightarrow> P3 (F(x \\<mapsto> z))", "from a_f[OF \\<open>x \\<notin> dom F\\<close> this P3F]"], ["proof (chain)\npicking this:\n  P3 (F(x \\<mapsto> z))", "show ?case"], ["proof (prove)\nusing this:\n  P3 (F(x \\<mapsto> z))\n\ngoal (1 subgoal):\n 1. P3 (F(x \\<mapsto> z))", "by assumption"], ["proof (state)\nthis:\n  P3 (F(x \\<mapsto> z))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P3 f\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<And>x. applyPropOnOption P1 (x1 x); \\<And>b. P1 (Bvar b);\n        \\<And>x. P1 (Fvar x);\n        \\<And>f T. P3 f \\<Longrightarrow> P1 (Obj f T);\n        \\<And>t1 t2 l.\n           \\<lbrakk>P1 t1; P1 t2\\<rbrakk>\n           \\<Longrightarrow> P1 (Call t1 l t2);\n        \\<And>t1 t2 l.\n           \\<lbrakk>P1 t1; P1 t2\\<rbrakk>\n           \\<Longrightarrow> P1 (Upd t1 l t2);\n        P3 Map.empty;\n        \\<And>l f t1.\n           \\<lbrakk>l \\<notin> dom f; P1 t1; P3 f\\<rbrakk>\n           \\<Longrightarrow> P3 (f(l \\<mapsto> t1))\\<rbrakk>\n       \\<Longrightarrow> P1 (Obj x1 x2)", "with a_obj"], ["proof (chain)\npicking this:\n  P3 ?f \\<Longrightarrow> P1 (Obj ?f ?T)\n  P3 f", "show \"P1 (Obj f T)\""], ["proof (prove)\nusing this:\n  P3 ?f \\<Longrightarrow> P1 (Obj ?f ?T)\n  P3 f\n\ngoal (1 subgoal):\n 1. P1 (Obj f T)", "by simp"], ["proof (state)\nthis:\n  P1 (Obj f T)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P1 t \\<and> applyPropOnOption P1 foobar\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t f l. P1 t \\<and> applyPropOnOption P1 (f l)\n\ngoal (1 subgoal):\n 1. P1 t \\<and> P3 f", "with assms"], ["proof (chain)\npicking this:\n  P1 (Bvar ?b)\n  P1 (Fvar ?x)\n  P3 ?f \\<Longrightarrow> P1 (Obj ?f ?T)\n  \\<lbrakk>P1 ?t1.0; P1 ?t2.0\\<rbrakk>\n  \\<Longrightarrow> P1 (Call ?t1.0 ?l ?t2.0)\n  \\<lbrakk>P1 ?t1.0; P1 ?t2.0\\<rbrakk>\n  \\<Longrightarrow> P1 (Upd ?t1.0 ?l ?t2.0)\n  P3 Map.empty\n  \\<lbrakk>?l \\<notin> dom ?f; P1 ?t1.0; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n  \\<forall>t f l. P1 t \\<and> applyPropOnOption P1 (f l)", "show ?thesis"], ["proof (prove)\nusing this:\n  P1 (Bvar ?b)\n  P1 (Fvar ?x)\n  P3 ?f \\<Longrightarrow> P1 (Obj ?f ?T)\n  \\<lbrakk>P1 ?t1.0; P1 ?t2.0\\<rbrakk>\n  \\<Longrightarrow> P1 (Call ?t1.0 ?l ?t2.0)\n  \\<lbrakk>P1 ?t1.0; P1 ?t2.0\\<rbrakk>\n  \\<Longrightarrow> P1 (Upd ?t1.0 ?l ?t2.0)\n  P3 Map.empty\n  \\<lbrakk>?l \\<notin> dom ?f; P1 ?t1.0; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n  \\<forall>t f l. P1 t \\<and> applyPropOnOption P1 (f l)\n\ngoal (1 subgoal):\n 1. P1 t \\<and> P3 f", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>P3 Map.empty;\n     \\<And>l f t1.\n        \\<lbrakk>l \\<notin> dom f; P3 f\\<rbrakk>\n        \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n     All P1; \\<forall>f l. applyPropOnOption P1 (f l)\\<rbrakk>\n    \\<Longrightarrow> P3 f", "assume \"\\<And>l f t1. \\<lbrakk>l \\<notin> dom f; P3 f\\<rbrakk> \\<Longrightarrow> P3 (f(l \\<mapsto> t1))\""], ["proof (state)\nthis:\n  \\<lbrakk>?l \\<notin> dom ?f; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P3 Map.empty;\n     \\<And>l f t1.\n        \\<lbrakk>l \\<notin> dom f; P3 f\\<rbrakk>\n        \\<Longrightarrow> P3 (f(l \\<mapsto> t1));\n     All P1; \\<forall>f l. applyPropOnOption P1 (f l)\\<rbrakk>\n    \\<Longrightarrow> P3 f", "with \\<open>P3 Map.empty\\<close>"], ["proof (chain)\npicking this:\n  P3 Map.empty\n  \\<lbrakk>?l \\<notin> dom ?f; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))", "show \"P3 f\""], ["proof (prove)\nusing this:\n  P3 Map.empty\n  \\<lbrakk>?l \\<notin> dom ?f; P3 ?f\\<rbrakk>\n  \\<Longrightarrow> P3 (?f(?l \\<mapsto> ?t1.0))\n\ngoal (1 subgoal):\n 1. P3 f", "by (rule fmap_induct)"], ["proof (state)\nthis:\n  P3 f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P1 t \\<and> P3 f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ball_tsp_P3:\n  fixes \n  P1 :: \"sterm \\<Rightarrow> bool\" and \n  P2 :: \"sterm \\<Rightarrow> fVariable \\<Rightarrow> fVariable \\<Rightarrow> bool\" and \n  P3 :: \"sterm \\<Rightarrow> bool\" and f :: \"Label -~> sterm\"\n  assumes \n  \"\\<And>t. \\<lbrakk> P1 t; \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 t s p \\<rbrakk> \\<Longrightarrow> P3 t\" and\n  \"\\<forall>l\\<in>dom f. P1 (the(f l))\" and\n  \"\\<forall>l\\<in>dom f. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 (the(f l)) s p\"\n  shows \"\\<forall>l\\<in>dom f. P3 (the(f l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f. P3 (the (f l))", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f \\<Longrightarrow> P3 (the (f l))", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f \\<Longrightarrow> P3 (the (f l))", "assume \"l \\<in> dom f\""], ["proof (state)\nthis:\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f \\<Longrightarrow> P3 (the (f l))", "with assms(2)"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f. P1 (the (f l))\n  l \\<in> dom f", "have \"P1 (the(f l))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. P1 (the (f l))\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. P1 (the (f l))", "by blast"], ["proof (state)\nthis:\n  P1 (the (f l))\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f \\<Longrightarrow> P3 (the (f l))", "moreover"], ["proof (state)\nthis:\n  P1 (the (f l))\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f \\<Longrightarrow> P3 (the (f l))", "from assms(3) \\<open>l \\<in> dom f\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        P2 (the (f l)) s p\n  l \\<in> dom f", "have \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 (the(f l)) s p\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        P2 (the (f l)) s p\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. \\<forall>s p.\n       s \\<notin> L \\<and>\n       p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n       P2 (the (f l)) s p", "by blast"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 (the (f l)) s p\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f \\<Longrightarrow> P3 (the (f l))", "ultimately"], ["proof (chain)\npicking this:\n  P1 (the (f l))\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 (the (f l)) s p", "show \"P3 (the(f l))\""], ["proof (prove)\nusing this:\n  P1 (the (f l))\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 (the (f l)) s p\n\ngoal (1 subgoal):\n 1. P3 (the (f l))", "using assms(1)"], ["proof (prove)\nusing this:\n  P1 (the (f l))\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 (the (f l)) s p\n  \\<lbrakk>P1 ?t;\n   \\<forall>s p.\n      s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n      P2 ?t s p\\<rbrakk>\n  \\<Longrightarrow> P3 ?t\n\ngoal (1 subgoal):\n 1. P3 (the (f l))", "by simp"], ["proof (state)\nthis:\n  P3 (the (f l))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ball_tt'sp_P3:\n  fixes \n  P1 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> bool\" and \n  P2 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> fVariable \\<Rightarrow> fVariable \\<Rightarrow> bool\" and \n  P3 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> bool\" and \n  f :: \"Label -~> sterm\" and f' :: \"Label -~> sterm\"\n  assumes \n  \"\\<And>t t'. \\<lbrakk> P1 t t'; \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 t t' s p \\<rbrakk> \\<Longrightarrow> P3 t t'\" and\n  \"dom f = dom f'\" and\n  \"\\<forall>l\\<in>dom f. P1 (the(f l)) (the(f' l))\" and\n  \"\\<forall>l\\<in>dom f. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 (the(f l)) (the(f' l)) s p\"\n  shows \"\\<forall>l\\<in>dom f'. P3 (the(f l)) (the(f' l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f'. P3 (the (f l)) (the (f' l))", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f' \\<Longrightarrow> P3 (the (f l)) (the (f' l))", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f' \\<Longrightarrow> P3 (the (f l)) (the (f' l))", "assume \"l \\<in> dom f'\""], ["proof (state)\nthis:\n  l \\<in> dom f'\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f' \\<Longrightarrow> P3 (the (f l)) (the (f' l))", "with assms(2-3)"], ["proof (chain)\npicking this:\n  dom f = dom f'\n  \\<forall>l\\<in>dom f. P1 (the (f l)) (the (f' l))\n  l \\<in> dom f'", "have \"P1 (the(f l)) (the(f' l))\""], ["proof (prove)\nusing this:\n  dom f = dom f'\n  \\<forall>l\\<in>dom f. P1 (the (f l)) (the (f' l))\n  l \\<in> dom f'\n\ngoal (1 subgoal):\n 1. P1 (the (f l)) (the (f' l))", "by blast"], ["proof (state)\nthis:\n  P1 (the (f l)) (the (f' l))\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f' \\<Longrightarrow> P3 (the (f l)) (the (f' l))", "moreover"], ["proof (state)\nthis:\n  P1 (the (f l)) (the (f' l))\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f' \\<Longrightarrow> P3 (the (f l)) (the (f' l))", "from assms(2,4) \\<open>l \\<in> dom f'\\<close>"], ["proof (chain)\npicking this:\n  dom f = dom f'\n  \\<forall>l\\<in>dom f.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        P2 (the (f l)) (the (f' l)) s p\n  l \\<in> dom f'", "have \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> P2 (the (f l)) (the(f' l)) s p\""], ["proof (prove)\nusing this:\n  dom f = dom f'\n  \\<forall>l\\<in>dom f.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        P2 (the (f l)) (the (f' l)) s p\n  l \\<in> dom f'\n\ngoal (1 subgoal):\n 1. \\<forall>s p.\n       s \\<notin> L \\<and>\n       p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n       P2 (the (f l)) (the (f' l)) s p", "by blast"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 (the (f l)) (the (f' l)) s p\n\ngoal (1 subgoal):\n 1. \\<And>l. l \\<in> dom f' \\<Longrightarrow> P3 (the (f l)) (the (f' l))", "ultimately"], ["proof (chain)\npicking this:\n  P1 (the (f l)) (the (f' l))\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 (the (f l)) (the (f' l)) s p", "show \"P3 (the(f l)) (the(f' l))\""], ["proof (prove)\nusing this:\n  P1 (the (f l)) (the (f' l))\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 (the (f l)) (the (f' l)) s p\n\ngoal (1 subgoal):\n 1. P3 (the (f l)) (the (f' l))", "using assms(1)[of \"the(f l)\" \"the(f' l)\"]"], ["proof (prove)\nusing this:\n  P1 (the (f l)) (the (f' l))\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     P2 (the (f l)) (the (f' l)) s p\n  \\<lbrakk>P1 (the (f l)) (the (f' l));\n   \\<forall>s p.\n      s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n      P2 (the (f l)) (the (f' l)) s p\\<rbrakk>\n  \\<Longrightarrow> P3 (the (f l)) (the (f' l))\n\ngoal (1 subgoal):\n 1. P3 (the (f l)) (the (f' l))", "by simp"], ["proof (state)\nthis:\n  P3 (the (f l)) (the (f' l))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Free variables\\<close>"], ["", "primrec\n FV       :: \"sterm \\<Rightarrow> fVariable set\"\nand\n FVoption :: \"sterm option \\<Rightarrow> fVariable set\"\nwhere\n  FV_Bvar : \"FV(Bvar b) = {}\"\n| FV_Fvar : \"FV(Fvar x) = {x}\"\n| FV_Call : \"FV(Call t l a) = FV t \\<union> FV a\"\n| FV_Upd  : \"FV(Upd t l s) = FV t \\<union> FV s\"\n| FV_Obj  : \"FV(Obj f T) = (\\<Union> l \\<in> dom f. FVoption(f l))\"\n| FV_None : \"FVoption None = {}\"\n| FV_Some : \"FVoption (Some t) = FV t\""], ["", "definition closed :: \"sterm \\<Rightarrow> bool\" where\n \"closed t \\<longleftrightarrow> FV t = {}\""], ["", "(* finiteness of FV *)"], ["", "lemma finite_FV_FVoption: \"finite (FV t) \\<and> finite (FVoption s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (FV t) \\<and> finite (FVoption s)", "by(induct _ t _ s rule: compat_sterm_sterm_option.induct, simp_all)"], ["", "(* for infiniteness of string sets see\n    List.infinite_UNIV_listI *)\n\n(* NOTE: ex_new_if_finite, infinite_UNIV_listI and finite_FV offer an easy way to proof exists-fresh-statements *)"], ["", "lemma finite_FV[simp]: \"finite (FV t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (FV t)", "by (simp add: finite_FV_FVoption)"], ["", "lemma FV_and_cofinite: \"\\<lbrakk> \\<forall>x. x \\<notin> L \\<longrightarrow> P x; finite L \\<rbrakk> \n  \\<Longrightarrow> \\<exists>L'. (finite L' \\<and> FV t \\<subseteq> L' \\<and> (\\<forall> x. x \\<notin> L' \\<longrightarrow> P x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x. x \\<notin> L \\<longrightarrow> P x;\n     finite L\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L'.\n                         finite L' \\<and>\n                         FV t \\<subseteq> L' \\<and>\n                         (\\<forall>x. x \\<notin> L' \\<longrightarrow> P x)", "by (rule_tac x = \"L \\<union> FV t\" in exI, auto)"], ["", "lemma exFresh_s_p_cof: \n  fixes L :: \"fVariable set\"\n  assumes \"finite L\"\n  shows \"\\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "from assms"], ["proof (chain)\npicking this:\n  finite L", "have \"\\<exists>s. s \\<notin> L\""], ["proof (prove)\nusing this:\n  finite L\n\ngoal (1 subgoal):\n 1. \\<exists>s. s \\<notin> L", "by (simp only: ex_new_if_finite[OF infinite_UNIV_listI])"], ["proof (state)\nthis:\n  \\<exists>s. s \\<notin> L\n\ngoal (1 subgoal):\n 1. \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "then"], ["proof (chain)\npicking this:\n  \\<exists>s. s \\<notin> L", "obtain s where \"s \\<notin> L\""], ["proof (prove)\nusing this:\n  \\<exists>s. s \\<notin> L\n\ngoal (1 subgoal):\n 1. (\\<And>s. s \\<notin> L \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  s \\<notin> L\n\ngoal (1 subgoal):\n 1. \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "moreover"], ["proof (state)\nthis:\n  s \\<notin> L\n\ngoal (1 subgoal):\n 1. \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "from \\<open>finite L\\<close>"], ["proof (chain)\npicking this:\n  finite L", "have \"finite (L \\<union> {s})\""], ["proof (prove)\nusing this:\n  finite L\n\ngoal (1 subgoal):\n 1. finite (L \\<union> {s})", "by simp"], ["proof (state)\nthis:\n  finite (L \\<union> {s})\n\ngoal (1 subgoal):\n 1. \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "hence \"\\<exists>p. p \\<notin> L \\<union> {s}\""], ["proof (prove)\nusing this:\n  finite (L \\<union> {s})\n\ngoal (1 subgoal):\n 1. \\<exists>p. p \\<notin> L \\<union> {s}", "by (simp only: ex_new_if_finite[OF infinite_UNIV_listI])"], ["proof (state)\nthis:\n  \\<exists>p. p \\<notin> L \\<union> {s}\n\ngoal (1 subgoal):\n 1. \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "then"], ["proof (chain)\npicking this:\n  \\<exists>p. p \\<notin> L \\<union> {s}", "obtain p where \"p \\<notin> L \\<union> {s}\""], ["proof (prove)\nusing this:\n  \\<exists>p. p \\<notin> L \\<union> {s}\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        p \\<notin> L \\<union> {s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  p \\<notin> L \\<union> {s}\n\ngoal (1 subgoal):\n 1. \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "ultimately"], ["proof (chain)\npicking this:\n  s \\<notin> L\n  p \\<notin> L \\<union> {s}", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<notin> L\n  p \\<notin> L \\<union> {s}\n\ngoal (1 subgoal):\n 1. \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "by blast"], ["proof (state)\nthis:\n  \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FV_option_lem: \"\\<forall>l\\<in>dom f. FV (the(f l)) = FVoption (f l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f. FV (the (f l)) = FVoption (f l)", "by auto"], ["", "subsubsection \\<open>Term opening\\<close>"], ["", "primrec\n  sopen        :: \"[nat, sterm, sterm, sterm] \\<Rightarrow> sterm\" \n  (\"{_ \\<rightarrow> [_,_]} _\" [0, 0, 0, 300] 300)\nand\n  sopen_option :: \"[nat, sterm, sterm, sterm option] \\<Rightarrow> sterm option\"\nwhere\n  sopen_Bvar: \n    \"{k \\<rightarrow> [s,p]}(Bvar b) = (case b of (Self i) \\<Rightarrow> (if (k = i) then s else (Bvar b)) \n                                    | (Param i) \\<Rightarrow> (if (k = i) then p else (Bvar b)))\"\n| sopen_Fvar: \"{k \\<rightarrow> [s,p]}(Fvar x) = Fvar x\"\n| sopen_Call: \"{k \\<rightarrow> [s,p]}(Call t l a) = Call ({k \\<rightarrow> [s,p]}t) l ({k \\<rightarrow> [s,p]}a)\"\n| sopen_Upd : \"{k \\<rightarrow> [s,p]}(Upd t l u) = Upd ({k \\<rightarrow> [s,p]}t) l ({(Suc k) \\<rightarrow> [s,p]}u)\"\n| sopen_Obj : \"{k \\<rightarrow> [s,p]}(Obj f T) = Obj (\\<lambda>l. sopen_option (Suc k) s p (f l)) T\"\n| sopen_None: \"sopen_option k s p None = None\"\n| sopen_Some: \"sopen_option k s p (Some t) = Some ({k \\<rightarrow> [s,p]}t)\""], ["", "definition openz :: \"[sterm, sterm, sterm] \\<Rightarrow> sterm\" (\"(_)\\<^bsup>[_,_]\\<^esup>\" [50, 0, 0] 50) where\n \"t\\<^bsup>[s,p]\\<^esup> = {0 \\<rightarrow> [s,p]}t\""], ["", "lemma sopen_eq_Fvar:\n  fixes n s p t x\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\"\n  shows \n  \"(t = Fvar x) \\<or> (x = s \\<and> t = (Bvar (Self n))) \n  \\<or> (x = p \\<and> t = (Bvar (Param n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = Fvar x \\<or>\n    x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "proof (cases t)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 3. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 4. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 5. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "case Obj"], ["proof (state)\nthis:\n  t = Obj x31_ x32_\n\ngoal (5 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 3. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 4. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 5. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Obj x31_ x32_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Obj x31_ x32_\n\ngoal (1 subgoal):\n 1. t = Fvar x \\<or>\n    x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "by simp"], ["proof (state)\nthis:\n  t = Fvar x \\<or>\n  x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "case Call"], ["proof (state)\nthis:\n  t = Call x41_ x42_ x43_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Call x41_ x42_ x43_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Call x41_ x42_ x43_\n\ngoal (1 subgoal):\n 1. t = Fvar x \\<or>\n    x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "by simp"], ["proof (state)\nthis:\n  t = Fvar x \\<or>\n  x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "case Upd"], ["proof (state)\nthis:\n  t = Upd x51_ x52_ x53_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Upd x51_ x52_ x53_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Upd x51_ x52_ x53_\n\ngoal (1 subgoal):\n 1. t = Fvar x \\<or>\n    x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "by simp"], ["proof (state)\nthis:\n  t = Fvar x \\<or>\n  x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "case (Fvar y)"], ["proof (state)\nthis:\n  t = Fvar y\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Fvar y", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Fvar y\n\ngoal (1 subgoal):\n 1. t = Fvar x \\<or>\n    x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "by (cases \"y = x\", simp_all)"], ["proof (state)\nthis:\n  t = Fvar x \\<or>\n  x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "case (Bvar b)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       t = Fvar x \\<or>\n       x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. t = Fvar x \\<or>\n    x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "proof (cases b)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar b; b = Self x1\\<rbrakk>\n       \\<Longrightarrow> t = Fvar x \\<or>\n                         x = s \\<and> t = Bvar (Self n) \\<or>\n                         x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> t = Fvar x \\<or>\n                         x = s \\<and> t = Bvar (Self n) \\<or>\n                         x = p \\<and> t = Bvar (Param n)", "case (Self k)"], ["proof (state)\nthis:\n  b = Self k\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar b; b = Self x1\\<rbrakk>\n       \\<Longrightarrow> t = Fvar x \\<or>\n                         x = s \\<and> t = Bvar (Self n) \\<or>\n                         x = p \\<and> t = Bvar (Param n)\n 2. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> t = Fvar x \\<or>\n                         x = s \\<and> t = Bvar (Self n) \\<or>\n                         x = p \\<and> t = Bvar (Param n)", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Bvar b\n  b = Self k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Bvar b\n  b = Self k\n\ngoal (1 subgoal):\n 1. t = Fvar x \\<or>\n    x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "by (cases \"k = n\") simp_all"], ["proof (state)\nthis:\n  t = Fvar x \\<or>\n  x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> t = Fvar x \\<or>\n                         x = s \\<and> t = Bvar (Self n) \\<or>\n                         x = p \\<and> t = Bvar (Param n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> t = Fvar x \\<or>\n                         x = s \\<and> t = Bvar (Self n) \\<or>\n                         x = p \\<and> t = Bvar (Param n)", "case (Param k)"], ["proof (state)\nthis:\n  b = Param k\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> t = Fvar x \\<or>\n                         x = s \\<and> t = Bvar (Self n) \\<or>\n                         x = p \\<and> t = Bvar (Param n)", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Bvar b\n  b = Param k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\n  t = Bvar b\n  b = Param k\n\ngoal (1 subgoal):\n 1. t = Fvar x \\<or>\n    x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)", "by (cases \"k = n\") simp_all"], ["proof (state)\nthis:\n  t = Fvar x \\<or>\n  x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t = Fvar x \\<or>\n  x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_eq_Fvar': \n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar x\" and \"x \\<noteq> s\" and \"x \\<noteq> p\"\n  shows \"t = Fvar x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = Fvar x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t = Fvar x", "from sopen_eq_Fvar[OF assms(1)] \\<open>x \\<noteq> s\\<close> \\<open>x \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  t = Fvar x \\<or>\n  x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n  x \\<noteq> s\n  x \\<noteq> p", "show ?thesis"], ["proof (prove)\nusing this:\n  t = Fvar x \\<or>\n  x = s \\<and> t = Bvar (Self n) \\<or> x = p \\<and> t = Bvar (Param n)\n  x \\<noteq> s\n  x \\<noteq> p\n\ngoal (1 subgoal):\n 1. t = Fvar x", "by auto"], ["proof (state)\nthis:\n  t = Fvar x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_eq_Bvar: \n  fixes n s p t b\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\"\n  shows \"t = Bvar b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = Bvar b", "proof (cases t)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x2. t = Fvar x2 \\<Longrightarrow> t = Bvar b\n 3. \\<And>x31 x32. t = Obj x31 x32 \\<Longrightarrow> t = Bvar b\n 4. \\<And>x41 x42 x43. t = Call x41 x42 x43 \\<Longrightarrow> t = Bvar b\n 5. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "case Fvar"], ["proof (state)\nthis:\n  t = Fvar x2_\n\ngoal (5 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x2. t = Fvar x2 \\<Longrightarrow> t = Bvar b\n 3. \\<And>x31 x32. t = Obj x31 x32 \\<Longrightarrow> t = Bvar b\n 4. \\<And>x41 x42 x43. t = Call x41 x42 x43 \\<Longrightarrow> t = Bvar b\n 5. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Fvar x2_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Fvar x2_\n\ngoal (1 subgoal):\n 1. t = Bvar b", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal (4 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x31 x32. t = Obj x31 x32 \\<Longrightarrow> t = Bvar b\n 3. \\<And>x41 x42 x43. t = Call x41 x42 x43 \\<Longrightarrow> t = Bvar b\n 4. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x31 x32. t = Obj x31 x32 \\<Longrightarrow> t = Bvar b\n 3. \\<And>x41 x42 x43. t = Call x41 x42 x43 \\<Longrightarrow> t = Bvar b\n 4. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "case Obj"], ["proof (state)\nthis:\n  t = Obj x31_ x32_\n\ngoal (4 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x31 x32. t = Obj x31 x32 \\<Longrightarrow> t = Bvar b\n 3. \\<And>x41 x42 x43. t = Call x41 x42 x43 \\<Longrightarrow> t = Bvar b\n 4. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Obj x31_ x32_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Obj x31_ x32_\n\ngoal (1 subgoal):\n 1. t = Bvar b", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal (3 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x41 x42 x43. t = Call x41 x42 x43 \\<Longrightarrow> t = Bvar b\n 3. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x41 x42 x43. t = Call x41 x42 x43 \\<Longrightarrow> t = Bvar b\n 3. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "case Call"], ["proof (state)\nthis:\n  t = Call x41_ x42_ x43_\n\ngoal (3 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x41 x42 x43. t = Call x41 x42 x43 \\<Longrightarrow> t = Bvar b\n 3. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Call x41_ x42_ x43_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Call x41_ x42_ x43_\n\ngoal (1 subgoal):\n 1. t = Bvar b", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal (2 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "case Upd"], ["proof (state)\nthis:\n  t = Upd x51_ x52_ x53_\n\ngoal (2 subgoals):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x51 x52 x53. t = Upd x51 x52 x53 \\<Longrightarrow> t = Bvar b", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Upd x51_ x52_ x53_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Upd x51_ x52_ x53_\n\ngoal (1 subgoal):\n 1. t = Bvar b", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b", "case (Bvar b')"], ["proof (state)\nthis:\n  t = Bvar b'\n\ngoal (1 subgoal):\n 1. \\<And>x1. t = Bvar x1 \\<Longrightarrow> t = Bvar b", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. t = Bvar b", "proof (cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1. b' = Self x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x2. b' = Param x2 \\<Longrightarrow> t = Bvar b", "case (Self k)"], ["proof (state)\nthis:\n  b' = Self k\n\ngoal (2 subgoals):\n 1. \\<And>x1. b' = Self x1 \\<Longrightarrow> t = Bvar b\n 2. \\<And>x2. b' = Param x2 \\<Longrightarrow> t = Bvar b", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Bvar b'\n  b' = Self k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Bvar b'\n  b' = Self k\n\ngoal (1 subgoal):\n 1. t = Bvar b", "by (cases \"k = n\") (simp_all add: openz_def)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. \\<And>x2. b' = Param x2 \\<Longrightarrow> t = Bvar b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2. b' = Param x2 \\<Longrightarrow> t = Bvar b", "case (Param k)"], ["proof (state)\nthis:\n  b' = Param k\n\ngoal (1 subgoal):\n 1. \\<And>x2. b' = Param x2 \\<Longrightarrow> t = Bvar b", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Bvar b'\n  b' = Param k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n  t = Bvar b'\n  b' = Param k\n\ngoal (1 subgoal):\n 1. t = Bvar b", "by (cases \"k = n\") (simp_all add: openz_def)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_eq_Obj: \n  fixes n s p t f T\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\"\n  shows \n  \"\\<exists>f'. {n \\<rightarrow> [Fvar s, Fvar p]} Obj f' T = Obj f T  \n      \\<and>  t = Obj f' T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n       t = Obj f' T", "proof (cases t)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 3. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 4. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 5. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "case Fvar"], ["proof (state)\nthis:\n  t = Fvar x2_\n\ngoal (5 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 3. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 4. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 5. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Fvar x2_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Fvar x2_\n\ngoal (1 subgoal):\n 1. \\<exists>f'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n       t = Obj f' T", "by simp"], ["proof (state)\nthis:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t = Obj f' T\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "case Obj"], ["proof (state)\nthis:\n  t = Obj x31_ x32_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Obj x31_ x32_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Obj x31_ x32_\n\ngoal (1 subgoal):\n 1. \\<exists>f'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n       t = Obj f' T", "by simp"], ["proof (state)\nthis:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t = Obj f' T\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "case Call"], ["proof (state)\nthis:\n  t = Call x41_ x42_ x43_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Call x41_ x42_ x43_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Call x41_ x42_ x43_\n\ngoal (1 subgoal):\n 1. \\<exists>f'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n       t = Obj f' T", "by simp"], ["proof (state)\nthis:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t = Obj f' T\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "case Upd"], ["proof (state)\nthis:\n  t = Upd x51_ x52_ x53_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T\n 2. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Upd x51_ x52_ x53_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Upd x51_ x52_ x53_\n\ngoal (1 subgoal):\n 1. \\<exists>f'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n       t = Obj f' T", "by simp"], ["proof (state)\nthis:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t = Obj f' T\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "case (Bvar b)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>f'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n          t = Obj f' T", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. \\<exists>f'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n       t = Obj f' T", "proof (cases b)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar b; b = Self x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T =\n                            Obj f T \\<and>\n                            t = Obj f' T\n 2. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T =\n                            Obj f T \\<and>\n                            t = Obj f' T", "case (Self k)"], ["proof (state)\nthis:\n  b = Self k\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar b; b = Self x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T =\n                            Obj f T \\<and>\n                            t = Obj f' T\n 2. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T =\n                            Obj f T \\<and>\n                            t = Obj f' T", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Bvar b\n  b = Self k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Bvar b\n  b = Self k\n\ngoal (1 subgoal):\n 1. \\<exists>f'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n       t = Obj f' T", "by (cases \"k = n\") simp_all"], ["proof (state)\nthis:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t = Obj f' T\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T =\n                            Obj f T \\<and>\n                            t = Obj f' T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T =\n                            Obj f T \\<and>\n                            t = Obj f' T", "case (Param k)"], ["proof (state)\nthis:\n  b = Param k\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T =\n                            Obj f T \\<and>\n                            t = Obj f' T", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Bvar b\n  b = Param k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Obj f T\n  t = Bvar b\n  b = Param k\n\ngoal (1 subgoal):\n 1. \\<exists>f'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n       t = Obj f' T", "by (cases \"k = n\") simp_all"], ["proof (state)\nthis:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t = Obj f' T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>f'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f' T = Obj f T \\<and>\n     t = Obj f' T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_eq_Upd: \n  fixes n s p t t1 l t2\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\"\n  shows \n  \"\\<exists>t1' t2'. {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \n           \\<and> {(Suc n) \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Upd t1' l t2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n       t = Upd t1' l t2'", "proof (cases t)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 3. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 4. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 5. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "case Fvar"], ["proof (state)\nthis:\n  t = Fvar x2_\n\ngoal (5 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 3. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 4. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 5. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Fvar x2_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Fvar x2_\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n       t = Upd t1' l t2'", "by simp"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Upd t1' l t2'\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "case Obj"], ["proof (state)\nthis:\n  t = Obj x31_ x32_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Obj x31_ x32_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Obj x31_ x32_\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n       t = Upd t1' l t2'", "by simp"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Upd t1' l t2'\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "case Call"], ["proof (state)\nthis:\n  t = Call x41_ x42_ x43_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Call x41_ x42_ x43_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Call x41_ x42_ x43_\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n       t = Upd t1' l t2'", "by simp"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Upd t1' l t2'\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "case Upd"], ["proof (state)\nthis:\n  t = Upd x51_ x52_ x53_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'\n 2. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Upd x51_ x52_ x53_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Upd x51_ x52_ x53_\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n       t = Upd t1' l t2'", "by simp"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Upd t1' l t2'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "case (Bvar b)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Upd t1' l t2'", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n       t = Upd t1' l t2'", "proof (cases b)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar b; b = Self x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Upd t1' l t2'\n 2. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Upd t1' l t2'", "case (Self k)"], ["proof (state)\nthis:\n  b = Self k\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar b; b = Self x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Upd t1' l t2'\n 2. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Upd t1' l t2'", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Bvar b\n  b = Self k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Bvar b\n  b = Self k\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n       t = Upd t1' l t2'", "by (cases \"k = n\") simp_all"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Upd t1' l t2'\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Upd t1' l t2'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Upd t1' l t2'", "case (Param k)"], ["proof (state)\nthis:\n  b = Param k\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Upd t1' l t2'", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Bvar b\n  b = Param k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Upd t1 l t2\n  t = Bvar b\n  b = Param k\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n       t = Upd t1' l t2'", "by (cases \"k = n\") simp_all"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Upd t1' l t2'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Upd t1' l t2'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_eq_Call: \n  fixes n s p t t1 l t2\n  assumes \"{n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\"\n  shows \n  \"\\<exists>t1' t2'. {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \n           \\<and> {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'", "proof (cases t)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 3. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 4. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 5. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "case Fvar"], ["proof (state)\nthis:\n  t = Fvar x2_\n\ngoal (5 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x2.\n       t = Fvar x2 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 3. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 4. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 5. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Fvar x2_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Fvar x2_\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'", "by simp"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "case Obj"], ["proof (state)\nthis:\n  t = Obj x31_ x32_\n\ngoal (4 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x31 x32.\n       t = Obj x31 x32 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 3. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 4. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Obj x31_ x32_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Obj x31_ x32_\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'", "by simp"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "case Call"], ["proof (state)\nthis:\n  t = Call x41_ x42_ x43_\n\ngoal (3 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x41 x42 x43.\n       t = Call x41 x42 x43 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 3. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Call x41_ x42_ x43_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Call x41_ x42_ x43_\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'", "by simp"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "case Upd"], ["proof (state)\nthis:\n  t = Upd x51_ x52_ x53_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'\n 2. \\<And>x51 x52 x53.\n       t = Upd x51 x52 x53 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "with assms"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Upd x51_ x52_ x53_", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Upd x51_ x52_ x53_\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'", "by simp"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "case (Bvar b)"], ["proof (state)\nthis:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       t = Bvar x1 \\<Longrightarrow>\n       \\<exists>t1' t2'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n          {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and>\n          t = Call t1' l t2'", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = Bvar b\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'", "proof (cases b)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar b; b = Self x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Call t1' l t2'\n 2. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Call t1' l t2'", "case (Self k)"], ["proof (state)\nthis:\n  b = Self k\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar b; b = Self x1\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Call t1' l t2'\n 2. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Call t1' l t2'", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Bvar b\n  b = Self k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Bvar b\n  b = Self k\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'", "by (cases \"k = n\") simp_all"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Call t1' l t2'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Call t1' l t2'", "case (Param k)"], ["proof (state)\nthis:\n  b = Param k\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t = Bvar b; b = Param x2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t1' t2'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t1' =\n                            t1 \\<and>\n                            {n \\<rightarrow> [Fvar s,Fvar p]} t2' =\n                            t2 \\<and>\n                            t = Call t1' l t2'", "with assms Bvar"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Bvar b\n  b = Param k", "show ?thesis"], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Call t1 l t2\n  t = Bvar b\n  b = Param k\n\ngoal (1 subgoal):\n 1. \\<exists>t1' t2'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n       {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'", "by (cases \"k = n\") simp_all"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t1' t2'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1' = t1 \\<and>\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2' = t2 \\<and> t = Call t1' l t2'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_sopenoption_lem[simp]: \"dom (\\<lambda>l. sopen_option k s t (f l)) = dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (\\<lambda>l. sopen_option k s t (f l)) = dom f", "by (auto, case_tac \"x \\<in> dom f\", auto)"], ["", "lemma sopen_option_lem: \n  \"\\<forall>l\\<in>dom f. {n \\<rightarrow> [s,p]} the(f l) = the (sopen_option n s p (f l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f.\n       {n \\<rightarrow> [s,p]} the (f l) = the (sopen_option n s p (f l))", "by auto"], ["", "lemma pred_sopenoption_lem:\n  \"(\\<forall>l\\<in>dom (\\<lambda>l. sopen_option n s p (f l)).\n     (P::sterm \\<Rightarrow> bool) (the (sopen_option n s p (f l)))) = \n   (\\<forall>l\\<in>dom f. (P::sterm \\<Rightarrow> bool) ({n \\<rightarrow> [s,p]} the (f l)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>dom (\\<lambda>l. sopen_option n s p (f l)).\n        P (the (sopen_option n s p (f l)))) =\n    (\\<forall>l\\<in>dom f. P ({n \\<rightarrow> [s,p]} the (f l)))", "by (simp, force)"], ["", "lemma sopen_FV[rule_format]:\n  \"\\<forall>n s p. FV ({n \\<rightarrow> [s,p]} t) \\<subseteq> FV t \\<union> FV s \\<union> FV p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       FV ({n \\<rightarrow> [s,p]} t)\n       \\<subseteq> FV t \\<union> FV s \\<union> FV p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       FV ({n \\<rightarrow> [s,p]} t)\n       \\<subseteq> FV t \\<union> FV s \\<union> FV p", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       FV ({n \\<rightarrow> [s,p]} t)\n       \\<subseteq> FV t \\<union> FV s \\<union> FV p", "have\n    \"(\\<forall>n s p. FV ({n \\<rightarrow> [s,p]} t) \\<subseteq> FV t \\<union> FV s \\<union> FV p)\n    &(\\<forall>n s p. FVoption (sopen_option n s p u) \\<subseteq> FVoption u \\<union> FV s \\<union> FV p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n s p.\n        FV ({n \\<rightarrow> [s,p]} t)\n        \\<subseteq> FV t \\<union> FV s \\<union> FV p) \\<and>\n    (\\<forall>n s p.\n        FVoption (sopen_option n s p u)\n        \\<subseteq> FVoption u \\<union> FV s \\<union> FV p)", "apply (induct u rule: compat_sterm_sterm_option.induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p.\n          FV ({n \\<rightarrow> [s,p]} Bvar x)\n          \\<subseteq> FV (Bvar x) \\<union> FV s \\<union> FV p\n 2. \\<And>x.\n       \\<forall>n s p.\n          FV ({n \\<rightarrow> [s,p]} Fvar x)\n          \\<subseteq> FV (Fvar x) \\<union> FV s \\<union> FV p\n 3. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p.\n              FVoption (sopen_option n s p (x1 x))\n              \\<subseteq> FVoption (x1 x) \\<union> FV s \\<union>\n                          FV p) \\<Longrightarrow>\n       \\<forall>n s p.\n          FV ({n \\<rightarrow> [s,p]} Obj x1 x2)\n          \\<subseteq> FV (Obj x1 x2) \\<union> FV s \\<union> FV p\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p.\n                   FV ({n \\<rightarrow> [s,p]} x1)\n                   \\<subseteq> FV x1 \\<union> FV s \\<union> FV p;\n        \\<forall>n s p.\n           FV ({n \\<rightarrow> [s,p]} x3)\n           \\<subseteq> FV x3 \\<union> FV s \\<union> FV p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            FV ({n \\<rightarrow> [s,p]} Call x1 x2 x3)\n                            \\<subseteq> FV (Call x1 x2 x3) \\<union>\n  FV s \\<union>\n  FV p\n 5. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p.\n                   FV ({n \\<rightarrow> [s,p]} x1)\n                   \\<subseteq> FV x1 \\<union> FV s \\<union> FV p;\n        \\<forall>n s p.\n           FV ({n \\<rightarrow> [s,p]} x3)\n           \\<subseteq> FV x3 \\<union> FV s \\<union> FV p\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            FV ({n \\<rightarrow> [s,p]} Upd x1 x2 x3)\n                            \\<subseteq> FV (Upd x1 x2 x3) \\<union>\n  FV s \\<union>\n  FV p\n 6. \\<forall>n s p.\n       FVoption (sopen_option n s p None)\n       \\<subseteq> FVoption None \\<union> FV s \\<union> FV p\n 7. \\<And>x.\n       \\<forall>n s p.\n          FV ({n \\<rightarrow> [s,p]} x)\n          \\<subseteq> FV x \\<union> FV s \\<union> FV p \\<Longrightarrow>\n       \\<forall>n s p.\n          FVoption (sopen_option n s p (Some x))\n          \\<subseteq> FVoption (Some x) \\<union> FV s \\<union> FV p", "apply (auto split: bVariable.split)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1 n s p x xa y.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p.\n                      FVoption (sopen_option n s p (x1 x))\n                      \\<subseteq> FVoption (x1 x) \\<union> FV s \\<union>\n                                  FV p;\n        x \\<in> FV ({Suc n \\<rightarrow> [s,p]} y); x \\<notin> FV p;\n        x \\<notin> FV s; x1 xa = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa\\<in>dom x1. x \\<in> FVoption (x1 xa)\n 2. \\<And>x1 x3 n s p x.\n       \\<lbrakk>\\<forall>n s p.\n                   FV ({n \\<rightarrow> [s,p]} x1)\n                   \\<subseteq> FV x1 \\<union> FV s \\<union> FV p;\n        \\<forall>n s p.\n           FV ({n \\<rightarrow> [s,p]} x3)\n           \\<subseteq> FV x3 \\<union> FV s \\<union> FV p;\n        x \\<in> FV ({n \\<rightarrow> [s,p]} x3); x \\<notin> FV p;\n        x \\<notin> FV s; x \\<notin> FV x3\\<rbrakk>\n       \\<Longrightarrow> x \\<in> FV x1\n 3. \\<And>x1 x3 n s p x.\n       \\<lbrakk>\\<forall>n s p.\n                   FV ({n \\<rightarrow> [s,p]} x1)\n                   \\<subseteq> FV x1 \\<union> FV s \\<union> FV p;\n        \\<forall>n s p.\n           FV ({n \\<rightarrow> [s,p]} x3)\n           \\<subseteq> FV x3 \\<union> FV s \\<union> FV p;\n        x \\<in> FV ({Suc n \\<rightarrow> [s,p]} x3); x \\<notin> FV p;\n        x \\<notin> FV s; x \\<notin> FV x3\\<rbrakk>\n       \\<Longrightarrow> x \\<in> FV x1", "apply (metis (no_types, lifting) FV_Some UnE domI sopen_Some subsetCE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x3 n s p x.\n       \\<lbrakk>\\<forall>n s p.\n                   FV ({n \\<rightarrow> [s,p]} x1)\n                   \\<subseteq> FV x1 \\<union> FV s \\<union> FV p;\n        \\<forall>n s p.\n           FV ({n \\<rightarrow> [s,p]} x3)\n           \\<subseteq> FV x3 \\<union> FV s \\<union> FV p;\n        x \\<in> FV ({n \\<rightarrow> [s,p]} x3); x \\<notin> FV p;\n        x \\<notin> FV s; x \\<notin> FV x3\\<rbrakk>\n       \\<Longrightarrow> x \\<in> FV x1\n 2. \\<And>x1 x3 n s p x.\n       \\<lbrakk>\\<forall>n s p.\n                   FV ({n \\<rightarrow> [s,p]} x1)\n                   \\<subseteq> FV x1 \\<union> FV s \\<union> FV p;\n        \\<forall>n s p.\n           FV ({n \\<rightarrow> [s,p]} x3)\n           \\<subseteq> FV x3 \\<union> FV s \\<union> FV p;\n        x \\<in> FV ({Suc n \\<rightarrow> [s,p]} x3); x \\<notin> FV p;\n        x \\<notin> FV s; x \\<notin> FV x3\\<rbrakk>\n       \\<Longrightarrow> x \\<in> FV x1", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x3 n s p x.\n       \\<lbrakk>\\<forall>n s p.\n                   FV ({n \\<rightarrow> [s,p]} x1)\n                   \\<subseteq> FV x1 \\<union> FV s \\<union> FV p;\n        \\<forall>n s p.\n           FV ({n \\<rightarrow> [s,p]} x3)\n           \\<subseteq> FV x3 \\<union> FV s \\<union> FV p;\n        x \\<in> FV ({Suc n \\<rightarrow> [s,p]} x3); x \\<notin> FV p;\n        x \\<notin> FV s; x \\<notin> FV x3\\<rbrakk>\n       \\<Longrightarrow> x \\<in> FV x1", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<forall>n s p.\n      FV ({n \\<rightarrow> [s,p]} t)\n      \\<subseteq> FV t \\<union> FV s \\<union> FV p) \\<and>\n  (\\<forall>n s p.\n      FVoption (sopen_option n s p u)\n      \\<subseteq> FVoption u \\<union> FV s \\<union> FV p)\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       FV ({n \\<rightarrow> [s,p]} t)\n       \\<subseteq> FV t \\<union> FV s \\<union> FV p", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>n s p.\n     FV ({n \\<rightarrow> [s,p]} t)\n     \\<subseteq> FV t \\<union> FV s \\<union> FV p", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n s p.\n     FV ({n \\<rightarrow> [s,p]} t)\n     \\<subseteq> FV t \\<union> FV s \\<union> FV p\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       FV ({n \\<rightarrow> [s,p]} t)\n       \\<subseteq> FV t \\<union> FV s \\<union> FV p", "by assumption"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     FV ({n \\<rightarrow> [s,p]} t)\n     \\<subseteq> FV t \\<union> FV s \\<union> FV p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_commute[rule_format]:\n  \"\\<forall>n k s p s' p'. n \\<noteq> k\n     \\<longrightarrow> {n \\<rightarrow> [Fvar s', Fvar p']} {k \\<rightarrow> [Fvar s, Fvar p]} t \n         = {k \\<rightarrow> [Fvar s, Fvar p]} {n \\<rightarrow> [Fvar s', Fvar p']} t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n k s p s' p'.\n       n \\<noteq> k \\<longrightarrow>\n       {n \\<rightarrow> [Fvar\n                          s',Fvar p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n       {k \\<rightarrow> [Fvar\n                          s,Fvar p]} {n \\<rightarrow> [Fvar s',Fvar p']} t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n k s p s' p'.\n       n \\<noteq> k \\<longrightarrow>\n       {n \\<rightarrow> [Fvar\n                          s',Fvar p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n       {k \\<rightarrow> [Fvar\n                          s,Fvar p]} {n \\<rightarrow> [Fvar s',Fvar p']} t", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n k s p s' p'.\n       n \\<noteq> k \\<longrightarrow>\n       {n \\<rightarrow> [Fvar\n                          s',Fvar p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n       {k \\<rightarrow> [Fvar\n                          s,Fvar p]} {n \\<rightarrow> [Fvar s',Fvar p']} t", "have\n    \"(\\<forall>n k s p s' p'. n \\<noteq> k\n      \\<longrightarrow> {n \\<rightarrow> [Fvar s', Fvar p']} {k \\<rightarrow> [Fvar s, Fvar p]} t \n          = {k \\<rightarrow> [Fvar s, Fvar p]} {n \\<rightarrow> [Fvar s', Fvar p']} t)\n    &(\\<forall>n k s p s' p'. n \\<noteq> k\n      \\<longrightarrow> sopen_option n (Fvar s') (Fvar p') (sopen_option k (Fvar s) (Fvar p) u) \n          = sopen_option k (Fvar s) (Fvar p)\n             (sopen_option n (Fvar s') (Fvar p') u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n k s p s' p'.\n        n \\<noteq> k \\<longrightarrow>\n        {n \\<rightarrow> [Fvar\n                           s',Fvar\n                               p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n        {k \\<rightarrow> [Fvar\n                           s,Fvar\n                              p]} {n \\<rightarrow> [Fvar\n               s',Fvar p']} t) \\<and>\n    (\\<forall>n k s p s' p'.\n        n \\<noteq> k \\<longrightarrow>\n        sopen_option n (Fvar s') (Fvar p')\n         (sopen_option k (Fvar s) (Fvar p) u) =\n        sopen_option k (Fvar s) (Fvar p)\n         (sopen_option n (Fvar s') (Fvar p') u))", "by (rule compat_sterm_sterm_option.induct, simp_all split: bVariable.split)"], ["proof (state)\nthis:\n  (\\<forall>n k s p s' p'.\n      n \\<noteq> k \\<longrightarrow>\n      {n \\<rightarrow> [Fvar\n                         s',Fvar p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n      {k \\<rightarrow> [Fvar\n                         s,Fvar\n                            p]} {n \\<rightarrow> [Fvar\n             s',Fvar p']} t) \\<and>\n  (\\<forall>n k s p s' p'.\n      n \\<noteq> k \\<longrightarrow>\n      sopen_option n (Fvar s') (Fvar p')\n       (sopen_option k (Fvar s) (Fvar p) u) =\n      sopen_option k (Fvar s) (Fvar p)\n       (sopen_option n (Fvar s') (Fvar p') u))\n\ngoal (1 subgoal):\n 1. \\<forall>n k s p s' p'.\n       n \\<noteq> k \\<longrightarrow>\n       {n \\<rightarrow> [Fvar\n                          s',Fvar p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n       {k \\<rightarrow> [Fvar\n                          s,Fvar p]} {n \\<rightarrow> [Fvar s',Fvar p']} t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>n k s p s' p'.\n     n \\<noteq> k \\<longrightarrow>\n     {n \\<rightarrow> [Fvar\n                        s',Fvar p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n     {k \\<rightarrow> [Fvar s,Fvar p]} {n \\<rightarrow> [Fvar s',Fvar p']} t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n k s p s' p'.\n     n \\<noteq> k \\<longrightarrow>\n     {n \\<rightarrow> [Fvar\n                        s',Fvar p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n     {k \\<rightarrow> [Fvar s,Fvar p]} {n \\<rightarrow> [Fvar s',Fvar p']} t\n\ngoal (1 subgoal):\n 1. \\<forall>n k s p s' p'.\n       n \\<noteq> k \\<longrightarrow>\n       {n \\<rightarrow> [Fvar\n                          s',Fvar p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n       {k \\<rightarrow> [Fvar\n                          s,Fvar p]} {n \\<rightarrow> [Fvar s',Fvar p']} t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>n k s p s' p'.\n     n \\<noteq> k \\<longrightarrow>\n     {n \\<rightarrow> [Fvar\n                        s',Fvar p']} {k \\<rightarrow> [Fvar s,Fvar p]} t =\n     {k \\<rightarrow> [Fvar s,Fvar p]} {n \\<rightarrow> [Fvar s',Fvar p']} t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_fresh_inj[rule_format]:\n  \"\\<forall>n s p t'. {n \\<rightarrow> [Fvar s, Fvar p]} t = {n \\<rightarrow> [Fvar s, Fvar p]} t'\n     \\<longrightarrow> s \\<notin> FV t \\<longrightarrow> s \\<notin> FV t' \\<longrightarrow> p \\<notin> FV t \\<longrightarrow> p \\<notin> FV t' \\<longrightarrow> s \\<noteq> p\n     \\<longrightarrow> t = t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "fix \n      b s p n t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "assume \n      \"(case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n               | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) = t\""], ["proof (state)\nthis:\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  t\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "hence \"Fvar s = t \\<or> Fvar p = t \\<or> Bvar b = t\""], ["proof (prove)\nusing this:\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  t\n\ngoal (1 subgoal):\n 1. Fvar s = t \\<or> Fvar p = t \\<or> Bvar b = t", "by (cases b, auto, (rename_tac nat, case_tac \"n = nat\", auto)+)"], ["proof (state)\nthis:\n  Fvar s = t \\<or> Fvar p = t \\<or> Bvar b = t\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "}"], ["proof (state)\nthis:\n  (case ?b2 of Self i \\<Rightarrow> if ?n2 = i then Fvar ?s2 else Bvar ?b2\n   | Param i \\<Rightarrow> if ?n2 = i then Fvar ?p2 else Bvar ?b2) =\n  ?ta2 \\<Longrightarrow>\n  Fvar ?s2 = ?ta2 \\<or> Fvar ?p2 = ?ta2 \\<or> Bvar ?b2 = ?ta2\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "note cT = this"], ["proof (state)\nthis:\n  (case ?b2 of Self i \\<Rightarrow> if ?n2 = i then Fvar ?s2 else Bvar ?b2\n   | Param i \\<Rightarrow> if ?n2 = i then Fvar ?p2 else Bvar ?b2) =\n  ?ta2 \\<Longrightarrow>\n  Fvar ?s2 = ?ta2 \\<or> Fvar ?p2 = ?ta2 \\<or> Bvar ?b2 = ?ta2\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "(* induction *)"], ["proof (state)\nthis:\n  (case ?b2 of Self i \\<Rightarrow> if ?n2 = i then Fvar ?s2 else Bvar ?b2\n   | Param i \\<Rightarrow> if ?n2 = i then Fvar ?p2 else Bvar ?b2) =\n  ?ta2 \\<Longrightarrow>\n  Fvar ?s2 = ?ta2 \\<or> Fvar ?p2 = ?ta2 \\<or> Bvar ?b2 = ?ta2\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "have\n    \"(\\<forall>n s p t'. {n \\<rightarrow> [Fvar s, Fvar p]} t = {n \\<rightarrow> [Fvar s, Fvar p]} t'\n      \\<longrightarrow> s \\<notin> FV t \\<longrightarrow> s \\<notin> FV t' \\<longrightarrow> p \\<notin> FV t \\<longrightarrow> p \\<notin> FV t' \\<longrightarrow> s \\<noteq> p\n      \\<longrightarrow> t = t')\n    &(\\<forall>n s p u'. sopen_option n (Fvar s) (Fvar p) u \n                  = sopen_option n (Fvar s) (Fvar p) u'\n      \\<longrightarrow> s \\<notin> FVoption u \\<longrightarrow> s \\<notin> FVoption u' \n      \\<longrightarrow> p \\<notin> FVoption u \\<longrightarrow> p \\<notin> FVoption u' \\<longrightarrow> s \\<noteq> p\n      \\<longrightarrow> u = u')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n s p t'.\n        {n \\<rightarrow> [Fvar s,Fvar p]} t =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n        s \\<notin> FV t \\<longrightarrow>\n        s \\<notin> FV t' \\<longrightarrow>\n        p \\<notin> FV t \\<longrightarrow>\n        p \\<notin> FV t' \\<longrightarrow>\n        s \\<noteq> p \\<longrightarrow> t = t') \\<and>\n    (\\<forall>n s p u'.\n        sopen_option n (Fvar s) (Fvar p) u =\n        sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n        s \\<notin> FVoption u \\<longrightarrow>\n        s \\<notin> FVoption u' \\<longrightarrow>\n        p \\<notin> FVoption u \\<longrightarrow>\n        p \\<notin> FVoption u' \\<longrightarrow>\n        s \\<noteq> p \\<longrightarrow> u = u')", "proof (induct _ t _ u rule: compat_sterm_sterm_option.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Bvar x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Bvar x) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Bvar x) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Bvar x = t'\n 2. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Fvar x) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Fvar x) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Fvar x = t'\n 3. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (x1 x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (x1 x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (x1 x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> x1 x = u') \\<Longrightarrow>\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj x1 x2 =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Obj x1 x2 = t'\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 5. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 6. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 7. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "case (Bvar b)"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Bvar x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Bvar x) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Bvar x) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Bvar x = t'\n 2. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Fvar x) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Fvar x) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Fvar x = t'\n 3. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (x1 x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (x1 x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (x1 x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> x1 x = u') \\<Longrightarrow>\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj x1 x2 =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Obj x1 x2 = t'\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 5. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 6. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 7. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Bvar b =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV (Bvar b) \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV (Bvar b) \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> Bvar b = t'", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>(case b of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                 | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n                {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t'; p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Bvar b = t'", "fix s p n t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>(case b of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                 | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n                {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t'; p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Bvar b = t'", "assume \n        a: \"(case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                 | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) \n         = {n \\<rightarrow> [Fvar s,Fvar p]} t\""], ["proof (state)\nthis:\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>(case b of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                 | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n                {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t'; p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Bvar b = t'", "note cT[OF this]"], ["proof (state)\nthis:\n  Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t \\<or>\n  Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t \\<or>\n  Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>(case b of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                 | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n                {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t'; p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Bvar b = t'", "moreover"], ["proof (state)\nthis:\n  Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t \\<or>\n  Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t \\<or>\n  Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>(case b of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                 | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n                {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t'; p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Bvar b = t'", "assume \"s \\<notin> FV t\" and \"p \\<notin> FV t\" and \"s \\<noteq> p\""], ["proof (state)\nthis:\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>(case b of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                 | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n                {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t'; p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Bvar b = t'", "ultimately"], ["proof (chain)\npicking this:\n  Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t \\<or>\n  Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t \\<or>\n  Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p", "show \"Bvar b = t\""], ["proof (prove)\nusing this:\n  Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t \\<or>\n  Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t \\<or>\n  Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. Bvar b = t", "proof (auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "{"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "fix b'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "assume \n            \"(case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n                      | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') = Fvar s\""], ["proof (state)\nthis:\n  (case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') =\n  Fvar s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "with \\<open>s \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  s \\<noteq> p\n  (case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') =\n  Fvar s", "have \"b' = Self n\""], ["proof (prove)\nusing this:\n  s \\<noteq> p\n  (case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') =\n  Fvar s\n\ngoal (1 subgoal):\n 1. b' = Self n", "by (cases b', auto, (rename_tac nat, case_tac \"n = nat\", auto)+)"], ["proof (state)\nthis:\n  b' = Self n\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "}"], ["proof (state)\nthis:\n  (case ?b'2 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar ?b'2\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar ?b'2) =\n  Fvar s \\<Longrightarrow>\n  ?b'2 = Self n\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "note fvS = this"], ["proof (state)\nthis:\n  (case ?b'2 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar ?b'2\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar ?b'2) =\n  Fvar s \\<Longrightarrow>\n  ?b'2 = Self n\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "assume eq_s: \"Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\""], ["proof (state)\nthis:\n  Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "with sym[OF this] \\<open>s \\<notin> FV t\\<close> \\<open>s \\<noteq> p\\<close> fvS"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar s\n  s \\<notin> FV t\n  s \\<noteq> p\n  (case ?b'2 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar ?b'2\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar ?b'2) =\n  Fvar s \\<Longrightarrow>\n  ?b'2 = Self n\n  Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t", "have \"t = Bvar (Self n)\""], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar s\n  s \\<notin> FV t\n  s \\<noteq> p\n  (case ?b'2 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar ?b'2\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar ?b'2) =\n  Fvar s \\<Longrightarrow>\n  ?b'2 = Self n\n  Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. t = Bvar (Self n)", "by (cases t, auto)"], ["proof (state)\nthis:\n  t = Bvar (Self n)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "moreover"], ["proof (state)\nthis:\n  t = Bvar (Self n)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "from a sym[OF eq_s] \\<open>s \\<noteq> p\\<close> fvS[of b]"], ["proof (chain)\npicking this:\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar s\n  s \\<noteq> p\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  Fvar s \\<Longrightarrow>\n  b = Self n", "have \"Self n = b\""], ["proof (prove)\nusing this:\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar s\n  s \\<noteq> p\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  Fvar s \\<Longrightarrow>\n  b = Self n\n\ngoal (1 subgoal):\n 1. Self n = b", "by simp"], ["proof (state)\nthis:\n  Self n = b\n\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar s = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 3. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "ultimately"], ["proof (chain)\npicking this:\n  t = Bvar (Self n)\n  Self n = b", "show \"Bvar b = t\""], ["proof (prove)\nusing this:\n  t = Bvar (Self n)\n  Self n = b\n\ngoal (1 subgoal):\n 1. Bvar b = t", "by simp"], ["proof (state)\nthis:\n  Bvar b = t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "fix b'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "assume \n            \"(case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n                      | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') = Fvar p\""], ["proof (state)\nthis:\n  (case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') =\n  Fvar p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "with \\<open>s \\<noteq> p\\<close>"], ["proof (chain)\npicking this:\n  s \\<noteq> p\n  (case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') =\n  Fvar p", "have \"b' = Param n\""], ["proof (prove)\nusing this:\n  s \\<noteq> p\n  (case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') =\n  Fvar p\n\ngoal (1 subgoal):\n 1. b' = Param n", "by (cases b', auto, (rename_tac nat, case_tac \"n = nat\", auto)+)"], ["proof (state)\nthis:\n  b' = Param n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "}"], ["proof (state)\nthis:\n  (case ?b'2 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar ?b'2\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar ?b'2) =\n  Fvar p \\<Longrightarrow>\n  ?b'2 = Param n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "note fvP = this"], ["proof (state)\nthis:\n  (case ?b'2 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar ?b'2\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar ?b'2) =\n  Fvar p \\<Longrightarrow>\n  ?b'2 = Param n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "assume eq_p: \"Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\""], ["proof (state)\nthis:\n  Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "with sym[OF this] \\<open>p \\<notin> FV t\\<close> \\<open>s \\<noteq> p\\<close> fvP"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar p\n  p \\<notin> FV t\n  s \\<noteq> p\n  (case ?b'2 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar ?b'2\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar ?b'2) =\n  Fvar p \\<Longrightarrow>\n  ?b'2 = Param n\n  Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t", "have \"t = Bvar (Param n)\""], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar p\n  p \\<notin> FV t\n  s \\<noteq> p\n  (case ?b'2 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar ?b'2\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar ?b'2) =\n  Fvar p \\<Longrightarrow>\n  ?b'2 = Param n\n  Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. t = Bvar (Param n)", "by (cases t, auto)"], ["proof (state)\nthis:\n  t = Bvar (Param n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "moreover"], ["proof (state)\nthis:\n  t = Bvar (Param n)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "from a sym[OF eq_p] \\<open>s \\<noteq> p\\<close> fvP[of b]"], ["proof (chain)\npicking this:\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar p\n  s \\<noteq> p\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  Fvar p \\<Longrightarrow>\n  b = Param n", "have \"Param n = b\""], ["proof (prove)\nusing this:\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Fvar p\n  s \\<noteq> p\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  Fvar p \\<Longrightarrow>\n  b = Param n\n\ngoal (1 subgoal):\n 1. Param n = b", "by simp"], ["proof (state)\nthis:\n  Param n = b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Fvar p = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> Bvar b = t\n 2. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "ultimately"], ["proof (chain)\npicking this:\n  t = Bvar (Param n)\n  Param n = b", "show \"Bvar b = t\""], ["proof (prove)\nusing this:\n  t = Bvar (Param n)\n  Param n = b\n\ngoal (1 subgoal):\n 1. Bvar b = t", "by simp"], ["proof (state)\nthis:\n  Bvar b = t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "assume \"Bvar b = {n \\<rightarrow> [Fvar s, Fvar p]} t\""], ["proof (state)\nthis:\n  Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<notin> FV t; p \\<notin> FV t; s \\<noteq> p;\n     Bvar b = {n \\<rightarrow> [Fvar s,Fvar p]} t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "from sym[OF this]"], ["proof (chain)\npicking this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b", "show \"{n \\<rightarrow> [Fvar s,Fvar p]} t = t\""], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = Bvar b\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "proof (cases t, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>(case x1 of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n                 | Param i \\<Rightarrow>\n                     if n = i then Fvar p else Bvar x1) =\n                Bvar b;\n        t = Bvar x1\\<rbrakk>\n       \\<Longrightarrow> b = x1", "fix b'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>(case x1 of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n                 | Param i \\<Rightarrow>\n                     if n = i then Fvar p else Bvar x1) =\n                Bvar b;\n        t = Bvar x1\\<rbrakk>\n       \\<Longrightarrow> b = x1", "assume \n            \"(case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n                      | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') = Bvar b\""], ["proof (state)\nthis:\n  (case b' of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b'\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b') =\n  Bvar b\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>(case x1 of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n                 | Param i \\<Rightarrow>\n                     if n = i then Fvar p else Bvar x1) =\n                Bvar b;\n        t = Bvar x1\\<rbrakk>\n       \\<Longrightarrow> b = x1", "from cT[OF this]"], ["proof (chain)\npicking this:\n  Fvar s = Bvar b \\<or> Fvar p = Bvar b \\<or> Bvar b' = Bvar b", "have \"Bvar b = Bvar b'\""], ["proof (prove)\nusing this:\n  Fvar s = Bvar b \\<or> Fvar p = Bvar b \\<or> Bvar b' = Bvar b\n\ngoal (1 subgoal):\n 1. Bvar b = Bvar b'", "by simp"], ["proof (state)\nthis:\n  Bvar b = Bvar b'\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>(case x1 of\n                 Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n                 | Param i \\<Rightarrow>\n                     if n = i then Fvar p else Bvar x1) =\n                Bvar b;\n        t = Bvar x1\\<rbrakk>\n       \\<Longrightarrow> b = x1", "thus \"b = b'\""], ["proof (prove)\nusing this:\n  Bvar b = Bvar b'\n\ngoal (1 subgoal):\n 1. b = b'", "by simp"], ["proof (state)\nthis:\n  b = b'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Bvar b = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Bvar b =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV (Bvar b) \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV (Bvar b) \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> Bvar b = t'\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Fvar x) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Fvar x) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Fvar x = t'\n 2. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (x1 x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (x1 x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (x1 x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> x1 x = u') \\<Longrightarrow>\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj x1 x2 =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Obj x1 x2 = t'\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 5. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 6. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Fvar x) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Fvar x) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Fvar x = t'\n 2. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (x1 x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (x1 x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (x1 x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> x1 x = u') \\<Longrightarrow>\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj x1 x2 =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Obj x1 x2 = t'\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 5. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 6. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "case (Fvar x)"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Fvar x) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Fvar x) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Fvar x = t'\n 2. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (x1 x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (x1 x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (x1 x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> x1 x = u') \\<Longrightarrow>\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj x1 x2 =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Obj x1 x2 = t'\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 5. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 6. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV (Fvar x) \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV (Fvar x) \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> Fvar x = t'", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        s \\<notin> FV t';\n        p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t' = t'", "fix n s p t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        s \\<notin> FV t';\n        p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t' = t'", "assume \n        a: \"Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t\" and\n        \"s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t)\""], ["proof (state)\nthis:\n  Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t\n  s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t)\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        s \\<notin> FV t';\n        p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t' = t'", "hence \"s \\<noteq> x\""], ["proof (prove)\nusing this:\n  Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t\n  s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t)\n\ngoal (1 subgoal):\n 1. s \\<noteq> x", "by force"], ["proof (state)\nthis:\n  s \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        s \\<notin> FV t';\n        p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t' = t'", "moreover"], ["proof (state)\nthis:\n  s \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        s \\<notin> FV t';\n        p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t' = t'", "assume \"p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t)\""], ["proof (state)\nthis:\n  p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t)\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        s \\<notin> FV t';\n        p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t' = t'", "with a"], ["proof (chain)\npicking this:\n  Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t\n  p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t)", "have \"p \\<noteq> x\""], ["proof (prove)\nusing this:\n  Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t\n  p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t)\n\ngoal (1 subgoal):\n 1. p \\<noteq> x", "by force"], ["proof (state)\nthis:\n  p \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        s \\<notin> FV t';\n        p \\<notin> FV ({n \\<rightarrow> [Fvar s,Fvar p]} t');\n        p \\<notin> FV t'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [Fvar s,Fvar p]} t' = t'", "ultimately"], ["proof (chain)\npicking this:\n  s \\<noteq> x\n  p \\<noteq> x", "show \"{n \\<rightarrow> [Fvar s,Fvar p]} t = t\""], ["proof (prove)\nusing this:\n  s \\<noteq> x\n  p \\<noteq> x\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "using a"], ["proof (prove)\nusing this:\n  s \\<noteq> x\n  p \\<noteq> x\n  Fvar x = {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "proof (cases t, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<noteq> x; p \\<noteq> x;\n        Fvar x =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1)\\<rbrakk>\n       \\<Longrightarrow> (case x1 of\n                          Self i \\<Rightarrow>\n                            if n = i then Fvar s else Bvar x1\n                          | Param i \\<Rightarrow>\n                              if n = i then Fvar p else Bvar x1) =\n                         Bvar x1", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<noteq> x; p \\<noteq> x;\n        Fvar x =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1)\\<rbrakk>\n       \\<Longrightarrow> (case x1 of\n                          Self i \\<Rightarrow>\n                            if n = i then Fvar s else Bvar x1\n                          | Param i \\<Rightarrow>\n                              if n = i then Fvar p else Bvar x1) =\n                         Bvar x1", "assume \n          \"Fvar x = (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                            | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b)\""], ["proof (state)\nthis:\n  Fvar x =\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b)\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<noteq> x; p \\<noteq> x;\n        Fvar x =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1)\\<rbrakk>\n       \\<Longrightarrow> (case x1 of\n                          Self i \\<Rightarrow>\n                            if n = i then Fvar s else Bvar x1\n                          | Param i \\<Rightarrow>\n                              if n = i then Fvar p else Bvar x1) =\n                         Bvar x1", "from cT[OF sym[OF this]] \\<open>s \\<noteq> x\\<close> \\<open>p \\<noteq> x\\<close>"], ["proof (chain)\npicking this:\n  Fvar s = Fvar x \\<or> Fvar p = Fvar x \\<or> Bvar b = Fvar x\n  s \\<noteq> x\n  p \\<noteq> x", "have False"], ["proof (prove)\nusing this:\n  Fvar s = Fvar x \\<or> Fvar p = Fvar x \\<or> Bvar b = Fvar x\n  s \\<noteq> x\n  p \\<noteq> x\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<noteq> x; p \\<noteq> x;\n        Fvar x =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1)\\<rbrakk>\n       \\<Longrightarrow> (case x1 of\n                          Self i \\<Rightarrow>\n                            if n = i then Fvar s else Bvar x1\n                          | Param i \\<Rightarrow>\n                              if n = i then Fvar p else Bvar x1) =\n                         Bvar x1", "then"], ["proof (chain)\npicking this:\n  False", "show \n          \"(case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) = Bvar b\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n     | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n    Bvar b", ".."], ["proof (state)\nthis:\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b) =\n  Bvar b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {n \\<rightarrow> [Fvar s,Fvar p]} t = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV (Fvar x) \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV (Fvar x) \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> Fvar x = t'\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (x1 x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (x1 x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (x1 x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> x1 x = u') \\<Longrightarrow>\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj x1 x2 =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Obj x1 x2 = t'\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 4. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 5. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (x1 x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (x1 x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (x1 x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> x1 x = u') \\<Longrightarrow>\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj x1 x2 =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Obj x1 x2 = t'\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 4. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 5. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "case (Obj f T)"], ["proof (state)\nthis:\n  \\<forall>n s p u'.\n     sopen_option n (Fvar s) (Fvar p) (f ?x) =\n     sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n     s \\<notin> FVoption (f ?x) \\<longrightarrow>\n     s \\<notin> FVoption u' \\<longrightarrow>\n     p \\<notin> FVoption (f ?x) \\<longrightarrow>\n     p \\<notin> FVoption u' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> f ?x = u'\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (x1 x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (x1 x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (x1 x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> x1 x = u') \\<Longrightarrow>\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} Obj x1 x2 =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Obj x1 x2 = t'\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 4. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 5. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>n s p u'.\n     sopen_option n (Fvar s) (Fvar p) (f ?x) =\n     sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n     s \\<notin> FVoption (f ?x) \\<longrightarrow>\n     s \\<notin> FVoption u' \\<longrightarrow>\n     p \\<notin> FVoption (f ?x) \\<longrightarrow>\n     p \\<notin> FVoption u' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> f ?x = u'\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV (Obj f T) \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV (Obj f T) \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> Obj f T = t'", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p u'.\n                      sopen_option n (Fvar s) (Fvar p) (f x) =\n                      sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n                      s \\<notin> FVoption (f x) \\<longrightarrow>\n                      s \\<notin> FVoption u' \\<longrightarrow>\n                      p \\<notin> FVoption (f x) \\<longrightarrow>\n                      p \\<notin> FVoption u' \\<longrightarrow>\n                      s \\<noteq> p \\<longrightarrow> f x = u';\n        Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        \\<forall>x\\<in>dom f. s \\<notin> FVoption (f x); s \\<notin> FV t';\n        \\<forall>x\\<in>dom f. p \\<notin> FVoption (f x); p \\<notin> FV t';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Obj f T = t'", "fix n s p t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p u'.\n                      sopen_option n (Fvar s) (Fvar p) (f x) =\n                      sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n                      s \\<notin> FVoption (f x) \\<longrightarrow>\n                      s \\<notin> FVoption u' \\<longrightarrow>\n                      p \\<notin> FVoption (f x) \\<longrightarrow>\n                      p \\<notin> FVoption u' \\<longrightarrow>\n                      s \\<noteq> p \\<longrightarrow> f x = u';\n        Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        \\<forall>x\\<in>dom f. s \\<notin> FVoption (f x); s \\<notin> FV t';\n        \\<forall>x\\<in>dom f. p \\<notin> FVoption (f x); p \\<notin> FV t';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Obj f T = t'", "assume \n        \"Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T \n         = {n \\<rightarrow> [Fvar s,Fvar p]} t\" and\n        \"\\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\" and \n        \"\\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\" and\n        \"s \\<notin> FV t\" and \"p \\<notin> FV t\" and \"s \\<noteq> p\""], ["proof (state)\nthis:\n  Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p u'.\n                      sopen_option n (Fvar s) (Fvar p) (f x) =\n                      sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n                      s \\<notin> FVoption (f x) \\<longrightarrow>\n                      s \\<notin> FVoption u' \\<longrightarrow>\n                      p \\<notin> FVoption (f x) \\<longrightarrow>\n                      p \\<notin> FVoption u' \\<longrightarrow>\n                      s \\<noteq> p \\<longrightarrow> f x = u';\n        Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        \\<forall>x\\<in>dom f. s \\<notin> FVoption (f x); s \\<notin> FV t';\n        \\<forall>x\\<in>dom f. p \\<notin> FVoption (f x); p \\<notin> FV t';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Obj f T = t'", "thus \"Obj f T = t\""], ["proof (prove)\nusing this:\n  Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. Obj f T = t", "using Obj"], ["proof (prove)\nusing this:\n  Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n  \\<forall>n s p u'.\n     sopen_option n (Fvar s) (Fvar p) (f ?x) =\n     sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n     s \\<notin> FVoption (f ?x) \\<longrightarrow>\n     s \\<notin> FVoption u' \\<longrightarrow>\n     p \\<notin> FVoption (f ?x) \\<longrightarrow>\n     p \\<notin> FVoption u' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> f ?x = u'\n\ngoal (1 subgoal):\n 1. Obj f T = t", "proof (cases t, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1;\n        Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "(* case Bvar *)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1;\n        Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "fix b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1;\n        Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "assume \n          \"Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T \n           = (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                     | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b)\""], ["proof (state)\nthis:\n  Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b)\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1;\n        Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "from cT[OF sym[OF this]]"], ["proof (chain)\npicking this:\n  Fvar s =\n  Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T \\<or>\n  Fvar p =\n  Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T \\<or>\n  Bvar b = Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T", "show False"], ["proof (prove)\nusing this:\n  Fvar s =\n  Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T \\<or>\n  Fvar p =\n  Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T \\<or>\n  Bvar b = Obj (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) T\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "(* case Obj *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "fix f'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "assume \n          nin_s: \"\\<forall>l\\<in>dom f'. s \\<notin> FVoption (f' l)\" and\n          nin_p: \"\\<forall>l\\<in>dom f'. p \\<notin> FVoption (f' l)\" and\n          ff':   \"(\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) \n                  = (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))\""], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f'. s \\<notin> FVoption (f' l)\n  \\<forall>l\\<in>dom f'. p \\<notin> FVoption (f' l)\n  (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n  (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))\n\ngoal (1 subgoal):\n 1. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "have \"\\<And>l. f l = f' l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l. f l = f' l", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. f l = f' l", "fix  l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l. f l = f' l", "from ff'"], ["proof (chain)\npicking this:\n  (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n  (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))", "have \n            \"sopen_option (Suc n) (Fvar s) (Fvar p) (f l) \n             = sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)\""], ["proof (prove)\nusing this:\n  (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n  (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f' l))\n\ngoal (1 subgoal):\n 1. sopen_option (Suc n) (Fvar s) (Fvar p) (f l) =\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)", "by (rule cong, simp)"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f l) =\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)\n\ngoal (1 subgoal):\n 1. \\<And>l. f l = f' l", "moreover"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f l) =\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)\n\ngoal (1 subgoal):\n 1. \\<And>l. f l = f' l", "from \n            \\<open>\\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\\<close>\n            \\<open>\\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)", "have \"s \\<notin> FVoption (f l)\" and \"p \\<notin> FVoption (f l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. s \\<notin> FVoption (f l) &&& p \\<notin> FVoption (f l)", "by (case_tac \"l \\<in> dom f\", auto)+"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f l)\n  p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>l. f l = f' l", "moreover"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f l)\n  p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>l. f l = f' l", "from nin_s nin_p"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f'. s \\<notin> FVoption (f' l)\n  \\<forall>l\\<in>dom f'. p \\<notin> FVoption (f' l)", "have \"s \\<notin> FVoption (f' l)\" and \"p \\<notin> FVoption (f' l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f'. s \\<notin> FVoption (f' l)\n  \\<forall>l\\<in>dom f'. p \\<notin> FVoption (f' l)\n\ngoal (1 subgoal):\n 1. s \\<notin> FVoption (f' l) &&& p \\<notin> FVoption (f' l)", "by (case_tac \"l \\<in> dom f'\", auto)+"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f' l)\n  p \\<notin> FVoption (f' l)\n\ngoal (1 subgoal):\n 1. \\<And>l. f l = f' l", "ultimately"], ["proof (chain)\npicking this:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f l) =\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)\n  s \\<notin> FVoption (f l)\n  p \\<notin> FVoption (f l)\n  s \\<notin> FVoption (f' l)\n  p \\<notin> FVoption (f' l)", "show \"f l = f' l\""], ["proof (prove)\nusing this:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f l) =\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)\n  s \\<notin> FVoption (f l)\n  p \\<notin> FVoption (f l)\n  s \\<notin> FVoption (f' l)\n  p \\<notin> FVoption (f' l)\n\ngoal (1 subgoal):\n 1. f l = f' l", "using Obj[of l] \\<open>s \\<noteq> p\\<close>"], ["proof (prove)\nusing this:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f l) =\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f' l)\n  s \\<notin> FVoption (f l)\n  p \\<notin> FVoption (f l)\n  s \\<notin> FVoption (f' l)\n  p \\<notin> FVoption (f' l)\n  \\<forall>n s p u'.\n     sopen_option n (Fvar s) (Fvar p) (f l) =\n     sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n     s \\<notin> FVoption (f l) \\<longrightarrow>\n     s \\<notin> FVoption u' \\<longrightarrow>\n     p \\<notin> FVoption (f l) \\<longrightarrow>\n     p \\<notin> FVoption u' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> f l = u'\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. f l = f' l", "by simp"], ["proof (state)\nthis:\n  f l = f' l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ?l = f' ?l\n\ngoal (1 subgoal):\n 1. \\<And>x31.\n       \\<lbrakk>\\<forall>x\\<in>dom x31. s \\<notin> FVoption (x31 x);\n        \\<forall>x\\<in>dom x31. p \\<notin> FVoption (x31 x); t = Obj x31 T;\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) =\n        (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (x31 l));\n        \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l);\n        \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l); s \\<noteq> p;\n        \\<And>x.\n           \\<forall>n s p u'.\n              sopen_option n (Fvar s) (Fvar p) (f x) =\n              sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n              s \\<notin> FVoption (f x) \\<longrightarrow>\n              s \\<notin> FVoption u' \\<longrightarrow>\n              p \\<notin> FVoption (f x) \\<longrightarrow>\n              p \\<notin> FVoption u' \\<longrightarrow>\n              s \\<noteq> p \\<longrightarrow> f x = u'\\<rbrakk>\n       \\<Longrightarrow> f = x31", "thus \"f = f'\""], ["proof (prove)\nusing this:\n  f ?l = f' ?l\n\ngoal (1 subgoal):\n 1. f = f'", "by (rule ext)"], ["proof (state)\nthis:\n  f = f'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Obj f T = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV (Obj f T) \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV (Obj f T) \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> Obj f T = t'\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 3. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 4. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 3. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 4. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "case (Call t1 l t2)"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t1 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t1 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t1 = t'\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t2 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t2 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t2 = t'\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} Call x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow>\n                            Call x1 x2 x3 = t'\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 3. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 4. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t1 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t1 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t1 = t'\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t2 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t2 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t2 = t'\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Call t1 l t2 =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV (Call t1 l t2) \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV (Call t1 l t2) \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> Call t1 l t2 = t'", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV t1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV t1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t';\n        Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t1; s \\<notin> FV t2; s \\<notin> FV t';\n        p \\<notin> FV t1; p \\<notin> FV t2; p \\<notin> FV t';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Call t1 l t2 = t'", "fix n s p t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV t1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV t1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t';\n        Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t1; s \\<notin> FV t2; s \\<notin> FV t';\n        p \\<notin> FV t1; p \\<notin> FV t2; p \\<notin> FV t';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Call t1 l t2 = t'", "assume \n        \"s \\<notin> FV t1\" and \"s \\<notin> FV t2\" and \"p \\<notin> FV t1\" and \"p \\<notin> FV t2\" and\n        \"s \\<noteq> p\" and \"s \\<notin> FV t\" and \"p \\<notin> FV t\" and \n        \"Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l ({n \\<rightarrow> [Fvar s,Fvar p]} t2)\n         = {n \\<rightarrow> [Fvar s,Fvar p]} t\""], ["proof (state)\nthis:\n  s \\<notin> FV t1\n  s \\<notin> FV t2\n  p \\<notin> FV t1\n  p \\<notin> FV t2\n  s \\<noteq> p\n  s \\<notin> FV t\n  p \\<notin> FV t\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV t1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV t1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t';\n        Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t1; s \\<notin> FV t2; s \\<notin> FV t';\n        p \\<notin> FV t1; p \\<notin> FV t2; p \\<notin> FV t';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Call t1 l t2 = t'", "thus \"Call t1 l t2 = t\""], ["proof (prove)\nusing this:\n  s \\<notin> FV t1\n  s \\<notin> FV t2\n  p \\<notin> FV t1\n  p \\<notin> FV t2\n  s \\<noteq> p\n  s \\<notin> FV t\n  p \\<notin> FV t\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. Call t1 l t2 = t", "using Call"], ["proof (prove)\nusing this:\n  s \\<notin> FV t1\n  s \\<notin> FV t2\n  p \\<notin> FV t1\n  p \\<notin> FV t2\n  s \\<noteq> p\n  s \\<notin> FV t\n  p \\<notin> FV t\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t1 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t1 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t1 = t'\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t2 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t2 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t2 = t'\n\ngoal (1 subgoal):\n 1. Call t1 l t2 = t", "proof (cases t, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<notin> FV t1; s \\<notin> FV t2;\n        p \\<notin> FV t1; p \\<notin> FV t2; s \\<noteq> p;\n        Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t1 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t1 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t'\\<rbrakk>\n       \\<Longrightarrow> False", "(* case Bvar *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<notin> FV t1; s \\<notin> FV t2;\n        p \\<notin> FV t1; p \\<notin> FV t2; s \\<noteq> p;\n        Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t1 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t1 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t'\\<rbrakk>\n       \\<Longrightarrow> False", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<notin> FV t1; s \\<notin> FV t2;\n        p \\<notin> FV t1; p \\<notin> FV t2; s \\<noteq> p;\n        Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t1 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t1 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t'\\<rbrakk>\n       \\<Longrightarrow> False", "assume \n          \"Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l ({n \\<rightarrow> [Fvar s,Fvar p]} t2) \n           = (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                     | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b)\""], ["proof (state)\nthis:\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b)\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<notin> FV t1; s \\<notin> FV t2;\n        p \\<notin> FV t1; p \\<notin> FV t2; s \\<noteq> p;\n        Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t1 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t1 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t'\\<rbrakk>\n       \\<Longrightarrow> False", "from cT[OF sym[OF this]]"], ["proof (chain)\npicking this:\n  Fvar s =\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2) \\<or>\n  Fvar p =\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2) \\<or>\n  Bvar b =\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2)", "show False"], ["proof (prove)\nusing this:\n  Fvar s =\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2) \\<or>\n  Fvar p =\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2) \\<or>\n  Bvar b =\n  Call ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({n \\<rightarrow> [Fvar s,Fvar p]} t2)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Call t1 l t2 = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Call t1 l t2 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV (Call t1 l t2) \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV (Call t1 l t2) \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> Call t1 l t2 = t'\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 2. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 3. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 2. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 3. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "case (Upd t1 l t2)"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t1 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t1 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t1 = t'\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t2 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t2 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t2 = t'\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} x1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV x1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV x1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> x1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} x3 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV x3 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV x3 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> x3 = t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p t'.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd x1 x2 x3 =\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} t' \\<longrightarrow>\n                            s \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            s \\<notin> FV t' \\<longrightarrow>\n                            p \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            p \\<notin> FV t' \\<longrightarrow>\n                            s \\<noteq> p \\<longrightarrow> Upd x1 x2 x3 = t'\n 2. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 3. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t1 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t1 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t1 = t'\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t2 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t2 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t2 = t'\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Upd t1 l t2 =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV (Upd t1 l t2) \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV (Upd t1 l t2) \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> Upd t1 l t2 = t'", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV t1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV t1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t';\n        Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t1; s \\<notin> FV t2; s \\<notin> FV t';\n        p \\<notin> FV t1; p \\<notin> FV t2; p \\<notin> FV t';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Upd t1 l t2 = t'", "fix n s p t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV t1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV t1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t';\n        Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t1; s \\<notin> FV t2; s \\<notin> FV t';\n        p \\<notin> FV t1; p \\<notin> FV t2; p \\<notin> FV t';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Upd t1 l t2 = t'", "assume \n        \"s \\<notin> FV t1\" and \"s \\<notin> FV t2\" and \"p \\<notin> FV t1\" and \"p \\<notin> FV t2\" and\n        \"s \\<noteq> p\" and \"s \\<notin> FV t\" and \"p \\<notin> FV t\" and\n        \"Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2)\n         = {n \\<rightarrow> [Fvar s,Fvar p]} t\""], ["proof (state)\nthis:\n  s \\<notin> FV t1\n  s \\<notin> FV t2\n  p \\<notin> FV t1\n  p \\<notin> FV t2\n  s \\<noteq> p\n  s \\<notin> FV t\n  p \\<notin> FV t\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. \\<And>n s p t'.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV t1 \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV t1 \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t';\n        Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        {n \\<rightarrow> [Fvar s,Fvar p]} t';\n        s \\<notin> FV t1; s \\<notin> FV t2; s \\<notin> FV t';\n        p \\<notin> FV t1; p \\<notin> FV t2; p \\<notin> FV t';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Upd t1 l t2 = t'", "thus \"Upd t1 l t2 = t\""], ["proof (prove)\nusing this:\n  s \\<notin> FV t1\n  s \\<notin> FV t2\n  p \\<notin> FV t1\n  p \\<notin> FV t2\n  s \\<noteq> p\n  s \\<notin> FV t\n  p \\<notin> FV t\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n\ngoal (1 subgoal):\n 1. Upd t1 l t2 = t", "using Upd"], ["proof (prove)\nusing this:\n  s \\<notin> FV t1\n  s \\<notin> FV t2\n  p \\<notin> FV t1\n  p \\<notin> FV t2\n  s \\<noteq> p\n  s \\<notin> FV t\n  p \\<notin> FV t\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n  {n \\<rightarrow> [Fvar s,Fvar p]} t\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t1 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t1 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t1 = t'\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t2 \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t2 \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t2 = t'\n\ngoal (1 subgoal):\n 1. Upd t1 l t2 = t", "proof (cases t, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<notin> FV t1; s \\<notin> FV t2;\n        p \\<notin> FV t1; p \\<notin> FV t2; s \\<noteq> p;\n        Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t1 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t1 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t'\\<rbrakk>\n       \\<Longrightarrow> False", "(* case Bvar *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<notin> FV t1; s \\<notin> FV t2;\n        p \\<notin> FV t1; p \\<notin> FV t2; s \\<noteq> p;\n        Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t1 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t1 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t'\\<rbrakk>\n       \\<Longrightarrow> False", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<notin> FV t1; s \\<notin> FV t2;\n        p \\<notin> FV t1; p \\<notin> FV t2; s \\<noteq> p;\n        Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t1 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t1 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t'\\<rbrakk>\n       \\<Longrightarrow> False", "assume \n          \"Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) \n           = (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n                     | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b)\""], ["proof (state)\nthis:\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n  (case b of Self i \\<Rightarrow> if n = i then Fvar s else Bvar b\n   | Param i \\<Rightarrow> if n = i then Fvar p else Bvar b)\n\ngoal (1 subgoal):\n 1. \\<And>x1.\n       \\<lbrakk>t = Bvar x1; s \\<notin> FV t1; s \\<notin> FV t2;\n        p \\<notin> FV t1; p \\<notin> FV t2; s \\<noteq> p;\n        Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n         ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) =\n        (case x1 of Self i \\<Rightarrow> if n = i then Fvar s else Bvar x1\n         | Param i \\<Rightarrow> if n = i then Fvar p else Bvar x1);\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t1 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t1 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t1 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t1 = t';\n        \\<forall>n s p t'.\n           {n \\<rightarrow> [Fvar s,Fvar p]} t2 =\n           {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n           s \\<notin> FV t2 \\<longrightarrow>\n           s \\<notin> FV t' \\<longrightarrow>\n           p \\<notin> FV t2 \\<longrightarrow>\n           p \\<notin> FV t' \\<longrightarrow>\n           s \\<noteq> p \\<longrightarrow> t2 = t'\\<rbrakk>\n       \\<Longrightarrow> False", "from cT[OF sym[OF this]]"], ["proof (chain)\npicking this:\n  Fvar s =\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) \\<or>\n  Fvar p =\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) \\<or>\n  Bvar b =\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2)", "show False"], ["proof (prove)\nusing this:\n  Fvar s =\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) \\<or>\n  Fvar p =\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2) \\<or>\n  Bvar b =\n  Upd ({n \\<rightarrow> [Fvar s,Fvar p]} t1) l\n   ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t2)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Upd t1 l t2 = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Upd t1 l t2 =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV (Upd t1 l t2) \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV (Upd t1 l t2) \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> Upd t1 l t2 = t'\n\ngoal (2 subgoals):\n 1. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 2. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 2. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "case None_sterm"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'\n 2. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) None =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption None \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption None \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> None = u'", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p u'.\n       \\<lbrakk>None = sopen_option n (Fvar s) (Fvar p) u';\n        s \\<notin> FVoption u'; p \\<notin> FVoption u';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> None = u'", "fix u s p n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p u'.\n       \\<lbrakk>None = sopen_option n (Fvar s) (Fvar p) u';\n        s \\<notin> FVoption u'; p \\<notin> FVoption u';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> None = u'", "assume \"None = sopen_option n (Fvar s) (Fvar p) u\""], ["proof (state)\nthis:\n  None = sopen_option n (Fvar s) (Fvar p) u\n\ngoal (1 subgoal):\n 1. \\<And>n s p u'.\n       \\<lbrakk>None = sopen_option n (Fvar s) (Fvar p) u';\n        s \\<notin> FVoption u'; p \\<notin> FVoption u';\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> None = u'", "thus \"None = u\""], ["proof (prove)\nusing this:\n  None = sopen_option n (Fvar s) (Fvar p) u\n\ngoal (1 subgoal):\n 1. None = u", "by (cases u, auto)"], ["proof (state)\nthis:\n  None = u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p u'.\n     sopen_option n (Fvar s) (Fvar p) None =\n     sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n     s \\<notin> FVoption None \\<longrightarrow>\n     s \\<notin> FVoption u' \\<longrightarrow>\n     p \\<notin> FVoption None \\<longrightarrow>\n     p \\<notin> FVoption u' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> None = u'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "case (Some_sterm t)"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t = t'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>n s p t'.\n          {n \\<rightarrow> [Fvar s,Fvar p]} x =\n          {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n          s \\<notin> FV x \\<longrightarrow>\n          s \\<notin> FV t' \\<longrightarrow>\n          p \\<notin> FV x \\<longrightarrow>\n          p \\<notin> FV t' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> x = t' \\<Longrightarrow>\n       \\<forall>n s p u'.\n          sopen_option n (Fvar s) (Fvar p) (Some x) =\n          sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n          s \\<notin> FVoption (Some x) \\<longrightarrow>\n          s \\<notin> FVoption u' \\<longrightarrow>\n          p \\<notin> FVoption (Some x) \\<longrightarrow>\n          p \\<notin> FVoption u' \\<longrightarrow>\n          s \\<noteq> p \\<longrightarrow> Some x = u'", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t = t'\n\ngoal (1 subgoal):\n 1. \\<forall>n s p u'.\n       sopen_option n (Fvar s) (Fvar p) (Some t) =\n       sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n       s \\<notin> FVoption (Some t) \\<longrightarrow>\n       s \\<notin> FVoption u' \\<longrightarrow>\n       p \\<notin> FVoption (Some t) \\<longrightarrow>\n       p \\<notin> FVoption u' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> Some t = u'", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p u'.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV t \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV t \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> t = t';\n        Some ({n \\<rightarrow> [Fvar s,Fvar p]} t) =\n        sopen_option n (Fvar s) (Fvar p) u';\n        s \\<notin> FV t; s \\<notin> FVoption u'; p \\<notin> FV t;\n        p \\<notin> FVoption u'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Some t = u'", "fix u s p n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p u'.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV t \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV t \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> t = t';\n        Some ({n \\<rightarrow> [Fvar s,Fvar p]} t) =\n        sopen_option n (Fvar s) (Fvar p) u';\n        s \\<notin> FV t; s \\<notin> FVoption u'; p \\<notin> FV t;\n        p \\<notin> FVoption u'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Some t = u'", "assume \n        \"Some ({n \\<rightarrow> [Fvar s,Fvar p]} t) = sopen_option n (Fvar s) (Fvar p) u\" and\n        \"s \\<notin> FV t\" and \"p \\<notin> FV t\" and \"s \\<noteq> p\" and \n        \"s \\<notin> FVoption u\" and \"p \\<notin> FVoption u\""], ["proof (state)\nthis:\n  Some ({n \\<rightarrow> [Fvar s,Fvar p]} t) =\n  sopen_option n (Fvar s) (Fvar p) u\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n  s \\<notin> FVoption u\n  p \\<notin> FVoption u\n\ngoal (1 subgoal):\n 1. \\<And>n s p u'.\n       \\<lbrakk>\\<forall>n s p t'.\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t =\n                   {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n                   s \\<notin> FV t \\<longrightarrow>\n                   s \\<notin> FV t' \\<longrightarrow>\n                   p \\<notin> FV t \\<longrightarrow>\n                   p \\<notin> FV t' \\<longrightarrow>\n                   s \\<noteq> p \\<longrightarrow> t = t';\n        Some ({n \\<rightarrow> [Fvar s,Fvar p]} t) =\n        sopen_option n (Fvar s) (Fvar p) u';\n        s \\<notin> FV t; s \\<notin> FVoption u'; p \\<notin> FV t;\n        p \\<notin> FVoption u'; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> Some t = u'", "with Some_sterm"], ["proof (chain)\npicking this:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t = t'\n  Some ({n \\<rightarrow> [Fvar s,Fvar p]} t) =\n  sopen_option n (Fvar s) (Fvar p) u\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n  s \\<notin> FVoption u\n  p \\<notin> FVoption u", "show \"Some t = u\""], ["proof (prove)\nusing this:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t = t'\n  Some ({n \\<rightarrow> [Fvar s,Fvar p]} t) =\n  sopen_option n (Fvar s) (Fvar p) u\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n  s \\<notin> FVoption u\n  p \\<notin> FVoption u\n\ngoal (1 subgoal):\n 1. Some t = u", "by (cases u) auto"], ["proof (state)\nthis:\n  Some t = u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p u'.\n     sopen_option n (Fvar s) (Fvar p) (Some t) =\n     sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n     s \\<notin> FVoption (Some t) \\<longrightarrow>\n     s \\<notin> FVoption u' \\<longrightarrow>\n     p \\<notin> FVoption (Some t) \\<longrightarrow>\n     p \\<notin> FVoption u' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> Some t = u'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>n s p t'.\n      {n \\<rightarrow> [Fvar s,Fvar p]} t =\n      {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n      s \\<notin> FV t \\<longrightarrow>\n      s \\<notin> FV t' \\<longrightarrow>\n      p \\<notin> FV t \\<longrightarrow>\n      p \\<notin> FV t' \\<longrightarrow>\n      s \\<noteq> p \\<longrightarrow> t = t') \\<and>\n  (\\<forall>n s p u'.\n      sopen_option n (Fvar s) (Fvar p) u =\n      sopen_option n (Fvar s) (Fvar p) u' \\<longrightarrow>\n      s \\<notin> FVoption u \\<longrightarrow>\n      s \\<notin> FVoption u' \\<longrightarrow>\n      p \\<notin> FVoption u \\<longrightarrow>\n      p \\<notin> FVoption u' \\<longrightarrow>\n      s \\<noteq> p \\<longrightarrow> u = u')\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t = t'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t = t'\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       {n \\<rightarrow> [Fvar s,Fvar p]} t =\n       {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n       s \\<notin> FV t \\<longrightarrow>\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow> t = t'", "by assumption"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     {n \\<rightarrow> [Fvar s,Fvar p]} t =\n     {n \\<rightarrow> [Fvar s,Fvar p]} t' \\<longrightarrow>\n     s \\<notin> FV t \\<longrightarrow>\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow> t = t'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Variable closing\\<close>"], ["", "primrec\n sclose        :: \"[nat, fVariable, fVariable, sterm] \\<Rightarrow> sterm\" \n (\"{_ \\<leftarrow> [_,_]} _\" [0, 0, 0, 300] 300)\nand\n sclose_option :: \"[nat, fVariable, fVariable, sterm option] \\<Rightarrow> sterm option\"\nwhere\n  sclose_Bvar: \"{k \\<leftarrow> [s,p]}(Bvar b) = Bvar b\"\n| sclose_Fvar: \n    \"{k \\<leftarrow> [s,p]}(Fvar x) = (if x = s then (Bvar (Self k)) \n                                      else (if x = p then (Bvar (Param k))\n                                                     else (Fvar x)))\"\n| sclose_Call: \"{k \\<leftarrow> [s,p]}(Call t l a) = Call ({k \\<leftarrow> [s,p]}t) l ({k \\<leftarrow> [s,p]}a)\"\n| sclose_Upd : \"{k \\<leftarrow> [s,p]}(Upd t l u) = Upd ({k \\<leftarrow> [s,p]}t) l ({(Suc k) \\<leftarrow> [s,p]}u)\"\n| sclose_Obj : \"{k \\<leftarrow> [s,p]}(Obj f T) = Obj (\\<lambda>l. sclose_option (Suc k) s p (f l)) T\"\n| sclose_None: \"sclose_option k s p None = None\"\n| sclose_Some: \"sclose_option k s p (Some t) = Some ({k \\<leftarrow> [s,p]}t)\""], ["", "definition closez :: \"[fVariable, fVariable, sterm] \\<Rightarrow> sterm\" (\"\\<sigma>[_,_] _\" [0, 0, 300]) where\n \"\\<sigma>[s,p] t = {0 \\<leftarrow> [s,p]}t\""], ["", "lemma dom_scloseoption_lem[simp]: \"dom (\\<lambda>l. sclose_option k s t (f l)) = dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (\\<lambda>l. sclose_option k s t (f l)) = dom f", "by (auto, case_tac \"x \\<in> dom f\", auto)"], ["", "lemma sclose_option_lem: \n  \"\\<forall>l\\<in>dom f. {n \\<leftarrow> [s,p]} the(f l) = the (sclose_option n s p (f l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f.\n       {n \\<leftarrow> [s,p]} the (f l) = the (sclose_option n s p (f l))", "by auto"], ["", "lemma pred_scloseoption_lem:\n  \"(\\<forall>l\\<in>dom (\\<lambda>l. sclose_option n s p (f l)).\n     (P::sterm \\<Rightarrow> bool) (the (sclose_option n s p (f l)))) = \n   (\\<forall>l\\<in>dom f. (P::sterm \\<Rightarrow> bool) ({n \\<leftarrow> [s,p]} the (f l)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>dom (\\<lambda>l. sclose_option n s p (f l)).\n        P (the (sclose_option n s p (f l)))) =\n    (\\<forall>l\\<in>dom f. P ({n \\<leftarrow> [s,p]} the (f l)))", "by (simp, force)"], ["", "lemma sclose_fresh[simp, rule_format]:\n  \"\\<forall>n s p. s \\<notin> FV t \\<longrightarrow> p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       s \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       s \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t", "have \n    \"(\\<forall>n s p. s \\<notin> FV t \\<longrightarrow> p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t)\n    &(\\<forall>n s p. s \\<notin> FVoption u \\<longrightarrow> p \\<notin> FVoption u \n       \\<longrightarrow> sclose_option n s p u = u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n s p.\n        s \\<notin> FV t \\<longrightarrow>\n        p \\<notin> FV t \\<longrightarrow>\n        {n \\<leftarrow> [s,p]} t = t) \\<and>\n    (\\<forall>n s p.\n        s \\<notin> FVoption u \\<longrightarrow>\n        p \\<notin> FVoption u \\<longrightarrow> sclose_option n s p u = u)", "proof (induct _ t _ u rule: compat_sterm_sterm_option.induct, auto simp: bVariable.split)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "(* Obj *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "fix f n s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "assume \n      nin_s: \"\\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\" and \n      nin_p: \"\\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\""], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "{"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "from nin_s"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)", "have \"s \\<notin> FVoption (f l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. s \\<notin> FVoption (f l)", "by (case_tac \"l \\<in> dom f\", auto)"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "}"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "moreover"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "{"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "from nin_p"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)", "have \"p \\<notin> FVoption (f l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. p \\<notin> FVoption (f l)", "by (case_tac \"l \\<in> dom f\", auto)"], ["proof (state)\nthis:\n  p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "}"], ["proof (state)\nthis:\n  p \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "moreover"], ["proof (state)\nthis:\n  p \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "assume \n      \"\\<And>x. \\<forall>n s. s \\<notin> FVoption (f x) \n             \\<longrightarrow> (\\<forall>p. p \\<notin> FVoption (f x) \n                   \\<longrightarrow> sclose_option n s p (f x) = f x)\""], ["proof (state)\nthis:\n  \\<forall>n s.\n     s \\<notin> FVoption (f ?x) \\<longrightarrow>\n     (\\<forall>p.\n         p \\<notin> FVoption (f ?x) \\<longrightarrow>\n         sclose_option n s p (f ?x) = f ?x)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "ultimately"], ["proof (chain)\npicking this:\n  s \\<notin> FVoption (f ?l2)\n  p \\<notin> FVoption (f ?l2)\n  \\<forall>n s.\n     s \\<notin> FVoption (f ?x) \\<longrightarrow>\n     (\\<forall>p.\n         p \\<notin> FVoption (f ?x) \\<longrightarrow>\n         sclose_option n s p (f ?x) = f ?x)", "have \"\\<And>l. sclose_option (Suc n) s p (f l) = f l\""], ["proof (prove)\nusing this:\n  s \\<notin> FVoption (f ?l2)\n  p \\<notin> FVoption (f ?l2)\n  \\<forall>n s.\n     s \\<notin> FVoption (f ?x) \\<longrightarrow>\n     (\\<forall>p.\n         p \\<notin> FVoption (f ?x) \\<longrightarrow>\n         sclose_option n s p (f ?x) = f ?x)\n\ngoal (1 subgoal):\n 1. \\<And>l. sclose_option (Suc n) s p (f l) = f l", "by auto"], ["proof (state)\nthis:\n  sclose_option (Suc n) s p (f ?l) = f ?l\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          sclose_option n s p (x1 x) = x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. sclose_option (Suc n) s p (x1 l)) = x1", "with ext"], ["proof (chain)\npicking this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sclose_option (Suc n) s p (f ?l) = f ?l", "show \"(\\<lambda>l. sclose_option (Suc n) s p (f l)) = f\""], ["proof (prove)\nusing this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sclose_option (Suc n) s p (f ?l) = f ?l\n\ngoal (1 subgoal):\n 1. (\\<lambda>l. sclose_option (Suc n) s p (f l)) = f", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>l. sclose_option (Suc n) s p (f l)) = f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>n s p.\n      s \\<notin> FV t \\<longrightarrow>\n      p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t) \\<and>\n  (\\<forall>n s p.\n      s \\<notin> FVoption u \\<longrightarrow>\n      p \\<notin> FVoption u \\<longrightarrow> sclose_option n s p u = u)\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       s \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>n s p.\n     s \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n s p.\n     s \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       s \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     s \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow> {n \\<leftarrow> [s,p]} t = t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sclose_FV[rule_format]:\n  \"\\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}", "have\n    \"(\\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p})\n    &(\\<forall>n s p. FVoption (sclose_option n s p u) = FVoption u - {s} - {p})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n s p.\n        FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}) \\<and>\n    (\\<forall>n s p.\n        FVoption (sclose_option n s p u) = FVoption u - {s} - {p})", "by (rule compat_sterm_sterm_option.induct, simp_all split: bVariable.split, blast+)"], ["proof (state)\nthis:\n  (\\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}) \\<and>\n  (\\<forall>n s p.\n      FVoption (sclose_option n s p u) = FVoption u - {s} - {p})\n\ngoal (1 subgoal):\n 1. \\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}\n\ngoal (1 subgoal):\n 1. \\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}", "by assumption"], ["proof (state)\nthis:\n  \\<forall>n s p. FV ({n \\<leftarrow> [s,p]} t) = FV t - {s} - {p}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sclose_subset_FV[rule_format]:\n  \"FV ({n \\<leftarrow> [s,p]} t) \\<subseteq> FV t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FV ({n \\<leftarrow> [s,p]} t) \\<subseteq> FV t", "by (simp add: sclose_FV, blast)"], ["", "lemma Self_not_in_closed[simp]: \"sa \\<notin> FV ({n \\<leftarrow> [sa,pa]} t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sa \\<notin> FV ({n \\<leftarrow> [sa,pa]} t)", "by (simp add: sclose_FV)"], ["", "lemma Param_not_in_closed[simp]: \"pa \\<notin> FV ({n \\<leftarrow> [sa,pa]} t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pa \\<notin> FV ({n \\<leftarrow> [sa,pa]} t)", "by (simp add: sclose_FV)"], ["", "subsubsection \\<open>Substitution\\<close>"], ["", "primrec\n ssubst        :: \"[fVariable, sterm, sterm] \\<Rightarrow> sterm\" \n (\"[_ \\<rightarrow> _] _\" [0, 0, 300] 300)\nand\n ssubst_option :: \"[fVariable, sterm, sterm option] \\<Rightarrow> sterm option\"\nwhere\n  ssubst_Bvar: \"[z \\<rightarrow> u](Bvar v) = Bvar v\"\n| ssubst_Fvar: \"[z \\<rightarrow> u](Fvar x) = (if (z = x) then u else (Fvar x))\"\n| ssubst_Call: \"[z \\<rightarrow> u](Call t l s) = Call ([z \\<rightarrow> u]t) l ([z \\<rightarrow> u]s)\"\n| ssubst_Upd : \"[z \\<rightarrow> u](Upd t l s) = Upd ([z \\<rightarrow> u]t) l ([z \\<rightarrow> u]s)\"\n| ssubst_Obj : \"[z \\<rightarrow> u](Obj f T) = Obj (\\<lambda>l. ssubst_option z u (f l)) T\"\n| ssubst_None: \"ssubst_option z u None = None\"\n| ssubst_Some: \"ssubst_option z u (Some t) = Some ([z \\<rightarrow> u]t)\""], ["", "lemma dom_ssubstoption_lem[simp]: \"dom (\\<lambda>l. ssubst_option z u (f l)) = dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (\\<lambda>l. ssubst_option z u (f l)) = dom f", "by (auto, case_tac \"x \\<in> dom f\", auto)"], ["", "lemma ssubst_option_lem: \n  \"\\<forall>l\\<in>dom f. [z \\<rightarrow> u] the(f l) = the (ssubst_option z u (f l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f.\n       [z \\<rightarrow> u] the (f l) = the (ssubst_option z u (f l))", "by auto"], ["", "lemma pred_ssubstoption_lem:\n  \"(\\<forall>l\\<in>dom (\\<lambda>l. ssubst_option x t (f l)).\n     (P::sterm \\<Rightarrow> bool) (the (ssubst_option x t (f l)))) = \n   (\\<forall>l\\<in>dom f. (P::sterm \\<Rightarrow> bool) ([x \\<rightarrow> t] the (f l)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>l\\<in>dom (\\<lambda>l. ssubst_option x t (f l)).\n        P (the (ssubst_option x t (f l)))) =\n    (\\<forall>l\\<in>dom f. P ([x \\<rightarrow> t] the (f l)))", "by (simp, force)"], ["", "lemma ssubst_fresh[simp, rule_format]:\n  \"\\<forall>s sa. sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s sa.\n       sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>s sa.\n       sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t", "have \n    \"(\\<forall>s sa. sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t)\n    &(\\<forall>s sa. sa \\<notin> FVoption u \\<longrightarrow> ssubst_option sa s u = u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s sa.\n        sa \\<notin> FV t \\<longrightarrow>\n        [sa \\<rightarrow> s] t = t) \\<and>\n    (\\<forall>s sa.\n        sa \\<notin> FVoption u \\<longrightarrow> ssubst_option sa s u = u)", "proof (induct _ t _ u rule: compat_sterm_sterm_option.induct, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 s sa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>s sa.\n                      sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      ssubst_option sa s (x1 x) = x1 x;\n        \\<forall>x\\<in>dom x1. sa \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. ssubst_option sa s (x1 l)) = x1", "fix s sa f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 s sa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>s sa.\n                      sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      ssubst_option sa s (x1 x) = x1 x;\n        \\<forall>x\\<in>dom x1. sa \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. ssubst_option sa s (x1 l)) = x1", "assume \n      sa:     \"\\<forall>l\\<in>dom f. sa \\<notin> FVoption (f l)\" and\n      ssubst: \"\\<And>x. \\<forall>s sa. sa \\<notin> FVoption (f x) \\<longrightarrow> ssubst_option sa s (f x) = f x\""], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. sa \\<notin> FVoption (f l)\n  \\<forall>s sa.\n     sa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     ssubst_option sa s (f ?x) = f ?x\n\ngoal (1 subgoal):\n 1. \\<And>x1 s sa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>s sa.\n                      sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      ssubst_option sa s (x1 x) = x1 x;\n        \\<forall>x\\<in>dom x1. sa \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. ssubst_option sa s (x1 l)) = x1", "{"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. sa \\<notin> FVoption (f l)\n  \\<forall>s sa.\n     sa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     ssubst_option sa s (f ?x) = f ?x\n\ngoal (1 subgoal):\n 1. \\<And>x1 s sa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>s sa.\n                      sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      ssubst_option sa s (x1 x) = x1 x;\n        \\<forall>x\\<in>dom x1. sa \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. ssubst_option sa s (x1 l)) = x1", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 s sa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>s sa.\n                      sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      ssubst_option sa s (x1 x) = x1 x;\n        \\<forall>x\\<in>dom x1. sa \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. ssubst_option sa s (x1 l)) = x1", "from sa"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f. sa \\<notin> FVoption (f l)", "have \"sa \\<notin> FVoption (f l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. sa \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. sa \\<notin> FVoption (f l)", "by (case_tac \"l \\<in> dom f\", auto)"], ["proof (state)\nthis:\n  sa \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x1 s sa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>s sa.\n                      sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      ssubst_option sa s (x1 x) = x1 x;\n        \\<forall>x\\<in>dom x1. sa \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. ssubst_option sa s (x1 l)) = x1", "with ssubst"], ["proof (chain)\npicking this:\n  \\<forall>s sa.\n     sa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     ssubst_option sa s (f ?x) = f ?x\n  sa \\<notin> FVoption (f l)", "have \"ssubst_option sa s (f l) = f l\""], ["proof (prove)\nusing this:\n  \\<forall>s sa.\n     sa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     ssubst_option sa s (f ?x) = f ?x\n  sa \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. ssubst_option sa s (f l) = f l", "by auto"], ["proof (state)\nthis:\n  ssubst_option sa s (f l) = f l\n\ngoal (1 subgoal):\n 1. \\<And>x1 s sa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>s sa.\n                      sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      ssubst_option sa s (x1 x) = x1 x;\n        \\<forall>x\\<in>dom x1. sa \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. ssubst_option sa s (x1 l)) = x1", "}"], ["proof (state)\nthis:\n  ssubst_option sa s (f ?l2) = f ?l2\n\ngoal (1 subgoal):\n 1. \\<And>x1 s sa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>s sa.\n                      sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      ssubst_option sa s (x1 x) = x1 x;\n        \\<forall>x\\<in>dom x1. sa \\<notin> FVoption (x1 x)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l. ssubst_option sa s (x1 l)) = x1", "with ext"], ["proof (chain)\npicking this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  ssubst_option sa s (f ?l2) = f ?l2", "show \"(\\<lambda>l. ssubst_option sa s (f l)) = f\""], ["proof (prove)\nusing this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  ssubst_option sa s (f ?l2) = f ?l2\n\ngoal (1 subgoal):\n 1. (\\<lambda>l. ssubst_option sa s (f l)) = f", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>l. ssubst_option sa s (f l)) = f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>s sa.\n      sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t) \\<and>\n  (\\<forall>s sa.\n      sa \\<notin> FVoption u \\<longrightarrow> ssubst_option sa s u = u)\n\ngoal (1 subgoal):\n 1. \\<forall>s sa.\n       sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>s sa.\n     sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>s sa.\n     sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t\n\ngoal (1 subgoal):\n 1. \\<forall>s sa.\n       sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>s sa.\n     sa \\<notin> FV t \\<longrightarrow> [sa \\<rightarrow> s] t = t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ssubst_commute[rule_format]:\n  \"\\<forall>s p sa pa. s \\<noteq> p \\<longrightarrow> s \\<notin> FV pa \\<longrightarrow> p \\<notin> FV sa \n     \\<longrightarrow> [s \\<rightarrow> sa] [p \\<rightarrow> pa] t = [p \\<rightarrow> pa] [s \\<rightarrow> sa] t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s p sa pa.\n       s \\<noteq> p \\<longrightarrow>\n       s \\<notin> FV pa \\<longrightarrow>\n       p \\<notin> FV sa \\<longrightarrow>\n       [s \\<rightarrow> sa] [p \\<rightarrow> pa] t =\n       [p \\<rightarrow> pa] [s \\<rightarrow> sa] t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>s p sa pa.\n       s \\<noteq> p \\<longrightarrow>\n       s \\<notin> FV pa \\<longrightarrow>\n       p \\<notin> FV sa \\<longrightarrow>\n       [s \\<rightarrow> sa] [p \\<rightarrow> pa] t =\n       [p \\<rightarrow> pa] [s \\<rightarrow> sa] t", "have\n    \"(\\<forall>s p sa pa. s \\<noteq> p \\<longrightarrow> s \\<notin> FV pa \\<longrightarrow> p \\<notin> FV sa \n       \\<longrightarrow> [s \\<rightarrow> sa] [p \\<rightarrow> pa] t = [p \\<rightarrow> pa] [s \\<rightarrow> sa] t)\n    &(\\<forall>s p sa pa. s \\<noteq> p \\<longrightarrow> s \\<notin> FV pa \\<longrightarrow> p \\<notin> FV sa \n       \\<longrightarrow> ssubst_option s sa (ssubst_option p pa u) \n           = ssubst_option p pa (ssubst_option s sa u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s p sa pa.\n        s \\<noteq> p \\<longrightarrow>\n        s \\<notin> FV pa \\<longrightarrow>\n        p \\<notin> FV sa \\<longrightarrow>\n        [s \\<rightarrow> sa] [p \\<rightarrow> pa] t =\n        [p \\<rightarrow> pa] [s \\<rightarrow> sa] t) \\<and>\n    (\\<forall>s p sa pa.\n        s \\<noteq> p \\<longrightarrow>\n        s \\<notin> FV pa \\<longrightarrow>\n        p \\<notin> FV sa \\<longrightarrow>\n        ssubst_option s sa (ssubst_option p pa u) =\n        ssubst_option p pa (ssubst_option s sa u))", "by (rule compat_sterm_sterm_option.induct, simp_all split: bVariable.split)"], ["proof (state)\nthis:\n  (\\<forall>s p sa pa.\n      s \\<noteq> p \\<longrightarrow>\n      s \\<notin> FV pa \\<longrightarrow>\n      p \\<notin> FV sa \\<longrightarrow>\n      [s \\<rightarrow> sa] [p \\<rightarrow> pa] t =\n      [p \\<rightarrow> pa] [s \\<rightarrow> sa] t) \\<and>\n  (\\<forall>s p sa pa.\n      s \\<noteq> p \\<longrightarrow>\n      s \\<notin> FV pa \\<longrightarrow>\n      p \\<notin> FV sa \\<longrightarrow>\n      ssubst_option s sa (ssubst_option p pa u) =\n      ssubst_option p pa (ssubst_option s sa u))\n\ngoal (1 subgoal):\n 1. \\<forall>s p sa pa.\n       s \\<noteq> p \\<longrightarrow>\n       s \\<notin> FV pa \\<longrightarrow>\n       p \\<notin> FV sa \\<longrightarrow>\n       [s \\<rightarrow> sa] [p \\<rightarrow> pa] t =\n       [p \\<rightarrow> pa] [s \\<rightarrow> sa] t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>s p sa pa.\n     s \\<noteq> p \\<longrightarrow>\n     s \\<notin> FV pa \\<longrightarrow>\n     p \\<notin> FV sa \\<longrightarrow>\n     [s \\<rightarrow> sa] [p \\<rightarrow> pa] t =\n     [p \\<rightarrow> pa] [s \\<rightarrow> sa] t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>s p sa pa.\n     s \\<noteq> p \\<longrightarrow>\n     s \\<notin> FV pa \\<longrightarrow>\n     p \\<notin> FV sa \\<longrightarrow>\n     [s \\<rightarrow> sa] [p \\<rightarrow> pa] t =\n     [p \\<rightarrow> pa] [s \\<rightarrow> sa] t\n\ngoal (1 subgoal):\n 1. \\<forall>s p sa pa.\n       s \\<noteq> p \\<longrightarrow>\n       s \\<notin> FV pa \\<longrightarrow>\n       p \\<notin> FV sa \\<longrightarrow>\n       [s \\<rightarrow> sa] [p \\<rightarrow> pa] t =\n       [p \\<rightarrow> pa] [s \\<rightarrow> sa] t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>s p sa pa.\n     s \\<noteq> p \\<longrightarrow>\n     s \\<notin> FV pa \\<longrightarrow>\n     p \\<notin> FV sa \\<longrightarrow>\n     [s \\<rightarrow> sa] [p \\<rightarrow> pa] t =\n     [p \\<rightarrow> pa] [s \\<rightarrow> sa] t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ssubst_FV[rule_format]:\n  \"\\<forall>x s. FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x s.\n       FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x s.\n       FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x})", "have\n    \"(\\<forall>x s. FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x}))\n    &(\\<forall>x s. FVoption (ssubst_option x s u) \\<subseteq> FV s \\<union> (FVoption u - {x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x s.\n        FV ([x \\<rightarrow> s] t)\n        \\<subseteq> FV s \\<union> (FV t - {x})) \\<and>\n    (\\<forall>x s.\n        FVoption (ssubst_option x s u)\n        \\<subseteq> FV s \\<union> (FVoption u - {x}))", "by (rule compat_sterm_sterm_option.induct, simp_all split: bVariable.split, blast+)"], ["proof (state)\nthis:\n  (\\<forall>x s.\n      FV ([x \\<rightarrow> s] t)\n      \\<subseteq> FV s \\<union> (FV t - {x})) \\<and>\n  (\\<forall>x s.\n      FVoption (ssubst_option x s u)\n      \\<subseteq> FV s \\<union> (FVoption u - {x}))\n\ngoal (1 subgoal):\n 1. \\<forall>x s.\n       FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x})", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>x s.\n     FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x})", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x s.\n     FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x})\n\ngoal (1 subgoal):\n 1. \\<forall>x s.\n       FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x})", "by assumption"], ["proof (state)\nthis:\n  \\<forall>x s.\n     FV ([x \\<rightarrow> s] t) \\<subseteq> FV s \\<union> (FV t - {x})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ssubstoption_insert: \n  \"l \\<in> dom f \n  \\<Longrightarrow> (\\<lambda>(la::Label). ssubst_option x t' (if la = l then Some t else f la))\n      = (\\<lambda>(la::Label). ssubst_option x t' (f la))(l \\<mapsto> [x \\<rightarrow> t'] t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l \\<in> dom f \\<Longrightarrow>\n    (\\<lambda>la. ssubst_option x t' (if la = l then Some t else f la)) =\n    (\\<lambda>la. ssubst_option x t' (f la))(l \\<mapsto>\n    [x \\<rightarrow> t'] t)", "by (rule Ltake_eq_all, force, simp add: Ltake_eq_def)"], ["", "subsubsection \\<open>Local closure\\<close>"], ["", "inductive lc :: \"sterm \\<Rightarrow> bool\"\nwhere\n  lc_Fvar[simp, intro!]: \"lc (Fvar x)\"\n| lc_Call[simp, intro!]: \"\\<lbrakk> lc t; lc a \\<rbrakk> \\<Longrightarrow> lc (Call t l a)\"\n| lc_Upd[simp, intro!] : \n  \"\\<lbrakk> lc t; finite L; \n     \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> lc (u\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rbrakk>\n  \\<Longrightarrow> lc (Upd t l u)\"\n| lc_Obj[simp, intro!] : \n  \"\\<lbrakk> finite L; \\<forall>l\\<in>dom f. \n     \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> lc (the(f l)\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rbrakk>\n  \\<Longrightarrow> lc (Obj f T)\""], ["", "definition body :: \"sterm \\<Rightarrow> bool\" where\n \"body t \\<longleftrightarrow> (\\<exists>L. finite L \\<and> (\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> lc (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>)))\""], ["", "lemma lc_bvar: \"lc (Bvar b) = False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc (Bvar b) = False", "by (rule iffI, erule lc.cases, simp_all)"], ["", "lemma lc_obj:\n  \"lc (Obj f T) = (\\<forall>l\\<in>dom f. body (the(f l)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc (Obj f T) = (\\<forall>l\\<in>dom f. body (the (f l)))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. lc (Obj f T) \\<Longrightarrow> \\<forall>l\\<in>dom f. body (the (f l))\n 2. \\<forall>l\\<in>dom f. body (the (f l)) \\<Longrightarrow> lc (Obj f T)", "fix f T"], ["proof (state)\ngoal (2 subgoals):\n 1. lc (Obj f T) \\<Longrightarrow> \\<forall>l\\<in>dom f. body (the (f l))\n 2. \\<forall>l\\<in>dom f. body (the (f l)) \\<Longrightarrow> lc (Obj f T)", "assume \"lc (Obj f T)\""], ["proof (state)\nthis:\n  lc (Obj f T)\n\ngoal (2 subgoals):\n 1. lc (Obj f T) \\<Longrightarrow> \\<forall>l\\<in>dom f. body (the (f l))\n 2. \\<forall>l\\<in>dom f. body (the (f l)) \\<Longrightarrow> lc (Obj f T)", "thus \"\\<forall>l\\<in>dom f. body (the(f l))\""], ["proof (prove)\nusing this:\n  lc (Obj f T)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f. body (the (f l))", "unfolding body_def"], ["proof (prove)\nusing this:\n  lc (Obj f T)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f.\n       \\<exists>L.\n          finite L \\<and>\n          (\\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              lc (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "by (rule lc.cases, auto)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. body (the (f l))\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f. body (the (f l)) \\<Longrightarrow> lc (Obj f T)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f. body (the (f l)) \\<Longrightarrow> lc (Obj f T)", "fix f :: \"Label -~> sterm\" and T :: type"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f. body (the (f l)) \\<Longrightarrow> lc (Obj f T)", "assume \"\\<forall>l\\<in>dom f. body (the (f l))\""], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. body (the (f l))\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f. body (the (f l)) \\<Longrightarrow> lc (Obj f T)", "hence \n    \"\\<exists>L. finite L \\<and> (\\<forall>l\\<in>dom f. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n                                 \\<longrightarrow> lc (the (f l)\\<^bsup>[Fvar s, Fvar p]\\<^esup>))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. body (the (f l))\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>l\\<in>dom f.\n           \\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              lc (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "proof (induct f rule: fmap_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>l\\<in>dom Map.empty. body (the None) \\<Longrightarrow>\n    \\<exists>L.\n       finite L \\<and>\n       (\\<forall>l\\<in>dom Map.empty.\n           \\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              lc (the None\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n 2. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n        \\<exists>L.\n           finite L \\<and>\n           (\\<forall>l\\<in>dom F.\n               \\<forall>s p.\n                  s \\<notin> L \\<and>\n                  p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n                  lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n        \\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n           body (the ((F(x \\<mapsto> z)) l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L.\n                            finite L \\<and>\n                            (\\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n                                \\<forall>s p.\n                                   s \\<notin> L \\<and>\n                                   p \\<notin> L \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   lc (the\n  ((F(x \\<mapsto> z)) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "case empty"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom Map.empty. body (the None)\n\ngoal (2 subgoals):\n 1. \\<forall>l\\<in>dom Map.empty. body (the None) \\<Longrightarrow>\n    \\<exists>L.\n       finite L \\<and>\n       (\\<forall>l\\<in>dom Map.empty.\n           \\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              lc (the None\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n 2. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n        \\<exists>L.\n           finite L \\<and>\n           (\\<forall>l\\<in>dom F.\n               \\<forall>s p.\n                  s \\<notin> L \\<and>\n                  p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n                  lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n        \\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n           body (the ((F(x \\<mapsto> z)) l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L.\n                            finite L \\<and>\n                            (\\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n                                \\<forall>s p.\n                                   s \\<notin> L \\<and>\n                                   p \\<notin> L \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   lc (the\n  ((F(x \\<mapsto> z)) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom Map.empty. body (the None)\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>l\\<in>dom Map.empty.\n           \\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              lc (the None\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "by blast"], ["proof (state)\nthis:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom Map.empty.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (the None\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n        \\<exists>L.\n           finite L \\<and>\n           (\\<forall>l\\<in>dom F.\n               \\<forall>s p.\n                  s \\<notin> L \\<and>\n                  p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n                  lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n        \\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n           body (the ((F(x \\<mapsto> z)) l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L.\n                            finite L \\<and>\n                            (\\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n                                \\<forall>s p.\n                                   s \\<notin> L \\<and>\n                                   p \\<notin> L \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   lc (the\n  ((F(x \\<mapsto> z)) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n        \\<exists>L.\n           finite L \\<and>\n           (\\<forall>l\\<in>dom F.\n               \\<forall>s p.\n                  s \\<notin> L \\<and>\n                  p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n                  lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n        \\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n           body (the ((F(x \\<mapsto> z)) l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L.\n                            finite L \\<and>\n                            (\\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n                                \\<forall>s p.\n                                   s \\<notin> L \\<and>\n                                   p \\<notin> L \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   lc (the\n  ((F(x \\<mapsto> z)) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "case (insert F x y)"], ["proof (state)\nthis:\n  x \\<notin> dom F\n  \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom F.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  \\<forall>l\\<in>dom (F(x \\<mapsto> y)). body (the ((F(x \\<mapsto> y)) l))\n\ngoal (1 subgoal):\n 1. \\<And>F x z.\n       \\<lbrakk>x \\<notin> dom F;\n        \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n        \\<exists>L.\n           finite L \\<and>\n           (\\<forall>l\\<in>dom F.\n               \\<forall>s p.\n                  s \\<notin> L \\<and>\n                  p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n                  lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n        \\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n           body (the ((F(x \\<mapsto> z)) l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L.\n                            finite L \\<and>\n                            (\\<forall>l\\<in>dom (F(x \\<mapsto> z)).\n                                \\<forall>s p.\n                                   s \\<notin> L \\<and>\n                                   p \\<notin> L \\<and>\n                                   s \\<noteq> p \\<longrightarrow>\n                                   lc (the\n  ((F(x \\<mapsto> z)) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<notin> dom F\n  \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom F.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  \\<forall>l\\<in>dom (F(x \\<mapsto> y)). body (the ((F(x \\<mapsto> y)) l))\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n           \\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              lc (the ((F(x \\<mapsto> y))\n                        l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> dom F;\n     \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>l\\<in>dom F.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n     \\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n        body (the ((F(x \\<mapsto> y)) l))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L.\n                         finite L \\<and>\n                         (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n                             \\<forall>s p.\n                                s \\<notin> L \\<and>\n                                p \\<notin> L \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                lc (the ((F(x \\<mapsto> y))\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "assume \"x \\<notin> dom F\""], ["proof (state)\nthis:\n  x \\<notin> dom F\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> dom F;\n     \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>l\\<in>dom F.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n     \\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n        body (the ((F(x \\<mapsto> y)) l))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L.\n                         finite L \\<and>\n                         (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n                             \\<forall>s p.\n                                s \\<notin> L \\<and>\n                                p \\<notin> L \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                lc (the ((F(x \\<mapsto> y))\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "hence \"\\<forall>l\\<in>dom F. the(F l) = the ((F(x \\<mapsto> y)) l)\""], ["proof (prove)\nusing this:\n  x \\<notin> dom F\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom F. the (F l) = the ((F(x \\<mapsto> y)) l)", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom F. the (F l) = the ((F(x \\<mapsto> y)) l)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> dom F;\n     \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>l\\<in>dom F.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n     \\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n        body (the ((F(x \\<mapsto> y)) l))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L.\n                         finite L \\<and>\n                         (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n                             \\<forall>s p.\n                                s \\<notin> L \\<and>\n                                p \\<notin> L \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                lc (the ((F(x \\<mapsto> y))\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "with \\<open>\\<forall>l\\<in>dom (F(x \\<mapsto> y)). body (the((F(x \\<mapsto> y)) l))\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom (F(x \\<mapsto> y)). body (the ((F(x \\<mapsto> y)) l))\n  \\<forall>l\\<in>dom F. the (F l) = the ((F(x \\<mapsto> y)) l)", "have \"\\<forall>l\\<in>dom F. body (the (F l))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom (F(x \\<mapsto> y)). body (the ((F(x \\<mapsto> y)) l))\n  \\<forall>l\\<in>dom F. the (F l) = the ((F(x \\<mapsto> y)) l)\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom F. body (the (F l))", "by force"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom F. body (the (F l))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> dom F;\n     \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>l\\<in>dom F.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n     \\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n        body (the ((F(x \\<mapsto> y)) l))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L.\n                         finite L \\<and>\n                         (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n                             \\<forall>s p.\n                                s \\<notin> L \\<and>\n                                p \\<notin> L \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                lc (the ((F(x \\<mapsto> y))\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "from insert(2)[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom F.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "obtain L where \n        \"finite L\" and\n        \"\\<forall>l\\<in>dom F. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n                     \\<longrightarrow> lc (the (F l)\\<^bsup>[Fvar s, Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom F.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         \\<forall>l\\<in>dom F.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L\n  \\<forall>l\\<in>dom F.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> dom F;\n     \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>l\\<in>dom F.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n     \\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n        body (the ((F(x \\<mapsto> y)) l))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L.\n                         finite L \\<and>\n                         (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n                             \\<forall>s p.\n                                s \\<notin> L \\<and>\n                                p \\<notin> L \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                lc (the ((F(x \\<mapsto> y))\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "moreover"], ["proof (state)\nthis:\n  finite L\n  \\<forall>l\\<in>dom F.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> dom F;\n     \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>l\\<in>dom F.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n     \\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n        body (the ((F(x \\<mapsto> y)) l))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L.\n                         finite L \\<and>\n                         (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n                             \\<forall>s p.\n                                s \\<notin> L \\<and>\n                                p \\<notin> L \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                lc (the ((F(x \\<mapsto> y))\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "from \\<open>\\<forall>l\\<in>dom (F(x \\<mapsto> y)). body (the((F(x \\<mapsto> y)) l))\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom (F(x \\<mapsto> y)). body (the ((F(x \\<mapsto> y)) l))", "have \"body y\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom (F(x \\<mapsto> y)). body (the ((F(x \\<mapsto> y)) l))\n\ngoal (1 subgoal):\n 1. body y", "by force"], ["proof (state)\nthis:\n  body y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> dom F;\n     \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>l\\<in>dom F.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n     \\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n        body (the ((F(x \\<mapsto> y)) l))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L.\n                         finite L \\<and>\n                         (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n                             \\<forall>s p.\n                                s \\<notin> L \\<and>\n                                p \\<notin> L \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                lc (the ((F(x \\<mapsto> y))\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "then"], ["proof (chain)\npicking this:\n  body y", "obtain L' where \n        \"finite L'\" and\n        \"\\<forall>s p. s \\<notin> L' \\<and> p \\<notin> L' \\<and> s \\<noteq> p\n          \\<longrightarrow> lc (y\\<^bsup>[Fvar s, Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  body y\n\ngoal (1 subgoal):\n 1. (\\<And>L'.\n        \\<lbrakk>finite L';\n         \\<forall>s p.\n            s \\<notin> L' \\<and>\n            p \\<notin> L' \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (y\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: body_def)"], ["proof (state)\nthis:\n  finite L'\n  \\<forall>s p.\n     s \\<notin> L' \\<and>\n     p \\<notin> L' \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (y\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> dom F;\n     \\<forall>l\\<in>dom F. body (the (F l)) \\<Longrightarrow>\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>l\\<in>dom F.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>));\n     \\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n        body (the ((F(x \\<mapsto> y)) l))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>L.\n                         finite L \\<and>\n                         (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n                             \\<forall>s p.\n                                s \\<notin> L \\<and>\n                                p \\<notin> L \\<and>\n                                s \\<noteq> p \\<longrightarrow>\n                                lc (the ((F(x \\<mapsto> y))\n    l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "ultimately"], ["proof (chain)\npicking this:\n  finite L\n  \\<forall>l\\<in>dom F.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  finite L'\n  \\<forall>s p.\n     s \\<notin> L' \\<and>\n     p \\<notin> L' \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (y\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "show \n        \"\\<exists>L. finite L \\<and> (\\<forall>l\\<in>dom (F(x \\<mapsto> y)). \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n                                               \\<longrightarrow> lc (the ((F(x \\<mapsto> y)) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\""], ["proof (prove)\nusing this:\n  finite L\n  \\<forall>l\\<in>dom F.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        lc (the (F l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  finite L'\n  \\<forall>s p.\n     s \\<notin> L' \\<and>\n     p \\<notin> L' \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (y\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n           \\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              lc (the ((F(x \\<mapsto> y))\n                        l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "by (rule_tac x = \"L \\<union> L'\" in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (the ((F(x \\<mapsto> y)) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom (F(x \\<mapsto> y)).\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (the ((F(x \\<mapsto> y)) l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom f.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f. body (the (f l)) \\<Longrightarrow> lc (Obj f T)", "thus \"lc (Obj f T)\""], ["proof (prove)\nusing this:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom f.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. lc (Obj f T)", "by auto"], ["proof (state)\nthis:\n  lc (Obj f T)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lc_upd: \"lc (Upd t l s) = (lc t \\<and> body s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc (Upd t l s) = (lc t \\<and> body s)", "by (unfold body_def, rule iffI, erule lc.cases, auto)"], ["", "lemma lc_call: \"lc (Call t l s) = (lc t \\<and> lc s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc (Call t l s) = (lc t \\<and> lc s)", "by (rule iffI, erule lc.cases, simp_all)"], ["", "lemma lc_induct[consumes 1, case_names Fvar Call Upd Obj Bnd]:\n  fixes P1 :: \"sterm \\<Rightarrow> bool\" and P2 :: \"sterm \\<Rightarrow> bool\"\n  assumes\n  \"lc t\" and\n  \"\\<And>x. P1 (Fvar x)\" and\n  \"\\<And>t l a. \\<lbrakk> lc t; P1 t; lc a; P1 a \\<rbrakk> \\<Longrightarrow> P1 (Call t l a)\" and\n  \"\\<And>t l u. \\<lbrakk> lc t; P1 t; P2 u \\<rbrakk> \\<Longrightarrow> P1 (Upd t l u)\" and\n  \"\\<And>f T. \\<forall>l\\<in>dom f. P2 (the(f l)) \\<Longrightarrow> P1 (Obj f T)\" and\n  \"\\<And>L t. \\<lbrakk> finite L; \n            \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n             \\<longrightarrow> lc (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<and> P1 (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rbrakk>\n  \\<Longrightarrow> P2 t\"\n  shows \"P1 t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P1 t", "using assms"], ["proof (prove)\nusing this:\n  lc t\n  P1 (Fvar ?x)\n  \\<lbrakk>lc ?t; P1 ?t; lc ?a; P1 ?a\\<rbrakk>\n  \\<Longrightarrow> P1 (Call ?t ?l ?a)\n  \\<lbrakk>lc ?t; P1 ?t; P2 ?u\\<rbrakk> \\<Longrightarrow> P1 (Upd ?t ?l ?u)\n  \\<forall>l\\<in>dom ?f. P2 (the (?f l)) \\<Longrightarrow> P1 (Obj ?f ?T)\n  \\<lbrakk>finite ?L;\n   \\<forall>s p.\n      s \\<notin> ?L \\<and>\n      p \\<notin> ?L \\<and> s \\<noteq> p \\<longrightarrow>\n      lc (?t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n      P1 (?t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\\<rbrakk>\n  \\<Longrightarrow> P2 ?t\n\ngoal (1 subgoal):\n 1. P1 t", "by (induct rule: lc.induct, auto)"], ["", "subsubsection \\<open>Connections between sopen, sclose, ssubst, lc and body and resulting properties\\<close>"], ["", "lemma ssubst_intro[rule_format]:\n  \"\\<forall>n s p sa pa. sa \\<notin> FV t \\<longrightarrow> pa \\<notin> FV t \\<longrightarrow> sa \\<noteq> pa\n     \\<longrightarrow> sa \\<notin> FV p\n     \\<longrightarrow> {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar sa, Fvar pa]} t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FV t \\<longrightarrow>\n       pa \\<notin> FV t \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} t =\n       [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                              sa,Fvar pa]} t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FV t \\<longrightarrow>\n       pa \\<notin> FV t \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} t =\n       [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                              sa,Fvar pa]} t", "have \n    \"(\\<forall>n s p sa pa. sa \\<notin> FV t \\<longrightarrow> pa \\<notin> FV t \\<longrightarrow> sa \\<noteq> pa\n       \\<longrightarrow> sa \\<notin> FV p\n       \\<longrightarrow> {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar sa, Fvar pa]} t)\n    &(\\<forall>n s p sa pa. sa \\<notin> FVoption u \\<longrightarrow> pa \\<notin> FVoption u \\<longrightarrow> sa \\<noteq> pa\n       \\<longrightarrow> sa \\<notin> FV p\n       \\<longrightarrow> sopen_option n s p u \n           = ssubst_option sa s (ssubst_option pa p \n              (sopen_option n (Fvar sa) (Fvar pa) u)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n s p sa pa.\n        sa \\<notin> FV t \\<longrightarrow>\n        pa \\<notin> FV t \\<longrightarrow>\n        sa \\<noteq> pa \\<longrightarrow>\n        sa \\<notin> FV p \\<longrightarrow>\n        {n \\<rightarrow> [s,p]} t =\n        [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                               sa,Fvar pa]} t) \\<and>\n    (\\<forall>n s p sa pa.\n        sa \\<notin> FVoption u \\<longrightarrow>\n        pa \\<notin> FVoption u \\<longrightarrow>\n        sa \\<noteq> pa \\<longrightarrow>\n        sa \\<notin> FV p \\<longrightarrow>\n        sopen_option n s p u =\n        ssubst_option sa s\n         (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) u)))", "proof (induct _ t _ u rule: compat_sterm_sterm_option.induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Bvar x) \\<longrightarrow>\n          pa \\<notin> FV (Bvar x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Bvar x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Bvar x\n 2. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Fvar x) \\<longrightarrow>\n          pa \\<notin> FV (Fvar x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Fvar x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Fvar x\n 3. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 5. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Upd x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Upd x1 x2 x3\n 6. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 7. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "case Bvar"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Bvar x) \\<longrightarrow>\n          pa \\<notin> FV (Bvar x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Bvar x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Bvar x\n 2. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Fvar x) \\<longrightarrow>\n          pa \\<notin> FV (Fvar x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Fvar x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Fvar x\n 3. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 5. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Upd x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Upd x1 x2 x3\n 6. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 7. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FV (Bvar x_) \\<longrightarrow>\n       pa \\<notin> FV (Bvar x_) \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} Bvar x_ =\n       [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                              sa,Fvar pa]} Bvar x_", "by (simp split: bVariable.split)"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV (Bvar x_) \\<longrightarrow>\n     pa \\<notin> FV (Bvar x_) \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} Bvar x_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} Bvar x_\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Fvar x) \\<longrightarrow>\n          pa \\<notin> FV (Fvar x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Fvar x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Fvar x\n 2. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Upd x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Upd x1 x2 x3\n 5. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 6. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Fvar x) \\<longrightarrow>\n          pa \\<notin> FV (Fvar x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Fvar x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Fvar x\n 2. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Upd x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Upd x1 x2 x3\n 5. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 6. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "case Fvar"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Fvar x) \\<longrightarrow>\n          pa \\<notin> FV (Fvar x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Fvar x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Fvar x\n 2. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 4. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Upd x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Upd x1 x2 x3\n 5. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 6. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FV (Fvar x_) \\<longrightarrow>\n       pa \\<notin> FV (Fvar x_) \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} Fvar x_ =\n       [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                              sa,Fvar pa]} Fvar x_", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV (Fvar x_) \\<longrightarrow>\n     pa \\<notin> FV (Fvar x_) \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} Fvar x_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} Fvar x_\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Upd x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Upd x1 x2 x3\n 4. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 5. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Upd x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Upd x1 x2 x3\n 4. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 5. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "case Upd"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV x1_ \\<longrightarrow>\n     pa \\<notin> FV x1_ \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} x1_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} x1_\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV x3_ \\<longrightarrow>\n     pa \\<notin> FV x3_ \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} x3_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} x3_\n\ngoal (5 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 3. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Upd x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Upd x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Upd x1 x2 x3\n 4. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 5. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV x1_ \\<longrightarrow>\n     pa \\<notin> FV x1_ \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} x1_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} x1_\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV x3_ \\<longrightarrow>\n     pa \\<notin> FV x3_ \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} x3_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} x3_\n\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FV (Upd x1_ x2_ x3_) \\<longrightarrow>\n       pa \\<notin> FV (Upd x1_ x2_ x3_) \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} Upd x1_ x2_ x3_ =\n       [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                              sa,Fvar pa]} Upd x1_ x2_ x3_", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV (Upd x1_ x2_ x3_) \\<longrightarrow>\n     pa \\<notin> FV (Upd x1_ x2_ x3_) \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} Upd x1_ x2_ x3_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} Upd x1_ x2_ x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 3. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 4. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 3. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 4. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "case Call"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV x1_ \\<longrightarrow>\n     pa \\<notin> FV x1_ \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} x1_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} x1_\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV x3_ \\<longrightarrow>\n     pa \\<notin> FV x3_ \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} x3_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} x3_\n\ngoal (4 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<And>x1 x2 x3.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV x1 \\<longrightarrow>\n                   pa \\<notin> FV x1 \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} x1 =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} x1;\n        \\<forall>n s p sa pa.\n           sa \\<notin> FV x3 \\<longrightarrow>\n           pa \\<notin> FV x3 \\<longrightarrow>\n           sa \\<noteq> pa \\<longrightarrow>\n           sa \\<notin> FV p \\<longrightarrow>\n           {n \\<rightarrow> [s,p]} x3 =\n           [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                  sa,Fvar pa]} x3\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p sa pa.\n                            sa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            pa \\<notin> FV (Call x1 x2 x3) \\<longrightarrow>\n                            sa \\<noteq> pa \\<longrightarrow>\n                            sa \\<notin> FV p \\<longrightarrow>\n                            {n \\<rightarrow> [s,p]} Call x1 x2 x3 =\n                            [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n             sa,Fvar pa]} Call x1 x2 x3\n 3. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 4. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV x1_ \\<longrightarrow>\n     pa \\<notin> FV x1_ \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} x1_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} x1_\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV x3_ \\<longrightarrow>\n     pa \\<notin> FV x3_ \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} x3_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} x3_\n\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FV (Call x1_ x2_ x3_) \\<longrightarrow>\n       pa \\<notin> FV (Call x1_ x2_ x3_) \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} Call x1_ x2_ x3_ =\n       [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                              sa,Fvar pa]} Call x1_ x2_ x3_", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV (Call x1_ x2_ x3_) \\<longrightarrow>\n     pa \\<notin> FV (Call x1_ x2_ x3_) \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} Call x1_ x2_ x3_ =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} Call x1_ x2_ x3_\n\ngoal (3 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 3. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 3. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "case None_sterm"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n 3. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption None \\<longrightarrow>\n       pa \\<notin> FVoption None \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p None =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FVoption None \\<longrightarrow>\n     pa \\<notin> FVoption None \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     sopen_option n s p None =\n     ssubst_option sa s\n      (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) None))\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "case (Obj f T)"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     pa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     sopen_option n s p (f ?x) =\n     ssubst_option sa s\n      (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) (f ?x)))\n\ngoal (2 subgoals):\n 1. \\<And>x1 x2.\n       (\\<And>x.\n           \\<forall>n s p sa pa.\n              sa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              pa \\<notin> FVoption (x1 x) \\<longrightarrow>\n              sa \\<noteq> pa \\<longrightarrow>\n              sa \\<notin> FV p \\<longrightarrow>\n              sopen_option n s p (x1 x) =\n              ssubst_option sa s\n               (ssubst_option pa p\n                 (sopen_option n (Fvar sa) (Fvar pa)\n                   (x1 x)))) \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          pa \\<notin> FV (Obj x1 x2) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} Obj x1 x2 =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} Obj x1 x2\n 2. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     pa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     sopen_option n s p (f ?x) =\n     ssubst_option sa s\n      (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) (f ?x)))\n\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FV (Obj f T) \\<longrightarrow>\n       pa \\<notin> FV (Obj f T) \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} Obj f T =\n       [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                              sa,Fvar pa]} Obj f T", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "fix n s p sa pa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "assume \"sa \\<notin> FV (Obj f T)\" and \"pa \\<notin> FV (Obj f T)\""], ["proof (state)\nthis:\n  sa \\<notin> FV (Obj f T)\n  pa \\<notin> FV (Obj f T)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "{"], ["proof (state)\nthis:\n  sa \\<notin> FV (Obj f T)\n  pa \\<notin> FV (Obj f T)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "from \\<open>sa \\<notin> FV (Obj f T)\\<close>"], ["proof (chain)\npicking this:\n  sa \\<notin> FV (Obj f T)", "have \"sa \\<notin> FVoption (f l)\""], ["proof (prove)\nusing this:\n  sa \\<notin> FV (Obj f T)\n\ngoal (1 subgoal):\n 1. sa \\<notin> FVoption (f l)", "by (case_tac \"l \\<in> dom f\", auto)"], ["proof (state)\nthis:\n  sa \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "}"], ["proof (state)\nthis:\n  sa \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "moreover"], ["proof (state)\nthis:\n  sa \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "{"], ["proof (state)\nthis:\n  sa \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "from \\<open>pa \\<notin> FV (Obj f T)\\<close>"], ["proof (chain)\npicking this:\n  pa \\<notin> FV (Obj f T)", "have pa: \"pa \\<notin> FVoption (f l)\""], ["proof (prove)\nusing this:\n  pa \\<notin> FV (Obj f T)\n\ngoal (1 subgoal):\n 1. pa \\<notin> FVoption (f l)", "by (case_tac \"l \\<in> dom f\", auto)"], ["proof (state)\nthis:\n  pa \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "}"], ["proof (state)\nthis:\n  pa \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "moreover"], ["proof (state)\nthis:\n  pa \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "assume \"sa \\<noteq> pa\" and \"sa \\<notin> FV p\""], ["proof (state)\nthis:\n  sa \\<noteq> pa\n  sa \\<notin> FV p\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "ultimately"], ["proof (chain)\npicking this:\n  sa \\<notin> FVoption (f ?l2)\n  pa \\<notin> FVoption (f ?l2)\n  sa \\<noteq> pa\n  sa \\<notin> FV p", "have \n        \"\\<And>l. sopen_option (Suc n) s p (f l) \n              = ssubst_option sa s (ssubst_option pa p\n                 (sopen_option (Suc n) (Fvar sa) (Fvar pa) (f l)))\""], ["proof (prove)\nusing this:\n  sa \\<notin> FVoption (f ?l2)\n  pa \\<notin> FVoption (f ?l2)\n  sa \\<noteq> pa\n  sa \\<notin> FV p\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       sopen_option (Suc n) s p (f l) =\n       ssubst_option sa s\n        (ssubst_option pa p\n          (sopen_option (Suc n) (Fvar sa) (Fvar pa) (f l)))", "using Obj"], ["proof (prove)\nusing this:\n  sa \\<notin> FVoption (f ?l2)\n  pa \\<notin> FVoption (f ?l2)\n  sa \\<noteq> pa\n  sa \\<notin> FV p\n  \\<forall>n s p sa pa.\n     sa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     pa \\<notin> FVoption (f ?x) \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     sopen_option n s p (f ?x) =\n     ssubst_option sa s\n      (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) (f ?x)))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       sopen_option (Suc n) s p (f l) =\n       ssubst_option sa s\n        (ssubst_option pa p\n          (sopen_option (Suc n) (Fvar sa) (Fvar pa) (f l)))", "by auto"], ["proof (state)\nthis:\n  sopen_option (Suc n) s p (f ?l) =\n  ssubst_option sa s\n   (ssubst_option pa p (sopen_option (Suc n) (Fvar sa) (Fvar pa) (f ?l)))\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s p sa pa.\n                      sa \\<notin> FVoption (f x) \\<longrightarrow>\n                      pa \\<notin> FVoption (f x) \\<longrightarrow>\n                      sa \\<noteq> pa \\<longrightarrow>\n                      sa \\<notin> FV p \\<longrightarrow>\n                      sopen_option n s p (f x) =\n                      ssubst_option sa s\n                       (ssubst_option pa p\n                         (sopen_option n (Fvar sa) (Fvar pa) (f x)));\n        sa \\<notin> FV (Obj f T); pa \\<notin> FV (Obj f T); sa \\<noteq> pa;\n        sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> {n \\<rightarrow> [s,p]} Obj f T =\n                         [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n          sa,Fvar pa]} Obj f T", "with ext"], ["proof (chain)\npicking this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sopen_option (Suc n) s p (f ?l) =\n  ssubst_option sa s\n   (ssubst_option pa p (sopen_option (Suc n) (Fvar sa) (Fvar pa) (f ?l)))", "show \n        \"{n \\<rightarrow> [s,p]} Obj f T \n         = [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar sa,Fvar pa]} Obj f T\""], ["proof (prove)\nusing this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sopen_option (Suc n) s p (f ?l) =\n  ssubst_option sa s\n   (ssubst_option pa p (sopen_option (Suc n) (Fvar sa) (Fvar pa) (f ?l)))\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} Obj f T =\n    [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                           sa,Fvar pa]} Obj f T", "by auto"], ["proof (state)\nthis:\n  {n \\<rightarrow> [s,p]} Obj f T =\n  [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                         sa,Fvar pa]} Obj f T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV (Obj f T) \\<longrightarrow>\n     pa \\<notin> FV (Obj f T) \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} Obj f T =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} Obj f T\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "case (Some_sterm t)"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV t \\<longrightarrow>\n     pa \\<notin> FV t \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} t =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>n s p sa pa.\n          sa \\<notin> FV x \\<longrightarrow>\n          pa \\<notin> FV x \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          {n \\<rightarrow> [s,p]} x =\n          [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                                 sa,Fvar pa]} x \\<Longrightarrow>\n       \\<forall>n s p sa pa.\n          sa \\<notin> FVoption (Some x) \\<longrightarrow>\n          pa \\<notin> FVoption (Some x) \\<longrightarrow>\n          sa \\<noteq> pa \\<longrightarrow>\n          sa \\<notin> FV p \\<longrightarrow>\n          sopen_option n s p (Some x) =\n          ssubst_option sa s\n           (ssubst_option pa p\n             (sopen_option n (Fvar sa) (Fvar pa) (Some x)))", "thus ?case"], ["proof (prove)\nusing this:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV t \\<longrightarrow>\n     pa \\<notin> FV t \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} t =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FVoption (Some t) \\<longrightarrow>\n       pa \\<notin> FVoption (Some t) \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       sopen_option n s p (Some t) =\n       ssubst_option sa s\n        (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "fix n s p sa pa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "assume \"sa \\<notin> FVoption (Some t)\""], ["proof (state)\nthis:\n  sa \\<notin> FVoption (Some t)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "hence \"sa \\<notin> FV t\""], ["proof (prove)\nusing this:\n  sa \\<notin> FVoption (Some t)\n\ngoal (1 subgoal):\n 1. sa \\<notin> FV t", "by simp"], ["proof (state)\nthis:\n  sa \\<notin> FV t\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "moreover"], ["proof (state)\nthis:\n  sa \\<notin> FV t\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "assume \"pa \\<notin> FVoption (Some t)\""], ["proof (state)\nthis:\n  pa \\<notin> FVoption (Some t)\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "hence \"pa \\<notin> FV t\""], ["proof (prove)\nusing this:\n  pa \\<notin> FVoption (Some t)\n\ngoal (1 subgoal):\n 1. pa \\<notin> FV t", "by simp"], ["proof (state)\nthis:\n  pa \\<notin> FV t\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "moreover"], ["proof (state)\nthis:\n  pa \\<notin> FV t\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "assume \"sa \\<noteq> pa\" and \"sa \\<notin> FV p\""], ["proof (state)\nthis:\n  sa \\<noteq> pa\n  sa \\<notin> FV p\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "ultimately"], ["proof (chain)\npicking this:\n  sa \\<notin> FV t\n  pa \\<notin> FV t\n  sa \\<noteq> pa\n  sa \\<notin> FV p", "have \"{n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar sa,Fvar pa]} t\""], ["proof (prove)\nusing this:\n  sa \\<notin> FV t\n  pa \\<notin> FV t\n  sa \\<noteq> pa\n  sa \\<notin> FV p\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t =\n    [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                           sa,Fvar pa]} t", "using Some_sterm"], ["proof (prove)\nusing this:\n  sa \\<notin> FV t\n  pa \\<notin> FV t\n  sa \\<noteq> pa\n  sa \\<notin> FV p\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV t \\<longrightarrow>\n     pa \\<notin> FV t \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} t =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t =\n    [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                           sa,Fvar pa]} t", "by blast"], ["proof (state)\nthis:\n  {n \\<rightarrow> [s,p]} t =\n  [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                         sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. \\<And>n s p sa pa.\n       \\<lbrakk>\\<forall>n s p sa pa.\n                   sa \\<notin> FV t \\<longrightarrow>\n                   pa \\<notin> FV t \\<longrightarrow>\n                   sa \\<noteq> pa \\<longrightarrow>\n                   sa \\<notin> FV p \\<longrightarrow>\n                   {n \\<rightarrow> [s,p]} t =\n                   [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n    sa,Fvar pa]} t;\n        sa \\<notin> FVoption (Some t); pa \\<notin> FVoption (Some t);\n        sa \\<noteq> pa; sa \\<notin> FV p\\<rbrakk>\n       \\<Longrightarrow> sopen_option n s p (Some t) =\n                         ssubst_option sa s\n                          (ssubst_option pa p\n                            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "thus \n        \"sopen_option n s p (Some t) \n         = ssubst_option sa s (ssubst_option pa p \n            (sopen_option n (Fvar sa) (Fvar pa) (Some t)))\""], ["proof (prove)\nusing this:\n  {n \\<rightarrow> [s,p]} t =\n  [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                         sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. sopen_option n s p (Some t) =\n    ssubst_option sa s\n     (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) (Some t)))", "by simp"], ["proof (state)\nthis:\n  sopen_option n s p (Some t) =\n  ssubst_option sa s\n   (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) (Some t)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FVoption (Some t) \\<longrightarrow>\n     pa \\<notin> FVoption (Some t) \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     sopen_option n s p (Some t) =\n     ssubst_option sa s\n      (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) (Some t)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>n s p sa pa.\n      sa \\<notin> FV t \\<longrightarrow>\n      pa \\<notin> FV t \\<longrightarrow>\n      sa \\<noteq> pa \\<longrightarrow>\n      sa \\<notin> FV p \\<longrightarrow>\n      {n \\<rightarrow> [s,p]} t =\n      [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                             sa,Fvar pa]} t) \\<and>\n  (\\<forall>n s p sa pa.\n      sa \\<notin> FVoption u \\<longrightarrow>\n      pa \\<notin> FVoption u \\<longrightarrow>\n      sa \\<noteq> pa \\<longrightarrow>\n      sa \\<notin> FV p \\<longrightarrow>\n      sopen_option n s p u =\n      ssubst_option sa s\n       (ssubst_option pa p (sopen_option n (Fvar sa) (Fvar pa) u)))\n\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FV t \\<longrightarrow>\n       pa \\<notin> FV t \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} t =\n       [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                              sa,Fvar pa]} t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV t \\<longrightarrow>\n     pa \\<notin> FV t \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} t =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV t \\<longrightarrow>\n     pa \\<notin> FV t \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} t =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. \\<forall>n s p sa pa.\n       sa \\<notin> FV t \\<longrightarrow>\n       pa \\<notin> FV t \\<longrightarrow>\n       sa \\<noteq> pa \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} t =\n       [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                              sa,Fvar pa]} t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>n s p sa pa.\n     sa \\<notin> FV t \\<longrightarrow>\n     pa \\<notin> FV t \\<longrightarrow>\n     sa \\<noteq> pa \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} t =\n     [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_lc_FV[rule_format]:\n  fixes t\n  assumes \"lc t\"\n  shows \"\\<forall>n s p. {n \\<rightarrow> [Fvar s, Fvar p]} t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "using assms"], ["proof (prove)\nusing this:\n  lc t\n\ngoal (1 subgoal):\n 1. \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "proof \n  (induct\n    taking: \"\\<lambda>t. \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s, Fvar p]} t = t\"\n    rule: lc_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x = Fvar x\n 2. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t; lc a;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} a = a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Call t l a =\n                            Call t l a\n 3. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t;\n        \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u = u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd t l u =\n                            Upd t l u\n 4. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 5. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "case Fvar"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x = Fvar x\n 2. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t; lc a;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} a = a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Call t l a =\n                            Call t l a\n 3. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t;\n        \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u = u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd t l u =\n                            Upd t l u\n 4. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 5. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x_ = Fvar x_", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Fvar x_ = Fvar x_\n\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t; lc a;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} a = a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Call t l a =\n                            Call t l a\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t;\n        \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u = u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd t l u =\n                            Upd t l u\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t; lc a;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} a = a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Call t l a =\n                            Call t l a\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t;\n        \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u = u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd t l u =\n                            Upd t l u\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "case Call"], ["proof (state)\nthis:\n  lc t_\n  \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t_ = t_\n  lc a_\n  \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} a_ = a_\n\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t; lc a;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} a = a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Call t l a =\n                            Call t l a\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t;\n        \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u = u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd t l u =\n                            Upd t l u\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "thus ?case"], ["proof (prove)\nusing this:\n  lc t_\n  \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t_ = t_\n  lc a_\n  \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} a_ = a_\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Call t_ l_ a_ = Call t_ l_ a_", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Call t_ l_ a_ = Call t_ l_ a_\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t;\n        \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u = u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd t l u =\n                            Upd t l u\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t;\n        \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u = u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd t l u =\n                            Upd t l u\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "case Upd"], ["proof (state)\nthis:\n  lc t_\n  \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t_ = t_\n  \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u_ = u_\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t = t;\n        \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u = u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar s,Fvar p]} Upd t l u =\n                            Upd t l u\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "thus ?case"], ["proof (prove)\nusing this:\n  lc t_\n  \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} t_ = t_\n  \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} u_ = u_\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       {n \\<rightarrow> [Fvar s,Fvar p]} Upd t_ l_ u_ = Upd t_ l_ u_", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} Upd t_ l_ u_ = Upd t_ l_ u_\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "case (Obj f T)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<forall>n s p.\n        {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) = the (f l)\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "note pred = this"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<forall>n s p.\n        {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) = the (f l)\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T", "proof (intro strip, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) = f", "fix n s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) = f", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) = f", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) = f", "have \"sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l", "proof (cases \"l \\<in> dom f\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l\n 2. l \\<notin> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l", "case False"], ["proof (state)\nthis:\n  l \\<notin> dom f\n\ngoal (2 subgoals):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l\n 2. l \\<notin> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l", "hence \"f l = None\""], ["proof (prove)\nusing this:\n  l \\<notin> dom f\n\ngoal (1 subgoal):\n 1. f l = None", "by force"], ["proof (state)\nthis:\n  f l = None\n\ngoal (2 subgoals):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l\n 2. l \\<notin> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l", "thus ?thesis"], ["proof (prove)\nusing this:\n  f l = None\n\ngoal (1 subgoal):\n 1. sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l", "by force"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l\n\ngoal (1 subgoal):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l", "case True"], ["proof (state)\nthis:\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l", "with pred"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>n s p.\n        {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) = the (f l)\n  l \\<in> dom f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>n s p.\n        {Suc n \\<rightarrow> [Fvar s,Fvar p]} the (f l) = the (f l)\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l", "by force"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f l) = f l\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) = f", "}"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f ?l2) = f ?l2\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) = f", "with ext"], ["proof (chain)\npicking this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f ?l2) = f ?l2", "show \"(\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) = f\""], ["proof (prove)\nusing this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sopen_option (Suc n) (Fvar s) (Fvar p) (f ?l2) = f ?l2\n\ngoal (1 subgoal):\n 1. (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) = f", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) (f l)) = f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p. {n \\<rightarrow> [Fvar s,Fvar p]} Obj f T = Obj f T\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "case (Bnd L t)"], ["proof (state)\nthis:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>n sa pa.\n         {n \\<rightarrow> [Fvar\n                            sa,Fvar\n                                pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "note cof = this(2)"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>n sa pa.\n         {n \\<rightarrow> [Fvar\n                            sa,Fvar\n                                pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "fix n s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "from \\<open>finite L\\<close> exFresh_s_p_cof[of \"L \\<union> FV t \\<union> {s} \\<union> {p}\"]"], ["proof (chain)\npicking this:\n  finite L\n  finite (L \\<union> FV t \\<union> {s} \\<union> {p}) \\<Longrightarrow>\n  \\<exists>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa", "obtain sa pa where\n      sapa: \"sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and> pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and> sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  finite L\n  finite (L \\<union> FV t \\<union> {s} \\<union> {p}) \\<Longrightarrow>\n  \\<exists>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. (\\<And>sa pa.\n        sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n        pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n        sa \\<noteq> pa \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "with cof"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>n sa pa.\n         {n \\<rightarrow> [Fvar\n                            sa,Fvar\n                                pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa", "have \"{Suc n \\<rightarrow> [Fvar s,Fvar p]} (t\\<^bsup>[Fvar sa, Fvar pa]\\<^esup>) = (t\\<^bsup>[Fvar sa, Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>n sa pa.\n         {n \\<rightarrow> [Fvar\n                            sa,Fvar\n                                pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. {Suc n \\<rightarrow> [Fvar\n                           s,Fvar p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n    (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by auto"], ["proof (state)\nthis:\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "with sopen_commute[OF Suc_not_Zero[of n]]"], ["proof (chain)\npicking this:\n  {Suc n \\<rightarrow> [Fvar\n                         ?s',Fvar\n                              ?p']} {0 \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t =\n  {0 \\<rightarrow> [Fvar\n                     ?s,Fvar\n                         ?p]} {Suc n \\<rightarrow> [Fvar ?s',Fvar ?p']} ?t\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "have \n      eq: \"{0 \\<rightarrow> [Fvar sa,Fvar pa]} {Suc n \\<rightarrow> [Fvar s,Fvar p]} t\n           = {0 \\<rightarrow> [Fvar sa,Fvar pa]} t\""], ["proof (prove)\nusing this:\n  {Suc n \\<rightarrow> [Fvar\n                         ?s',Fvar\n                              ?p']} {0 \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t =\n  {0 \\<rightarrow> [Fvar\n                     ?s,Fvar\n                         ?p]} {Suc n \\<rightarrow> [Fvar ?s',Fvar ?p']} ?t\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. {0 \\<rightarrow> [Fvar\n                       sa,Fvar\n                           pa]} {Suc n \\<rightarrow> [Fvar s,Fvar p]} t =\n    {0 \\<rightarrow> [Fvar sa,Fvar pa]} t", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  {0 \\<rightarrow> [Fvar\n                     sa,Fvar pa]} {Suc n \\<rightarrow> [Fvar s,Fvar p]} t =\n  {0 \\<rightarrow> [Fvar sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. \\<And>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "from sapa contra_subsetD[OF sopen_FV[of _ \"Fvar s\" \"Fvar p\" t]]"], ["proof (chain)\npicking this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n  ?c \\<notin> FV t \\<union> FV (Fvar s) \\<union>\n              FV (Fvar p) \\<Longrightarrow>\n  ?c \\<notin> FV ({?n1 \\<rightarrow> [Fvar s,Fvar p]} t)", "have \n      \"sa \\<notin> FV ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t)\" and \"sa \\<notin> FV t\" and\n      \"pa \\<notin> FV ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t)\" and \"pa \\<notin> FV t\" and \n      \"sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n  ?c \\<notin> FV t \\<union> FV (Fvar s) \\<union>\n              FV (Fvar p) \\<Longrightarrow>\n  ?c \\<notin> FV ({?n1 \\<rightarrow> [Fvar s,Fvar p]} t)\n\ngoal (1 subgoal):\n 1. (sa \\<notin> FV ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t) &&&\n     sa \\<notin> FV t) &&&\n    pa \\<notin> FV ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t) &&&\n    pa \\<notin> FV t &&& sa \\<noteq> pa", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> FV ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t)\n  sa \\<notin> FV t\n  pa \\<notin> FV ({Suc n \\<rightarrow> [Fvar s,Fvar p]} t)\n  pa \\<notin> FV t\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "from sopen_fresh_inj[OF eq this]"], ["proof (chain)\npicking this:\n  {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "show \"{Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t\""], ["proof (prove)\nusing this:\n  {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t\n\ngoal (1 subgoal):\n 1. {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t", "by assumption"], ["proof (state)\nthis:\n  {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s,Fvar p]} t = t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_lc[simp]: \n  fixes t n s p\n  assumes \"lc t\"\n  shows \"{n \\<rightarrow> [s,p]} t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = t", "from exFresh_s_p_cof[of \"FV t \\<union> FV p\"]"], ["proof (chain)\npicking this:\n  finite (FV t \\<union> FV p) \\<Longrightarrow>\n  \\<exists>s pa.\n     s \\<notin> FV t \\<union> FV p \\<and>\n     pa \\<notin> FV t \\<union> FV p \\<and> s \\<noteq> pa", "obtain sa pa where \n    \"sa \\<notin> FV t\" and \"pa \\<notin> FV t\" and \"sa \\<noteq> pa\" and \n    \"sa \\<notin> FV p\" and \"pa \\<notin> FV p\""], ["proof (prove)\nusing this:\n  finite (FV t \\<union> FV p) \\<Longrightarrow>\n  \\<exists>s pa.\n     s \\<notin> FV t \\<union> FV p \\<and>\n     pa \\<notin> FV t \\<union> FV p \\<and> s \\<noteq> pa\n\ngoal (1 subgoal):\n 1. (\\<And>sa pa.\n        \\<lbrakk>sa \\<notin> FV t; pa \\<notin> FV t; sa \\<noteq> pa;\n         sa \\<notin> FV p; pa \\<notin> FV p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> FV t\n  pa \\<notin> FV t\n  sa \\<noteq> pa\n  sa \\<notin> FV p\n  pa \\<notin> FV p\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = t", "from ssubst_intro[OF this(1-4)]"], ["proof (chain)\npicking this:\n  {?n \\<rightarrow> [?s,p]} t =\n  [sa \\<rightarrow> ?s] [pa \\<rightarrow> p] {?n \\<rightarrow> [Fvar\n                           sa,Fvar pa]} t", "have \"{n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar sa,Fvar pa]} t\""], ["proof (prove)\nusing this:\n  {?n \\<rightarrow> [?s,p]} t =\n  [sa \\<rightarrow> ?s] [pa \\<rightarrow> p] {?n \\<rightarrow> [Fvar\n                           sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t =\n    [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                           sa,Fvar pa]} t", "by simp"], ["proof (state)\nthis:\n  {n \\<rightarrow> [s,p]} t =\n  [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                         sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = t", "with assms"], ["proof (chain)\npicking this:\n  lc t\n  {n \\<rightarrow> [s,p]} t =\n  [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                         sa,Fvar pa]} t", "have \"{n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] t\""], ["proof (prove)\nusing this:\n  lc t\n  {n \\<rightarrow> [s,p]} t =\n  [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                         sa,Fvar pa]} t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] t", "using sopen_lc_FV"], ["proof (prove)\nusing this:\n  lc t\n  {n \\<rightarrow> [s,p]} t =\n  [sa \\<rightarrow> s] [pa \\<rightarrow> p] {n \\<rightarrow> [Fvar\n                         sa,Fvar pa]} t\n  lc ?t \\<Longrightarrow> {?n \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t = ?t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] t", "by simp"], ["proof (state)\nthis:\n  {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = t", "with ssubst_fresh[OF \\<open>pa \\<notin> FV t\\<close>]"], ["proof (chain)\npicking this:\n  [pa \\<rightarrow> ?s] t = t\n  {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] t", "have \"{n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] t\""], ["proof (prove)\nusing this:\n  [pa \\<rightarrow> ?s] t = t\n  {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] t", "by simp"], ["proof (state)\nthis:\n  {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = t", "with ssubst_fresh[OF \\<open>sa \\<notin> FV t\\<close>]"], ["proof (chain)\npicking this:\n  [sa \\<rightarrow> ?s] t = t\n  {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] t", "show \"{n \\<rightarrow> [s,p]} t = t\""], ["proof (prove)\nusing this:\n  [sa \\<rightarrow> ?s] t = t\n  {n \\<rightarrow> [s,p]} t = [sa \\<rightarrow> s] t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} t = t", "by simp"], ["proof (state)\nthis:\n  {n \\<rightarrow> [s,p]} t = t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_twice[rule_format]:\n  \"\\<forall>s p s' p' n. lc s \\<longrightarrow> lc p \n     \\<longrightarrow> {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t = {n \\<rightarrow> [s,p]} t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s p s' p' n.\n       lc s \\<longrightarrow>\n       lc p \\<longrightarrow>\n       {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t =\n       {n \\<rightarrow> [s,p]} t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>s p s' p' n.\n       lc s \\<longrightarrow>\n       lc p \\<longrightarrow>\n       {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t =\n       {n \\<rightarrow> [s,p]} t", "have\n    \"(\\<forall>s p s' p' n. lc s \\<longrightarrow> lc p \n      \\<longrightarrow> {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t = {n \\<rightarrow> [s,p]} t)\n    &(\\<forall>s p s' p' n. lc s \\<longrightarrow> lc p \n      \\<longrightarrow> sopen_option n s' p' (sopen_option n s p u) = sopen_option n s p u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>s p s' p' n.\n        lc s \\<longrightarrow>\n        lc p \\<longrightarrow>\n        {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t =\n        {n \\<rightarrow> [s,p]} t) \\<and>\n    (\\<forall>s p s' p' n.\n        lc s \\<longrightarrow>\n        lc p \\<longrightarrow>\n        sopen_option n s' p' (sopen_option n s p u) = sopen_option n s p u)", "by (rule compat_sterm_sterm_option.induct, auto simp: bVariable.split)"], ["proof (state)\nthis:\n  (\\<forall>s p s' p' n.\n      lc s \\<longrightarrow>\n      lc p \\<longrightarrow>\n      {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t =\n      {n \\<rightarrow> [s,p]} t) \\<and>\n  (\\<forall>s p s' p' n.\n      lc s \\<longrightarrow>\n      lc p \\<longrightarrow>\n      sopen_option n s' p' (sopen_option n s p u) = sopen_option n s p u)\n\ngoal (1 subgoal):\n 1. \\<forall>s p s' p' n.\n       lc s \\<longrightarrow>\n       lc p \\<longrightarrow>\n       {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t =\n       {n \\<rightarrow> [s,p]} t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>s p s' p' n.\n     lc s \\<longrightarrow>\n     lc p \\<longrightarrow>\n     {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t =\n     {n \\<rightarrow> [s,p]} t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>s p s' p' n.\n     lc s \\<longrightarrow>\n     lc p \\<longrightarrow>\n     {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t =\n     {n \\<rightarrow> [s,p]} t\n\ngoal (1 subgoal):\n 1. \\<forall>s p s' p' n.\n       lc s \\<longrightarrow>\n       lc p \\<longrightarrow>\n       {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t =\n       {n \\<rightarrow> [s,p]} t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>s p s' p' n.\n     lc s \\<longrightarrow>\n     lc p \\<longrightarrow>\n     {n \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t =\n     {n \\<rightarrow> [s,p]} t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_sclose_commute[rule_format]:\n  \"\\<forall>n k s p sa pa. n \\<noteq> k \\<longrightarrow> sa \\<notin> FV s \\<longrightarrow> sa \\<notin> FV p \n     \\<longrightarrow> pa \\<notin> FV s \\<longrightarrow> pa \\<notin> FV p\n     \\<longrightarrow> {n \\<rightarrow> [s, p]} {k \\<leftarrow> [sa,pa]} t = {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s, p]} t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n k s p sa pa.\n       n \\<noteq> k \\<longrightarrow>\n       sa \\<notin> FV s \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       pa \\<notin> FV s \\<longrightarrow>\n       pa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} {k \\<leftarrow> [sa,pa]} t =\n       {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s,p]} t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n k s p sa pa.\n       n \\<noteq> k \\<longrightarrow>\n       sa \\<notin> FV s \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       pa \\<notin> FV s \\<longrightarrow>\n       pa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} {k \\<leftarrow> [sa,pa]} t =\n       {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s,p]} t", "have \n    \"(\\<forall>n k s p sa pa. n \\<noteq> k \\<longrightarrow> sa \\<notin> FV s \\<longrightarrow> sa \\<notin> FV p \n       \\<longrightarrow> pa \\<notin> FV s \\<longrightarrow> pa \\<notin> FV p\n       \\<longrightarrow> {n \\<rightarrow> [s, p]} {k \\<leftarrow> [sa,pa]} t = {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s, p]} t)\n    &(\\<forall>n k s p sa pa. n \\<noteq> k \\<longrightarrow> sa \\<notin> FV s \\<longrightarrow> sa \\<notin> FV p \n       \\<longrightarrow> pa \\<notin> FV s \\<longrightarrow> pa \\<notin> FV p\n       \\<longrightarrow> sopen_option n s p (sclose_option k sa pa u) \n           = sclose_option k sa pa (sopen_option n s p u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n k s p sa pa.\n        n \\<noteq> k \\<longrightarrow>\n        sa \\<notin> FV s \\<longrightarrow>\n        sa \\<notin> FV p \\<longrightarrow>\n        pa \\<notin> FV s \\<longrightarrow>\n        pa \\<notin> FV p \\<longrightarrow>\n        {n \\<rightarrow> [s,p]} {k \\<leftarrow> [sa,pa]} t =\n        {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s,p]} t) \\<and>\n    (\\<forall>n k s p sa pa.\n        n \\<noteq> k \\<longrightarrow>\n        sa \\<notin> FV s \\<longrightarrow>\n        sa \\<notin> FV p \\<longrightarrow>\n        pa \\<notin> FV s \\<longrightarrow>\n        pa \\<notin> FV p \\<longrightarrow>\n        sopen_option n s p (sclose_option k sa pa u) =\n        sclose_option k sa pa (sopen_option n s p u))", "by (rule compat_sterm_sterm_option.induct, simp_all split: bVariable.split)"], ["proof (state)\nthis:\n  (\\<forall>n k s p sa pa.\n      n \\<noteq> k \\<longrightarrow>\n      sa \\<notin> FV s \\<longrightarrow>\n      sa \\<notin> FV p \\<longrightarrow>\n      pa \\<notin> FV s \\<longrightarrow>\n      pa \\<notin> FV p \\<longrightarrow>\n      {n \\<rightarrow> [s,p]} {k \\<leftarrow> [sa,pa]} t =\n      {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s,p]} t) \\<and>\n  (\\<forall>n k s p sa pa.\n      n \\<noteq> k \\<longrightarrow>\n      sa \\<notin> FV s \\<longrightarrow>\n      sa \\<notin> FV p \\<longrightarrow>\n      pa \\<notin> FV s \\<longrightarrow>\n      pa \\<notin> FV p \\<longrightarrow>\n      sopen_option n s p (sclose_option k sa pa u) =\n      sclose_option k sa pa (sopen_option n s p u))\n\ngoal (1 subgoal):\n 1. \\<forall>n k s p sa pa.\n       n \\<noteq> k \\<longrightarrow>\n       sa \\<notin> FV s \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       pa \\<notin> FV s \\<longrightarrow>\n       pa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} {k \\<leftarrow> [sa,pa]} t =\n       {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s,p]} t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>n k s p sa pa.\n     n \\<noteq> k \\<longrightarrow>\n     sa \\<notin> FV s \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     pa \\<notin> FV s \\<longrightarrow>\n     pa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} {k \\<leftarrow> [sa,pa]} t =\n     {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s,p]} t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n k s p sa pa.\n     n \\<noteq> k \\<longrightarrow>\n     sa \\<notin> FV s \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     pa \\<notin> FV s \\<longrightarrow>\n     pa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} {k \\<leftarrow> [sa,pa]} t =\n     {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s,p]} t\n\ngoal (1 subgoal):\n 1. \\<forall>n k s p sa pa.\n       n \\<noteq> k \\<longrightarrow>\n       sa \\<notin> FV s \\<longrightarrow>\n       sa \\<notin> FV p \\<longrightarrow>\n       pa \\<notin> FV s \\<longrightarrow>\n       pa \\<notin> FV p \\<longrightarrow>\n       {n \\<rightarrow> [s,p]} {k \\<leftarrow> [sa,pa]} t =\n       {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s,p]} t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>n k s p sa pa.\n     n \\<noteq> k \\<longrightarrow>\n     sa \\<notin> FV s \\<longrightarrow>\n     sa \\<notin> FV p \\<longrightarrow>\n     pa \\<notin> FV s \\<longrightarrow>\n     pa \\<notin> FV p \\<longrightarrow>\n     {n \\<rightarrow> [s,p]} {k \\<leftarrow> [sa,pa]} t =\n     {k \\<leftarrow> [sa,pa]} {n \\<rightarrow> [s,p]} t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sclose_sopen_eq_t[rule_format]:\n  \"\\<forall>n s p. s \\<notin> FV t \\<longrightarrow> p \\<notin> FV t \\<longrightarrow> s \\<noteq> p\n     \\<longrightarrow> {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s, Fvar p]} t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       s \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow>\n       {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       s \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow>\n       {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "have \n    \"(\\<forall>n s p. s \\<notin> FV t \\<longrightarrow> p \\<notin> FV t \\<longrightarrow> s \\<noteq> p\n       \\<longrightarrow> {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s, Fvar p]} t = t)\n    &(\\<forall>n s p. s \\<notin> FVoption u \\<longrightarrow> p \\<notin> FVoption u \\<longrightarrow> s \\<noteq> p\n       \\<longrightarrow> sclose_option n s p (sopen_option n (Fvar s) (Fvar p) u) = u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n s p.\n        s \\<notin> FV t \\<longrightarrow>\n        p \\<notin> FV t \\<longrightarrow>\n        s \\<noteq> p \\<longrightarrow>\n        {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s,Fvar p]} t =\n        t) \\<and>\n    (\\<forall>n s p.\n        s \\<notin> FVoption u \\<longrightarrow>\n        p \\<notin> FVoption u \\<longrightarrow>\n        s \\<noteq> p \\<longrightarrow>\n        sclose_option n s p (sopen_option n (Fvar s) (Fvar p) u) = u)", "proof (induct _ t _ u rule: compat_sterm_sterm_option.induct, simp_all split: bVariable.split, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "(* Obj *)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "fix f n s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "assume \n      nin_s: \"\\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\" and\n      nin_p: \"\\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\""], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "{"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "from nin_s"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)", "have \"s \\<notin> FVoption (f l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. s \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. s \\<notin> FVoption (f l)", "by (case_tac \"l \\<in> dom f\", auto)"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "}"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "moreover"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "{"], ["proof (state)\nthis:\n  s \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "from nin_p"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)", "have \"p \\<notin> FVoption (f l)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. p \\<notin> FVoption (f l)", "by (case_tac \"l \\<in> dom f\", auto)"], ["proof (state)\nthis:\n  p \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "}"], ["proof (state)\nthis:\n  p \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "moreover"], ["proof (state)\nthis:\n  p \\<notin> FVoption (f ?l2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "assume \n      \"s \\<noteq> p\" and\n      \"\\<And>x. \\<forall>n s. s \\<notin> FVoption (f x) \n             \\<longrightarrow> (\\<forall>p. p \\<notin> FVoption (f x) \\<longrightarrow> s \\<noteq> p \n                   \\<longrightarrow> sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f x)) \n                       = f x)\""], ["proof (state)\nthis:\n  s \\<noteq> p\n  \\<forall>n s.\n     s \\<notin> FVoption (f ?x) \\<longrightarrow>\n     (\\<forall>p.\n         p \\<notin> FVoption (f ?x) \\<longrightarrow>\n         s \\<noteq> p \\<longrightarrow>\n         sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f ?x)) =\n         f ?x)\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "ultimately"], ["proof (chain)\npicking this:\n  s \\<notin> FVoption (f ?l2)\n  p \\<notin> FVoption (f ?l2)\n  s \\<noteq> p\n  \\<forall>n s.\n     s \\<notin> FVoption (f ?x) \\<longrightarrow>\n     (\\<forall>p.\n         p \\<notin> FVoption (f ?x) \\<longrightarrow>\n         s \\<noteq> p \\<longrightarrow>\n         sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f ?x)) =\n         f ?x)", "have \"\\<And>l. sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f l)) = f l\""], ["proof (prove)\nusing this:\n  s \\<notin> FVoption (f ?l2)\n  p \\<notin> FVoption (f ?l2)\n  s \\<noteq> p\n  \\<forall>n s.\n     s \\<notin> FVoption (f ?x) \\<longrightarrow>\n     (\\<forall>p.\n         p \\<notin> FVoption (f ?x) \\<longrightarrow>\n         s \\<noteq> p \\<longrightarrow>\n         sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f ?x)) =\n         f ?x)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f l)) = f l", "by auto"], ["proof (state)\nthis:\n  sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f ?l)) = f ?l\n\ngoal (1 subgoal):\n 1. \\<And>x1 n s p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>n s.\n                      s \\<notin> FVoption (x1 x) \\<longrightarrow>\n                      (\\<forall>p.\n                          p \\<notin> FVoption (x1 x) \\<longrightarrow>\n                          s \\<noteq> p \\<longrightarrow>\n                          sclose_option n s p\n                           (sopen_option n (Fvar s) (Fvar p) (x1 x)) =\n                          x1 x);\n        \\<forall>x\\<in>dom x1. s \\<notin> FVoption (x1 x);\n        \\<forall>x\\<in>dom x1. p \\<notin> FVoption (x1 x);\n        s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>l.\n                             sclose_option (Suc n) s p\n                              (sopen_option (Suc n) (Fvar s) (Fvar p)\n                                (x1 l))) =\n                         x1", "with ext"], ["proof (chain)\npicking this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f ?l)) = f ?l", "show \"(\\<lambda>l. sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f l))) = f \""], ["proof (prove)\nusing this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f ?l)) = f ?l\n\ngoal (1 subgoal):\n 1. (\\<lambda>l.\n        sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f l))) =\n    f", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>l.\n      sclose_option n s p (sopen_option n (Fvar s) (Fvar p) (f l))) =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>n s p.\n      s \\<notin> FV t \\<longrightarrow>\n      p \\<notin> FV t \\<longrightarrow>\n      s \\<noteq> p \\<longrightarrow>\n      {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s,Fvar p]} t = t) \\<and>\n  (\\<forall>n s p.\n      s \\<notin> FVoption u \\<longrightarrow>\n      p \\<notin> FVoption u \\<longrightarrow>\n      s \\<noteq> p \\<longrightarrow>\n      sclose_option n s p (sopen_option n (Fvar s) (Fvar p) u) = u)\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       s \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow>\n       {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>n s p.\n     s \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow>\n     {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n s p.\n     s \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow>\n     {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s,Fvar p]} t = t\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       s \\<notin> FV t \\<longrightarrow>\n       p \\<notin> FV t \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow>\n       {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s,Fvar p]} t = t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     s \\<notin> FV t \\<longrightarrow>\n     p \\<notin> FV t \\<longrightarrow>\n     s \\<noteq> p \\<longrightarrow>\n     {n \\<leftarrow> [s,p]} {n \\<rightarrow> [Fvar s,Fvar p]} t = t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_sclose_eq_t[simp, rule_format]:\n  fixes t\n  assumes \"lc t\"\n  shows \"\\<forall>n s p. {n \\<rightarrow> [Fvar s, Fvar p]} {n \\<leftarrow> [s,p]} t = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t", "using assms"], ["proof (prove)\nusing this:\n  lc t\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t", "proof \n  (induct\n    taking: \"\\<lambda>t. \\<forall>n s p. {Suc n \\<rightarrow> [Fvar s, Fvar p]} {Suc n \\<leftarrow> [s,p]} t = t\"\n    rule: lc_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Fvar x =\n          Fvar x\n 2. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        lc a;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} a =\n           a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Call t l a =\n                            Call t l a\n 3. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        \\<forall>n s p.\n           {Suc n \\<rightarrow> [Fvar\n                                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u =\n           u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t l u =\n                            Upd t l u\n 4. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 5. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "case Fvar"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Fvar x =\n          Fvar x\n 2. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        lc a;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} a =\n           a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Call t l a =\n                            Call t l a\n 3. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        \\<forall>n s p.\n           {Suc n \\<rightarrow> [Fvar\n                                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u =\n           u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t l u =\n                            Upd t l u\n 4. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 5. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Fvar x_ =\n       Fvar x_", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Fvar x_ =\n     Fvar x_\n\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        lc a;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} a =\n           a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Call t l a =\n                            Call t l a\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        \\<forall>n s p.\n           {Suc n \\<rightarrow> [Fvar\n                                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u =\n           u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t l u =\n                            Upd t l u\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        lc a;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} a =\n           a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Call t l a =\n                            Call t l a\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        \\<forall>n s p.\n           {Suc n \\<rightarrow> [Fvar\n                                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u =\n           u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t l u =\n                            Upd t l u\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "case Call"], ["proof (state)\nthis:\n  lc t_\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t_ = t_\n  lc a_\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} a_ = a_\n\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        lc a;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} a =\n           a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Call t l a =\n                            Call t l a\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        \\<forall>n s p.\n           {Suc n \\<rightarrow> [Fvar\n                                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u =\n           u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t l u =\n                            Upd t l u\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "thus ?case"], ["proof (prove)\nusing this:\n  lc t_\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t_ = t_\n  lc a_\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} a_ = a_\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       {n \\<rightarrow> [Fvar\n                          s,Fvar p]} {n \\<leftarrow> [s,p]} Call t_ l_ a_ =\n       Call t_ l_ a_", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar\n                        s,Fvar p]} {n \\<leftarrow> [s,p]} Call t_ l_ a_ =\n     Call t_ l_ a_\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        \\<forall>n s p.\n           {Suc n \\<rightarrow> [Fvar\n                                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u =\n           u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t l u =\n                            Upd t l u\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        \\<forall>n s p.\n           {Suc n \\<rightarrow> [Fvar\n                                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u =\n           u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t l u =\n                            Upd t l u\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "case Upd"], ["proof (state)\nthis:\n  lc t_\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t_ = t_\n  \\<forall>n s p.\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u_ =\n     u_\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>n s p.\n           {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t = t;\n        \\<forall>n s p.\n           {Suc n \\<rightarrow> [Fvar\n                                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u =\n           u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {n \\<rightarrow> [Fvar\n         s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t l u =\n                            Upd t l u\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "thus ?case"], ["proof (prove)\nusing this:\n  lc t_\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} t_ = t_\n  \\<forall>n s p.\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} u_ =\n     u_\n\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       {n \\<rightarrow> [Fvar\n                          s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t_ l_ u_ =\n       Upd t_ l_ u_", "by simp"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Upd t_ l_ u_ =\n     Upd t_ l_ u_\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "case (Obj f T)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<forall>n s p.\n        {Suc n \\<rightarrow> [Fvar\n                               s,Fvar\n                                  p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n        the (f l)\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "note pred = this"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<forall>n s p.\n        {Suc n \\<rightarrow> [Fvar\n                               s,Fvar\n                                  p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n        the (f l)\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>n s p.\n             {Suc n \\<rightarrow> [Fvar\n                                    s,Fvar\n p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n             the (f l) \\<Longrightarrow>\n       \\<forall>n s p.\n          {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n          Obj f T\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n       Obj f T", "proof (intro strip, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l.\n           sopen_option (Suc n) (Fvar s) (Fvar p)\n            (sclose_option (Suc n) s p (f l))) =\n       f", "fix n s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l.\n           sopen_option (Suc n) (Fvar s) (Fvar p)\n            (sclose_option (Suc n) s p (f l))) =\n       f", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l.\n           sopen_option (Suc n) (Fvar s) (Fvar p)\n            (sclose_option (Suc n) s p (f l))) =\n       f", "fix l"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l.\n           sopen_option (Suc n) (Fvar s) (Fvar p)\n            (sclose_option (Suc n) s p (f l))) =\n       f", "have \n        \"sopen_option (Suc n) (Fvar s) (Fvar p) (sclose_option (Suc n) s p (f l)) \n         = f l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l", "proof (cases \"l \\<in> dom f\")"], ["proof (state)\ngoal (2 subgoals):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l\n 2. l \\<notin> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l", "case False"], ["proof (state)\nthis:\n  l \\<notin> dom f\n\ngoal (2 subgoals):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l\n 2. l \\<notin> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l", "hence \"f l = None\""], ["proof (prove)\nusing this:\n  l \\<notin> dom f\n\ngoal (1 subgoal):\n 1. f l = None", "by force"], ["proof (state)\nthis:\n  f l = None\n\ngoal (2 subgoals):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l\n 2. l \\<notin> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l", "thus ?thesis"], ["proof (prove)\nusing this:\n  f l = None\n\ngoal (1 subgoal):\n 1. sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l", "by simp"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (sclose_option (Suc n) s p (f l)) =\n  f l\n\ngoal (1 subgoal):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l", "case True"], ["proof (state)\nthis:\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. l \\<in> dom f \\<Longrightarrow>\n    sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l", "with pred"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>n s p.\n        {Suc n \\<rightarrow> [Fvar\n                               s,Fvar\n                                  p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n        the (f l)\n  l \\<in> dom f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>n s p.\n        {Suc n \\<rightarrow> [Fvar\n                               s,Fvar\n                                  p]} {Suc n \\<leftarrow> [s,p]} the (f l) =\n        the (f l)\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. sopen_option (Suc n) (Fvar s) (Fvar p)\n     (sclose_option (Suc n) s p (f l)) =\n    f l", "by force"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (sclose_option (Suc n) s p (f l)) =\n  f l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p) (sclose_option (Suc n) s p (f l)) =\n  f l\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l.\n           sopen_option (Suc n) (Fvar s) (Fvar p)\n            (sclose_option (Suc n) s p (f l))) =\n       f", "}"], ["proof (state)\nthis:\n  sopen_option (Suc n) (Fvar s) (Fvar p)\n   (sclose_option (Suc n) s p (f ?l2)) =\n  f ?l2\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       (\\<lambda>l.\n           sopen_option (Suc n) (Fvar s) (Fvar p)\n            (sclose_option (Suc n) s p (f l))) =\n       f", "with ext"], ["proof (chain)\npicking this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sopen_option (Suc n) (Fvar s) (Fvar p)\n   (sclose_option (Suc n) s p (f ?l2)) =\n  f ?l2", "show \"(\\<lambda>l. sopen_option (Suc n) (Fvar s) (Fvar p) \n                 (sclose_option (Suc n) s p (f l))) = f\""], ["proof (prove)\nusing this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  sopen_option (Suc n) (Fvar s) (Fvar p)\n   (sclose_option (Suc n) s p (f ?l2)) =\n  f ?l2\n\ngoal (1 subgoal):\n 1. (\\<lambda>l.\n        sopen_option (Suc n) (Fvar s) (Fvar p)\n         (sclose_option (Suc n) s p (f l))) =\n    f", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>l.\n      sopen_option (Suc n) (Fvar s) (Fvar p)\n       (sclose_option (Suc n) s p (f l))) =\n  f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     {n \\<rightarrow> [Fvar s,Fvar p]} {n \\<leftarrow> [s,p]} Obj f T =\n     Obj f T\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "case (Bnd L t)"], ["proof (state)\nthis:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>n sa pa.\n         {n \\<rightarrow> [Fvar\n                            sa,Fvar\n                                pa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar\n                                    s,Fvar p]\\<^esup>) =\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "note cof = this(2)"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>n sa pa.\n         {n \\<rightarrow> [Fvar\n                            sa,Fvar\n                                pa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar\n                                    s,Fvar p]\\<^esup>) =\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>n sa pa.\n               {n \\<rightarrow> [Fvar\n                                  sa,Fvar\npa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n s p.\n                            {Suc n \\<rightarrow> [Fvar\n             s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n                            t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "fix n s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "from \\<open>finite L\\<close> exFresh_s_p_cof[of \"L \\<union> FV t \\<union> {s} \\<union> {p}\"]"], ["proof (chain)\npicking this:\n  finite L\n  finite (L \\<union> FV t \\<union> {s} \\<union> {p}) \\<Longrightarrow>\n  \\<exists>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa", "obtain sa pa where\n      sapa: \"sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and> pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \n             \\<and> sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  finite L\n  finite (L \\<union> FV t \\<union> {s} \\<union> {p}) \\<Longrightarrow>\n  \\<exists>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. (\\<And>sa pa.\n        sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n        pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n        sa \\<noteq> pa \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "with cof"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>n sa pa.\n         {n \\<rightarrow> [Fvar\n                            sa,Fvar\n                                pa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar\n                                    s,Fvar p]\\<^esup>) =\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa", "have \n      eq: \"{Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} (t\\<^bsup>[Fvar sa, Fvar pa]\\<^esup>) \n           = (t\\<^bsup>[Fvar sa, Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>n sa pa.\n         {n \\<rightarrow> [Fvar\n                            sa,Fvar\n                                pa]} {n \\<leftarrow> [sa,pa]} (t\\<^bsup>[Fvar\n                                    s,Fvar p]\\<^esup>) =\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. {Suc n \\<rightarrow> [Fvar\n                           s,Fvar\n                              p]} {Suc n \\<leftarrow> [s,p]} (t\\<^bsup>[Fvar\n                                   sa,Fvar pa]\\<^esup>) =\n    (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by blast"], ["proof (state)\nthis:\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar\n                            p]} {Suc n \\<leftarrow> [s,p]} (t\\<^bsup>[Fvar\n                                 sa,Fvar pa]\\<^esup>) =\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "{"], ["proof (state)\nthis:\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar\n                            p]} {Suc n \\<leftarrow> [s,p]} (t\\<^bsup>[Fvar\n                                 sa,Fvar pa]\\<^esup>) =\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "assume \"x \\<notin> FV t\""], ["proof (state)\nthis:\n  x \\<notin> FV t\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "from contra_subsetD[OF sclose_subset_FV this]"], ["proof (chain)\npicking this:\n  x \\<notin> FV ({?n1 \\<leftarrow> [?s1,?p1]} t)", "have \"x \\<notin> FV ({Suc n \\<leftarrow> [s,p]} t)\""], ["proof (prove)\nusing this:\n  x \\<notin> FV ({?n1 \\<leftarrow> [?s1,?p1]} t)\n\ngoal (1 subgoal):\n 1. x \\<notin> FV ({Suc n \\<leftarrow> [s,p]} t)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> FV ({Suc n \\<leftarrow> [s,p]} t)\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "moreover"], ["proof (state)\nthis:\n  x \\<notin> FV ({Suc n \\<leftarrow> [s,p]} t)\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "assume \"x \\<noteq> p\" and \"x \\<noteq> s\""], ["proof (state)\nthis:\n  x \\<noteq> p\n  x \\<noteq> s\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "ultimately"], ["proof (chain)\npicking this:\n  x \\<notin> FV ({Suc n \\<leftarrow> [s,p]} t)\n  x \\<noteq> p\n  x \\<noteq> s", "have \"x \\<notin> FV ({Suc n \\<leftarrow> [s,p]} t) \\<union> FV (Fvar s) \\<union> FV (Fvar p)\""], ["proof (prove)\nusing this:\n  x \\<notin> FV ({Suc n \\<leftarrow> [s,p]} t)\n  x \\<noteq> p\n  x \\<noteq> s\n\ngoal (1 subgoal):\n 1. x \\<notin> FV ({Suc n \\<leftarrow> [s,p]} t) \\<union>\n               FV (Fvar s) \\<union>\n               FV (Fvar p)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> FV ({Suc n \\<leftarrow> [s,p]} t) \\<union> FV (Fvar s) \\<union>\n             FV (Fvar p)\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "from contra_subsetD[OF sopen_FV this]"], ["proof (chain)\npicking this:\n  x \\<notin> FV ({?n1 \\<rightarrow> [Fvar\ns,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)", "have \"x \\<notin> FV ({Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\""], ["proof (prove)\nusing this:\n  x \\<notin> FV ({?n1 \\<rightarrow> [Fvar\ns,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\n\ngoal (1 subgoal):\n 1. x \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n    s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?x2 \\<notin> FV t; ?x2 \\<noteq> p; ?x2 \\<noteq> s\\<rbrakk>\n  \\<Longrightarrow> ?x2\n                    \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "with sapa"], ["proof (chain)\npicking this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n  \\<lbrakk>?x2 \\<notin> FV t; ?x2 \\<noteq> p; ?x2 \\<noteq> s\\<rbrakk>\n  \\<Longrightarrow> ?x2\n                    \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)", "have \n      \"s \\<notin> FV (Fvar sa)\" and \"s \\<notin> FV (Fvar pa)\" and\n      \"p \\<notin> FV (Fvar sa)\" and \"p \\<notin> FV (Fvar pa)\" and\n      \"sa \\<notin> FV ({Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\" and\n      \"sa \\<notin> FV t\" and\n      \"pa \\<notin> FV ({Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\" and\n      \"pa \\<notin> FV t\" and \"sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n  \\<lbrakk>?x2 \\<notin> FV t; ?x2 \\<noteq> p; ?x2 \\<noteq> s\\<rbrakk>\n  \\<Longrightarrow> ?x2\n                    \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n                  s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\n\ngoal (1 subgoal):\n 1. ((s \\<notin> FV (Fvar sa) &&& s \\<notin> FV (Fvar pa)) &&&\n     p \\<notin> FV (Fvar sa) &&& p \\<notin> FV (Fvar pa)) &&&\n    (sa \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n      s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t) &&&\n     sa \\<notin> FV t) &&&\n    pa \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n     s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t) &&&\n    pa \\<notin> FV t &&& sa \\<noteq> pa", "by auto"], ["proof (state)\nthis:\n  s \\<notin> FV (Fvar sa)\n  s \\<notin> FV (Fvar pa)\n  p \\<notin> FV (Fvar sa)\n  p \\<notin> FV (Fvar pa)\n  sa \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n   s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\n  sa \\<notin> FV t\n  pa \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n   s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\n  pa \\<notin> FV t\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "(* proof:\n\n{Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) \n= {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} {0 \\<rightarrow> [Fvar sa,Fvar pa]} t\n= {Suc n \\<rightarrow> [Fvar s,Fvar p]} {0 \\<rightarrow> [Fvar sa,Fvar pa]} {Suc n \\<leftarrow> [s,p]} t\n= {0 \\<rightarrow> [Fvar sa,Fvar pa]} {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t\n= {0 \\<rightarrow> [Fvar sa,Fvar pa]} t\n= (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n*)"], ["proof (state)\nthis:\n  s \\<notin> FV (Fvar sa)\n  s \\<notin> FV (Fvar pa)\n  p \\<notin> FV (Fvar sa)\n  p \\<notin> FV (Fvar pa)\n  sa \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n   s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\n  sa \\<notin> FV t\n  pa \\<notin> FV ({Suc n \\<rightarrow> [Fvar\n   s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t)\n  pa \\<notin> FV t\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>n s p.\n       {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n       t", "from\n      eq\n      sym[OF sopen_sclose_commute[OF not_sym[OF Suc_not_Zero[of n]] \n                                                this(1-4)]]\n      sopen_commute[OF Suc_not_Zero[of n]]\n      sopen_fresh_inj[OF _ this(5-9)]"], ["proof (chain)\npicking this:\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar\n                            p]} {Suc n \\<leftarrow> [s,p]} (t\\<^bsup>[Fvar\n                                 sa,Fvar pa]\\<^esup>) =\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  {Suc n \\<leftarrow> [s,p]} {0 \\<rightarrow> [Fvar sa,Fvar pa]} ?t1 =\n  {0 \\<rightarrow> [Fvar sa,Fvar pa]} {Suc n \\<leftarrow> [s,p]} ?t1\n  {Suc n \\<rightarrow> [Fvar\n                         ?s',Fvar\n                              ?p']} {0 \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t =\n  {0 \\<rightarrow> [Fvar\n                     ?s,Fvar\n                         ?p]} {Suc n \\<rightarrow> [Fvar ?s',Fvar ?p']} ?t\n  {?n \\<rightarrow> [Fvar\n                      sa,Fvar\n                          pa]} {Suc n \\<rightarrow> [Fvar\n                s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n  {?n \\<rightarrow> [Fvar sa,Fvar pa]} t \\<Longrightarrow>\n  {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t = t", "show \"{Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t = t\""], ["proof (prove)\nusing this:\n  {Suc n \\<rightarrow> [Fvar\n                         s,Fvar\n                            p]} {Suc n \\<leftarrow> [s,p]} (t\\<^bsup>[Fvar\n                                 sa,Fvar pa]\\<^esup>) =\n  (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  {Suc n \\<leftarrow> [s,p]} {0 \\<rightarrow> [Fvar sa,Fvar pa]} ?t1 =\n  {0 \\<rightarrow> [Fvar sa,Fvar pa]} {Suc n \\<leftarrow> [s,p]} ?t1\n  {Suc n \\<rightarrow> [Fvar\n                         ?s',Fvar\n                              ?p']} {0 \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t =\n  {0 \\<rightarrow> [Fvar\n                     ?s,Fvar\n                         ?p]} {Suc n \\<rightarrow> [Fvar ?s',Fvar ?p']} ?t\n  {?n \\<rightarrow> [Fvar\n                      sa,Fvar\n                          pa]} {Suc n \\<rightarrow> [Fvar\n                s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t =\n  {?n \\<rightarrow> [Fvar sa,Fvar pa]} t \\<Longrightarrow>\n  {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t = t\n\ngoal (1 subgoal):\n 1. {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t = t", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n s p.\n     {Suc n \\<rightarrow> [Fvar s,Fvar p]} {Suc n \\<leftarrow> [s,p]} t = t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ssubst_sopen_distrib[rule_format]:\n  \"\\<forall>n s p t'. lc t' \\<longrightarrow> [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t \n   = {n \\<rightarrow> [[x \\<rightarrow> t']s, [x \\<rightarrow> t']p]} [x \\<rightarrow> t'] t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       lc t' \\<longrightarrow>\n       [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n       {n \\<rightarrow> [[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]} [x \\<rightarrow> t'] t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       lc t' \\<longrightarrow>\n       [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n       {n \\<rightarrow> [[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]} [x \\<rightarrow> t'] t", "have\n    \"(\\<forall>n s p t'. lc t' \n       \\<longrightarrow> [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t = {n \\<rightarrow> [[x \\<rightarrow> t']s, [x \\<rightarrow> t']p]} [x \\<rightarrow> t'] t)\n    &(\\<forall>n s p t'. lc t' \n       \\<longrightarrow> ssubst_option x t' (sopen_option n s p u) \n           = sopen_option n ([x \\<rightarrow> t']s) ([x \\<rightarrow> t']p) (ssubst_option x t' u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n s p t'.\n        lc t' \\<longrightarrow>\n        [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n        {n \\<rightarrow> [[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]} [x \\<rightarrow> t'] t) \\<and>\n    (\\<forall>n s p t'.\n        lc t' \\<longrightarrow>\n        ssubst_option x t' (sopen_option n s p u) =\n        sopen_option n ([x \\<rightarrow> t'] s) ([x \\<rightarrow> t'] p)\n         (ssubst_option x t' u))", "by (rule compat_sterm_sterm_option.induct, simp_all split: bVariable.split)"], ["proof (state)\nthis:\n  (\\<forall>n s p t'.\n      lc t' \\<longrightarrow>\n      [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n      {n \\<rightarrow> [[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]} [x \\<rightarrow> t'] t) \\<and>\n  (\\<forall>n s p t'.\n      lc t' \\<longrightarrow>\n      ssubst_option x t' (sopen_option n s p u) =\n      sopen_option n ([x \\<rightarrow> t'] s) ([x \\<rightarrow> t'] p)\n       (ssubst_option x t' u))\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       lc t' \\<longrightarrow>\n       [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n       {n \\<rightarrow> [[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]} [x \\<rightarrow> t'] t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>n s p t'.\n     lc t' \\<longrightarrow>\n     [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n     {n \\<rightarrow> [[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]} [x \\<rightarrow> t'] t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n s p t'.\n     lc t' \\<longrightarrow>\n     [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n     {n \\<rightarrow> [[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]} [x \\<rightarrow> t'] t\n\ngoal (1 subgoal):\n 1. \\<forall>n s p t'.\n       lc t' \\<longrightarrow>\n       [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n       {n \\<rightarrow> [[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]} [x \\<rightarrow> t'] t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>n s p t'.\n     lc t' \\<longrightarrow>\n     [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n     {n \\<rightarrow> [[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]} [x \\<rightarrow> t'] t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ssubst_openz_distrib:\n  \"lc t' \\<Longrightarrow> [x \\<rightarrow> t'] (t\\<^bsup>[s,p]\\<^esup>) = (([x \\<rightarrow> t'] t)\\<^bsup>[[x \\<rightarrow> t'] s, [x \\<rightarrow> t'] p]\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc t' \\<Longrightarrow>\n    [x \\<rightarrow> t'] (t\\<^bsup>[s,p]\\<^esup>) =\n    ([x \\<rightarrow> t'] t\\<^bsup>[[x \\<rightarrow> t'] s,[x \\<rightarrow> t'] p]\\<^esup>)", "by (simp add: openz_def ssubst_sopen_distrib)"], ["", "lemma ssubst_sopen_commute: \"\\<lbrakk> lc t'; x \\<notin> FV s; x \\<notin> FV p \\<rbrakk> \n  \\<Longrightarrow> [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t = {n \\<rightarrow> [s,p]} [x \\<rightarrow> t'] t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lc t'; x \\<notin> FV s; x \\<notin> FV p\\<rbrakk>\n    \\<Longrightarrow> [x \\<rightarrow> t'] {n \\<rightarrow> [s,p]} t =\n                      {n \\<rightarrow> [s,p]} [x \\<rightarrow> t'] t", "by (frule ssubst_sopen_distrib[of t' x n s p t], simp)"], ["", "lemma sopen_commute_gen:\n  fixes s p s' p' n k t\n  assumes \"lc s\" and \"lc p\" and \"lc s'\" and \"lc p'\" and \"n \\<noteq> k\"\n  shows \"{n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t = {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "have \"finite (FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union> FV t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union> FV t)", "by auto"], ["proof (state)\nthis:\n  finite (FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union> FV t)\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "from exFresh_s_p_cof[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>sa pa.\n     sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n                 FV t \\<and>\n     pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n                 FV t \\<and>\n     sa \\<noteq> pa", "obtain sa pa where \n    \"sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union> FV t \n    \\<and> pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union> FV t \\<and> sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  \\<exists>sa pa.\n     sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n                 FV t \\<and>\n     pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n                 FV t \\<and>\n     sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. (\\<And>sa pa.\n        sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union>\n                    FV p' \\<union>\n                    FV t \\<and>\n        pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union>\n                    FV p' \\<union>\n                    FV t \\<and>\n        sa \\<noteq> pa \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "moreover"], ["proof (state)\nthis:\n  sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "hence \"finite (FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union> FV t \\<union> {sa} \\<union> {pa})\""], ["proof (prove)\nusing this:\n  sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. finite\n     (FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n      FV t \\<union>\n      {sa} \\<union>\n      {pa})", "by auto"], ["proof (state)\nthis:\n  finite\n   (FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union> FV t \\<union>\n    {sa} \\<union>\n    {pa})\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "from exFresh_s_p_cof[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>sb pb.\n     sb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n                 FV t \\<union>\n                 {sa} \\<union>\n                 {pa} \\<and>\n     pb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n                 FV t \\<union>\n                 {sa} \\<union>\n                 {pa} \\<and>\n     sb \\<noteq> pb", "obtain sb pb where \n    \"sb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union> FV t \\<union> {sa} \\<union> {pa} \n    \\<and> pb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union> FV t \\<union> {sa} \\<union> {pa} \n    \\<and> sb \\<noteq> pb\""], ["proof (prove)\nusing this:\n  \\<exists>sb pb.\n     sb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n                 FV t \\<union>\n                 {sa} \\<union>\n                 {pa} \\<and>\n     pb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n                 FV t \\<union>\n                 {sa} \\<union>\n                 {pa} \\<and>\n     sb \\<noteq> pb\n\ngoal (1 subgoal):\n 1. (\\<And>sb pb.\n        sb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union>\n                    FV p' \\<union>\n                    FV t \\<union>\n                    {sa} \\<union>\n                    {pa} \\<and>\n        pb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union>\n                    FV p' \\<union>\n                    FV t \\<union>\n                    {sa} \\<union>\n                    {pa} \\<and>\n        sb \\<noteq> pb \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<union>\n              {sa} \\<union>\n              {pa} \\<and>\n  pb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<union>\n              {sa} \\<union>\n              {pa} \\<and>\n  sb \\<noteq> pb\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "ultimately"], ["proof (chain)\npicking this:\n  sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  sa \\<noteq> pa\n  sb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<union>\n              {sa} \\<union>\n              {pa} \\<and>\n  pb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<union>\n              {sa} \\<union>\n              {pa} \\<and>\n  sb \\<noteq> pb", "have\n    \"sa \\<notin> FV t\" and \"pa \\<notin> FV t\" and \"sb \\<notin> FV t\" and \"pb \\<notin> FV t\" and\n    \"sa \\<notin> FV ({n \\<rightarrow> [s,p]} t)\" and \"pa \\<notin> FV ({n \\<rightarrow> [s,p]} t)\" and\n    \"sb \\<notin> FV ({k \\<rightarrow> [s',p']} t)\" and \"pb \\<notin> FV ({k \\<rightarrow> [s',p']} t)\" and\n\n    \"sa \\<noteq> pa\" and \"sb \\<noteq> pb\" and \"sb \\<noteq> sa\" and \"sb \\<noteq> pa\" and \n    \"pb \\<noteq> sa\" and \"pb \\<noteq> pa\" and\n\n    \"sa \\<notin> FV s\" and \"sa \\<notin> FV p\" and \"pa \\<notin> FV s\" and \"pa \\<notin> FV p\" and\n    \"sb \\<notin> FV s'\" and \"sb \\<notin> FV p'\" and \"pb \\<notin> FV s'\" and \"pb \\<notin> FV p'\" and\n    \"sa \\<notin> FV p'\" and \"sb \\<notin> FV p\" and\n\n    \"sa \\<notin> FV (Fvar sb)\" and \"sa \\<notin> FV (Fvar pb)\" and\n    \"pa \\<notin> FV (Fvar sb)\" and \"pa \\<notin> FV (Fvar pb)\" and\n    \"pb \\<notin> FV (Fvar sa)\" and \"pb \\<notin> FV (Fvar pa)\" and\n    \"sb \\<notin> FV (Fvar sa)\" and \"sb \\<notin> FV (Fvar pa)\" and\n\n    \"lc s\" and \"lc p\" and \"lc s'\" and \"lc p'\""], ["proof (prove)\nusing this:\n  sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  sa \\<noteq> pa\n  sb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<union>\n              {sa} \\<union>\n              {pa} \\<and>\n  pb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<union>\n              {sa} \\<union>\n              {pa} \\<and>\n  sb \\<noteq> pb\n\ngoal (1 subgoal):\n 1. ((((sa \\<notin> FV t &&& pa \\<notin> FV t) &&&\n       sb \\<notin> FV t &&& pb \\<notin> FV t) &&&\n      (sa \\<notin> FV ({n \\<rightarrow> [s,p]} t) &&&\n       pa \\<notin> FV ({n \\<rightarrow> [s,p]} t)) &&&\n      sb \\<notin> FV ({k \\<rightarrow> [s',p']} t) &&&\n      pb \\<notin> FV ({k \\<rightarrow> [s',p']} t) &&& sa \\<noteq> pa) &&&\n     ((sb \\<noteq> pb &&& sb \\<noteq> sa) &&&\n      sb \\<noteq> pa &&& pb \\<noteq> sa) &&&\n     (pb \\<noteq> pa &&& sa \\<notin> FV s) &&&\n     sa \\<notin> FV p &&& pa \\<notin> FV s &&& pa \\<notin> FV p) &&&\n    (((sb \\<notin> FV s' &&& sb \\<notin> FV p') &&&\n      pb \\<notin> FV s' &&& pb \\<notin> FV p') &&&\n     (sa \\<notin> FV p' &&& sb \\<notin> FV p) &&&\n     sa \\<notin> FV (Fvar sb) &&&\n     sa \\<notin> FV (Fvar pb) &&& pa \\<notin> FV (Fvar sb)) &&&\n    ((pa \\<notin> FV (Fvar pb) &&& pb \\<notin> FV (Fvar sa)) &&&\n     pb \\<notin> FV (Fvar pa) &&& sb \\<notin> FV (Fvar sa)) &&&\n    (sb \\<notin> FV (Fvar pa) &&& lc s) &&& lc p &&& lc s' &&& lc p'", "using contra_subsetD[OF sopen_FV] assms(1-4)"], ["proof (prove)\nusing this:\n  sa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  pa \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<and>\n  sa \\<noteq> pa\n  sb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<union>\n              {sa} \\<union>\n              {pa} \\<and>\n  pb \\<notin> FV s \\<union> FV p \\<union> FV s' \\<union> FV p' \\<union>\n              FV t \\<union>\n              {sa} \\<union>\n              {pa} \\<and>\n  sb \\<noteq> pb\n  ?c \\<notin> FV ?t1 \\<union> FV ?s1 \\<union> FV ?p1 \\<Longrightarrow>\n  ?c \\<notin> FV ({?n1 \\<rightarrow> [?s1,?p1]} ?t1)\n  lc s\n  lc p\n  lc s'\n  lc p'\n\ngoal (1 subgoal):\n 1. ((((sa \\<notin> FV t &&& pa \\<notin> FV t) &&&\n       sb \\<notin> FV t &&& pb \\<notin> FV t) &&&\n      (sa \\<notin> FV ({n \\<rightarrow> [s,p]} t) &&&\n       pa \\<notin> FV ({n \\<rightarrow> [s,p]} t)) &&&\n      sb \\<notin> FV ({k \\<rightarrow> [s',p']} t) &&&\n      pb \\<notin> FV ({k \\<rightarrow> [s',p']} t) &&& sa \\<noteq> pa) &&&\n     ((sb \\<noteq> pb &&& sb \\<noteq> sa) &&&\n      sb \\<noteq> pa &&& pb \\<noteq> sa) &&&\n     (pb \\<noteq> pa &&& sa \\<notin> FV s) &&&\n     sa \\<notin> FV p &&& pa \\<notin> FV s &&& pa \\<notin> FV p) &&&\n    (((sb \\<notin> FV s' &&& sb \\<notin> FV p') &&&\n      pb \\<notin> FV s' &&& pb \\<notin> FV p') &&&\n     (sa \\<notin> FV p' &&& sb \\<notin> FV p) &&&\n     sa \\<notin> FV (Fvar sb) &&&\n     sa \\<notin> FV (Fvar pb) &&& pa \\<notin> FV (Fvar sb)) &&&\n    ((pa \\<notin> FV (Fvar pb) &&& pb \\<notin> FV (Fvar sa)) &&&\n     pb \\<notin> FV (Fvar pa) &&& sb \\<notin> FV (Fvar sa)) &&&\n    (sb \\<notin> FV (Fvar pa) &&& lc s) &&& lc p &&& lc s' &&& lc p'", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> FV t\n  pa \\<notin> FV t\n  sb \\<notin> FV t\n  pb \\<notin> FV t\n  sa \\<notin> FV ({n \\<rightarrow> [s,p]} t)\n  pa \\<notin> FV ({n \\<rightarrow> [s,p]} t)\n  sb \\<notin> FV ({k \\<rightarrow> [s',p']} t)\n  pb \\<notin> FV ({k \\<rightarrow> [s',p']} t)\n  sa \\<noteq> pa\n  sb \\<noteq> pb\n  sb \\<noteq> sa\n  sb \\<noteq> pa\n  pb \\<noteq> sa\n  pb \\<noteq> pa\n  sa \\<notin> FV s\n  sa \\<notin> FV p\n  pa \\<notin> FV s\n  pa \\<notin> FV p\n  sb \\<notin> FV s'\n  sb \\<notin> FV p'\n  pb \\<notin> FV s'\n  pb \\<notin> FV p'\n  sa \\<notin> FV p'\n  sb \\<notin> FV p\n  sa \\<notin> FV (Fvar sb)\n  sa \\<notin> FV (Fvar pb)\n  pa \\<notin> FV (Fvar sb)\n  pa \\<notin> FV (Fvar pb)\n  pb \\<notin> FV (Fvar sa)\n  pb \\<notin> FV (Fvar pa)\n  sb \\<notin> FV (Fvar sa)\n  sb \\<notin> FV (Fvar pa)\n  lc s\n  lc p\n  lc s'\n  lc p'\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "(* proof:\n\n{n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t \n= {n \\<rightarrow> [s,p]} [sa \\<rightarrow> s'] [pa \\<rightarrow> p'] {k \\<rightarrow> [Fvar sa,Fvar pa]} t\n= [sa \\<rightarrow> s'] [pa \\<rightarrow> p'] [pa \\<rightarrow> p'] {k \\<rightarrow> [Fvar sa,Fvar pa]} t\n= [sb \\<rightarrow> s] [pb \\<rightarrow> p] {n \\<rightarrow> [Fvar sb,Fvar pb]} [sa \\<rightarrow> s'] [pa \\<rightarrow> p'] {k \\<rightarrow> [Fvar sa,Fvar pa]} t\n= [sb \\<rightarrow> s] [pb \\<rightarrow> p] [sa \\<rightarrow> s'] {n \\<rightarrow> [Fvar sb,Fvar pb]} [pa \\<rightarrow> p'] {k \\<rightarrow> [Fvar sa,Fvar pa]} t\n= [sb \\<rightarrow> s] [pb \\<rightarrow> p] [sa \\<rightarrow> s'] [pa \\<rightarrow> p'] {n \\<rightarrow> [Fvar sb,Fvar pb]} {k \\<rightarrow> [Fvar sa,Fvar pa]} t\n= [sb \\<rightarrow> s] [pb \\<rightarrow> p] [sa \\<rightarrow> s'] [pa \\<rightarrow> p'] {k \\<rightarrow> [Fvar sa,Fvar pa]} {n \\<rightarrow> [Fvar sb,Fvar pb]} t\n= [sb \\<rightarrow> s] [sa \\<rightarrow> s'] [pb \\<rightarrow> p] [pa \\<rightarrow> p'] {k \\<rightarrow> [Fvar sa,Fvar pa]} {n \\<rightarrow> [Fvar sb,Fvar pb]} t\n= [sa \\<rightarrow> s'] [sb \\<rightarrow> s] [pb \\<rightarrow> p] [pa \\<rightarrow> p'] {k \\<rightarrow> [Fvar sa,Fvar pa]} {n \\<rightarrow> [Fvar sb,Fvar pb]} t\n= [sa \\<rightarrow> s'] [sb \\<rightarrow> s] [pa \\<rightarrow> p'] [pb \\<rightarrow> p] {k \\<rightarrow> [Fvar sa,Fvar pa]} {n \\<rightarrow> [Fvar sb,Fvar pb]} t\n= [sa \\<rightarrow> s'] [pa \\<rightarrow> p'] [sb \\<rightarrow> s] [pb \\<rightarrow> p] {k \\<rightarrow> [Fvar sa,Fvar pa]} {n \\<rightarrow> [Fvar sb,Fvar pb]} t\n= [sa \\<rightarrow> s'] [pa \\<rightarrow> p'] [sb \\<rightarrow> s] {k \\<rightarrow> [Fvar sa,Fvar pa]} [pb \\<rightarrow> p] {n \\<rightarrow> [Fvar sb,Fvar pb]} t\n= [sa \\<rightarrow> s'] [pa \\<rightarrow> p'] {k \\<rightarrow> [Fvar sa,Fvar pa]} [sb \\<rightarrow> s] [pb \\<rightarrow> p] {n \\<rightarrow> [Fvar sb,Fvar pb]} t\n= [sa \\<rightarrow> s'] [pa \\<rightarrow> p'] {k \\<rightarrow> [Fvar sa,Fvar pa]} {n \\<rightarrow> [s,p]} t\n= {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t \n*)"], ["proof (state)\nthis:\n  sa \\<notin> FV t\n  pa \\<notin> FV t\n  sb \\<notin> FV t\n  pb \\<notin> FV t\n  sa \\<notin> FV ({n \\<rightarrow> [s,p]} t)\n  pa \\<notin> FV ({n \\<rightarrow> [s,p]} t)\n  sb \\<notin> FV ({k \\<rightarrow> [s',p']} t)\n  pb \\<notin> FV ({k \\<rightarrow> [s',p']} t)\n  sa \\<noteq> pa\n  sb \\<noteq> pb\n  sb \\<noteq> sa\n  sb \\<noteq> pa\n  pb \\<noteq> sa\n  pb \\<noteq> pa\n  sa \\<notin> FV s\n  sa \\<notin> FV p\n  pa \\<notin> FV s\n  pa \\<notin> FV p\n  sb \\<notin> FV s'\n  sb \\<notin> FV p'\n  pb \\<notin> FV s'\n  pb \\<notin> FV p'\n  sa \\<notin> FV p'\n  sb \\<notin> FV p\n  sa \\<notin> FV (Fvar sb)\n  sa \\<notin> FV (Fvar pb)\n  pa \\<notin> FV (Fvar sb)\n  pa \\<notin> FV (Fvar pb)\n  pb \\<notin> FV (Fvar sa)\n  pb \\<notin> FV (Fvar pa)\n  sb \\<notin> FV (Fvar sa)\n  sb \\<notin> FV (Fvar pa)\n  lc s\n  lc p\n  lc s'\n  lc p'\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "from \n    ssubst_intro[OF \\<open>sa \\<notin> FV t\\<close> \\<open>pa \\<notin> FV t\\<close> \\<open>sa \\<noteq> pa\\<close> \\<open>sa \\<notin> FV p'\\<close>] \n    ssubst_intro[OF \\<open>sb \\<notin> FV ({k \\<rightarrow> [s',p']} t)\\<close> \\<open>pb \\<notin> FV ({k \\<rightarrow> [s',p']} t)\\<close> \n                    \\<open>sb \\<noteq> pb\\<close> \\<open>sb \\<notin> FV p\\<close>]\n    sym[OF ssubst_sopen_commute[OF \\<open>lc s'\\<close> \n                                   \\<open>sa \\<notin> FV (Fvar sb)\\<close> \\<open>sa \\<notin> FV (Fvar pb)\\<close>]]\n    sym[OF ssubst_sopen_commute[OF \\<open>lc p'\\<close> \n                                   \\<open>pa \\<notin> FV (Fvar sb)\\<close> \\<open>pa \\<notin> FV (Fvar pb)\\<close>]]\n    sopen_commute[OF \\<open>n \\<noteq> k\\<close>]\n    ssubst_commute[OF \\<open>pb \\<noteq> sa\\<close> \\<open>pb \\<notin> FV s'\\<close> \\<open>sa \\<notin> FV p\\<close>]\n    ssubst_commute[OF \\<open>sb \\<noteq> sa\\<close> \\<open>sb \\<notin> FV s'\\<close> \\<open>sa \\<notin> FV s\\<close>]\n    ssubst_commute[OF \\<open>pb \\<noteq> pa\\<close> \\<open>pb \\<notin> FV p'\\<close> \\<open>pa \\<notin> FV p\\<close>]\n    ssubst_commute[OF \\<open>sb \\<noteq> pa\\<close> \\<open>sb \\<notin> FV p'\\<close> \\<open>pa \\<notin> FV s\\<close>]\n    ssubst_sopen_commute[OF \\<open>lc s\\<close> \\<open>sb \\<notin> FV (Fvar sa)\\<close> \\<open>sb \\<notin> FV (Fvar pa)\\<close>] \n    ssubst_sopen_commute[OF \\<open>lc p\\<close> \\<open>pb \\<notin> FV (Fvar sa)\\<close> \\<open>pb \\<notin> FV (Fvar pa)\\<close>] \n    sym[OF ssubst_intro[OF \\<open>sb \\<notin> FV t\\<close> \\<open>pb \\<notin> FV t\\<close> \\<open>sb \\<noteq> pb\\<close> \\<open>sb \\<notin> FV p\\<close>]] \n    sym[OF ssubst_intro[OF \\<open>sa \\<notin> FV ({n \\<rightarrow> [s,p]} t)\\<close> \\<open>pa \\<notin> FV ({n \\<rightarrow> [s,p]} t)\\<close>\n                           \\<open>sa \\<noteq> pa\\<close> \\<open>sa \\<notin> FV p'\\<close>]]"], ["proof (chain)\npicking this:\n  {?n \\<rightarrow> [?s,p']} t =\n  [sa \\<rightarrow> ?s] [pa \\<rightarrow> p'] {?n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} t\n  {?n \\<rightarrow> [?s,p]} {k \\<rightarrow> [s',p']} t =\n  [sb \\<rightarrow> ?s] [pb \\<rightarrow> p] {?n \\<rightarrow> [Fvar\n                           sb,Fvar pb]} {k \\<rightarrow> [s',p']} t\n  {?n1 \\<rightarrow> [Fvar sb,Fvar pb]} [sa \\<rightarrow> s'] ?t1 =\n  [sa \\<rightarrow> s'] {?n1 \\<rightarrow> [Fvar sb,Fvar pb]} ?t1\n  {?n1 \\<rightarrow> [Fvar sb,Fvar pb]} [pa \\<rightarrow> p'] ?t1 =\n  [pa \\<rightarrow> p'] {?n1 \\<rightarrow> [Fvar sb,Fvar pb]} ?t1\n  {n \\<rightarrow> [Fvar\n                     ?s',Fvar ?p']} {k \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t =\n  {k \\<rightarrow> [Fvar\n                     ?s,Fvar ?p]} {n \\<rightarrow> [Fvar ?s',Fvar ?p']} ?t\n  [pb \\<rightarrow> p] [sa \\<rightarrow> s'] ?t =\n  [sa \\<rightarrow> s'] [pb \\<rightarrow> p] ?t\n  [sb \\<rightarrow> s] [sa \\<rightarrow> s'] ?t =\n  [sa \\<rightarrow> s'] [sb \\<rightarrow> s] ?t\n  [pb \\<rightarrow> p] [pa \\<rightarrow> p'] ?t =\n  [pa \\<rightarrow> p'] [pb \\<rightarrow> p] ?t\n  [sb \\<rightarrow> s] [pa \\<rightarrow> p'] ?t =\n  [pa \\<rightarrow> p'] [sb \\<rightarrow> s] ?t\n  [sb \\<rightarrow> s] {?n \\<rightarrow> [Fvar sa,Fvar pa]} ?t =\n  {?n \\<rightarrow> [Fvar sa,Fvar pa]} [sb \\<rightarrow> s] ?t\n  [pb \\<rightarrow> p] {?n \\<rightarrow> [Fvar sa,Fvar pa]} ?t =\n  {?n \\<rightarrow> [Fvar sa,Fvar pa]} [pb \\<rightarrow> p] ?t\n  [sb \\<rightarrow> ?s1] [pb \\<rightarrow> p] {?n1 \\<rightarrow> [Fvar\n                             sb,Fvar pb]} t =\n  {?n1 \\<rightarrow> [?s1,p]} t\n  [sa \\<rightarrow> ?s1] [pa \\<rightarrow> p'] {?n1 \\<rightarrow> [Fvar\n                              sa,Fvar pa]} {n \\<rightarrow> [s,p]} t =\n  {?n1 \\<rightarrow> [?s1,p']} {n \\<rightarrow> [s,p]} t", "show \"{n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t = {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t\""], ["proof (prove)\nusing this:\n  {?n \\<rightarrow> [?s,p']} t =\n  [sa \\<rightarrow> ?s] [pa \\<rightarrow> p'] {?n \\<rightarrow> [Fvar\n                            sa,Fvar pa]} t\n  {?n \\<rightarrow> [?s,p]} {k \\<rightarrow> [s',p']} t =\n  [sb \\<rightarrow> ?s] [pb \\<rightarrow> p] {?n \\<rightarrow> [Fvar\n                           sb,Fvar pb]} {k \\<rightarrow> [s',p']} t\n  {?n1 \\<rightarrow> [Fvar sb,Fvar pb]} [sa \\<rightarrow> s'] ?t1 =\n  [sa \\<rightarrow> s'] {?n1 \\<rightarrow> [Fvar sb,Fvar pb]} ?t1\n  {?n1 \\<rightarrow> [Fvar sb,Fvar pb]} [pa \\<rightarrow> p'] ?t1 =\n  [pa \\<rightarrow> p'] {?n1 \\<rightarrow> [Fvar sb,Fvar pb]} ?t1\n  {n \\<rightarrow> [Fvar\n                     ?s',Fvar ?p']} {k \\<rightarrow> [Fvar ?s,Fvar ?p]} ?t =\n  {k \\<rightarrow> [Fvar\n                     ?s,Fvar ?p]} {n \\<rightarrow> [Fvar ?s',Fvar ?p']} ?t\n  [pb \\<rightarrow> p] [sa \\<rightarrow> s'] ?t =\n  [sa \\<rightarrow> s'] [pb \\<rightarrow> p] ?t\n  [sb \\<rightarrow> s] [sa \\<rightarrow> s'] ?t =\n  [sa \\<rightarrow> s'] [sb \\<rightarrow> s] ?t\n  [pb \\<rightarrow> p] [pa \\<rightarrow> p'] ?t =\n  [pa \\<rightarrow> p'] [pb \\<rightarrow> p] ?t\n  [sb \\<rightarrow> s] [pa \\<rightarrow> p'] ?t =\n  [pa \\<rightarrow> p'] [sb \\<rightarrow> s] ?t\n  [sb \\<rightarrow> s] {?n \\<rightarrow> [Fvar sa,Fvar pa]} ?t =\n  {?n \\<rightarrow> [Fvar sa,Fvar pa]} [sb \\<rightarrow> s] ?t\n  [pb \\<rightarrow> p] {?n \\<rightarrow> [Fvar sa,Fvar pa]} ?t =\n  {?n \\<rightarrow> [Fvar sa,Fvar pa]} [pb \\<rightarrow> p] ?t\n  [sb \\<rightarrow> ?s1] [pb \\<rightarrow> p] {?n1 \\<rightarrow> [Fvar\n                             sb,Fvar pb]} t =\n  {?n1 \\<rightarrow> [?s1,p]} t\n  [sa \\<rightarrow> ?s1] [pa \\<rightarrow> p'] {?n1 \\<rightarrow> [Fvar\n                              sa,Fvar pa]} {n \\<rightarrow> [s,p]} t =\n  {?n1 \\<rightarrow> [?s1,p']} {n \\<rightarrow> [s,p]} t\n\ngoal (1 subgoal):\n 1. {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n    {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t", "by force"], ["proof (state)\nthis:\n  {n \\<rightarrow> [s,p]} {k \\<rightarrow> [s',p']} t =\n  {k \\<rightarrow> [s',p']} {n \\<rightarrow> [s,p]} t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ssubst_preserves_lc[simp, rule_format]:\n  fixes t\n  assumes \"lc t\"\n  shows \"\\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "define pred_cof\n    where \"pred_cof L t \\<longleftrightarrow> (\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> lc (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>))\" for L t"], ["proof (state)\nthis:\n  pred_cof ?L ?t =\n  (\\<forall>s p.\n      s \\<notin> ?L \\<and>\n      p \\<notin> ?L \\<and> s \\<noteq> p \\<longrightarrow>\n      lc (?t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "{"], ["proof (state)\nthis:\n  pred_cof ?L ?t =\n  (\\<forall>s p.\n      s \\<notin> ?L \\<and>\n      p \\<notin> ?L \\<and> s \\<noteq> p \\<longrightarrow>\n      lc (?t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "fix x v t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "assume \n      \"lc v\" and\n      \"\\<forall>x v. lc v \\<longrightarrow> (\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> v] t))\""], ["proof (state)\nthis:\n  lc v\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     (\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> v] t))\n\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "hence\n      \"\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> v] t)\""], ["proof (prove)\nusing this:\n  lc v\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     (\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> v] t))\n\ngoal (1 subgoal):\n 1. \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> v] t)", "by auto"], ["proof (state)\nthis:\n  \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> v] t)\n\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>lc ?v2;\n   \\<forall>x v.\n      lc v \\<longrightarrow>\n      (\\<exists>L.\n          finite L \\<and> pred_cof L ([x \\<rightarrow> v] ?ta2))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([?x2 \\<rightarrow> ?v2] ?ta2)\n\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "note Lex = this"], ["proof (state)\nthis:\n  \\<lbrakk>lc ?v2;\n   \\<forall>x v.\n      lc v \\<longrightarrow>\n      (\\<exists>L.\n          finite L \\<and> pred_cof L ([x \\<rightarrow> v] ?ta2))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([?x2 \\<rightarrow> ?v2] ?ta2)\n\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "from assms"], ["proof (chain)\npicking this:\n  lc t", "show ?thesis"], ["proof (prove)\nusing this:\n  lc t\n\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)", "proof \n    (induct\n      taking: \"\\<lambda>t. \\<forall>x t'. lc t' \\<longrightarrow> (\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] t))\"\n      rule: lc_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<forall>xa t'.\n          lc t' \\<longrightarrow> lc ([xa \\<rightarrow> t'] Fvar x)\n 2. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        lc a;\n        \\<forall>x t'.\n           lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] a)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Call t l a)\n 3. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        \\<forall>x t'.\n           lc t' \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Upd t l u)\n 4. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 5. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "case Fvar"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<forall>xa t'.\n          lc t' \\<longrightarrow> lc ([xa \\<rightarrow> t'] Fvar x)\n 2. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        lc a;\n        \\<forall>x t'.\n           lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] a)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Call t l a)\n 3. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        \\<forall>x t'.\n           lc t' \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Upd t l u)\n 4. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 5. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa t'.\n       lc t' \\<longrightarrow> lc ([xa \\<rightarrow> t'] Fvar x_)", "by simp"], ["proof (state)\nthis:\n  \\<forall>xa t'. lc t' \\<longrightarrow> lc ([xa \\<rightarrow> t'] Fvar x_)\n\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        lc a;\n        \\<forall>x t'.\n           lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] a)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Call t l a)\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        \\<forall>x t'.\n           lc t' \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Upd t l u)\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        lc a;\n        \\<forall>x t'.\n           lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] a)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Call t l a)\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        \\<forall>x t'.\n           lc t' \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Upd t l u)\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "case Call"], ["proof (state)\nthis:\n  lc t_\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t_)\n  lc a_\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] a_)\n\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        lc a;\n        \\<forall>x t'.\n           lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] a)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Call t l a)\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        \\<forall>x t'.\n           lc t' \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Upd t l u)\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "thus ?case"], ["proof (prove)\nusing this:\n  lc t_\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t_)\n  lc a_\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] a_)\n\ngoal (1 subgoal):\n 1. \\<forall>x t'.\n       lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Call t_ l_ a_)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x t'.\n     lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Call t_ l_ a_)\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        \\<forall>x t'.\n           lc t' \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Upd t l u)\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        \\<forall>x t'.\n           lc t' \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Upd t l u)\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "case (Upd t l u)"], ["proof (state)\nthis:\n  lc t\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)\n  \\<forall>x t'.\n     lc t' \\<longrightarrow>\n     (\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        \\<forall>x t'.\n           lc t' \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Upd t l u)\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "note pred_t = this(2) and pred_bnd = this(3)"], ["proof (state)\nthis:\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)\n  \\<forall>x t'.\n     lc t' \\<longrightarrow>\n     (\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t);\n        \\<forall>x t'.\n           lc t' \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            lc ([x \\<rightarrow> t'] Upd t l u)\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x t'.\n       lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Upd t l u)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Upd t l u)", "fix x t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Upd t l u)", "assume \"lc t'\""], ["proof (state)\nthis:\n  lc t'\n\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Upd t l u)", "note Lex[OF this pred_bnd]"], ["proof (state)\nthis:\n  \\<exists>L. finite L \\<and> pred_cof L ([?x2 \\<rightarrow> t'] u)\n\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Upd t l u)", "from this[of x]"], ["proof (chain)\npicking this:\n  \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u)", "obtain L where \"finite L\" and \"pred_cof L ([x \\<rightarrow> t'] u)\""], ["proof (prove)\nusing this:\n  \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] u)\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L; pred_cof L ([x \\<rightarrow> t'] u)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L\n  pred_cof L ([x \\<rightarrow> t'] u)\n\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Upd t l u)", "with \\<open>lc t'\\<close> pred_t"], ["proof (chain)\npicking this:\n  lc t'\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)\n  finite L\n  pred_cof L ([x \\<rightarrow> t'] u)", "show \"lc ([x \\<rightarrow> t'] Upd t l u)\""], ["proof (prove)\nusing this:\n  lc t'\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)\n  finite L\n  pred_cof L ([x \\<rightarrow> t'] u)\n\ngoal (1 subgoal):\n 1. lc ([x \\<rightarrow> t'] Upd t l u)", "unfolding pred_cof_def"], ["proof (prove)\nusing this:\n  lc t'\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc ([x \\<rightarrow> t'] u\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc ([x \\<rightarrow> t'] Upd t l u)", "by simp"], ["proof (state)\nthis:\n  lc ([x \\<rightarrow> t'] Upd t l u)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Upd t l u)\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "case (Obj f T)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<forall>x t'.\n        lc t' \\<longrightarrow>\n        (\\<exists>L.\n            finite L \\<and> pred_cof L ([x \\<rightarrow> t'] the (f l)))\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "note pred = this"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<forall>x t'.\n        lc t' \\<longrightarrow>\n        (\\<exists>L.\n            finite L \\<and> pred_cof L ([x \\<rightarrow> t'] the (f l)))\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x t'.\n             lc t' \\<longrightarrow>\n             (\\<exists>L.\n                 finite L \\<and>\n                 pred_cof L\n                  ([x \\<rightarrow> t'] the (f l))) \\<Longrightarrow>\n       \\<forall>x t'.\n          lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)", "fix x t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)", "assume \"lc t'\""], ["proof (state)\nthis:\n  lc t'\n\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)", "define pred_fl where \"pred_fl s p b l = lc ([x \\<rightarrow> t'] the b\\<^bsup>[Fvar s, Fvar p]\\<^esup>)\"\n        for s p b and l::Label"], ["proof (state)\nthis:\n  pred_fl ?s ?p ?b ?l =\n  lc ([x \\<rightarrow> t'] the ?b\\<^bsup>[Fvar ?s,Fvar ?p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)", "from \\<open>lc t'\\<close> fmap_ball_all2[OF pred]"], ["proof (chain)\npicking this:\n  lc t'\n  \\<forall>x y.\n     lc y \\<longrightarrow>\n     (\\<forall>l\\<in>dom f.\n         \\<exists>L.\n            finite L \\<and> pred_cof L ([x \\<rightarrow> y] the (f l)))", "have \"\\<forall>l\\<in>dom f. \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] the(f l))\""], ["proof (prove)\nusing this:\n  lc t'\n  \\<forall>x y.\n     lc y \\<longrightarrow>\n     (\\<forall>l\\<in>dom f.\n         \\<exists>L.\n            finite L \\<and> pred_cof L ([x \\<rightarrow> y] the (f l)))\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f.\n       \\<exists>L.\n          finite L \\<and> pred_cof L ([x \\<rightarrow> t'] the (f l))", "unfolding pred_cof_def"], ["proof (prove)\nusing this:\n  lc t'\n  \\<forall>x y.\n     lc y \\<longrightarrow>\n     (\\<forall>l\\<in>dom f.\n         \\<exists>L.\n            finite L \\<and>\n            (\\<forall>s p.\n                s \\<notin> L \\<and>\n                p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n                lc ([x \\<rightarrow> y] the\n   (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)))\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f.\n       \\<exists>L.\n          finite L \\<and>\n          (\\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              lc ([x \\<rightarrow> t'] the\n  (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "by simp"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] the (f l))\n\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)", "with fmap_ex_cof[of f pred_fl]"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f.\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            pred_fl s p (f l) l) \\<Longrightarrow>\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom f.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            pred_fl s p (f l) l)\n  \\<forall>l\\<in>dom f.\n     \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] the (f l))", "obtain L where \n        \"finite L\" and \"\\<forall>l\\<in>dom f. pred_cof L ([x \\<rightarrow> t'] the(f l))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f.\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            pred_fl s p (f l) l) \\<Longrightarrow>\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom f.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            pred_fl s p (f l) l)\n  \\<forall>l\\<in>dom f.\n     \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] the (f l))\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         \\<forall>l\\<in>dom f.\n            pred_cof L ([x \\<rightarrow> t'] the (f l))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding pred_cof_def pred_fl_def"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f.\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc ([x \\<rightarrow> t'] the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)) \\<Longrightarrow>\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>l\\<in>dom f.\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc ([x \\<rightarrow> t'] the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  \\<forall>l\\<in>dom f.\n     \\<exists>L.\n        finite L \\<and>\n        (\\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc ([x \\<rightarrow> t'] the\n(f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         \\<forall>l\\<in>dom f.\n            \\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] the\n   (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L\n  \\<forall>l\\<in>dom f. pred_cof L ([x \\<rightarrow> t'] the (f l))\n\ngoal (1 subgoal):\n 1. \\<And>x t'. lc t' \\<Longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)", "with pred_ssubstoption_lem[of x t' f \"pred_cof L\"]"], ["proof (chain)\npicking this:\n  (\\<forall>l\\<in>dom (\\<lambda>l. ssubst_option x t' (f l)).\n      pred_cof L (the (ssubst_option x t' (f l)))) =\n  (\\<forall>l\\<in>dom f. pred_cof L ([x \\<rightarrow> t'] the (f l)))\n  finite L\n  \\<forall>l\\<in>dom f. pred_cof L ([x \\<rightarrow> t'] the (f l))", "show \"lc ([x \\<rightarrow> t'] Obj f T)\""], ["proof (prove)\nusing this:\n  (\\<forall>l\\<in>dom (\\<lambda>l. ssubst_option x t' (f l)).\n      pred_cof L (the (ssubst_option x t' (f l)))) =\n  (\\<forall>l\\<in>dom f. pred_cof L ([x \\<rightarrow> t'] the (f l)))\n  finite L\n  \\<forall>l\\<in>dom f. pred_cof L ([x \\<rightarrow> t'] the (f l))\n\ngoal (1 subgoal):\n 1. lc ([x \\<rightarrow> t'] Obj f T)", "unfolding pred_cof_def"], ["proof (prove)\nusing this:\n  (\\<forall>l\\<in>dom (\\<lambda>l. ssubst_option x t' (f l)).\n      \\<forall>s p.\n         s \\<notin> L \\<and>\n         p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n         lc (the (ssubst_option x t'\n                   (f l))\\<^bsup>[Fvar s,Fvar p]\\<^esup>)) =\n  (\\<forall>l\\<in>dom f.\n      \\<forall>s p.\n         s \\<notin> L \\<and>\n         p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n         lc ([x \\<rightarrow> t'] the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  finite L\n  \\<forall>l\\<in>dom f.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        lc ([x \\<rightarrow> t'] the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc ([x \\<rightarrow> t'] Obj f T)", "by simp"], ["proof (state)\nthis:\n  lc ([x \\<rightarrow> t'] Obj f T)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] Obj f T)\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "case (Bnd L t)"], ["proof (state)\nthis:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>x t'.\n         lc t' \\<longrightarrow>\n         lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)))\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "note pred = this(2)"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>x t'.\n         lc t' \\<longrightarrow>\n         lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)))\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x t'.\n               lc t' \\<longrightarrow>\n               lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar\n              s,Fvar p]\\<^esup>)))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x t'.\n                            lc t' \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> t'] t))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x t'.\n       lc t' \\<longrightarrow>\n       (\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] t))", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t'.\n       lc t' \\<Longrightarrow>\n       \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] t)", "fix x t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t'.\n       lc t' \\<Longrightarrow>\n       \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] t)", "assume \"lc t'\""], ["proof (state)\nthis:\n  lc t'\n\ngoal (1 subgoal):\n 1. \\<And>x t'.\n       lc t' \\<Longrightarrow>\n       \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] t)", "with \\<open>finite L\\<close>"], ["proof (chain)\npicking this:\n  finite L\n  lc t'", "show \"\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] t)\""], ["proof (prove)\nusing this:\n  finite L\n  lc t'\n\ngoal (1 subgoal):\n 1. \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] t)", "unfolding pred_cof_def"], ["proof (prove)\nusing this:\n  finite L\n  lc t'\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "proof (\n          rule_tac x = \"L \\<union> {x}\" in exI, \n          intro conjI, simp, intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; lc t'; finite L; lc t'; finite L; lc t';\n        s \\<notin> L \\<union> {x} \\<and>\n        p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar\n                       s,Fvar p]\\<^esup>)", "fix s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; lc t'; finite L; lc t'; finite L; lc t';\n        s \\<notin> L \\<union> {x} \\<and>\n        p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar\n                       s,Fvar p]\\<^esup>)", "assume sp: \"s \\<notin> L \\<union> {x} \\<and> p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\""], ["proof (state)\nthis:\n  s \\<notin> L \\<union> {x} \\<and>\n  p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; lc t'; finite L; lc t'; finite L; lc t';\n        s \\<notin> L \\<union> {x} \\<and>\n        p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar\n                       s,Fvar p]\\<^esup>)", "hence \"x \\<notin> FV (Fvar s)\" and \"x \\<notin> FV (Fvar p)\""], ["proof (prove)\nusing this:\n  s \\<notin> L \\<union> {x} \\<and>\n  p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Fvar s) &&& x \\<notin> FV (Fvar p)", "by auto"], ["proof (state)\nthis:\n  x \\<notin> FV (Fvar s)\n  x \\<notin> FV (Fvar p)\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; lc t'; finite L; lc t'; finite L; lc t';\n        s \\<notin> L \\<union> {x} \\<and>\n        p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar\n                       s,Fvar p]\\<^esup>)", "from sp pred \\<open>lc t'\\<close>"], ["proof (chain)\npicking this:\n  s \\<notin> L \\<union> {x} \\<and>\n  p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>x t'.\n         lc t' \\<longrightarrow>\n         lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)))\n  lc t'", "have \"lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\""], ["proof (prove)\nusing this:\n  s \\<notin> L \\<union> {x} \\<and>\n  p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>x t'.\n         lc t' \\<longrightarrow>\n         lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)))\n  lc t'\n\ngoal (1 subgoal):\n 1. lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "by blast"], ["proof (state)\nthis:\n  lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; lc t'; finite L; lc t'; finite L; lc t';\n        s \\<notin> L \\<union> {x} \\<and>\n        p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar\n                       s,Fvar p]\\<^esup>)", "with ssubst_sopen_commute[OF \\<open>lc t'\\<close> \\<open>x \\<notin> FV (Fvar s)\\<close> \n                                     \\<open>x \\<notin> FV (Fvar p)\\<close>]"], ["proof (chain)\npicking this:\n  [x \\<rightarrow> t'] {?n \\<rightarrow> [Fvar s,Fvar p]} ?t =\n  {?n \\<rightarrow> [Fvar s,Fvar p]} [x \\<rightarrow> t'] ?t\n  lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "show \"lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  [x \\<rightarrow> t'] {?n \\<rightarrow> [Fvar s,Fvar p]} ?t =\n  {?n \\<rightarrow> [Fvar s,Fvar p]} [x \\<rightarrow> t'] ?t\n  lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x t'.\n     lc t' \\<longrightarrow>\n     (\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> t'] t))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x t'. lc t' \\<longrightarrow> lc ([x \\<rightarrow> t'] t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_sclose_eq_ssubst: \"\\<lbrakk> sa \\<noteq> pa; sa \\<notin> FV p; lc t \\<rbrakk> \n  \\<Longrightarrow> {n \\<rightarrow> [s,p]} {n \\<leftarrow> [sa,pa]} t = [sa \\<rightarrow> s] [pa \\<rightarrow> p] t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sa \\<noteq> pa; sa \\<notin> FV p; lc t\\<rbrakk>\n    \\<Longrightarrow> {n \\<rightarrow> [s,p]} {n \\<leftarrow> [sa,pa]} t =\n                      [sa \\<rightarrow> s] [pa \\<rightarrow> p] t", "by (rule_tac sa1 = sa and pa1 = pa and t1 = \"{n \\<leftarrow> [sa,pa]} t\" \n    in ssubst[OF ssubst_intro], simp+)"], ["", "lemma ssubst_sclose_commute[rule_format]:\n  \"\\<forall>x n s p t'. s \\<notin> FV t' \\<longrightarrow> p \\<notin> FV t' \\<longrightarrow> x \\<noteq> s \\<longrightarrow> x \\<noteq> p \n     \\<longrightarrow> [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t = {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x n s p t'.\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       x \\<noteq> s \\<longrightarrow>\n       x \\<noteq> p \\<longrightarrow>\n       [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t =\n       {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x n s p t'.\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       x \\<noteq> s \\<longrightarrow>\n       x \\<noteq> p \\<longrightarrow>\n       [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t =\n       {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t", "have\n    \"(\\<forall>x n s p t'. s \\<notin> FV t' \\<longrightarrow> p \\<notin> FV t' \\<longrightarrow> x \\<noteq> s \\<longrightarrow> x \\<noteq> p \n       \\<longrightarrow> [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t = {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t)\n    &(\\<forall>x n s p t'. s \\<notin> FV t' \\<longrightarrow> p \\<notin> FV t' \\<longrightarrow> x \\<noteq> s \\<longrightarrow> x \\<noteq> p \n       \\<longrightarrow> ssubst_option x t' (sclose_option n s p u) \n           = sclose_option n s p (ssubst_option x t' u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x n s p t'.\n        s \\<notin> FV t' \\<longrightarrow>\n        p \\<notin> FV t' \\<longrightarrow>\n        x \\<noteq> s \\<longrightarrow>\n        x \\<noteq> p \\<longrightarrow>\n        [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t =\n        {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t) \\<and>\n    (\\<forall>x n s p t'.\n        s \\<notin> FV t' \\<longrightarrow>\n        p \\<notin> FV t' \\<longrightarrow>\n        x \\<noteq> s \\<longrightarrow>\n        x \\<noteq> p \\<longrightarrow>\n        ssubst_option x t' (sclose_option n s p u) =\n        sclose_option n s p (ssubst_option x t' u))", "by (rule compat_sterm_sterm_option.induct, simp_all split: bVariable.split)"], ["proof (state)\nthis:\n  (\\<forall>x n s p t'.\n      s \\<notin> FV t' \\<longrightarrow>\n      p \\<notin> FV t' \\<longrightarrow>\n      x \\<noteq> s \\<longrightarrow>\n      x \\<noteq> p \\<longrightarrow>\n      [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t =\n      {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t) \\<and>\n  (\\<forall>x n s p t'.\n      s \\<notin> FV t' \\<longrightarrow>\n      p \\<notin> FV t' \\<longrightarrow>\n      x \\<noteq> s \\<longrightarrow>\n      x \\<noteq> p \\<longrightarrow>\n      ssubst_option x t' (sclose_option n s p u) =\n      sclose_option n s p (ssubst_option x t' u))\n\ngoal (1 subgoal):\n 1. \\<forall>x n s p t'.\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       x \\<noteq> s \\<longrightarrow>\n       x \\<noteq> p \\<longrightarrow>\n       [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t =\n       {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t", "from conjunct1[OF this]"], ["proof (chain)\npicking this:\n  \\<forall>x n s p t'.\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     x \\<noteq> s \\<longrightarrow>\n     x \\<noteq> p \\<longrightarrow>\n     [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t =\n     {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x n s p t'.\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     x \\<noteq> s \\<longrightarrow>\n     x \\<noteq> p \\<longrightarrow>\n     [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t =\n     {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t\n\ngoal (1 subgoal):\n 1. \\<forall>x n s p t'.\n       s \\<notin> FV t' \\<longrightarrow>\n       p \\<notin> FV t' \\<longrightarrow>\n       x \\<noteq> s \\<longrightarrow>\n       x \\<noteq> p \\<longrightarrow>\n       [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t =\n       {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t", "by assumption"], ["proof (state)\nthis:\n  \\<forall>x n s p t'.\n     s \\<notin> FV t' \\<longrightarrow>\n     p \\<notin> FV t' \\<longrightarrow>\n     x \\<noteq> s \\<longrightarrow>\n     x \\<noteq> p \\<longrightarrow>\n     [x \\<rightarrow> t'] {n \\<leftarrow> [s,p]} t =\n     {n \\<leftarrow> [s,p]} [x \\<rightarrow> t'] t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma body_lc_FV: \n  fixes t s p\n  assumes \"body t\"\n  shows \"lc (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "from assms"], ["proof (chain)\npicking this:\n  body t", "obtain L where \n    \"finite L\" and pred_sp: \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  body t\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding body_def"], ["proof (prove)\nusing this:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>s p.\n         s \\<notin> L \\<and>\n         p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n         lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "hence \"finite (L \\<union> FV t \\<union> {s} \\<union> {p})\""], ["proof (prove)\nusing this:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. finite (L \\<union> FV t \\<union> {s} \\<union> {p})", "by simp"], ["proof (state)\nthis:\n  finite (L \\<union> FV t \\<union> {s} \\<union> {p})\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "from exFresh_s_p_cof[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa", "obtain sa pa where sapa: \n    \"sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and> pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and> sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  \\<exists>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. (\\<And>sa pa.\n        sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n        pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n        sa \\<noteq> pa \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "hence \"sa \\<notin> FV t\" and \"pa \\<notin> FV t\" and \"sa \\<noteq> pa\" and \"sa \\<notin> FV (Fvar p)\""], ["proof (prove)\nusing this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. (sa \\<notin> FV t &&& pa \\<notin> FV t) &&&\n    sa \\<noteq> pa &&& sa \\<notin> FV (Fvar p)", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> FV t\n  pa \\<notin> FV t\n  sa \\<noteq> pa\n  sa \\<notin> FV (Fvar p)\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "from pred_sp sapa"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa", "have \"lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by blast"], ["proof (state)\nthis:\n  lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "with \n    ssubst_intro[OF \\<open>sa \\<notin> FV t\\<close> \\<open>pa \\<notin> FV t\\<close> \\<open>sa \\<noteq> pa\\<close> \\<open>sa \\<notin> FV (Fvar p)\\<close>] \n    ssubst_preserves_lc"], ["proof (chain)\npicking this:\n  {?n \\<rightarrow> [?s,Fvar p]} t =\n  [sa \\<rightarrow> ?s] [pa \\<rightarrow> Fvar\n     p] {?n \\<rightarrow> [Fvar sa,Fvar pa]} t\n  \\<lbrakk>lc ?t; lc ?t'\\<rbrakk>\n  \\<Longrightarrow> lc ([?x \\<rightarrow> ?t'] ?t)\n  lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "show \"lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  {?n \\<rightarrow> [?s,Fvar p]} t =\n  [sa \\<rightarrow> ?s] [pa \\<rightarrow> Fvar\n     p] {?n \\<rightarrow> [Fvar sa,Fvar pa]} t\n  \\<lbrakk>lc ?t; lc ?t'\\<rbrakk>\n  \\<Longrightarrow> lc ([?x \\<rightarrow> ?t'] ?t)\n  lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma body_lc: \n  fixes t s p\n  assumes \"body t\" and \"lc s\" and \"lc p\"\n  shows \"lc (t\\<^bsup>[s, p]\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[s,p]\\<^esup>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[s,p]\\<^esup>)", "have \"finite (FV t \\<union> FV p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (FV t \\<union> FV p)", "by simp"], ["proof (state)\nthis:\n  finite (FV t \\<union> FV p)\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[s,p]\\<^esup>)", "from exFresh_s_p_cof[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>s pa.\n     s \\<notin> FV t \\<union> FV p \\<and>\n     pa \\<notin> FV t \\<union> FV p \\<and> s \\<noteq> pa", "obtain sa pa where\n    \"sa \\<notin> FV t \\<union> FV p \\<and> pa \\<notin> FV t \\<union> FV p \\<and> sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  \\<exists>s pa.\n     s \\<notin> FV t \\<union> FV p \\<and>\n     pa \\<notin> FV t \\<union> FV p \\<and> s \\<noteq> pa\n\ngoal (1 subgoal):\n 1. (\\<And>sa pa.\n        sa \\<notin> FV t \\<union> FV p \\<and>\n        pa \\<notin> FV t \\<union> FV p \\<and>\n        sa \\<noteq> pa \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> FV t \\<union> FV p \\<and>\n  pa \\<notin> FV t \\<union> FV p \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[s,p]\\<^esup>)", "hence \"sa \\<notin> FV t\" and \"pa \\<notin> FV t\" and \"sa \\<noteq> pa\" and \"sa \\<notin> FV p\""], ["proof (prove)\nusing this:\n  sa \\<notin> FV t \\<union> FV p \\<and>\n  pa \\<notin> FV t \\<union> FV p \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. (sa \\<notin> FV t &&& pa \\<notin> FV t) &&&\n    sa \\<noteq> pa &&& sa \\<notin> FV p", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> FV t\n  pa \\<notin> FV t\n  sa \\<noteq> pa\n  sa \\<notin> FV p\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[s,p]\\<^esup>)", "from body_lc_FV[OF \\<open>body t\\<close>]"], ["proof (chain)\npicking this:\n  lc (t\\<^bsup>[Fvar ?s,Fvar ?p]\\<^esup>)", "have lc: \"lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  lc (t\\<^bsup>[Fvar ?s,Fvar ?p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by assumption"], ["proof (state)\nthis:\n  lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[s,p]\\<^esup>)", "from\n    ssubst_intro[OF \\<open>sa \\<notin> FV t\\<close> \\<open>pa \\<notin> FV t\\<close> \\<open>sa \\<noteq> pa\\<close> \\<open>sa \\<notin> FV p\\<close>] \n    ssubst_preserves_lc[OF lc] \\<open>lc s\\<close> \\<open>lc p\\<close>"], ["proof (chain)\npicking this:\n  {?n \\<rightarrow> [?s,p]} t =\n  [sa \\<rightarrow> ?s] [pa \\<rightarrow> p] {?n \\<rightarrow> [Fvar\n                           sa,Fvar pa]} t\n  lc ?t' \\<Longrightarrow>\n  lc ([?x \\<rightarrow> ?t'] (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))\n  lc s\n  lc p", "show \"lc (t\\<^bsup>[s,p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  {?n \\<rightarrow> [?s,p]} t =\n  [sa \\<rightarrow> ?s] [pa \\<rightarrow> p] {?n \\<rightarrow> [Fvar\n                           sa,Fvar pa]} t\n  lc ?t' \\<Longrightarrow>\n  lc ([?x \\<rightarrow> ?t'] (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))\n  lc s\n  lc p\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[s,p]\\<^esup>)", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  lc (t\\<^bsup>[s,p]\\<^esup>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lc_body: \n  fixes t s p\n  assumes \"lc t\" and \"s \\<noteq> p\"\n  shows \"body (\\<sigma>[s,p] t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. body \\<sigma>[s,p] t", "unfolding body_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>sa pa.\n           sa \\<notin> L \\<and>\n           pa \\<notin> L \\<and> sa \\<noteq> pa \\<longrightarrow>\n           lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. finite ?L \\<and>\n    (\\<forall>sa pa.\n        sa \\<notin> ?L \\<and>\n        pa \\<notin> ?L \\<and> sa \\<noteq> pa \\<longrightarrow>\n        lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))", "have \n    \"\\<forall>sa pa. sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and> pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and> sa \\<noteq> pa\n      \\<longrightarrow> lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<longrightarrow>\n       lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "fix sa :: fVariable and pa :: fVariable"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "assume \"sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and> pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and> sa \\<noteq> pa\""], ["proof (state)\nthis:\n  sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "hence \"s \\<notin> FV (Fvar pa)\""], ["proof (prove)\nusing this:\n  sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and> sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. s \\<notin> FV (Fvar pa)", "by auto"], ["proof (state)\nthis:\n  s \\<notin> FV (Fvar pa)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "from \n      sopen_sclose_eq_ssubst[OF \\<open>s \\<noteq> p\\<close> this \\<open>lc t\\<close>] \n      ssubst_preserves_lc[OF \\<open>lc t\\<close>]"], ["proof (chain)\npicking this:\n  {?n \\<rightarrow> [?s,Fvar pa]} {?n \\<leftarrow> [s,p]} t =\n  [s \\<rightarrow> ?s] [p \\<rightarrow> Fvar pa] t\n  lc ?t' \\<Longrightarrow> lc ([?x \\<rightarrow> ?t'] t)", "show \"lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  {?n \\<rightarrow> [?s,Fvar pa]} {?n \\<leftarrow> [s,p]} t =\n  [s \\<rightarrow> ?s] [p \\<rightarrow> Fvar pa] t\n  lc ?t' \\<Longrightarrow> lc ([?x \\<rightarrow> ?t'] t)\n\ngoal (1 subgoal):\n 1. lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by (simp add: openz_def closez_def)"], ["proof (state)\nthis:\n  lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. finite ?L \\<and>\n    (\\<forall>sa pa.\n        sa \\<notin> ?L \\<and>\n        pa \\<notin> ?L \\<and> sa \\<noteq> pa \\<longrightarrow>\n        lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))", "thus \n    \"finite (FV t \\<union> {s} \\<union> {p}) \n     \\<and> (\\<forall>sa pa. sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and> pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and> sa \\<noteq> pa\n         \\<longrightarrow> lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))\""], ["proof (prove)\nusing this:\n  \\<forall>sa pa.\n     sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. finite (FV t \\<union> {s} \\<union> {p}) \\<and>\n    (\\<forall>sa pa.\n        sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n        pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n        sa \\<noteq> pa \\<longrightarrow>\n        lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))", "by simp"], ["proof (state)\nthis:\n  finite (FV t \\<union> {s} \\<union> {p}) \\<and>\n  (\\<forall>sa pa.\n      sa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n      pa \\<notin> FV t \\<union> {s} \\<union> {p} \\<and>\n      sa \\<noteq> pa \\<longrightarrow>\n      lc (\\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ssubst_preserves_lcE_lem[rule_format]:\n  fixes t\n  assumes \"lc t\"\n  shows \"\\<forall>x u t'. t = [x \\<rightarrow> u] t' \\<longrightarrow> lc u \\<longrightarrow> lc t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x u t'.\n       t = [x \\<rightarrow> u] t' \\<longrightarrow>\n       lc u \\<longrightarrow> lc t'", "using assms"], ["proof (prove)\nusing this:\n  lc t\n\ngoal (1 subgoal):\n 1. \\<forall>x u t'.\n       t = [x \\<rightarrow> u] t' \\<longrightarrow>\n       lc u \\<longrightarrow> lc t'", "proof \n  (induct\n    taking: \n    \"\\<lambda>t. \\<forall>x u t'. t = [x \\<rightarrow> u] t' \\<longrightarrow> lc u \\<longrightarrow> body t'\" \n    rule: lc_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<forall>xa u t'.\n          Fvar x = [xa \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 2. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        lc a;\n        \\<forall>x u t'.\n           a = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            Call t l a =\n                            [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> lc t'\n 3. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        \\<forall>x ua t'.\n           u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n           lc ua \\<longrightarrow> body t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x ua t'.\n                            Upd t l u =\n                            [x \\<rightarrow> ua] t' \\<longrightarrow>\n                            lc ua \\<longrightarrow> lc t'\n 4. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 5. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "case Fvar"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<forall>xa u t'.\n          Fvar x = [xa \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 2. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        lc a;\n        \\<forall>x u t'.\n           a = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            Call t l a =\n                            [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> lc t'\n 3. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        \\<forall>x ua t'.\n           u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n           lc ua \\<longrightarrow> body t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x ua t'.\n                            Upd t l u =\n                            [x \\<rightarrow> ua] t' \\<longrightarrow>\n                            lc ua \\<longrightarrow> lc t'\n 4. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 5. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa u t'.\n       Fvar x_ = [xa \\<rightarrow> u] t' \\<longrightarrow>\n       lc u \\<longrightarrow> lc t'", "by (intro strip, case_tac t', simp_all)"], ["proof (state)\nthis:\n  \\<forall>xa u t'.\n     Fvar x_ = [xa \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        lc a;\n        \\<forall>x u t'.\n           a = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            Call t l a =\n                            [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> lc t'\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        \\<forall>x ua t'.\n           u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n           lc ua \\<longrightarrow> body t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x ua t'.\n                            Upd t l u =\n                            [x \\<rightarrow> ua] t' \\<longrightarrow>\n                            lc ua \\<longrightarrow> lc t'\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        lc a;\n        \\<forall>x u t'.\n           a = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            Call t l a =\n                            [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> lc t'\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        \\<forall>x ua t'.\n           u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n           lc ua \\<longrightarrow> body t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x ua t'.\n                            Upd t l u =\n                            [x \\<rightarrow> ua] t' \\<longrightarrow>\n                            lc ua \\<longrightarrow> lc t'\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "case Call"], ["proof (state)\nthis:\n  lc t_\n  \\<forall>x u t'.\n     t_ = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n  lc a_\n  \\<forall>x u t'.\n     a_ = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n\ngoal (4 subgoals):\n 1. \\<And>t l a.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        lc a;\n        \\<forall>x u t'.\n           a = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            Call t l a =\n                            [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> lc t'\n 2. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        \\<forall>x ua t'.\n           u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n           lc ua \\<longrightarrow> body t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x ua t'.\n                            Upd t l u =\n                            [x \\<rightarrow> ua] t' \\<longrightarrow>\n                            lc ua \\<longrightarrow> lc t'\n 3. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 4. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "thus ?case"], ["proof (prove)\nusing this:\n  lc t_\n  \\<forall>x u t'.\n     t_ = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n  lc a_\n  \\<forall>x u t'.\n     a_ = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n\ngoal (1 subgoal):\n 1. \\<forall>x u t'.\n       Call t_ l_ a_ = [x \\<rightarrow> u] t' \\<longrightarrow>\n       lc u \\<longrightarrow> lc t'", "by (intro strip, case_tac t', simp_all)"], ["proof (state)\nthis:\n  \\<forall>x u t'.\n     Call t_ l_ a_ = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        \\<forall>x ua t'.\n           u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n           lc ua \\<longrightarrow> body t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x ua t'.\n                            Upd t l u =\n                            [x \\<rightarrow> ua] t' \\<longrightarrow>\n                            lc ua \\<longrightarrow> lc t'\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        \\<forall>x ua t'.\n           u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n           lc ua \\<longrightarrow> body t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x ua t'.\n                            Upd t l u =\n                            [x \\<rightarrow> ua] t' \\<longrightarrow>\n                            lc ua \\<longrightarrow> lc t'\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "case (Upd t l u)"], ["proof (state)\nthis:\n  lc t\n  \\<forall>x u t'.\n     t = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n  \\<forall>x ua t'.\n     u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n     lc ua \\<longrightarrow> body t'\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        \\<forall>x ua t'.\n           u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n           lc ua \\<longrightarrow> body t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x ua t'.\n                            Upd t l u =\n                            [x \\<rightarrow> ua] t' \\<longrightarrow>\n                            lc ua \\<longrightarrow> lc t'\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "note pred_t = this(2) and pred_u = this(3)"], ["proof (state)\nthis:\n  \\<forall>x u t'.\n     t = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n  \\<forall>x ua t'.\n     u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n     lc ua \\<longrightarrow> body t'\n\ngoal (3 subgoals):\n 1. \\<And>t l u.\n       \\<lbrakk>lc t;\n        \\<forall>x u t'.\n           t = [x \\<rightarrow> u] t' \\<longrightarrow>\n           lc u \\<longrightarrow> lc t';\n        \\<forall>x ua t'.\n           u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n           lc ua \\<longrightarrow> body t'\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x ua t'.\n                            Upd t l u =\n                            [x \\<rightarrow> ua] t' \\<longrightarrow>\n                            lc ua \\<longrightarrow> lc t'\n 2. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 3. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x ua t'.\n       Upd t l u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n       lc ua \\<longrightarrow> lc t'", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x ua t'.\n       \\<lbrakk>Upd t l u = [x \\<rightarrow> ua] t'; lc ua\\<rbrakk>\n       \\<Longrightarrow> lc t'", "fix x v t''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x ua t'.\n       \\<lbrakk>Upd t l u = [x \\<rightarrow> ua] t'; lc ua\\<rbrakk>\n       \\<Longrightarrow> lc t'", "assume \"Upd t l u = [x \\<rightarrow> v] t''\" and \"lc v\""], ["proof (state)\nthis:\n  Upd t l u = [x \\<rightarrow> v] t''\n  lc v\n\ngoal (1 subgoal):\n 1. \\<And>x ua t'.\n       \\<lbrakk>Upd t l u = [x \\<rightarrow> ua] t'; lc ua\\<rbrakk>\n       \\<Longrightarrow> lc t'", "from this(1)"], ["proof (chain)\npicking this:\n  Upd t l u = [x \\<rightarrow> v] t''", "have t'': \"(\\<exists>t' u'. t'' = Upd t' l u') \\<or> (t'' = Fvar x)\""], ["proof (prove)\nusing this:\n  Upd t l u = [x \\<rightarrow> v] t''\n\ngoal (1 subgoal):\n 1. (\\<exists>t' u'. t'' = Upd t' l u') \\<or> t'' = Fvar x", "proof (cases t'', auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t'' = Fvar x2;\n        Upd t l u = (if x = x2 then v else Fvar x2)\\<rbrakk>\n       \\<Longrightarrow> x2 = x", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t'' = Fvar x2;\n        Upd t l u = (if x = x2 then v else Fvar x2)\\<rbrakk>\n       \\<Longrightarrow> x2 = x", "assume \"Upd t l u = (if x = y then v else Fvar y)\""], ["proof (state)\nthis:\n  Upd t l u = (if x = y then v else Fvar y)\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t'' = Fvar x2;\n        Upd t l u = (if x = x2 then v else Fvar x2)\\<rbrakk>\n       \\<Longrightarrow> x2 = x", "thus \"y = x\""], ["proof (prove)\nusing this:\n  Upd t l u = (if x = y then v else Fvar y)\n\ngoal (1 subgoal):\n 1. y = x", "by (case_tac \"y = x\", auto)"], ["proof (state)\nthis:\n  y = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>t' u'. t'' = Upd t' l u') \\<or> t'' = Fvar x\n\ngoal (1 subgoal):\n 1. \\<And>x ua t'.\n       \\<lbrakk>Upd t l u = [x \\<rightarrow> ua] t'; lc ua\\<rbrakk>\n       \\<Longrightarrow> lc t'", "show \"lc t''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc t''", "proof (cases \"t'' = Fvar x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t'' = Fvar x \\<Longrightarrow> lc t''\n 2. t'' \\<noteq> Fvar x \\<Longrightarrow> lc t''", "case True"], ["proof (state)\nthis:\n  t'' = Fvar x\n\ngoal (2 subgoals):\n 1. t'' = Fvar x \\<Longrightarrow> lc t''\n 2. t'' \\<noteq> Fvar x \\<Longrightarrow> lc t''", "thus ?thesis"], ["proof (prove)\nusing this:\n  t'' = Fvar x\n\ngoal (1 subgoal):\n 1. lc t''", "by simp"], ["proof (state)\nthis:\n  lc t''\n\ngoal (1 subgoal):\n 1. t'' \\<noteq> Fvar x \\<Longrightarrow> lc t''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t'' \\<noteq> Fvar x \\<Longrightarrow> lc t''", "case False"], ["proof (state)\nthis:\n  t'' \\<noteq> Fvar x\n\ngoal (1 subgoal):\n 1. t'' \\<noteq> Fvar x \\<Longrightarrow> lc t''", "with \\<open>Upd t l u = [x \\<rightarrow> v] t''\\<close> t''"], ["proof (chain)\npicking this:\n  Upd t l u = [x \\<rightarrow> v] t''\n  (\\<exists>t' u'. t'' = Upd t' l u') \\<or> t'' = Fvar x\n  t'' \\<noteq> Fvar x", "show ?thesis"], ["proof (prove)\nusing this:\n  Upd t l u = [x \\<rightarrow> v] t''\n  (\\<exists>t' u'. t'' = Upd t' l u') \\<or> t'' = Fvar x\n  t'' \\<noteq> Fvar x\n\ngoal (1 subgoal):\n 1. lc t''", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t' u'.\n       \\<lbrakk>Upd t l u = [x \\<rightarrow> v] Upd t' l u';\n        Upd t' l u' \\<noteq> Fvar x; t'' = Upd t' l u'\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t' l u')", "fix t' u'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t' u'.\n       \\<lbrakk>Upd t l u = [x \\<rightarrow> v] Upd t' l u';\n        Upd t' l u' \\<noteq> Fvar x; t'' = Upd t' l u'\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t' l u')", "assume \"Upd t l u = [x \\<rightarrow> v] Upd t' l u'\""], ["proof (state)\nthis:\n  Upd t l u = [x \\<rightarrow> v] Upd t' l u'\n\ngoal (1 subgoal):\n 1. \\<And>t' u'.\n       \\<lbrakk>Upd t l u = [x \\<rightarrow> v] Upd t' l u';\n        Upd t' l u' \\<noteq> Fvar x; t'' = Upd t' l u'\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t' l u')", "hence \"t = [x \\<rightarrow> v] t'\" and \"u = [x \\<rightarrow> v] u'\""], ["proof (prove)\nusing this:\n  Upd t l u = [x \\<rightarrow> v] Upd t' l u'\n\ngoal (1 subgoal):\n 1. t = [x \\<rightarrow> v] t' &&& u = [x \\<rightarrow> v] u'", "by auto"], ["proof (state)\nthis:\n  t = [x \\<rightarrow> v] t'\n  u = [x \\<rightarrow> v] u'\n\ngoal (1 subgoal):\n 1. \\<And>t' u'.\n       \\<lbrakk>Upd t l u = [x \\<rightarrow> v] Upd t' l u';\n        Upd t' l u' \\<noteq> Fvar x; t'' = Upd t' l u'\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t' l u')", "with \\<open>lc v\\<close> pred_t pred_u lc_upd[of t' l u']"], ["proof (chain)\npicking this:\n  lc v\n  \\<forall>x u t'.\n     t = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n  \\<forall>x ua t'.\n     u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n     lc ua \\<longrightarrow> body t'\n  lc (Upd t' l u') = (lc t' \\<and> body u')\n  t = [x \\<rightarrow> v] t'\n  u = [x \\<rightarrow> v] u'", "show \"lc (Upd t' l u')\""], ["proof (prove)\nusing this:\n  lc v\n  \\<forall>x u t'.\n     t = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n  \\<forall>x ua t'.\n     u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n     lc ua \\<longrightarrow> body t'\n  lc (Upd t' l u') = (lc t' \\<and> body u')\n  t = [x \\<rightarrow> v] t'\n  u = [x \\<rightarrow> v] u'\n\ngoal (1 subgoal):\n 1. lc (Upd t' l u')", "by auto"], ["proof (state)\nthis:\n  lc (Upd t' l u')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lc t''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lc t''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x ua t'.\n     Upd t l u = [x \\<rightarrow> ua] t' \\<longrightarrow>\n     lc ua \\<longrightarrow> lc t'\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "case (Obj f T)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<forall>x u t'.\n        the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n        lc u \\<longrightarrow> body t'\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "note pred = this"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f.\n     \\<forall>x u t'.\n        the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n        lc u \\<longrightarrow> body t'\n\ngoal (2 subgoals):\n 1. \\<And>f T.\n       \\<forall>l\\<in>dom f.\n          \\<forall>x u t'.\n             the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n             lc u \\<longrightarrow> body t' \\<Longrightarrow>\n       \\<forall>x u t'.\n          Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n          lc u \\<longrightarrow> lc t'\n 2. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x u t'.\n       Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n       lc u \\<longrightarrow> lc t'", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>Obj f T = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc t'", "fix x v t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>Obj f T = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc t'", "assume \"Obj f T = [x \\<rightarrow> v] t'\" and \"lc v\""], ["proof (state)\nthis:\n  Obj f T = [x \\<rightarrow> v] t'\n  lc v\n\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>Obj f T = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc t'", "from this(1)"], ["proof (chain)\npicking this:\n  Obj f T = [x \\<rightarrow> v] t'", "have t': \"(\\<exists>f'. t' = Obj f' T) \\<or> (t' = Fvar x)\""], ["proof (prove)\nusing this:\n  Obj f T = [x \\<rightarrow> v] t'\n\ngoal (1 subgoal):\n 1. (\\<exists>f'. t' = Obj f' T) \\<or> t' = Fvar x", "proof (cases t', auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t' = Fvar x2;\n        Obj f T = (if x = x2 then v else Fvar x2)\\<rbrakk>\n       \\<Longrightarrow> x2 = x", "fix y :: fVariable"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t' = Fvar x2;\n        Obj f T = (if x = x2 then v else Fvar x2)\\<rbrakk>\n       \\<Longrightarrow> x2 = x", "assume \"Obj f T = (if x = y then v else Fvar y)\""], ["proof (state)\nthis:\n  Obj f T = (if x = y then v else Fvar y)\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<lbrakk>t' = Fvar x2;\n        Obj f T = (if x = x2 then v else Fvar x2)\\<rbrakk>\n       \\<Longrightarrow> x2 = x", "thus \"y = x\""], ["proof (prove)\nusing this:\n  Obj f T = (if x = y then v else Fvar y)\n\ngoal (1 subgoal):\n 1. y = x", "by (case_tac \"y = x\", auto)"], ["proof (state)\nthis:\n  y = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<exists>f'. t' = Obj f' T) \\<or> t' = Fvar x\n\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>Obj f T = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc t'", "show \"lc t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc t'", "proof (cases \"t' = Fvar x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t' = Fvar x \\<Longrightarrow> lc t'\n 2. t' \\<noteq> Fvar x \\<Longrightarrow> lc t'", "case True"], ["proof (state)\nthis:\n  t' = Fvar x\n\ngoal (2 subgoals):\n 1. t' = Fvar x \\<Longrightarrow> lc t'\n 2. t' \\<noteq> Fvar x \\<Longrightarrow> lc t'", "thus ?thesis"], ["proof (prove)\nusing this:\n  t' = Fvar x\n\ngoal (1 subgoal):\n 1. lc t'", "by simp"], ["proof (state)\nthis:\n  lc t'\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Fvar x \\<Longrightarrow> lc t'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t' \\<noteq> Fvar x \\<Longrightarrow> lc t'", "case False"], ["proof (state)\nthis:\n  t' \\<noteq> Fvar x\n\ngoal (1 subgoal):\n 1. t' \\<noteq> Fvar x \\<Longrightarrow> lc t'", "with \\<open>Obj f T = [x \\<rightarrow> v] t'\\<close> t'"], ["proof (chain)\npicking this:\n  Obj f T = [x \\<rightarrow> v] t'\n  (\\<exists>f'. t' = Obj f' T) \\<or> t' = Fvar x\n  t' \\<noteq> Fvar x", "show ?thesis"], ["proof (prove)\nusing this:\n  Obj f T = [x \\<rightarrow> v] t'\n  (\\<exists>f'. t' = Obj f' T) \\<or> t' = Fvar x\n  t' \\<noteq> Fvar x\n\ngoal (1 subgoal):\n 1. lc t'", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f'.\n       \\<lbrakk>Obj f T = [x \\<rightarrow> v] Obj f' T;\n        Obj f' T \\<noteq> Fvar x; t' = Obj f' T\\<rbrakk>\n       \\<Longrightarrow> lc (Obj f' T)", "fix f'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f'.\n       \\<lbrakk>Obj f T = [x \\<rightarrow> v] Obj f' T;\n        Obj f' T \\<noteq> Fvar x; t' = Obj f' T\\<rbrakk>\n       \\<Longrightarrow> lc (Obj f' T)", "assume \"Obj f T = [x \\<rightarrow> v] Obj f' T\""], ["proof (state)\nthis:\n  Obj f T = [x \\<rightarrow> v] Obj f' T\n\ngoal (1 subgoal):\n 1. \\<And>f'.\n       \\<lbrakk>Obj f T = [x \\<rightarrow> v] Obj f' T;\n        Obj f' T \\<noteq> Fvar x; t' = Obj f' T\\<rbrakk>\n       \\<Longrightarrow> lc (Obj f' T)", "hence\n          ssubst: \"\\<forall>l\\<in>dom f. the(f l) = [x \\<rightarrow> v] the(f' l)\" and\n          \"dom f = dom f'\""], ["proof (prove)\nusing this:\n  Obj f T = [x \\<rightarrow> v] Obj f' T\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom f. the (f l) = [x \\<rightarrow> v] the (f' l) &&&\n    dom f = dom f'", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. the (f l) = [x \\<rightarrow> v] the (f' l)\n  dom f = dom f'\n\ngoal (1 subgoal):\n 1. \\<And>f'.\n       \\<lbrakk>Obj f T = [x \\<rightarrow> v] Obj f' T;\n        Obj f' T \\<noteq> Fvar x; t' = Obj f' T\\<rbrakk>\n       \\<Longrightarrow> lc (Obj f' T)", "with pred \\<open>lc v\\<close> lc_obj[of f' T]"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>x u t'.\n        the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n        lc u \\<longrightarrow> body t'\n  lc v\n  lc (Obj f' T) = (\\<forall>l\\<in>dom f'. body (the (f' l)))\n  \\<forall>l\\<in>dom f. the (f l) = [x \\<rightarrow> v] the (f' l)\n  dom f = dom f'", "show \"lc (Obj f' T)\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>x u t'.\n        the (f l) = [x \\<rightarrow> u] t' \\<longrightarrow>\n        lc u \\<longrightarrow> body t'\n  lc v\n  lc (Obj f' T) = (\\<forall>l\\<in>dom f'. body (the (f' l)))\n  \\<forall>l\\<in>dom f. the (f l) = [x \\<rightarrow> v] the (f' l)\n  dom f = dom f'\n\ngoal (1 subgoal):\n 1. lc (Obj f' T)", "by auto"], ["proof (state)\nthis:\n  lc (Obj f' T)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lc t'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lc t'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x u t'.\n     Obj f T = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> lc t'\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "case (Bnd L t)"], ["proof (state)\nthis:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>x u t'.\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         [x \\<rightarrow> u] t' \\<longrightarrow>\n         lc u \\<longrightarrow> lc t')\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "note pred = this(2)"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>x u t'.\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         [x \\<rightarrow> u] t' \\<longrightarrow>\n         lc u \\<longrightarrow> lc t')\n\ngoal (1 subgoal):\n 1. \\<And>L t.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n           (\\<forall>x u t'.\n               (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n               [x \\<rightarrow> u] t' \\<longrightarrow>\n               lc u \\<longrightarrow> lc t')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x u t'.\n                            t = [x \\<rightarrow> u] t' \\<longrightarrow>\n                            lc u \\<longrightarrow> body t'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x u t'.\n       t = [x \\<rightarrow> u] t' \\<longrightarrow>\n       lc u \\<longrightarrow> body t'", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>t = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> body t'", "fix x v t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>t = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> body t'", "assume \"t = [x \\<rightarrow> v] t'\" and \"lc v\""], ["proof (state)\nthis:\n  t = [x \\<rightarrow> v] t'\n  lc v\n\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>t = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> body t'", "from \\<open>finite L\\<close> exFresh_s_p_cof[of \"L \\<union> {x} \\<union> FV t'\"]"], ["proof (chain)\npicking this:\n  finite L\n  finite (L \\<union> {x} \\<union> FV t') \\<Longrightarrow>\n  \\<exists>s p.\n     s \\<notin> L \\<union> {x} \\<union> FV t' \\<and>\n     p \\<notin> L \\<union> {x} \\<union> FV t' \\<and> s \\<noteq> p", "obtain s p where \n      \"s \\<notin> L\" and \"p \\<notin> L\" and \"s \\<noteq> p\" and\n      \"x \\<notin> FV (Fvar s)\" and \"x \\<notin> FV (Fvar p)\" and\n      \"s \\<notin> FV t'\" and \"p \\<notin> FV t'\""], ["proof (prove)\nusing this:\n  finite L\n  finite (L \\<union> {x} \\<union> FV t') \\<Longrightarrow>\n  \\<exists>s p.\n     s \\<notin> L \\<union> {x} \\<union> FV t' \\<and>\n     p \\<notin> L \\<union> {x} \\<union> FV t' \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>s p.\n        \\<lbrakk>s \\<notin> L; p \\<notin> L; s \\<noteq> p;\n         x \\<notin> FV (Fvar s); x \\<notin> FV (Fvar p); s \\<notin> FV t';\n         p \\<notin> FV t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n  x \\<notin> FV (Fvar s)\n  x \\<notin> FV (Fvar p)\n  s \\<notin> FV t'\n  p \\<notin> FV t'\n\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>t = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> body t'", "from \n      \\<open>t = [x \\<rightarrow> v] t'\\<close>\n      ssubst_sopen_commute[OF \\<open>lc v\\<close> \\<open>x \\<notin> FV (Fvar s)\\<close> \\<open>x \\<notin> FV (Fvar p)\\<close>]"], ["proof (chain)\npicking this:\n  t = [x \\<rightarrow> v] t'\n  [x \\<rightarrow> v] {?n \\<rightarrow> [Fvar s,Fvar p]} ?t =\n  {?n \\<rightarrow> [Fvar s,Fvar p]} [x \\<rightarrow> v] ?t", "have \"(t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) = [x \\<rightarrow> v] (t'\\<^bsup>[Fvar s, Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  t = [x \\<rightarrow> v] t'\n  [x \\<rightarrow> v] {?n \\<rightarrow> [Fvar s,Fvar p]} ?t =\n  {?n \\<rightarrow> [Fvar s,Fvar p]} [x \\<rightarrow> v] ?t\n\ngoal (1 subgoal):\n 1. (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n    [x \\<rightarrow> v] (t'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n  [x \\<rightarrow> v] (t'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>t = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> body t'", "with \n      \\<open>s \\<notin> L\\<close> \\<open>p \\<notin> L\\<close> \\<open>s \\<noteq> p\\<close> \\<open>lc v\\<close> pred"], ["proof (chain)\npicking this:\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n  lc v\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>x u t'.\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         [x \\<rightarrow> u] t' \\<longrightarrow>\n         lc u \\<longrightarrow> lc t')\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n  [x \\<rightarrow> v] (t'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "have \"lc (t'\\<^bsup>[Fvar s, Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n  lc v\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and>\n     (\\<forall>x u t'.\n         (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n         [x \\<rightarrow> u] t' \\<longrightarrow>\n         lc u \\<longrightarrow> lc t')\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) =\n  [x \\<rightarrow> v] (t'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc (t'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by blast"], ["proof (state)\nthis:\n  lc (t'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>x u t'.\n       \\<lbrakk>t = [x \\<rightarrow> u] t'; lc u\\<rbrakk>\n       \\<Longrightarrow> body t'", "from \n      lc_body[OF this \\<open>s \\<noteq> p\\<close>]\n      sclose_sopen_eq_t[OF \\<open>s \\<notin> FV t'\\<close> \\<open>p \\<notin> FV t'\\<close> \\<open>s \\<noteq> p\\<close>]"], ["proof (chain)\npicking this:\n  body \\<sigma>[s,p] (t'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  {?n \\<leftarrow> [s,p]} {?n \\<rightarrow> [Fvar s,Fvar p]} t' = t'", "show \"body t'\""], ["proof (prove)\nusing this:\n  body \\<sigma>[s,p] (t'\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  {?n \\<leftarrow> [s,p]} {?n \\<rightarrow> [Fvar s,Fvar p]} t' = t'\n\ngoal (1 subgoal):\n 1. body t'", "by (auto simp: openz_def closez_def)"], ["proof (state)\nthis:\n  body t'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x u t'.\n     t = [x \\<rightarrow> u] t' \\<longrightarrow>\n     lc u \\<longrightarrow> body t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ssubst_preserves_lcE: \"\\<lbrakk> lc ([x \\<rightarrow> t'] t); lc t' \\<rbrakk> \\<Longrightarrow> lc t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lc ([x \\<rightarrow> t'] t); lc t'\\<rbrakk>\n    \\<Longrightarrow> lc t", "by (drule_tac t = \"[x \\<rightarrow> t'] t\" and x = x and u = t' and t' = t \n    in ssubst_preserves_lcE_lem, simp+)"], ["", "lemma obj_openz_lc: \"\\<lbrakk> lc (Obj f T); lc p; l \\<in> dom f \\<rbrakk> \\<Longrightarrow> lc (the(f l)\\<^bsup>[Obj f T, p]\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>lc (Obj f T); lc p; l \\<in> dom f\\<rbrakk>\n    \\<Longrightarrow> lc (the (f l)\\<^bsup>[Obj f T,p]\\<^esup>)", "by (rule_tac s = \"Obj f T\" and p = p in body_lc, (simp add: lc_obj)+)"], ["", "lemma obj_insert_lc: \n  fixes f T t l\n  assumes \"lc (Obj f T)\" and \"body t\"\n  shows \"lc (Obj (f(l \\<mapsto> t)) T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc (Obj (f(l \\<mapsto> t)) T)", "proof (rule ssubst[OF lc_obj], rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>la.\n       la \\<in> dom (f(l \\<mapsto> t)) \\<Longrightarrow>\n       body (the ((f(l \\<mapsto> t)) la))", "fix l' :: Label"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>la.\n       la \\<in> dom (f(l \\<mapsto> t)) \\<Longrightarrow>\n       body (the ((f(l \\<mapsto> t)) la))", "assume \"l' \\<in> dom (f(l \\<mapsto> t))\""], ["proof (state)\nthis:\n  l' \\<in> dom (f(l \\<mapsto> t))\n\ngoal (1 subgoal):\n 1. \\<And>la.\n       la \\<in> dom (f(l \\<mapsto> t)) \\<Longrightarrow>\n       body (the ((f(l \\<mapsto> t)) la))", "with assms"], ["proof (chain)\npicking this:\n  lc (Obj f T)\n  body t\n  l' \\<in> dom (f(l \\<mapsto> t))", "show \"body (the ((f(l \\<mapsto> t)) l'))\""], ["proof (prove)\nusing this:\n  lc (Obj f T)\n  body t\n  l' \\<in> dom (f(l \\<mapsto> t))\n\ngoal (1 subgoal):\n 1. body (the ((f(l \\<mapsto> t)) l'))", "by (cases \"l' = l\", (auto simp: lc_obj))"], ["proof (state)\nthis:\n  body (the ((f(l \\<mapsto> t)) l'))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ssubst_preserves_body[simp]:\n  fixes t t' x\n  assumes \"body t\" and \"lc t'\"\n  shows \"body ([x \\<rightarrow> t'] t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. body ([x \\<rightarrow> t'] t)", "unfolding body_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "have \n    \"\\<forall>s p. s \\<notin> FV t' \\<union> {x} \\<and> p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p\n      \\<longrightarrow> lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s p.\n       s \\<notin> FV t' \\<union> {x} \\<and>\n       p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<longrightarrow>\n       lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       s \\<notin> FV t' \\<union> {x} \\<and>\n       p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<Longrightarrow>\n       lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "fix s :: fVariable and p :: fVariable"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       s \\<notin> FV t' \\<union> {x} \\<and>\n       p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<Longrightarrow>\n       lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "from body_lc_FV[OF \\<open>body t\\<close>]"], ["proof (chain)\npicking this:\n  lc (t\\<^bsup>[Fvar ?s,Fvar ?p]\\<^esup>)", "have \"lc ({0 \\<rightarrow> [Fvar s,Fvar p]} t)\""], ["proof (prove)\nusing this:\n  lc (t\\<^bsup>[Fvar ?s,Fvar ?p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc ({0 \\<rightarrow> [Fvar s,Fvar p]} t)", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  lc ({0 \\<rightarrow> [Fvar s,Fvar p]} t)\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       s \\<notin> FV t' \\<union> {x} \\<and>\n       p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<Longrightarrow>\n       lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "from ssubst_preserves_lc[OF this \\<open>lc t'\\<close>]"], ["proof (chain)\npicking this:\n  lc ([?x \\<rightarrow> t'] {0 \\<rightarrow> [Fvar s,Fvar p]} t)", "have \"lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\""], ["proof (prove)\nusing this:\n  lc ([?x \\<rightarrow> t'] {0 \\<rightarrow> [Fvar s,Fvar p]} t)\n\ngoal (1 subgoal):\n 1. lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       s \\<notin> FV t' \\<union> {x} \\<and>\n       p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<Longrightarrow>\n       lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "moreover"], ["proof (state)\nthis:\n  lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       s \\<notin> FV t' \\<union> {x} \\<and>\n       p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<Longrightarrow>\n       lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "assume \"s \\<notin> FV t' \\<union> {x} \\<and> p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p\""], ["proof (state)\nthis:\n  s \\<notin> FV t' \\<union> {x} \\<and>\n  p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       s \\<notin> FV t' \\<union> {x} \\<and>\n       p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<Longrightarrow>\n       lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "hence \"x \\<notin> FV (Fvar s)\" and \"x \\<notin> FV (Fvar p)\""], ["proof (prove)\nusing this:\n  s \\<notin> FV t' \\<union> {x} \\<and>\n  p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Fvar s) &&& x \\<notin> FV (Fvar p)", "by auto"], ["proof (state)\nthis:\n  x \\<notin> FV (Fvar s)\n  x \\<notin> FV (Fvar p)\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       s \\<notin> FV t' \\<union> {x} \\<and>\n       p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<Longrightarrow>\n       lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "note ssubst_sopen_commute[OF \\<open>lc t'\\<close> this]"], ["proof (state)\nthis:\n  [x \\<rightarrow> t'] {?n \\<rightarrow> [Fvar s,Fvar p]} ?t =\n  {?n \\<rightarrow> [Fvar s,Fvar p]} [x \\<rightarrow> t'] ?t\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       s \\<notin> FV t' \\<union> {x} \\<and>\n       p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<Longrightarrow>\n       lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "ultimately"], ["proof (chain)\npicking this:\n  lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  [x \\<rightarrow> t'] {?n \\<rightarrow> [Fvar s,Fvar p]} ?t =\n  {?n \\<rightarrow> [Fvar s,Fvar p]} [x \\<rightarrow> t'] ?t", "show \"lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  lc ([x \\<rightarrow> t'] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n  [x \\<rightarrow> t'] {?n \\<rightarrow> [Fvar s,Fvar p]} ?t =\n  {?n \\<rightarrow> [Fvar s,Fvar p]} [x \\<rightarrow> t'] ?t\n\ngoal (1 subgoal):\n 1. lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> FV t' \\<union> {x} \\<and>\n     p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<longrightarrow>\n     lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "thus \n    \"\\<exists>L. finite L \\<and> (\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n                      \\<longrightarrow> lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> FV t' \\<union> {x} \\<and>\n     p \\<notin> FV t' \\<union> {x} \\<and> s \\<noteq> p \\<longrightarrow>\n     lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))", "by (rule_tac x = \"FV t' \\<union> {x}\" in exI, simp)"], ["proof (state)\nthis:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>s p.\n         s \\<notin> L \\<and>\n         p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n         lc ([x \\<rightarrow> t'] t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sopen_preserves_body[simp]:\n  fixes t s p\n  assumes \"body t\" and \"lc s\" and \"lc p\"\n  shows \"body ({n \\<rightarrow> [s,p]} t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. body ({n \\<rightarrow> [s,p]} t)", "unfolding body_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>sa pa.\n           sa \\<notin> L \\<and>\n           pa \\<notin> L \\<and> sa \\<noteq> pa \\<longrightarrow>\n           lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>sa pa.\n           sa \\<notin> L \\<and>\n           pa \\<notin> L \\<and> sa \\<noteq> pa \\<longrightarrow>\n           lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))", "have \n    \"\\<forall>sa pa. sa \\<notin> FV t \\<union> FV s \\<and> pa \\<notin> FV p \\<and> sa \\<noteq> pa\n      \\<longrightarrow> lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "using body_lc[OF \\<open>body t\\<close> \\<open>lc s\\<close> \\<open>lc p\\<close>] sopen_twice[OF \\<open>lc s\\<close> \\<open>lc p\\<close>]"], ["proof (prove)\nusing this:\n  n = 0\n  lc (t\\<^bsup>[s,p]\\<^esup>)\n  {?n \\<rightarrow> [?s',?p']} {?n \\<rightarrow> [s,p]} ?t =\n  {?n \\<rightarrow> [s,p]} ?t\n\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> FV t \\<union> FV s \\<and>\n     pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n     lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> FV t \\<union> FV s \\<and>\n       pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n       lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>n \\<noteq> 0;\n        sa \\<notin> FV t \\<union> FV s \\<and>\n        pa \\<notin> FV p \\<and> sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar\n                          sa,Fvar pa]\\<^esup>)", "fix sa :: fVariable and pa :: fVariable"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>n \\<noteq> 0;\n        sa \\<notin> FV t \\<union> FV s \\<and>\n        pa \\<notin> FV p \\<and> sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar\n                          sa,Fvar pa]\\<^esup>)", "from body_lc_FV[OF \\<open>body t\\<close>]"], ["proof (chain)\npicking this:\n  lc (t\\<^bsup>[Fvar ?s,Fvar ?p]\\<^esup>)", "have \"lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  lc (t\\<^bsup>[Fvar ?s,Fvar ?p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by assumption"], ["proof (state)\nthis:\n  lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>n \\<noteq> 0;\n        sa \\<notin> FV t \\<union> FV s \\<and>\n        pa \\<notin> FV p \\<and> sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar\n                          sa,Fvar pa]\\<^esup>)", "moreover"], ["proof (state)\nthis:\n  lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>n \\<noteq> 0;\n        sa \\<notin> FV t \\<union> FV s \\<and>\n        pa \\<notin> FV p \\<and> sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar\n                          sa,Fvar pa]\\<^esup>)", "from sopen_commute_gen[OF _ _ \\<open>lc s\\<close> \\<open>lc p\\<close> not_sym[OF \\<open>n \\<noteq> 0\\<close>]]"], ["proof (chain)\npicking this:\n  \\<lbrakk>lc ?s; lc ?p\\<rbrakk>\n  \\<Longrightarrow> {0 \\<rightarrow> [?s,?p]} {n \\<rightarrow> [s,p]} ?t =\n                    {n \\<rightarrow> [s,p]} {0 \\<rightarrow> [?s,?p]} ?t", "have \"{n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> = {n \\<rightarrow> [s,p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>lc ?s; lc ?p\\<rbrakk>\n  \\<Longrightarrow> {0 \\<rightarrow> [?s,?p]} {n \\<rightarrow> [s,p]} ?t =\n                    {n \\<rightarrow> [s,p]} {0 \\<rightarrow> [?s,?p]} ?t\n\ngoal (1 subgoal):\n 1. ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n    {n \\<rightarrow> [s,p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {n \\<rightarrow> [s,p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       \\<lbrakk>n \\<noteq> 0;\n        sa \\<notin> FV t \\<union> FV s \\<and>\n        pa \\<notin> FV p \\<and> sa \\<noteq> pa\\<rbrakk>\n       \\<Longrightarrow> lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar\n                          sa,Fvar pa]\\<^esup>)", "ultimately"], ["proof (chain)\npicking this:\n  lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {n \\<rightarrow> [s,p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "show \"lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  lc (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>) =\n  {n \\<rightarrow> [s,p]} (t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by simp"], ["proof (state)\nthis:\n  lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> FV t \\<union> FV s \\<and>\n     pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n     lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> FV t \\<union> FV s \\<and>\n     pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n     lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>sa pa.\n           sa \\<notin> L \\<and>\n           pa \\<notin> L \\<and> sa \\<noteq> pa \\<longrightarrow>\n           lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))", "thus \"\\<exists>L. finite L \n          \\<and> (\\<forall>sa pa. sa \\<notin> L \\<and> pa \\<notin> L \\<and> sa \\<noteq> pa \n              \\<longrightarrow> lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))\""], ["proof (prove)\nusing this:\n  \\<forall>sa pa.\n     sa \\<notin> FV t \\<union> FV s \\<and>\n     pa \\<notin> FV p \\<and> sa \\<noteq> pa \\<longrightarrow>\n     lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       (\\<forall>sa pa.\n           sa \\<notin> L \\<and>\n           pa \\<notin> L \\<and> sa \\<noteq> pa \\<longrightarrow>\n           lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))", "by (rule_tac x = \"FV t \\<union> FV s \\<union> FV p\" in exI, simp)"], ["proof (state)\nthis:\n  \\<exists>L.\n     finite L \\<and>\n     (\\<forall>sa pa.\n         sa \\<notin> L \\<and>\n         pa \\<notin> L \\<and> sa \\<noteq> pa \\<longrightarrow>\n         lc ({n \\<rightarrow> [s,p]} t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Beta-reduction\\<close>"], ["", "inductive beta :: \"[sterm, sterm] \\<Rightarrow> bool\" (infixl \"\\<rightarrow>\\<^sub>\\<beta>\" 50)\nwhere\n  beta[simp, intro!]      : \n  \"\\<lbrakk> l \\<in> dom f; lc (Obj f T); lc a \\<rbrakk> \\<Longrightarrow> Call (Obj f T) l a \\<rightarrow>\\<^sub>\\<beta> (the (f l)\\<^bsup>[(Obj f T), a]\\<^esup>)\"\n| beta_Upd[simp, intro!]  : \n  \"\\<lbrakk> l \\<in> dom f; lc (Obj f T); body t \\<rbrakk> \\<Longrightarrow> Upd (Obj f T) l t \\<rightarrow>\\<^sub>\\<beta> Obj (f(l \\<mapsto> t)) T\" \n| beta_CallL[simp, intro!]: \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta> t'; lc u \\<rbrakk> \\<Longrightarrow> Call t l u \\<rightarrow>\\<^sub>\\<beta> Call t' l u\"\n| beta_CallR[simp, intro!]: \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta> t'; lc u \\<rbrakk> \\<Longrightarrow> Call u l t \\<rightarrow>\\<^sub>\\<beta> Call u l t'\"\n| beta_UpdL[simp, intro!] : \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta> t'; body u \\<rbrakk> \\<Longrightarrow> Upd t l u \\<rightarrow>\\<^sub>\\<beta> Upd t' l u\"\n| beta_UpdR[simp, intro!] : \n  \"\\<lbrakk> finite L; \n     \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t''\\<and> t'= \\<sigma>[s,p]t'');\n     lc u \\<rbrakk> \\<Longrightarrow> Upd u l t \\<rightarrow>\\<^sub>\\<beta> Upd u l t'\"\n| beta_Obj[simp, intro!]  : \n  \"\\<lbrakk> l \\<in> dom f; finite L; \n     \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> t'= \\<sigma>[s,p]t'');\n     \\<forall>l\\<in>dom f. body (the (f l)) \\<rbrakk> \n  \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T \\<rightarrow>\\<^sub>\\<beta> Obj (f(l \\<mapsto> t')) T\""], ["", "inductive_cases beta_cases [elim!]:\n  \"Call s l t \\<rightarrow>\\<^sub>\\<beta> u\"\n  \"Upd s l t \\<rightarrow>\\<^sub>\\<beta> u\"\n  \"Obj s T  \\<rightarrow>\\<^sub>\\<beta> t\""], ["", "abbreviation\n  beta_reds :: \"[sterm, sterm] => bool\"  (infixl \"->>\" 50) where\n  \"s ->> t == beta^** s t\""], ["", "abbreviation\n  beta_ascii :: \"[sterm, sterm] => bool\"  (infixl \"->\" 50) where\n  \"s -> t == beta s t\""], ["", "notation (latex)\n  beta_reds (infixl \"\\<rightarrow>\\<^sub>\\<beta>\\<^sup>*\" 50)"], ["", "lemma beta_induct[consumes 1, \n  case_names CallL CallR UpdL UpdR Upd Obj beta Bnd]:\n  fixes \n  t :: sterm and t' :: sterm and \n  P1 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> bool\" and P2 :: \"sterm \\<Rightarrow> sterm \\<Rightarrow> bool\"\n  assumes\n  \"t \\<rightarrow>\\<^sub>\\<beta> t'\" and\n  \"\\<And>t t' u l. \\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta> t'; P1 t t'; lc u \\<rbrakk> \\<Longrightarrow> P1 (Call t l u) (Call t' l u)\" and\n  \"\\<And>t t' u l. \\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta> t'; P1 t t'; lc u \\<rbrakk> \\<Longrightarrow> P1 (Call u l t) (Call u l t')\" and\n  \"\\<And>t t' u l. \\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta> t'; P1 t t'; body u\\<rbrakk> \\<Longrightarrow> P1 (Upd t l u) (Upd t' l u)\" and\n  \"\\<And>t t' u l. \\<lbrakk> P2 t t'; lc u \\<rbrakk> \\<Longrightarrow> P1 (Upd u l t) (Upd u l t')\" and\n  \"\\<And>l f T t. \\<lbrakk> l \\<in> dom f; lc (Obj f T); body t \\<rbrakk> \n      \\<Longrightarrow> P1 (Upd (Obj f T) l t) (Obj (f(l \\<mapsto> t)) T)\" and\n  \"\\<And>l f t t' T. \\<lbrakk> l \\<in> dom f; P2 t t'; \\<forall>l\\<in>dom f. body (the (f l)) \\<rbrakk>\n      \\<Longrightarrow> P1 (Obj (f(l \\<mapsto> t)) T) (Obj (f(l \\<mapsto> t')) T)\" and\n  \"\\<And>l f T a. \\<lbrakk> l \\<in> dom f; lc (Obj f T); lc a \\<rbrakk> \n      \\<Longrightarrow> P1 (Call (Obj f T) l a) (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\" and\n  \"\\<And>L t t'. \n      \\<lbrakk> finite L; \n        \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n        \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \n                 \\<and> P1 (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) t'' \\<and> t' = \\<sigma>[s,p] t'') \\<rbrakk>\n      \\<Longrightarrow> P2 t t'\"\n  shows \"P1 t t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P1 t t'", "using assms"], ["proof (prove)\nusing this:\n  t -> t'\n  \\<lbrakk>?t -> ?t'; P1 ?t ?t'; lc ?u\\<rbrakk>\n  \\<Longrightarrow> P1 (Call ?t ?l ?u) (Call ?t' ?l ?u)\n  \\<lbrakk>?t -> ?t'; P1 ?t ?t'; lc ?u\\<rbrakk>\n  \\<Longrightarrow> P1 (Call ?u ?l ?t) (Call ?u ?l ?t')\n  \\<lbrakk>?t -> ?t'; P1 ?t ?t'; body ?u\\<rbrakk>\n  \\<Longrightarrow> P1 (Upd ?t ?l ?u) (Upd ?t' ?l ?u)\n  \\<lbrakk>P2 ?t ?t'; lc ?u\\<rbrakk>\n  \\<Longrightarrow> P1 (Upd ?u ?l ?t) (Upd ?u ?l ?t')\n  \\<lbrakk>?l \\<in> dom ?f; lc (Obj ?f ?T); body ?t\\<rbrakk>\n  \\<Longrightarrow> P1 (Upd (Obj ?f ?T) ?l ?t)\n                     (Obj (?f(?l \\<mapsto> ?t)) ?T)\n  \\<lbrakk>?l \\<in> dom ?f; P2 ?t ?t';\n   \\<forall>l\\<in>dom ?f. body (the (?f l))\\<rbrakk>\n  \\<Longrightarrow> P1 (Obj (?f(?l \\<mapsto> ?t)) ?T)\n                     (Obj (?f(?l \\<mapsto> ?t')) ?T)\n  \\<lbrakk>?l \\<in> dom ?f; lc (Obj ?f ?T); lc ?a\\<rbrakk>\n  \\<Longrightarrow> P1 (Call (Obj ?f ?T) ?l ?a)\n                     (the (?f ?l)\\<^bsup>[Obj ?f ?T,?a]\\<^esup>)\n  \\<lbrakk>finite ?L;\n   \\<forall>s p.\n      s \\<notin> ?L \\<and>\n      p \\<notin> ?L \\<and> s \\<noteq> p \\<longrightarrow>\n      (\\<exists>t''.\n          ?t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n          P1 (?t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) t'' \\<and>\n          ?t' = \\<sigma>[s,p] t'')\\<rbrakk>\n  \\<Longrightarrow> P2 ?t ?t'\n\ngoal (1 subgoal):\n 1. P1 t t'", "by (induct rule: beta.induct, auto)"], ["", "lemma Fvar_beta: \"Fvar x \\<rightarrow>\\<^sub>\\<beta> t \\<Longrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvar x -> t \\<Longrightarrow> False", "by (erule beta.cases, auto)"], ["", "lemma Obj_beta: \n  assumes \"Obj f T \\<rightarrow>\\<^sub>\\<beta> z\"\n  shows\n  \"\\<exists>l f' t t'. dom f = dom f' \\<and> f = (f'(l \\<mapsto> t)) \\<and> l \\<in> dom f' \n             \\<and> (\\<exists>L. finite L \n                  \\<and> (\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n                      \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> t'= \\<sigma>[s,p]t'')))\n             \\<and> z = Obj (f'(l \\<mapsto> t')) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l f' t t'.\n       dom f = dom f' \\<and>\n       f = f'(l \\<mapsto> t) \\<and>\n       l \\<in> dom f' \\<and>\n       (\\<exists>L.\n           finite L \\<and>\n           (\\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               (\\<exists>t''.\n                   t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n                   t' = \\<sigma>[s,p] t''))) \\<and>\n       z = Obj (f'(l \\<mapsto> t')) T", "proof (cases rule: beta_cases(3)[OF assms])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l fa L t t'.\n       \\<lbrakk>f = fa(l \\<mapsto> t); z = Obj (fa(l \\<mapsto> t')) T;\n        l \\<in> dom fa; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               t' = \\<sigma>[s,p] t'');\n        \\<forall>l\\<in>dom fa. body (the (fa l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l f' t t'.\n                            dom f = dom f' \\<and>\n                            f = f'(l \\<mapsto> t) \\<and>\n                            l \\<in> dom f' \\<and>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                (\\<forall>s p.\n                                    s \\<notin> L \\<and>\n                                    p \\<notin> L \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    (\\<exists>t''.\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n  t' = \\<sigma>[s,p] t''))) \\<and>\n                            z = Obj (f'(l \\<mapsto> t')) T", "case (1 l fa L t t')"], ["proof (state)\nthis:\n  f = fa(l \\<mapsto> t)\n  z = Obj (fa(l \\<mapsto> t')) T\n  l \\<in> dom fa\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  \\<forall>l\\<in>dom fa. body (the (fa l))\n\ngoal (1 subgoal):\n 1. \\<And>l fa L t t'.\n       \\<lbrakk>f = fa(l \\<mapsto> t); z = Obj (fa(l \\<mapsto> t')) T;\n        l \\<in> dom fa; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               t' = \\<sigma>[s,p] t'');\n        \\<forall>l\\<in>dom fa. body (the (fa l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>l f' t t'.\n                            dom f = dom f' \\<and>\n                            f = f'(l \\<mapsto> t) \\<and>\n                            l \\<in> dom f' \\<and>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                (\\<forall>s p.\n                                    s \\<notin> L \\<and>\n                                    p \\<notin> L \\<and>\n                                    s \\<noteq> p \\<longrightarrow>\n                                    (\\<exists>t''.\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n  t' = \\<sigma>[s,p] t''))) \\<and>\n                            z = Obj (f'(l \\<mapsto> t')) T", "thus ?thesis"], ["proof (prove)\nusing this:\n  f = fa(l \\<mapsto> t)\n  z = Obj (fa(l \\<mapsto> t')) T\n  l \\<in> dom fa\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  \\<forall>l\\<in>dom fa. body (the (fa l))\n\ngoal (1 subgoal):\n 1. \\<exists>l f' t t'.\n       dom f = dom f' \\<and>\n       f = f'(l \\<mapsto> t) \\<and>\n       l \\<in> dom f' \\<and>\n       (\\<exists>L.\n           finite L \\<and>\n           (\\<forall>s p.\n               s \\<notin> L \\<and>\n               p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n               (\\<exists>t''.\n                   t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n                   t' = \\<sigma>[s,p] t''))) \\<and>\n       z = Obj (f'(l \\<mapsto> t')) T", "by (rule_tac x = l in exI, \n        rule_tac x = fa in exI,\n        rule_tac x = t in exI,\n        rule_tac x = t' in exI, auto)"], ["proof (state)\nthis:\n  \\<exists>l f' t t'.\n     dom f = dom f' \\<and>\n     f = f'(l \\<mapsto> t) \\<and>\n     l \\<in> dom f' \\<and>\n     (\\<exists>L.\n         finite L \\<and>\n         (\\<forall>s p.\n             s \\<notin> L \\<and>\n             p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n             (\\<exists>t''.\n                 t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n                 t' = \\<sigma>[s,p] t''))) \\<and>\n     z = Obj (f'(l \\<mapsto> t')) T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Upd_beta: \"Upd t l u \\<rightarrow>\\<^sub>\\<beta> z \\<Longrightarrow>\n  (\\<exists>t'. t \\<rightarrow>\\<^sub>\\<beta> t' \\<and> z = Upd t' l u) \n  \\<or>(\\<exists>u' L. finite L \n         \\<and> (\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n             \\<longrightarrow> (\\<exists>t''. (u\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> u' = \\<sigma>[s,p]t'')) \n         \\<and> z = Upd t l u')\n  \\<or>(\\<exists>f T. l \\<in> dom f \\<and> Obj f T = t \\<and> z = Obj (f(l \\<mapsto> u)) T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Upd t l u -> z \\<Longrightarrow>\n    (\\<exists>t'. t -> t' \\<and> z = Upd t' l u) \\<or>\n    (\\<exists>u' L.\n        finite L \\<and>\n        (\\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            (\\<exists>t''.\n                u\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n                u' = \\<sigma>[s,p] t'')) \\<and>\n        z = Upd t l u') \\<or>\n    (\\<exists>f T.\n        l \\<in> dom f \\<and>\n        Obj f T = t \\<and> z = Obj (f(l \\<mapsto> u)) T)", "by (erule beta_cases, auto)"], ["", "lemma Call_beta: \"Call t l u \\<rightarrow>\\<^sub>\\<beta> z \\<Longrightarrow>\n  (\\<exists>t'. t \\<rightarrow>\\<^sub>\\<beta> t' \\<and> z = Call t' l u) \\<or> (\\<exists>u'. u \\<rightarrow>\\<^sub>\\<beta> u' \\<and> z = Call t l u')\n  \\<or>(\\<exists>f T. Obj f T = t \\<and> l \\<in> dom f \\<and> z = (the (f l)\\<^bsup>[Obj f T, u]\\<^esup>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Call t l u -> z \\<Longrightarrow>\n    (\\<exists>t'. t -> t' \\<and> z = Call t' l u) \\<or>\n    (\\<exists>u'. u -> u' \\<and> z = Call t l u') \\<or>\n    (\\<exists>f T.\n        Obj f T = t \\<and>\n        l \\<in> dom f \\<and> z = (the (f l)\\<^bsup>[Obj f T,u]\\<^esup>))", "by (erule beta_cases, auto)"], ["", "subsubsection \\<open>Properties\\<close>"], ["", "lemma beta_lc[simp]:\n  fixes t t'\n  assumes \"t \\<rightarrow>\\<^sub>\\<beta> t'\"\n  shows \"lc t \\<and> lc t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lc t \\<and> lc t'", "using assms"], ["proof (prove)\nusing this:\n  t -> t'\n\ngoal (1 subgoal):\n 1. lc t \\<and> lc t'", "proof \n  (induct\n    taking: \"\\<lambda>t t'. body t \\<and> body t'\"\n    rule: beta_induct)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Call t l u) \\<and> lc (Call t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Call u l t) \\<and> lc (Call u l t')\n 3. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 4. \\<And>t t' u l.\n       \\<lbrakk>body t \\<and> body t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd u l t) \\<and> lc (Upd u l t')\n 5. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 6. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 7. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 8. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "case CallL"], ["proof (state)\nthis:\n  t_ -> t'_\n  lc t_ \\<and> lc t'_\n  lc u_\n\ngoal (8 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Call t l u) \\<and> lc (Call t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Call u l t) \\<and> lc (Call u l t')\n 3. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 4. \\<And>t t' u l.\n       \\<lbrakk>body t \\<and> body t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd u l t) \\<and> lc (Upd u l t')\n 5. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 6. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 7. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 8. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "thus ?case"], ["proof (prove)\nusing this:\n  t_ -> t'_\n  lc t_ \\<and> lc t'_\n  lc u_\n\ngoal (1 subgoal):\n 1. lc (Call t_ l_ u_) \\<and> lc (Call t'_ l_ u_)", "by simp"], ["proof (state)\nthis:\n  lc (Call t_ l_ u_) \\<and> lc (Call t'_ l_ u_)\n\ngoal (7 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Call u l t) \\<and> lc (Call u l t')\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 3. \\<And>t t' u l.\n       \\<lbrakk>body t \\<and> body t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd u l t) \\<and> lc (Upd u l t')\n 4. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 5. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 6. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 7. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Call u l t) \\<and> lc (Call u l t')\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 3. \\<And>t t' u l.\n       \\<lbrakk>body t \\<and> body t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd u l t) \\<and> lc (Upd u l t')\n 4. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 5. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 6. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 7. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "case CallR"], ["proof (state)\nthis:\n  t_ -> t'_\n  lc t_ \\<and> lc t'_\n  lc u_\n\ngoal (7 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Call u l t) \\<and> lc (Call u l t')\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 3. \\<And>t t' u l.\n       \\<lbrakk>body t \\<and> body t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd u l t) \\<and> lc (Upd u l t')\n 4. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 5. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 6. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 7. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "thus ?case"], ["proof (prove)\nusing this:\n  t_ -> t'_\n  lc t_ \\<and> lc t'_\n  lc u_\n\ngoal (1 subgoal):\n 1. lc (Call u_ l_ t_) \\<and> lc (Call u_ l_ t'_)", "by simp"], ["proof (state)\nthis:\n  lc (Call u_ l_ t_) \\<and> lc (Call u_ l_ t'_)\n\ngoal (6 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>body t \\<and> body t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd u l t) \\<and> lc (Upd u l t')\n 3. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 4. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 5. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 6. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>body t \\<and> body t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd u l t) \\<and> lc (Upd u l t')\n 3. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 4. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 5. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 6. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "case UpdR"], ["proof (state)\nthis:\n  body t_ \\<and> body t'_\n  lc u_\n\ngoal (6 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>body t \\<and> body t'; lc u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd u l t) \\<and> lc (Upd u l t')\n 3. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 4. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 5. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 6. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "thus ?case"], ["proof (prove)\nusing this:\n  body t_ \\<and> body t'_\n  lc u_\n\ngoal (1 subgoal):\n 1. lc (Upd u_ l_ t_) \\<and> lc (Upd u_ l_ t'_)", "by (simp add: lc_upd)"], ["proof (state)\nthis:\n  lc (Upd u_ l_ t_) \\<and> lc (Upd u_ l_ t'_)\n\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "case UpdL"], ["proof (state)\nthis:\n  t_ -> t'_\n  lc t_ \\<and> lc t'_\n  body u_\n\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; lc t \\<and> lc t'; body u\\<rbrakk>\n       \\<Longrightarrow> lc (Upd t l u) \\<and> lc (Upd t' l u)\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "thus ?case"], ["proof (prove)\nusing this:\n  t_ -> t'_\n  lc t_ \\<and> lc t'_\n  body u_\n\ngoal (1 subgoal):\n 1. lc (Upd t_ l_ u_) \\<and> lc (Upd t'_ l_ u_)", "by (simp add: lc_upd)"], ["proof (state)\nthis:\n  lc (Upd t_ l_ u_) \\<and> lc (Upd t'_ l_ u_)\n\ngoal (4 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 3. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 4. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 3. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 4. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "case beta"], ["proof (state)\nthis:\n  l_ \\<in> dom f_\n  lc (Obj f_ T_)\n  lc a_\n\ngoal (4 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 3. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> lc (Call (Obj f T) l a) \\<and>\n                         lc (the (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 4. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "thus ?case"], ["proof (prove)\nusing this:\n  l_ \\<in> dom f_\n  lc (Obj f_ T_)\n  lc a_\n\ngoal (1 subgoal):\n 1. lc (Call (Obj f_ T_) l_ a_) \\<and>\n    lc (the (f_ l_)\\<^bsup>[Obj f_ T_,a_]\\<^esup>)", "by (simp add: obj_openz_lc)"], ["proof (state)\nthis:\n  lc (Call (Obj f_ T_) l_ a_) \\<and>\n  lc (the (f_ l_)\\<^bsup>[Obj f_ T_,a_]\\<^esup>)\n\ngoal (3 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 3. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 3. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "case Upd"], ["proof (state)\nthis:\n  l_ \\<in> dom f_\n  lc (Obj f_ T_)\n  body t_\n\ngoal (3 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> lc (Upd (Obj f T) l t) \\<and>\n                         lc (Obj (f(l \\<mapsto> t)) T)\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 3. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "thus ?case"], ["proof (prove)\nusing this:\n  l_ \\<in> dom f_\n  lc (Obj f_ T_)\n  body t_\n\ngoal (1 subgoal):\n 1. lc (Upd (Obj f_ T_) l_ t_) \\<and> lc (Obj (f_(l_ \\<mapsto> t_)) T_)", "by (simp add: lc_obj lc_upd)"], ["proof (state)\nthis:\n  lc (Upd (Obj f_ T_) l_ t_) \\<and> lc (Obj (f_(l_ \\<mapsto> t_)) T_)\n\ngoal (2 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "case Obj"], ["proof (state)\nthis:\n  l_ \\<in> dom f_\n  body t_ \\<and> body t'_\n  \\<forall>l\\<in>dom f_. body (the (f_ l))\n\ngoal (2 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f; body t \\<and> body t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> lc (Obj (f(l \\<mapsto> t)) T) \\<and>\n                         lc (Obj (f(l \\<mapsto> t')) T)\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "thus ?case"], ["proof (prove)\nusing this:\n  l_ \\<in> dom f_\n  body t_ \\<and> body t'_\n  \\<forall>l\\<in>dom f_. body (the (f_ l))\n\ngoal (1 subgoal):\n 1. lc (Obj (f_(l_ \\<mapsto> t_)) T_) \\<and>\n    lc (Obj (f_(l_ \\<mapsto> t'_)) T_)", "by (simp add: lc_obj)"], ["proof (state)\nthis:\n  lc (Obj (f_(l_ \\<mapsto> t_)) T_) \\<and>\n  lc (Obj (f_(l_ \\<mapsto> t'_)) T_)\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "case (Bnd L t t')"], ["proof (state)\nthis:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "note cof = this(2)"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "from \\<open>finite L\\<close> exFresh_s_p_cof[of \"L \\<union> FV t\"]"], ["proof (chain)\npicking this:\n  finite L\n  finite (L \\<union> FV t) \\<Longrightarrow>\n  \\<exists>s p.\n     s \\<notin> L \\<union> FV t \\<and>\n     p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p", "obtain s p where \n    \"s \\<notin> L\" and \"s \\<notin> FV t\" and \"p \\<notin> L\" and \"p \\<notin> FV t\" and \"s \\<noteq> p\""], ["proof (prove)\nusing this:\n  finite L\n  finite (L \\<union> FV t) \\<Longrightarrow>\n  \\<exists>s p.\n     s \\<notin> L \\<union> FV t \\<and>\n     p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>s p.\n        \\<lbrakk>s \\<notin> L; s \\<notin> FV t; p \\<notin> L;\n         p \\<notin> FV t; s \\<noteq> p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> L\n  s \\<notin> FV t\n  p \\<notin> L\n  p \\<notin> FV t\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "with cof"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n  s \\<notin> L\n  s \\<notin> FV t\n  p \\<notin> L\n  p \\<notin> FV t\n  s \\<noteq> p", "obtain t'' where\n    \"lc (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>)\" and \"lc t''\" and\n    \"t' = \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n  s \\<notin> L\n  s \\<notin> FV t\n  p \\<notin> L\n  p \\<notin> FV t\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>); lc t'';\n         t' = \\<sigma>[s,p] t''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  lc t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> body t \\<and> body t'", "from \n    lc_body[OF this(1) \\<open>s \\<noteq> p\\<close>] \n    sclose_sopen_eq_t[OF \\<open>s \\<notin> FV t\\<close> \\<open>p \\<notin> FV t\\<close> \\<open>s \\<noteq> p\\<close>]\n    this(3) lc_body[OF this(2) \\<open>s \\<noteq> p\\<close>]"], ["proof (chain)\npicking this:\n  body \\<sigma>[s,p] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  {?n \\<leftarrow> [s,p]} {?n \\<rightarrow> [Fvar s,Fvar p]} t = t\n  t' = \\<sigma>[s,p] t''\n  body \\<sigma>[s,p] t''", "show ?case"], ["proof (prove)\nusing this:\n  body \\<sigma>[s,p] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  {?n \\<leftarrow> [s,p]} {?n \\<rightarrow> [Fvar s,Fvar p]} t = t\n  t' = \\<sigma>[s,p] t''\n  body \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. body t \\<and> body t'", "by (simp add: openz_def closez_def)"], ["proof (state)\nthis:\n  body t \\<and> body t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_ssubst[rule_format]:\n  fixes t t'\n  assumes \"t \\<rightarrow>\\<^sub>\\<beta> t'\"\n  shows \"\\<forall>x v. lc v \\<longrightarrow> [x \\<rightarrow> v] t \\<rightarrow>\\<^sub>\\<beta> [x \\<rightarrow> v] t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "define pred_cof\n    where \"pred_cof L t t' \\<longleftrightarrow>\n      (\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s, Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> t' = \\<sigma>[s,p] t''))\"\n    for L t t'"], ["proof (state)\nthis:\n  pred_cof ?L ?t ?t' =\n  (\\<forall>s p.\n      s \\<notin> ?L \\<and>\n      p \\<notin> ?L \\<and> s \\<noteq> p \\<longrightarrow>\n      (\\<exists>t''.\n          ?t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n          ?t' = \\<sigma>[s,p] t''))\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "{"], ["proof (state)\nthis:\n  pred_cof ?L ?t ?t' =\n  (\\<forall>s p.\n      s \\<notin> ?L \\<and>\n      p \\<notin> ?L \\<and> s \\<noteq> p \\<longrightarrow>\n      (\\<exists>t''.\n          ?t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n          ?t' = \\<sigma>[s,p] t''))\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "fix x v t t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "assume \n      \"lc v\" and\n      \"\\<forall>x v. lc v \\<longrightarrow> (\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))\""], ["proof (state)\nthis:\n  lc v\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and>\n         pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "hence\n      \"\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\""], ["proof (prove)\nusing this:\n  lc v\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and>\n         pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')", "by auto"], ["proof (state)\nthis:\n  \\<exists>L.\n     finite L \\<and>\n     pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>lc ?v2;\n   \\<forall>x v.\n      lc v \\<longrightarrow>\n      (\\<exists>L.\n          finite L \\<and>\n          pred_cof L ([x \\<rightarrow> v] ?ta2)\n           ([x \\<rightarrow> v] ?t'a2))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([?x2 \\<rightarrow> ?v2] ?ta2)\n                        ([?x2 \\<rightarrow> ?v2] ?t'a2)\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "note Lex = this"], ["proof (state)\nthis:\n  \\<lbrakk>lc ?v2;\n   \\<forall>x v.\n      lc v \\<longrightarrow>\n      (\\<exists>L.\n          finite L \\<and>\n          pred_cof L ([x \\<rightarrow> v] ?ta2)\n           ([x \\<rightarrow> v] ?t'a2))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([?x2 \\<rightarrow> ?v2] ?ta2)\n                        ([?x2 \\<rightarrow> ?v2] ?t'a2)\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "{"], ["proof (state)\nthis:\n  \\<lbrakk>lc ?v2;\n   \\<forall>x v.\n      lc v \\<longrightarrow>\n      (\\<exists>L.\n          finite L \\<and>\n          pred_cof L ([x \\<rightarrow> v] ?ta2)\n           ([x \\<rightarrow> v] ?t'a2))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([?x2 \\<rightarrow> ?v2] ?ta2)\n                        ([?x2 \\<rightarrow> ?v2] ?t'a2)\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "fix x v l and f :: \"Label \\<Rightarrow> sterm option\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "assume \"l \\<in> dom f\""], ["proof (state)\nthis:\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "hence \"l \\<in> dom (\\<lambda>l. ssubst_option x v (f l))\""], ["proof (prove)\nusing this:\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. l \\<in> dom (\\<lambda>l. ssubst_option x v (f l))", "by simp"], ["proof (state)\nthis:\n  l \\<in> dom (\\<lambda>l. ssubst_option x v (f l))\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "}"], ["proof (state)\nthis:\n  ?l2 \\<in> dom ?f2 \\<Longrightarrow>\n  ?l2 \\<in> dom (\\<lambda>l. ssubst_option ?x2 ?v2 (?f2 l))\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "note domssubst = this"], ["proof (state)\nthis:\n  ?l2 \\<in> dom ?f2 \\<Longrightarrow>\n  ?l2 \\<in> dom (\\<lambda>l. ssubst_option ?x2 ?v2 (?f2 l))\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "{"], ["proof (state)\nthis:\n  ?l2 \\<in> dom ?f2 \\<Longrightarrow>\n  ?l2 \\<in> dom (\\<lambda>l. ssubst_option ?x2 ?v2 (?f2 l))\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "fix x v l T and f :: \"Label \\<Rightarrow> sterm option\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "assume \"lc (Obj f T)\" and \"lc v\""], ["proof (state)\nthis:\n  lc (Obj f T)\n  lc v\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "from ssubst_preserves_lc[OF this]"], ["proof (chain)\npicking this:\n  lc ([?x \\<rightarrow> v] Obj f T)", "have obj: \"lc (Obj (\\<lambda>l. ssubst_option x v (f l)) T)\""], ["proof (prove)\nusing this:\n  lc ([?x \\<rightarrow> v] Obj f T)\n\ngoal (1 subgoal):\n 1. lc (Obj (\\<lambda>l. ssubst_option x v (f l)) T)", "by simp"], ["proof (state)\nthis:\n  lc (Obj (\\<lambda>l. ssubst_option x v (f l)) T)\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>lc (Obj ?f2 ?T2); lc ?v2\\<rbrakk>\n  \\<Longrightarrow> lc (Obj (\\<lambda>l. ssubst_option ?x2 ?v2 (?f2 l)) ?T2)\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "note lcobj = this"], ["proof (state)\nthis:\n  \\<lbrakk>lc (Obj ?f2 ?T2); lc ?v2\\<rbrakk>\n  \\<Longrightarrow> lc (Obj (\\<lambda>l. ssubst_option ?x2 ?v2 (?f2 l)) ?T2)\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "from assms"], ["proof (chain)\npicking this:\n  t -> t'", "show ?thesis"], ["proof (prove)\nusing this:\n  t -> t'\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'", "proof \n    (induct\n      taking: \"\\<lambda>t t'. \\<forall>x v. lc v \n                       \\<longrightarrow> (\\<exists>L. finite L \n                              \\<and> pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))\"\n      rule: beta_induct)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call t l u ->\n                            [x \\<rightarrow> v] Call t' l u\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call u l t ->\n                            [x \\<rightarrow> v] Call u l t'\n 3. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd t l u ->\n                            [x \\<rightarrow> v] Upd t' l u\n 4. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 5. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 6. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 7. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 8. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "case CallL"], ["proof (state)\nthis:\n  t_ -> t'_\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] t_ -> [x \\<rightarrow> v] t'_\n  lc u_\n\ngoal (8 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call t l u ->\n                            [x \\<rightarrow> v] Call t' l u\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call u l t ->\n                            [x \\<rightarrow> v] Call u l t'\n 3. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd t l u ->\n                            [x \\<rightarrow> v] Upd t' l u\n 4. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 5. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 6. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 7. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 8. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "thus ?case"], ["proof (prove)\nusing this:\n  t_ -> t'_\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] t_ -> [x \\<rightarrow> v] t'_\n  lc u_\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] Call t_ l_ u_ ->\n       [x \\<rightarrow> v] Call t'_ l_ u_", "by simp"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] Call t_ l_ u_ -> [x \\<rightarrow> v] Call t'_ l_ u_\n\ngoal (7 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call u l t ->\n                            [x \\<rightarrow> v] Call u l t'\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd t l u ->\n                            [x \\<rightarrow> v] Upd t' l u\n 3. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 4. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 5. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 6. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 7. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call u l t ->\n                            [x \\<rightarrow> v] Call u l t'\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd t l u ->\n                            [x \\<rightarrow> v] Upd t' l u\n 3. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 4. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 5. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 6. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 7. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "case CallR"], ["proof (state)\nthis:\n  t_ -> t'_\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] t_ -> [x \\<rightarrow> v] t'_\n  lc u_\n\ngoal (7 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call u l t ->\n                            [x \\<rightarrow> v] Call u l t'\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd t l u ->\n                            [x \\<rightarrow> v] Upd t' l u\n 3. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 4. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 5. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 6. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 7. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "thus ?case"], ["proof (prove)\nusing this:\n  t_ -> t'_\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] t_ -> [x \\<rightarrow> v] t'_\n  lc u_\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] Call u_ l_ t_ ->\n       [x \\<rightarrow> v] Call u_ l_ t'_", "by simp"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] Call u_ l_ t_ -> [x \\<rightarrow> v] Call u_ l_ t'_\n\ngoal (6 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd t l u ->\n                            [x \\<rightarrow> v] Upd t' l u\n 2. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 3. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 4. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 5. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 6. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd t l u ->\n                            [x \\<rightarrow> v] Upd t' l u\n 2. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 3. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 4. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 5. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 6. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "case UpdL"], ["proof (state)\nthis:\n  t_ -> t'_\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] t_ -> [x \\<rightarrow> v] t'_\n  body u_\n\ngoal (6 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t';\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd t l u ->\n                            [x \\<rightarrow> v] Upd t' l u\n 2. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 3. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 4. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 5. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 6. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "thus ?case"], ["proof (prove)\nusing this:\n  t_ -> t'_\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] t_ -> [x \\<rightarrow> v] t'_\n  body u_\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] Upd t_ l_ u_ -> [x \\<rightarrow> v] Upd t'_ l_ u_", "by simp"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] Upd t_ l_ u_ -> [x \\<rightarrow> v] Upd t'_ l_ u_\n\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "case (UpdR t t' u l)"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and>\n         pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))\n  lc u\n\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "note pred = this(1)"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and>\n         pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))\n\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   (\\<exists>L.\n                       finite L \\<and>\n                       pred_cof L ([x \\<rightarrow> v] t)\n                        ([x \\<rightarrow> v] t'));\n        lc u\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd u l t ->\n                            [x \\<rightarrow> v] Upd u l t'\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] Upd u l t -> [x \\<rightarrow> v] Upd u l t'", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       [x \\<rightarrow> v] Upd u l t -> [x \\<rightarrow> v] Upd u l t'", "fix x v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       [x \\<rightarrow> v] Upd u l t -> [x \\<rightarrow> v] Upd u l t'", "assume \"lc v\""], ["proof (state)\nthis:\n  lc v\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       [x \\<rightarrow> v] Upd u l t -> [x \\<rightarrow> v] Upd u l t'", "from Lex[OF this pred]"], ["proof (chain)\npicking this:\n  \\<exists>L.\n     finite L \\<and>\n     pred_cof L ([?x2 \\<rightarrow> v] t) ([?x2 \\<rightarrow> v] t')", "obtain L where\n        \"finite L\" and \"pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\""], ["proof (prove)\nusing this:\n  \\<exists>L.\n     finite L \\<and>\n     pred_cof L ([?x2 \\<rightarrow> v] t) ([?x2 \\<rightarrow> v] t')\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         pred_cof L ([x \\<rightarrow> v] t)\n          ([x \\<rightarrow> v] t')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L\n  pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       [x \\<rightarrow> v] Upd u l t -> [x \\<rightarrow> v] Upd u l t'", "with ssubst_preserves_lc[OF \\<open>lc u\\<close> \\<open>lc v\\<close>]"], ["proof (chain)\npicking this:\n  lc ([?x \\<rightarrow> v] u)\n  finite L\n  pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')", "show \"[x \\<rightarrow> v] Upd u l t \\<rightarrow>\\<^sub>\\<beta> [x \\<rightarrow> v] Upd u l t'\""], ["proof (prove)\nusing this:\n  lc ([?x \\<rightarrow> v] u)\n  finite L\n  pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\n\ngoal (1 subgoal):\n 1. [x \\<rightarrow> v] Upd u l t -> [x \\<rightarrow> v] Upd u l t'", "unfolding pred_cof_def"], ["proof (prove)\nusing this:\n  lc ([?x \\<rightarrow> v] u)\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         [x \\<rightarrow> v] t' = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. [x \\<rightarrow> v] Upd u l t -> [x \\<rightarrow> v] Upd u l t'", "by auto"], ["proof (state)\nthis:\n  [x \\<rightarrow> v] Upd u l t -> [x \\<rightarrow> v] Upd u l t'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] Upd u l t -> [x \\<rightarrow> v] Upd u l t'\n\ngoal (4 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 3. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 4. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 3. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 4. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "case (beta l f T t)"], ["proof (state)\nthis:\n  l \\<in> dom f\n  lc (Obj f T)\n  lc t\n\ngoal (4 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 3. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Call (Obj f T) l a ->\n                            [x \\<rightarrow> v] (the\n            (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 4. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "thus ?case"], ["proof (prove)\nusing this:\n  l \\<in> dom f\n  lc (Obj f T)\n  lc t\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] Call (Obj f T) l t ->\n       [x \\<rightarrow> v] (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "proof (intro strip, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); lc t\\<rbrakk>\n       \\<Longrightarrow> Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T)\n                          l ([x \\<rightarrow> v] t) ->\n                         [x \\<rightarrow> v] (the\n         (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "fix x v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); lc t\\<rbrakk>\n       \\<Longrightarrow> Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T)\n                          l ([x \\<rightarrow> v] t) ->\n                         [x \\<rightarrow> v] (the\n         (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "assume \"lc v\""], ["proof (state)\nthis:\n  lc v\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); lc t\\<rbrakk>\n       \\<Longrightarrow> Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T)\n                          l ([x \\<rightarrow> v] t) ->\n                         [x \\<rightarrow> v] (the\n         (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "from ssubst_preserves_lc[OF \\<open>lc t\\<close> this]"], ["proof (chain)\npicking this:\n  lc ([?x \\<rightarrow> v] t)", "have \"lc ([x \\<rightarrow> v] t)\""], ["proof (prove)\nusing this:\n  lc ([?x \\<rightarrow> v] t)\n\ngoal (1 subgoal):\n 1. lc ([x \\<rightarrow> v] t)", "by simp"], ["proof (state)\nthis:\n  lc ([x \\<rightarrow> v] t)\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); lc t\\<rbrakk>\n       \\<Longrightarrow> Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T)\n                          l ([x \\<rightarrow> v] t) ->\n                         [x \\<rightarrow> v] (the\n         (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "note lem =\n        beta.beta[OF domssubst[OF \\<open>l \\<in> dom f\\<close>] \n        lcobj[OF \\<open>lc (Obj f T)\\<close> \\<open>lc v\\<close>] this]"], ["proof (state)\nthis:\n  Call (Obj (\\<lambda>l. ssubst_option ?x3 v (f l)) T) l\n   ([x \\<rightarrow> v] t) ->\n  (the (ssubst_option ?x3 v\n         (f l))\\<^bsup>[Obj (\\<lambda>l. ssubst_option ?x3 v (f l))\n                         T,[x \\<rightarrow> v] t]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); lc t\\<rbrakk>\n       \\<Longrightarrow> Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T)\n                          l ([x \\<rightarrow> v] t) ->\n                         [x \\<rightarrow> v] (the\n         (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "from \\<open>l \\<in> dom f\\<close>"], ["proof (chain)\npicking this:\n  l \\<in> dom f", "have \"the (ssubst_option x v (f l)) = [x \\<rightarrow> v] the (f l)\""], ["proof (prove)\nusing this:\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. the (ssubst_option x v (f l)) = [x \\<rightarrow> v] the (f l)", "by auto"], ["proof (state)\nthis:\n  the (ssubst_option x v (f l)) = [x \\<rightarrow> v] the (f l)\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); lc t\\<rbrakk>\n       \\<Longrightarrow> Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T)\n                          l ([x \\<rightarrow> v] t) ->\n                         [x \\<rightarrow> v] (the\n         (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "with lem[of x] ssubst_openz_distrib[OF \\<open>lc v\\<close>]"], ["proof (chain)\npicking this:\n  Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n   ([x \\<rightarrow> v] t) ->\n  (the (ssubst_option x v\n         (f l))\\<^bsup>[Obj (\\<lambda>l. ssubst_option x v (f l))\n                         T,[x \\<rightarrow> v] t]\\<^esup>)\n  [?x \\<rightarrow> v] (?t\\<^bsup>[?s,?p]\\<^esup>) =\n  ([?x \\<rightarrow> v] ?t\\<^bsup>[[?x \\<rightarrow> v] ?s,[?x \\<rightarrow> v] ?p]\\<^esup>)\n  the (ssubst_option x v (f l)) = [x \\<rightarrow> v] the (f l)", "show\n        \"Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l ([x \\<rightarrow> v] t)\n         \\<rightarrow>\\<^sub>\\<beta> [x \\<rightarrow> v] (the (f l)\\<^bsup>[Obj f T, t]\\<^esup>)\""], ["proof (prove)\nusing this:\n  Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n   ([x \\<rightarrow> v] t) ->\n  (the (ssubst_option x v\n         (f l))\\<^bsup>[Obj (\\<lambda>l. ssubst_option x v (f l))\n                         T,[x \\<rightarrow> v] t]\\<^esup>)\n  [?x \\<rightarrow> v] (?t\\<^bsup>[?s,?p]\\<^esup>) =\n  ([?x \\<rightarrow> v] ?t\\<^bsup>[[?x \\<rightarrow> v] ?s,[?x \\<rightarrow> v] ?p]\\<^esup>)\n  the (ssubst_option x v (f l)) = [x \\<rightarrow> v] the (f l)\n\ngoal (1 subgoal):\n 1. Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n     ([x \\<rightarrow> v] t) ->\n    [x \\<rightarrow> v] (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "by simp"], ["proof (state)\nthis:\n  Call (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n   ([x \\<rightarrow> v] t) ->\n  [x \\<rightarrow> v] (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] Call (Obj f T) l t ->\n     [x \\<rightarrow> v] (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)\n\ngoal (3 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 3. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 3. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "case (Upd l f T t)"], ["proof (state)\nthis:\n  l \\<in> dom f\n  lc (Obj f T)\n  body t\n\ngoal (3 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Upd (Obj f T) l t ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 3. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "thus ?case"], ["proof (prove)\nusing this:\n  l \\<in> dom f\n  lc (Obj f T)\n  body t\n\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] Upd (Obj f T) l t ->\n       [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T", "proof (intro strip, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> Upd (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n                          ([x \\<rightarrow> v] t) ->\n                         Obj (\\<lambda>la.\n                                 ssubst_option x v\n                                  (if la = l then Some t else f la))\n                          T", "fix x v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> Upd (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n                          ([x \\<rightarrow> v] t) ->\n                         Obj (\\<lambda>la.\n                                 ssubst_option x v\n                                  (if la = l then Some t else f la))\n                          T", "assume \"lc v\""], ["proof (state)\nthis:\n  lc v\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> Upd (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n                          ([x \\<rightarrow> v] t) ->\n                         Obj (\\<lambda>la.\n                                 ssubst_option x v\n                                  (if la = l then Some t else f la))\n                          T", "from ssubst_preserves_body[OF \\<open>body t\\<close> \\<open>lc v\\<close>]"], ["proof (chain)\npicking this:\n  body ([?x \\<rightarrow> v] t)", "have \"body ([x \\<rightarrow> v] t)\""], ["proof (prove)\nusing this:\n  body ([?x \\<rightarrow> v] t)\n\ngoal (1 subgoal):\n 1. body ([x \\<rightarrow> v] t)", "by simp"], ["proof (state)\nthis:\n  body ([x \\<rightarrow> v] t)\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       \\<lbrakk>lc v; l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> Upd (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n                          ([x \\<rightarrow> v] t) ->\n                         Obj (\\<lambda>la.\n                                 ssubst_option x v\n                                  (if la = l then Some t else f la))\n                          T", "from\n        beta.beta_Upd[OF domssubst[OF \\<open>l \\<in> dom f\\<close>] \n                         lcobj[OF \\<open>lc (Obj f T)\\<close> \\<open>lc v\\<close>] this]\n        ssubstoption_insert[OF \\<open>l \\<in> dom f\\<close>]"], ["proof (chain)\npicking this:\n  Upd (Obj (\\<lambda>l. ssubst_option ?x3 v (f l)) T) l\n   ([x \\<rightarrow> v] t) ->\n  Obj ((\\<lambda>l. ssubst_option ?x3 v (f l))(l \\<mapsto>\n       [x \\<rightarrow> v] t))\n   T\n  (\\<lambda>la. ssubst_option ?x ?t' (if la = l then Some ?t else f la)) =\n  (\\<lambda>la. ssubst_option ?x ?t' (f la))(l \\<mapsto>\n  [?x \\<rightarrow> ?t'] ?t)", "show\n        \"Upd (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l ([x \\<rightarrow> v] t)\n         \\<rightarrow>\\<^sub>\\<beta> Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t else f la)) T\""], ["proof (prove)\nusing this:\n  Upd (Obj (\\<lambda>l. ssubst_option ?x3 v (f l)) T) l\n   ([x \\<rightarrow> v] t) ->\n  Obj ((\\<lambda>l. ssubst_option ?x3 v (f l))(l \\<mapsto>\n       [x \\<rightarrow> v] t))\n   T\n  (\\<lambda>la. ssubst_option ?x ?t' (if la = l then Some ?t else f la)) =\n  (\\<lambda>la. ssubst_option ?x ?t' (f la))(l \\<mapsto>\n  [?x \\<rightarrow> ?t'] ?t)\n\ngoal (1 subgoal):\n 1. Upd (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n     ([x \\<rightarrow> v] t) ->\n    Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t else f la)) T", "by simp"], ["proof (state)\nthis:\n  Upd (Obj (\\<lambda>l. ssubst_option x v (f l)) T) l\n   ([x \\<rightarrow> v] t) ->\n  Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t else f la)) T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] Upd (Obj f T) l t ->\n     [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T\n\ngoal (2 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "case (Obj l f t t' T)"], ["proof (state)\nthis:\n  l \\<in> dom f\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and>\n         pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))\n  \\<forall>l\\<in>dom f. body (the (f l))\n\ngoal (2 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "note pred = this(2)"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and>\n         pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))\n\ngoal (2 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        \\<forall>x v.\n           lc v \\<longrightarrow>\n           (\\<exists>L.\n               finite L \\<and>\n               pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'));\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n                            [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n       [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T", "proof (intro strip, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t else f la))\n        T ->\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t' else f la))\n        T", "fix x v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t else f la))\n        T ->\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t' else f la))\n        T", "assume \"lc v\""], ["proof (state)\nthis:\n  lc v\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t else f la))\n        T ->\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t' else f la))\n        T", "note Lex[OF this pred]"], ["proof (state)\nthis:\n  \\<exists>L.\n     finite L \\<and>\n     pred_cof L ([?x2 \\<rightarrow> v] t) ([?x2 \\<rightarrow> v] t')\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t else f la))\n        T ->\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t' else f la))\n        T", "from this[of x]"], ["proof (chain)\npicking this:\n  \\<exists>L.\n     finite L \\<and>\n     pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')", "obtain L where\n        \"finite L\" and \"pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\""], ["proof (prove)\nusing this:\n  \\<exists>L.\n     finite L \\<and>\n     pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\n\ngoal (1 subgoal):\n 1. (\\<And>L.\n        \\<lbrakk>finite L;\n         pred_cof L ([x \\<rightarrow> v] t)\n          ([x \\<rightarrow> v] t')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L\n  pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t else f la))\n        T ->\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t' else f la))\n        T", "have \"\\<forall>l\\<in>dom (\\<lambda>l. ssubst_option x v (f l)). body (the (ssubst_option x v (f l)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom (\\<lambda>l. ssubst_option x v (f l)).\n       body (the (ssubst_option x v (f l)))", "proof (intro strip, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom f \\<Longrightarrow> body (the (ssubst_option x v (f l)))", "fix l' :: Label"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom f \\<Longrightarrow> body (the (ssubst_option x v (f l)))", "assume \"l' \\<in> dom f\""], ["proof (state)\nthis:\n  l' \\<in> dom f\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom f \\<Longrightarrow> body (the (ssubst_option x v (f l)))", "with \\<open>\\<forall>l\\<in>dom f. body (the(f l))\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f. body (the (f l))\n  l' \\<in> dom f", "have \"body (the (f l'))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. body (the (f l))\n  l' \\<in> dom f\n\ngoal (1 subgoal):\n 1. body (the (f l'))", "by blast"], ["proof (state)\nthis:\n  body (the (f l'))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom f \\<Longrightarrow> body (the (ssubst_option x v (f l)))", "note ssubst_preserves_body[OF this \\<open>lc v\\<close>]"], ["proof (state)\nthis:\n  body ([?x \\<rightarrow> v] the (f l'))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom f \\<Longrightarrow> body (the (ssubst_option x v (f l)))", "with \\<open>l' \\<in> dom f\\<close> ssubst_option_lem"], ["proof (chain)\npicking this:\n  l' \\<in> dom f\n  \\<forall>l\\<in>dom ?f.\n     [?z \\<rightarrow> ?u] the (?f l) = the (ssubst_option ?z ?u (?f l))\n  body ([?x \\<rightarrow> v] the (f l'))", "show \"body (the (ssubst_option x v (f l')))\""], ["proof (prove)\nusing this:\n  l' \\<in> dom f\n  \\<forall>l\\<in>dom ?f.\n     [?z \\<rightarrow> ?u] the (?f l) = the (ssubst_option ?z ?u (?f l))\n  body ([?x \\<rightarrow> v] the (f l'))\n\ngoal (1 subgoal):\n 1. body (the (ssubst_option x v (f l')))", "by auto"], ["proof (state)\nthis:\n  body (the (ssubst_option x v (f l')))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom (\\<lambda>l. ssubst_option x v (f l)).\n     body (the (ssubst_option x v (f l)))\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t else f la))\n        T ->\n       Obj (\\<lambda>la.\n               ssubst_option x v (if la = l then Some t' else f la))\n        T", "from\n        beta.beta_Obj[OF domssubst[OF \\<open>l \\<in> dom f\\<close>] \\<open>finite L\\<close> _ this] \n        ssubstoption_insert[OF \\<open>l \\<in> dom f\\<close>] \\<open>pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         ?t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         ?t' = \\<sigma>[s,p] t'') \\<Longrightarrow>\n  Obj ((\\<lambda>l. ssubst_option x v (f l))(l \\<mapsto> ?t)) ?T ->\n  Obj ((\\<lambda>l. ssubst_option x v (f l))(l \\<mapsto> ?t')) ?T\n  (\\<lambda>la. ssubst_option ?x ?t' (if la = l then Some ?t else f la)) =\n  (\\<lambda>la. ssubst_option ?x ?t' (f la))(l \\<mapsto>\n  [?x \\<rightarrow> ?t'] ?t)\n  pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')", "show \n        \"Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t else f la)) T\n         \\<rightarrow>\\<^sub>\\<beta> Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t' else f la)) T\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         ?t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         ?t' = \\<sigma>[s,p] t'') \\<Longrightarrow>\n  Obj ((\\<lambda>l. ssubst_option x v (f l))(l \\<mapsto> ?t)) ?T ->\n  Obj ((\\<lambda>l. ssubst_option x v (f l))(l \\<mapsto> ?t')) ?T\n  (\\<lambda>la. ssubst_option ?x ?t' (if la = l then Some ?t else f la)) =\n  (\\<lambda>la. ssubst_option ?x ?t' (f la))(l \\<mapsto>\n  [?x \\<rightarrow> ?t'] ?t)\n  pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\n\ngoal (1 subgoal):\n 1. Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t else f la))\n     T ->\n    Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t' else f la))\n     T", "unfolding pred_cof_def"], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         ?t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         ?t' = \\<sigma>[s,p] t'') \\<Longrightarrow>\n  Obj ((\\<lambda>l. ssubst_option x v (f l))(l \\<mapsto> ?t)) ?T ->\n  Obj ((\\<lambda>l. ssubst_option x v (f l))(l \\<mapsto> ?t')) ?T\n  (\\<lambda>la. ssubst_option ?x ?t' (if la = l then Some ?t else f la)) =\n  (\\<lambda>la. ssubst_option ?x ?t' (f la))(l \\<mapsto>\n  [?x \\<rightarrow> ?t'] ?t)\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         [x \\<rightarrow> v] t' = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t else f la))\n     T ->\n    Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t' else f la))\n     T", "by simp"], ["proof (state)\nthis:\n  Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t else f la))\n   T ->\n  Obj (\\<lambda>la. ssubst_option x v (if la = l then Some t' else f la)) T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     [x \\<rightarrow> v] Obj (f(l \\<mapsto> t)) T ->\n     [x \\<rightarrow> v] Obj (f(l \\<mapsto> t')) T\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "case (Bnd L t t')"], ["proof (state)\nthis:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (\\<forall>x v.\n             lc v \\<longrightarrow>\n             [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n             [x \\<rightarrow> v] t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "note pred = this(2)"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (\\<forall>x v.\n             lc v \\<longrightarrow>\n             [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n             [x \\<rightarrow> v] t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (\\<forall>x v.\n                   lc v \\<longrightarrow>\n                   [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n                   [x \\<rightarrow> v] t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x v.\n                            lc v \\<longrightarrow>\n                            (\\<exists>L.\n                                finite L \\<and>\n                                pred_cof L ([x \\<rightarrow> v] t)\n                                 ([x \\<rightarrow> v] t'))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x v.\n       lc v \\<longrightarrow>\n       (\\<exists>L.\n           finite L \\<and>\n           pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       \\<exists>L.\n          finite L \\<and>\n          pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')", "fix x v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       \\<exists>L.\n          finite L \\<and>\n          pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')", "assume \"lc v\""], ["proof (state)\nthis:\n  lc v\n\ngoal (1 subgoal):\n 1. \\<And>x v.\n       lc v \\<Longrightarrow>\n       \\<exists>L.\n          finite L \\<and>\n          pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')", "from \\<open>finite L\\<close>"], ["proof (chain)\npicking this:\n  finite L", "show \"\\<exists>L. finite L \\<and> pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\""], ["proof (prove)\nusing this:\n  finite L\n\ngoal (1 subgoal):\n 1. \\<exists>L.\n       finite L \\<and>\n       pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')", "proof (rule_tac x = \"L \\<union> {x} \\<union> FV v\" in exI, \n          unfold pred_cof_def, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "fix s p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "assume \"s \\<notin> L\" and \"p \\<notin> L\" and \"s \\<noteq> p\""], ["proof (state)\nthis:\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "with pred \\<open>lc v\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (\\<forall>x v.\n             lc v \\<longrightarrow>\n             [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n             [x \\<rightarrow> v] t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n  lc v\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p", "obtain t'' where\n          \"t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t''\" and\n          ssubst_beta: \"[x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta> [x \\<rightarrow> v] t''\" and\n          \"t' = \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (\\<forall>x v.\n             lc v \\<longrightarrow>\n             [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n             [x \\<rightarrow> v] t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n  lc v\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'';\n         [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n         [x \\<rightarrow> v] t'';\n         t' = \\<sigma>[s,p] t''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t''\n  [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n  [x \\<rightarrow> v] t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "assume \"s \\<noteq> x\" and \"p \\<noteq> x\""], ["proof (state)\nthis:\n  s \\<noteq> x\n  p \\<noteq> x\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "hence \"x \\<notin> FV (Fvar s)\" and \"x \\<notin> FV (Fvar p)\""], ["proof (prove)\nusing this:\n  s \\<noteq> x\n  p \\<noteq> x\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Fvar s) &&& x \\<notin> FV (Fvar p)", "by auto"], ["proof (state)\nthis:\n  x \\<notin> FV (Fvar s)\n  x \\<notin> FV (Fvar p)\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "from ssubst_sopen_commute[OF \\<open>lc v\\<close> this] ssubst_beta"], ["proof (chain)\npicking this:\n  [x \\<rightarrow> v] {?n \\<rightarrow> [Fvar s,Fvar p]} ?t =\n  {?n \\<rightarrow> [Fvar s,Fvar p]} [x \\<rightarrow> v] ?t\n  [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n  [x \\<rightarrow> v] t''", "have \"[x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> [x \\<rightarrow> v] t''\""], ["proof (prove)\nusing this:\n  [x \\<rightarrow> v] {?n \\<rightarrow> [Fvar s,Fvar p]} ?t =\n  {?n \\<rightarrow> [Fvar s,Fvar p]} [x \\<rightarrow> v] ?t\n  [x \\<rightarrow> v] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) ->\n  [x \\<rightarrow> v] t''\n\ngoal (1 subgoal):\n 1. [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n    [x \\<rightarrow> v] t''", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n  [x \\<rightarrow> v] t''\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "moreover"], ["proof (state)\nthis:\n  [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n  [x \\<rightarrow> v] t''\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "assume \"s \\<notin> FV v\" and \"p \\<notin> FV v\""], ["proof (state)\nthis:\n  s \\<notin> FV v\n  p \\<notin> FV v\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "from \n          ssubst_sclose_commute[OF this not_sym[OF \\<open>s \\<noteq> x\\<close>] \n                                        not_sym[OF \\<open>p \\<noteq> x\\<close>]] \n          \\<open>t' = \\<sigma>[s,p] t''\\<close>"], ["proof (chain)\npicking this:\n  [x \\<rightarrow> v] {?n \\<leftarrow> [s,p]} ?t =\n  {?n \\<leftarrow> [s,p]} [x \\<rightarrow> v] ?t\n  t' = \\<sigma>[s,p] t''", "have \"[x \\<rightarrow> v] t' = \\<sigma>[s,p] [x \\<rightarrow> v] t''\""], ["proof (prove)\nusing this:\n  [x \\<rightarrow> v] {?n \\<leftarrow> [s,p]} ?t =\n  {?n \\<leftarrow> [s,p]} [x \\<rightarrow> v] ?t\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. [x \\<rightarrow> v] t' = \\<sigma>[s,p] [x \\<rightarrow> v] t''", "by (simp add: closez_def)"], ["proof (state)\nthis:\n  [x \\<rightarrow> v] t' = \\<sigma>[s,p] [x \\<rightarrow> v] t''\n\ngoal (1 subgoal):\n 1. \\<And>s p.\n       \\<lbrakk>finite L; s \\<noteq> x; s \\<notin> L; s \\<notin> FV v;\n        p \\<noteq> x; p \\<notin> L; p \\<notin> FV v; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t''.\n                            [x \\<rightarrow> v] t\\<^bsup>[Fvar\n                     s,Fvar p]\\<^esup> ->\n                            t'' \\<and>\n                            [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "ultimately"], ["proof (chain)\npicking this:\n  [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n  [x \\<rightarrow> v] t''\n  [x \\<rightarrow> v] t' = \\<sigma>[s,p] [x \\<rightarrow> v] t''", "show \"\\<exists>t''. [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->\n  [x \\<rightarrow> v] t''\n  [x \\<rightarrow> v] t' = \\<sigma>[s,p] [x \\<rightarrow> v] t''\n\ngoal (1 subgoal):\n 1. \\<exists>t''.\n       [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n       [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''", "by (rule_tac x = \"[x \\<rightarrow> v] t''\" in exI, simp)"], ["proof (state)\nthis:\n  \\<exists>t''.\n     [x \\<rightarrow> v] t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n     [x \\<rightarrow> v] t' = \\<sigma>[s,p] t''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>L.\n     finite L \\<and>\n     pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow>\n     (\\<exists>L.\n         finite L \\<and>\n         pred_cof L ([x \\<rightarrow> v] t) ([x \\<rightarrow> v] t'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x v.\n     lc v \\<longrightarrow> [x \\<rightarrow> v] t -> [x \\<rightarrow> v] t'\n\ngoal:\nNo subgoals!", "qed"], ["", "declare if_not_P [simp] not_less_eq [simp]\n  \\<comment> \\<open>don't add @{text \"r_into_rtrancl[intro!]\"}\\<close>"], ["", "lemma beta_preserves_FV[simp, rule_format]:\n  fixes t t' x\n  assumes \"t \\<rightarrow>\\<^sub>\\<beta> t'\"\n  shows \"x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "using assms"], ["proof (prove)\nusing this:\n  t -> t'\n\ngoal (1 subgoal):\n 1. x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "proof \n  (induct\n    taking: \"\\<lambda>t t'. x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'\"\n    rule: beta_induct)"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call t l u) \\<longrightarrow>\n                         x \\<notin> FV (Call t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call u l t) \\<longrightarrow>\n                         x \\<notin> FV (Call u l t')\n 3. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd t l u) \\<longrightarrow>\n                         x \\<notin> FV (Upd t' l u)\n 4. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 5. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 6. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 7. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 8. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "case CallL"], ["proof (state)\nthis:\n  t_ -> t'_\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  lc u_\n\ngoal (8 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call t l u) \\<longrightarrow>\n                         x \\<notin> FV (Call t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call u l t) \\<longrightarrow>\n                         x \\<notin> FV (Call u l t')\n 3. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd t l u) \\<longrightarrow>\n                         x \\<notin> FV (Upd t' l u)\n 4. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 5. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 6. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 7. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 8. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "thus ?case"], ["proof (prove)\nusing this:\n  t_ -> t'_\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  lc u_\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Call t_ l_ u_) \\<longrightarrow>\n    x \\<notin> FV (Call t'_ l_ u_)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> FV (Call t_ l_ u_) \\<longrightarrow>\n  x \\<notin> FV (Call t'_ l_ u_)\n\ngoal (7 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call u l t) \\<longrightarrow>\n                         x \\<notin> FV (Call u l t')\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd t l u) \\<longrightarrow>\n                         x \\<notin> FV (Upd t' l u)\n 3. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 4. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 5. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 6. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 7. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call u l t) \\<longrightarrow>\n                         x \\<notin> FV (Call u l t')\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd t l u) \\<longrightarrow>\n                         x \\<notin> FV (Upd t' l u)\n 3. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 4. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 5. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 6. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 7. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "case CallR"], ["proof (state)\nthis:\n  t_ -> t'_\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  lc u_\n\ngoal (7 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call u l t) \\<longrightarrow>\n                         x \\<notin> FV (Call u l t')\n 2. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd t l u) \\<longrightarrow>\n                         x \\<notin> FV (Upd t' l u)\n 3. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 4. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 5. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 6. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 7. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "thus ?case"], ["proof (prove)\nusing this:\n  t_ -> t'_\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  lc u_\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Call u_ l_ t_) \\<longrightarrow>\n    x \\<notin> FV (Call u_ l_ t'_)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> FV (Call u_ l_ t_) \\<longrightarrow>\n  x \\<notin> FV (Call u_ l_ t'_)\n\ngoal (6 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd t l u) \\<longrightarrow>\n                         x \\<notin> FV (Upd t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 3. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 4. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 5. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 6. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd t l u) \\<longrightarrow>\n                         x \\<notin> FV (Upd t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 3. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 4. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 5. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 6. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "case UpdL"], ["proof (state)\nthis:\n  t_ -> t'_\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  body u_\n\ngoal (6 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>t -> t'; x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        body u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd t l u) \\<longrightarrow>\n                         x \\<notin> FV (Upd t' l u)\n 2. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 3. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 4. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 5. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 6. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "thus ?case"], ["proof (prove)\nusing this:\n  t_ -> t'_\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  body u_\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Upd t_ l_ u_) \\<longrightarrow>\n    x \\<notin> FV (Upd t'_ l_ u_)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> FV (Upd t_ l_ u_) \\<longrightarrow>\n  x \\<notin> FV (Upd t'_ l_ u_)\n\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "case UpdR"], ["proof (state)\nthis:\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  lc u_\n\ngoal (5 subgoals):\n 1. \\<And>t t' u l.\n       \\<lbrakk>x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        lc u\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd u l t) \\<longrightarrow>\n                         x \\<notin> FV (Upd u l t')\n 2. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 3. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 4. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 5. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "thus ?case"], ["proof (prove)\nusing this:\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  lc u_\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Upd u_ l_ t_) \\<longrightarrow>\n    x \\<notin> FV (Upd u_ l_ t'_)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> FV (Upd u_ l_ t_) \\<longrightarrow>\n  x \\<notin> FV (Upd u_ l_ t'_)\n\ngoal (4 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 3. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 4. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 3. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 4. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "case Upd"], ["proof (state)\nthis:\n  l_ \\<in> dom f_\n  lc (Obj f_ T_)\n  body t_\n\ngoal (4 subgoals):\n 1. \\<And>l f T t.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); body t\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Upd (Obj f T) l t) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t)) T)\n 2. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 3. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 4. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "thus ?case"], ["proof (prove)\nusing this:\n  l_ \\<in> dom f_\n  lc (Obj f_ T_)\n  body t_\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Upd (Obj f_ T_) l_ t_) \\<longrightarrow>\n    x \\<notin> FV (Obj (f_(l_ \\<mapsto> t_)) T_)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> FV (Upd (Obj f_ T_) l_ t_) \\<longrightarrow>\n  x \\<notin> FV (Obj (f_(l_ \\<mapsto> t_)) T_)\n\ngoal (3 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 2. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 3. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 2. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 3. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "case Obj"], ["proof (state)\nthis:\n  l_ \\<in> dom f_\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  \\<forall>l\\<in>dom f_. body (the (f_ l))\n\ngoal (3 subgoals):\n 1. \\<And>l f t t' T.\n       \\<lbrakk>l \\<in> dom f;\n        x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t';\n        \\<forall>l\\<in>dom f. body (the (f l))\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Obj (f(l \\<mapsto> t))\n   T) \\<longrightarrow>\n                         x \\<notin> FV (Obj (f(l \\<mapsto> t')) T)\n 2. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 3. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "thus ?case"], ["proof (prove)\nusing this:\n  l_ \\<in> dom f_\n  x \\<notin> FV t_ \\<longrightarrow> x \\<notin> FV t'_\n  \\<forall>l\\<in>dom f_. body (the (f_ l))\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Obj (f_(l_ \\<mapsto> t_)) T_) \\<longrightarrow>\n    x \\<notin> FV (Obj (f_(l_ \\<mapsto> t'_)) T_)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> FV (Obj (f_(l_ \\<mapsto> t_)) T_) \\<longrightarrow>\n  x \\<notin> FV (Obj (f_(l_ \\<mapsto> t'_)) T_)\n\ngoal (2 subgoals):\n 1. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "case (beta l f T t)"], ["proof (state)\nthis:\n  l \\<in> dom f\n  lc (Obj f T)\n  lc t\n\ngoal (2 subgoals):\n 1. \\<And>l f T a.\n       \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc a\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV (Call (Obj f T) l\n   a) \\<longrightarrow>\n                         x \\<notin> FV (the\n   (f l)\\<^bsup>[Obj f T,a]\\<^esup>)\n 2. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "thus ?case"], ["proof (prove)\nusing this:\n  l \\<in> dom f\n  lc (Obj f T)\n  lc t\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (Call (Obj f T) l t) \\<longrightarrow>\n    x \\<notin> FV (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc t;\n     x \\<notin> FV (Call (Obj f T) l t)\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> FV (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "assume \"x \\<notin> FV (Call (Obj f T) l t)\""], ["proof (state)\nthis:\n  x \\<notin> FV (Call (Obj f T) l t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc t;\n     x \\<notin> FV (Call (Obj f T) l t)\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> FV (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "with \\<open>l \\<in> dom f\\<close>"], ["proof (chain)\npicking this:\n  l \\<in> dom f\n  x \\<notin> FV (Call (Obj f T) l t)", "have \"x \\<notin> FV (the (f l)) \\<union> FV (Obj f T) \\<union> FV t\""], ["proof (prove)\nusing this:\n  l \\<in> dom f\n  x \\<notin> FV (Call (Obj f T) l t)\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (the (f l)) \\<union> FV (Obj f T) \\<union> FV t", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>f l = Some y;\n        \\<forall>xa\\<in>dom f. x \\<notin> FVoption (f xa); x \\<notin> FV t;\n        x \\<in> FV y\\<rbrakk>\n       \\<Longrightarrow> False", "fix y :: sterm"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>f l = Some y;\n        \\<forall>xa\\<in>dom f. x \\<notin> FVoption (f xa); x \\<notin> FV t;\n        x \\<in> FV y\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"x \\<in> FV y\" and \"f l = Some y\""], ["proof (state)\nthis:\n  x \\<in> FV y\n  f l = Some y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>f l = Some y;\n        \\<forall>xa\\<in>dom f. x \\<notin> FVoption (f xa); x \\<notin> FV t;\n        x \\<in> FV y\\<rbrakk>\n       \\<Longrightarrow> False", "hence \"x \\<in> FVoption (f l)\""], ["proof (prove)\nusing this:\n  x \\<in> FV y\n  f l = Some y\n\ngoal (1 subgoal):\n 1. x \\<in> FVoption (f l)", "by auto"], ["proof (state)\nthis:\n  x \\<in> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>f l = Some y;\n        \\<forall>xa\\<in>dom f. x \\<notin> FVoption (f xa); x \\<notin> FV t;\n        x \\<in> FV y\\<rbrakk>\n       \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  x \\<in> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>f l = Some y;\n        \\<forall>xa\\<in>dom f. x \\<notin> FVoption (f xa); x \\<notin> FV t;\n        x \\<in> FV y\\<rbrakk>\n       \\<Longrightarrow> False", "assume \"\\<forall>l\\<in>dom f. x \\<notin> FVoption (f l)\""], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom f. x \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>f l = Some y;\n        \\<forall>xa\\<in>dom f. x \\<notin> FVoption (f xa); x \\<notin> FV t;\n        x \\<in> FV y\\<rbrakk>\n       \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> FVoption (f l)\n  \\<forall>l\\<in>dom f. x \\<notin> FVoption (f l)", "show False"], ["proof (prove)\nusing this:\n  x \\<in> FVoption (f l)\n  \\<forall>l\\<in>dom f. x \\<notin> FVoption (f l)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>l \\<in> dom f\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> FVoption (f l)\n  \\<forall>l\\<in>dom f. x \\<notin> FVoption (f l)\n  l \\<in> dom f\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> FV (the (f l)) \\<union> FV (Obj f T) \\<union> FV t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>l \\<in> dom f; lc (Obj f T); lc t;\n     x \\<notin> FV (Call (Obj f T) l t)\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> FV (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "from contra_subsetD[OF sopen_FV this]"], ["proof (chain)\npicking this:\n  x \\<notin> FV ({?n1 \\<rightarrow> [Obj f T,t]} the (f l))", "show \"x \\<notin> FV (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)\""], ["proof (prove)\nusing this:\n  x \\<notin> FV ({?n1 \\<rightarrow> [Obj f T,t]} the (f l))\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)", "by (simp add: openz_def)"], ["proof (state)\nthis:\n  x \\<notin> FV (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> FV (Call (Obj f T) l t) \\<longrightarrow>\n  x \\<notin> FV (the (f l)\\<^bsup>[Obj f T,t]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "case (Bnd L t t')"], ["proof (state)\nthis:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (x \\<notin> FV (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<longrightarrow>\n          x \\<notin> FV t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. \\<And>L t t'.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n               (x \\<notin> FV (t\\<^bsup>[Fvar\n    s,Fvar p]\\<^esup>) \\<longrightarrow>\n                x \\<notin> FV t'') \\<and>\n               t' = \\<sigma>[s,p] t'')\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "thus ?case"], ["proof (prove)\nusing this:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (x \\<notin> FV (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<longrightarrow>\n          x \\<notin> FV t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite L;\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n            (x \\<notin> FV (t\\<^bsup>[Fvar\n s,Fvar p]\\<^esup>) \\<longrightarrow>\n             x \\<notin> FV t'') \\<and>\n            t' = \\<sigma>[s,p] t'');\n     x \\<notin> FV t\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> FV t'", "assume \"x \\<notin> FV t\""], ["proof (state)\nthis:\n  x \\<notin> FV t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite L;\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n            (x \\<notin> FV (t\\<^bsup>[Fvar\n s,Fvar p]\\<^esup>) \\<longrightarrow>\n             x \\<notin> FV t'') \\<and>\n            t' = \\<sigma>[s,p] t'');\n     x \\<notin> FV t\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> FV t'", "from \\<open>finite L\\<close> exFresh_s_p_cof[of \"L \\<union> {x}\"]"], ["proof (chain)\npicking this:\n  finite L\n  finite (L \\<union> {x}) \\<Longrightarrow>\n  \\<exists>s p.\n     s \\<notin> L \\<union> {x} \\<and>\n     p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p", "obtain s p where sp: \"s \\<notin> L \\<union> {x} \\<and> p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\""], ["proof (prove)\nusing this:\n  finite L\n  finite (L \\<union> {x}) \\<Longrightarrow>\n  \\<exists>s p.\n     s \\<notin> L \\<union> {x} \\<and>\n     p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>s p.\n        s \\<notin> L \\<union> {x} \\<and>\n        p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> L \\<union> {x} \\<and>\n  p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite L;\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n            (x \\<notin> FV (t\\<^bsup>[Fvar\n s,Fvar p]\\<^esup>) \\<longrightarrow>\n             x \\<notin> FV t'') \\<and>\n            t' = \\<sigma>[s,p] t'');\n     x \\<notin> FV t\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> FV t'", "with \\<open>x \\<notin> FV t\\<close> sopen_FV[of 0 \"Fvar s\" \"Fvar p\" t]"], ["proof (chain)\npicking this:\n  x \\<notin> FV t\n  FV ({0 \\<rightarrow> [Fvar s,Fvar p]} t)\n  \\<subseteq> FV t \\<union> FV (Fvar s) \\<union> FV (Fvar p)\n  s \\<notin> L \\<union> {x} \\<and>\n  p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p", "have \"x \\<notin> FV (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  x \\<notin> FV t\n  FV ({0 \\<rightarrow> [Fvar s,Fvar p]} t)\n  \\<subseteq> FV t \\<union> FV (Fvar s) \\<union> FV (Fvar p)\n  s \\<notin> L \\<union> {x} \\<and>\n  p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. x \\<notin> FV (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by (auto simp: openz_def)"], ["proof (state)\nthis:\n  x \\<notin> FV (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite L;\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n            (x \\<notin> FV (t\\<^bsup>[Fvar\n s,Fvar p]\\<^esup>) \\<longrightarrow>\n             x \\<notin> FV t'') \\<and>\n            t' = \\<sigma>[s,p] t'');\n     x \\<notin> FV t\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> FV t'", "with sp Bnd(2)"], ["proof (chain)\npicking this:\n  s \\<notin> L \\<union> {x} \\<and>\n  p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (x \\<notin> FV (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<longrightarrow>\n          x \\<notin> FV t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n  x \\<notin> FV (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "obtain t'' where\n      \"x \\<notin> FV t''\" and \"t' = \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  s \\<notin> L \\<union> {x} \\<and>\n  p \\<notin> L \\<union> {x} \\<and> s \\<noteq> p\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n         (x \\<notin> FV (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<longrightarrow>\n          x \\<notin> FV t'') \\<and>\n         t' = \\<sigma>[s,p] t'')\n  x \\<notin> FV (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>x \\<notin> FV t''; t' = \\<sigma>[s,p] t''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<notin> FV t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite L;\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            t\\<^bsup>[Fvar s,Fvar p]\\<^esup> -> t'' \\<and>\n            (x \\<notin> FV (t\\<^bsup>[Fvar\n s,Fvar p]\\<^esup>) \\<longrightarrow>\n             x \\<notin> FV t'') \\<and>\n            t' = \\<sigma>[s,p] t'');\n     x \\<notin> FV t\\<rbrakk>\n    \\<Longrightarrow> x \\<notin> FV t'", "with sclose_subset_FV[of 0 s p t'']"], ["proof (chain)\npicking this:\n  FV ({0 \\<leftarrow> [s,p]} t'') \\<subseteq> FV t''\n  x \\<notin> FV t''\n  t' = \\<sigma>[s,p] t''", "show \"x \\<notin> FV t'\""], ["proof (prove)\nusing this:\n  FV ({0 \\<leftarrow> [s,p]} t'') \\<subseteq> FV t''\n  x \\<notin> FV t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. x \\<notin> FV t'", "by (auto simp: closez_def)"], ["proof (state)\nthis:\n  x \\<notin> FV t'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_lc[simp, rule_format]: \"t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t' \\<Longrightarrow> t \\<noteq> t' \\<longrightarrow> lc t \\<and> lc t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t ->> t' \\<Longrightarrow>\n    t \\<noteq> t' \\<longrightarrow> lc t \\<and> lc t'", "by (erule rtranclp.induct, simp, \n      drule beta_lc, blast)"], ["", "lemma rtrancl_beta_lc2[simp]: \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; lc t \\<rbrakk> \\<Longrightarrow> lc t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t ->> t'; lc t\\<rbrakk> \\<Longrightarrow> lc t'", "by (case_tac \"t = t'\", simp+)"], ["", "lemma rtrancl_beta_body:\n  fixes L t t'\n  assumes \n  \"finite L\" and\n  \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p] t'')\" and\n  \"body t\"\n  shows \"body t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. body t'", "proof (cases \"t = t'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t = t' \\<Longrightarrow> body t'\n 2. t \\<noteq> t' \\<Longrightarrow> body t'", "case True"], ["proof (state)\nthis:\n  t = t'\n\ngoal (2 subgoals):\n 1. t = t' \\<Longrightarrow> body t'\n 2. t \\<noteq> t' \\<Longrightarrow> body t'", "with assms(3)"], ["proof (chain)\npicking this:\n  body t\n  t = t'", "show ?thesis"], ["proof (prove)\nusing this:\n  body t\n  t = t'\n\ngoal (1 subgoal):\n 1. body t'", "by simp"], ["proof (state)\nthis:\n  body t'\n\ngoal (1 subgoal):\n 1. t \\<noteq> t' \\<Longrightarrow> body t'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> t' \\<Longrightarrow> body t'", "from exFresh_s_p_cof[OF \\<open>finite L\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "obtain s p where sp: \"s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\""], ["proof (prove)\nusing this:\n  \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. t \\<noteq> t' \\<Longrightarrow> body t'", "hence \"s \\<noteq> p\""], ["proof (prove)\nusing this:\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. s \\<noteq> p", "by simp"], ["proof (state)\nthis:\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. t \\<noteq> t' \\<Longrightarrow> body t'", "from assms(2) sp"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "obtain t'' where \"t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t''\" and \"t' = \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n         t' = \\<sigma>[s,p] t''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. t \\<noteq> t' \\<Longrightarrow> body t'", "with \\<open>body t\\<close>"], ["proof (chain)\npicking this:\n  body t\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t''\n  t' = \\<sigma>[s,p] t''", "have \"lc t''\""], ["proof (prove)\nusing this:\n  body t\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. lc t''", "proof (cases \"(t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t''\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>body t; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n     t' = \\<sigma>[s,p] t'';\n     (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t''\\<rbrakk>\n    \\<Longrightarrow> lc t''\n 2. \\<lbrakk>body t; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n     t' = \\<sigma>[s,p] t'';\n     (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t''\\<rbrakk>\n    \\<Longrightarrow> lc t''", "case True"], ["proof (state)\nthis:\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>body t; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n     t' = \\<sigma>[s,p] t'';\n     (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t''\\<rbrakk>\n    \\<Longrightarrow> lc t''\n 2. \\<lbrakk>body t; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n     t' = \\<sigma>[s,p] t'';\n     (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t''\\<rbrakk>\n    \\<Longrightarrow> lc t''", "with body_lc[OF \\<open>body t\\<close>]"], ["proof (chain)\npicking this:\n  \\<lbrakk>lc ?s; lc ?p\\<rbrakk>\n  \\<Longrightarrow> lc (t\\<^bsup>[?s,?p]\\<^esup>)\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t''", "show \"lc t''\""], ["proof (prove)\nusing this:\n  \\<lbrakk>lc ?s; lc ?p\\<rbrakk>\n  \\<Longrightarrow> lc (t\\<^bsup>[?s,?p]\\<^esup>)\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t''\n\ngoal (1 subgoal):\n 1. lc t''", "by auto"], ["proof (state)\nthis:\n  lc t''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>body t; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n     t' = \\<sigma>[s,p] t'';\n     (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t''\\<rbrakk>\n    \\<Longrightarrow> lc t''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>body t; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n     t' = \\<sigma>[s,p] t'';\n     (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t''\\<rbrakk>\n    \\<Longrightarrow> lc t''", "case False"], ["proof (state)\nthis:\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>body t; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n     t' = \\<sigma>[s,p] t'';\n     (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t''\\<rbrakk>\n    \\<Longrightarrow> lc t''", "with rtrancl_beta_lc[OF \\<open>t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t''\\<close>]"], ["proof (chain)\npicking this:\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'' \\<Longrightarrow>\n  lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t''\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t''", "show \"lc t''\""], ["proof (prove)\nusing this:\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'' \\<Longrightarrow>\n  lc (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t''\n  (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t''\n\ngoal (1 subgoal):\n 1. lc t''", "by auto"], ["proof (state)\nthis:\n  lc t''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lc t''\n\ngoal (1 subgoal):\n 1. t \\<noteq> t' \\<Longrightarrow> body t'", "from lc_body[OF this \\<open>s \\<noteq> p\\<close>] \\<open>t' = \\<sigma>[s,p] t''\\<close>"], ["proof (chain)\npicking this:\n  body \\<sigma>[s,p] t''\n  t' = \\<sigma>[s,p] t''", "show \"body t'\""], ["proof (prove)\nusing this:\n  body \\<sigma>[s,p] t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. body t'", "by simp"], ["proof (state)\nthis:\n  body t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_preserves_FV[simp, rule_format]: \n  \"t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t' \\<Longrightarrow> x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t ->> t' \\<Longrightarrow>\n    x \\<notin> FV t \\<longrightarrow> x \\<notin> FV t'", "proof (induct t t' rule: rtranclp.induct, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b; x \\<notin> FV a \\<longrightarrow> x \\<notin> FV b;\n        b -> c\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV a \\<longrightarrow> x \\<notin> FV c", "case (rtrancl_into_rtrancl a b c)"], ["proof (state)\nthis:\n  a ->> b\n  x \\<notin> FV a \\<longrightarrow> x \\<notin> FV b\n  b -> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b; x \\<notin> FV a \\<longrightarrow> x \\<notin> FV b;\n        b -> c\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> FV a \\<longrightarrow> x \\<notin> FV c", "thus ?case"], ["proof (prove)\nusing this:\n  a ->> b\n  x \\<notin> FV a \\<longrightarrow> x \\<notin> FV b\n  b -> c\n\ngoal (1 subgoal):\n 1. x \\<notin> FV a \\<longrightarrow> x \\<notin> FV c", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; b -> c; x \\<notin> FV a; x \\<in> FV c;\n     x \\<notin> FV b\\<rbrakk>\n    \\<Longrightarrow> False", "assume \"x \\<notin> FV b\" and \"x \\<in> FV c\""], ["proof (state)\nthis:\n  x \\<notin> FV b\n  x \\<in> FV c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; b -> c; x \\<notin> FV a; x \\<in> FV c;\n     x \\<notin> FV b\\<rbrakk>\n    \\<Longrightarrow> False", "from beta_preserves_FV[OF \\<open>b \\<rightarrow>\\<^sub>\\<beta> c\\<close> this(1)] this(2)"], ["proof (chain)\npicking this:\n  x \\<notin> FV c\n  x \\<in> FV c", "show False"], ["proof (prove)\nusing this:\n  x \\<notin> FV c\n  x \\<in> FV c\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<notin> FV a \\<longrightarrow> x \\<notin> FV c\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Congruence rules\\<close>"], ["", "lemma rtrancl_beta_CallL [intro!, rule_format]:\n  \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; lc u \\<rbrakk> \\<Longrightarrow> Call t l u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Call t' l u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t ->> t'; lc u\\<rbrakk>\n    \\<Longrightarrow> Call t l u ->> Call t' l u", "proof (induct t t' rule: rtranclp.induct, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b; lc u \\<Longrightarrow> Call a l u ->> Call b l u;\n        b -> c; lc u\\<rbrakk>\n       \\<Longrightarrow> Call a l u ->> Call c l u", "case (rtrancl_into_rtrancl a b c)"], ["proof (state)\nthis:\n  a ->> b\n  lc u \\<Longrightarrow> Call a l u ->> Call b l u\n  b -> c\n  lc u\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b; lc u \\<Longrightarrow> Call a l u ->> Call b l u;\n        b -> c; lc u\\<rbrakk>\n       \\<Longrightarrow> Call a l u ->> Call c l u", "thus ?case"], ["proof (prove)\nusing this:\n  a ->> b\n  lc u \\<Longrightarrow> Call a l u ->> Call b l u\n  b -> c\n  lc u\n\ngoal (1 subgoal):\n 1. Call a l u ->> Call c l u", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Call a l u ->> Call b l u; b -> c; lc u\\<rbrakk>\n    \\<Longrightarrow> Call a l u ->> Call c l u", "from \\<open>b \\<rightarrow>\\<^sub>\\<beta> c\\<close> \\<open>lc u\\<close>"], ["proof (chain)\npicking this:\n  b -> c\n  lc u", "have \"Call b l u \\<rightarrow>\\<^sub>\\<beta> Call c l u\""], ["proof (prove)\nusing this:\n  b -> c\n  lc u\n\ngoal (1 subgoal):\n 1. Call b l u -> Call c l u", "by simp"], ["proof (state)\nthis:\n  Call b l u -> Call c l u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Call a l u ->> Call b l u; b -> c; lc u\\<rbrakk>\n    \\<Longrightarrow> Call a l u ->> Call c l u", "with rtrancl_into_rtrancl(2)[OF \\<open>lc u\\<close>]"], ["proof (chain)\npicking this:\n  Call a l u ->> Call b l u\n  Call b l u -> Call c l u", "show \"Call a l u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Call c l u\""], ["proof (prove)\nusing this:\n  Call a l u ->> Call b l u\n  Call b l u -> Call c l u\n\ngoal (1 subgoal):\n 1. Call a l u ->> Call c l u", "by auto"], ["proof (state)\nthis:\n  Call a l u ->> Call c l u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Call a l u ->> Call c l u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_CallR [intro!, rule_format]:\n  \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; lc u \\<rbrakk> \\<Longrightarrow> Call u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Call u l t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t ->> t'; lc u\\<rbrakk>\n    \\<Longrightarrow> Call u l t ->> Call u l t'", "proof (induct t t' rule: rtranclp.induct, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b; lc u \\<Longrightarrow> Call u l a ->> Call u l b;\n        b -> c; lc u\\<rbrakk>\n       \\<Longrightarrow> Call u l a ->> Call u l c", "case (rtrancl_into_rtrancl a b c)"], ["proof (state)\nthis:\n  a ->> b\n  lc u \\<Longrightarrow> Call u l a ->> Call u l b\n  b -> c\n  lc u\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b; lc u \\<Longrightarrow> Call u l a ->> Call u l b;\n        b -> c; lc u\\<rbrakk>\n       \\<Longrightarrow> Call u l a ->> Call u l c", "thus ?case"], ["proof (prove)\nusing this:\n  a ->> b\n  lc u \\<Longrightarrow> Call u l a ->> Call u l b\n  b -> c\n  lc u\n\ngoal (1 subgoal):\n 1. Call u l a ->> Call u l c", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Call u l a ->> Call u l b; b -> c; lc u\\<rbrakk>\n    \\<Longrightarrow> Call u l a ->> Call u l c", "from \\<open>b \\<rightarrow>\\<^sub>\\<beta> c\\<close> \\<open>lc u\\<close>"], ["proof (chain)\npicking this:\n  b -> c\n  lc u", "have \"Call u l b \\<rightarrow>\\<^sub>\\<beta> Call u l c\""], ["proof (prove)\nusing this:\n  b -> c\n  lc u\n\ngoal (1 subgoal):\n 1. Call u l b -> Call u l c", "by simp"], ["proof (state)\nthis:\n  Call u l b -> Call u l c\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Call u l a ->> Call u l b; b -> c; lc u\\<rbrakk>\n    \\<Longrightarrow> Call u l a ->> Call u l c", "with rtrancl_into_rtrancl(2)[OF \\<open>lc u\\<close>]"], ["proof (chain)\npicking this:\n  Call u l a ->> Call u l b\n  Call u l b -> Call u l c", "show \"Call u l a \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Call u l c\""], ["proof (prove)\nusing this:\n  Call u l a ->> Call u l b\n  Call u l b -> Call u l c\n\ngoal (1 subgoal):\n 1. Call u l a ->> Call u l c", "by auto"], ["proof (state)\nthis:\n  Call u l a ->> Call u l c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Call u l a ->> Call u l c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_Call [intro!, rule_format]:\n  \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; lc t; u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* u'; lc u \\<rbrakk> \n  \\<Longrightarrow> Call t l u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Call t' l u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t ->> t'; lc t; u ->> u'; lc u\\<rbrakk>\n    \\<Longrightarrow> Call t l u ->> Call t' l u'", "proof (induct t t' rule: rtranclp.induct, blast)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b;\n        \\<lbrakk>lc a; u ->> u'; lc u\\<rbrakk>\n        \\<Longrightarrow> Call a l u ->> Call b l u';\n        b -> c; lc a; u ->> u'; lc u\\<rbrakk>\n       \\<Longrightarrow> Call a l u ->> Call c l u'", "case (rtrancl_into_rtrancl a b c)"], ["proof (state)\nthis:\n  a ->> b\n  \\<lbrakk>lc a; u ->> u'; lc u\\<rbrakk>\n  \\<Longrightarrow> Call a l u ->> Call b l u'\n  b -> c\n  lc a\n  u ->> u'\n  lc u\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b;\n        \\<lbrakk>lc a; u ->> u'; lc u\\<rbrakk>\n        \\<Longrightarrow> Call a l u ->> Call b l u';\n        b -> c; lc a; u ->> u'; lc u\\<rbrakk>\n       \\<Longrightarrow> Call a l u ->> Call c l u'", "thus ?case"], ["proof (prove)\nusing this:\n  a ->> b\n  \\<lbrakk>lc a; u ->> u'; lc u\\<rbrakk>\n  \\<Longrightarrow> Call a l u ->> Call b l u'\n  b -> c\n  lc a\n  u ->> u'\n  lc u\n\ngoal (1 subgoal):\n 1. Call a l u ->> Call c l u'", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Call a l u ->> Call b l u'; b -> c; lc a; u ->> u';\n     lc u\\<rbrakk>\n    \\<Longrightarrow> Call a l u ->> Call c l u'", "from \\<open>u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* u'\\<close> \\<open>lc u\\<close>"], ["proof (chain)\npicking this:\n  u ->> u'\n  lc u", "have \"lc u'\""], ["proof (prove)\nusing this:\n  u ->> u'\n  lc u\n\ngoal (1 subgoal):\n 1. lc u'", "by auto"], ["proof (state)\nthis:\n  lc u'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Call a l u ->> Call b l u'; b -> c; lc a; u ->> u';\n     lc u\\<rbrakk>\n    \\<Longrightarrow> Call a l u ->> Call c l u'", "with \\<open>b \\<rightarrow>\\<^sub>\\<beta> c\\<close>"], ["proof (chain)\npicking this:\n  b -> c\n  lc u'", "have \"Call b l u' \\<rightarrow>\\<^sub>\\<beta> Call c l u'\""], ["proof (prove)\nusing this:\n  b -> c\n  lc u'\n\ngoal (1 subgoal):\n 1. Call b l u' -> Call c l u'", "by simp"], ["proof (state)\nthis:\n  Call b l u' -> Call c l u'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Call a l u ->> Call b l u'; b -> c; lc a; u ->> u';\n     lc u\\<rbrakk>\n    \\<Longrightarrow> Call a l u ->> Call c l u'", "with rtrancl_into_rtrancl(2)[OF \\<open>lc a\\<close> \\<open>u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* u'\\<close> \\<open>lc u\\<close>]"], ["proof (chain)\npicking this:\n  Call a l u ->> Call b l u'\n  Call b l u' -> Call c l u'", "show \"Call a l u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Call c l u'\""], ["proof (prove)\nusing this:\n  Call a l u ->> Call b l u'\n  Call b l u' -> Call c l u'\n\ngoal (1 subgoal):\n 1. Call a l u ->> Call c l u'", "by auto"], ["proof (state)\nthis:\n  Call a l u ->> Call c l u'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Call a l u ->> Call c l u'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_UpdL:\n  \"\\<lbrakk> t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'; body u \\<rbrakk> \\<Longrightarrow> Upd t l u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd t' l u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t ->> t'; body u\\<rbrakk>\n    \\<Longrightarrow> Upd t l u ->> Upd t' l u", "proof (induct t t' rule: rtranclp.induct, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b; body u \\<Longrightarrow> Upd a l u ->> Upd b l u;\n        b -> c; body u\\<rbrakk>\n       \\<Longrightarrow> Upd a l u ->> Upd c l u", "case (rtrancl_into_rtrancl a b c)"], ["proof (state)\nthis:\n  a ->> b\n  body u \\<Longrightarrow> Upd a l u ->> Upd b l u\n  b -> c\n  body u\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b; body u \\<Longrightarrow> Upd a l u ->> Upd b l u;\n        b -> c; body u\\<rbrakk>\n       \\<Longrightarrow> Upd a l u ->> Upd c l u", "thus ?case"], ["proof (prove)\nusing this:\n  a ->> b\n  body u \\<Longrightarrow> Upd a l u ->> Upd b l u\n  b -> c\n  body u\n\ngoal (1 subgoal):\n 1. Upd a l u ->> Upd c l u", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Upd a l u ->> Upd b l u; b -> c; body u\\<rbrakk>\n    \\<Longrightarrow> Upd a l u ->> Upd c l u", "from \\<open>b \\<rightarrow>\\<^sub>\\<beta> c\\<close> \\<open>body u\\<close>"], ["proof (chain)\npicking this:\n  b -> c\n  body u", "have \"Upd b l u \\<rightarrow>\\<^sub>\\<beta> Upd c l u\""], ["proof (prove)\nusing this:\n  b -> c\n  body u\n\ngoal (1 subgoal):\n 1. Upd b l u -> Upd c l u", "by simp"], ["proof (state)\nthis:\n  Upd b l u -> Upd c l u\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Upd a l u ->> Upd b l u; b -> c; body u\\<rbrakk>\n    \\<Longrightarrow> Upd a l u ->> Upd c l u", "with rtrancl_into_rtrancl(2)[OF \\<open>body u\\<close>]"], ["proof (chain)\npicking this:\n  Upd a l u ->> Upd b l u\n  Upd b l u -> Upd c l u", "show \"Upd a l u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd c l u\""], ["proof (prove)\nusing this:\n  Upd a l u ->> Upd b l u\n  Upd b l u -> Upd c l u\n\ngoal (1 subgoal):\n 1. Upd a l u ->> Upd c l u", "by auto"], ["proof (state)\nthis:\n  Upd a l u ->> Upd c l u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Upd a l u ->> Upd c l u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma beta_binder[rule_format]:\n  fixes t t'\n  assumes \"t \\<rightarrow>\\<^sub>\\<beta> t'\"\n  shows \n  \"\\<forall>L s p. finite L \\<longrightarrow> s \\<notin> L \\<longrightarrow> p \\<notin> L \\<longrightarrow> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>L'. finite L' \\<and> (\\<forall>sa pa. sa \\<notin> L' \\<and> pa \\<notin> L' \\<and> sa \\<noteq> pa\n                            \\<longrightarrow> (\\<exists>t''. (\\<sigma>[s,p] t)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \n                                     \\<and> \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t'')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>L s p.\n       finite L \\<longrightarrow>\n       s \\<notin> L \\<longrightarrow>\n       p \\<notin> L \\<longrightarrow>\n       s \\<noteq> p \\<longrightarrow>\n       (\\<exists>L'.\n           finite L' \\<and>\n           (\\<forall>sa pa.\n               sa \\<notin> L' \\<and>\n               pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n               (\\<exists>t''.\n                   \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n                   t'' \\<and>\n                   \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t'')))", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>L s p.\n       \\<lbrakk>finite L; s \\<notin> L; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L'.\n                            finite L' \\<and>\n                            (\\<forall>sa pa.\n                                sa \\<notin> L' \\<and>\n                                pa \\<notin> L' \\<and>\n                                sa \\<noteq> pa \\<longrightarrow>\n                                (\\<exists>t''.\n                                    \\<sigma>[s,p] t\\<^bsup>[Fvar\n                       sa,Fvar pa]\\<^esup> ->\n                                    t'' \\<and>\n                                    \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''))", "fix L :: \"fVariable set\" and s :: fVariable and p :: fVariable"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>L s p.\n       \\<lbrakk>finite L; s \\<notin> L; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L'.\n                            finite L' \\<and>\n                            (\\<forall>sa pa.\n                                sa \\<notin> L' \\<and>\n                                pa \\<notin> L' \\<and>\n                                sa \\<noteq> pa \\<longrightarrow>\n                                (\\<exists>t''.\n                                    \\<sigma>[s,p] t\\<^bsup>[Fvar\n                       sa,Fvar pa]\\<^esup> ->\n                                    t'' \\<and>\n                                    \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''))", "assume \"s \\<noteq> p\""], ["proof (state)\nthis:\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>L s p.\n       \\<lbrakk>finite L; s \\<notin> L; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L'.\n                            finite L' \\<and>\n                            (\\<forall>sa pa.\n                                sa \\<notin> L' \\<and>\n                                pa \\<notin> L' \\<and>\n                                sa \\<noteq> pa \\<longrightarrow>\n                                (\\<exists>t''.\n                                    \\<sigma>[s,p] t\\<^bsup>[Fvar\n                       sa,Fvar pa]\\<^esup> ->\n                                    t'' \\<and>\n                                    \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''))", "have \n    \"\\<forall>sa pa. sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and> pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and> sa \\<noteq> pa\n      \\<longrightarrow> (\\<exists>t''. (\\<sigma>[s,p] t)\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<longrightarrow>\n       (\\<exists>t''.\n           \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n           \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t'')", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "fix sa :: fVariable and pa :: fVariable"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "from beta_ssubst[OF \\<open>t \\<rightarrow>\\<^sub>\\<beta> t'\\<close>]"], ["proof (chain)\npicking this:\n  lc ?v \\<Longrightarrow>\n  [?x \\<rightarrow> ?v] t -> [?x \\<rightarrow> ?v] t'", "have \"[p \\<rightarrow> Fvar pa] t \\<rightarrow>\\<^sub>\\<beta> [p \\<rightarrow> Fvar pa] t'\""], ["proof (prove)\nusing this:\n  lc ?v \\<Longrightarrow>\n  [?x \\<rightarrow> ?v] t -> [?x \\<rightarrow> ?v] t'\n\ngoal (1 subgoal):\n 1. [p \\<rightarrow> Fvar pa] t -> [p \\<rightarrow> Fvar pa] t'", "by simp"], ["proof (state)\nthis:\n  [p \\<rightarrow> Fvar pa] t -> [p \\<rightarrow> Fvar pa] t'\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "from beta_ssubst[OF this]"], ["proof (chain)\npicking this:\n  lc ?v \\<Longrightarrow>\n  [?x \\<rightarrow> ?v] [p \\<rightarrow> Fvar pa] t ->\n  [?x \\<rightarrow> ?v] [p \\<rightarrow> Fvar pa] t'", "have \n      betasubst: \"[s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t \\<rightarrow>\\<^sub>\\<beta> [s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t'\""], ["proof (prove)\nusing this:\n  lc ?v \\<Longrightarrow>\n  [?x \\<rightarrow> ?v] [p \\<rightarrow> Fvar pa] t ->\n  [?x \\<rightarrow> ?v] [p \\<rightarrow> Fvar pa] t'\n\ngoal (1 subgoal):\n 1. [s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t ->\n    [s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t'", "by simp"], ["proof (state)\nthis:\n  [s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t ->\n  [s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t'\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "from beta_lc[OF \\<open>t \\<rightarrow>\\<^sub>\\<beta> t'\\<close>]"], ["proof (chain)\npicking this:\n  lc t \\<and> lc t'", "have \"lc t\" and \"lc t'\""], ["proof (prove)\nusing this:\n  lc t \\<and> lc t'\n\ngoal (1 subgoal):\n 1. lc t &&& lc t'", "by auto"], ["proof (state)\nthis:\n  lc t\n  lc t'\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "assume \n      sapa: \"sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and> pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and> sa \\<noteq> pa\""], ["proof (state)\nthis:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "hence \"s \\<notin> FV (Fvar pa)\""], ["proof (prove)\nusing this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. s \\<notin> FV (Fvar pa)", "by auto"], ["proof (state)\nthis:\n  s \\<notin> FV (Fvar pa)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "from \n      sopen_sclose_eq_ssubst[OF \\<open>s \\<noteq> p\\<close> this \\<open>lc t\\<close>] \n      sopen_sclose_eq_ssubst[OF \\<open>s \\<noteq> p\\<close> this \\<open>lc t'\\<close>]\n      betasubst"], ["proof (chain)\npicking this:\n  {?n \\<rightarrow> [?s,Fvar pa]} {?n \\<leftarrow> [s,p]} t =\n  [s \\<rightarrow> ?s] [p \\<rightarrow> Fvar pa] t\n  {?n \\<rightarrow> [?s,Fvar pa]} {?n \\<leftarrow> [s,p]} t' =\n  [s \\<rightarrow> ?s] [p \\<rightarrow> Fvar pa] t'\n  [s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t ->\n  [s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t'", "have \"\\<sigma>[s,p] t\\<^bsup>[Fvar sa, Fvar pa]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> (\\<sigma>[s,p] t'\\<^bsup>[Fvar sa, Fvar pa]\\<^esup>)\""], ["proof (prove)\nusing this:\n  {?n \\<rightarrow> [?s,Fvar pa]} {?n \\<leftarrow> [s,p]} t =\n  [s \\<rightarrow> ?s] [p \\<rightarrow> Fvar pa] t\n  {?n \\<rightarrow> [?s,Fvar pa]} {?n \\<leftarrow> [s,p]} t' =\n  [s \\<rightarrow> ?s] [p \\<rightarrow> Fvar pa] t'\n  [s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t ->\n  [s \\<rightarrow> Fvar sa] [p \\<rightarrow> Fvar pa] t'\n\ngoal (1 subgoal):\n 1. \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n    (\\<sigma>[s,p] t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)", "by (simp add: openz_def closez_def)"], ["proof (state)\nthis:\n  \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n  (\\<sigma>[s,p] t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "moreover"], ["proof (state)\nthis:\n  \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n  (\\<sigma>[s,p] t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "{"], ["proof (state)\nthis:\n  \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n  (\\<sigma>[s,p] t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "from sapa"], ["proof (chain)\npicking this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa", "have \"sa \\<notin> FV t\""], ["proof (prove)\nusing this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. sa \\<notin> FV t", "by simp"], ["proof (state)\nthis:\n  sa \\<notin> FV t\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "from \n        contra_subsetD[OF sclose_subset_FV \n                          beta_preserves_FV[OF \\<open>t \\<rightarrow>\\<^sub>\\<beta> t'\\<close> this]]"], ["proof (chain)\npicking this:\n  sa \\<notin> FV ({?n2 \\<leftarrow> [?s2,?p2]} t')", "have \"sa \\<notin> FV (\\<sigma>[s,p] t')\""], ["proof (prove)\nusing this:\n  sa \\<notin> FV ({?n2 \\<leftarrow> [?s2,?p2]} t')\n\ngoal (1 subgoal):\n 1. sa \\<notin> FV \\<sigma>[s,p] t'", "by (simp add: closez_def)"], ["proof (state)\nthis:\n  sa \\<notin> FV \\<sigma>[s,p] t'\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "moreover"], ["proof (state)\nthis:\n  sa \\<notin> FV \\<sigma>[s,p] t'\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "from sapa"], ["proof (chain)\npicking this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa", "have \"pa \\<notin> FV t\""], ["proof (prove)\nusing this:\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. pa \\<notin> FV t", "by simp"], ["proof (state)\nthis:\n  pa \\<notin> FV t\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "from \n        contra_subsetD[OF sclose_subset_FV \n                          beta_preserves_FV[OF \\<open>t \\<rightarrow>\\<^sub>\\<beta> t'\\<close> this]]"], ["proof (chain)\npicking this:\n  pa \\<notin> FV ({?n2 \\<leftarrow> [?s2,?p2]} t')", "have \"pa \\<notin> FV (\\<sigma>[s,p] t')\""], ["proof (prove)\nusing this:\n  pa \\<notin> FV ({?n2 \\<leftarrow> [?s2,?p2]} t')\n\ngoal (1 subgoal):\n 1. pa \\<notin> FV \\<sigma>[s,p] t'", "by (simp add: closez_def)"], ["proof (state)\nthis:\n  pa \\<notin> FV \\<sigma>[s,p] t'\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "ultimately"], ["proof (chain)\npicking this:\n  sa \\<notin> FV \\<sigma>[s,p] t'\n  pa \\<notin> FV \\<sigma>[s,p] t'", "have \"sa \\<notin> FV (\\<sigma>[s,p] t')\" and \"pa \\<notin> FV (\\<sigma>[s,p] t')\" and \"sa \\<noteq> pa\""], ["proof (prove)\nusing this:\n  sa \\<notin> FV \\<sigma>[s,p] t'\n  pa \\<notin> FV \\<sigma>[s,p] t'\n\ngoal (1 subgoal):\n 1. sa \\<notin> FV \\<sigma>[s,p] t' &&&\n    pa \\<notin> FV \\<sigma>[s,p] t' &&& sa \\<noteq> pa", "using sapa"], ["proof (prove)\nusing this:\n  sa \\<notin> FV \\<sigma>[s,p] t'\n  pa \\<notin> FV \\<sigma>[s,p] t'\n  sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. sa \\<notin> FV \\<sigma>[s,p] t' &&&\n    pa \\<notin> FV \\<sigma>[s,p] t' &&& sa \\<noteq> pa", "by auto"], ["proof (state)\nthis:\n  sa \\<notin> FV \\<sigma>[s,p] t'\n  pa \\<notin> FV \\<sigma>[s,p] t'\n  sa \\<noteq> pa\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "note sym[OF sclose_sopen_eq_t[OF this]]"], ["proof (state)\nthis:\n  \\<sigma>[s,p] t' =\n  {?n1 \\<leftarrow> [sa,pa]} {?n1 \\<rightarrow> [Fvar\n            sa,Fvar pa]} \\<sigma>[s,p] t'\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "}"], ["proof (state)\nthis:\n  \\<sigma>[s,p] t' =\n  {?n1 \\<leftarrow> [sa,pa]} {?n1 \\<rightarrow> [Fvar\n            sa,Fvar pa]} \\<sigma>[s,p] t'\n\ngoal (1 subgoal):\n 1. \\<And>sa pa.\n       sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n       sa \\<noteq> pa \\<Longrightarrow>\n       \\<exists>t''.\n          \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n          \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "ultimately"], ["proof (chain)\npicking this:\n  \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n  (\\<sigma>[s,p] t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  \\<sigma>[s,p] t' =\n  {?n1 \\<leftarrow> [sa,pa]} {?n1 \\<rightarrow> [Fvar\n            sa,Fvar pa]} \\<sigma>[s,p] t'", "show \n      \"\\<exists>t''. \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''\""], ["proof (prove)\nusing this:\n  \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n  (\\<sigma>[s,p] t'\\<^bsup>[Fvar sa,Fvar pa]\\<^esup>)\n  \\<sigma>[s,p] t' =\n  {?n1 \\<leftarrow> [sa,pa]} {?n1 \\<rightarrow> [Fvar\n            sa,Fvar pa]} \\<sigma>[s,p] t'\n\ngoal (1 subgoal):\n 1. \\<exists>t''.\n       \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n       \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''", "by (auto simp: openz_def closez_def)"], ["proof (state)\nthis:\n  \\<exists>t''.\n     \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n     \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     (\\<exists>t''.\n         \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n         \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t'')\n\ngoal (1 subgoal):\n 1. \\<And>L s p.\n       \\<lbrakk>finite L; s \\<notin> L; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L'.\n                            finite L' \\<and>\n                            (\\<forall>sa pa.\n                                sa \\<notin> L' \\<and>\n                                pa \\<notin> L' \\<and>\n                                sa \\<noteq> pa \\<longrightarrow>\n                                (\\<exists>t''.\n                                    \\<sigma>[s,p] t\\<^bsup>[Fvar\n                       sa,Fvar pa]\\<^esup> ->\n                                    t'' \\<and>\n                                    \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''))", "moreover"], ["proof (state)\nthis:\n  \\<forall>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     (\\<exists>t''.\n         \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n         \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t'')\n\ngoal (1 subgoal):\n 1. \\<And>L s p.\n       \\<lbrakk>finite L; s \\<notin> L; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L'.\n                            finite L' \\<and>\n                            (\\<forall>sa pa.\n                                sa \\<notin> L' \\<and>\n                                pa \\<notin> L' \\<and>\n                                sa \\<noteq> pa \\<longrightarrow>\n                                (\\<exists>t''.\n                                    \\<sigma>[s,p] t\\<^bsup>[Fvar\n                       sa,Fvar pa]\\<^esup> ->\n                                    t'' \\<and>\n                                    \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''))", "assume \"finite L\""], ["proof (state)\nthis:\n  finite L\n\ngoal (1 subgoal):\n 1. \\<And>L s p.\n       \\<lbrakk>finite L; s \\<notin> L; p \\<notin> L; s \\<noteq> p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>L'.\n                            finite L' \\<and>\n                            (\\<forall>sa pa.\n                                sa \\<notin> L' \\<and>\n                                pa \\<notin> L' \\<and>\n                                sa \\<noteq> pa \\<longrightarrow>\n                                (\\<exists>t''.\n                                    \\<sigma>[s,p] t\\<^bsup>[Fvar\n                       sa,Fvar pa]\\<^esup> ->\n                                    t'' \\<and>\n                                    \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     (\\<exists>t''.\n         \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n         \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t'')\n  finite L", "show \n    \"\\<exists>L'. finite L' \\<and> (\\<forall>sa pa. sa \\<notin> L' \\<and> pa \\<notin> L' \\<and> sa \\<noteq> pa \n                        \\<longrightarrow> (\\<exists>t''. \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \n                                 \\<and> \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''))\""], ["proof (prove)\nusing this:\n  \\<forall>sa pa.\n     sa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     pa \\<notin> L \\<union> FV t \\<union> {s} \\<union> {p} \\<and>\n     sa \\<noteq> pa \\<longrightarrow>\n     (\\<exists>t''.\n         \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n         \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t'')\n  finite L\n\ngoal (1 subgoal):\n 1. \\<exists>L'.\n       finite L' \\<and>\n       (\\<forall>sa pa.\n           sa \\<notin> L' \\<and>\n           pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n           (\\<exists>t''.\n               \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n               t'' \\<and>\n               \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''))", "by (rule_tac x = \"L \\<union> FV t \\<union> {s} \\<union> {p}\" in exI, simp)"], ["proof (state)\nthis:\n  \\<exists>L'.\n     finite L' \\<and>\n     (\\<forall>sa pa.\n         sa \\<notin> L' \\<and>\n         pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n         (\\<exists>t''.\n             \\<sigma>[s,p] t\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n             \\<sigma>[s,p] t' = \\<sigma>[sa,pa] t''))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_UpdR:\n  fixes L t t' u l\n  assumes \n  \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>t''. (t\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p]t'')\" and\n  \"finite L\" and \"lc u\"\n  shows \"Upd u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd u l t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l t'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l t'", "from \\<open>finite L\\<close>"], ["proof (chain)\npicking this:\n  finite L", "have \"finite (L \\<union> FV t)\""], ["proof (prove)\nusing this:\n  finite L\n\ngoal (1 subgoal):\n 1. finite (L \\<union> FV t)", "by simp"], ["proof (state)\nthis:\n  finite (L \\<union> FV t)\n\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l t'", "from exFresh_s_p_cof[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>s p.\n     s \\<notin> L \\<union> FV t \\<and>\n     p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p", "obtain s p where sp: \"s \\<notin> L \\<union> FV t \\<and> p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\""], ["proof (prove)\nusing this:\n  \\<exists>s p.\n     s \\<notin> L \\<union> FV t \\<and>\n     p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>s p.\n        s \\<notin> L \\<union> FV t \\<and>\n        p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l t'", "with assms(1)"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p", "obtain t'' where \"t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t''\" and t': \"t' = \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n         t' = \\<sigma>[s,p] t''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l t'", "with \\<open>lc u\\<close>"], ["proof (chain)\npicking this:\n  lc u\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t''\n  t' = \\<sigma>[s,p] t''", "have \"Upd u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd u l \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  lc u\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l \\<sigma>[s,p] t''", "proof (erule_tac rtranclp_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>lc u; t' = \\<sigma>[s,p] t''\\<rbrakk>\n    \\<Longrightarrow> Upd u l t ->>\n                      Upd u l\n                       \\<sigma>[s,p] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n 2. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "from sp"], ["proof (chain)\npicking this:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p", "have \"s \\<notin> FV t\" and \"p \\<notin> FV t\" and \"s \\<noteq> p\""], ["proof (prove)\nusing this:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. s \\<notin> FV t &&& p \\<notin> FV t &&& s \\<noteq> p", "by auto"], ["proof (state)\nthis:\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>lc u; t' = \\<sigma>[s,p] t''\\<rbrakk>\n    \\<Longrightarrow> Upd u l t ->>\n                      Upd u l\n                       \\<sigma>[s,p] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n 2. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "from sclose_sopen_eq_t[OF this]"], ["proof (chain)\npicking this:\n  {?n \\<leftarrow> [s,p]} {?n \\<rightarrow> [Fvar s,Fvar p]} t = t", "show \"Upd u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd u l (\\<sigma>[s,p](t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))\""], ["proof (prove)\nusing this:\n  {?n \\<leftarrow> [s,p]} {?n \\<rightarrow> [Fvar s,Fvar p]} t = t\n\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l \\<sigma>[s,p] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by (simp add: openz_def closez_def)"], ["proof (state)\nthis:\n  Upd u l t ->> Upd u l \\<sigma>[s,p] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "fix y :: sterm and z :: sterm"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "assume \"y \\<rightarrow>\\<^sub>\\<beta> z\""], ["proof (state)\nthis:\n  y -> z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "from sp"], ["proof (chain)\npicking this:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p", "have \"s \\<notin> L\" and \"p \\<notin> L\" and \"s \\<noteq> p\""], ["proof (prove)\nusing this:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. s \\<notin> L &&& p \\<notin> L &&& s \\<noteq> p", "by auto"], ["proof (state)\nthis:\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "from beta_binder[OF \\<open>y \\<rightarrow>\\<^sub>\\<beta> z\\<close> \\<open>finite L\\<close> this]"], ["proof (chain)\npicking this:\n  \\<exists>L'.\n     finite L' \\<and>\n     (\\<forall>sa pa.\n         sa \\<notin> L' \\<and>\n         pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n         (\\<exists>t''.\n             \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n             \\<sigma>[s,p] z = \\<sigma>[sa,pa] t''))", "obtain L' where \n      \"finite L'\" and\n      \"\\<forall>sa pa. sa \\<notin> L' \\<and> pa \\<notin> L' \\<and> sa \\<noteq> pa\n        \\<longrightarrow> (\\<exists>t''. \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> \\<sigma>[s,p] z = \\<sigma>[sa,pa] t'')\""], ["proof (prove)\nusing this:\n  \\<exists>L'.\n     finite L' \\<and>\n     (\\<forall>sa pa.\n         sa \\<notin> L' \\<and>\n         pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n         (\\<exists>t''.\n             \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n             \\<sigma>[s,p] z = \\<sigma>[sa,pa] t''))\n\ngoal (1 subgoal):\n 1. (\\<And>L'.\n        \\<lbrakk>finite L';\n         \\<forall>sa pa.\n            sa \\<notin> L' \\<and>\n            pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n            (\\<exists>t''.\n                \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n                t'' \\<and>\n                \\<sigma>[s,p] z = \\<sigma>[sa,pa] t'')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L'\n  \\<forall>sa pa.\n     sa \\<notin> L' \\<and>\n     pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n     (\\<exists>t''.\n         \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n         \\<sigma>[s,p] z = \\<sigma>[sa,pa] t'')\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "from beta.beta_UpdR[OF this \\<open>lc u\\<close>]"], ["proof (chain)\npicking this:\n  Upd u ?l \\<sigma>[s,p] y -> Upd u ?l \\<sigma>[s,p] z", "have \"Upd u l (\\<sigma>[s,p] y) \\<rightarrow>\\<^sub>\\<beta> Upd u l (\\<sigma>[s,p] z)\""], ["proof (prove)\nusing this:\n  Upd u ?l \\<sigma>[s,p] y -> Upd u ?l \\<sigma>[s,p] z\n\ngoal (1 subgoal):\n 1. Upd u l \\<sigma>[s,p] y -> Upd u l \\<sigma>[s,p] z", "by assumption"], ["proof (state)\nthis:\n  Upd u l \\<sigma>[s,p] y -> Upd u l \\<sigma>[s,p] z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "moreover"], ["proof (state)\nthis:\n  Upd u l \\<sigma>[s,p] y -> Upd u l \\<sigma>[s,p] z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "assume \"Upd u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd u l (\\<sigma>[s,p] y)\""], ["proof (state)\nthis:\n  Upd u l t ->> Upd u l \\<sigma>[s,p] y\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>lc u; t' = \\<sigma>[s,p] t'';\n        t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y; y -> z;\n        Upd u l t ->> Upd u l \\<sigma>[s,p] y\\<rbrakk>\n       \\<Longrightarrow> Upd u l t ->> Upd u l \\<sigma>[s,p] z", "ultimately"], ["proof (chain)\npicking this:\n  Upd u l \\<sigma>[s,p] y -> Upd u l \\<sigma>[s,p] z\n  Upd u l t ->> Upd u l \\<sigma>[s,p] y", "show \"Upd u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd u l (\\<sigma>[s,p] z)\""], ["proof (prove)\nusing this:\n  Upd u l \\<sigma>[s,p] y -> Upd u l \\<sigma>[s,p] z\n  Upd u l t ->> Upd u l \\<sigma>[s,p] y\n\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l \\<sigma>[s,p] z", "by simp"], ["proof (state)\nthis:\n  Upd u l t ->> Upd u l \\<sigma>[s,p] z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Upd u l t ->> Upd u l \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l t'", "with t'"], ["proof (chain)\npicking this:\n  t' = \\<sigma>[s,p] t''\n  Upd u l t ->> Upd u l \\<sigma>[s,p] t''", "show \"Upd u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd u l t'\""], ["proof (prove)\nusing this:\n  t' = \\<sigma>[s,p] t''\n  Upd u l t ->> Upd u l \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. Upd u l t ->> Upd u l t'", "by simp"], ["proof (state)\nthis:\n  Upd u l t ->> Upd u l t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_Upd: \n  \"\\<lbrakk> u \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* u'; finite L; \n     \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n      \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p]t'');\n     lc u; body t \\<rbrakk>\n  \\<Longrightarrow> Upd u l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd u' l t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u ->> u'; finite L;\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n            t' = \\<sigma>[s,p] t'');\n     lc u; body t\\<rbrakk>\n    \\<Longrightarrow> Upd u l t ->> Upd u' l t'", "proof (induct u u' rule: rtranclp.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n               t' = \\<sigma>[s,p] t'');\n        lc a; body t\\<rbrakk>\n       \\<Longrightarrow> Upd a l t ->> Upd a l t'\n 2. \\<And>a b c.\n       \\<lbrakk>a ->> b;\n        \\<lbrakk>finite L;\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            (\\<exists>t''.\n                t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n                t' = \\<sigma>[s,p] t'');\n         lc a; body t\\<rbrakk>\n        \\<Longrightarrow> Upd a l t ->> Upd b l t';\n        b -> c; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n               t' = \\<sigma>[s,p] t'');\n        lc a; body t\\<rbrakk>\n       \\<Longrightarrow> Upd a l t ->> Upd c l t'", "case rtrancl_refl"], ["proof (state)\nthis:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  lc a_\n  body t\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n               t' = \\<sigma>[s,p] t'');\n        lc a; body t\\<rbrakk>\n       \\<Longrightarrow> Upd a l t ->> Upd a l t'\n 2. \\<And>a b c.\n       \\<lbrakk>a ->> b;\n        \\<lbrakk>finite L;\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            (\\<exists>t''.\n                t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n                t' = \\<sigma>[s,p] t'');\n         lc a; body t\\<rbrakk>\n        \\<Longrightarrow> Upd a l t ->> Upd b l t';\n        b -> c; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n               t' = \\<sigma>[s,p] t'');\n        lc a; body t\\<rbrakk>\n       \\<Longrightarrow> Upd a l t ->> Upd c l t'", "thus ?case"], ["proof (prove)\nusing this:\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  lc a_\n  body t\n\ngoal (1 subgoal):\n 1. Upd a_ l t ->> Upd a_ l t'", "by (simp add: rtrancl_beta_UpdR)"], ["proof (state)\nthis:\n  Upd a_ l t ->> Upd a_ l t'\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b;\n        \\<lbrakk>finite L;\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            (\\<exists>t''.\n                t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n                t' = \\<sigma>[s,p] t'');\n         lc a; body t\\<rbrakk>\n        \\<Longrightarrow> Upd a l t ->> Upd b l t';\n        b -> c; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n               t' = \\<sigma>[s,p] t'');\n        lc a; body t\\<rbrakk>\n       \\<Longrightarrow> Upd a l t ->> Upd c l t'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b;\n        \\<lbrakk>finite L;\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            (\\<exists>t''.\n                t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n                t' = \\<sigma>[s,p] t'');\n         lc a; body t\\<rbrakk>\n        \\<Longrightarrow> Upd a l t ->> Upd b l t';\n        b -> c; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n               t' = \\<sigma>[s,p] t'');\n        lc a; body t\\<rbrakk>\n       \\<Longrightarrow> Upd a l t ->> Upd c l t'", "case (rtrancl_into_rtrancl a b c)"], ["proof (state)\nthis:\n  a ->> b\n  \\<lbrakk>finite L;\n   \\<forall>s p.\n      s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n      (\\<exists>t''.\n          t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n          t' = \\<sigma>[s,p] t'');\n   lc a; body t\\<rbrakk>\n  \\<Longrightarrow> Upd a l t ->> Upd b l t'\n  b -> c\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  lc a\n  body t\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a ->> b;\n        \\<lbrakk>finite L;\n         \\<forall>s p.\n            s \\<notin> L \\<and>\n            p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n            (\\<exists>t''.\n                t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n                t' = \\<sigma>[s,p] t'');\n         lc a; body t\\<rbrakk>\n        \\<Longrightarrow> Upd a l t ->> Upd b l t';\n        b -> c; finite L;\n        \\<forall>s p.\n           s \\<notin> L \\<and>\n           p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n           (\\<exists>t''.\n               t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n               t' = \\<sigma>[s,p] t'');\n        lc a; body t\\<rbrakk>\n       \\<Longrightarrow> Upd a l t ->> Upd c l t'", "thus ?case"], ["proof (prove)\nusing this:\n  a ->> b\n  \\<lbrakk>finite L;\n   \\<forall>s p.\n      s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n      (\\<exists>t''.\n          t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n          t' = \\<sigma>[s,p] t'');\n   lc a; body t\\<rbrakk>\n  \\<Longrightarrow> Upd a l t ->> Upd b l t'\n  b -> c\n  finite L\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  lc a\n  body t\n\ngoal (1 subgoal):\n 1. Upd a l t ->> Upd c l t'", "proof (auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Upd a l t ->> Upd b l t'; b -> c; finite L;\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n            t' = \\<sigma>[s,p] t'');\n     lc a; body t\\<rbrakk>\n    \\<Longrightarrow> Upd a l t ->> Upd c l t'", "from rtrancl_beta_body[OF \\<open>finite L\\<close> rtrancl_into_rtrancl(5) \\<open>body t\\<close>] \\<open>b \\<rightarrow>\\<^sub>\\<beta> c\\<close>"], ["proof (chain)\npicking this:\n  body t'\n  b -> c", "have \"Upd b l t' \\<rightarrow>\\<^sub>\\<beta> Upd c l t'\""], ["proof (prove)\nusing this:\n  body t'\n  b -> c\n\ngoal (1 subgoal):\n 1. Upd b l t' -> Upd c l t'", "by simp"], ["proof (state)\nthis:\n  Upd b l t' -> Upd c l t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a ->> b; Upd a l t ->> Upd b l t'; b -> c; finite L;\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n            t' = \\<sigma>[s,p] t'');\n     lc a; body t\\<rbrakk>\n    \\<Longrightarrow> Upd a l t ->> Upd c l t'", "with rtrancl_into_rtrancl(2)[OF \\<open>finite L\\<close> rtrancl_into_rtrancl(5) \\<open>lc a\\<close> \\<open>body t\\<close>]"], ["proof (chain)\npicking this:\n  Upd a l t ->> Upd b l t'\n  Upd b l t' -> Upd c l t'", "show \"Upd a l t \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Upd c l t'\""], ["proof (prove)\nusing this:\n  Upd a l t ->> Upd b l t'\n  Upd b l t' -> Upd c l t'\n\ngoal (1 subgoal):\n 1. Upd a l t ->> Upd c l t'", "by simp"], ["proof (state)\nthis:\n  Upd a l t ->> Upd c l t'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Upd a l t ->> Upd c l t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_obj: \n  fixes l f L T t t'\n  assumes \n  \"l \\<in> dom f\" and \"finite L\" and\n  \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>t''. t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p]t'')\" and\n  \"\\<forall>l\\<in>dom f. body (the(f l))\" and \"body t\"\n  shows \"Obj (f (l \\<mapsto> t)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f (l \\<mapsto> t')) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> t')) T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> t')) T", "from \\<open>finite L\\<close>"], ["proof (chain)\npicking this:\n  finite L", "have \"finite (L \\<union> FV t)\""], ["proof (prove)\nusing this:\n  finite L\n\ngoal (1 subgoal):\n 1. finite (L \\<union> FV t)", "by simp"], ["proof (state)\nthis:\n  finite (L \\<union> FV t)\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> t')) T", "from exFresh_s_p_cof[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>s p.\n     s \\<notin> L \\<union> FV t \\<and>\n     p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p", "obtain s p where sp: \"s \\<notin> L \\<union> FV t \\<and> p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\""], ["proof (prove)\nusing this:\n  \\<exists>s p.\n     s \\<notin> L \\<union> FV t \\<and>\n     p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>s p.\n        s \\<notin> L \\<union> FV t \\<and>\n        p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> t')) T", "with assms(3)"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p", "obtain t'' where \"t\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t''\" and \"t' = \\<sigma>[s,p] t''\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         t' = \\<sigma>[s,p] t'')\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>t''.\n        \\<lbrakk>t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'';\n         t' = \\<sigma>[s,p] t''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> t')) T", "with \\<open>l \\<in> dom f\\<close> \\<open>\\<forall>l\\<in>dom f. body (the(f l))\\<close>"], ["proof (chain)\npicking this:\n  l \\<in> dom f\n  \\<forall>l\\<in>dom f. body (the (f l))\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t''\n  t' = \\<sigma>[s,p] t''", "have \"Obj (f(l \\<mapsto> t)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f(l \\<mapsto> \\<sigma>[s,p] t'')) T\""], ["proof (prove)\nusing this:\n  l \\<in> dom f\n  \\<forall>l\\<in>dom f. body (the (f l))\n  t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t''\n  t' = \\<sigma>[s,p] t''\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> \\<sigma>[s,p] t'')) T", "proof (erule_tac rtranclp_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n     t' = \\<sigma>[s,p] t''\\<rbrakk>\n    \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                      Obj (f(l \\<mapsto>\n                           \\<sigma>[s,p] (t\\<^bsup>[Fvar\n               s,Fvar p]\\<^esup>)))\n                       T\n 2. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "from sp"], ["proof (chain)\npicking this:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p", "have \"s \\<notin> FV t\" and \"p \\<notin> FV t\" and \"s \\<noteq> p\""], ["proof (prove)\nusing this:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. s \\<notin> FV t &&& p \\<notin> FV t &&& s \\<noteq> p", "by auto"], ["proof (state)\nthis:\n  s \\<notin> FV t\n  p \\<notin> FV t\n  s \\<noteq> p\n\ngoal (2 subgoals):\n 1. \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n     t' = \\<sigma>[s,p] t''\\<rbrakk>\n    \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                      Obj (f(l \\<mapsto>\n                           \\<sigma>[s,p] (t\\<^bsup>[Fvar\n               s,Fvar p]\\<^esup>)))\n                       T\n 2. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "from sclose_sopen_eq_t[OF this]"], ["proof (chain)\npicking this:\n  {?n \\<leftarrow> [s,p]} {?n \\<rightarrow> [Fvar s,Fvar p]} t = t", "show \"Obj (f(l \\<mapsto> t)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f(l \\<mapsto> \\<sigma>[s,p] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))) T\""], ["proof (prove)\nusing this:\n  {?n \\<leftarrow> [s,p]} {?n \\<rightarrow> [Fvar s,Fvar p]} t = t\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->>\n    Obj (f(l \\<mapsto> \\<sigma>[s,p] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))) T", "by (simp add: openz_def closez_def)"], ["proof (state)\nthis:\n  Obj (f(l \\<mapsto> t)) T ->>\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] (t\\<^bsup>[Fvar s,Fvar p]\\<^esup>))) T\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "fix y :: sterm and z :: sterm"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "assume \"y \\<rightarrow>\\<^sub>\\<beta> z\""], ["proof (state)\nthis:\n  y -> z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "from sp"], ["proof (chain)\npicking this:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p", "have \"s \\<notin> L\" and \"p \\<notin> L\" and \"s \\<noteq> p\""], ["proof (prove)\nusing this:\n  s \\<notin> L \\<union> FV t \\<and>\n  p \\<notin> L \\<union> FV t \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. s \\<notin> L &&& p \\<notin> L &&& s \\<noteq> p", "by auto"], ["proof (state)\nthis:\n  s \\<notin> L\n  p \\<notin> L\n  s \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "from beta_binder[OF \\<open>y \\<rightarrow>\\<^sub>\\<beta> z\\<close> \\<open>finite L\\<close> this]"], ["proof (chain)\npicking this:\n  \\<exists>L'.\n     finite L' \\<and>\n     (\\<forall>sa pa.\n         sa \\<notin> L' \\<and>\n         pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n         (\\<exists>t''.\n             \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n             \\<sigma>[s,p] z = \\<sigma>[sa,pa] t''))", "obtain L' where \n      \"finite L'\" and\n      \"\\<forall>sa pa. sa \\<notin> L' \\<and> pa \\<notin> L' \\<and> sa \\<noteq> pa\n        \\<longrightarrow> (\\<exists>t''. \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> \\<rightarrow>\\<^sub>\\<beta> t'' \\<and> \\<sigma>[s,p] z = \\<sigma>[sa,pa] t'')\""], ["proof (prove)\nusing this:\n  \\<exists>L'.\n     finite L' \\<and>\n     (\\<forall>sa pa.\n         sa \\<notin> L' \\<and>\n         pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n         (\\<exists>t''.\n             \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n             \\<sigma>[s,p] z = \\<sigma>[sa,pa] t''))\n\ngoal (1 subgoal):\n 1. (\\<And>L'.\n        \\<lbrakk>finite L';\n         \\<forall>sa pa.\n            sa \\<notin> L' \\<and>\n            pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n            (\\<exists>t''.\n                \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> ->\n                t'' \\<and>\n                \\<sigma>[s,p] z = \\<sigma>[sa,pa] t'')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite L'\n  \\<forall>sa pa.\n     sa \\<notin> L' \\<and>\n     pa \\<notin> L' \\<and> sa \\<noteq> pa \\<longrightarrow>\n     (\\<exists>t''.\n         \\<sigma>[s,p] y\\<^bsup>[Fvar sa,Fvar pa]\\<^esup> -> t'' \\<and>\n         \\<sigma>[s,p] z = \\<sigma>[sa,pa] t'')\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "from beta.beta_Obj[OF \\<open>l \\<in> dom f\\<close> this \\<open>\\<forall>l\\<in>dom f. body (the(f l))\\<close>]"], ["proof (chain)\npicking this:\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) ?T ->\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) ?T", "have \"Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T \\<rightarrow>\\<^sub>\\<beta> Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T\""], ["proof (prove)\nusing this:\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) ?T ->\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) ?T\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T ->\n    Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "by assumption"], ["proof (state)\nthis:\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T ->\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "moreover"], ["proof (state)\nthis:\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T ->\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "assume \"Obj (f(l \\<mapsto> t)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\""], ["proof (state)\nthis:\n  Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>l \\<in> dom f; \\<forall>l\\<in>dom f. body (the (f l));\n        t' = \\<sigma>[s,p] t''; t\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> y;\n        y -> z;\n        Obj (f(l \\<mapsto> t)) T ->>\n        Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\\<rbrakk>\n       \\<Longrightarrow> Obj (f(l \\<mapsto> t)) T ->>\n                         Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "ultimately"], ["proof (chain)\npicking this:\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T ->\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T\n  Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T", "show \"Obj (f(l \\<mapsto> t)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T\""], ["proof (prove)\nusing this:\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T ->\n  Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T\n  Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> \\<sigma>[s,p] y)) T\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T", "by simp"], ["proof (state)\nthis:\n  Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> \\<sigma>[s,p] z)) T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> \\<sigma>[s,p] t'')) T\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> t')) T", "with \\<open>t' = \\<sigma>[s,p] t''\\<close>"], ["proof (chain)\npicking this:\n  t' = \\<sigma>[s,p] t''\n  Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> \\<sigma>[s,p] t'')) T", "show \"Obj (f(l \\<mapsto> t)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f(l \\<mapsto> t')) T\""], ["proof (prove)\nusing this:\n  t' = \\<sigma>[s,p] t''\n  Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> \\<sigma>[s,p] t'')) T\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> t')) T", "by simp"], ["proof (state)\nthis:\n  Obj (f(l \\<mapsto> t)) T ->> Obj (f(l \\<mapsto> t')) T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma obj_lem: \n  fixes l f T L t'\n  assumes \n  \"l \\<in> dom f\" and \"finite L\" and\n  \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n    \\<longrightarrow> (\\<exists>t''. ((the(f l))\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \\<and> t' = \\<sigma>[s,p]t'')\" and\n  \"\\<forall>l\\<in>dom f. body (the(f l))\"\n  shows \"Obj f T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f(l \\<mapsto> t')) T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Obj f T ->> Obj (f(l \\<mapsto> t')) T", "proof \n  (rule_tac P = \"\\<lambda>y. Obj y T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f(l \\<mapsto> t')) T\" and s = \"(f(l \\<mapsto> the(f l)))\" \n    in subst)"], ["proof (state)\ngoal (2 subgoals):\n 1. f(l \\<mapsto> the (f l)) = f\n 2. Obj (f(l \\<mapsto> the (f l))) T ->> Obj (f(l \\<mapsto> t')) T", "from \\<open>l \\<in> dom f\\<close> fun_upd_idem"], ["proof (chain)\npicking this:\n  l \\<in> dom f\n  ?f ?x = ?y \\<Longrightarrow> ?f(?x := ?y) = ?f", "show \"f(l \\<mapsto> the (f l)) = f\""], ["proof (prove)\nusing this:\n  l \\<in> dom f\n  ?f ?x = ?y \\<Longrightarrow> ?f(?x := ?y) = ?f\n\ngoal (1 subgoal):\n 1. f(l \\<mapsto> the (f l)) = f", "by force"], ["proof (state)\nthis:\n  f(l \\<mapsto> the (f l)) = f\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> the (f l))) T ->> Obj (f(l \\<mapsto> t')) T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> the (f l))) T ->> Obj (f(l \\<mapsto> t')) T", "from \\<open>l \\<in> dom f\\<close> \\<open>\\<forall>l\\<in>dom f. body (the(f l))\\<close>"], ["proof (chain)\npicking this:\n  l \\<in> dom f\n  \\<forall>l\\<in>dom f. body (the (f l))", "have \"body (the (f l))\""], ["proof (prove)\nusing this:\n  l \\<in> dom f\n  \\<forall>l\\<in>dom f. body (the (f l))\n\ngoal (1 subgoal):\n 1. body (the (f l))", "by blast"], ["proof (state)\nthis:\n  body (the (f l))\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> the (f l))) T ->> Obj (f(l \\<mapsto> t')) T", "with \n    rtrancl_beta_obj[OF \\<open>l \\<in> dom f\\<close> \\<open>finite L\\<close> assms(3) \\<open>\\<forall>l\\<in>dom f. body (the(f l))\\<close>]"], ["proof (chain)\npicking this:\n  body (the (f l)) \\<Longrightarrow>\n  Obj (f(l \\<mapsto> the (f l))) ?T ->> Obj (f(l \\<mapsto> t')) ?T\n  body (the (f l))", "show \"Obj (f(l \\<mapsto> the (f l))) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (f(l \\<mapsto> t')) T\""], ["proof (prove)\nusing this:\n  body (the (f l)) \\<Longrightarrow>\n  Obj (f(l \\<mapsto> the (f l))) ?T ->> Obj (f(l \\<mapsto> t')) ?T\n  body (the (f l))\n\ngoal (1 subgoal):\n 1. Obj (f(l \\<mapsto> the (f l))) T ->> Obj (f(l \\<mapsto> t')) T", "by simp"], ["proof (state)\nthis:\n  Obj (f(l \\<mapsto> the (f l))) T ->> Obj (f(l \\<mapsto> t')) T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_obj_lem00: \n  fixes L f g\n  assumes \n  \"finite L\" and\n  \"\\<forall>l\\<in>dom f. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n               \\<longrightarrow> (\\<exists>t''. ((the(f l))\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \n                        \\<and> the(g l) = \\<sigma>[s,p]t'')\" and\n  \"dom f = dom g\" and \"\\<forall>l\\<in>dom f. body (the (f l))\"\n  shows \n  \"\\<forall>k \\<le> (card (dom f)). \n    (\\<exists>ob. length ob = (k + 1)\n        \\<and> (\\<forall>obi. obi \\<in> set ob \\<longrightarrow> dom (fst(obi)) = dom f \\<and> ((snd obi) \\<subseteq> dom f)) \n        \\<and> (fst (ob!0) = f)\n        \\<and> (card (snd (ob!k)) = k)\n        \\<and> (\\<forall>i < k. snd (ob!i) \\<subset> snd (ob!k))\n        \\<and> (Obj (fst (ob!0)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst (ob!k)) T)\n        \\<and> (card (snd (ob!k)) = k \n           \\<longrightarrow> (Ltake_eq (snd (ob!k)) (fst (ob!k)) g)\n                \\<and> (Ltake_eq ((dom f) - (snd (ob!k))) (fst (ob!k)) f)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>card (dom f).\n       \\<exists>ob.\n          length ob = k + 1 \\<and>\n          (\\<forall>obi.\n              obi \\<in> set ob \\<longrightarrow>\n              dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n          fst (ob ! 0) = f \\<and>\n          card (snd (ob ! k)) = k \\<and>\n          (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n          Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n          (card (snd (ob ! k)) = k \\<longrightarrow>\n           Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n           Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! k)) = k \\<and>\n           (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n           (card (snd (ob ! k)) = k \\<longrightarrow>\n            Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f))", "fix k :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! k)) = k \\<and>\n           (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n           (card (snd (ob ! k)) = k \\<longrightarrow>\n            Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f))", "show \n    \"k \\<le> card (dom f) \n    \\<longrightarrow> (\\<exists>ob. length ob = k + 1 \n            \\<and> (\\<forall>obi. obi \\<in> set ob \\<longrightarrow> dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \n            \\<and> fst (ob ! 0) = f \n            \\<and> card (snd (ob ! k)) = k \n            \\<and> (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \n            \\<and> Obj (fst (ob ! 0)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst (ob ! k)) T \n            \\<and> (card (snd (ob ! k)) = k \n               \\<longrightarrow> Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \n                   \\<and> Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> card (dom f) \\<longrightarrow>\n    (\\<exists>ob.\n        length ob = k + 1 \\<and>\n        (\\<forall>obi.\n            obi \\<in> set ob \\<longrightarrow>\n            dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n        fst (ob ! 0) = f \\<and>\n        card (snd (ob ! k)) = k \\<and>\n        (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n        Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n        (card (snd (ob ! k)) = k \\<longrightarrow>\n         Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n         Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f))", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> card (dom f) \\<longrightarrow>\n    (\\<exists>ob.\n        length ob = 0 + 1 \\<and>\n        (\\<forall>obi.\n            obi \\<in> set ob \\<longrightarrow>\n            dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n        fst (ob ! 0) = f \\<and>\n        card (snd (ob ! 0)) = 0 \\<and>\n        (\\<forall>i<0. snd (ob ! i) \\<subset> snd (ob ! 0)) \\<and>\n        Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! 0)) T \\<and>\n        (card (snd (ob ! 0)) = 0 \\<longrightarrow>\n         Ltake_eq (snd (ob ! 0)) (fst (ob ! 0)) g \\<and>\n         Ltake_eq (dom f - snd (ob ! 0)) (fst (ob ! 0)) f))\n 2. \\<And>k.\n       k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! k)) = k \\<and>\n           (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n           (card (snd (ob ! k)) = k \\<longrightarrow>\n            Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k))\n             f)) \\<Longrightarrow>\n       Suc k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = Suc k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! Suc k)) = Suc k \\<and>\n           (\\<forall>i<Suc k.\n               snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! Suc k)) T \\<and>\n           (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n            Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. 0 \\<le> card (dom f) \\<longrightarrow>\n    (\\<exists>ob.\n        length ob = 0 + 1 \\<and>\n        (\\<forall>obi.\n            obi \\<in> set ob \\<longrightarrow>\n            dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n        fst (ob ! 0) = f \\<and>\n        card (snd (ob ! 0)) = 0 \\<and>\n        (\\<forall>i<0. snd (ob ! i) \\<subset> snd (ob ! 0)) \\<and>\n        Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! 0)) T \\<and>\n        (card (snd (ob ! 0)) = 0 \\<longrightarrow>\n         Ltake_eq (snd (ob ! 0)) (fst (ob ! 0)) g \\<and>\n         Ltake_eq (dom f - snd (ob ! 0)) (fst (ob ! 0)) f))\n 2. \\<And>k.\n       k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! k)) = k \\<and>\n           (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n           (card (snd (ob ! k)) = k \\<longrightarrow>\n            Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k))\n             f)) \\<Longrightarrow>\n       Suc k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = Suc k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! Suc k)) = Suc k \\<and>\n           (\\<forall>i<Suc k.\n               snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! Suc k)) T \\<and>\n           (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n            Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> card (dom f) \\<longrightarrow>\n    (\\<exists>ob.\n        length ob = 0 + 1 \\<and>\n        (\\<forall>obi.\n            obi \\<in> set ob \\<longrightarrow>\n            dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n        fst (ob ! 0) = f \\<and>\n        card (snd (ob ! 0)) = 0 \\<and>\n        (\\<forall>i<0. snd (ob ! i) \\<subset> snd (ob ! 0)) \\<and>\n        Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! 0)) T \\<and>\n        (card (snd (ob ! 0)) = 0 \\<longrightarrow>\n         Ltake_eq (snd (ob ! 0)) (fst (ob ! 0)) g \\<and>\n         Ltake_eq (dom f - snd (ob ! 0)) (fst (ob ! 0)) f))", "by (simp, rule_tac x = \"[(f,{})]\" in exI, simp add: Ltake_eq_def)"], ["proof (state)\nthis:\n  0 \\<le> card (dom f) \\<longrightarrow>\n  (\\<exists>ob.\n      length ob = 0 + 1 \\<and>\n      (\\<forall>obi.\n          obi \\<in> set ob \\<longrightarrow>\n          dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n      fst (ob ! 0) = f \\<and>\n      card (snd (ob ! 0)) = 0 \\<and>\n      (\\<forall>i<0. snd (ob ! i) \\<subset> snd (ob ! 0)) \\<and>\n      Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! 0)) T \\<and>\n      (card (snd (ob ! 0)) = 0 \\<longrightarrow>\n       Ltake_eq (snd (ob ! 0)) (fst (ob ! 0)) g \\<and>\n       Ltake_eq (dom f - snd (ob ! 0)) (fst (ob ! 0)) f))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! k)) = k \\<and>\n           (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n           (card (snd (ob ! k)) = k \\<longrightarrow>\n            Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k))\n             f)) \\<Longrightarrow>\n       Suc k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = Suc k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! Suc k)) = Suc k \\<and>\n           (\\<forall>i<Suc k.\n               snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! Suc k)) T \\<and>\n           (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n            Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! k)) = k \\<and>\n           (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n           (card (snd (ob ! k)) = k \\<longrightarrow>\n            Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k))\n             f)) \\<Longrightarrow>\n       Suc k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = Suc k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! Suc k)) = Suc k \\<and>\n           (\\<forall>i<Suc k.\n               snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! Suc k)) T \\<and>\n           (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n            Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f))", "case (Suc k)"], ["proof (state)\nthis:\n  k \\<le> card (dom f) \\<longrightarrow>\n  (\\<exists>ob.\n      length ob = k + 1 \\<and>\n      (\\<forall>obi.\n          obi \\<in> set ob \\<longrightarrow>\n          dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n      fst (ob ! 0) = f \\<and>\n      card (snd (ob ! k)) = k \\<and>\n      (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n      Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n      (card (snd (ob ! k)) = k \\<longrightarrow>\n       Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n       Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f))\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! k)) = k \\<and>\n           (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n           (card (snd (ob ! k)) = k \\<longrightarrow>\n            Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k))\n             f)) \\<Longrightarrow>\n       Suc k \\<le> card (dom f) \\<longrightarrow>\n       (\\<exists>ob.\n           length ob = Suc k + 1 \\<and>\n           (\\<forall>obi.\n               obi \\<in> set ob \\<longrightarrow>\n               dom (fst obi) = dom f \\<and>\n               snd obi \\<subseteq> dom f) \\<and>\n           fst (ob ! 0) = f \\<and>\n           card (snd (ob ! Suc k)) = Suc k \\<and>\n           (\\<forall>i<Suc k.\n               snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n           Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! Suc k)) T \\<and>\n           (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n            Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \\<and>\n            Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f))", "thus ?case"], ["proof (prove)\nusing this:\n  k \\<le> card (dom f) \\<longrightarrow>\n  (\\<exists>ob.\n      length ob = k + 1 \\<and>\n      (\\<forall>obi.\n          obi \\<in> set ob \\<longrightarrow>\n          dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n      fst (ob ! 0) = f \\<and>\n      card (snd (ob ! k)) = k \\<and>\n      (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n      Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n      (card (snd (ob ! k)) = k \\<longrightarrow>\n       Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n       Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f))\n\ngoal (1 subgoal):\n 1. Suc k \\<le> card (dom f) \\<longrightarrow>\n    (\\<exists>ob.\n        length ob = Suc k + 1 \\<and>\n        (\\<forall>obi.\n            obi \\<in> set ob \\<longrightarrow>\n            dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n        fst (ob ! 0) = f \\<and>\n        card (snd (ob ! Suc k)) = Suc k \\<and>\n        (\\<forall>i<Suc k. snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n        Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! Suc k)) T \\<and>\n        (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n         Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \\<and>\n         Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f))", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "assume \"Suc k \\<le> card (dom f)\""], ["proof (state)\nthis:\n  Suc k \\<le> card (dom f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "hence \"k < card (dom f)\""], ["proof (prove)\nusing this:\n  Suc k \\<le> card (dom f)\n\ngoal (1 subgoal):\n 1. k < card (dom f)", "by arith"], ["proof (state)\nthis:\n  k < card (dom f)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "with Suc.hyps"], ["proof (chain)\npicking this:\n  k \\<le> card (dom f) \\<longrightarrow>\n  (\\<exists>ob.\n      length ob = k + 1 \\<and>\n      (\\<forall>obi.\n          obi \\<in> set ob \\<longrightarrow>\n          dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n      fst (ob ! 0) = f \\<and>\n      card (snd (ob ! k)) = k \\<and>\n      (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n      Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n      (card (snd (ob ! k)) = k \\<longrightarrow>\n       Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n       Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f))\n  k < card (dom f)", "obtain ob where \n        \"length ob = k + 1\" and\n        mem_ob: \"\\<forall>obi. obi \\<in> set ob \n                  \\<longrightarrow> dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\" and\n        \"fst (ob ! 0) = f\" and\n        \"card (snd (ob ! k)) = k\" and\n        \"\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)\" and\n        \"Obj (fst (ob ! 0)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst (ob ! k)) T\" and\n        card_k: \"card (snd (ob ! k)) = k \n                 \\<longrightarrow> Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \n                     \\<and> Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f\""], ["proof (prove)\nusing this:\n  k \\<le> card (dom f) \\<longrightarrow>\n  (\\<exists>ob.\n      length ob = k + 1 \\<and>\n      (\\<forall>obi.\n          obi \\<in> set ob \\<longrightarrow>\n          dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n      fst (ob ! 0) = f \\<and>\n      card (snd (ob ! k)) = k \\<and>\n      (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n      Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n      (card (snd (ob ! k)) = k \\<longrightarrow>\n       Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n       Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f))\n  k < card (dom f)\n\ngoal (1 subgoal):\n 1. (\\<And>ob.\n        \\<lbrakk>length ob = k + 1;\n         \\<forall>obi.\n            obi \\<in> set ob \\<longrightarrow>\n            dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f;\n         fst (ob ! 0) = f; card (snd (ob ! k)) = k;\n         \\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k);\n         Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T;\n         card (snd (ob ! k)) = k \\<longrightarrow>\n         Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n         Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  length ob = k + 1\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  fst (ob ! 0) = f\n  card (snd (ob ! k)) = k\n  \\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)\n  Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T\n  card (snd (ob ! k)) = k \\<longrightarrow>\n  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from \\<open>length ob = k + 1\\<close>"], ["proof (chain)\npicking this:\n  length ob = k + 1", "have obkmem: \"(ob!k) \\<in> set ob\""], ["proof (prove)\nusing this:\n  length ob = k + 1\n\ngoal (1 subgoal):\n 1. ob ! k \\<in> set ob", "by auto"], ["proof (state)\nthis:\n  ob ! k \\<in> set ob\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "with mem_ob"], ["proof (chain)\npicking this:\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  ob ! k \\<in> set ob", "have obksnd: \"snd(ob!k) \\<subseteq> dom f\""], ["proof (prove)\nusing this:\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  ob ! k \\<in> set ob\n\ngoal (1 subgoal):\n 1. snd (ob ! k) \\<subseteq> dom f", "by blast"], ["proof (state)\nthis:\n  snd (ob ! k) \\<subseteq> dom f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from \n        card_psubset[OF finite_dom_fmap this] \\<open>card (snd(ob!k)) = k\\<close> \n        \\<open>k < card (dom f)\\<close>"], ["proof (chain)\npicking this:\n  card (snd (ob ! k)) < card (dom f) \\<Longrightarrow>\n  snd (ob ! k) \\<subset> dom f\n  card (snd (ob ! k)) = k\n  k < card (dom f)", "have \"snd (ob!k) \\<subset> dom f\""], ["proof (prove)\nusing this:\n  card (snd (ob ! k)) < card (dom f) \\<Longrightarrow>\n  snd (ob ! k) \\<subset> dom f\n  card (snd (ob ! k)) = k\n  k < card (dom f)\n\ngoal (1 subgoal):\n 1. snd (ob ! k) \\<subset> dom f", "by simp"], ["proof (state)\nthis:\n  snd (ob ! k) \\<subset> dom f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "then"], ["proof (chain)\npicking this:\n  snd (ob ! k) \\<subset> dom f", "obtain l' where \"l' \\<in> dom f\" and \"l' \\<notin> snd (ob!k)\""], ["proof (prove)\nusing this:\n  snd (ob ! k) \\<subset> dom f\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<lbrakk>l' \\<in> dom f; l' \\<notin> snd (ob ! k)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l' \\<in> dom f\n  l' \\<notin> snd (ob ! k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from obkmem mem_ob"], ["proof (chain)\npicking this:\n  ob ! k \\<in> set ob\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f", "have obkfst: \"dom (fst(ob!k)) = dom f\""], ["proof (prove)\nusing this:\n  ob ! k \\<in> set ob\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n\ngoal (1 subgoal):\n 1. dom (fst (ob ! k)) = dom f", "by blast"], ["proof (state)\nthis:\n  dom (fst (ob ! k)) = dom f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "(* get witness *)"], ["proof (state)\nthis:\n  dom (fst (ob ! k)) = dom f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "define ob' where \"ob' = ob @ [(fst(ob!k)(l' \\<mapsto> the (g l')), insert l' (snd(ob!k)))]\""], ["proof (state)\nthis:\n  ob' =\n  ob @ [(fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from nth_fst[OF \\<open>length ob = k + 1\\<close>]"], ["proof (chain)\npicking this:\n  (ob @ [?x]) ! 0 = ob ! 0", "have first: \"ob'!0 = ob!0\""], ["proof (prove)\nusing this:\n  (ob @ [?x]) ! 0 = ob ! 0\n\ngoal (1 subgoal):\n 1. ob' ! 0 = ob ! 0", "by (simp add: ob'_def)"], ["proof (state)\nthis:\n  ob' ! 0 = ob ! 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from \\<open>length ob = k + 1\\<close> nth_last[of ob \"Suc k\"]"], ["proof (chain)\npicking this:\n  length ob = k + 1\n  length ob = Suc k \\<Longrightarrow> (ob @ [?x]) ! Suc k = ?x", "have last: \"ob'!Suc k = (fst(ob!k)(l' \\<mapsto> the (g l')), insert l' (snd(ob!k)))\""], ["proof (prove)\nusing this:\n  length ob = k + 1\n  length ob = Suc k \\<Longrightarrow> (ob @ [?x]) ! Suc k = ?x\n\ngoal (1 subgoal):\n 1. ob' ! Suc k =\n    (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))", "by (simp add: ob'_def)"], ["proof (state)\nthis:\n  ob' ! Suc k =\n  (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from \\<open>length ob = k + 1\\<close> nth_append[of ob _ k]"], ["proof (chain)\npicking this:\n  length ob = k + 1\n  (ob @ ?ys) ! k = (if k < length ob then ob ! k else ?ys ! (k - length ob))", "have kth: \"ob'!k = ob!k\""], ["proof (prove)\nusing this:\n  length ob = k + 1\n  (ob @ ?ys) ! k = (if k < length ob then ob ! k else ?ys ! (k - length ob))\n\ngoal (1 subgoal):\n 1. ob' ! k = ob ! k", "by (auto simp: ob'_def)"], ["proof (state)\nthis:\n  ob' ! k = ob ! k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from \\<open>card (snd(ob!k)) = k\\<close> card_k"], ["proof (chain)\npicking this:\n  card (snd (ob ! k)) = k\n  card (snd (ob ! k)) = k \\<longrightarrow>\n  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f", "have ass:\n        \"\\<forall>l\\<in>(snd(ob!k)). fst(ob!k) l = g l\"\n        \"\\<forall>l\\<in>(dom f - snd(ob!k)). fst(ob!k) l = f l\""], ["proof (prove)\nusing this:\n  card (snd (ob ! k)) = k\n  card (snd (ob ! k)) = k \\<longrightarrow>\n  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>snd (ob ! k). fst (ob ! k) l = g l &&&\n    \\<forall>l\\<in>dom f - snd (ob ! k). fst (ob ! k) l = f l", "by (auto simp: Ltake_eq_def)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>snd (ob ! k). fst (ob ! k) l = g l\n  \\<forall>l\\<in>dom f - snd (ob ! k). fst (ob ! k) l = f l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "(* prop#1 *)"], ["proof (state)\nthis:\n  \\<forall>l\\<in>snd (ob ! k). fst (ob ! k) l = g l\n  \\<forall>l\\<in>dom f - snd (ob ! k). fst (ob ! k) l = f l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from \\<open>length ob = k + 1\\<close>"], ["proof (chain)\npicking this:\n  length ob = k + 1", "have \"length ob' = Suc k + 1\""], ["proof (prove)\nusing this:\n  length ob = k + 1\n\ngoal (1 subgoal):\n 1. length ob' = Suc k + 1", "by (auto simp: ob'_def)"], ["proof (state)\nthis:\n  length ob' = Suc k + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "(* prop#2 *)"], ["proof (state)\nthis:\n  length ob' = Suc k + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "moreover"], ["proof (state)\nthis:\n  length ob' = Suc k + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "have \"\\<forall>obi. obi \\<in> set ob' \\<longrightarrow> dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>obi.\n       obi \\<in> set ob' \\<longrightarrow>\n       dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f", "unfolding ob'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>obi.\n       obi\n       \\<in> set (ob @\n                  [(fst (ob ! k)(l' \\<mapsto> the (g l')),\n                    insert l' (snd (ob ! k)))]) \\<longrightarrow>\n       dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>obi.\n       obi\n       \\<in> set (ob @\n                  [(fst (ob ! k)(l' \\<mapsto> the (g l')),\n                    insert l' (snd (ob ! k)))]) \\<Longrightarrow>\n       dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f", "fix obi :: \"(Label -~> sterm) \\<times> (Label set)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>obi.\n       obi\n       \\<in> set (ob @\n                  [(fst (ob ! k)(l' \\<mapsto> the (g l')),\n                    insert l' (snd (ob ! k)))]) \\<Longrightarrow>\n       dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f", "assume \"obi \\<in> set (ob @ [(fst(ob!k)(l' \\<mapsto> the (g l')), insert l' (snd (ob!k)))])\""], ["proof (state)\nthis:\n  obi\n  \\<in> set (ob @\n             [(fst (ob ! k)(l' \\<mapsto> the (g l')),\n               insert l' (snd (ob ! k)))])\n\ngoal (1 subgoal):\n 1. \\<And>obi.\n       obi\n       \\<in> set (ob @\n                  [(fst (ob ! k)(l' \\<mapsto> the (g l')),\n                    insert l' (snd (ob ! k)))]) \\<Longrightarrow>\n       dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f", "note mem_append_lem'[OF this]"], ["proof (state)\nthis:\n  obi \\<in> set ob \\<or>\n  obi = (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))\n\ngoal (1 subgoal):\n 1. \\<And>obi.\n       obi\n       \\<in> set (ob @\n                  [(fst (ob ! k)(l' \\<mapsto> the (g l')),\n                    insert l' (snd (ob ! k)))]) \\<Longrightarrow>\n       dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f", "thus \"dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\""], ["proof (prove)\nusing this:\n  obi \\<in> set ob \\<or>\n  obi = (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))\n\ngoal (1 subgoal):\n 1. dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f", "proof (rule disjE, simp_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. obi \\<in> set ob \\<Longrightarrow>\n    dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n 2. obi =\n    (fst (ob ! k)(l' \\<mapsto> the (g l')),\n     insert l' (snd (ob ! k))) \\<Longrightarrow>\n    insert l' (dom (fst (ob ! k))) = dom f \\<and>\n    l' \\<in> dom f \\<and> snd (ob ! k) \\<subseteq> dom f", "assume \"obi \\<in> set ob\""], ["proof (state)\nthis:\n  obi \\<in> set ob\n\ngoal (2 subgoals):\n 1. obi \\<in> set ob \\<Longrightarrow>\n    dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n 2. obi =\n    (fst (ob ! k)(l' \\<mapsto> the (g l')),\n     insert l' (snd (ob ! k))) \\<Longrightarrow>\n    insert l' (dom (fst (ob ! k))) = dom f \\<and>\n    l' \\<in> dom f \\<and> snd (ob ! k) \\<subseteq> dom f", "with mem_ob"], ["proof (chain)\npicking this:\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  obi \\<in> set ob", "show \"dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\""], ["proof (prove)\nusing this:\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  obi \\<in> set ob\n\ngoal (1 subgoal):\n 1. dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f", "by blast"], ["proof (state)\nthis:\n  dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n\ngoal (1 subgoal):\n 1. obi =\n    (fst (ob ! k)(l' \\<mapsto> the (g l')),\n     insert l' (snd (ob ! k))) \\<Longrightarrow>\n    insert l' (dom (fst (ob ! k))) = dom f \\<and>\n    l' \\<in> dom f \\<and> snd (ob ! k) \\<subseteq> dom f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. obi =\n    (fst (ob ! k)(l' \\<mapsto> the (g l')),\n     insert l' (snd (ob ! k))) \\<Longrightarrow>\n    insert l' (dom (fst (ob ! k))) = dom f \\<and>\n    l' \\<in> dom f \\<and> snd (ob ! k) \\<subseteq> dom f", "from obkfst obksnd \\<open>l' \\<in> dom f\\<close>"], ["proof (chain)\npicking this:\n  dom (fst (ob ! k)) = dom f\n  snd (ob ! k) \\<subseteq> dom f\n  l' \\<in> dom f", "show \n            \"insert l' (dom (fst (ob!k))) = dom f \n             \\<and> l' \\<in> dom f \\<and> snd(ob!k) \\<subseteq> dom f\""], ["proof (prove)\nusing this:\n  dom (fst (ob ! k)) = dom f\n  snd (ob ! k) \\<subseteq> dom f\n  l' \\<in> dom f\n\ngoal (1 subgoal):\n 1. insert l' (dom (fst (ob ! k))) = dom f \\<and>\n    l' \\<in> dom f \\<and> snd (ob ! k) \\<subseteq> dom f", "by blast"], ["proof (state)\nthis:\n  insert l' (dom (fst (ob ! k))) = dom f \\<and>\n  l' \\<in> dom f \\<and> snd (ob ! k) \\<subseteq> dom f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>obi.\n     obi \\<in> set ob' \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "(* prop#3 *)"], ["proof (state)\nthis:\n  \\<forall>obi.\n     obi \\<in> set ob' \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "moreover"], ["proof (state)\nthis:\n  \\<forall>obi.\n     obi \\<in> set ob' \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from first \\<open>fst(ob!0) = f\\<close>"], ["proof (chain)\npicking this:\n  ob' ! 0 = ob ! 0\n  fst (ob ! 0) = f", "have \"fst(ob'!0) = f\""], ["proof (prove)\nusing this:\n  ob' ! 0 = ob ! 0\n  fst (ob ! 0) = f\n\ngoal (1 subgoal):\n 1. fst (ob' ! 0) = f", "by simp"], ["proof (state)\nthis:\n  fst (ob' ! 0) = f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "(* prop#4 *)"], ["proof (state)\nthis:\n  fst (ob' ! 0) = f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "moreover"], ["proof (state)\nthis:\n  fst (ob' ! 0) = f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from obksnd finite_dom_fmap finite_subset"], ["proof (chain)\npicking this:\n  snd (ob ! k) \\<subseteq> dom f\n  finite (dom ?F)\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A", "have \"finite (snd (ob!k))\""], ["proof (prove)\nusing this:\n  snd (ob ! k) \\<subseteq> dom f\n  finite (dom ?F)\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (snd (ob ! k))", "by auto"], ["proof (state)\nthis:\n  finite (snd (ob ! k))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from card.insert_remove[OF this]"], ["proof (chain)\npicking this:\n  card (insert ?x (snd (ob ! k))) = Suc (card (snd (ob ! k) - {?x}))", "have \"card (insert l' (snd (ob!k))) = Suc (card (snd(ob!k) - {l'}))\""], ["proof (prove)\nusing this:\n  card (insert ?x (snd (ob ! k))) = Suc (card (snd (ob ! k) - {?x}))\n\ngoal (1 subgoal):\n 1. card (insert l' (snd (ob ! k))) = Suc (card (snd (ob ! k) - {l'}))", "by simp"], ["proof (state)\nthis:\n  card (insert l' (snd (ob ! k))) = Suc (card (snd (ob ! k) - {l'}))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "with \\<open>l' \\<notin> snd (ob!k)\\<close> \\<open>card (snd(ob!k)) = k\\<close> last"], ["proof (chain)\npicking this:\n  l' \\<notin> snd (ob ! k)\n  card (snd (ob ! k)) = k\n  ob' ! Suc k =\n  (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))\n  card (insert l' (snd (ob ! k))) = Suc (card (snd (ob ! k) - {l'}))", "have \"card(snd(ob'!Suc k)) = Suc k\""], ["proof (prove)\nusing this:\n  l' \\<notin> snd (ob ! k)\n  card (snd (ob ! k)) = k\n  ob' ! Suc k =\n  (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))\n  card (insert l' (snd (ob ! k))) = Suc (card (snd (ob ! k) - {l'}))\n\ngoal (1 subgoal):\n 1. card (snd (ob' ! Suc k)) = Suc k", "by auto"], ["proof (state)\nthis:\n  card (snd (ob' ! Suc k)) = Suc k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "(* prop#5 *)"], ["proof (state)\nthis:\n  card (snd (ob' ! Suc k)) = Suc k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "moreover"], ["proof (state)\nthis:\n  card (snd (ob' ! Suc k)) = Suc k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "have \"\\<forall>i<Suc k. snd (ob'!i) \\<subset> snd (ob'!Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<Suc k. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc k \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "fix i :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc k \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "from last"], ["proof (chain)\npicking this:\n  ob' ! Suc k =\n  (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))", "have \"snd(ob'!Suc k) = insert l' (snd (ob!k))\""], ["proof (prove)\nusing this:\n  ob' ! Suc k =\n  (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))\n\ngoal (1 subgoal):\n 1. snd (ob' ! Suc k) = insert l' (snd (ob ! k))", "by simp"], ["proof (state)\nthis:\n  snd (ob' ! Suc k) = insert l' (snd (ob ! k))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc k \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "with \\<open>l' \\<notin> snd (ob!k)\\<close>"], ["proof (chain)\npicking this:\n  l' \\<notin> snd (ob ! k)\n  snd (ob' ! Suc k) = insert l' (snd (ob ! k))", "have \"snd(ob!k) \\<subset> snd(ob'!Suc k)\""], ["proof (prove)\nusing this:\n  l' \\<notin> snd (ob ! k)\n  snd (ob' ! Suc k) = insert l' (snd (ob ! k))\n\ngoal (1 subgoal):\n 1. snd (ob ! k) \\<subset> snd (ob' ! Suc k)", "by auto"], ["proof (state)\nthis:\n  snd (ob ! k) \\<subset> snd (ob' ! Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc k \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "moreover"], ["proof (state)\nthis:\n  snd (ob ! k) \\<subset> snd (ob' ! Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc k \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "assume \"i < Suc k\""], ["proof (state)\nthis:\n  i < Suc k\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc k \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "with \\<open>length ob = k + 1\\<close>"], ["proof (chain)\npicking this:\n  length ob = k + 1\n  i < Suc k", "have \"i < length ob\""], ["proof (prove)\nusing this:\n  length ob = k + 1\n  i < Suc k\n\ngoal (1 subgoal):\n 1. i < length ob", "by simp"], ["proof (state)\nthis:\n  i < length ob\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc k \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "with nth_append[of ob _ i]"], ["proof (chain)\npicking this:\n  (ob @ ?ys) ! i = (if i < length ob then ob ! i else ?ys ! (i - length ob))\n  i < length ob", "have \"ob'!i = ob!i\""], ["proof (prove)\nusing this:\n  (ob @ ?ys) ! i = (if i < length ob then ob ! i else ?ys ! (i - length ob))\n  i < length ob\n\ngoal (1 subgoal):\n 1. ob' ! i = ob ! i", "by (simp add: ob'_def)"], ["proof (state)\nthis:\n  ob' ! i = ob ! i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < Suc k \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "ultimately"], ["proof (chain)\npicking this:\n  snd (ob ! k) \\<subset> snd (ob' ! Suc k)\n  ob' ! i = ob ! i", "show \"snd(ob'!i) \\<subset> snd(ob'!Suc k)\""], ["proof (prove)\nusing this:\n  snd (ob ! k) \\<subset> snd (ob' ! Suc k)\n  ob' ! i = ob ! i\n\ngoal (1 subgoal):\n 1. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "proof (cases \"i < k\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>snd (ob ! k) \\<subset> snd (ob' ! Suc k); ob' ! i = ob ! i;\n     i < k\\<rbrakk>\n    \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n 2. \\<lbrakk>snd (ob ! k) \\<subset> snd (ob' ! Suc k); ob' ! i = ob ! i;\n     \\<not> i < k\\<rbrakk>\n    \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "case True"], ["proof (state)\nthis:\n  i < k\n\ngoal (2 subgoals):\n 1. \\<lbrakk>snd (ob ! k) \\<subset> snd (ob' ! Suc k); ob' ! i = ob ! i;\n     i < k\\<rbrakk>\n    \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n 2. \\<lbrakk>snd (ob ! k) \\<subset> snd (ob' ! Suc k); ob' ! i = ob ! i;\n     \\<not> i < k\\<rbrakk>\n    \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "with \n            \\<open>\\<forall>i<k. snd(ob!i) \\<subset> snd(ob!k)\\<close> \\<open>ob'!i = ob!i\\<close> \n            \\<open>snd(ob!k) \\<subset> snd(ob'!Suc k)\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)\n  ob' ! i = ob ! i\n  snd (ob ! k) \\<subset> snd (ob' ! Suc k)\n  i < k", "show \"snd (ob'!i) \\<subset> snd (ob'!Suc k)\""], ["proof (prove)\nusing this:\n  \\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)\n  ob' ! i = ob ! i\n  snd (ob ! k) \\<subset> snd (ob' ! Suc k)\n  i < k\n\ngoal (1 subgoal):\n 1. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "by auto"], ["proof (state)\nthis:\n  snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>snd (ob ! k) \\<subset> snd (ob' ! Suc k); ob' ! i = ob ! i;\n     \\<not> i < k\\<rbrakk>\n    \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>snd (ob ! k) \\<subset> snd (ob' ! Suc k); ob' ! i = ob ! i;\n     \\<not> i < k\\<rbrakk>\n    \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "case False"], ["proof (state)\nthis:\n  \\<not> i < k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>snd (ob ! k) \\<subset> snd (ob' ! Suc k); ob' ! i = ob ! i;\n     \\<not> i < k\\<rbrakk>\n    \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "with \\<open>i < Suc k\\<close>"], ["proof (chain)\npicking this:\n  i < Suc k\n  \\<not> i < k", "have \"i = k\""], ["proof (prove)\nusing this:\n  i < Suc k\n  \\<not> i < k\n\ngoal (1 subgoal):\n 1. i = k", "by arith"], ["proof (state)\nthis:\n  i = k\n\ngoal (1 subgoal):\n 1. \\<lbrakk>snd (ob ! k) \\<subset> snd (ob' ! Suc k); ob' ! i = ob ! i;\n     \\<not> i < k\\<rbrakk>\n    \\<Longrightarrow> snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "with \\<open>ob'!i = ob!i\\<close> \\<open>snd(ob!k) \\<subset> snd(ob'!Suc k)\\<close>"], ["proof (chain)\npicking this:\n  ob' ! i = ob ! i\n  snd (ob ! k) \\<subset> snd (ob' ! Suc k)\n  i = k", "show \"snd (ob'!i) \\<subset> snd (ob'!Suc k)\""], ["proof (prove)\nusing this:\n  ob' ! i = ob ! i\n  snd (ob ! k) \\<subset> snd (ob' ! Suc k)\n  i = k\n\ngoal (1 subgoal):\n 1. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)", "by auto"], ["proof (state)\nthis:\n  snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i<Suc k. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "(* prop#6 -- the main statement *)"], ["proof (state)\nthis:\n  \\<forall>i<Suc k. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "moreover"], ["proof (state)\nthis:\n  \\<forall>i<Suc k. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "{"], ["proof (state)\nthis:\n  \\<forall>i<Suc k. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from \\<open>l' \\<in> dom f\\<close> \\<open>l' \\<notin> snd(ob!k)\\<close>"], ["proof (chain)\npicking this:\n  l' \\<in> dom f\n  l' \\<notin> snd (ob ! k)", "have \"l' \\<in> (dom f - snd(ob!k))\""], ["proof (prove)\nusing this:\n  l' \\<in> dom f\n  l' \\<notin> snd (ob ! k)\n\ngoal (1 subgoal):\n 1. l' \\<in> dom f - snd (ob ! k)", "by auto"], ["proof (state)\nthis:\n  l' \\<in> dom f - snd (ob ! k)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "with ass"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>snd (ob ! k). fst (ob ! k) l = g l\n  \\<forall>l\\<in>dom f - snd (ob ! k). fst (ob ! k) l = f l\n  l' \\<in> dom f - snd (ob ! k)", "have \"the(fst(ob!k) l') = the(f l')\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>snd (ob ! k). fst (ob ! k) l = g l\n  \\<forall>l\\<in>dom f - snd (ob ! k). fst (ob ! k) l = f l\n  l' \\<in> dom f - snd (ob ! k)\n\ngoal (1 subgoal):\n 1. the (fst (ob ! k) l') = the (f l')", "by auto"], ["proof (state)\nthis:\n  the (fst (ob ! k) l') = the (f l')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "with \\<open>l' \\<in> dom f\\<close> assms(2)"], ["proof (chain)\npicking this:\n  l' \\<in> dom f\n  \\<forall>l\\<in>dom f.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n            the (g l) = \\<sigma>[s,p] t'')\n  the (fst (ob ! k) l') = the (f l')", "have \n          sp: \"\\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \n                \\<longrightarrow> (\\<exists>t''. the(fst(ob!k) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \n                         \\<and> the (g l') = \\<sigma>[s,p] t'')\""], ["proof (prove)\nusing this:\n  l' \\<in> dom f\n  \\<forall>l\\<in>dom f.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n            the (g l) = \\<sigma>[s,p] t'')\n  the (fst (ob ! k) l') = the (f l')\n\ngoal (1 subgoal):\n 1. \\<forall>s p.\n       s \\<notin> L \\<and>\n       p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n       (\\<exists>t''.\n           the (fst (ob ! k) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->>\n           t'' \\<and>\n           the (g l') = \\<sigma>[s,p] t'')", "by simp"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         the (fst (ob ! k) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         the (g l') = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "moreover"], ["proof (state)\nthis:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         the (fst (ob ! k) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         the (g l') = \\<sigma>[s,p] t'')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "have \"\\<forall>l\\<in>dom (fst(ob!k)). body (the(fst(ob!k) l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>dom (fst (ob ! k)). body (the (fst (ob ! k) l))", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom (fst (ob ! k)) \\<Longrightarrow>\n       body (the (fst (ob ! k) l))", "fix la :: Label"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom (fst (ob ! k)) \\<Longrightarrow>\n       body (the (fst (ob ! k) l))", "assume \"la \\<in> dom (fst(ob!k))\""], ["proof (state)\nthis:\n  la \\<in> dom (fst (ob ! k))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom (fst (ob ! k)) \\<Longrightarrow>\n       body (the (fst (ob ! k) l))", "with obkfst"], ["proof (chain)\npicking this:\n  dom (fst (ob ! k)) = dom f\n  la \\<in> dom (fst (ob ! k))", "have inf: \"la \\<in> dom f\""], ["proof (prove)\nusing this:\n  dom (fst (ob ! k)) = dom f\n  la \\<in> dom (fst (ob ! k))\n\ngoal (1 subgoal):\n 1. la \\<in> dom f", "by auto"], ["proof (state)\nthis:\n  la \\<in> dom f\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom (fst (ob ! k)) \\<Longrightarrow>\n       body (the (fst (ob ! k) l))", "with assms(4)"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f. body (the (f l))\n  la \\<in> dom f", "have bodyf: \"body (the(f la))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f. body (the (f l))\n  la \\<in> dom f\n\ngoal (1 subgoal):\n 1. body (the (f la))", "by auto"], ["proof (state)\nthis:\n  body (the (f la))\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> dom (fst (ob ! k)) \\<Longrightarrow>\n       body (the (fst (ob ! k) l))", "show \"body (the(fst(ob!k) la))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. body (the (fst (ob ! k) la))", "proof (cases \"la \\<in> snd(ob!k)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))\n 2. la \\<notin> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "case False"], ["proof (state)\nthis:\n  la \\<notin> snd (ob ! k)\n\ngoal (2 subgoals):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))\n 2. la \\<notin> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "with inf"], ["proof (chain)\npicking this:\n  la \\<in> dom f\n  la \\<notin> snd (ob ! k)", "have \"la \\<in> (dom f - snd(ob!k))\""], ["proof (prove)\nusing this:\n  la \\<in> dom f\n  la \\<notin> snd (ob ! k)\n\ngoal (1 subgoal):\n 1. la \\<in> dom f - snd (ob ! k)", "by auto"], ["proof (state)\nthis:\n  la \\<in> dom f - snd (ob ! k)\n\ngoal (2 subgoals):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))\n 2. la \\<notin> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "with ass"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>snd (ob ! k). fst (ob ! k) l = g l\n  \\<forall>l\\<in>dom f - snd (ob ! k). fst (ob ! k) l = f l\n  la \\<in> dom f - snd (ob ! k)", "have \"fst(ob!k) la = f la\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>snd (ob ! k). fst (ob ! k) l = g l\n  \\<forall>l\\<in>dom f - snd (ob ! k). fst (ob ! k) l = f l\n  la \\<in> dom f - snd (ob ! k)\n\ngoal (1 subgoal):\n 1. fst (ob ! k) la = f la", "by blast"], ["proof (state)\nthis:\n  fst (ob ! k) la = f la\n\ngoal (2 subgoals):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))\n 2. la \\<notin> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "with bodyf"], ["proof (chain)\npicking this:\n  body (the (f la))\n  fst (ob ! k) la = f la", "show \"body (the (fst(ob!k) la))\""], ["proof (prove)\nusing this:\n  body (the (f la))\n  fst (ob ! k) la = f la\n\ngoal (1 subgoal):\n 1. body (the (fst (ob ! k) la))", "by auto"], ["proof (state)\nthis:\n  body (the (fst (ob ! k) la))\n\ngoal (1 subgoal):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "from exFresh_s_p_cof[OF \\<open>finite L\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "obtain s p where \"s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\""], ["proof (prove)\nusing this:\n  \\<exists>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "with assms(2) inf"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n            the (g l) = \\<sigma>[s,p] t'')\n  la \\<in> dom f\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p", "obtain t' where \n              \"the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'\" and\n              \"the (g la) = \\<sigma>[s,p] t'\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>dom f.\n     \\<forall>s p.\n        s \\<notin> L \\<and>\n        p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n        (\\<exists>t''.\n            the (f l)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n            the (g l) = \\<sigma>[s,p] t'')\n  la \\<in> dom f\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t';\n         the (g la) = \\<sigma>[s,p] t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'\n  the (g la) = \\<sigma>[s,p] t'\n\ngoal (1 subgoal):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "from body_lc[OF bodyf]"], ["proof (chain)\npicking this:\n  \\<lbrakk>lc ?s; lc ?p\\<rbrakk>\n  \\<Longrightarrow> lc (the (f la)\\<^bsup>[?s,?p]\\<^esup>)", "have lcf: \"lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>lc ?s; lc ?p\\<rbrakk>\n  \\<Longrightarrow> lc (the (f la)\\<^bsup>[?s,?p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)", "by auto"], ["proof (state)\nthis:\n  lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "hence bodyg: \"body (the(g la))\""], ["proof (prove)\nusing this:\n  lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n\ngoal (1 subgoal):\n 1. body (the (g la))", "proof (cases \"(the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>);\n     (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t'\\<rbrakk>\n    \\<Longrightarrow> body (the (g la))\n 2. \\<lbrakk>lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>);\n     (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'\\<rbrakk>\n    \\<Longrightarrow> body (the (g la))", "case True"], ["proof (state)\nthis:\n  (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>);\n     (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t'\\<rbrakk>\n    \\<Longrightarrow> body (the (g la))\n 2. \\<lbrakk>lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>);\n     (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'\\<rbrakk>\n    \\<Longrightarrow> body (the (g la))", "with \n                lcf lc_body \\<open>s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\\<close> \n                \\<open>the(g la) = \\<sigma>[s,p] t'\\<close>"], ["proof (chain)\npicking this:\n  lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  \\<lbrakk>lc ?t; ?s \\<noteq> ?p\\<rbrakk>\n  \\<Longrightarrow> body \\<sigma>[?s,?p] ?t\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n  the (g la) = \\<sigma>[s,p] t'\n  (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t'", "show \"body (the(g la))\""], ["proof (prove)\nusing this:\n  lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>)\n  \\<lbrakk>lc ?t; ?s \\<noteq> ?p\\<rbrakk>\n  \\<Longrightarrow> body \\<sigma>[?s,?p] ?t\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n  the (g la) = \\<sigma>[s,p] t'\n  (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) = t'\n\ngoal (1 subgoal):\n 1. body (the (g la))", "by auto"], ["proof (state)\nthis:\n  body (the (g la))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>);\n     (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'\\<rbrakk>\n    \\<Longrightarrow> body (the (g la))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>);\n     (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'\\<rbrakk>\n    \\<Longrightarrow> body (the (g la))", "case False"], ["proof (state)\nthis:\n  (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>);\n     (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'\\<rbrakk>\n    \\<Longrightarrow> body (the (g la))", "with \n                rtrancl_beta_lc[OF \\<open>the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup> \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'\\<close>] \n                lc_body \\<open>s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\\<close> \\<open>the(g la) = \\<sigma>[s,p] t'\\<close>"], ["proof (chain)\npicking this:\n  (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t' \\<Longrightarrow>\n  lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'\n  \\<lbrakk>lc ?t; ?s \\<noteq> ?p\\<rbrakk>\n  \\<Longrightarrow> body \\<sigma>[?s,?p] ?t\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n  the (g la) = \\<sigma>[s,p] t'\n  (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'", "show \"body (the(g la))\""], ["proof (prove)\nusing this:\n  (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t' \\<Longrightarrow>\n  lc (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<and> lc t'\n  \\<lbrakk>lc ?t; ?s \\<noteq> ?p\\<rbrakk>\n  \\<Longrightarrow> body \\<sigma>[?s,?p] ?t\n  s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n  the (g la) = \\<sigma>[s,p] t'\n  (the (f la)\\<^bsup>[Fvar s,Fvar p]\\<^esup>) \\<noteq> t'\n\ngoal (1 subgoal):\n 1. body (the (g la))", "by auto"], ["proof (state)\nthis:\n  body (the (g la))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  body (the (g la))\n\ngoal (1 subgoal):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "case True"], ["proof (state)\nthis:\n  la \\<in> snd (ob ! k)\n\ngoal (1 subgoal):\n 1. la \\<in> snd (ob ! k) \\<Longrightarrow> body (the (fst (ob ! k) la))", "with ass bodyg"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>snd (ob ! k). fst (ob ! k) l = g l\n  \\<forall>l\\<in>dom f - snd (ob ! k). fst (ob ! k) l = f l\n  body (the (g la))\n  la \\<in> snd (ob ! k)", "show \"body (the(fst(ob!k) la))\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>snd (ob ! k). fst (ob ! k) l = g l\n  \\<forall>l\\<in>dom f - snd (ob ! k). fst (ob ! k) l = f l\n  body (the (g la))\n  la \\<in> snd (ob ! k)\n\ngoal (1 subgoal):\n 1. body (the (fst (ob ! k) la))", "by simp"], ["proof (state)\nthis:\n  body (the (fst (ob ! k) la))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  body (the (fst (ob ! k) la))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom (fst (ob ! k)). body (the (fst (ob ! k) l))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "moreover"], ["proof (state)\nthis:\n  \\<forall>l\\<in>dom (fst (ob ! k)). body (the (fst (ob ! k) l))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from \\<open>l' \\<in> dom f\\<close> obkfst"], ["proof (chain)\npicking this:\n  l' \\<in> dom f\n  dom (fst (ob ! k)) = dom f", "have \"l' \\<in> dom(fst(ob!k))\""], ["proof (prove)\nusing this:\n  l' \\<in> dom f\n  dom (fst (ob ! k)) = dom f\n\ngoal (1 subgoal):\n 1. l' \\<in> dom (fst (ob ! k))", "by auto"], ["proof (state)\nthis:\n  l' \\<in> dom (fst (ob ! k))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "note obj_lem[OF this \\<open>finite L\\<close>]"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              (\\<exists>t''.\n                  the (fst (ob ! k) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->>\n                  t'' \\<and>\n                  ?t' = \\<sigma>[s,p] t'');\n   \\<forall>l\\<in>dom (fst (ob ! k)). body (the (fst (ob ! k) l))\\<rbrakk>\n  \\<Longrightarrow> Obj (fst (ob ! k)) ?T ->>\n                    Obj (fst (ob ! k)(l' \\<mapsto> ?t')) ?T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         the (fst (ob ! k) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         the (g l') = \\<sigma>[s,p] t'')\n  \\<forall>l\\<in>dom (fst (ob ! k)). body (the (fst (ob ! k) l))\n  \\<lbrakk>\\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              (\\<exists>t''.\n                  the (fst (ob ! k) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->>\n                  t'' \\<and>\n                  ?t' = \\<sigma>[s,p] t'');\n   \\<forall>l\\<in>dom (fst (ob ! k)). body (the (fst (ob ! k) l))\\<rbrakk>\n  \\<Longrightarrow> Obj (fst (ob ! k)) ?T ->>\n                    Obj (fst (ob ! k)(l' \\<mapsto> ?t')) ?T", "have \"Obj (fst(ob!k)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst(ob!k)(l' \\<mapsto> the (g l'))) T\""], ["proof (prove)\nusing this:\n  \\<forall>s p.\n     s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n     (\\<exists>t''.\n         the (fst (ob ! k) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->> t'' \\<and>\n         the (g l') = \\<sigma>[s,p] t'')\n  \\<forall>l\\<in>dom (fst (ob ! k)). body (the (fst (ob ! k) l))\n  \\<lbrakk>\\<forall>s p.\n              s \\<notin> L \\<and>\n              p \\<notin> L \\<and> s \\<noteq> p \\<longrightarrow>\n              (\\<exists>t''.\n                  the (fst (ob ! k) l')\\<^bsup>[Fvar s,Fvar p]\\<^esup> ->>\n                  t'' \\<and>\n                  ?t' = \\<sigma>[s,p] t'');\n   \\<forall>l\\<in>dom (fst (ob ! k)). body (the (fst (ob ! k) l))\\<rbrakk>\n  \\<Longrightarrow> Obj (fst (ob ! k)) ?T ->>\n                    Obj (fst (ob ! k)(l' \\<mapsto> ?t')) ?T\n\ngoal (1 subgoal):\n 1. Obj (fst (ob ! k)) T ->> Obj (fst (ob ! k)(l' \\<mapsto> the (g l'))) T", "by blast"], ["proof (state)\nthis:\n  Obj (fst (ob ! k)) T ->> Obj (fst (ob ! k)(l' \\<mapsto> the (g l'))) T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "moreover"], ["proof (state)\nthis:\n  Obj (fst (ob ! k)) T ->> Obj (fst (ob ! k)(l' \\<mapsto> the (g l'))) T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from last"], ["proof (chain)\npicking this:\n  ob' ! Suc k =\n  (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))", "have \"fst(ob'!Suc k) = fst(ob!k)(l' \\<mapsto> the (g l'))\""], ["proof (prove)\nusing this:\n  ob' ! Suc k =\n  (fst (ob ! k)(l' \\<mapsto> the (g l')), insert l' (snd (ob ! k)))\n\ngoal (1 subgoal):\n 1. fst (ob' ! Suc k) = fst (ob ! k)(l' \\<mapsto> the (g l'))", "by auto"], ["proof (state)\nthis:\n  fst (ob' ! Suc k) = fst (ob ! k)(l' \\<mapsto> the (g l'))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "ultimately"], ["proof (chain)\npicking this:\n  Obj (fst (ob ! k)) T ->> Obj (fst (ob ! k)(l' \\<mapsto> the (g l'))) T\n  fst (ob' ! Suc k) = fst (ob ! k)(l' \\<mapsto> the (g l'))", "have \"Obj (fst(ob'!0)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst(ob'!Suc k)) T\""], ["proof (prove)\nusing this:\n  Obj (fst (ob ! k)) T ->> Obj (fst (ob ! k)(l' \\<mapsto> the (g l'))) T\n  fst (ob' ! Suc k) = fst (ob ! k)(l' \\<mapsto> the (g l'))\n\ngoal (1 subgoal):\n 1. Obj (fst (ob' ! 0)) T ->> Obj (fst (ob' ! Suc k)) T", "using \n            rtranclp_trans[OF \\<open>Obj (fst (ob!0)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst (ob!k)) T\\<close>] first kth"], ["proof (prove)\nusing this:\n  Obj (fst (ob ! k)) T ->> Obj (fst (ob ! k)(l' \\<mapsto> the (g l'))) T\n  fst (ob' ! Suc k) = fst (ob ! k)(l' \\<mapsto> the (g l'))\n  Obj (fst (ob ! k)) T ->> ?z \\<Longrightarrow> Obj (fst (ob ! 0)) T ->> ?z\n  ob' ! 0 = ob ! 0\n  ob' ! k = ob ! k\n\ngoal (1 subgoal):\n 1. Obj (fst (ob' ! 0)) T ->> Obj (fst (ob' ! Suc k)) T", "by auto"], ["proof (state)\nthis:\n  Obj (fst (ob' ! 0)) T ->> Obj (fst (ob' ! Suc k)) T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "}"], ["proof (state)\nthis:\n  Obj (fst (ob' ! 0)) T ->> Obj (fst (ob' ! Suc k)) T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "(* prop#7 *)"], ["proof (state)\nthis:\n  Obj (fst (ob' ! 0)) T ->> Obj (fst (ob' ! Suc k)) T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "moreover"], ["proof (state)\nthis:\n  Obj (fst (ob' ! 0)) T ->> Obj (fst (ob' ! Suc k)) T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "from \\<open>l' \\<in> dom f\\<close> \\<open>dom f = dom g\\<close>"], ["proof (chain)\npicking this:\n  l' \\<in> dom f\n  dom f = dom g", "have \n        \"card (snd(ob'!Suc k)) = Suc k \n         \\<longrightarrow> Ltake_eq (snd (ob'!Suc k)) (fst (ob'!Suc k)) g \n             \\<and> Ltake_eq (dom f - snd(ob'!Suc k)) (fst(ob'!Suc k)) f\""], ["proof (prove)\nusing this:\n  l' \\<in> dom f\n  dom f = dom g\n\ngoal (1 subgoal):\n 1. card (snd (ob' ! Suc k)) = Suc k \\<longrightarrow>\n    Ltake_eq (snd (ob' ! Suc k)) (fst (ob' ! Suc k)) g \\<and>\n    Ltake_eq (dom f - snd (ob' ! Suc k)) (fst (ob' ! Suc k)) f", "by (auto simp: Ltake_eq_def last ass)"], ["proof (state)\nthis:\n  card (snd (ob' ! Suc k)) = Suc k \\<longrightarrow>\n  Ltake_eq (snd (ob' ! Suc k)) (fst (ob' ! Suc k)) g \\<and>\n  Ltake_eq (dom f - snd (ob' ! Suc k)) (fst (ob' ! Suc k)) f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<le> card (dom f) \\<longrightarrow>\n             (\\<exists>ob.\n                 length ob = k + 1 \\<and>\n                 (\\<forall>obi.\n                     obi \\<in> set ob \\<longrightarrow>\n                     dom (fst obi) = dom f \\<and>\n                     snd obi \\<subseteq> dom f) \\<and>\n                 fst (ob ! 0) = f \\<and>\n                 card (snd (ob ! k)) = k \\<and>\n                 (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n                 Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n                 (card (snd (ob ! k)) = k \\<longrightarrow>\n                  Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n                  Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f));\n     Suc k \\<le> card (dom f)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ob.\n                         length ob = Suc k + 1 \\<and>\n                         (\\<forall>obi.\n                             obi \\<in> set ob \\<longrightarrow>\n                             dom (fst obi) = dom f \\<and>\n                             snd obi \\<subseteq> dom f) \\<and>\n                         fst (ob ! 0) = f \\<and>\n                         card (snd (ob ! Suc k)) = Suc k \\<and>\n                         (\\<forall>i<Suc k.\n                             snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n                         Obj (fst (ob ! 0)) T ->>\n                         Obj (fst (ob ! Suc k)) T \\<and>\n                         (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n                          Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k))\n                           g \\<and>\n                          Ltake_eq (dom f - snd (ob ! Suc k))\n                           (fst (ob ! Suc k)) f)", "ultimately"], ["proof (chain)\npicking this:\n  length ob' = Suc k + 1\n  \\<forall>obi.\n     obi \\<in> set ob' \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  fst (ob' ! 0) = f\n  card (snd (ob' ! Suc k)) = Suc k\n  \\<forall>i<Suc k. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n  Obj (fst (ob' ! 0)) T ->> Obj (fst (ob' ! Suc k)) T\n  card (snd (ob' ! Suc k)) = Suc k \\<longrightarrow>\n  Ltake_eq (snd (ob' ! Suc k)) (fst (ob' ! Suc k)) g \\<and>\n  Ltake_eq (dom f - snd (ob' ! Suc k)) (fst (ob' ! Suc k)) f", "show \n        \"\\<exists>ob. length ob = Suc k + 1 \n            \\<and> (\\<forall>obi. obi \\<in> set ob \\<longrightarrow> dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \n            \\<and> fst (ob ! 0) = f \n            \\<and> card (snd (ob ! Suc k)) = Suc k \n            \\<and> (\\<forall>i<Suc k. snd (ob ! i) \\<subset> snd (ob ! Suc k)) \n            \\<and> Obj (fst (ob ! 0)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst (ob ! Suc k)) T \n            \\<and> (card (snd (ob ! Suc k)) = Suc k \n               \\<longrightarrow> Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \n                   \\<and> Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f)\""], ["proof (prove)\nusing this:\n  length ob' = Suc k + 1\n  \\<forall>obi.\n     obi \\<in> set ob' \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  fst (ob' ! 0) = f\n  card (snd (ob' ! Suc k)) = Suc k\n  \\<forall>i<Suc k. snd (ob' ! i) \\<subset> snd (ob' ! Suc k)\n  Obj (fst (ob' ! 0)) T ->> Obj (fst (ob' ! Suc k)) T\n  card (snd (ob' ! Suc k)) = Suc k \\<longrightarrow>\n  Ltake_eq (snd (ob' ! Suc k)) (fst (ob' ! Suc k)) g \\<and>\n  Ltake_eq (dom f - snd (ob' ! Suc k)) (fst (ob' ! Suc k)) f\n\ngoal (1 subgoal):\n 1. \\<exists>ob.\n       length ob = Suc k + 1 \\<and>\n       (\\<forall>obi.\n           obi \\<in> set ob \\<longrightarrow>\n           dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n       fst (ob ! 0) = f \\<and>\n       card (snd (ob ! Suc k)) = Suc k \\<and>\n       (\\<forall>i<Suc k. snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n       Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! Suc k)) T \\<and>\n       (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n        Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \\<and>\n        Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f)", "by (rule_tac x = ob' in exI, simp)"], ["proof (state)\nthis:\n  \\<exists>ob.\n     length ob = Suc k + 1 \\<and>\n     (\\<forall>obi.\n         obi \\<in> set ob \\<longrightarrow>\n         dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n     fst (ob ! 0) = f \\<and>\n     card (snd (ob ! Suc k)) = Suc k \\<and>\n     (\\<forall>i<Suc k. snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n     Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! Suc k)) T \\<and>\n     (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n      Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \\<and>\n      Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc k \\<le> card (dom f) \\<longrightarrow>\n  (\\<exists>ob.\n      length ob = Suc k + 1 \\<and>\n      (\\<forall>obi.\n          obi \\<in> set ob \\<longrightarrow>\n          dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n      fst (ob ! 0) = f \\<and>\n      card (snd (ob ! Suc k)) = Suc k \\<and>\n      (\\<forall>i<Suc k. snd (ob ! i) \\<subset> snd (ob ! Suc k)) \\<and>\n      Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! Suc k)) T \\<and>\n      (card (snd (ob ! Suc k)) = Suc k \\<longrightarrow>\n       Ltake_eq (snd (ob ! Suc k)) (fst (ob ! Suc k)) g \\<and>\n       Ltake_eq (dom f - snd (ob ! Suc k)) (fst (ob ! Suc k)) f))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k \\<le> card (dom f) \\<longrightarrow>\n  (\\<exists>ob.\n      length ob = k + 1 \\<and>\n      (\\<forall>obi.\n          obi \\<in> set ob \\<longrightarrow>\n          dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n      fst (ob ! 0) = f \\<and>\n      card (snd (ob ! k)) = k \\<and>\n      (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n      Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! k)) T \\<and>\n      (card (snd (ob ! k)) = k \\<longrightarrow>\n       Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n       Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma rtrancl_beta_obj_n: \n  fixes f g L T\n  assumes \n  \"finite L\" and\n  \"\\<forall>l\\<in>dom f. \\<forall>s p. s \\<notin> L \\<and> p \\<notin> L \\<and> s \\<noteq> p\n               \\<longrightarrow> (\\<exists>t''. ((the(f l))\\<^bsup>[Fvar s, Fvar p]\\<^esup>) \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* t'' \n                        \\<and> the(g l) = \\<sigma>[s,p]t'')\" and\n  \"dom f = dom g\" and \"\\<forall>l\\<in>dom f. body (the(f l))\"\n  shows \"Obj f T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj g T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Obj f T ->> Obj g T", "proof (cases \"f = Map.empty\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f = Map.empty \\<Longrightarrow> Obj f T ->> Obj g T\n 2. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "case True"], ["proof (state)\nthis:\n  f = Map.empty\n\ngoal (2 subgoals):\n 1. f = Map.empty \\<Longrightarrow> Obj f T ->> Obj g T\n 2. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "with \\<open>dom f = dom g\\<close>"], ["proof (chain)\npicking this:\n  dom f = dom g\n  f = Map.empty", "have \"{} = dom g\""], ["proof (prove)\nusing this:\n  dom f = dom g\n  f = Map.empty\n\ngoal (1 subgoal):\n 1. {} = dom g", "by simp"], ["proof (state)\nthis:\n  {} = dom g\n\ngoal (2 subgoals):\n 1. f = Map.empty \\<Longrightarrow> Obj f T ->> Obj g T\n 2. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "from \\<open>f = Map.empty\\<close> empty_dom[OF this]"], ["proof (chain)\npicking this:\n  f = Map.empty\n  g = Map.empty", "show ?thesis"], ["proof (prove)\nusing this:\n  f = Map.empty\n  g = Map.empty\n\ngoal (1 subgoal):\n 1. Obj f T ->> Obj g T", "by simp"], ["proof (state)\nthis:\n  Obj f T ->> Obj g T\n\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "from rtrancl_beta_obj_lem00[OF assms]"], ["proof (chain)\npicking this:\n  \\<forall>k\\<le>card (dom f).\n     \\<exists>ob.\n        length ob = k + 1 \\<and>\n        (\\<forall>obi.\n            obi \\<in> set ob \\<longrightarrow>\n            dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n        fst (ob ! 0) = f \\<and>\n        card (snd (ob ! k)) = k \\<and>\n        (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n        Obj (fst (ob ! 0)) ?T ->> Obj (fst (ob ! k)) ?T \\<and>\n        (card (snd (ob ! k)) = k \\<longrightarrow>\n         Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n         Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f)", "obtain ob :: \"((Label -~> sterm) \\<times> (Label set)) list\" \n    where \n    \"length ob = card(dom f) + 1\" and\n    \"\\<forall>obi. obi \\<in> set ob \\<longrightarrow> dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\" and\n    \"fst(ob!0) = f\" and\n    \"card (snd(ob!card(dom f))) = card(dom f)\" and\n    \"Obj (fst(ob!0)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst(ob!card(dom f))) T\" and\n    \"Ltake_eq (snd(ob!card(dom f))) (fst(ob!card(dom f))) g\""], ["proof (prove)\nusing this:\n  \\<forall>k\\<le>card (dom f).\n     \\<exists>ob.\n        length ob = k + 1 \\<and>\n        (\\<forall>obi.\n            obi \\<in> set ob \\<longrightarrow>\n            dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f) \\<and>\n        fst (ob ! 0) = f \\<and>\n        card (snd (ob ! k)) = k \\<and>\n        (\\<forall>i<k. snd (ob ! i) \\<subset> snd (ob ! k)) \\<and>\n        Obj (fst (ob ! 0)) ?T ->> Obj (fst (ob ! k)) ?T \\<and>\n        (card (snd (ob ! k)) = k \\<longrightarrow>\n         Ltake_eq (snd (ob ! k)) (fst (ob ! k)) g \\<and>\n         Ltake_eq (dom f - snd (ob ! k)) (fst (ob ! k)) f)\n\ngoal (1 subgoal):\n 1. (\\<And>ob.\n        \\<lbrakk>length ob = card (dom f) + 1;\n         \\<forall>obi.\n            obi \\<in> set ob \\<longrightarrow>\n            dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f;\n         fst (ob ! 0) = f; card (snd (ob ! card (dom f))) = card (dom f);\n         Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! card (dom f))) T;\n         Ltake_eq (snd (ob ! card (dom f))) (fst (ob ! card (dom f)))\n          g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  length ob = card (dom f) + 1\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  fst (ob ! 0) = f\n  card (snd (ob ! card (dom f))) = card (dom f)\n  Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! card (dom f))) T\n  Ltake_eq (snd (ob ! card (dom f))) (fst (ob ! card (dom f))) g\n\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "from \\<open>length ob = card (dom f) + 1\\<close>"], ["proof (chain)\npicking this:\n  length ob = card (dom f) + 1", "have \"(ob!card(dom f)) \\<in> set ob\""], ["proof (prove)\nusing this:\n  length ob = card (dom f) + 1\n\ngoal (1 subgoal):\n 1. ob ! card (dom f) \\<in> set ob", "by auto"], ["proof (state)\nthis:\n  ob ! card (dom f) \\<in> set ob\n\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "with \\<open>\\<forall>obi. obi \\<in> set ob \\<longrightarrow> dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\\<close>"], ["proof (chain)\npicking this:\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  ob ! card (dom f) \\<in> set ob", "have \"dom (fst(ob!card(dom f))) = dom f\" and \"snd(ob!card(dom f)) \\<subseteq> dom f\""], ["proof (prove)\nusing this:\n  \\<forall>obi.\n     obi \\<in> set ob \\<longrightarrow>\n     dom (fst obi) = dom f \\<and> snd obi \\<subseteq> dom f\n  ob ! card (dom f) \\<in> set ob\n\ngoal (1 subgoal):\n 1. dom (fst (ob ! card (dom f))) = dom f &&&\n    snd (ob ! card (dom f)) \\<subseteq> dom f", "by blast+"], ["proof (state)\nthis:\n  dom (fst (ob ! card (dom f))) = dom f\n  snd (ob ! card (dom f)) \\<subseteq> dom f\n\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "{"], ["proof (state)\nthis:\n  dom (fst (ob ! card (dom f))) = dom f\n  snd (ob ! card (dom f)) \\<subseteq> dom f\n\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "fix l :: Label"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "from \n      \\<open>snd(ob!card(dom f)) \\<subseteq> dom f\\<close> \\<open>card (snd(ob!card(dom f))) = card(dom f)\\<close>\n      Ltake_eq_dom"], ["proof (chain)\npicking this:\n  snd (ob ! card (dom f)) \\<subseteq> dom f\n  card (snd (ob ! card (dom f))) = card (dom f)\n  \\<lbrakk>?L \\<subseteq> dom ?f; card ?L = card (dom ?f)\\<rbrakk>\n  \\<Longrightarrow> ?L = dom ?f", "have \"snd(ob!card(dom f)) = dom f\""], ["proof (prove)\nusing this:\n  snd (ob ! card (dom f)) \\<subseteq> dom f\n  card (snd (ob ! card (dom f))) = card (dom f)\n  \\<lbrakk>?L \\<subseteq> dom ?f; card ?L = card (dom ?f)\\<rbrakk>\n  \\<Longrightarrow> ?L = dom ?f\n\ngoal (1 subgoal):\n 1. snd (ob ! card (dom f)) = dom f", "by blast"], ["proof (state)\nthis:\n  snd (ob ! card (dom f)) = dom f\n\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "with \\<open>Ltake_eq (snd(ob!card (dom f))) (fst(ob!card (dom f))) g\\<close>"], ["proof (chain)\npicking this:\n  Ltake_eq (snd (ob ! card (dom f))) (fst (ob ! card (dom f))) g\n  snd (ob ! card (dom f)) = dom f", "have \"fst(ob!card(dom f)) l = g l\""], ["proof (prove)\nusing this:\n  Ltake_eq (snd (ob ! card (dom f))) (fst (ob ! card (dom f))) g\n  snd (ob ! card (dom f)) = dom f\n\ngoal (1 subgoal):\n 1. fst (ob ! card (dom f)) l = g l", "proof (cases \"l \\<in> dom f\", simp_all add: Ltake_eq_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<in>dom f. fst (ob ! card (dom f)) l = g l;\n     l \\<notin> dom f; snd (ob ! card (dom f)) = dom f\\<rbrakk>\n    \\<Longrightarrow> fst (ob ! card (dom f)) l = g l", "assume \"l \\<notin> dom f\""], ["proof (state)\nthis:\n  l \\<notin> dom f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>l\\<in>dom f. fst (ob ! card (dom f)) l = g l;\n     l \\<notin> dom f; snd (ob ! card (dom f)) = dom f\\<rbrakk>\n    \\<Longrightarrow> fst (ob ! card (dom f)) l = g l", "with \\<open>dom f = dom g\\<close> \\<open>dom (fst(ob!card(dom f))) = dom f\\<close>"], ["proof (chain)\npicking this:\n  dom f = dom g\n  dom (fst (ob ! card (dom f))) = dom f\n  l \\<notin> dom f", "show \"fst(ob!card(dom f)) l = g l\""], ["proof (prove)\nusing this:\n  dom f = dom g\n  dom (fst (ob ! card (dom f))) = dom f\n  l \\<notin> dom f\n\ngoal (1 subgoal):\n 1. fst (ob ! card (dom f)) l = g l", "by auto"], ["proof (state)\nthis:\n  fst (ob ! card (dom f)) l = g l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fst (ob ! card (dom f)) l = g l\n\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "}"], ["proof (state)\nthis:\n  fst (ob ! card (dom f)) ?l2 = g ?l2\n\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "with ext"], ["proof (chain)\npicking this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  fst (ob ! card (dom f)) ?l2 = g ?l2", "have \"fst(ob!card(dom f)) = g\""], ["proof (prove)\nusing this:\n  (\\<And>x. ?f x = ?g x) \\<Longrightarrow> ?f = ?g\n  fst (ob ! card (dom f)) ?l2 = g ?l2\n\ngoal (1 subgoal):\n 1. fst (ob ! card (dom f)) = g", "by auto"], ["proof (state)\nthis:\n  fst (ob ! card (dom f)) = g\n\ngoal (1 subgoal):\n 1. f \\<noteq> Map.empty \\<Longrightarrow> Obj f T ->> Obj g T", "with \\<open>fst(ob!0) = f\\<close> \\<open>Obj (fst(ob!0)) T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj (fst(ob!card (dom f))) T\\<close>"], ["proof (chain)\npicking this:\n  fst (ob ! 0) = f\n  Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! card (dom f))) T\n  fst (ob ! card (dom f)) = g", "show \"Obj f T \\<rightarrow>\\<^sub>\\<beta>\\<^sup>* Obj g T\""], ["proof (prove)\nusing this:\n  fst (ob ! 0) = f\n  Obj (fst (ob ! 0)) T ->> Obj (fst (ob ! card (dom f))) T\n  fst (ob ! card (dom f)) = g\n\ngoal (1 subgoal):\n 1. Obj f T ->> Obj g T", "by simp"], ["proof (state)\nthis:\n  Obj f T ->> Obj g T\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Size of sterms\\<close>"], ["", "(* this section defines the size of sterms \ncompared to size, the size of an object is the sum of the size of its fields +1 *)"], ["", "definition fsize0 :: \"(Label -~> sterm) \\<Rightarrow> (sterm \\<Rightarrow> nat) \\<Rightarrow> nat\" where\n  \"fsize0 f sts =\n    foldl (+) 0 (map sts (Finite_Set.fold (\\<lambda>x z. z@[THE y. Some y = f x]) [] (dom f)))\""], ["", "primrec\n ssize        :: \"sterm \\<Rightarrow> nat\" \nand\n ssize_option :: \"sterm option \\<Rightarrow> nat\"\nwhere\n  ssize_Bvar : \"ssize (Bvar b) = 0\"\n| ssize_Fvar : \"ssize (Fvar x) = 0\"\n| ssize_Call : \"ssize (Call a l b) = (ssize a) + (ssize b) + Suc 0\"\n| ssize_Upd  : \"ssize (Upd a l b) = (ssize a) + (ssize b) + Suc 0\" \n| ssize_Obj  : \"ssize (Obj f T) = Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0) (dom f)\"\n| ssize_None : \"ssize_option (None) = 0\"\n| ssize_Some : \"ssize_option (Some y) = ssize y + Suc 0\""], ["", "(* We need this locale, as all the handy functions are there now *)"], ["", "interpretation comp_fun_commute \"(\\<lambda>x y::nat. y + (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute (\\<lambda>x y. y + f x)", "by (unfold comp_fun_commute_def, force)"], ["", "lemma SizeOfObjectPos: \"ssize (Obj (f::Label -~> sterm) T) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < ssize (Obj f T)", "proof (simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n         (dom f)", "from finite_dom_fmap"], ["proof (chain)\npicking this:\n  finite (dom ?F)", "have \"finite (dom f)\""], ["proof (prove)\nusing this:\n  finite (dom ?F)\n\ngoal (1 subgoal):\n 1. finite (dom f)", "by auto"], ["proof (state)\nthis:\n  finite (dom f)\n\ngoal (1 subgoal):\n 1. 0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n         (dom f)", "thus \"0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0) (dom f)\""], ["proof (prove)\nusing this:\n  finite (dom f)\n\ngoal (1 subgoal):\n 1. 0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n         (dom f)", "proof (induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0) {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n             F\\<rbrakk>\n       \\<Longrightarrow> 0 < Finite_Set.fold\n                              (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n                              (insert x F)", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. 0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0) {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n             F\\<rbrakk>\n       \\<Longrightarrow> 0 < Finite_Set.fold\n                              (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n                              (insert x F)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0) {}", "by simp"], ["proof (state)\nthis:\n  0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0) {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n             F\\<rbrakk>\n       \\<Longrightarrow> 0 < Finite_Set.fold\n                              (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n                              (insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n             F\\<rbrakk>\n       \\<Longrightarrow> 0 < Finite_Set.fold\n                              (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n                              (insert x F)", "case (insert A a)"], ["proof (state)\nthis:\n  finite a\n  A \\<notin> a\n  0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0) a\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n             F\\<rbrakk>\n       \\<Longrightarrow> 0 < Finite_Set.fold\n                              (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n                              (insert x F)", "thus ?case"], ["proof (prove)\nusing this:\n  finite a\n  A \\<notin> a\n  0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0) a\n\ngoal (1 subgoal):\n 1. 0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n         (insert A a)", "by auto"], ["proof (state)\nthis:\n  0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0)\n       (insert A a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 < Finite_Set.fold (\\<lambda>x y. y + ssize_option (f x)) (Suc 0) (dom f)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}