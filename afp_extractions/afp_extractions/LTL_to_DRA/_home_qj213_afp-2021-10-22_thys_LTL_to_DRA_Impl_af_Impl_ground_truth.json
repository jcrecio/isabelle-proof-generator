{"file_name": "/home/qj213/afp-2021-10-22/thys/LTL_to_DRA/Impl/af_Impl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LTL_to_DRA", "problem_names": ["lemma remove_and_or_correct: \n  \"S \\<Turnstile>\\<^sub>P remove_and_or x \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P x\"", "lemma af_letter_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu>\"", "lemma af_G_letter_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi> \\<nu>\"", "lemma step_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu>\"", "lemma Unf_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P Unf \\<phi> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>\"", "lemma Unf\\<^sub>G_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>\"", "lemma af_letter_opt_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi> \\<nu>\"", "lemma af_G_letter_opt_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi> \\<nu>\"", "lemma [code]: \n  \"\\<up>af (Abs \\<phi>) \\<nu> = Abs (remove_and_or (af_letter_simp \\<phi> \\<nu>))\"", "lemma [code]:\n  \"\\<up>af\\<^sub>G (Abs \\<phi>) \\<nu> = Abs (remove_and_or (af_G_letter_simp \\<phi> \\<nu>))\"", "lemma [code]: \n  \"\\<up>step (Abs \\<phi>) \\<nu> = Abs (step_simp \\<phi> \\<nu>)\"", "lemma [code]: \n  \"\\<up>Unf (Abs \\<phi>) = Abs (remove_and_or (Unf_simp \\<phi>))\"", "lemma [code]: \n  \"\\<up>Unf\\<^sub>G (Abs \\<phi>) = Abs (remove_and_or (Unf\\<^sub>G_simp \\<phi>))\"", "lemma [code]: \n  \"\\<up>af\\<^sub>\\<UU> (Abs \\<phi>) \\<nu> = Abs (remove_and_or (af_letter_opt_simp \\<phi> \\<nu>))\"", "lemma [code]:\n  \"\\<up>af\\<^sub>G\\<^sub>\\<UU> (Abs \\<phi>) \\<nu> = Abs (remove_and_or (af_G_letter_opt_simp \\<phi> \\<nu>))\""], "translations": [["", "lemma remove_and_or_correct: \n  \"S \\<Turnstile>\\<^sub>P remove_and_or x \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P remove_and_or x = S \\<Turnstile>\\<^sub>P x", "proof (induction x)"], ["proof (state)\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P remove_and_or true = S \\<Turnstile>\\<^sub>P true\n 2. S \\<Turnstile>\\<^sub>P remove_and_or false =\n    S \\<Turnstile>\\<^sub>P false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or p(x) =\n       S \\<Turnstile>\\<^sub>P p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or (np(x)) =\n       S \\<Turnstile>\\<^sub>P np(x)\n 5. \\<And>x1 x2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                S \\<Turnstile>\\<^sub>P x1;\n        S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n        S \\<Turnstile>\\<^sub>P x2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x1 and x2) =\n                         S \\<Turnstile>\\<^sub>P x1 and x2\n 6. \\<And>x1 x2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                S \\<Turnstile>\\<^sub>P x1;\n        S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n        S \\<Turnstile>\\<^sub>P x2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x1 or x2) =\n                         S \\<Turnstile>\\<^sub>P x1 or x2\n 7. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or x =\n       S \\<Turnstile>\\<^sub>P x \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P remove_and_or (X x) =\n       S \\<Turnstile>\\<^sub>P X x\n 8. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or x =\n       S \\<Turnstile>\\<^sub>P x \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P remove_and_or (G x) =\n       S \\<Turnstile>\\<^sub>P G x\n 9. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or x =\n       S \\<Turnstile>\\<^sub>P x \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P remove_and_or (F x) =\n       S \\<Turnstile>\\<^sub>P F x\n 10. \\<And>x1 x2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                 S \\<Turnstile>\\<^sub>P x1;\n         S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n         S \\<Turnstile>\\<^sub>P x2\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x1 U x2) =\n                          S \\<Turnstile>\\<^sub>P x1 U x2", "case (LTLOr x y)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P remove_and_or x = S \\<Turnstile>\\<^sub>P x\n  S \\<Turnstile>\\<^sub>P remove_and_or y = S \\<Turnstile>\\<^sub>P y\n\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P remove_and_or true = S \\<Turnstile>\\<^sub>P true\n 2. S \\<Turnstile>\\<^sub>P remove_and_or false =\n    S \\<Turnstile>\\<^sub>P false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or p(x) =\n       S \\<Turnstile>\\<^sub>P p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or (np(x)) =\n       S \\<Turnstile>\\<^sub>P np(x)\n 5. \\<And>x1 x2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                S \\<Turnstile>\\<^sub>P x1;\n        S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n        S \\<Turnstile>\\<^sub>P x2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x1 and x2) =\n                         S \\<Turnstile>\\<^sub>P x1 and x2\n 6. \\<And>x1 x2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                S \\<Turnstile>\\<^sub>P x1;\n        S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n        S \\<Turnstile>\\<^sub>P x2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x1 or x2) =\n                         S \\<Turnstile>\\<^sub>P x1 or x2\n 7. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or x =\n       S \\<Turnstile>\\<^sub>P x \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P remove_and_or (X x) =\n       S \\<Turnstile>\\<^sub>P X x\n 8. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or x =\n       S \\<Turnstile>\\<^sub>P x \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P remove_and_or (G x) =\n       S \\<Turnstile>\\<^sub>P G x\n 9. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or x =\n       S \\<Turnstile>\\<^sub>P x \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P remove_and_or (F x) =\n       S \\<Turnstile>\\<^sub>P F x\n 10. \\<And>x1 x2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                 S \\<Turnstile>\\<^sub>P x1;\n         S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n         S \\<Turnstile>\\<^sub>P x2\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x1 U x2) =\n                          S \\<Turnstile>\\<^sub>P x1 U x2", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P remove_and_or x = S \\<Turnstile>\\<^sub>P x\n  S \\<Turnstile>\\<^sub>P remove_and_or y = S \\<Turnstile>\\<^sub>P y\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P remove_and_or (x or y) =\n    S \\<Turnstile>\\<^sub>P x or y", "proof (induction x)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or true =\n             S \\<Turnstile>\\<^sub>P true;\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (true or y) =\n                      S \\<Turnstile>\\<^sub>P true or y\n 2. \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or false =\n             S \\<Turnstile>\\<^sub>P false;\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (false or y) =\n                      S \\<Turnstile>\\<^sub>P false or y\n 3. \\<And>x.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or p(x) =\n                S \\<Turnstile>\\<^sub>P p(x);\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (p(x) or y) =\n                         S \\<Turnstile>\\<^sub>P p(x) or y\n 4. \\<And>x.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (np(x)) =\n                S \\<Turnstile>\\<^sub>P np(x);\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (np(x) or y) =\n                         S \\<Turnstile>\\<^sub>P np(x) or y\n 5. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                         S \\<Turnstile>\\<^sub>P x1;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x1 or y) =\n                                  S \\<Turnstile>\\<^sub>P x1 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n                 S \\<Turnstile>\\<^sub>P x2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x2 or y) =\n                          S \\<Turnstile>\\<^sub>P x2 or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (x1 and x2) =\n        S \\<Turnstile>\\<^sub>P x1 and x2;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (x1 and x2 or y) =\n                         S \\<Turnstile>\\<^sub>P x1 and x2 or y\n 6. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                         S \\<Turnstile>\\<^sub>P x1;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x1 or y) =\n                                  S \\<Turnstile>\\<^sub>P x1 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n                 S \\<Turnstile>\\<^sub>P x2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x2 or y) =\n                          S \\<Turnstile>\\<^sub>P x2 or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (x1 or x2) =\n        S \\<Turnstile>\\<^sub>P x1 or x2;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or ((x1 or x2) or y) =\n                         S \\<Turnstile>\\<^sub>P (x1 or x2) or y\n 7. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x =\n                         S \\<Turnstile>\\<^sub>P x;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x or y) =\n                                  S \\<Turnstile>\\<^sub>P x or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (X x) =\n        S \\<Turnstile>\\<^sub>P X x;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (X x or y) =\n                         S \\<Turnstile>\\<^sub>P X x or y\n 8. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x =\n                         S \\<Turnstile>\\<^sub>P x;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x or y) =\n                                  S \\<Turnstile>\\<^sub>P x or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (G x) =\n        S \\<Turnstile>\\<^sub>P G x;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (G x or y) =\n                         S \\<Turnstile>\\<^sub>P G x or y\n 9. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x =\n                         S \\<Turnstile>\\<^sub>P x;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x or y) =\n                                  S \\<Turnstile>\\<^sub>P x or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (F x) =\n        S \\<Turnstile>\\<^sub>P F x;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (F x or y) =\n                         S \\<Turnstile>\\<^sub>P F x or y\n 10. \\<And>x1 x2.\n        \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                          S \\<Turnstile>\\<^sub>P x1;\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x1 or y) =\n                                   S \\<Turnstile>\\<^sub>P x1 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n                  S \\<Turnstile>\\<^sub>P x2;\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x2 or y) =\n                           S \\<Turnstile>\\<^sub>P x2 or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x1 U x2) =\n         S \\<Turnstile>\\<^sub>P x1 U x2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x1 U x2 or y) =\n                          S \\<Turnstile>\\<^sub>P x1 U x2 or y", "case (LTLAnd x' y')"], ["proof (state)\nthis:\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n           S \\<Turnstile>\\<^sub>P x';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x' or y) =\n                    S \\<Turnstile>\\<^sub>P x' or y\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n           S \\<Turnstile>\\<^sub>P y';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                    S \\<Turnstile>\\<^sub>P y' or y\n  S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n  S \\<Turnstile>\\<^sub>P x' and y'\n  S \\<Turnstile>\\<^sub>P remove_and_or y = S \\<Turnstile>\\<^sub>P y\n\ngoal (10 subgoals):\n 1. \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or true =\n             S \\<Turnstile>\\<^sub>P true;\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (true or y) =\n                      S \\<Turnstile>\\<^sub>P true or y\n 2. \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or false =\n             S \\<Turnstile>\\<^sub>P false;\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (false or y) =\n                      S \\<Turnstile>\\<^sub>P false or y\n 3. \\<And>x.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or p(x) =\n                S \\<Turnstile>\\<^sub>P p(x);\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (p(x) or y) =\n                         S \\<Turnstile>\\<^sub>P p(x) or y\n 4. \\<And>x.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (np(x)) =\n                S \\<Turnstile>\\<^sub>P np(x);\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (np(x) or y) =\n                         S \\<Turnstile>\\<^sub>P np(x) or y\n 5. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                         S \\<Turnstile>\\<^sub>P x1;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x1 or y) =\n                                  S \\<Turnstile>\\<^sub>P x1 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n                 S \\<Turnstile>\\<^sub>P x2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x2 or y) =\n                          S \\<Turnstile>\\<^sub>P x2 or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (x1 and x2) =\n        S \\<Turnstile>\\<^sub>P x1 and x2;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (x1 and x2 or y) =\n                         S \\<Turnstile>\\<^sub>P x1 and x2 or y\n 6. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                         S \\<Turnstile>\\<^sub>P x1;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x1 or y) =\n                                  S \\<Turnstile>\\<^sub>P x1 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n                 S \\<Turnstile>\\<^sub>P x2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x2 or y) =\n                          S \\<Turnstile>\\<^sub>P x2 or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (x1 or x2) =\n        S \\<Turnstile>\\<^sub>P x1 or x2;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or ((x1 or x2) or y) =\n                         S \\<Turnstile>\\<^sub>P (x1 or x2) or y\n 7. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x =\n                         S \\<Turnstile>\\<^sub>P x;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x or y) =\n                                  S \\<Turnstile>\\<^sub>P x or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (X x) =\n        S \\<Turnstile>\\<^sub>P X x;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (X x or y) =\n                         S \\<Turnstile>\\<^sub>P X x or y\n 8. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x =\n                         S \\<Turnstile>\\<^sub>P x;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x or y) =\n                                  S \\<Turnstile>\\<^sub>P x or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (G x) =\n        S \\<Turnstile>\\<^sub>P G x;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (G x or y) =\n                         S \\<Turnstile>\\<^sub>P G x or y\n 9. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x =\n                         S \\<Turnstile>\\<^sub>P x;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x or y) =\n                                  S \\<Turnstile>\\<^sub>P x or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (F x) =\n        S \\<Turnstile>\\<^sub>P F x;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (F x or y) =\n                         S \\<Turnstile>\\<^sub>P F x or y\n 10. \\<And>x1 x2.\n        \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                          S \\<Turnstile>\\<^sub>P x1;\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x1 or y) =\n                                   S \\<Turnstile>\\<^sub>P x1 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n                  S \\<Turnstile>\\<^sub>P x2;\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x2 or y) =\n                           S \\<Turnstile>\\<^sub>P x2 or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x1 U x2) =\n         S \\<Turnstile>\\<^sub>P x1 U x2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x1 U x2 or y) =\n                          S \\<Turnstile>\\<^sub>P x1 U x2 or y", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n           S \\<Turnstile>\\<^sub>P x';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x' or y) =\n                    S \\<Turnstile>\\<^sub>P x' or y\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n           S \\<Turnstile>\\<^sub>P y';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                    S \\<Turnstile>\\<^sub>P y' or y\n  S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n  S \\<Turnstile>\\<^sub>P x' and y'\n  S \\<Turnstile>\\<^sub>P remove_and_or y = S \\<Turnstile>\\<^sub>P y\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P remove_and_or (x' and y' or y) =\n    S \\<Turnstile>\\<^sub>P x' and y' or y", "proof (induction x')"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or true =\n                      S \\<Turnstile>\\<^sub>P true;\n              S \\<Turnstile>\\<^sub>P remove_and_or y =\n              S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n             \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                               remove_and_or (true or y) =\n                               S \\<Turnstile>\\<^sub>P true or y;\n     \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n              S \\<Turnstile>\\<^sub>P y';\n      S \\<Turnstile>\\<^sub>P remove_and_or y =\n      S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n     \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                       S \\<Turnstile>\\<^sub>P y' or y;\n     S \\<Turnstile>\\<^sub>P remove_and_or (true and y') =\n     S \\<Turnstile>\\<^sub>P true and y';\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                      remove_and_or (true and y' or y) =\n                      S \\<Turnstile>\\<^sub>P true and y' or y\n 2. \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or false =\n                      S \\<Turnstile>\\<^sub>P false;\n              S \\<Turnstile>\\<^sub>P remove_and_or y =\n              S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n             \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                               remove_and_or (false or y) =\n                               S \\<Turnstile>\\<^sub>P false or y;\n     \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n              S \\<Turnstile>\\<^sub>P y';\n      S \\<Turnstile>\\<^sub>P remove_and_or y =\n      S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n     \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                       S \\<Turnstile>\\<^sub>P y' or y;\n     S \\<Turnstile>\\<^sub>P remove_and_or (false and y') =\n     S \\<Turnstile>\\<^sub>P false and y';\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                      remove_and_or (false and y' or y) =\n                      S \\<Turnstile>\\<^sub>P false and y' or y\n 3. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or p(x) =\n                         S \\<Turnstile>\\<^sub>P p(x);\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (p(x) or y) =\n                                  S \\<Turnstile>\\<^sub>P p(x) or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (p(x) and y') =\n        S \\<Turnstile>\\<^sub>P p(x) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (p(x) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P p(x) and y' or y\n 4. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (np(x)) =\n                         S \\<Turnstile>\\<^sub>P np(x);\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (np(x) or y) =\n                                  S \\<Turnstile>\\<^sub>P np(x) or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (np(x) and y') =\n        S \\<Turnstile>\\<^sub>P np(x) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (np(x) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P np(x) and y' or y\n 5. \\<And>x'1 x'2.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'1 =\n                                  S \\<Turnstile>\\<^sub>P x'1;\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x'1 or y) =\n     S \\<Turnstile>\\<^sub>P x'1 or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and y') =\n                 S \\<Turnstile>\\<^sub>P x'1 and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x'1 and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x'1 and y' or y;\n        \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'2 =\n                          S \\<Turnstile>\\<^sub>P x'2;\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x'2 or y) =\n                                   S \\<Turnstile>\\<^sub>P x'2 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                  S \\<Turnstile>\\<^sub>P y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                           S \\<Turnstile>\\<^sub>P y' or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x'2 and y') =\n         S \\<Turnstile>\\<^sub>P x'2 and y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'2 and y' or y) =\n                          S \\<Turnstile>\\<^sub>P x'2 and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and x'2) =\n                 S \\<Turnstile>\\<^sub>P x'1 and x'2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'1 and x'2 or y) =\n                          S \\<Turnstile>\\<^sub>P x'1 and x'2 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or ((x'1 and x'2) and y') =\n        S \\<Turnstile>\\<^sub>P (x'1 and x'2) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or ((x'1 and x'2) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P (x'1 and x'2) and y' or y\n 6. \\<And>x'1 x'2.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'1 =\n                                  S \\<Turnstile>\\<^sub>P x'1;\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x'1 or y) =\n     S \\<Turnstile>\\<^sub>P x'1 or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and y') =\n                 S \\<Turnstile>\\<^sub>P x'1 and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x'1 and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x'1 and y' or y;\n        \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'2 =\n                          S \\<Turnstile>\\<^sub>P x'2;\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x'2 or y) =\n                                   S \\<Turnstile>\\<^sub>P x'2 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                  S \\<Turnstile>\\<^sub>P y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                           S \\<Turnstile>\\<^sub>P y' or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x'2 and y') =\n         S \\<Turnstile>\\<^sub>P x'2 and y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'2 and y' or y) =\n                          S \\<Turnstile>\\<^sub>P x'2 and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'1 or x'2) =\n                 S \\<Turnstile>\\<^sub>P x'1 or x'2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or ((x'1 or x'2) or y) =\n                          S \\<Turnstile>\\<^sub>P (x'1 or x'2) or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or ((x'1 or x'2) and y') =\n        S \\<Turnstile>\\<^sub>P (x'1 or x'2) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or ((x'1 or x'2) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P (x'1 or x'2) and y' or y\n 7. \\<And>x'.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n                                  S \\<Turnstile>\\<^sub>P x';\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x' or y) =\n     S \\<Turnstile>\\<^sub>P x' or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n                 S \\<Turnstile>\\<^sub>P x' and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x' and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x' and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (X x') =\n                 S \\<Turnstile>\\<^sub>P X x';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (X x' or y) =\n                          S \\<Turnstile>\\<^sub>P X x' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (X x' and y') =\n        S \\<Turnstile>\\<^sub>P X x' and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (X x' and y' or y) =\n                         S \\<Turnstile>\\<^sub>P X x' and y' or y\n 8. \\<And>x'.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n                                  S \\<Turnstile>\\<^sub>P x';\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x' or y) =\n     S \\<Turnstile>\\<^sub>P x' or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n                 S \\<Turnstile>\\<^sub>P x' and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x' and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x' and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (G x') =\n                 S \\<Turnstile>\\<^sub>P G x';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (G x' or y) =\n                          S \\<Turnstile>\\<^sub>P G x' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (G x' and y') =\n        S \\<Turnstile>\\<^sub>P G x' and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (G x' and y' or y) =\n                         S \\<Turnstile>\\<^sub>P G x' and y' or y\n 9. \\<And>x'.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n                                  S \\<Turnstile>\\<^sub>P x';\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x' or y) =\n     S \\<Turnstile>\\<^sub>P x' or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n                 S \\<Turnstile>\\<^sub>P x' and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x' and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x' and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (F x') =\n                 S \\<Turnstile>\\<^sub>P F x';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (F x' or y) =\n                          S \\<Turnstile>\\<^sub>P F x' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (F x' and y') =\n        S \\<Turnstile>\\<^sub>P F x' and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (F x' and y' or y) =\n                         S \\<Turnstile>\\<^sub>P F x' and y' or y\n 10. \\<And>x'1 x'2.\n        \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P\n                                   remove_and_or x'1 =\n                                   S \\<Turnstile>\\<^sub>P x'1;\n                           S \\<Turnstile>\\<^sub>P remove_and_or y =\n                           S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                          \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n      remove_and_or (x'1 or y) =\n      S \\<Turnstile>\\<^sub>P x'1 or y;\n                  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                           S \\<Turnstile>\\<^sub>P y';\n                   S \\<Turnstile>\\<^sub>P remove_and_or y =\n                   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                    remove_and_or (y' or y) =\n                                    S \\<Turnstile>\\<^sub>P y' or y;\n                  S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and y') =\n                  S \\<Turnstile>\\<^sub>P x'1 and y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x'1 and y' or y) =\n                                   S \\<Turnstile>\\<^sub>P x'1 and y' or y;\n         \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'2 =\n                           S \\<Turnstile>\\<^sub>P x'2;\n                   S \\<Turnstile>\\<^sub>P remove_and_or y =\n                   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                    remove_and_or (x'2 or y) =\n                                    S \\<Turnstile>\\<^sub>P x'2 or y;\n          \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                   S \\<Turnstile>\\<^sub>P y';\n           S \\<Turnstile>\\<^sub>P remove_and_or y =\n           S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n          \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                            S \\<Turnstile>\\<^sub>P y' or y;\n          S \\<Turnstile>\\<^sub>P remove_and_or (x'2 and y') =\n          S \\<Turnstile>\\<^sub>P x'2 and y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                           remove_and_or (x'2 and y' or y) =\n                           S \\<Turnstile>\\<^sub>P x'2 and y' or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'1 U x'2) =\n                  S \\<Turnstile>\\<^sub>P x'1 U x'2;\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                           remove_and_or (x'1 U x'2 or y) =\n                           S \\<Turnstile>\\<^sub>P x'1 U x'2 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                  S \\<Turnstile>\\<^sub>P y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                           S \\<Turnstile>\\<^sub>P y' or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x'1 U x'2 and y') =\n         S \\<Turnstile>\\<^sub>P x'1 U x'2 and y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'1 U x'2 and y' or y) =\n                          S \\<Turnstile>\\<^sub>P x'1 U x'2 and y' or y", "case (LTLOr x'' y'')"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'' =\n                    S \\<Turnstile>\\<^sub>P x'';\n            S \\<Turnstile>\\<^sub>P remove_and_or y =\n            S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n           \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                             remove_and_or (x'' or y) =\n                             S \\<Turnstile>\\<^sub>P x'' or y;\n   \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n            S \\<Turnstile>\\<^sub>P y';\n    S \\<Turnstile>\\<^sub>P remove_and_or y =\n    S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n   \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                     S \\<Turnstile>\\<^sub>P y' or y;\n   S \\<Turnstile>\\<^sub>P remove_and_or (x'' and y') =\n   S \\<Turnstile>\\<^sub>P x'' and y';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x'' and y' or y) =\n                    S \\<Turnstile>\\<^sub>P x'' and y' or y\n  \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y'' =\n                    S \\<Turnstile>\\<^sub>P y'';\n            S \\<Turnstile>\\<^sub>P remove_and_or y =\n            S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n           \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                             remove_and_or (y'' or y) =\n                             S \\<Turnstile>\\<^sub>P y'' or y;\n   \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n            S \\<Turnstile>\\<^sub>P y';\n    S \\<Turnstile>\\<^sub>P remove_and_or y =\n    S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n   \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                     S \\<Turnstile>\\<^sub>P y' or y;\n   S \\<Turnstile>\\<^sub>P remove_and_or (y'' and y') =\n   S \\<Turnstile>\\<^sub>P y'' and y';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y'' and y' or y) =\n                    S \\<Turnstile>\\<^sub>P y'' and y' or y\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'' or y'') =\n           S \\<Turnstile>\\<^sub>P x'' or y'';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                    remove_and_or ((x'' or y'') or y) =\n                    S \\<Turnstile>\\<^sub>P (x'' or y'') or y\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n           S \\<Turnstile>\\<^sub>P y';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                    S \\<Turnstile>\\<^sub>P y' or y\n  S \\<Turnstile>\\<^sub>P remove_and_or ((x'' or y'') and y') =\n  S \\<Turnstile>\\<^sub>P (x'' or y'') and y'\n  S \\<Turnstile>\\<^sub>P remove_and_or y = S \\<Turnstile>\\<^sub>P y\n\ngoal (10 subgoals):\n 1. \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or true =\n                      S \\<Turnstile>\\<^sub>P true;\n              S \\<Turnstile>\\<^sub>P remove_and_or y =\n              S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n             \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                               remove_and_or (true or y) =\n                               S \\<Turnstile>\\<^sub>P true or y;\n     \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n              S \\<Turnstile>\\<^sub>P y';\n      S \\<Turnstile>\\<^sub>P remove_and_or y =\n      S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n     \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                       S \\<Turnstile>\\<^sub>P y' or y;\n     S \\<Turnstile>\\<^sub>P remove_and_or (true and y') =\n     S \\<Turnstile>\\<^sub>P true and y';\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                      remove_and_or (true and y' or y) =\n                      S \\<Turnstile>\\<^sub>P true and y' or y\n 2. \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or false =\n                      S \\<Turnstile>\\<^sub>P false;\n              S \\<Turnstile>\\<^sub>P remove_and_or y =\n              S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n             \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                               remove_and_or (false or y) =\n                               S \\<Turnstile>\\<^sub>P false or y;\n     \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n              S \\<Turnstile>\\<^sub>P y';\n      S \\<Turnstile>\\<^sub>P remove_and_or y =\n      S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n     \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                       S \\<Turnstile>\\<^sub>P y' or y;\n     S \\<Turnstile>\\<^sub>P remove_and_or (false and y') =\n     S \\<Turnstile>\\<^sub>P false and y';\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                      remove_and_or (false and y' or y) =\n                      S \\<Turnstile>\\<^sub>P false and y' or y\n 3. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or p(x) =\n                         S \\<Turnstile>\\<^sub>P p(x);\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (p(x) or y) =\n                                  S \\<Turnstile>\\<^sub>P p(x) or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (p(x) and y') =\n        S \\<Turnstile>\\<^sub>P p(x) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (p(x) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P p(x) and y' or y\n 4. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (np(x)) =\n                         S \\<Turnstile>\\<^sub>P np(x);\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (np(x) or y) =\n                                  S \\<Turnstile>\\<^sub>P np(x) or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (np(x) and y') =\n        S \\<Turnstile>\\<^sub>P np(x) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (np(x) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P np(x) and y' or y\n 5. \\<And>x'1 x'2.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'1 =\n                                  S \\<Turnstile>\\<^sub>P x'1;\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x'1 or y) =\n     S \\<Turnstile>\\<^sub>P x'1 or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and y') =\n                 S \\<Turnstile>\\<^sub>P x'1 and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x'1 and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x'1 and y' or y;\n        \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'2 =\n                          S \\<Turnstile>\\<^sub>P x'2;\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x'2 or y) =\n                                   S \\<Turnstile>\\<^sub>P x'2 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                  S \\<Turnstile>\\<^sub>P y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                           S \\<Turnstile>\\<^sub>P y' or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x'2 and y') =\n         S \\<Turnstile>\\<^sub>P x'2 and y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'2 and y' or y) =\n                          S \\<Turnstile>\\<^sub>P x'2 and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and x'2) =\n                 S \\<Turnstile>\\<^sub>P x'1 and x'2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'1 and x'2 or y) =\n                          S \\<Turnstile>\\<^sub>P x'1 and x'2 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or ((x'1 and x'2) and y') =\n        S \\<Turnstile>\\<^sub>P (x'1 and x'2) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or ((x'1 and x'2) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P (x'1 and x'2) and y' or y\n 6. \\<And>x'1 x'2.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'1 =\n                                  S \\<Turnstile>\\<^sub>P x'1;\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x'1 or y) =\n     S \\<Turnstile>\\<^sub>P x'1 or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and y') =\n                 S \\<Turnstile>\\<^sub>P x'1 and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x'1 and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x'1 and y' or y;\n        \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'2 =\n                          S \\<Turnstile>\\<^sub>P x'2;\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x'2 or y) =\n                                   S \\<Turnstile>\\<^sub>P x'2 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                  S \\<Turnstile>\\<^sub>P y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                           S \\<Turnstile>\\<^sub>P y' or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x'2 and y') =\n         S \\<Turnstile>\\<^sub>P x'2 and y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'2 and y' or y) =\n                          S \\<Turnstile>\\<^sub>P x'2 and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'1 or x'2) =\n                 S \\<Turnstile>\\<^sub>P x'1 or x'2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or ((x'1 or x'2) or y) =\n                          S \\<Turnstile>\\<^sub>P (x'1 or x'2) or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or ((x'1 or x'2) and y') =\n        S \\<Turnstile>\\<^sub>P (x'1 or x'2) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or ((x'1 or x'2) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P (x'1 or x'2) and y' or y\n 7. \\<And>x'.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n                                  S \\<Turnstile>\\<^sub>P x';\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x' or y) =\n     S \\<Turnstile>\\<^sub>P x' or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n                 S \\<Turnstile>\\<^sub>P x' and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x' and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x' and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (X x') =\n                 S \\<Turnstile>\\<^sub>P X x';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (X x' or y) =\n                          S \\<Turnstile>\\<^sub>P X x' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (X x' and y') =\n        S \\<Turnstile>\\<^sub>P X x' and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (X x' and y' or y) =\n                         S \\<Turnstile>\\<^sub>P X x' and y' or y\n 8. \\<And>x'.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n                                  S \\<Turnstile>\\<^sub>P x';\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x' or y) =\n     S \\<Turnstile>\\<^sub>P x' or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n                 S \\<Turnstile>\\<^sub>P x' and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x' and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x' and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (G x') =\n                 S \\<Turnstile>\\<^sub>P G x';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (G x' or y) =\n                          S \\<Turnstile>\\<^sub>P G x' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (G x' and y') =\n        S \\<Turnstile>\\<^sub>P G x' and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (G x' and y' or y) =\n                         S \\<Turnstile>\\<^sub>P G x' and y' or y\n 9. \\<And>x'.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n                                  S \\<Turnstile>\\<^sub>P x';\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x' or y) =\n     S \\<Turnstile>\\<^sub>P x' or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n                 S \\<Turnstile>\\<^sub>P x' and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x' and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x' and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (F x') =\n                 S \\<Turnstile>\\<^sub>P F x';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (F x' or y) =\n                          S \\<Turnstile>\\<^sub>P F x' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (F x' and y') =\n        S \\<Turnstile>\\<^sub>P F x' and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (F x' and y' or y) =\n                         S \\<Turnstile>\\<^sub>P F x' and y' or y\n 10. \\<And>x'1 x'2.\n        \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P\n                                   remove_and_or x'1 =\n                                   S \\<Turnstile>\\<^sub>P x'1;\n                           S \\<Turnstile>\\<^sub>P remove_and_or y =\n                           S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                          \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n      remove_and_or (x'1 or y) =\n      S \\<Turnstile>\\<^sub>P x'1 or y;\n                  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                           S \\<Turnstile>\\<^sub>P y';\n                   S \\<Turnstile>\\<^sub>P remove_and_or y =\n                   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                    remove_and_or (y' or y) =\n                                    S \\<Turnstile>\\<^sub>P y' or y;\n                  S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and y') =\n                  S \\<Turnstile>\\<^sub>P x'1 and y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x'1 and y' or y) =\n                                   S \\<Turnstile>\\<^sub>P x'1 and y' or y;\n         \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'2 =\n                           S \\<Turnstile>\\<^sub>P x'2;\n                   S \\<Turnstile>\\<^sub>P remove_and_or y =\n                   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                    remove_and_or (x'2 or y) =\n                                    S \\<Turnstile>\\<^sub>P x'2 or y;\n          \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                   S \\<Turnstile>\\<^sub>P y';\n           S \\<Turnstile>\\<^sub>P remove_and_or y =\n           S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n          \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                            S \\<Turnstile>\\<^sub>P y' or y;\n          S \\<Turnstile>\\<^sub>P remove_and_or (x'2 and y') =\n          S \\<Turnstile>\\<^sub>P x'2 and y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                           remove_and_or (x'2 and y' or y) =\n                           S \\<Turnstile>\\<^sub>P x'2 and y' or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'1 U x'2) =\n                  S \\<Turnstile>\\<^sub>P x'1 U x'2;\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                           remove_and_or (x'1 U x'2 or y) =\n                           S \\<Turnstile>\\<^sub>P x'1 U x'2 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                  S \\<Turnstile>\\<^sub>P y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                           S \\<Turnstile>\\<^sub>P y' or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x'1 U x'2 and y') =\n         S \\<Turnstile>\\<^sub>P x'1 U x'2 and y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'1 U x'2 and y' or y) =\n                          S \\<Turnstile>\\<^sub>P x'1 U x'2 and y' or y", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'' =\n                    S \\<Turnstile>\\<^sub>P x'';\n            S \\<Turnstile>\\<^sub>P remove_and_or y =\n            S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n           \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                             remove_and_or (x'' or y) =\n                             S \\<Turnstile>\\<^sub>P x'' or y;\n   \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n            S \\<Turnstile>\\<^sub>P y';\n    S \\<Turnstile>\\<^sub>P remove_and_or y =\n    S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n   \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                     S \\<Turnstile>\\<^sub>P y' or y;\n   S \\<Turnstile>\\<^sub>P remove_and_or (x'' and y') =\n   S \\<Turnstile>\\<^sub>P x'' and y';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x'' and y' or y) =\n                    S \\<Turnstile>\\<^sub>P x'' and y' or y\n  \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y'' =\n                    S \\<Turnstile>\\<^sub>P y'';\n            S \\<Turnstile>\\<^sub>P remove_and_or y =\n            S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n           \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                             remove_and_or (y'' or y) =\n                             S \\<Turnstile>\\<^sub>P y'' or y;\n   \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n            S \\<Turnstile>\\<^sub>P y';\n    S \\<Turnstile>\\<^sub>P remove_and_or y =\n    S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n   \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                     S \\<Turnstile>\\<^sub>P y' or y;\n   S \\<Turnstile>\\<^sub>P remove_and_or (y'' and y') =\n   S \\<Turnstile>\\<^sub>P y'' and y';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y'' and y' or y) =\n                    S \\<Turnstile>\\<^sub>P y'' and y' or y\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'' or y'') =\n           S \\<Turnstile>\\<^sub>P x'' or y'';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                    remove_and_or ((x'' or y'') or y) =\n                    S \\<Turnstile>\\<^sub>P (x'' or y'') or y\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n           S \\<Turnstile>\\<^sub>P y';\n   S \\<Turnstile>\\<^sub>P remove_and_or y =\n   S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                    S \\<Turnstile>\\<^sub>P y' or y\n  S \\<Turnstile>\\<^sub>P remove_and_or ((x'' or y'') and y') =\n  S \\<Turnstile>\\<^sub>P (x'' or y'') and y'\n  S \\<Turnstile>\\<^sub>P remove_and_or y = S \\<Turnstile>\\<^sub>P y\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P remove_and_or ((x'' or y'') and y' or y) =\n    S \\<Turnstile>\\<^sub>P (x'' or y'') and y' or y", "by (induction x'') auto"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P remove_and_or ((x'' or y'') and y' or y) =\n  S \\<Turnstile>\\<^sub>P (x'' or y'') and y' or y\n\ngoal (9 subgoals):\n 1. \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or true =\n                      S \\<Turnstile>\\<^sub>P true;\n              S \\<Turnstile>\\<^sub>P remove_and_or y =\n              S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n             \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                               remove_and_or (true or y) =\n                               S \\<Turnstile>\\<^sub>P true or y;\n     \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n              S \\<Turnstile>\\<^sub>P y';\n      S \\<Turnstile>\\<^sub>P remove_and_or y =\n      S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n     \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                       S \\<Turnstile>\\<^sub>P y' or y;\n     S \\<Turnstile>\\<^sub>P remove_and_or (true and y') =\n     S \\<Turnstile>\\<^sub>P true and y';\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                      remove_and_or (true and y' or y) =\n                      S \\<Turnstile>\\<^sub>P true and y' or y\n 2. \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or false =\n                      S \\<Turnstile>\\<^sub>P false;\n              S \\<Turnstile>\\<^sub>P remove_and_or y =\n              S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n             \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                               remove_and_or (false or y) =\n                               S \\<Turnstile>\\<^sub>P false or y;\n     \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n              S \\<Turnstile>\\<^sub>P y';\n      S \\<Turnstile>\\<^sub>P remove_and_or y =\n      S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n     \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                       S \\<Turnstile>\\<^sub>P y' or y;\n     S \\<Turnstile>\\<^sub>P remove_and_or (false and y') =\n     S \\<Turnstile>\\<^sub>P false and y';\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                      remove_and_or (false and y' or y) =\n                      S \\<Turnstile>\\<^sub>P false and y' or y\n 3. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or p(x) =\n                         S \\<Turnstile>\\<^sub>P p(x);\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (p(x) or y) =\n                                  S \\<Turnstile>\\<^sub>P p(x) or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (p(x) and y') =\n        S \\<Turnstile>\\<^sub>P p(x) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (p(x) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P p(x) and y' or y\n 4. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (np(x)) =\n                         S \\<Turnstile>\\<^sub>P np(x);\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (np(x) or y) =\n                                  S \\<Turnstile>\\<^sub>P np(x) or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (np(x) and y') =\n        S \\<Turnstile>\\<^sub>P np(x) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (np(x) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P np(x) and y' or y\n 5. \\<And>x'1 x'2.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'1 =\n                                  S \\<Turnstile>\\<^sub>P x'1;\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x'1 or y) =\n     S \\<Turnstile>\\<^sub>P x'1 or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and y') =\n                 S \\<Turnstile>\\<^sub>P x'1 and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x'1 and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x'1 and y' or y;\n        \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'2 =\n                          S \\<Turnstile>\\<^sub>P x'2;\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x'2 or y) =\n                                   S \\<Turnstile>\\<^sub>P x'2 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                  S \\<Turnstile>\\<^sub>P y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                           S \\<Turnstile>\\<^sub>P y' or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x'2 and y') =\n         S \\<Turnstile>\\<^sub>P x'2 and y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'2 and y' or y) =\n                          S \\<Turnstile>\\<^sub>P x'2 and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and x'2) =\n                 S \\<Turnstile>\\<^sub>P x'1 and x'2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'1 and x'2 or y) =\n                          S \\<Turnstile>\\<^sub>P x'1 and x'2 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or ((x'1 and x'2) and y') =\n        S \\<Turnstile>\\<^sub>P (x'1 and x'2) and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or ((x'1 and x'2) and y' or y) =\n                         S \\<Turnstile>\\<^sub>P (x'1 and x'2) and y' or y\n 6. \\<And>x'.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n                                  S \\<Turnstile>\\<^sub>P x';\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x' or y) =\n     S \\<Turnstile>\\<^sub>P x' or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n                 S \\<Turnstile>\\<^sub>P x' and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x' and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x' and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (X x') =\n                 S \\<Turnstile>\\<^sub>P X x';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (X x' or y) =\n                          S \\<Turnstile>\\<^sub>P X x' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (X x' and y') =\n        S \\<Turnstile>\\<^sub>P X x' and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (X x' and y' or y) =\n                         S \\<Turnstile>\\<^sub>P X x' and y' or y\n 7. \\<And>x'.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n                                  S \\<Turnstile>\\<^sub>P x';\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x' or y) =\n     S \\<Turnstile>\\<^sub>P x' or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n                 S \\<Turnstile>\\<^sub>P x' and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x' and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x' and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (G x') =\n                 S \\<Turnstile>\\<^sub>P G x';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (G x' or y) =\n                          S \\<Turnstile>\\<^sub>P G x' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (G x' and y') =\n        S \\<Turnstile>\\<^sub>P G x' and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (G x' and y' or y) =\n                         S \\<Turnstile>\\<^sub>P G x' and y' or y\n 8. \\<And>x'.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x' =\n                                  S \\<Turnstile>\\<^sub>P x';\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x' or y) =\n     S \\<Turnstile>\\<^sub>P x' or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x' and y') =\n                 S \\<Turnstile>\\<^sub>P x' and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x' and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x' and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (F x') =\n                 S \\<Turnstile>\\<^sub>P F x';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (F x' or y) =\n                          S \\<Turnstile>\\<^sub>P F x' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (F x' and y') =\n        S \\<Turnstile>\\<^sub>P F x' and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (F x' and y' or y) =\n                         S \\<Turnstile>\\<^sub>P F x' and y' or y\n 9. \\<And>x'1 x'2.\n       \\<lbrakk>\\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'1 =\n                                  S \\<Turnstile>\\<^sub>P x'1;\n                          S \\<Turnstile>\\<^sub>P remove_and_or y =\n                          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n     remove_and_or (x'1 or y) =\n     S \\<Turnstile>\\<^sub>P x'1 or y;\n                 \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                          S \\<Turnstile>\\<^sub>P y';\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (y' or y) =\n                                   S \\<Turnstile>\\<^sub>P y' or y;\n                 S \\<Turnstile>\\<^sub>P remove_and_or (x'1 and y') =\n                 S \\<Turnstile>\\<^sub>P x'1 and y';\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x'1 and y' or y) =\n                                  S \\<Turnstile>\\<^sub>P x'1 and y' or y;\n        \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x'2 =\n                          S \\<Turnstile>\\<^sub>P x'2;\n                  S \\<Turnstile>\\<^sub>P remove_and_or y =\n                  S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                 \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                   remove_and_or (x'2 or y) =\n                                   S \\<Turnstile>\\<^sub>P x'2 or y;\n         \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                  S \\<Turnstile>\\<^sub>P y';\n          S \\<Turnstile>\\<^sub>P remove_and_or y =\n          S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n         \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                           S \\<Turnstile>\\<^sub>P y' or y;\n         S \\<Turnstile>\\<^sub>P remove_and_or (x'2 and y') =\n         S \\<Turnstile>\\<^sub>P x'2 and y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'2 and y' or y) =\n                          S \\<Turnstile>\\<^sub>P x'2 and y' or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (x'1 U x'2) =\n                 S \\<Turnstile>\\<^sub>P x'1 U x'2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          remove_and_or (x'1 U x'2 or y) =\n                          S \\<Turnstile>\\<^sub>P x'1 U x'2 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or y' =\n                 S \\<Turnstile>\\<^sub>P y';\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (y' or y) =\n                          S \\<Turnstile>\\<^sub>P y' or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (x'1 U x'2 and y') =\n        S \\<Turnstile>\\<^sub>P x'1 U x'2 and y';\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (x'1 U x'2 and y' or y) =\n                         S \\<Turnstile>\\<^sub>P x'1 U x'2 and y' or y", "qed auto"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P remove_and_or (x' and y' or y) =\n  S \\<Turnstile>\\<^sub>P x' and y' or y\n\ngoal (9 subgoals):\n 1. \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or true =\n             S \\<Turnstile>\\<^sub>P true;\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (true or y) =\n                      S \\<Turnstile>\\<^sub>P true or y\n 2. \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or false =\n             S \\<Turnstile>\\<^sub>P false;\n     S \\<Turnstile>\\<^sub>P remove_and_or y =\n     S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (false or y) =\n                      S \\<Turnstile>\\<^sub>P false or y\n 3. \\<And>x.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or p(x) =\n                S \\<Turnstile>\\<^sub>P p(x);\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (p(x) or y) =\n                         S \\<Turnstile>\\<^sub>P p(x) or y\n 4. \\<And>x.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or (np(x)) =\n                S \\<Turnstile>\\<^sub>P np(x);\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (np(x) or y) =\n                         S \\<Turnstile>\\<^sub>P np(x) or y\n 5. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                         S \\<Turnstile>\\<^sub>P x1;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x1 or y) =\n                                  S \\<Turnstile>\\<^sub>P x1 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n                 S \\<Turnstile>\\<^sub>P x2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x2 or y) =\n                          S \\<Turnstile>\\<^sub>P x2 or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (x1 or x2) =\n        S \\<Turnstile>\\<^sub>P x1 or x2;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or ((x1 or x2) or y) =\n                         S \\<Turnstile>\\<^sub>P (x1 or x2) or y\n 6. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x =\n                         S \\<Turnstile>\\<^sub>P x;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x or y) =\n                                  S \\<Turnstile>\\<^sub>P x or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (X x) =\n        S \\<Turnstile>\\<^sub>P X x;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (X x or y) =\n                         S \\<Turnstile>\\<^sub>P X x or y\n 7. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x =\n                         S \\<Turnstile>\\<^sub>P x;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x or y) =\n                                  S \\<Turnstile>\\<^sub>P x or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (G x) =\n        S \\<Turnstile>\\<^sub>P G x;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (G x or y) =\n                         S \\<Turnstile>\\<^sub>P G x or y\n 8. \\<And>x.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x =\n                         S \\<Turnstile>\\<^sub>P x;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x or y) =\n                                  S \\<Turnstile>\\<^sub>P x or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (F x) =\n        S \\<Turnstile>\\<^sub>P F x;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (F x or y) =\n                         S \\<Turnstile>\\<^sub>P F x or y\n 9. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                         S \\<Turnstile>\\<^sub>P x1;\n                 S \\<Turnstile>\\<^sub>P remove_and_or y =\n                 S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n                \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                                  remove_and_or (x1 or y) =\n                                  S \\<Turnstile>\\<^sub>P x1 or y;\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n                 S \\<Turnstile>\\<^sub>P x2;\n         S \\<Turnstile>\\<^sub>P remove_and_or y =\n         S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x2 or y) =\n                          S \\<Turnstile>\\<^sub>P x2 or y;\n        S \\<Turnstile>\\<^sub>P remove_and_or (x1 U x2) =\n        S \\<Turnstile>\\<^sub>P x1 U x2;\n        S \\<Turnstile>\\<^sub>P remove_and_or y =\n        S \\<Turnstile>\\<^sub>P y\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         remove_and_or (x1 U x2 or y) =\n                         S \\<Turnstile>\\<^sub>P x1 U x2 or y", "qed auto"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P remove_and_or (x or y) =\n  S \\<Turnstile>\\<^sub>P x or y\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P remove_and_or true = S \\<Turnstile>\\<^sub>P true\n 2. S \\<Turnstile>\\<^sub>P remove_and_or false =\n    S \\<Turnstile>\\<^sub>P false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or p(x) =\n       S \\<Turnstile>\\<^sub>P p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or (np(x)) =\n       S \\<Turnstile>\\<^sub>P np(x)\n 5. \\<And>x1 x2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                S \\<Turnstile>\\<^sub>P x1;\n        S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n        S \\<Turnstile>\\<^sub>P x2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x1 and x2) =\n                         S \\<Turnstile>\\<^sub>P x1 and x2\n 6. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or x =\n       S \\<Turnstile>\\<^sub>P x \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P remove_and_or (X x) =\n       S \\<Turnstile>\\<^sub>P X x\n 7. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or x =\n       S \\<Turnstile>\\<^sub>P x \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P remove_and_or (G x) =\n       S \\<Turnstile>\\<^sub>P G x\n 8. \\<And>x.\n       S \\<Turnstile>\\<^sub>P remove_and_or x =\n       S \\<Turnstile>\\<^sub>P x \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P remove_and_or (F x) =\n       S \\<Turnstile>\\<^sub>P F x\n 9. \\<And>x1 x2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P remove_and_or x1 =\n                S \\<Turnstile>\\<^sub>P x1;\n        S \\<Turnstile>\\<^sub>P remove_and_or x2 =\n        S \\<Turnstile>\\<^sub>P x2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P remove_and_or (x1 U x2) =\n                         S \\<Turnstile>\\<^sub>P x1 U x2", "qed auto"], ["", "subsection \\<open>Optimized Equations\\<close>"], ["", "fun af_letter_simp\nwhere\n  \"af_letter_simp true \\<nu> = true\"\n| \"af_letter_simp false \\<nu> = false\"\n| \"af_letter_simp p(a) \\<nu> = (if a \\<in> \\<nu> then true else false)\"\n| \"af_letter_simp (np(a)) \\<nu>  = (if a \\<notin> \\<nu> then true else false)\"\n| \"af_letter_simp (\\<phi> and \\<psi>) \\<nu> = (case \\<phi> of\n      true \\<Rightarrow> af_letter_simp \\<psi> \\<nu>\n    | false \\<Rightarrow> false\n    | p(a) \\<Rightarrow> if a \\<in> \\<nu> then af_letter_simp \\<psi> \\<nu> else false\n    | np(a) \\<Rightarrow> if a \\<notin> \\<nu> then af_letter_simp \\<psi> \\<nu> else false\n    | G \\<phi>' \\<Rightarrow>  \n      (let \n        \\<phi>'' = af_letter_simp \\<phi>' \\<nu>; \n        \\<psi>'' = af_letter_simp \\<psi> \\<nu> \n       in\n        (if \\<phi>'' = \\<psi>'' then mk_and' (G \\<phi>') \\<phi>'' else mk_and id (mk_and' (G \\<phi>') \\<phi>'') \\<psi>''))\n    | _ \\<Rightarrow> mk_and id (af_letter_simp \\<phi> \\<nu>) (af_letter_simp \\<psi> \\<nu>))\"\n| \"af_letter_simp (\\<phi> or \\<psi>) \\<nu> = (case \\<phi> of\n      true \\<Rightarrow> true\n    | false \\<Rightarrow> af_letter_simp \\<psi> \\<nu>\n    | p(a) \\<Rightarrow> if a \\<in> \\<nu> then true else af_letter_simp \\<psi> \\<nu>\n    | np(a) \\<Rightarrow> if a \\<notin> \\<nu> then true else af_letter_simp \\<psi> \\<nu>\n    | F \\<phi>' \\<Rightarrow>  \n      (let \n        \\<phi>'' = af_letter_simp \\<phi>' \\<nu>; \n        \\<psi>'' = af_letter_simp \\<psi> \\<nu> \n       in\n        (if \\<phi>'' = \\<psi>'' then mk_or' (F \\<phi>') \\<phi>'' else mk_or id (mk_or' (F \\<phi>') \\<phi>'') \\<psi>''))\n    | _ \\<Rightarrow> mk_or id (af_letter_simp \\<phi> \\<nu>) (af_letter_simp \\<psi> \\<nu>))\"\n| \"af_letter_simp (X \\<phi>) \\<nu> = \\<phi>\"\n| \"af_letter_simp (G \\<phi>) \\<nu> = mk_and' (G \\<phi>) (af_letter_simp \\<phi> \\<nu>)\"\n| \"af_letter_simp (F \\<phi>) \\<nu> = mk_or' (F \\<phi>) (af_letter_simp \\<phi> \\<nu>)\"\n| \"af_letter_simp (\\<phi> U \\<psi>) \\<nu> = mk_or' (mk_and' (\\<phi> U \\<psi>) (af_letter_simp \\<phi> \\<nu>)) (af_letter_simp \\<psi> \\<nu>)\""], ["", "lemma af_letter_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu>", "proof (induction \\<phi>)"], ["proof (state)\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          af_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          af_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLAnd \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_letter \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp \\<psi> \\<nu>\n\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          af_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          af_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_letter \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_letter (\\<phi> and \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp (\\<phi> and \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: Let_def mk_and_correct mk_and'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_letter (\\<phi> and \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp (\\<phi> and \\<psi>) \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLOr \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_letter \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp \\<psi> \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_letter \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_letter (\\<phi> or \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp (\\<phi> or \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: Let_def mk_or_correct mk_or'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_letter (\\<phi> or \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_simp (\\<phi> or \\<psi>) \\<nu>\n\ngoal (8 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (X \\<phi>) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (G \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_simp (F \\<phi>) \\<nu>\n 8. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "qed (simp_all add: mk_and_correct mk_and'_correct mk_or_correct mk_or'_correct)"], ["", "fun af_G_letter_simp\nwhere\n  \"af_G_letter_simp true \\<nu> = true\"\n| \"af_G_letter_simp false \\<nu> = false\"\n| \"af_G_letter_simp p(a) \\<nu> = (if a \\<in> \\<nu> then true else false)\"\n| \"af_G_letter_simp (np(a)) \\<nu>  = (if a \\<notin> \\<nu> then true else false)\"\n| \"af_G_letter_simp (\\<phi> and \\<psi>) \\<nu> = (case \\<phi> of\n      true \\<Rightarrow> af_G_letter_simp \\<psi> \\<nu>\n    | false \\<Rightarrow> false\n    | p(a) \\<Rightarrow> if a \\<in> \\<nu> then af_G_letter_simp \\<psi> \\<nu> else false\n    | np(a) \\<Rightarrow> if a \\<notin> \\<nu> then af_G_letter_simp \\<psi> \\<nu> else false\n    | _ \\<Rightarrow> mk_and id (af_G_letter_simp \\<phi> \\<nu>) (af_G_letter_simp \\<psi> \\<nu>))\"\n| \"af_G_letter_simp (\\<phi> or \\<psi>) \\<nu> = (case \\<phi> of\n      true \\<Rightarrow> true\n    | false \\<Rightarrow> af_G_letter_simp \\<psi> \\<nu>\n    | p(a) \\<Rightarrow> if a \\<in> \\<nu> then true else af_G_letter_simp \\<psi> \\<nu>\n    | np(a) \\<Rightarrow> if a \\<notin> \\<nu> then true else af_G_letter_simp \\<psi> \\<nu>\n    | F \\<phi>' \\<Rightarrow>  \n      (let \n        \\<phi>'' = af_G_letter_simp \\<phi>' \\<nu>; \n        \\<psi>'' = af_G_letter_simp \\<psi> \\<nu> \n       in\n        (if \\<phi>'' = \\<psi>'' then mk_or' (F \\<phi>') \\<phi>'' else mk_or id (mk_or' (F \\<phi>') \\<phi>'') \\<psi>''))\n    | _ \\<Rightarrow> mk_or id (af_G_letter_simp \\<phi> \\<nu>) (af_G_letter_simp \\<psi> \\<nu>))\"\n| \"af_G_letter_simp (X \\<phi>) \\<nu> = \\<phi>\"\n| \"af_G_letter_simp (G \\<phi>) \\<nu> = G \\<phi>\"\n| \"af_G_letter_simp (F \\<phi>) \\<nu> = mk_or' (F \\<phi>) (af_G_letter_simp \\<phi> \\<nu>)\"\n| \"af_G_letter_simp (\\<phi> U \\<psi>) \\<nu> = mk_or' (mk_and' (\\<phi> U \\<psi>) (af_G_letter_simp \\<phi> \\<nu>)) (af_G_letter_simp \\<psi> \\<nu>)\""], ["", "lemma af_G_letter_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi> \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi> \\<nu>", "proof (induction \\<phi>)"], ["proof (state)\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          af_G_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          af_G_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLAnd \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_G_letter \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<psi> \\<nu>\n\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          af_G_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          af_G_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_G_letter \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter (\\<phi> and \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp (\\<phi> and \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: mk_and_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_G_letter (\\<phi> and \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp (\\<phi> and \\<psi>) \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLOr \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_G_letter \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<psi> \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_G_letter \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter (\\<phi> or \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp (\\<phi> or \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: Let_def mk_or_correct mk_or'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_G_letter (\\<phi> or \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_simp (\\<phi> or \\<psi>) \\<nu>\n\ngoal (8 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (X \\<phi>) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (G \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_simp (F \\<phi>) \\<nu>\n 8. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_simp (\\<phi>1 U \\<phi>2) \\<nu>", "qed (simp_all add: mk_and_correct mk_and'_correct mk_or_correct mk_or'_correct)"], ["", "fun step_simp\nwhere\n  \"step_simp p(a) \\<nu> = (if a \\<in> \\<nu> then true else false)\"\n| \"step_simp (np(a)) \\<nu>  = (if a \\<notin> \\<nu> then true else false)\"\n| \"step_simp (\\<phi> and \\<psi>) \\<nu> = (mk_and id (step_simp \\<phi> \\<nu>) (step_simp \\<psi> \\<nu>))\"\n| \"step_simp (\\<phi> or \\<psi>) \\<nu> = (mk_or id (step_simp \\<phi> \\<nu>) (step_simp \\<psi> \\<nu>))\"\n| \"step_simp (X \\<phi>) \\<nu> = remove_constants\\<^sub>P \\<phi>\"\n| \"step_simp \\<phi> \\<nu> = \\<phi>\""], ["", "lemma step_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu>", "proof (induction \\<phi>)"], ["proof (state)\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P step true \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P step false \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          step (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          step_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLAnd \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P step \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp \\<psi> \\<nu>\n\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P step true \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P step false \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          step (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          step_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P step \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P step (\\<phi> and \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp (\\<phi> and \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: Let_def mk_and_correct mk_and'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P step (\\<phi> and \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp (\\<phi> and \\<psi>) \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P step true \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P step false \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 U \\<phi>2) \\<nu>", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P step true \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P step false \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLOr \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P step \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp \\<psi> \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P step true \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P step false \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P step \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P step (\\<phi> or \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp (\\<phi> or \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: Let_def mk_or_correct mk_or'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P step (\\<phi> or \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P step_simp (\\<phi> or \\<psi>) \\<nu>\n\ngoal (8 subgoals):\n 1. S \\<Turnstile>\\<^sub>P step true \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P step false \\<nu> =\n    S \\<Turnstile>\\<^sub>P step_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P step (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (X \\<phi>) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (G \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P step (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P step_simp (F \\<phi>) \\<nu>\n 8. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P step \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P step_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P step \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P step_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         step (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         step_simp (\\<phi>1 U \\<phi>2) \\<nu>", "qed (simp_all add: mk_and_correct mk_and'_correct mk_or_correct mk_or'_correct remove_constants_correct[symmetric])"], ["", "fun Unf_simp\nwhere\n  \"Unf_simp (\\<phi> and \\<psi>) = (case \\<phi> of\n      true \\<Rightarrow> Unf_simp \\<psi>\n    | false \\<Rightarrow> false\n    | G \\<phi>' \\<Rightarrow>  \n      (let \n        \\<phi>'' = Unf_simp \\<phi>'; \\<psi>'' = Unf_simp \\<psi>\n       in\n        (if \\<phi>'' = \\<psi>'' then mk_and' (G \\<phi>') \\<phi>'' else mk_and id (mk_and' (G \\<phi>') \\<phi>'') \\<psi>''))\n    | _ \\<Rightarrow> mk_and id (Unf_simp \\<phi>) (Unf_simp \\<psi>))\"\n| \"Unf_simp (\\<phi> or \\<psi>) = (case \\<phi> of\n      true \\<Rightarrow> true\n    | false \\<Rightarrow> Unf_simp \\<psi>\n    | F \\<phi>' \\<Rightarrow>  \n      (let \n        \\<phi>'' = Unf_simp \\<phi>'; \\<psi>'' = Unf_simp \\<psi>\n       in\n        (if \\<phi>'' = \\<psi>'' then mk_or' (F \\<phi>') \\<phi>'' else mk_or id (mk_or' (F \\<phi>') \\<phi>'') \\<psi>''))\n    | _ \\<Rightarrow> mk_or id (Unf_simp \\<phi>) (Unf_simp \\<psi>))\"\n| \"Unf_simp (G \\<phi>) = mk_and' (G \\<phi>) (Unf_simp \\<phi>)\"\n| \"Unf_simp (F \\<phi>) = mk_or' (F \\<phi>) (Unf_simp \\<phi>)\"\n| \"Unf_simp (\\<phi> U \\<psi>) = mk_or' (mk_and' (\\<phi> U \\<psi>) (Unf_simp \\<phi>)) (Unf_simp \\<psi>)\"\n| \"Unf_simp \\<phi> = \\<phi>\""], ["", "lemma Unf_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P Unf \\<phi> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n    S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>", "proof (induction \\<phi>)"], ["proof (state)\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf true = S \\<Turnstile>\\<^sub>P Unf_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf false = S \\<Turnstile>\\<^sub>P Unf_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf p(x) =\n       S \\<Turnstile>\\<^sub>P Unf_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 and \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf_simp (\\<phi>1 and \\<phi>2)\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf_simp (\\<phi>1 or \\<phi>2)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (X \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (G \\<phi>)\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (F \\<phi>)\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                 S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n         S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n         S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 U \\<phi>2) =\n                          S \\<Turnstile>\\<^sub>P\n                          Unf_simp (\\<phi>1 U \\<phi>2)", "case (LTLAnd \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Unf \\<phi> = S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>\n  S \\<Turnstile>\\<^sub>P Unf \\<psi> = S \\<Turnstile>\\<^sub>P Unf_simp \\<psi>\n\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf true = S \\<Turnstile>\\<^sub>P Unf_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf false = S \\<Turnstile>\\<^sub>P Unf_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf p(x) =\n       S \\<Turnstile>\\<^sub>P Unf_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 and \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf_simp (\\<phi>1 and \\<phi>2)\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf_simp (\\<phi>1 or \\<phi>2)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (X \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (G \\<phi>)\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (F \\<phi>)\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                 S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n         S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n         S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 U \\<phi>2) =\n                          S \\<Turnstile>\\<^sub>P\n                          Unf_simp (\\<phi>1 U \\<phi>2)", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Unf \\<phi> = S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>\n  S \\<Turnstile>\\<^sub>P Unf \\<psi> = S \\<Turnstile>\\<^sub>P Unf_simp \\<psi>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Unf (\\<phi> and \\<psi>) =\n    S \\<Turnstile>\\<^sub>P Unf_simp (\\<phi> and \\<psi>)", "by (cases \\<phi>) (auto simp add: Let_def mk_and_correct mk_and'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Unf (\\<phi> and \\<psi>) =\n  S \\<Turnstile>\\<^sub>P Unf_simp (\\<phi> and \\<psi>)\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf true = S \\<Turnstile>\\<^sub>P Unf_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf false = S \\<Turnstile>\\<^sub>P Unf_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf p(x) =\n       S \\<Turnstile>\\<^sub>P Unf_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf_simp (\\<phi>1 or \\<phi>2)\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (X \\<phi>)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (G \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (F \\<phi>)\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 U \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P Unf_simp (\\<phi>1 U \\<phi>2)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf true = S \\<Turnstile>\\<^sub>P Unf_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf false = S \\<Turnstile>\\<^sub>P Unf_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf p(x) =\n       S \\<Turnstile>\\<^sub>P Unf_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf_simp (\\<phi>1 or \\<phi>2)\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (X \\<phi>)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (G \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (F \\<phi>)\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 U \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P Unf_simp (\\<phi>1 U \\<phi>2)", "case (LTLOr \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Unf \\<phi> = S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>\n  S \\<Turnstile>\\<^sub>P Unf \\<psi> = S \\<Turnstile>\\<^sub>P Unf_simp \\<psi>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf true = S \\<Turnstile>\\<^sub>P Unf_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf false = S \\<Turnstile>\\<^sub>P Unf_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf p(x) =\n       S \\<Turnstile>\\<^sub>P Unf_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf_simp (\\<phi>1 or \\<phi>2)\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (X \\<phi>)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (G \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (F \\<phi>)\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 U \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P Unf_simp (\\<phi>1 U \\<phi>2)", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Unf \\<phi> = S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>\n  S \\<Turnstile>\\<^sub>P Unf \\<psi> = S \\<Turnstile>\\<^sub>P Unf_simp \\<psi>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Unf (\\<phi> or \\<psi>) =\n    S \\<Turnstile>\\<^sub>P Unf_simp (\\<phi> or \\<psi>)", "by (cases \\<phi>) (auto simp add: Let_def mk_or_correct mk_or'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Unf (\\<phi> or \\<psi>) =\n  S \\<Turnstile>\\<^sub>P Unf_simp (\\<phi> or \\<psi>)\n\ngoal (8 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf true = S \\<Turnstile>\\<^sub>P Unf_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf false = S \\<Turnstile>\\<^sub>P Unf_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf p(x) =\n       S \\<Turnstile>\\<^sub>P Unf_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (np(x))\n 5. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (X \\<phi>)\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (G \\<phi>)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf_simp (F \\<phi>)\n 8. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Unf (\\<phi>1 U \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P Unf_simp (\\<phi>1 U \\<phi>2)", "qed (simp_all add: mk_and_correct mk_and'_correct mk_or_correct mk_or'_correct)"], ["", "fun Unf\\<^sub>G_simp\nwhere\n  \"Unf\\<^sub>G_simp (\\<phi> and \\<psi>) = mk_and id (Unf\\<^sub>G_simp \\<phi>) (Unf\\<^sub>G_simp \\<psi>)\"\n| \"Unf\\<^sub>G_simp (\\<phi> or \\<psi>) = (case \\<phi> of\n      true \\<Rightarrow> true\n    | false \\<Rightarrow> Unf\\<^sub>G_simp \\<psi>\n    | F \\<phi>' \\<Rightarrow>  \n      (let \n        \\<phi>'' = Unf\\<^sub>G_simp \\<phi>'; \\<psi>'' = Unf\\<^sub>G_simp \\<psi>\n       in\n        (if \\<phi>'' = \\<psi>'' then mk_or' (F \\<phi>') \\<phi>'' else mk_or id (mk_or' (F \\<phi>') \\<phi>'') \\<psi>''))\n    | _ \\<Rightarrow> mk_or id (Unf\\<^sub>G_simp \\<phi>) (Unf\\<^sub>G_simp \\<psi>))\"\n| \"Unf\\<^sub>G_simp (F \\<phi>) = mk_or' (F \\<phi>) (Unf\\<^sub>G_simp \\<phi>)\"\n| \"Unf\\<^sub>G_simp (\\<phi> U \\<psi>) = mk_or' (mk_and' (\\<phi> U \\<psi>) (Unf\\<^sub>G_simp \\<phi>)) (Unf\\<^sub>G_simp \\<psi>)\"\n| \"Unf\\<^sub>G_simp \\<phi> = \\<phi>\""], ["", "lemma Unf\\<^sub>G_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>", "proof (induction \\<phi>)"], ["proof (state)\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G true =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G false =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G p(x) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 and \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 and \\<phi>2)\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 or \\<phi>2)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (X \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (G \\<phi>)\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (F \\<phi>)\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                 S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n         S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n         S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          Unf\\<^sub>G (\\<phi>1 U \\<phi>2) =\n                          S \\<Turnstile>\\<^sub>P\n                          Unf\\<^sub>G_simp (\\<phi>1 U \\<phi>2)", "case (LTLAnd \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<psi> =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<psi>\n\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G true =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G false =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G p(x) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 and \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 and \\<phi>2)\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 or \\<phi>2)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (X \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (G \\<phi>)\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (F \\<phi>)\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                 S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n         S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n         S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          Unf\\<^sub>G (\\<phi>1 U \\<phi>2) =\n                          S \\<Turnstile>\\<^sub>P\n                          Unf\\<^sub>G_simp (\\<phi>1 U \\<phi>2)", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<psi> =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<psi>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (\\<phi> and \\<psi>) =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (\\<phi> and \\<psi>)", "by (cases \\<phi>) (auto simp add: Let_def mk_and_correct mk_and'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (\\<phi> and \\<psi>) =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (\\<phi> and \\<psi>)\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G true =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G false =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G p(x) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 or \\<phi>2)\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (X \\<phi>)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (G \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (F \\<phi>)\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 U \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 U \\<phi>2)", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G true =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G false =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G p(x) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 or \\<phi>2)\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (X \\<phi>)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (G \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (F \\<phi>)\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 U \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 U \\<phi>2)", "case (LTLOr \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<psi> =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<psi>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G true =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G false =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G p(x) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (np(x))\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 or \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 or \\<phi>2)\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (X \\<phi>)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (G \\<phi>)\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (F \\<phi>)\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 U \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 U \\<phi>2)", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<psi> =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<psi>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (\\<phi> or \\<psi>) =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (\\<phi> or \\<psi>)", "by (cases \\<phi>) (auto simp add: Let_def mk_or_correct mk_or'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (\\<phi> or \\<psi>) =\n  S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (\\<phi> or \\<psi>)\n\ngoal (8 subgoals):\n 1. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G true =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp true\n 2. S \\<Turnstile>\\<^sub>P Unf\\<^sub>G false =\n    S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp false\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G p(x) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp p(x)\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (np(x)) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (np(x))\n 5. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (X \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (X \\<phi>)\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (G \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (G \\<phi>)\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G (F \\<phi>) =\n       S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp (F \\<phi>)\n 8. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>1 =\n                S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>1;\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi>2 =\n        S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp \\<phi>2\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G (\\<phi>1 U \\<phi>2) =\n                         S \\<Turnstile>\\<^sub>P\n                         Unf\\<^sub>G_simp (\\<phi>1 U \\<phi>2)", "qed (simp_all add: mk_and_correct mk_and'_correct mk_or_correct mk_or'_correct)"], ["", "fun af_letter_opt_simp\nwhere\n  \"af_letter_opt_simp true \\<nu> = true\"\n| \"af_letter_opt_simp false \\<nu> = false\"\n| \"af_letter_opt_simp p(a) \\<nu> = (if a \\<in> \\<nu> then true else false)\"\n| \"af_letter_opt_simp (np(a)) \\<nu>  = (if a \\<notin> \\<nu> then true else false)\"\n| \"af_letter_opt_simp (\\<phi> and \\<psi>) \\<nu> = (case \\<phi> of\n      true \\<Rightarrow> af_letter_opt_simp \\<psi> \\<nu>\n    | false \\<Rightarrow> false\n    | p(a) \\<Rightarrow> if a \\<in> \\<nu> then af_letter_opt_simp \\<psi> \\<nu> else false\n    | np(a) \\<Rightarrow> if a \\<notin> \\<nu> then af_letter_opt_simp \\<psi> \\<nu> else false\n    | G \\<phi>' \\<Rightarrow>  \n      (let \n        \\<phi>'' = Unf_simp \\<phi>'; \n        \\<psi>'' = af_letter_opt_simp \\<psi> \\<nu> \n       in\n        (if \\<phi>'' = \\<psi>'' then mk_and' (G \\<phi>') \\<phi>'' else mk_and id (mk_and' (G \\<phi>') \\<phi>'') \\<psi>''))\n    | _ \\<Rightarrow> mk_and id (af_letter_opt_simp \\<phi> \\<nu>) (af_letter_opt_simp \\<psi> \\<nu>))\"\n| \"af_letter_opt_simp (\\<phi> or \\<psi>) \\<nu> = (case \\<phi> of\n      true \\<Rightarrow> true\n    | false \\<Rightarrow> af_letter_opt_simp \\<psi> \\<nu>\n    | p(a) \\<Rightarrow> if a \\<in> \\<nu> then true else af_letter_opt_simp \\<psi> \\<nu>\n    | np(a) \\<Rightarrow> if a \\<notin> \\<nu> then true else af_letter_opt_simp \\<psi> \\<nu>\n    | F \\<phi>' \\<Rightarrow>  \n      (let \n        \\<phi>'' = Unf_simp \\<phi>'; \n        \\<psi>'' = af_letter_opt_simp \\<psi> \\<nu> \n       in\n        (if \\<phi>'' = \\<psi>'' then mk_or' (F \\<phi>') \\<phi>'' else mk_or id (mk_or' (F \\<phi>') \\<phi>'') \\<psi>''))\n    | _ \\<Rightarrow> mk_or id (af_letter_opt_simp \\<phi> \\<nu>) (af_letter_opt_simp \\<psi> \\<nu>))\"\n| \"af_letter_opt_simp (X \\<phi>) \\<nu> = Unf_simp \\<phi>\"\n| \"af_letter_opt_simp (G \\<phi>) \\<nu> = mk_and' (G \\<phi>) (Unf_simp \\<phi>)\"\n| \"af_letter_opt_simp (F \\<phi>) \\<nu> = mk_or' (F \\<phi>) (Unf_simp \\<phi>)\"\n| \"af_letter_opt_simp (\\<phi> U \\<psi>) \\<nu> = mk_or' (mk_and' (\\<phi> U \\<psi>) (Unf_simp \\<phi>)) (Unf_simp \\<psi>)\""], ["", "lemma af_letter_opt_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi> \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi> \\<nu>", "proof (induction \\<phi>)"], ["proof (state)\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          af_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          af_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLAnd \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_letter_opt \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<psi> \\<nu>\n\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          af_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          af_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_letter_opt \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_letter_opt (\\<phi> and \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp (\\<phi> and \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: Let_def mk_and_correct mk_and'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_letter_opt (\\<phi> and \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp (\\<phi> and \\<psi>) \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLOr \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_letter_opt \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<psi> \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_letter_opt \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_letter_opt (\\<phi> or \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp (\\<phi> or \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: Let_def mk_or_correct mk_or'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_letter_opt (\\<phi> or \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_letter_opt_simp (\\<phi> or \\<psi>) \\<nu>\n\ngoal (8 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (X \\<phi>) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (G \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_letter_opt_simp (F \\<phi>) \\<nu>\n 8. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "qed (simp_all add: mk_and_correct mk_and'_correct mk_or_correct mk_or'_correct Unf_simp_correct)"], ["", "fun af_G_letter_opt_simp\nwhere\n  \"af_G_letter_opt_simp true \\<nu> = true\"\n| \"af_G_letter_opt_simp false \\<nu> = false\"\n| \"af_G_letter_opt_simp p(a) \\<nu> = (if a \\<in> \\<nu> then true else false)\"\n| \"af_G_letter_opt_simp (np(a)) \\<nu>  = (if a \\<notin> \\<nu> then true else false)\"\n| \"af_G_letter_opt_simp (\\<phi> and \\<psi>) \\<nu> = (case \\<phi> of\n      true \\<Rightarrow> af_G_letter_opt_simp \\<psi> \\<nu>\n    | false \\<Rightarrow> false\n    | p(a) \\<Rightarrow> if a \\<in> \\<nu> then af_G_letter_opt_simp \\<psi> \\<nu> else false\n    | np(a) \\<Rightarrow> if a \\<notin> \\<nu> then af_G_letter_opt_simp \\<psi> \\<nu> else false\n    | _ \\<Rightarrow> mk_and id (af_G_letter_opt_simp \\<phi> \\<nu>) (af_G_letter_opt_simp \\<psi> \\<nu>))\"\n| \"af_G_letter_opt_simp (\\<phi> or \\<psi>) \\<nu> = (case \\<phi> of\n      true \\<Rightarrow> true\n    | false \\<Rightarrow> af_G_letter_opt_simp \\<psi> \\<nu>\n    | p(a) \\<Rightarrow> if a \\<in> \\<nu> then true else af_G_letter_opt_simp \\<psi> \\<nu>\n    | np(a) \\<Rightarrow> if a \\<notin> \\<nu> then true else af_G_letter_opt_simp \\<psi> \\<nu>\n    | F \\<phi>' \\<Rightarrow>  \n      (let \n        \\<phi>'' = Unf\\<^sub>G_simp \\<phi>'; \n        \\<psi>'' = af_G_letter_opt_simp \\<psi> \\<nu> \n       in\n        (if \\<phi>'' = \\<psi>'' then mk_or' (F \\<phi>') \\<phi>'' else mk_or id (mk_or' (F \\<phi>') \\<phi>'') \\<psi>''))\n    | _ \\<Rightarrow> mk_or id (af_G_letter_opt_simp \\<phi> \\<nu>) (af_G_letter_opt_simp \\<psi> \\<nu>))\"\n| \"af_G_letter_opt_simp (X \\<phi>) \\<nu> = Unf\\<^sub>G_simp \\<phi>\"\n| \"af_G_letter_opt_simp (G \\<phi>) \\<nu> = G \\<phi>\"\n| \"af_G_letter_opt_simp (F \\<phi>) \\<nu> = mk_or' (F \\<phi>) (Unf\\<^sub>G_simp \\<phi>)\"\n| \"af_G_letter_opt_simp (\\<phi> U \\<psi>) \\<nu> = mk_or' (mk_and' (\\<phi> U \\<psi>) (Unf\\<^sub>G_simp \\<phi>)) (Unf\\<^sub>G_simp \\<psi>)\""], ["", "lemma af_G_letter_opt_simp_correct:\n  \"S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> \\<longleftrightarrow> S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi> \\<nu>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi> \\<nu>", "proof (induction \\<phi>)"], ["proof (state)\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          af_G_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          af_G_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLAnd \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<psi> \\<nu>\n\ngoal (10 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 and \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 and \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (X \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (G \\<phi>) \\<nu>\n 9. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (F \\<phi>) \\<nu>\n 10. \\<And>\\<phi>1 \\<phi>2.\n        \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                 S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n         S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n         S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n        \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                          af_G_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                          S \\<Turnstile>\\<^sub>P\n                          af_G_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter_opt (\\<phi> and \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (\\<phi> and \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: Let_def mk_and_correct mk_and'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt (\\<phi> and \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (\\<phi> and \\<psi>) \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "case (LTLOr \\<phi> \\<psi>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<psi> \\<nu>\n\ngoal (9 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 or \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 or \\<phi>2) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (X \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (G \\<phi>) \\<nu>\n 8. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (F \\<phi>) \\<nu>\n 9. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi> \\<nu>\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<psi> \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<psi> \\<nu>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter_opt (\\<phi> or \\<psi>) \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (\\<phi> or \\<psi>) \\<nu>", "by (cases \\<phi>) (auto simp add: Let_def mk_or_correct mk_or'_correct)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt (\\<phi> or \\<psi>) \\<nu> =\n  S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (\\<phi> or \\<psi>) \\<nu>\n\ngoal (8 subgoals):\n 1. S \\<Turnstile>\\<^sub>P af_G_letter_opt true \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp true \\<nu>\n 2. S \\<Turnstile>\\<^sub>P af_G_letter_opt false \\<nu> =\n    S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp false \\<nu>\n 3. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt p(x) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp p(x) \\<nu>\n 4. \\<And>x.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (np(x)) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (np(x)) \\<nu>\n 5. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (X \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (X \\<phi>) \\<nu>\n 6. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (G \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (G \\<phi>) \\<nu>\n 7. \\<And>\\<phi>.\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       S \\<Turnstile>\\<^sub>P\n       af_G_letter_opt_simp \\<phi> \\<nu> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt (F \\<phi>) \\<nu> =\n       S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp (F \\<phi>) \\<nu>\n 8. \\<And>\\<phi>1 \\<phi>2.\n       \\<lbrakk>S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>1 \\<nu> =\n                S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>1 \\<nu>;\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi>2 \\<nu> =\n        S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp \\<phi>2 \\<nu>\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt (\\<phi>1 U \\<phi>2) \\<nu> =\n                         S \\<Turnstile>\\<^sub>P\n                         af_G_letter_opt_simp (\\<phi>1 U \\<phi>2) \\<nu>", "qed (simp_all add: mk_and_correct mk_and'_correct mk_or_correct mk_or'_correct Unf\\<^sub>G_simp_correct)"], ["", "subsection \\<open>Register Code Equations\\<close>"], ["", "lemma [code]: \n  \"\\<up>af (Abs \\<phi>) \\<nu> = Abs (remove_and_or (af_letter_simp \\<phi> \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>af (Abs \\<phi>) \\<nu> =\n    Abs (remove_and_or (af_letter_simp \\<phi> \\<nu>))", "unfolding af_abs.f_abs.abs_eq af_letter_abs_def ltl_prop_equiv_quotient.abs_eq_iff ltl_prop_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P remove_and_or (af_letter_simp \\<phi> \\<nu>)", "using af_letter_simp_correct remove_and_or_correct"], ["proof (prove)\nusing this:\n  ?S \\<Turnstile>\\<^sub>P af_letter ?\\<phi> ?\\<nu> =\n  ?S \\<Turnstile>\\<^sub>P af_letter_simp ?\\<phi> ?\\<nu>\n  ?S \\<Turnstile>\\<^sub>P remove_and_or ?x = ?S \\<Turnstile>\\<^sub>P ?x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P af_letter \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P remove_and_or (af_letter_simp \\<phi> \\<nu>)", "by blast"], ["", "lemma [code]:\n  \"\\<up>af\\<^sub>G (Abs \\<phi>) \\<nu> = Abs (remove_and_or (af_G_letter_simp \\<phi> \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>af\\<^sub>G (Abs \\<phi>) \\<nu> =\n    Abs (remove_and_or (af_G_letter_simp \\<phi> \\<nu>))", "unfolding af_G_abs.f_abs.abs_eq af_G_letter_abs_def ltl_prop_equiv_quotient.abs_eq_iff ltl_prop_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P\n       remove_and_or (af_G_letter_simp \\<phi> \\<nu>)", "using af_G_letter_simp_correct remove_and_or_correct"], ["proof (prove)\nusing this:\n  ?S \\<Turnstile>\\<^sub>P af_G_letter ?\\<phi> ?\\<nu> =\n  ?S \\<Turnstile>\\<^sub>P af_G_letter_simp ?\\<phi> ?\\<nu>\n  ?S \\<Turnstile>\\<^sub>P remove_and_or ?x = ?S \\<Turnstile>\\<^sub>P ?x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P af_G_letter \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P\n       remove_and_or (af_G_letter_simp \\<phi> \\<nu>)", "by blast"], ["", "lemma [code]: \n  \"\\<up>step (Abs \\<phi>) \\<nu> = Abs (step_simp \\<phi> \\<nu>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>step (Abs \\<phi>) \\<nu> = Abs (step_simp \\<phi> \\<nu>)", "unfolding step_abs.abs_eq ltl_prop_equiv_quotient.abs_eq_iff ltl_prop_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu>", "using step_simp_correct"], ["proof (prove)\nusing this:\n  ?S \\<Turnstile>\\<^sub>P step ?\\<phi> ?\\<nu> =\n  ?S \\<Turnstile>\\<^sub>P step_simp ?\\<phi> ?\\<nu>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P step \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P step_simp \\<phi> \\<nu>", "by blast"], ["", "lemma [code]: \n  \"\\<up>Unf (Abs \\<phi>) = Abs (remove_and_or (Unf_simp \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>Unf (Abs \\<phi>) = Abs (remove_and_or (Unf_simp \\<phi>))", "unfolding Unf_abs.abs_eq ltl_prop_equiv_quotient.abs_eq_iff ltl_prop_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       \\<A> \\<Turnstile>\\<^sub>P remove_and_or (Unf_simp \\<phi>)", "using Unf_simp_correct remove_and_or_correct"], ["proof (prove)\nusing this:\n  ?S \\<Turnstile>\\<^sub>P Unf ?\\<phi> =\n  ?S \\<Turnstile>\\<^sub>P Unf_simp ?\\<phi>\n  ?S \\<Turnstile>\\<^sub>P remove_and_or ?x = ?S \\<Turnstile>\\<^sub>P ?x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P Unf \\<phi> =\n       \\<A> \\<Turnstile>\\<^sub>P remove_and_or (Unf_simp \\<phi>)", "by blast"], ["", "lemma [code]: \n  \"\\<up>Unf\\<^sub>G (Abs \\<phi>) = Abs (remove_and_or (Unf\\<^sub>G_simp \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>Unf\\<^sub>G (Abs \\<phi>) =\n    Abs (remove_and_or (Unf\\<^sub>G_simp \\<phi>))", "unfolding Unf\\<^sub>G_abs.abs_eq ltl_prop_equiv_quotient.abs_eq_iff ltl_prop_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       \\<A> \\<Turnstile>\\<^sub>P remove_and_or (Unf\\<^sub>G_simp \\<phi>)", "using Unf\\<^sub>G_simp_correct remove_and_or_correct"], ["proof (prove)\nusing this:\n  ?S \\<Turnstile>\\<^sub>P Unf\\<^sub>G ?\\<phi> =\n  ?S \\<Turnstile>\\<^sub>P Unf\\<^sub>G_simp ?\\<phi>\n  ?S \\<Turnstile>\\<^sub>P remove_and_or ?x = ?S \\<Turnstile>\\<^sub>P ?x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P Unf\\<^sub>G \\<phi> =\n       \\<A> \\<Turnstile>\\<^sub>P remove_and_or (Unf\\<^sub>G_simp \\<phi>)", "by blast"], ["", "lemma [code]: \n  \"\\<up>af\\<^sub>\\<UU> (Abs \\<phi>) \\<nu> = Abs (remove_and_or (af_letter_opt_simp \\<phi> \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>af\\<^sub>\\<UU> (Abs \\<phi>) \\<nu> =\n    Abs (remove_and_or (af_letter_opt_simp \\<phi> \\<nu>))", "unfolding af_abs_opt.f_abs.abs_eq af_letter_abs_opt_def ltl_prop_equiv_quotient.abs_eq_iff ltl_prop_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P\n       remove_and_or (af_letter_opt_simp \\<phi> \\<nu>)", "using af_letter_opt_simp_correct remove_and_or_correct"], ["proof (prove)\nusing this:\n  ?S \\<Turnstile>\\<^sub>P af_letter_opt ?\\<phi> ?\\<nu> =\n  ?S \\<Turnstile>\\<^sub>P af_letter_opt_simp ?\\<phi> ?\\<nu>\n  ?S \\<Turnstile>\\<^sub>P remove_and_or ?x = ?S \\<Turnstile>\\<^sub>P ?x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P af_letter_opt \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P\n       remove_and_or (af_letter_opt_simp \\<phi> \\<nu>)", "by blast"], ["", "lemma [code]:\n  \"\\<up>af\\<^sub>G\\<^sub>\\<UU> (Abs \\<phi>) \\<nu> = Abs (remove_and_or (af_G_letter_opt_simp \\<phi> \\<nu>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>af\\<^sub>G\\<^sub>\\<UU> (Abs \\<phi>) \\<nu> =\n    Abs (remove_and_or (af_G_letter_opt_simp \\<phi> \\<nu>))", "unfolding af_G_abs_opt.f_abs.abs_eq af_G_letter_abs_opt_def ltl_prop_equiv_quotient.abs_eq_iff ltl_prop_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P\n       remove_and_or (af_G_letter_opt_simp \\<phi> \\<nu>)", "using af_G_letter_opt_simp_correct remove_and_or_correct"], ["proof (prove)\nusing this:\n  ?S \\<Turnstile>\\<^sub>P af_G_letter_opt ?\\<phi> ?\\<nu> =\n  ?S \\<Turnstile>\\<^sub>P af_G_letter_opt_simp ?\\<phi> ?\\<nu>\n  ?S \\<Turnstile>\\<^sub>P remove_and_or ?x = ?S \\<Turnstile>\\<^sub>P ?x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P af_G_letter_opt \\<phi> \\<nu> =\n       \\<A> \\<Turnstile>\\<^sub>P\n       remove_and_or (af_G_letter_opt_simp \\<phi> \\<nu>)", "by blast"], ["", "end"]]}