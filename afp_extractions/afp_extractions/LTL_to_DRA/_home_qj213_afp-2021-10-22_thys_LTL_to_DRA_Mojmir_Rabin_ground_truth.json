{"file_name": "/home/qj213/afp-2021-10-22/thys/LTL_to_DRA/Mojmir_Rabin.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LTL_to_DRA", "problem_names": ["lemma function_set_finite:\n  assumes \"finite R\"\n  assumes \"finite A\"\n  shows \"finite {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and> (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)}\" (is \"finite ?F\")", "lemma (in semi_mojmir) wellformed_\\<R>:\n  shows \"finite (reach \\<Sigma> step initial)\"", "lemma imp_and_not_imp_eq:\n  assumes \"P \\<Longrightarrow> Q\"\n  assumes \"\\<not>P \\<Longrightarrow> \\<not>Q\"\n  shows \"P = Q\"", "lemma finite_limit_intersection:\n  assumes \"finite (range f)\"\n  assumes \"\\<And>x::nat. x \\<in> A \\<longleftrightarrow> (f x) \\<in> B\"\n  shows \"finite A \\<longleftrightarrow> limit f \\<inter> B = {}\"", "lemma finite_range_run:\n  defines \"r \\<equiv> run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w\"\n  shows \"finite (range r)\"", "theorem mojmir_accept_iff_rabin_accept_rank:\n  shows \"(finite (fail) \\<and> finite (merge i) \\<and> infinite (succeed  i))\n    \\<longleftrightarrow> accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (Acc\\<^sub>\\<R> i) w\"\n  (is \"?lhs = ?rhs\")", "theorem mojmir_accept_iff_rabin_accept:\n  \"accept \\<longleftrightarrow> accept\\<^sub>R \\<R> w\"", "theorem Mojmir_rabin_smallest_accepting_rank:\n  \"smallest_accepting_rank = smallest_accepting_rank\\<^sub>\\<R>\"", "lemma smallest_accepting_rank\\<^sub>\\<R>_properties:\n  \"smallest_accepting_rank\\<^sub>\\<R> = Some i \\<Longrightarrow> accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (Acc\\<^sub>\\<R> i) w\""], "translations": [["", "lemma function_set_finite:\n  assumes \"finite R\"\n  assumes \"finite A\"\n  shows \"finite {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and> (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)}\" (is \"finite ?F\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)}", "using assms(1)"], ["proof (prove)\nusing this:\n  finite R\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)}", "proof (induction R rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f. (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A)}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. finite\n     {f. (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A)}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "have \"{f. (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A) \\<and> (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c)} \\<subseteq> {\\<lambda>x. c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f. (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A) \\<and>\n        (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c)}\n    \\<subseteq> {\\<lambda>x. c}", "by auto"], ["proof (state)\nthis:\n  {f. (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A) \\<and>\n      (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c)}\n  \\<subseteq> {\\<lambda>x. c}\n\ngoal (2 subgoals):\n 1. finite\n     {f. (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A)}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "thus ?case"], ["proof (prove)\nusing this:\n  {f. (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A) \\<and>\n      (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c)}\n  \\<subseteq> {\\<lambda>x. c}\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A)}", "using finite_subset"], ["proof (prove)\nusing this:\n  {f. (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A) \\<and>\n      (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c)}\n  \\<subseteq> {\\<lambda>x. c}\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A)}", "by auto"], ["proof (state)\nthis:\n  finite\n   {f. (\\<forall>x. x \\<notin> {} \\<longrightarrow> f x = c) \\<and>\n       (\\<forall>x. x \\<in> {} \\<longrightarrow> f x \\<in> A)}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "case (insert r R)"], ["proof (state)\nthis:\n  finite R\n  r \\<notin> R\n  finite\n   {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n       (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "let ?F = \"{f. (\\<forall>x. x \\<notin> R \\<union> {r} \\<longrightarrow> f x = c) \\<and> (\\<forall>x. x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "let ?F' = \"{f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and> (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "have \"?F \\<subseteq> {f(r := a) | f a. f \\<in> ?F' \\<and> a \\<in> A}\" (is \"_ \\<subseteq> ?X\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {f. (\\<forall>x.\n            x \\<notin> R \\<union> {r} \\<longrightarrow> f x = c) \\<and>\n        (\\<forall>x. x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n    \\<subseteq> {f(r := a) |f a.\n                 f \\<in> {f. (\\<forall>x.\n                                 x \\<notin> R \\<longrightarrow>\n                                 f x = c) \\<and>\n                             (\\<forall>x.\n                                 x \\<in> R \\<longrightarrow>\n                                 f x \\<in> A)} \\<and>\n                 a \\<in> A}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> R \\<union> {r} \\<longrightarrow>\n                       f x = c) \\<and>\n                   (\\<forall>x.\n                       x \\<in> R \\<union> {r} \\<longrightarrow>\n                       f x \\<in> A)} \\<Longrightarrow>\n       x \\<in> {f(r := a) |f a.\n                f \\<in> {f. (\\<forall>x.\n                                x \\<notin> R \\<longrightarrow>\n                                f x = c) \\<and>\n                            (\\<forall>x.\n                                x \\<in> R \\<longrightarrow>\n                                f x \\<in> A)} \\<and>\n                a \\<in> A}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> R \\<union> {r} \\<longrightarrow>\n                       f x = c) \\<and>\n                   (\\<forall>x.\n                       x \\<in> R \\<union> {r} \\<longrightarrow>\n                       f x \\<in> A)} \\<Longrightarrow>\n       x \\<in> {f(r := a) |f a.\n                f \\<in> {f. (\\<forall>x.\n                                x \\<notin> R \\<longrightarrow>\n                                f x = c) \\<and>\n                            (\\<forall>x.\n                                x \\<in> R \\<longrightarrow>\n                                f x \\<in> A)} \\<and>\n                a \\<in> A}", "assume \"f \\<in> ?F\""], ["proof (state)\nthis:\n  f \\<in> {f. (\\<forall>x.\n                  x \\<notin> R \\<union> {r} \\<longrightarrow>\n                  f x = c) \\<and>\n              (\\<forall>x.\n                  x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> R \\<union> {r} \\<longrightarrow>\n                       f x = c) \\<and>\n                   (\\<forall>x.\n                       x \\<in> R \\<union> {r} \\<longrightarrow>\n                       f x \\<in> A)} \\<Longrightarrow>\n       x \\<in> {f(r := a) |f a.\n                f \\<in> {f. (\\<forall>x.\n                                x \\<notin> R \\<longrightarrow>\n                                f x = c) \\<and>\n                            (\\<forall>x.\n                                x \\<in> R \\<longrightarrow>\n                                f x \\<in> A)} \\<and>\n                a \\<in> A}", "hence \"f(r := c) \\<in> ?F'\" and \"f r \\<in> A\""], ["proof (prove)\nusing this:\n  f \\<in> {f. (\\<forall>x.\n                  x \\<notin> R \\<union> {r} \\<longrightarrow>\n                  f x = c) \\<and>\n              (\\<forall>x.\n                  x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n\ngoal (1 subgoal):\n 1. f(r := c)\n    \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n              (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} &&&\n    f r \\<in> A", "using insert(2)"], ["proof (prove)\nusing this:\n  f \\<in> {f. (\\<forall>x.\n                  x \\<notin> R \\<union> {r} \\<longrightarrow>\n                  f x = c) \\<and>\n              (\\<forall>x.\n                  x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n  r \\<notin> R\n\ngoal (1 subgoal):\n 1. f(r := c)\n    \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n              (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} &&&\n    f r \\<in> A", "by (simp, blast)"], ["proof (state)\nthis:\n  f(r := c)\n  \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n            (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)}\n  f r \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> R \\<union> {r} \\<longrightarrow>\n                       f x = c) \\<and>\n                   (\\<forall>x.\n                       x \\<in> R \\<union> {r} \\<longrightarrow>\n                       f x \\<in> A)} \\<Longrightarrow>\n       x \\<in> {f(r := a) |f a.\n                f \\<in> {f. (\\<forall>x.\n                                x \\<notin> R \\<longrightarrow>\n                                f x = c) \\<and>\n                            (\\<forall>x.\n                                x \\<in> R \\<longrightarrow>\n                                f x \\<in> A)} \\<and>\n                a \\<in> A}", "hence \"f(r := c, r := (f r)) \\<in> ?X\""], ["proof (prove)\nusing this:\n  f(r := c)\n  \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n            (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)}\n  f r \\<in> A\n\ngoal (1 subgoal):\n 1. f(r := c, r := f r)\n    \\<in> {f(r := a) |f a.\n           f \\<in> {f. (\\<forall>x.\n                           x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                       (\\<forall>x.\n                           x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n           a \\<in> A}", "by blast"], ["proof (state)\nthis:\n  f(r := c, r := f r)\n  \\<in> {f(r := a) |f a.\n         f \\<in> {f. (\\<forall>x.\n                         x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                     (\\<forall>x.\n                         x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n         a \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> R \\<union> {r} \\<longrightarrow>\n                       f x = c) \\<and>\n                   (\\<forall>x.\n                       x \\<in> R \\<union> {r} \\<longrightarrow>\n                       f x \\<in> A)} \\<Longrightarrow>\n       x \\<in> {f(r := a) |f a.\n                f \\<in> {f. (\\<forall>x.\n                                x \\<notin> R \\<longrightarrow>\n                                f x = c) \\<and>\n                            (\\<forall>x.\n                                x \\<in> R \\<longrightarrow>\n                                f x \\<in> A)} \\<and>\n                a \\<in> A}", "thus \"f \\<in> ?X\""], ["proof (prove)\nusing this:\n  f(r := c, r := f r)\n  \\<in> {f(r := a) |f a.\n         f \\<in> {f. (\\<forall>x.\n                         x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                     (\\<forall>x.\n                         x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n         a \\<in> A}\n\ngoal (1 subgoal):\n 1. f \\<in> {f(r := a) |f a.\n             f \\<in> {f. (\\<forall>x.\n                             x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                         (\\<forall>x.\n                             x \\<in> R \\<longrightarrow>\n                             f x \\<in> A)} \\<and>\n             a \\<in> A}", "by simp"], ["proof (state)\nthis:\n  f \\<in> {f(r := a) |f a.\n           f \\<in> {f. (\\<forall>x.\n                           x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                       (\\<forall>x.\n                           x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n           a \\<in> A}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {f. (\\<forall>x.\n          x \\<notin> R \\<union> {r} \\<longrightarrow> f x = c) \\<and>\n      (\\<forall>x. x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n  \\<subseteq> {f(r := a) |f a.\n               f \\<in> {f. (\\<forall>x.\n                               x \\<notin> R \\<longrightarrow>\n                               f x = c) \\<and>\n                           (\\<forall>x.\n                               x \\<in> R \\<longrightarrow>\n                               f x \\<in> A)} \\<and>\n               a \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "moreover"], ["proof (state)\nthis:\n  {f. (\\<forall>x.\n          x \\<notin> R \\<union> {r} \\<longrightarrow> f x = c) \\<and>\n      (\\<forall>x. x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n  \\<subseteq> {f(r := a) |f a.\n               f \\<in> {f. (\\<forall>x.\n                               x \\<notin> R \\<longrightarrow>\n                               f x = c) \\<and>\n                           (\\<forall>x.\n                               x \\<in> R \\<longrightarrow>\n                               f x \\<in> A)} \\<and>\n               a \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "have \"finite (?F' \\<times> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ({f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n          (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<times>\n      A)", "using assms(2) insert(3)"], ["proof (prove)\nusing this:\n  finite A\n  finite\n   {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n       (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)}\n\ngoal (1 subgoal):\n 1. finite\n     ({f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n          (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<times>\n      A)", "by simp"], ["proof (state)\nthis:\n  finite\n   ({f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n        (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<times>\n    A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "have \"(\\<lambda>(f,a). f(r:=a)) ` (?F' \\<times> A) = ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(f, a). f(r := a)) `\n    ({f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<times>\n     A) =\n    {f(r := a) |f a.\n     f \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                 (\\<forall>x.\n                     x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n     a \\<in> A}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(f, a). f(r := a)) `\n  ({f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n       (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<times>\n   A) =\n  {f(r := a) |f a.\n   f \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n               (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n   a \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "hence \"finite ?X\""], ["proof (prove)\nusing this:\n  (\\<lambda>(f, a). f(r := a)) `\n  ({f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n       (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<times>\n   A) =\n  {f(r := a) |f a.\n   f \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n               (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n   a \\<in> A}\n\ngoal (1 subgoal):\n 1. finite\n     {f(r := a) |f a.\n      f \\<in> {f. (\\<forall>x.\n                      x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                  (\\<forall>x.\n                      x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n      a \\<in> A}", "using finite_imageI[OF \\<open>finite (?F' \\<times> A)\\<close>, of \"(\\<lambda>(f,a). f(r:=a))\"]"], ["proof (prove)\nusing this:\n  (\\<lambda>(f, a). f(r := a)) `\n  ({f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n       (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<times>\n   A) =\n  {f(r := a) |f a.\n   f \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n               (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n   a \\<in> A}\n  finite\n   ((\\<lambda>(f, a). f(r := a)) `\n    ({f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<times>\n     A))\n\ngoal (1 subgoal):\n 1. finite\n     {f(r := a) |f a.\n      f \\<in> {f. (\\<forall>x.\n                      x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                  (\\<forall>x.\n                      x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n      a \\<in> A}", "by presburger"], ["proof (state)\nthis:\n  finite\n   {f(r := a) |f a.\n    f \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                (\\<forall>x.\n                    x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n    a \\<in> A}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "ultimately"], ["proof (chain)\npicking this:\n  {f. (\\<forall>x.\n          x \\<notin> R \\<union> {r} \\<longrightarrow> f x = c) \\<and>\n      (\\<forall>x. x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n  \\<subseteq> {f(r := a) |f a.\n               f \\<in> {f. (\\<forall>x.\n                               x \\<notin> R \\<longrightarrow>\n                               f x = c) \\<and>\n                           (\\<forall>x.\n                               x \\<in> R \\<longrightarrow>\n                               f x \\<in> A)} \\<and>\n               a \\<in> A}\n  finite\n   {f(r := a) |f a.\n    f \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                (\\<forall>x.\n                    x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n    a \\<in> A}", "have \"finite ?F\""], ["proof (prove)\nusing this:\n  {f. (\\<forall>x.\n          x \\<notin> R \\<union> {r} \\<longrightarrow> f x = c) \\<and>\n      (\\<forall>x. x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n  \\<subseteq> {f(r := a) |f a.\n               f \\<in> {f. (\\<forall>x.\n                               x \\<notin> R \\<longrightarrow>\n                               f x = c) \\<and>\n                           (\\<forall>x.\n                               x \\<in> R \\<longrightarrow>\n                               f x \\<in> A)} \\<and>\n               a \\<in> A}\n  finite\n   {f(r := a) |f a.\n    f \\<in> {f. (\\<forall>x. x \\<notin> R \\<longrightarrow> f x = c) \\<and>\n                (\\<forall>x.\n                    x \\<in> R \\<longrightarrow> f x \\<in> A)} \\<and>\n    a \\<in> A}\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x.\n             x \\<notin> R \\<union> {r} \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}", "by (blast intro: finite_subset)"], ["proof (state)\nthis:\n  finite\n   {f. (\\<forall>x.\n           x \\<notin> R \\<union> {r} \\<longrightarrow> f x = c) \\<and>\n       (\\<forall>x. x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        finite\n         {f. (\\<forall>x. x \\<notin> F \\<longrightarrow> f x = c) \\<and>\n             (\\<forall>x. x \\<in> F \\<longrightarrow> f x \\<in> A)}\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {f. (\\<forall>xa.\n                                  xa \\<notin> insert x F \\<longrightarrow>\n                                  f xa = c) \\<and>\n                              (\\<forall>xa.\n                                  xa \\<in> insert x F \\<longrightarrow>\n                                  f xa \\<in> A)}", "thus ?case"], ["proof (prove)\nusing this:\n  finite\n   {f. (\\<forall>x.\n           x \\<notin> R \\<union> {r} \\<longrightarrow> f x = c) \\<and>\n       (\\<forall>x. x \\<in> R \\<union> {r} \\<longrightarrow> f x \\<in> A)}\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x.\n             x \\<notin> insert r R \\<longrightarrow> f x = c) \\<and>\n         (\\<forall>x. x \\<in> insert r R \\<longrightarrow> f x \\<in> A)}", "unfolding insert_def"], ["proof (prove)\nusing this:\n  finite\n   {f. (\\<forall>x.\n           x \\<notin> R \\<union> ({x. x = r} \\<union> {}) \\<longrightarrow>\n           f x = c) \\<and>\n       (\\<forall>x.\n           x \\<in> R \\<union> ({x. x = r} \\<union> {}) \\<longrightarrow>\n           f x \\<in> A)}\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x.\n             x \\<notin> {x. x = r} \\<union> R \\<longrightarrow>\n             f x = c) \\<and>\n         (\\<forall>x.\n             x \\<in> {x. x = r} \\<union> R \\<longrightarrow> f x \\<in> A)}", "by simp"], ["proof (state)\nthis:\n  finite\n   {f. (\\<forall>x. x \\<notin> insert r R \\<longrightarrow> f x = c) \\<and>\n       (\\<forall>x. x \\<in> insert r R \\<longrightarrow> f x \\<in> A)}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in semi_mojmir) wellformed_\\<R>:\n  shows \"finite (reach \\<Sigma> step initial)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> step initial)", "proof (rule finite_subset)"], ["proof (state)\ngoal (2 subgoals):\n 1. reach \\<Sigma> step initial \\<subseteq> ?B\n 2. finite ?B", "let ?R = \"{f. (\\<forall>x. x \\<notin> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow> f x = None) \\<and> \n    (\\<forall>x. x \\<in> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow> f x \\<in> {None} \\<union> Some ` {0..<max_rank})}\""], ["proof (state)\ngoal (2 subgoals):\n 1. reach \\<Sigma> step initial \\<subseteq> ?B\n 2. finite ?B", "show \"reach \\<Sigma> step initial \\<subseteq> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reach \\<Sigma> step initial\n    \\<subseteq> {f. (\\<forall>x.\n                        x \\<notin> reach \\<Sigma> \\<delta>\n                                    q\\<^sub>0 \\<longrightarrow>\n                        f x = None) \\<and>\n                    (\\<forall>x.\n                        x \\<in> reach \\<Sigma> \\<delta>\n                                 q\\<^sub>0 \\<longrightarrow>\n                        f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> reach \\<Sigma> step initial \\<Longrightarrow>\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> reach \\<Sigma> \\<delta>\n                                   q\\<^sub>0 \\<longrightarrow>\n                       f x = None) \\<and>\n                   (\\<forall>x.\n                       x \\<in> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                       f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> reach \\<Sigma> step initial \\<Longrightarrow>\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> reach \\<Sigma> \\<delta>\n                                   q\\<^sub>0 \\<longrightarrow>\n                       f x = None) \\<and>\n                   (\\<forall>x.\n                       x \\<in> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                       f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "assume \"x \\<in> reach \\<Sigma> step initial\""], ["proof (state)\nthis:\n  x \\<in> reach \\<Sigma> step initial\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> reach \\<Sigma> step initial \\<Longrightarrow>\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> reach \\<Sigma> \\<delta>\n                                   q\\<^sub>0 \\<longrightarrow>\n                       f x = None) \\<and>\n                   (\\<forall>x.\n                       x \\<in> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                       f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "then"], ["proof (chain)\npicking this:\n  x \\<in> reach \\<Sigma> step initial", "obtain w where x_def: \"x = foldl step initial w\" and \"set w \\<subseteq> \\<Sigma>\""], ["proof (prove)\nusing this:\n  x \\<in> reach \\<Sigma> step initial\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>x = foldl step initial w;\n         set w \\<subseteq> \\<Sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding reach_foldl_def[OF nonempty_\\<Sigma>]"], ["proof (prove)\nusing this:\n  x \\<in> {foldl step initial w |w. set w \\<subseteq> \\<Sigma>}\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>x = foldl step initial w;\n         set w \\<subseteq> \\<Sigma>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = foldl step initial w\n  set w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> reach \\<Sigma> step initial \\<Longrightarrow>\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> reach \\<Sigma> \\<delta>\n                                   q\\<^sub>0 \\<longrightarrow>\n                       f x = None) \\<and>\n                   (\\<forall>x.\n                       x \\<in> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                       f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "obtain a where \"a \\<in> \\<Sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> \\<Sigma> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using nonempty_\\<Sigma>"], ["proof (prove)\nusing this:\n  \\<Sigma> \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> \\<Sigma> \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> \\<Sigma>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> reach \\<Sigma> step initial \\<Longrightarrow>\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> reach \\<Sigma> \\<delta>\n                                   q\\<^sub>0 \\<longrightarrow>\n                       f x = None) \\<and>\n                   (\\<forall>x.\n                       x \\<in> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                       f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "have \"range (w \\<frown> (\\<lambda>i. a)) \\<subseteq> \\<Sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (w \\<frown> (\\<lambda>i. a)) \\<subseteq> \\<Sigma>", "using \\<open>set w \\<subseteq> \\<Sigma>\\<close> \\<open>a \\<in> \\<Sigma>\\<close>"], ["proof (prove)\nusing this:\n  set w \\<subseteq> \\<Sigma>\n  a \\<in> \\<Sigma>\n\ngoal (1 subgoal):\n 1. range (w \\<frown> (\\<lambda>i. a)) \\<subseteq> \\<Sigma>", "unfolding conc_def"], ["proof (prove)\nusing this:\n  set w \\<subseteq> \\<Sigma>\n  a \\<in> \\<Sigma>\n\ngoal (1 subgoal):\n 1. range (\\<lambda>n. if n < length w then w ! n else a)\n    \\<subseteq> \\<Sigma>", "by auto"], ["proof (state)\nthis:\n  range (w \\<frown> (\\<lambda>i. a)) \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> reach \\<Sigma> step initial \\<Longrightarrow>\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> reach \\<Sigma> \\<delta>\n                                   q\\<^sub>0 \\<longrightarrow>\n                       f x = None) \\<and>\n                   (\\<forall>x.\n                       x \\<in> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                       f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "then"], ["proof (chain)\npicking this:\n  range (w \\<frown> (\\<lambda>i. a)) \\<subseteq> \\<Sigma>", "interpret \\<HH>: semi_mojmir \\<Sigma> \\<delta> q\\<^sub>0 \"(w \\<frown> (\\<lambda>i. a))\""], ["proof (prove)\nusing this:\n  range (w \\<frown> (\\<lambda>i. a)) \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. semi_mojmir \\<Sigma> \\<delta> q\\<^sub>0 (w \\<frown> (\\<lambda>i. a))", "using finite_reach finite_\\<Sigma>"], ["proof (prove)\nusing this:\n  range (w \\<frown> (\\<lambda>i. a)) \\<subseteq> \\<Sigma>\n  finite (reach \\<Sigma> \\<delta> q\\<^sub>0)\n  finite \\<Sigma>\n\ngoal (1 subgoal):\n 1. semi_mojmir \\<Sigma> \\<delta> q\\<^sub>0 (w \\<frown> (\\<lambda>i. a))", "by (unfold_locales; simp_all)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> reach \\<Sigma> \\<HH>.step \\<HH>.initial \\<Longrightarrow>\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> reach \\<Sigma> \\<delta>\n                                   q\\<^sub>0 \\<longrightarrow>\n                       f x = None) \\<and>\n                   (\\<forall>x.\n                       x \\<in> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                       f x\n                       \\<in> {None} \\<union> Some ` {0..<\\<HH>.max_rank})}", "have \"x = (\\<lambda>q. \\<HH>.state_rank q (length w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = (\\<lambda>q. \\<HH>.state_rank q (length w))", "unfolding \\<HH>.state_rank_step_foldl x_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. foldl \\<HH>.step \\<HH>.initial w =\n    foldl \\<HH>.step \\<HH>.initial\n     (map (w \\<frown> (\\<lambda>i. a)) [0..<length w])", "using prefix_conc_length subsequence_def"], ["proof (prove)\nusing this:\n  prefix (length ?w) (?w \\<frown> ?w') = ?w\n  ?w [?i \\<rightarrow> ?j] \\<equiv> map ?w [?i..<?j]\n\ngoal (1 subgoal):\n 1. foldl \\<HH>.step \\<HH>.initial w =\n    foldl \\<HH>.step \\<HH>.initial\n     (map (w \\<frown> (\\<lambda>i. a)) [0..<length w])", "by metis"], ["proof (state)\nthis:\n  x = (\\<lambda>q. \\<HH>.state_rank q (length w))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> reach \\<Sigma> \\<HH>.step \\<HH>.initial \\<Longrightarrow>\n       x \\<in> {f. (\\<forall>x.\n                       x \\<notin> reach \\<Sigma> \\<delta>\n                                   q\\<^sub>0 \\<longrightarrow>\n                       f x = None) \\<and>\n                   (\\<forall>x.\n                       x \\<in> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                       f x\n                       \\<in> {None} \\<union> Some ` {0..<\\<HH>.max_rank})}", "thus \"x \\<in> ?R\""], ["proof (prove)\nusing this:\n  x = (\\<lambda>q. \\<HH>.state_rank q (length w))\n\ngoal (1 subgoal):\n 1. x \\<in> {f. (\\<forall>x.\n                    x \\<notin> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                    f x = None) \\<and>\n                (\\<forall>x.\n                    x \\<in> reach \\<Sigma> \\<delta>\n                             q\\<^sub>0 \\<longrightarrow>\n                    f x \\<in> {None} \\<union> Some ` {0..<\\<HH>.max_rank})}", "using \\<HH>.state_rank_in_function_set"], ["proof (prove)\nusing this:\n  x = (\\<lambda>q. \\<HH>.state_rank q (length w))\n  (\\<lambda>q. \\<HH>.state_rank q ?t)\n  \\<in> {f. (\\<forall>x.\n                x \\<notin> reach \\<Sigma> \\<delta>\n                            q\\<^sub>0 \\<longrightarrow>\n                f x = None) \\<and>\n            (\\<forall>x.\n                x \\<in> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n                f x \\<in> {None} \\<union> Some ` {0..<\\<HH>.max_rank})}\n\ngoal (1 subgoal):\n 1. x \\<in> {f. (\\<forall>x.\n                    x \\<notin> reach \\<Sigma> \\<delta>\n                                q\\<^sub>0 \\<longrightarrow>\n                    f x = None) \\<and>\n                (\\<forall>x.\n                    x \\<in> reach \\<Sigma> \\<delta>\n                             q\\<^sub>0 \\<longrightarrow>\n                    f x \\<in> {None} \\<union> Some ` {0..<\\<HH>.max_rank})}", "by meson"], ["proof (state)\nthis:\n  x \\<in> {f. (\\<forall>x.\n                  x \\<notin> reach \\<Sigma> \\<delta>\n                              q\\<^sub>0 \\<longrightarrow>\n                  f x = None) \\<and>\n              (\\<forall>x.\n                  x \\<in> reach \\<Sigma> \\<delta>\n                           q\\<^sub>0 \\<longrightarrow>\n                  f x \\<in> {None} \\<union> Some ` {0..<\\<HH>.max_rank})}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  reach \\<Sigma> step initial\n  \\<subseteq> {f. (\\<forall>x.\n                      x \\<notin> reach \\<Sigma> \\<delta>\n                                  q\\<^sub>0 \\<longrightarrow>\n                      f x = None) \\<and>\n                  (\\<forall>x.\n                      x \\<in> reach \\<Sigma> \\<delta>\n                               q\\<^sub>0 \\<longrightarrow>\n                      f x \\<in> {None} \\<union> Some ` {0..<max_rank})}\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x.\n             x \\<notin> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n             f x = None) \\<and>\n         (\\<forall>x.\n             x \\<in> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n             f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "have \"finite ({None} \\<union> Some ` {0..<max_rank})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ({None} \\<union> Some ` {0..<max_rank})", "by blast"], ["proof (state)\nthis:\n  finite ({None} \\<union> Some ` {0..<max_rank})\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x.\n             x \\<notin> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n             f x = None) \\<and>\n         (\\<forall>x.\n             x \\<in> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n             f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "thus \"finite ?R\""], ["proof (prove)\nusing this:\n  finite ({None} \\<union> Some ` {0..<max_rank})\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x.\n             x \\<notin> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n             f x = None) \\<and>\n         (\\<forall>x.\n             x \\<in> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n             f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "using finite_reach"], ["proof (prove)\nusing this:\n  finite ({None} \\<union> Some ` {0..<max_rank})\n  finite (reach \\<Sigma> \\<delta> q\\<^sub>0)\n\ngoal (1 subgoal):\n 1. finite\n     {f. (\\<forall>x.\n             x \\<notin> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n             f x = None) \\<and>\n         (\\<forall>x.\n             x \\<in> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n             f x \\<in> {None} \\<union> Some ` {0..<max_rank})}", "by (blast intro: function_set_finite)"], ["proof (state)\nthis:\n  finite\n   {f. (\\<forall>x.\n           x \\<notin> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n           f x = None) \\<and>\n       (\\<forall>x.\n           x \\<in> reach \\<Sigma> \\<delta> q\\<^sub>0 \\<longrightarrow>\n           f x \\<in> {None} \\<union> Some ` {0..<max_rank})}\n\ngoal:\nNo subgoals!", "qed"], ["", "locale mojmir_to_rabin = mojmir + mojmir_to_rabin_def begin"], ["", "subsection \\<open>Correctness\\<close>"], ["", "lemma imp_and_not_imp_eq:\n  assumes \"P \\<Longrightarrow> Q\"\n  assumes \"\\<not>P \\<Longrightarrow> \\<not>Q\"\n  shows \"P = Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = Q", "using assms"], ["proof (prove)\nusing this:\n  P \\<Longrightarrow> Q\n  \\<not> P \\<Longrightarrow> \\<not> Q\n\ngoal (1 subgoal):\n 1. P = Q", "by blast"], ["", "lemma finite_limit_intersection:\n  assumes \"finite (range f)\"\n  assumes \"\\<And>x::nat. x \\<in> A \\<longleftrightarrow> (f x) \\<in> B\"\n  shows \"finite A \\<longleftrightarrow> limit f \\<inter> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite A = (limit f \\<inter> B = {})", "proof (rule imp_and_not_imp_eq)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "assume \"finite A\""], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "{"], ["proof (state)\nthis:\n  finite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "assume \"x > Max (A \\<union> {0})\""], ["proof (state)\nthis:\n  Max (A \\<union> {0}) < x\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "moreover"], ["proof (state)\nthis:\n  Max (A \\<union> {0}) < x\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "have \"finite (A \\<union> {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A \\<union> {0})", "using \\<open>finite A\\<close>"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite (A \\<union> {0})", "by simp"], ["proof (state)\nthis:\n  finite (A \\<union> {0})\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "ultimately"], ["proof (chain)\npicking this:\n  Max (A \\<union> {0}) < x\n  finite (A \\<union> {0})", "have \"x \\<notin> A\""], ["proof (prove)\nusing this:\n  Max (A \\<union> {0}) < x\n  finite (A \\<union> {0})\n\ngoal (1 subgoal):\n 1. x \\<notin> A", "using Max.coboundedI"], ["proof (prove)\nusing this:\n  Max (A \\<union> {0}) < x\n  finite (A \\<union> {0})\n  \\<lbrakk>finite ?A; ?a \\<in> ?A\\<rbrakk> \\<Longrightarrow> ?a \\<le> Max ?A\n\ngoal (1 subgoal):\n 1. x \\<notin> A", "by (metis insert_iff insert_is_Un not_le sup.commute)"], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "hence \"f x \\<notin> B\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. f x \\<notin> B", "using assms(2)"], ["proof (prove)\nusing this:\n  x \\<notin> A\n  (?x \\<in> A) = (f ?x \\<in> B)\n\ngoal (1 subgoal):\n 1. f x \\<notin> B", "by simp"], ["proof (state)\nthis:\n  f x \\<notin> B\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "}"], ["proof (state)\nthis:\n  Max (A \\<union> {0}) < ?x2 \\<Longrightarrow> f ?x2 \\<notin> B\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "hence \"f ` {Suc (Max (A \\<union> {0}))..} \\<inter> B = {}\""], ["proof (prove)\nusing this:\n  Max (A \\<union> {0}) < ?x2 \\<Longrightarrow> f ?x2 \\<notin> B\n\ngoal (1 subgoal):\n 1. f ` {Suc (Max (A \\<union> {0}))..} \\<inter> B = {}", "by auto"], ["proof (state)\nthis:\n  f ` {Suc (Max (A \\<union> {0}))..} \\<inter> B = {}\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow> limit f \\<inter> B = {}\n 2. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "thus \"limit f \\<inter> B = {}\""], ["proof (prove)\nusing this:\n  f ` {Suc (Max (A \\<union> {0}))..} \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. limit f \\<inter> B = {}", "using limit_subset[of f]"], ["proof (prove)\nusing this:\n  f ` {Suc (Max (A \\<union> {0}))..} \\<inter> B = {}\n  limit f \\<subseteq> f ` {?n..}\n\ngoal (1 subgoal):\n 1. limit f \\<inter> B = {}", "by blast"], ["proof (state)\nthis:\n  limit f \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "assume \"infinite A\""], ["proof (state)\nthis:\n  infinite A\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "have \"f ` A \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` A \\<subseteq> B", "unfolding image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>A. y = f x} \\<subseteq> B", "using assms"], ["proof (prove)\nusing this:\n  finite (range f)\n  (?x \\<in> A) = (f ?x \\<in> B)\n\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>A. y = f x} \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  f ` A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "moreover"], ["proof (state)\nthis:\n  f ` A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "have \"finite (range f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range f)", "using assms(1)"], ["proof (prove)\nusing this:\n  finite (range f)\n\ngoal (1 subgoal):\n 1. finite (range f)", "unfolding limit_def Inf_many_def"], ["proof (prove)\nusing this:\n  finite (range f)\n\ngoal (1 subgoal):\n 1. finite (range f)", "by simp"], ["proof (state)\nthis:\n  finite (range f)\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "hence \"finite (f ` A)\""], ["proof (prove)\nusing this:\n  finite (range f)\n\ngoal (1 subgoal):\n 1. finite (f ` A)", "by (metis infinite_iff_countable_subset subset_UNIV subset_image_iff)"], ["proof (state)\nthis:\n  finite (f ` A)\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "then"], ["proof (chain)\npicking this:\n  finite (f ` A)", "obtain y where \"y \\<in> f ` A\" and \"\\<exists>\\<^sub>\\<infinity>n. f n = y\""], ["proof (prove)\nusing this:\n  finite (f ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> f ` A;\n         \\<exists>\\<^sub>\\<infinity>n. f n = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Inf_many_def"], ["proof (prove)\nusing this:\n  finite (f ` A)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> f ` A; infinite {n. f n = y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using pigeonhole_infinite[OF \\<open>infinite A\\<close>]"], ["proof (prove)\nusing this:\n  finite (f ` A)\n  finite (?f ` A) \\<Longrightarrow>\n  \\<exists>a0\\<in>A. infinite {a \\<in> A. ?f a = ?f a0}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> f ` A; infinite {n. f n = y}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  y \\<in> f ` A\n  \\<exists>\\<^sub>\\<infinity>n. f n = y\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> limit f \\<inter> B \\<noteq> {}", "ultimately"], ["proof (chain)\npicking this:\n  f ` A \\<subseteq> B\n  y \\<in> f ` A\n  \\<exists>\\<^sub>\\<infinity>n. f n = y", "show \"limit f \\<inter> B \\<noteq> {}\""], ["proof (prove)\nusing this:\n  f ` A \\<subseteq> B\n  y \\<in> f ` A\n  \\<exists>\\<^sub>\\<infinity>n. f n = y\n\ngoal (1 subgoal):\n 1. limit f \\<inter> B \\<noteq> {}", "using limit_iff_frequent"], ["proof (prove)\nusing this:\n  f ` A \\<subseteq> B\n  y \\<in> f ` A\n  \\<exists>\\<^sub>\\<infinity>n. f n = y\n  (?a \\<in> limit ?x) = (\\<exists>\\<^sub>\\<infinity>n. ?x n = ?a)\n\ngoal (1 subgoal):\n 1. limit f \\<inter> B \\<noteq> {}", "by fast"], ["proof (state)\nthis:\n  limit f \\<inter> B \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_range_run:\n  defines \"r \\<equiv> run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w\"\n  shows \"finite (range r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range r)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range r)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range r)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (range r)", "have \"\\<And>n. w n \\<in> \\<Sigma>\" and \"set (map w [0..<n]) \\<subseteq> \\<Sigma>\" and \"set ( map w [0..<Suc n]) \\<subseteq> \\<Sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. w n \\<in> \\<Sigma>) &&&\n    set (map w [0..<n]) \\<subseteq> \\<Sigma> &&&\n    set (map w [0..<Suc n]) \\<subseteq> \\<Sigma>", "using bounded_w"], ["proof (prove)\nusing this:\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>n. w n \\<in> \\<Sigma>) &&&\n    set (map w [0..<n]) \\<subseteq> \\<Sigma> &&&\n    set (map w [0..<Suc n]) \\<subseteq> \\<Sigma>", "by auto"], ["proof (state)\nthis:\n  w ?n \\<in> \\<Sigma>\n  set (map w [0..<n]) \\<subseteq> \\<Sigma>\n  set (map w [0..<Suc n]) \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. finite (range r)", "hence \"r n \\<in> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R\""], ["proof (prove)\nusing this:\n  w ?n \\<in> \\<Sigma>\n  set (map w [0..<n]) \\<subseteq> \\<Sigma>\n  set (map w [0..<Suc n]) \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. r n \\<in> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R", "unfolding run\\<^sub>t.simps run_foldl reach_foldl_def[OF nonempty_\\<Sigma>] r_def"], ["proof (prove)\nusing this:\n  w ?n \\<in> \\<Sigma>\n  set (map w [0..<n]) \\<subseteq> \\<Sigma>\n  set (map w [0..<Suc n]) \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. (foldl \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (map w [0..<n]), w n,\n     foldl \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (map w [0..<Suc n]))\n    \\<in> {foldl \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w |w.\n           set w \\<subseteq> \\<Sigma>} \\<times>\n          \\<Sigma> \\<times>\n          {foldl \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w |w.\n           set w \\<subseteq> \\<Sigma>}", "unfolding fst_conv comp_def snd_conv"], ["proof (prove)\nusing this:\n  w ?n \\<in> \\<Sigma>\n  set (map w [0..<n]) \\<subseteq> \\<Sigma>\n  set (map w [0..<Suc n]) \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. (foldl \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (map w [0..<n]), w n,\n     foldl \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (map w [0..<Suc n]))\n    \\<in> {foldl \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w |w.\n           set w \\<subseteq> \\<Sigma>} \\<times>\n          \\<Sigma> \\<times>\n          {foldl \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w |w.\n           set w \\<subseteq> \\<Sigma>}", "by blast"], ["proof (state)\nthis:\n  r n \\<in> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R\n\ngoal (1 subgoal):\n 1. finite (range r)", "}"], ["proof (state)\nthis:\n  r ?n2 \\<in> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R\n\ngoal (1 subgoal):\n 1. finite (range r)", "hence \"range r \\<subseteq> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R\""], ["proof (prove)\nusing this:\n  r ?n2 \\<in> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R\n\ngoal (1 subgoal):\n 1. range r \\<subseteq> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R", "by blast"], ["proof (state)\nthis:\n  range r \\<subseteq> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R\n\ngoal (1 subgoal):\n 1. finite (range r)", "thus \"finite (range r)\""], ["proof (prove)\nusing this:\n  range r \\<subseteq> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R\n\ngoal (1 subgoal):\n 1. finite (range r)", "using finite_\\<Sigma> wellformed_\\<R>"], ["proof (prove)\nusing this:\n  range r \\<subseteq> Q\\<^sub>R \\<times> \\<Sigma> \\<times> Q\\<^sub>R\n  finite \\<Sigma>\n  finite Q\\<^sub>R\n\ngoal (1 subgoal):\n 1. finite (range r)", "by (blast dest: finite_subset)"], ["proof (state)\nthis:\n  finite (range r)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem mojmir_accept_iff_rabin_accept_rank:\n  shows \"(finite (fail) \\<and> finite (merge i) \\<and> infinite (succeed  i))\n    \\<longleftrightarrow> accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (Acc\\<^sub>\\<R> i) w\"\n  (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (finite fail \\<and>\n     finite (local.merge i) \\<and> infinite (succeed i)) =\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "define r where \"r = run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w\""], ["proof (state)\nthis:\n  r = run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have r_alt_def: \"\\<And>i. r i = (\\<lambda>q. state_rank q i, w i, \\<lambda>q. state_rank q (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       r i =\n       (\\<lambda>q. state_rank q i, w i, \\<lambda>q. state_rank q (Suc i))", "using r_def state_rank_step_foldl run_foldl"], ["proof (prove)\nusing this:\n  r = run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w\n  (\\<lambda>q. state_rank q ?n) =\n  foldl \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (map w [0..<?n])\n  run ?\\<Delta> ?q\\<^sub>0 ?w ?i =\n  foldl ?\\<Delta> ?q\\<^sub>0 (map ?w [0..<?i])\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       r i =\n       (\\<lambda>q. state_rank q i, w i, \\<lambda>q. state_rank q (Suc i))", "by fastforce"], ["proof (state)\nthis:\n  r ?i =\n  (\\<lambda>q. state_rank q ?i, w ?i, \\<lambda>q. state_rank q (Suc ?i))\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have F: \"\\<And>x. x \\<in> fail_t \\<longleftrightarrow> (r x) \\<in> fail\\<^sub>R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (x \\<in> fail_t) = (r x \\<in> fail\\<^sub>R)", "unfolding fail_t_def fail\\<^sub>R_def r_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (x \\<in> {n. \\<exists>q q'.\n                       state_rank q n \\<noteq> None \\<and>\n                       q' = \\<delta> q (w n) \\<and>\n                       q' \\<notin> F \\<and> sink q'}) =\n       ((\\<lambda>q. state_rank q x, w x, \\<lambda>q. state_rank q (Suc x))\n        \\<in> {uu_.\n               \\<exists>r \\<nu> s q q'.\n                  uu_ = (r, \\<nu>, s) \\<and>\n                  r q \\<noteq> None \\<and>\n                  q' = \\<delta> q \\<nu> \\<and>\n                  q' \\<notin> F \\<and> sink q'})", "by blast"], ["proof (state)\nthis:\n  (?x \\<in> fail_t) = (r ?x \\<in> fail\\<^sub>R)\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have B: \"\\<And>x i. x \\<in> merge_t i \\<longleftrightarrow> (r x) \\<in> merge\\<^sub>R i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x i. (x \\<in> merge_t i) = (r x \\<in> merge\\<^sub>R i)", "unfolding merge_t_def merge\\<^sub>R_def r_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x i.\n       (x \\<in> {n. \\<exists>q q' j.\n                       state_rank q n = Some j \\<and>\n                       j < i \\<and>\n                       q' = \\<delta> q (w n) \\<and>\n                       q' \\<notin> F \\<and>\n                       ((\\<exists>q''.\n                            q'' \\<noteq> q \\<and>\n                            q' = \\<delta> q'' (w n) \\<and>\n                            state_rank q'' n \\<noteq> None) \\<or>\n                        q' = q\\<^sub>0)}) =\n       ((\\<lambda>q. state_rank q x, w x, \\<lambda>q. state_rank q (Suc x))\n        \\<in> {uu_.\n               \\<exists>r \\<nu> s q q' j.\n                  uu_ = (r, \\<nu>, s) \\<and>\n                  r q = Some j \\<and>\n                  j < i \\<and>\n                  q' = \\<delta> q \\<nu> \\<and>\n                  ((\\<exists>q''.\n                       q' = \\<delta> q'' \\<nu> \\<and>\n                       r q'' \\<noteq> None \\<and> q'' \\<noteq> q) \\<or>\n                   q' = q\\<^sub>0) \\<and>\n                  q' \\<notin> F})", "by blast"], ["proof (state)\nthis:\n  (?x \\<in> merge_t ?i) = (r ?x \\<in> merge\\<^sub>R ?i)\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have S: \"\\<And>x i. x \\<in> succeed_t i \\<longleftrightarrow> (r x) \\<in> succeed\\<^sub>R i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x i. (x \\<in> succeed_t i) = (r x \\<in> succeed\\<^sub>R i)", "unfolding succeed_t_def succeed\\<^sub>R_def r_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x i.\n       (x \\<in> {n. \\<exists>q.\n                       state_rank q n = Some i \\<and>\n                       q \\<notin> F - {q\\<^sub>0} \\<and>\n                       \\<delta> q (w n) \\<in> F}) =\n       ((\\<lambda>q. state_rank q x, w x, \\<lambda>q. state_rank q (Suc x))\n        \\<in> {uu_.\n               \\<exists>r \\<nu> s q.\n                  uu_ = (r, \\<nu>, s) \\<and>\n                  r q = Some i \\<and>\n                  q \\<notin> F - {q\\<^sub>0} \\<and>\n                  \\<delta> q \\<nu> \\<in> F})", "by blast"], ["proof (state)\nthis:\n  (?x \\<in> succeed_t ?i) = (r ?x \\<in> succeed\\<^sub>R ?i)\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have \"finite (range r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range r)", "using finite_range_run r_def"], ["proof (prove)\nusing this:\n  finite (range (run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w))\n  r = run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w\n\ngoal (1 subgoal):\n 1. finite (range r)", "by simp"], ["proof (state)\nthis:\n  finite (range r)\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "note finite_limit_rule = finite_limit_intersection[OF \\<open>finite (range r)\\<close>]"], ["proof (state)\nthis:\n  (\\<And>x. (x \\<in> ?A) = (r x \\<in> ?B)) \\<Longrightarrow>\n  finite ?A = (limit r \\<inter> ?B = {})\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "{"], ["proof (state)\nthis:\n  (\\<And>x. (x \\<in> ?A) = (r x \\<in> ?B)) \\<Longrightarrow>\n  finite ?A = (limit r \\<inter> ?B = {})\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "assume \"?lhs\""], ["proof (state)\nthis:\n  finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "hence \"finite fail_t\" and \"finite (merge_t i)\" and \"infinite (succeed_t i)\""], ["proof (prove)\nusing this:\n  finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)\n\ngoal (1 subgoal):\n 1. finite fail_t &&& finite (merge_t i) &&& infinite (succeed_t i)", "unfolding finite_fail_t finite_merge_t finite_succeed_t"], ["proof (prove)\nusing this:\n  finite fail_t \\<and> finite (merge_t i) \\<and> infinite (succeed_t i)\n\ngoal (1 subgoal):\n 1. finite fail_t &&& finite (merge_t i) &&& infinite (succeed_t i)", "by blast+"], ["proof (state)\nthis:\n  finite fail_t\n  finite (merge_t i)\n  infinite (succeed_t i)\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have \"limit r \\<inter> fail\\<^sub>R = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limit r \\<inter> fail\\<^sub>R = {}", "by (metis finite_limit_rule F \\<open>finite (fail_t)\\<close>)"], ["proof (state)\nthis:\n  limit r \\<inter> fail\\<^sub>R = {}\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "moreover"], ["proof (state)\nthis:\n  limit r \\<inter> fail\\<^sub>R = {}\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have \"limit r \\<inter> merge\\<^sub>R i = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limit r \\<inter> merge\\<^sub>R i = {}", "by (metis finite_limit_rule B \\<open>finite (merge_t i)\\<close>)"], ["proof (state)\nthis:\n  limit r \\<inter> merge\\<^sub>R i = {}\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "ultimately"], ["proof (chain)\npicking this:\n  limit r \\<inter> fail\\<^sub>R = {}\n  limit r \\<inter> merge\\<^sub>R i = {}", "have \"limit r \\<inter> fst (Acc\\<^sub>\\<R> i) = {}\""], ["proof (prove)\nusing this:\n  limit r \\<inter> fail\\<^sub>R = {}\n  limit r \\<inter> merge\\<^sub>R i = {}\n\ngoal (1 subgoal):\n 1. limit r \\<inter>\n    fst (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) =\n    {}", "by auto"], ["proof (state)\nthis:\n  limit r \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) =\n  {}\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "moreover"], ["proof (state)\nthis:\n  limit r \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) =\n  {}\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have \"limit r \\<inter> succeed\\<^sub>R i \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limit r \\<inter> succeed\\<^sub>R i \\<noteq> {}", "by (metis finite_limit_rule S \\<open>infinite (succeed_t i)\\<close>)"], ["proof (state)\nthis:\n  limit r \\<inter> succeed\\<^sub>R i \\<noteq> {}\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "hence \"limit r \\<inter> snd (Acc\\<^sub>\\<R> i) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  limit r \\<inter> succeed\\<^sub>R i \\<noteq> {}\n\ngoal (1 subgoal):\n 1. limit r \\<inter>\n    snd (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  limit r \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) \\<noteq>\n  {}\n\ngoal (2 subgoals):\n 1. finite fail \\<and>\n    finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n 2. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "ultimately"], ["proof (chain)\npicking this:\n  limit r \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) =\n  {}\n  limit r \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) \\<noteq>\n  {}", "show ?rhs"], ["proof (prove)\nusing this:\n  limit r \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) =\n  {}\n  limit r \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w", "unfolding r_def"], ["proof (prove)\nusing this:\n  limit (run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w) \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) =\n  {}\n  limit (run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w) \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w", "by simp"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n   (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "}"], ["proof (state)\nthis:\n  finite fail \\<and>\n  finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n   (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "{"], ["proof (state)\nthis:\n  finite fail \\<and>\n  finite (local.merge i) \\<and> infinite (succeed i) \\<Longrightarrow>\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n   (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "assume ?rhs"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n   (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "hence \"limit r \\<inter> fail\\<^sub>R = {}\" and \"limit r \\<inter> merge\\<^sub>R i = {}\" and \"limit r \\<inter> (succeed\\<^sub>R i) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n   (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n\ngoal (1 subgoal):\n 1. limit r \\<inter> fail\\<^sub>R = {} &&&\n    limit r \\<inter> merge\\<^sub>R i = {} &&&\n    limit r \\<inter> succeed\\<^sub>R i \\<noteq> {}", "unfolding r_def"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n   (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w\n\ngoal (1 subgoal):\n 1. limit (run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w) \\<inter>\n    fail\\<^sub>R =\n    {} &&&\n    limit (run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w) \\<inter>\n    merge\\<^sub>R i =\n    {} &&&\n    limit (run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w) \\<inter>\n    succeed\\<^sub>R i \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  limit r \\<inter> fail\\<^sub>R = {}\n  limit r \\<inter> merge\\<^sub>R i = {}\n  limit r \\<inter> succeed\\<^sub>R i \\<noteq> {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have \"finite fail_t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite fail_t", "by (metis finite_limit_rule F \\<open>limit r \\<inter> fail\\<^sub>R = {}\\<close>)"], ["proof (state)\nthis:\n  finite fail_t\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "moreover"], ["proof (state)\nthis:\n  finite fail_t\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have \"finite (merge_t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (merge_t i)", "by (metis finite_limit_rule B \\<open>limit r \\<inter> merge\\<^sub>R i = {}\\<close>)"], ["proof (state)\nthis:\n  finite (merge_t i)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "moreover"], ["proof (state)\nthis:\n  finite (merge_t i)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "have \"infinite (succeed_t i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite (succeed_t i)", "by (metis finite_limit_rule S \\<open>limit r \\<inter> (succeed\\<^sub>R i) \\<noteq> {}\\<close>)"], ["proof (state)\nthis:\n  infinite (succeed_t i)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n     w \\<Longrightarrow>\n    finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "ultimately"], ["proof (chain)\npicking this:\n  finite fail_t\n  finite (merge_t i)\n  infinite (succeed_t i)", "show ?lhs"], ["proof (prove)\nusing this:\n  finite fail_t\n  finite (merge_t i)\n  infinite (succeed_t i)\n\ngoal (1 subgoal):\n 1. finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)", "unfolding finite_fail_t finite_merge_t finite_succeed_t"], ["proof (prove)\nusing this:\n  finite fail_t\n  finite (merge_t i)\n  infinite (succeed_t i)\n\ngoal (1 subgoal):\n 1. finite fail_t \\<and> finite (merge_t i) \\<and> infinite (succeed_t i)", "by blast"], ["proof (state)\nthis:\n  finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n   (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i)\n   w \\<Longrightarrow>\n  finite fail \\<and> finite (local.merge i) \\<and> infinite (succeed i)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem mojmir_accept_iff_rabin_accept:\n  \"accept \\<longleftrightarrow> accept\\<^sub>R \\<R> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>M =\n    accept\\<^sub>R\n     (\\<delta>\\<^sub>\\<R>, q\\<^sub>\\<R>,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n       j < max_rank})\n     w", "unfolding mojmir_accept_iff_token_set_accept mojmir_accept_iff_rabin_accept_rank"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>i<max_rank.\n        accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n         (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w) =\n    accept\\<^sub>R\n     (\\<delta>\\<^sub>\\<R>, q\\<^sub>\\<R>,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n       j < max_rank})\n     w", "by auto"], ["", "definition smallest_accepting_rank\\<^sub>\\<R> :: \"nat option\"\nwhere \n  \"smallest_accepting_rank\\<^sub>\\<R> \\<equiv> (if accept\\<^sub>R \\<R> w then \n    Some (LEAST i. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (Acc\\<^sub>\\<R> i) w) else None)\""], ["", "theorem Mojmir_rabin_smallest_accepting_rank:\n  \"smallest_accepting_rank = smallest_accepting_rank\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smallest_accepting_rank = smallest_accepting_rank\\<^sub>\\<R>", "by (simp only: smallest_accepting_rank_def smallest_accepting_rank\\<^sub>\\<R>_def \n    mojmir_accept_iff_rabin_accept mojmir_accept_iff_rabin_accept_rank)"], ["", "lemma smallest_accepting_rank\\<^sub>\\<R>_properties:\n  \"smallest_accepting_rank\\<^sub>\\<R> = Some i \\<Longrightarrow> accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (Acc\\<^sub>\\<R> i) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. smallest_accepting_rank\\<^sub>\\<R> = Some i \\<Longrightarrow>\n    accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R>\n     (fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) w", "by (unfold Mojmir_rabin_smallest_accepting_rank[symmetric] mojmir_accept_iff_rabin_accept_rank[symmetric];\n      blast dest: smallest_accepting_rank_properties)"], ["", "end"], ["", "end"]]}