{"file_name": "/home/qj213/afp-2021-10-22/thys/LTL_to_DRA/Rabin.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LTL_to_DRA", "problem_names": ["lemma accepting_pair\\<^sub>R_simp[simp]:\n  \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F,I) w \\<equiv> limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {} \\<and> limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}\"", "lemma accepting_pair\\<^sub>G\\<^sub>R_simp[simp]:\n  \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w \\<equiv> limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {} \\<and> (\\<forall>I \\<in> \\<I>. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})\"", "lemma accept\\<^sub>R_simp[simp]:\n  \"accept\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w = (\\<exists>(Fin, Inf) \\<in> \\<alpha>. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Fin = {} \\<and> limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Inf \\<noteq> {})\"", "lemma accept\\<^sub>G\\<^sub>R_simp[simp]: \n  \"accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> (\\<exists>(Fin, Inf) \\<in> \\<alpha>. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Fin = {} \\<and> (\\<forall>I \\<in> Inf. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}))\"", "lemma accept\\<^sub>G\\<^sub>R_simp2: \n  \"accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> (\\<exists>P \\<in> \\<alpha>. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 P w)\"", "lemma accept\\<^sub>G\\<^sub>R_LTS_E:\n  assumes \"accept\\<^sub>G\\<^sub>R_LTS R w\"\n  obtains F I where \"(F, I) \\<in> snd (snd R)\"\n   and \"accepting_pair\\<^sub>G\\<^sub>R_LTS (fst R) (fst (snd R)) (F, I) w\"", "lemma accept\\<^sub>G\\<^sub>R_LTS_I:\n  \"accepting_pair\\<^sub>G\\<^sub>R_LTS \\<delta> q\\<^sub>0 (F, \\<I>) w \\<Longrightarrow> (F, \\<I>) \\<in> \\<alpha> \\<Longrightarrow> accept\\<^sub>G\\<^sub>R_LTS (\\<delta>, q\\<^sub>0, \\<alpha>) w\"", "lemma accept\\<^sub>G\\<^sub>R_I:\n  \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w \\<Longrightarrow> (F, \\<I>) \\<in> \\<alpha> \\<Longrightarrow> accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w\"", "lemma transfer_accept:\n  \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w \\<longleftrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, {I}) w\"\n  \"accept\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, (\\<lambda>(F, I). (F, {I})) ` \\<alpha>) w\"", "lemma accepting_pair\\<^sub>G\\<^sub>R_restrict:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w = accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) ` \\<I>) w\"", "lemma accept\\<^sub>G\\<^sub>R_restrict:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x, g x) | x. P x}) w = accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) ` g x) | x. P x}) w\"", "lemma accepting_pair\\<^sub>R_restrict:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w = accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\"", "lemma accept\\<^sub>R_restrict:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accept\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x, g x) | x. P x}) w = accept\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, g x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) | x. P x}) w\"", "lemma accepting_pair\\<^sub>G\\<^sub>R_abstract:\n  assumes \"finite (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0)\" \n      and \"finite (reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0')\"\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  assumes \"run\\<^sub>t \\<delta> q\\<^sub>0 w = f o (run\\<^sub>t \\<delta>' q\\<^sub>0' w)\"\n  assumes \"\\<And>t. t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow> f t \\<in> F \\<longleftrightarrow> t \\<in> F'\"\n  assumes \"\\<And>t i. i \\<in> \\<I> \\<Longrightarrow> t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow> f t \\<in> I i \\<longleftrightarrow> t \\<in> I' i\"\n  shows \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, {I i | i. i \\<in> \\<I>}) w \\<longleftrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0' (F', {I' i | i. i \\<in> \\<I>}) w\"", "lemma accepting_pair\\<^sub>R_abstract:\n  assumes \"finite (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0)\" \n      and \"finite (reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0')\"\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  assumes \"run\\<^sub>t \\<delta> q\\<^sub>0 w  = f o (run\\<^sub>t \\<delta>' q\\<^sub>0' w)\"\n  assumes \"\\<And>t. t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow> f t \\<in> F \\<longleftrightarrow> t \\<in> F'\"\n  assumes \"\\<And>t. t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow> f t \\<in> I \\<longleftrightarrow> t \\<in> I'\"\n  shows \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w \\<longleftrightarrow> accepting_pair\\<^sub>R \\<delta>' q\\<^sub>0' (F', I') w\"", "lemma accepting_pair\\<^sub>G\\<^sub>R_LTS:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w \\<longleftrightarrow> accepting_pair\\<^sub>G\\<^sub>R_LTS (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\" \n  (is \"?lhs \\<longleftrightarrow> ?rhs\")", "lemma accept\\<^sub>G\\<^sub>R_LTS:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> accept\\<^sub>G\\<^sub>R_LTS (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, q\\<^sub>0, \\<alpha>) w\"", "lemma accept\\<^sub>R_LTS:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accept\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> accept\\<^sub>R_LTS (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, q\\<^sub>0, \\<alpha>) w\"", "lemma combine_rabin_pairs: \n  \"(\\<And>x. x \\<in> I \\<Longrightarrow> accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (f x, g x) w) \\<Longrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (\\<Union>{f x | x. x \\<in> I}, {g x | x. x \\<in> I}) w\"", "lemma combine_rabin_pairs_UNIV: \n  \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (fin, UNIV) w \\<Longrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (fin', inf') w \\<Longrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (fin \\<union> fin', inf') w\""], "translations": [["", "lemma accepting_pair\\<^sub>R_simp[simp]:\n  \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F,I) w \\<equiv> limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {} \\<and> limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w \\<equiv>\n    limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {} \\<and>\n    limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}", "by simp"], ["", "lemma accepting_pair\\<^sub>G\\<^sub>R_simp[simp]:\n  \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w \\<equiv> limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {} \\<and> (\\<forall>I \\<in> \\<I>. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w \\<equiv>\n    limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {} \\<and>\n    (\\<forall>I\\<in>\\<I>.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})", "by simp"], ["", "lemma accept\\<^sub>R_simp[simp]:\n  \"accept\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w = (\\<exists>(Fin, Inf) \\<in> \\<alpha>. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Fin = {} \\<and> limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Inf \\<noteq> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w =\n    (\\<exists>(Fin, Inf)\\<in>\\<alpha>.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Fin = {} \\<and>\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Inf \\<noteq> {})", "by (unfold accept\\<^sub>R_def accepting_pair\\<^sub>R_def case_prod_unfold fst_conv snd_conv; rule)"], ["", "lemma accept\\<^sub>G\\<^sub>R_simp[simp]: \n  \"accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> (\\<exists>(Fin, Inf) \\<in> \\<alpha>. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Fin = {} \\<and> (\\<forall>I \\<in> Inf. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w =\n    (\\<exists>(Fin, Inf)\\<in>\\<alpha>.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Fin = {} \\<and>\n        (\\<forall>I\\<in>Inf.\n            limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq>\n            {}))", "by (unfold accept\\<^sub>G\\<^sub>R_def accepting_pair\\<^sub>G\\<^sub>R_def case_prod_unfold fst_conv snd_conv; rule)"], ["", "lemma accept\\<^sub>G\\<^sub>R_simp2: \n  \"accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> (\\<exists>P \\<in> \\<alpha>. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 P w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w =\n    (\\<exists>P\\<in>\\<alpha>.\n        accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 P w)", "by (unfold accept\\<^sub>G\\<^sub>R_def accepting_pair\\<^sub>G\\<^sub>R_def case_prod_unfold fst_conv snd_conv; rule)"], ["", "type_synonym ('a, 'b) LTS = \"('a, 'b) transition set\""], ["", "definition LTS_is_inf_run :: \"('q,'a) LTS \\<Rightarrow> 'a word \\<Rightarrow> 'q word \\<Rightarrow> bool\" where\n  \"LTS_is_inf_run \\<Delta> w r \\<longleftrightarrow> (\\<forall>i. (r i, w i, r (Suc i)) \\<in> \\<Delta>)\""], ["", "fun accept\\<^sub>R_LTS :: \"(('a, 'b) LTS \\<times> 'a \\<times> ('a, 'b) rabin_condition) \\<Rightarrow> 'b word \\<Rightarrow> bool\"\nwhere \n  \"accept\\<^sub>R_LTS (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> (\\<exists>(Fin, Inf) \\<in> \\<alpha>. \\<exists>r. \n      LTS_is_inf_run \\<delta> w r \\<and> r 0 = q\\<^sub>0 \n    \\<and> limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> Fin = {} \n    \\<and> limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> Inf \\<noteq> {})\""], ["", "definition accepting_pair\\<^sub>G\\<^sub>R_LTS :: \"('a, 'b) LTS \\<Rightarrow> 'a \\<Rightarrow> ('a, 'b) generalized_rabin_pair \\<Rightarrow> 'b word \\<Rightarrow> bool\"\nwhere\n  \"accepting_pair\\<^sub>G\\<^sub>R_LTS \\<delta> q\\<^sub>0 P w \\<equiv> \\<exists>r. LTS_is_inf_run \\<delta> w r \\<and> r 0 = q\\<^sub>0 \n    \\<and> limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> fst P = {} \n    \\<and> (\\<forall>I \\<in> snd P. limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> I \\<noteq> {})\""], ["", "fun accept\\<^sub>G\\<^sub>R_LTS :: \"(('a, 'b) LTS \\<times> 'a \\<times> ('a, 'b) generalized_rabin_condition) \\<Rightarrow> 'b word \\<Rightarrow> bool\"\nwhere \n  \"accept\\<^sub>G\\<^sub>R_LTS (\\<delta>, q\\<^sub>0, \\<alpha>) w = (\\<exists>(Fin, Inf) \\<in> \\<alpha>. accepting_pair\\<^sub>G\\<^sub>R_LTS \\<delta> q\\<^sub>0 (Fin, Inf) w)\""], ["", "lemma accept\\<^sub>G\\<^sub>R_LTS_E:\n  assumes \"accept\\<^sub>G\\<^sub>R_LTS R w\"\n  obtains F I where \"(F, I) \\<in> snd (snd R)\"\n   and \"accepting_pair\\<^sub>G\\<^sub>R_LTS (fst R) (fst (snd R)) (F, I) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>F I.\n        \\<lbrakk>(F, I) \\<in> snd (snd R);\n         accepting_pair\\<^sub>G\\<^sub>R_LTS (fst R) (fst (snd R)) (F, I)\n          w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>F I.\n        \\<lbrakk>(F, I) \\<in> snd (snd R);\n         accepting_pair\\<^sub>G\\<^sub>R_LTS (fst R) (fst (snd R)) (F, I)\n          w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain \\<delta> q\\<^sub>0 \\<alpha> where \"R = (\\<delta>, q\\<^sub>0, \\<alpha>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<delta> q\\<^sub>0 \\<alpha>.\n        R = (\\<delta>, q\\<^sub>0, \\<alpha>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using prod_cases3"], ["proof (prove)\nusing this:\n  (\\<And>a b c. ?y = (a, b, c) \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta> q\\<^sub>0 \\<alpha>.\n        R = (\\<delta>, q\\<^sub>0, \\<alpha>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  R = (\\<delta>, q\\<^sub>0, \\<alpha>)\n\ngoal (1 subgoal):\n 1. (\\<And>F I.\n        \\<lbrakk>(F, I) \\<in> snd (snd R);\n         accepting_pair\\<^sub>G\\<^sub>R_LTS (fst R) (fst (snd R)) (F, I)\n          w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show \"(\\<And>F I. (F, I) \\<in> snd (snd R) \\<Longrightarrow> accepting_pair\\<^sub>G\\<^sub>R_LTS (fst R) (fst (snd R)) (F, I) w \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>F I.\n        \\<lbrakk>(F, I) \\<in> snd (snd R);\n         accepting_pair\\<^sub>G\\<^sub>R_LTS (fst R) (fst (snd R)) (F, I)\n          w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  accept\\<^sub>G\\<^sub>R_LTS R w\n\ngoal (1 subgoal):\n 1. (\\<And>F I.\n        \\<lbrakk>(F, I) \\<in> snd (snd R);\n         accepting_pair\\<^sub>G\\<^sub>R_LTS (fst R) (fst (snd R)) (F, I)\n          w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding \\<open>R = (\\<delta>, q\\<^sub>0, \\<alpha>)\\<close>"], ["proof (prove)\nusing this:\n  accept\\<^sub>G\\<^sub>R_LTS (\\<delta>, q\\<^sub>0, \\<alpha>) w\n\ngoal (1 subgoal):\n 1. (\\<And>F I.\n        \\<lbrakk>(F, I) \\<in> snd (snd (\\<delta>, q\\<^sub>0, \\<alpha>));\n         accepting_pair\\<^sub>G\\<^sub>R_LTS\n          (fst (\\<delta>, q\\<^sub>0, \\<alpha>))\n          (fst (snd (\\<delta>, q\\<^sub>0, \\<alpha>))) (F, I) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<And>F I.\n      \\<lbrakk>(F, I) \\<in> snd (snd R);\n       accepting_pair\\<^sub>G\\<^sub>R_LTS (fst R) (fst (snd R)) (F, I)\n        w\\<rbrakk>\n      \\<Longrightarrow> thesis) \\<Longrightarrow>\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma accept\\<^sub>G\\<^sub>R_LTS_I:\n  \"accepting_pair\\<^sub>G\\<^sub>R_LTS \\<delta> q\\<^sub>0 (F, \\<I>) w \\<Longrightarrow> (F, \\<I>) \\<in> \\<alpha> \\<Longrightarrow> accept\\<^sub>G\\<^sub>R_LTS (\\<delta>, q\\<^sub>0, \\<alpha>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accepting_pair\\<^sub>G\\<^sub>R_LTS \\<delta> q\\<^sub>0 (F, \\<I>)\n              w;\n     (F, \\<I>) \\<in> \\<alpha>\\<rbrakk>\n    \\<Longrightarrow> accept\\<^sub>G\\<^sub>R_LTS\n                       (\\<delta>, q\\<^sub>0, \\<alpha>) w", "by auto"], ["", "lemma accept\\<^sub>G\\<^sub>R_I:\n  \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w \\<Longrightarrow> (F, \\<I>) \\<in> \\<alpha> \\<Longrightarrow> accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w;\n     (F, \\<I>) \\<in> \\<alpha>\\<rbrakk>\n    \\<Longrightarrow> accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>)\n                       w", "by auto"], ["", "lemma transfer_accept:\n  \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w \\<longleftrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, {I}) w\"\n  \"accept\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, (\\<lambda>(F, I). (F, {I})) ` \\<alpha>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, {I}) w &&&\n    accept\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w =\n    accept\\<^sub>G\\<^sub>R\n     (\\<delta>, q\\<^sub>0, (\\<lambda>(F, I). (F, {I})) ` \\<alpha>) w", "by (simp add: case_prod_unfold)+"], ["", "subsection \\<open>Restriction Lemmas\\<close>"], ["", "lemma accepting_pair\\<^sub>G\\<^sub>R_restrict:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w = accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) ` \\<I>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n      (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n      \\<I>)\n     w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n      (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n      \\<I>)\n     w", "have \"limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {} \\<longleftrightarrow> limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n    (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n     {})", "using assms[THEN limit_subseteq_reach(2), of \\<delta> q\\<^sub>0]"], ["proof (prove)\nusing this:\n  limit (run\\<^sub>t \\<delta> q\\<^sub>0 w)\n  \\<subseteq> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0\n\ngoal (1 subgoal):\n 1. (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n    (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n     {})", "by auto"], ["proof (state)\nthis:\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n   (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n   {})\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n      (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n      \\<I>)\n     w", "moreover"], ["proof (state)\nthis:\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n   (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n   {})\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n      (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n      \\<I>)\n     w", "have \"(\\<forall>I\\<in>\\<I>. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}) = ((\\<forall>I\\<in>{y. \\<exists>x\\<in>\\<I>. y = x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0}. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>I\\<in>\\<I>.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}) =\n    (\\<forall>I\\<in>{y. \\<exists>x\\<in>\\<I>.\n                           y =\n                           x \\<inter>\n                           reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0}.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})", "using assms[THEN limit_subseteq_reach(2), of \\<delta> q\\<^sub>0]"], ["proof (prove)\nusing this:\n  limit (run\\<^sub>t \\<delta> q\\<^sub>0 w)\n  \\<subseteq> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<forall>I\\<in>\\<I>.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}) =\n    (\\<forall>I\\<in>{y. \\<exists>x\\<in>\\<I>.\n                           y =\n                           x \\<inter>\n                           reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0}.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})", "by auto"], ["proof (state)\nthis:\n  (\\<forall>I\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}) =\n  (\\<forall>I\\<in>{y. \\<exists>x\\<in>\\<I>.\n                         y =\n                         x \\<inter>\n                         reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0}.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n      (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n      \\<I>)\n     w", "ultimately"], ["proof (chain)\npicking this:\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n   (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n   {})\n  (\\<forall>I\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}) =\n  (\\<forall>I\\<in>{y. \\<exists>x\\<in>\\<I>.\n                         y =\n                         x \\<inter>\n                         reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0}.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})", "show ?thesis"], ["proof (prove)\nusing this:\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n   (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n   {})\n  (\\<forall>I\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}) =\n  (\\<forall>I\\<in>{y. \\<exists>x\\<in>\\<I>.\n                         y =\n                         x \\<inter>\n                         reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0}.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n      (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n      \\<I>)\n     w", "unfolding accepting_pair\\<^sub>G\\<^sub>R_simp image_def"], ["proof (prove)\nusing this:\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n   (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n   {})\n  (\\<forall>I\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}) =\n  (\\<forall>I\\<in>{y. \\<exists>x\\<in>\\<I>.\n                         y =\n                         x \\<inter>\n                         reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0}.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})\n\ngoal (1 subgoal):\n 1. (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {} \\<and>\n     (\\<forall>I\\<in>\\<I>.\n         limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})) =\n    (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n     {} \\<and>\n     (\\<forall>I\\<in>{y. \\<exists>x\\<in>\\<I>.\n                            y =\n                            x \\<inter>\n                            reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0}.\n         limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {}))", "by meson"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w =\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n   (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n    (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n    \\<I>)\n   w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma accept\\<^sub>G\\<^sub>R_restrict:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x, g x) | x. P x}) w = accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) ` g x) | x. P x}) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x, g x) |x. P x}) w =\n    accept\\<^sub>G\\<^sub>R\n     (\\<delta>, q\\<^sub>0,\n      {(f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n        (\\<lambda>I. I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n        g x) |\n       x. P x})\n     w", "apply (simp only: accept\\<^sub>G\\<^sub>R_simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>(Fin, Inf)\\<in>{(f x, g x) |x. P x}.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Fin = {} \\<and>\n        (\\<forall>I\\<in>Inf.\n            limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq>\n            {})) =\n    (\\<exists>(Fin, Inf)\n              \\<in>{(f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n                     (\\<lambda>I.\n                         I \\<inter>\n                         reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n                     g x) |\n                    x. P x}.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Fin = {} \\<and>\n        (\\<forall>I\\<in>Inf.\n            limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq>\n            {}))", "apply (subst accepting_pair\\<^sub>G\\<^sub>R_restrict[OF assms, simplified])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>(Fin, Inf)\\<in>{(f x, g x) |x. P x}.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n        (Fin \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n        {} \\<and>\n        (\\<forall>I\\<in>Inf.\n            limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n            (I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) \\<noteq>\n            {})) =\n    (\\<exists>(Fin, Inf)\n              \\<in>{(f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n                     (\\<lambda>I.\n                         I \\<inter>\n                         reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n                     g x) |\n                    x. P x}.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> Fin = {} \\<and>\n        (\\<forall>I\\<in>Inf.\n            limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq>\n            {}))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a b.\n        (\\<exists>x. a = f x \\<and> b = g x \\<and> P x) \\<and>\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n        (a \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n        {} \\<and>\n        (\\<forall>I\\<in>b.\n            limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n            (I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) \\<noteq>\n            {})) =\n    (\\<exists>a b.\n        (\\<exists>x.\n            a =\n            f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0 \\<and>\n            b =\n            (\\<lambda>I.\n                I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n            g x \\<and>\n            P x) \\<and>\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> a = {} \\<and>\n        (\\<forall>I\\<in>b.\n            limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq>\n            {}))", "apply standard"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>a b.\n       (\\<exists>x. a = f x \\<and> b = g x \\<and> P x) \\<and>\n       limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n       (a \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n       {} \\<and>\n       (\\<forall>I\\<in>b.\n           limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n           (I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) \\<noteq>\n           {}) \\<Longrightarrow>\n    \\<exists>a b.\n       (\\<exists>x.\n           a = f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0 \\<and>\n           b =\n           (\\<lambda>I.\n               I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n           g x \\<and>\n           P x) \\<and>\n       limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> a = {} \\<and>\n       (\\<forall>I\\<in>b.\n           limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})\n 2. \\<exists>a b.\n       (\\<exists>x.\n           a = f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0 \\<and>\n           b =\n           (\\<lambda>I.\n               I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n           g x \\<and>\n           P x) \\<and>\n       limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> a = {} \\<and>\n       (\\<forall>I\\<in>b.\n           limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq>\n           {}) \\<Longrightarrow>\n    \\<exists>a b.\n       (\\<exists>x. a = f x \\<and> b = g x \\<and> P x) \\<and>\n       limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n       (a \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n       {} \\<and>\n       (\\<forall>I\\<in>b.\n           limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n           (I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) \\<noteq>\n           {})", "apply (metis (no_types, lifting) imageE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (\\<exists>x.\n           a = f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0 \\<and>\n           b =\n           (\\<lambda>I.\n               I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) `\n           g x \\<and>\n           P x) \\<and>\n       limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> a = {} \\<and>\n       (\\<forall>I\\<in>b.\n           limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq>\n           {}) \\<Longrightarrow>\n    \\<exists>a b.\n       (\\<exists>x. a = f x \\<and> b = g x \\<and> P x) \\<and>\n       limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n       (a \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) =\n       {} \\<and>\n       (\\<forall>I\\<in>b.\n           limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter>\n           (I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) \\<noteq>\n           {})", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma accepting_pair\\<^sub>R_restrict:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w = accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w =\n    accepting_pair\\<^sub>R \\<delta> q\\<^sub>0\n     (F \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n      I \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0)\n     w", "by (simp only: transfer_accept; subst accepting_pair\\<^sub>G\\<^sub>R_restrict[OF assms]; simp)"], ["", "lemma accept\\<^sub>R_restrict:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accept\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x, g x) | x. P x}) w = accept\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, g x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) | x. P x}) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>R (\\<delta>, q\\<^sub>0, {(f x, g x) |x. P x}) w =\n    accept\\<^sub>R\n     (\\<delta>, q\\<^sub>0,\n      {(f x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0,\n        g x \\<inter> reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) |\n       x. P x})\n     w", "by (simp only: accept\\<^sub>R_simp; subst accepting_pair\\<^sub>R_restrict[OF assms, simplified]; auto)"], ["", "subsection \\<open>Abstraction Lemmas\\<close>"], ["", "lemma accepting_pair\\<^sub>G\\<^sub>R_abstract:\n  assumes \"finite (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0)\" \n      and \"finite (reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0')\"\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  assumes \"run\\<^sub>t \\<delta> q\\<^sub>0 w = f o (run\\<^sub>t \\<delta>' q\\<^sub>0' w)\"\n  assumes \"\\<And>t. t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow> f t \\<in> F \\<longleftrightarrow> t \\<in> F'\"\n  assumes \"\\<And>t i. i \\<in> \\<I> \\<Longrightarrow> t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow> f t \\<in> I i \\<longleftrightarrow> t \\<in> I' i\"\n  shows \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, {I i | i. i \\<in> \\<I>}) w \\<longleftrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0' (F', {I' i | i. i \\<in> \\<I>}) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F, {I i |i. i \\<in> \\<I>}) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0'\n     (F', {I' i |i. i \\<in> \\<I>}) w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F, {I i |i. i \\<in> \\<I>}) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0'\n     (F', {I' i |i. i \\<in> \\<I>}) w", "have \"finite (range (run\\<^sub>t \\<delta> q\\<^sub>0 w))\" (is \"_ (range ?r)\") \n    and \"finite (range (run\\<^sub>t \\<delta>' q\\<^sub>0' w))\" (is \"_ (range ?r')\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range (run\\<^sub>t \\<delta> q\\<^sub>0 w)) &&&\n    finite (range (run\\<^sub>t \\<delta>' q\\<^sub>0' w))", "using assms(1,2,3) run_subseteq_reach(2)"], ["proof (prove)\nusing this:\n  finite (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0)\n  finite (reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0')\n  range w \\<subseteq> \\<Sigma>\n  range ?w \\<subseteq> ?\\<Sigma> \\<Longrightarrow>\n  range (run\\<^sub>t ?\\<delta> ?q\\<^sub>0 ?w)\n  \\<subseteq> reach\\<^sub>t ?\\<Sigma> ?\\<delta> ?q\\<^sub>0\n\ngoal (1 subgoal):\n 1. finite (range (run\\<^sub>t \\<delta> q\\<^sub>0 w)) &&&\n    finite (range (run\\<^sub>t \\<delta>' q\\<^sub>0' w))", "by (metis finite_subset)+"], ["proof (state)\nthis:\n  finite (range (run\\<^sub>t \\<delta> q\\<^sub>0 w))\n  finite (range (run\\<^sub>t \\<delta>' q\\<^sub>0' w))\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F, {I i |i. i \\<in> \\<I>}) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0'\n     (F', {I' i |i. i \\<in> \\<I>}) w", "then"], ["proof (chain)\npicking this:\n  finite (range (run\\<^sub>t \\<delta> q\\<^sub>0 w))\n  finite (range (run\\<^sub>t \\<delta>' q\\<^sub>0' w))", "obtain k where 1: \"limit ?r = range (suffix k ?r)\"\n    and 2: \"limit ?r' = range (suffix k ?r')\""], ["proof (prove)\nusing this:\n  finite (range (run\\<^sub>t \\<delta> q\\<^sub>0 w))\n  finite (range (run\\<^sub>t \\<delta>' q\\<^sub>0' w))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) =\n                 range (suffix k (run\\<^sub>t \\<delta> q\\<^sub>0 w));\n         limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) =\n         range (suffix k (run\\<^sub>t \\<delta>' q\\<^sub>0' w))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using common_range_limit"], ["proof (prove)\nusing this:\n  finite (range (run\\<^sub>t \\<delta> q\\<^sub>0 w))\n  finite (range (run\\<^sub>t \\<delta>' q\\<^sub>0' w))\n  \\<lbrakk>finite (range ?x); finite (range ?y);\n   \\<And>i.\n      \\<lbrakk>limit ?x = range (suffix i ?x);\n       limit ?y = range (suffix i ?y)\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) =\n                 range (suffix k (run\\<^sub>t \\<delta> q\\<^sub>0 w));\n         limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) =\n         range (suffix k (run\\<^sub>t \\<delta>' q\\<^sub>0' w))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) =\n  range (suffix k (run\\<^sub>t \\<delta> q\\<^sub>0 w))\n  limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) =\n  range (suffix k (run\\<^sub>t \\<delta>' q\\<^sub>0' w))\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F, {I i |i. i \\<in> \\<I>}) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0'\n     (F', {I' i |i. i \\<in> \\<I>}) w", "have X: \"limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) = f ` limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) =\n    f ` limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w)", "unfolding 1 2 suffix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. range (\\<lambda>n. run\\<^sub>t \\<delta> q\\<^sub>0 w (k + n)) =\n    f ` range (\\<lambda>n. run\\<^sub>t \\<delta>' q\\<^sub>0' w (k + n))", "by (auto simp add: assms(4))"], ["proof (state)\nthis:\n  limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) =\n  f ` limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F, {I i |i. i \\<in> \\<I>}) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0'\n     (F', {I' i |i. i \\<in> \\<I>}) w", "have 3: \"(limit ?r \\<inter> F = {}) \\<longleftrightarrow> (limit ?r' \\<inter> F' = {})\"\n    and 4: \"(\\<forall>i \\<in> \\<I>. limit ?r \\<inter> I i \\<noteq> {}) \\<longleftrightarrow> (\\<forall>i \\<in> \\<I>. limit ?r' \\<inter> I' i \\<noteq> {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n    (limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> F' = {}) &&&\n    (\\<forall>i\\<in>\\<I>.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I i \\<noteq> {}) =\n    (\\<forall>i\\<in>\\<I>.\n        limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> I' i \\<noteq>\n        {})", "using assms(5,6) limit_subseteq_reach(2)[OF assms(3)]"], ["proof (prove)\nusing this:\n  ?t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow>\n  (f ?t \\<in> F) = (?t \\<in> F')\n  \\<lbrakk>?i \\<in> \\<I>;\n   ?t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0'\\<rbrakk>\n  \\<Longrightarrow> (f ?t \\<in> I ?i) = (?t \\<in> I' ?i)\n  limit (run\\<^sub>t ?\\<delta> ?q\\<^sub>0 w)\n  \\<subseteq> reach\\<^sub>t \\<Sigma> ?\\<delta> ?q\\<^sub>0\n\ngoal (1 subgoal):\n 1. (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n    (limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> F' = {}) &&&\n    (\\<forall>i\\<in>\\<I>.\n        limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I i \\<noteq> {}) =\n    (\\<forall>i\\<in>\\<I>.\n        limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> I' i \\<noteq>\n        {})", "by (unfold X; fastforce)+"], ["proof (state)\nthis:\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n  (limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> F' = {})\n  (\\<forall>i\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I i \\<noteq> {}) =\n  (\\<forall>i\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> I' i \\<noteq> {})\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F, {I i |i. i \\<in> \\<I>}) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0'\n     (F', {I' i |i. i \\<in> \\<I>}) w", "thus ?thesis"], ["proof (prove)\nusing this:\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n  (limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> F' = {})\n  (\\<forall>i\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I i \\<noteq> {}) =\n  (\\<forall>i\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> I' i \\<noteq> {})\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (F, {I i |i. i \\<in> \\<I>}) w =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0'\n     (F', {I' i |i. i \\<in> \\<I>}) w", "unfolding accepting_pair\\<^sub>G\\<^sub>R_simp"], ["proof (prove)\nusing this:\n  (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {}) =\n  (limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> F' = {})\n  (\\<forall>i\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I i \\<noteq> {}) =\n  (\\<forall>i\\<in>\\<I>.\n      limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> I' i \\<noteq> {})\n\ngoal (1 subgoal):\n 1. (limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> F = {} \\<and>\n     (\\<forall>I\\<in>{I i |i. i \\<in> \\<I>}.\n         limit (run\\<^sub>t \\<delta> q\\<^sub>0 w) \\<inter> I \\<noteq> {})) =\n    (limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> F' = {} \\<and>\n     (\\<forall>I\\<in>{I' i |i. i \\<in> \\<I>}.\n         limit (run\\<^sub>t \\<delta>' q\\<^sub>0' w) \\<inter> I \\<noteq> {}))", "by blast"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n   (F, {I i |i. i \\<in> \\<I>}) w =\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0'\n   (F', {I' i |i. i \\<in> \\<I>}) w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma accepting_pair\\<^sub>R_abstract:\n  assumes \"finite (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0)\" \n      and \"finite (reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0')\"\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  assumes \"run\\<^sub>t \\<delta> q\\<^sub>0 w  = f o (run\\<^sub>t \\<delta>' q\\<^sub>0' w)\"\n  assumes \"\\<And>t. t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow> f t \\<in> F \\<longleftrightarrow> t \\<in> F'\"\n  assumes \"\\<And>t. t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow> f t \\<in> I \\<longleftrightarrow> t \\<in> I'\"\n  shows \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w \\<longleftrightarrow> accepting_pair\\<^sub>R \\<delta>' q\\<^sub>0' (F', I') w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w =\n    accepting_pair\\<^sub>R \\<delta>' q\\<^sub>0' (F', I') w", "using accepting_pair\\<^sub>G\\<^sub>R_abstract[OF assms(1-5), of UNIV \"\\<lambda>_. I\" \"\\<lambda>_. I'\"] assms(6)"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>t.\n              t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>'\n                       q\\<^sub>0' \\<Longrightarrow>\n              t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0';\n   \\<And>t i.\n      \\<lbrakk>i \\<in> UNIV;\n       t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0'\\<rbrakk>\n      \\<Longrightarrow> (f t \\<in> I) = (t \\<in> I')\\<rbrakk>\n  \\<Longrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n                     (F, {uu_. \\<exists>i. uu_ = I \\<and> i \\<in> UNIV}) w =\n                    accepting_pair\\<^sub>G\\<^sub>R \\<delta>' q\\<^sub>0'\n                     (F', {uu_. \\<exists>i. uu_ = I' \\<and> i \\<in> UNIV}) w\n  ?t \\<in> reach\\<^sub>t \\<Sigma> \\<delta>' q\\<^sub>0' \\<Longrightarrow>\n  (f ?t \\<in> I) = (?t \\<in> I')\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (F, I) w =\n    accepting_pair\\<^sub>R \\<delta>' q\\<^sub>0' (F', I') w", "by simp"], ["", "subsection \\<open>LTS Lemmas\\<close>"], ["", "lemma accepting_pair\\<^sub>G\\<^sub>R_LTS:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w \\<longleftrightarrow> accepting_pair\\<^sub>G\\<^sub>R_LTS (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\" \n  (is \"?lhs \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w =\n    accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n 2. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n 2. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "assume ?lhs"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w\n\ngoal (2 subgoals):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n 2. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "moreover"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w\n\ngoal (2 subgoals):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n 2. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "have \"LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w (run \\<delta> q\\<^sub>0 w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\n     (run \\<delta> q\\<^sub>0 w)", "unfolding LTS_is_inf_run_def reach\\<^sub>t_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (run \\<delta> q\\<^sub>0 w i, w i, run \\<delta> q\\<^sub>0 w (Suc i))\n       \\<in> {run\\<^sub>t \\<delta> q\\<^sub>0 w n |w n.\n              range w \\<subseteq> \\<Sigma>}", "using assms(1)"], ["proof (prove)\nusing this:\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       (run \\<delta> q\\<^sub>0 w i, w i, run \\<delta> q\\<^sub>0 w (Suc i))\n       \\<in> {run\\<^sub>t \\<delta> q\\<^sub>0 w n |w n.\n              range w \\<subseteq> \\<Sigma>}", "by auto"], ["proof (state)\nthis:\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\n   (run \\<delta> q\\<^sub>0 w)\n\ngoal (2 subgoals):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n 2. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "moreover"], ["proof (state)\nthis:\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\n   (run \\<delta> q\\<^sub>0 w)\n\ngoal (2 subgoals):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n 2. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "have \"run \\<delta> q\\<^sub>0 w 0 = q\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. run \\<delta> q\\<^sub>0 w 0 = q\\<^sub>0", "by simp"], ["proof (state)\nthis:\n  run \\<delta> q\\<^sub>0 w 0 = q\\<^sub>0\n\ngoal (2 subgoals):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n 2. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "ultimately"], ["proof (chain)\npicking this:\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\n   (run \\<delta> q\\<^sub>0 w)\n  run \\<delta> q\\<^sub>0 w 0 = q\\<^sub>0", "show ?rhs"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\n   (run \\<delta> q\\<^sub>0 w)\n  run \\<delta> q\\<^sub>0 w 0 = q\\<^sub>0\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w", "unfolding accept\\<^sub>G\\<^sub>R_simp accept\\<^sub>G\\<^sub>R_LTS.simps accepting_pair\\<^sub>G\\<^sub>R_simp run\\<^sub>t.simps limit_def accepting_pair\\<^sub>G\\<^sub>R_LTS_def snd_conv fst_conv"], ["proof (prove)\nusing this:\n  {a. \\<exists>\\<^sub>\\<infinity>n.\n         (run \\<delta> q\\<^sub>0 w n, w n,\n          run \\<delta> q\\<^sub>0 w (Suc n)) =\n         a} \\<inter>\n  F =\n  {} \\<and>\n  (\\<forall>I\\<in>\\<I>.\n      {a. \\<exists>\\<^sub>\\<infinity>n.\n             (run \\<delta> q\\<^sub>0 w n, w n,\n              run \\<delta> q\\<^sub>0 w (Suc n)) =\n             a} \\<inter>\n      I \\<noteq>\n      {})\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\n   (run \\<delta> q\\<^sub>0 w)\n  run \\<delta> q\\<^sub>0 w 0 = q\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<exists>r.\n       LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r \\<and>\n       r 0 = q\\<^sub>0 \\<and>\n       {a. \\<exists>\\<^sub>\\<infinity>n. (r n, w n, r (Suc n)) = a} \\<inter>\n       F =\n       {} \\<and>\n       (\\<forall>I\\<in>\\<I>.\n           {a. \\<exists>\\<^sub>\\<infinity>n.\n                  (r n, w n, r (Suc n)) = a} \\<inter>\n           I \\<noteq>\n           {})", "by blast"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R_LTS\n   (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "}"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>)\n   w \\<Longrightarrow>\n  accepting_pair\\<^sub>G\\<^sub>R_LTS\n   (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "{"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>)\n   w \\<Longrightarrow>\n  accepting_pair\\<^sub>G\\<^sub>R_LTS\n   (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "assume ?rhs"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R_LTS\n   (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "then"], ["proof (chain)\npicking this:\n  accepting_pair\\<^sub>G\\<^sub>R_LTS\n   (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w", "obtain r where \"LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r\"\n      and \"r 0 = q\\<^sub>0\"\n      and \"limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> F = {}\"\n      and \"\\<And>I. I \\<in> \\<I> \\<Longrightarrow> limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> I \\<noteq> {}\""], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>G\\<^sub>R_LTS\n   (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>) w\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0)\n                  w r;\n         r 0 = q\\<^sub>0;\n         limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> F = {};\n         \\<And>I.\n            I \\<in> \\<I> \\<Longrightarrow>\n            limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> I \\<noteq>\n            {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding accepting_pair\\<^sub>G\\<^sub>R_LTS_def"], ["proof (prove)\nusing this:\n  \\<exists>r.\n     LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r \\<and>\n     r 0 = q\\<^sub>0 \\<and>\n     limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> fst (F, \\<I>) =\n     {} \\<and>\n     (\\<forall>I\\<in>snd (F, \\<I>).\n         limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> I \\<noteq> {})\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0)\n                  w r;\n         r 0 = q\\<^sub>0;\n         limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> F = {};\n         \\<And>I.\n            I \\<in> \\<I> \\<Longrightarrow>\n            limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> I \\<noteq>\n            {}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r\n  r 0 = q\\<^sub>0\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> F = {}\n  ?I \\<in> \\<I> \\<Longrightarrow>\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> ?I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "moreover"], ["proof (state)\nthis:\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r\n  r 0 = q\\<^sub>0\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> F = {}\n  ?I \\<in> \\<I> \\<Longrightarrow>\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> ?I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "{"], ["proof (state)\nthis:\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r\n  r 0 = q\\<^sub>0\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> F = {}\n  ?I \\<in> \\<I> \\<Longrightarrow>\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> ?I \\<noteq> {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "from \\<open>r 0 = q\\<^sub>0\\<close> \\<open>LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r\\<close>"], ["proof (chain)\npicking this:\n  r 0 = q\\<^sub>0\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r", "have \"r i = run \\<delta> q\\<^sub>0 w i\""], ["proof (prove)\nusing this:\n  r 0 = q\\<^sub>0\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r\n\ngoal (1 subgoal):\n 1. r i = run \\<delta> q\\<^sub>0 w i", "by (induction i; simp_all add: LTS_is_inf_run_def reach\\<^sub>t_def) metis"], ["proof (state)\nthis:\n  r i = run \\<delta> q\\<^sub>0 w i\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "}"], ["proof (state)\nthis:\n  r ?i2 = run \\<delta> q\\<^sub>0 w ?i2\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "hence \"r = run \\<delta> q\\<^sub>0 w\""], ["proof (prove)\nusing this:\n  r ?i2 = run \\<delta> q\\<^sub>0 w ?i2\n\ngoal (1 subgoal):\n 1. r = run \\<delta> q\\<^sub>0 w", "by blast"], ["proof (state)\nthis:\n  r = run \\<delta> q\\<^sub>0 w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "hence \"(\\<lambda>i. (r i, w i, r (Suc i))) = run\\<^sub>t \\<delta> q\\<^sub>0 w\""], ["proof (prove)\nusing this:\n  r = run \\<delta> q\\<^sub>0 w\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. (r i, w i, r (Suc i))) = run\\<^sub>t \\<delta> q\\<^sub>0 w", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>i. (r i, w i, r (Suc i))) = run\\<^sub>t \\<delta> q\\<^sub>0 w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n     w \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "ultimately"], ["proof (chain)\npicking this:\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r\n  r 0 = q\\<^sub>0\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> F = {}\n  ?I \\<in> \\<I> \\<Longrightarrow>\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> ?I \\<noteq> {}\n  (\\<lambda>i. (r i, w i, r (Suc i))) = run\\<^sub>t \\<delta> q\\<^sub>0 w", "show ?lhs"], ["proof (prove)\nusing this:\n  LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w r\n  r 0 = q\\<^sub>0\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> F = {}\n  ?I \\<in> \\<I> \\<Longrightarrow>\n  limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> ?I \\<noteq> {}\n  (\\<lambda>i. (r i, w i, r (Suc i))) = run\\<^sub>t \\<delta> q\\<^sub>0 w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w", "by auto"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R_LTS\n   (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (F, \\<I>)\n   w \\<Longrightarrow>\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (F, \\<I>) w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma accept\\<^sub>G\\<^sub>R_LTS:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> accept\\<^sub>G\\<^sub>R_LTS (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, q\\<^sub>0, \\<alpha>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w =\n    accept\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, q\\<^sub>0, \\<alpha>) w", "unfolding accept\\<^sub>G\\<^sub>R_def fst_conv snd_conv accepting_pair\\<^sub>G\\<^sub>R_LTS[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>(Fin, Inf)\\<in>\\<alpha>.\n        accepting_pair\\<^sub>G\\<^sub>R_LTS\n         (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) q\\<^sub>0 (Fin, Inf)\n         w) =\n    accept\\<^sub>G\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, q\\<^sub>0, \\<alpha>) w", "by simp"], ["", "lemma accept\\<^sub>R_LTS:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"accept\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w \\<longleftrightarrow> accept\\<^sub>R_LTS (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, q\\<^sub>0, \\<alpha>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w =\n    accept\\<^sub>R_LTS\n     (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0, q\\<^sub>0, \\<alpha>) w", "unfolding transfer_accept accept\\<^sub>G\\<^sub>R_LTS.simps accept\\<^sub>R_LTS.simps accept\\<^sub>G\\<^sub>R_LTS[OF assms] case_prod_unfold accepting_pair\\<^sub>G\\<^sub>R_LTS_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>p\\<in>(\\<lambda>p. (fst p, {snd p})) ` \\<alpha>.\n        \\<exists>r.\n           LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\n            r \\<and>\n           r 0 = q\\<^sub>0 \\<and>\n           limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter>\n           fst (fst p, snd p) =\n           {} \\<and>\n           (\\<forall>I\\<in>snd (fst p, snd p).\n               limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> I \\<noteq>\n               {})) =\n    (\\<exists>p\\<in>\\<alpha>.\n        \\<exists>r.\n           LTS_is_inf_run (reach\\<^sub>t \\<Sigma> \\<delta> q\\<^sub>0) w\n            r \\<and>\n           r 0 = q\\<^sub>0 \\<and>\n           limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> fst p =\n           {} \\<and>\n           limit (\\<lambda>i. (r i, w i, r (Suc i))) \\<inter> snd p \\<noteq>\n           {})", "by simp"], ["", "subsection \\<open>Combination Lemmas\\<close>"], ["", "lemma combine_rabin_pairs: \n  \"(\\<And>x. x \\<in> I \\<Longrightarrow> accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (f x, g x) w) \\<Longrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (\\<Union>{f x | x. x \\<in> I}, {g x | x. x \\<in> I}) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> I \\<Longrightarrow>\n        accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (f x, g x)\n         w) \\<Longrightarrow>\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (\\<Union> {f x |x. x \\<in> I}, {g x |x. x \\<in> I}) w", "by auto"], ["", "lemma combine_rabin_pairs_UNIV: \n  \"accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (fin, UNIV) w \\<Longrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (fin', inf') w \\<Longrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (fin \\<union> fin', inf') w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 (fin, UNIV) w;\n     accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (fin', inf')\n      w\\<rbrakk>\n    \\<Longrightarrow> accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n                       (fin \\<union> fin', inf') w", "by auto"], ["", "end"]]}