{"file_name": "/home/qj213/afp-2021-10-22/thys/LTL_to_DRA/LTL_Rabin.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LTL_to_DRA", "problem_names": ["lemma run_af_G_letter_abs_eq_Abs_af_G_letter:\n  \"run \\<up>af\\<^sub>G (Abs \\<phi>) w i = Abs (run af_G_letter \\<phi> w i)\"", "lemma finite_reach_af:\n  \"finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))\"", "lemma ltl_semi_mojmir: \n  assumes \"finite \\<Sigma>\"\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"semi_mojmir \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>) w\"", "lemma Rep_token_run_af:\n  \"Rep (token_run x n) \\<equiv>\\<^sub>P af\\<^sub>G \\<phi> (w [x \\<rightarrow> n])\"", "lemma ltl_to_rabin_correct_exposed':\n  \"\\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w \\<longleftrightarrow> accept\"", "lemma ltl_to_rabin_correct_exposed:\n  \"\\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w \\<longleftrightarrow> accept\\<^sub>R (\\<delta>\\<^sub>R, q\\<^sub>R, {Acc\\<^sub>R i | i. i < max_rank\\<^sub>R}) w\"", "lemmas max_rank_lowerbound = max_rank_lowerbound", "lemmas state_rank_step_foldl = state_rank_step_foldl", "lemmas smallest_accepting_rank_properties = smallest_accepting_rank_properties", "lemmas wellformed_\\<R> = wellformed_\\<R>", "lemma ltl_to_rabin_correct:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"w \\<Turnstile> F G \\<phi> = (\\<exists>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>). G \\<phi> \\<in> \\<G> \\<and> (\\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w))\"", "lemma \\<F>_eq_\\<S>:\n  assumes finite_\\<Sigma>: \"finite \\<Sigma>\"\n  assumes bounded_w: \"range w \\<subseteq> \\<Sigma>\"\n  assumes \"closed \\<G> w\"\n  assumes \"G \\<psi> \\<in> \\<G>\"\n  shows \"\\<forall>\\<^sub>\\<infinity>j. (\\<forall>S. (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and> \\<G> \\<subseteq> S) \\<longleftrightarrow> (\\<forall>q. q \\<in> (ltl_FG_to_rabin_def.\\<S>\\<^sub>R \\<Sigma> \\<psi> \\<G> w j) \\<longrightarrow> S \\<Turnstile>\\<^sub>P Rep q))\"", "lemma \\<F>_eq_\\<S>_generalized:\n  assumes finite_\\<Sigma>: \"finite \\<Sigma>\"\n  assumes bounded_w: \"range w \\<subseteq> \\<Sigma>\"\n  assumes \"closed \\<G> w\"\n  shows \"\\<forall>\\<^sub>\\<infinity>j. \\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> (\\<forall>S. (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and> \\<G> \\<subseteq> S) \\<longleftrightarrow> (\\<forall>q. q \\<in> (ltl_FG_to_rabin_def.\\<S>\\<^sub>R \\<Sigma> \\<psi> \\<G>) w j \\<longrightarrow> S \\<Turnstile>\\<^sub>P Rep q))\"", "lemma combine_pairs_prop: \n  \"(\\<forall>P \\<in> \\<P>. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w) = accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (combine_pairs \\<P>) w\"", "lemma combine_pairs2:\n  \"combine_pairs \\<P> \\<in> \\<alpha> \\<Longrightarrow> (\\<And>P. P \\<in> \\<P> \\<Longrightarrow> accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w ) \\<Longrightarrow> accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w\"", "lemma combine_pairs'_prop: \n  \"(\\<forall>P \\<in> \\<P>. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w) = accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (combine_pairs' \\<P>) w\"", "lemma ltl_FG_to_generalized_rabin_wellformed:\n  \"finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\"", "theorem ltl_FG_to_generalized_rabin_correct:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"w \\<Turnstile> F G \\<phi> = accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\"\n  (is \"?lhs = ?rhs\")", "lemma semi_mojmir:\n  \"semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w\"", "lemma finite_reach:\n  \"finite (reach \\<Sigma> (delta \\<Sigma>) (initial \\<phi>))\"", "lemma run_limit_not_empty:\n  \"limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<noteq> {}\"", "lemma run_properties:\n  fixes \\<phi>\n  defines \"r \\<equiv> run (delta \\<Sigma>) (initial \\<phi>) w\"\n  shows \"fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (w [0 \\<rightarrow> i])\"\n    and \"\\<And>\\<chi> q. \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow> the (snd (r i) \\<chi>) q = semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i\"", "lemma accept\\<^sub>G\\<^sub>R_I:\n  assumes \"accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\"\n  obtains \\<pi> where \"dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\" \n    and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\"\n    and \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (M_fin \\<pi>, UNIV) w\"\n    and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> \\<chi>) w\"", "lemma Acc_property:\n  \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w \\<longleftrightarrow> accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> (\\<MM>.Acc\\<^sub>\\<R> (the (\\<pi> (G \\<psi>)))) w\"\n  (is \"?Acc = ?Acc\\<^sub>\\<R>\")", "lemma Acc_to_rabin_accept:\n  \"\\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w; the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk> \\<Longrightarrow> accept\\<^sub>R \\<MM>.\\<R> w\"", "lemma Acc_to_mojmir_accept:\n  \"\\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w; the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk> \\<Longrightarrow> \\<MM>.accept\"", "lemma rabin_accept_to_Acc:\n  \"\\<lbrakk>accept\\<^sub>R \\<MM>.\\<R> w; \\<pi> (G \\<psi>) = \\<MM>.smallest_accepting_rank\\<rbrakk> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w\"", "lemma mojmir_accept_to_Acc:\n  \"\\<lbrakk>\\<MM>.accept; \\<pi> (G \\<psi>) = \\<MM>.smallest_accepting_rank\\<rbrakk> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w\"", "lemma normalize_\\<pi>:\n  assumes dom_subset: \"dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\"\n  assumes \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\"\n  assumes \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (M_fin \\<pi>, UNIV) w\"\n  assumes \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> \\<chi>) w\"\n  obtains \\<pi>\\<^sub>\\<A> where \"dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\"\n    and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow> \\<pi>\\<^sub>\\<A> \\<chi> = mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}\"\n    and \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\" \n    and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\"", "theorem ltl_to_generalized_rabin_correct:\n  \"w \\<Turnstile> \\<phi> = accept\\<^sub>G\\<^sub>R (ltl_to_generalized_rabin \\<Sigma> \\<phi>) w\"\n  (is \"?lhs = ?rhs\")", "lemma ltl_to_generalized_rabin_af_wellformed:\n  \"finite \\<Sigma> \\<Longrightarrow> range w \\<subseteq> \\<Sigma> \\<Longrightarrow> ltl_to_rabin_af \\<Sigma> w\"", "theorem ltl_to_generalized_rabin_af_correct:\n  assumes \"finite \\<Sigma>\"\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"w \\<Turnstile> \\<phi> = accept\\<^sub>G\\<^sub>R (ltl_to_generalized_rabin_af \\<Sigma> \\<phi>) w\""], "translations": [["", "lemma run_af_G_letter_abs_eq_Abs_af_G_letter:\n  \"run \\<up>af\\<^sub>G (Abs \\<phi>) w i = Abs (run af_G_letter \\<phi> w i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. run \\<up>af\\<^sub>G (Abs \\<phi>) w i = Abs (run af_G_letter \\<phi> w i)", "by (induction i) (simp, metis af_G_abs.f_foldl_abs.abs_eq af_G_abs.f_foldl_abs_alt_def run_foldl af_G_letter_abs_def)"], ["", "lemma finite_reach_af:\n  \"finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))", "proof (cases \"\\<Sigma> \\<noteq> {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))\n 2. \\<not> \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))", "case True"], ["proof (state)\nthis:\n  \\<Sigma> \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))\n 2. \\<not> \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Sigma> \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))", "using af_abs.finite_abs_reach"], ["proof (prove)\nusing this:\n  \\<Sigma> \\<noteq> {}\n  finite (af_abs.abs_reach (Abs ?\\<phi>))\n\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))", "unfolding af_abs.abs_reach_def reach_foldl_def[OF True]"], ["proof (prove)\nusing this:\n  \\<Sigma> \\<noteq> {}\n  finite {foldl af_abs.f_abs (Abs ?\\<phi>) w |w. True}\n\ngoal (1 subgoal):\n 1. finite {foldl \\<up>af (Abs \\<phi>) w |w. set w \\<subseteq> \\<Sigma>}", "using finite_subset[of \"{foldl \\<up>af (Abs \\<phi>) w |w. set w \\<subseteq> \\<Sigma>}\" \"{foldl \\<up>af(Abs \\<phi>) w |w. True}\"]"], ["proof (prove)\nusing this:\n  \\<Sigma> \\<noteq> {}\n  finite {foldl af_abs.f_abs (Abs ?\\<phi>) w |w. True}\n  \\<lbrakk>{foldl \\<up>af (Abs \\<phi>) w |w. set w \\<subseteq> \\<Sigma>}\n           \\<subseteq> {foldl \\<up>af (Abs \\<phi>) w |w. True};\n   finite {foldl \\<up>af (Abs \\<phi>) w |w. True}\\<rbrakk>\n  \\<Longrightarrow> finite\n                     {foldl \\<up>af (Abs \\<phi>) w |w.\n                      set w \\<subseteq> \\<Sigma>}\n\ngoal (1 subgoal):\n 1. finite {foldl \\<up>af (Abs \\<phi>) w |w. set w \\<subseteq> \\<Sigma>}", "unfolding af_letter_abs_def"], ["proof (prove)\nusing this:\n  \\<Sigma> \\<noteq> {}\n  finite {foldl af_abs.f_abs (Abs ?\\<phi>) w |w. True}\n  \\<lbrakk>{foldl af_abs.f_abs (Abs \\<phi>) w |w.\n            set w \\<subseteq> \\<Sigma>}\n           \\<subseteq> {foldl af_abs.f_abs (Abs \\<phi>) w |w. True};\n   finite {foldl af_abs.f_abs (Abs \\<phi>) w |w. True}\\<rbrakk>\n  \\<Longrightarrow> finite\n                     {foldl af_abs.f_abs (Abs \\<phi>) w |w.\n                      set w \\<subseteq> \\<Sigma>}\n\ngoal (1 subgoal):\n 1. finite\n     {foldl af_abs.f_abs (Abs \\<phi>) w |w. set w \\<subseteq> \\<Sigma>}", "by (blast)"], ["proof (state)\nthis:\n  finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<not> \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))", "qed (simp add: reach_def)"], ["", "lemma ltl_semi_mojmir: \n  assumes \"finite \\<Sigma>\"\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"semi_mojmir \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semi_mojmir \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>) w", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. finite \\<Sigma>\n 2. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))\n 3. range w \\<subseteq> \\<Sigma>", "fix \\<psi>"], ["proof (state)\ngoal (3 subgoals):\n 1. finite \\<Sigma>\n 2. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))\n 3. range w \\<subseteq> \\<Sigma>", "have nonempty_\\<Sigma>: \"\\<Sigma> \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sigma> \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. \\<Sigma> \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  \\<Sigma> \\<noteq> {}\n\ngoal (3 subgoals):\n 1. finite \\<Sigma>\n 2. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))\n 3. range w \\<subseteq> \\<Sigma>", "show \"finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))\" (is \"finite ?A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))", "using af_G_abs.finite_abs_reach finite_subset[where A = ?A, where B = \"lift_ltl_transformer.abs_reach af_G_letter (Abs \\<psi>)\"]"], ["proof (prove)\nusing this:\n  finite (af_G_abs.abs_reach (Abs ?\\<phi>))\n  \\<lbrakk>reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n           \\<subseteq> af_G_abs.abs_reach (Abs \\<psi>);\n   finite (af_G_abs.abs_reach (Abs \\<psi>))\\<rbrakk>\n  \\<Longrightarrow> finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))\n\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))", "unfolding af_G_abs.abs_reach_def af_G_letter_abs_def reach_foldl_def[OF nonempty_\\<Sigma>]"], ["proof (prove)\nusing this:\n  finite {foldl af_G_abs.f_abs (Abs ?\\<phi>) w |w. True}\n  \\<lbrakk>{foldl af_G_abs.f_abs (Abs \\<psi>) w |w.\n            set w \\<subseteq> \\<Sigma>}\n           \\<subseteq> {foldl af_G_abs.f_abs (Abs \\<psi>) w |w. True};\n   finite {foldl af_G_abs.f_abs (Abs \\<psi>) w |w. True}\\<rbrakk>\n  \\<Longrightarrow> finite\n                     {foldl af_G_abs.f_abs (Abs \\<psi>) w |w.\n                      set w \\<subseteq> \\<Sigma>}\n\ngoal (1 subgoal):\n 1. finite\n     {foldl af_G_abs.f_abs (Abs \\<psi>) w |w. set w \\<subseteq> \\<Sigma>}", "by blast"], ["proof (state)\nthis:\n  finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))\n\ngoal (2 subgoals):\n 1. finite \\<Sigma>\n 2. range w \\<subseteq> \\<Sigma>", "qed (insert assms, auto)"], ["", "subsection \\<open>Single Secondary Automaton\\<close>"], ["", "locale ltl_FG_to_rabin_def = \n  fixes \n    \\<Sigma> :: \"'a set set\"\n  fixes\n    \\<phi> :: \"'a ltl\"\n  fixes\n    \\<G> :: \"'a ltl set\"\n  fixes \n    w :: \"'a set word\"\nbegin"], ["", "sublocale mojmir_to_rabin_def \\<Sigma> \"\\<up>af\\<^sub>G\" \"Abs \\<phi>\" w \"{q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\""], ["proof (prove)\ngoal:\nNo subgoals!", ".\n\n\\<comment> \\<open>Import abbreviations from parent locale to simplify terms\\<close>"], ["", "abbreviation \"\\<delta>\\<^sub>R \\<equiv> step\""], ["", "abbreviation \"q\\<^sub>R \\<equiv> initial\""], ["", "abbreviation \"Acc\\<^sub>R j \\<equiv> (fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j)\""], ["", "abbreviation \"max_rank\\<^sub>R \\<equiv> max_rank\""], ["", "abbreviation \"smallest_accepting_rank\\<^sub>R \\<equiv> smallest_accepting_rank\""], ["", "abbreviation \"accept\\<^sub>R' \\<equiv> accept\""], ["", "abbreviation \"\\<S>\\<^sub>R \\<equiv> \\<S>\""], ["", "lemma Rep_token_run_af:\n  \"Rep (token_run x n) \\<equiv>\\<^sub>P af\\<^sub>G \\<phi> (w [x \\<rightarrow> n])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep (token_run x n) \\<equiv>\\<^sub>P\n    af\\<^sub>G \\<phi> (w [x \\<rightarrow> n])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Rep (token_run x n) \\<equiv>\\<^sub>P\n    af\\<^sub>G \\<phi> (w [x \\<rightarrow> n])", "have \"token_run x n = Abs (af\\<^sub>G \\<phi> ((suffix x w) [0 \\<rightarrow> (n - x)]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. token_run x n = Abs (af\\<^sub>G \\<phi> (prefix (n - x) (suffix x w)))", "by (simp add: subsequence_def run_foldl; metis af_G_abs.f_foldl_abs.abs_eq af_G_abs.f_foldl_abs_alt_def af_G_letter_abs_def)"], ["proof (state)\nthis:\n  token_run x n = Abs (af\\<^sub>G \\<phi> (prefix (n - x) (suffix x w)))\n\ngoal (1 subgoal):\n 1. Rep (token_run x n) \\<equiv>\\<^sub>P\n    af\\<^sub>G \\<phi> (w [x \\<rightarrow> n])", "hence \"Rep (token_run x n) \\<equiv>\\<^sub>P af\\<^sub>G \\<phi> ((suffix x w) [0 \\<rightarrow> (n - x)])\""], ["proof (prove)\nusing this:\n  token_run x n = Abs (af\\<^sub>G \\<phi> (prefix (n - x) (suffix x w)))\n\ngoal (1 subgoal):\n 1. Rep (token_run x n) \\<equiv>\\<^sub>P\n    af\\<^sub>G \\<phi> (prefix (n - x) (suffix x w))", "using ltl\\<^sub>P_abs_rep ltl_prop_equiv_quotient.abs_eq_iff"], ["proof (prove)\nusing this:\n  token_run x n = Abs (af\\<^sub>G \\<phi> (prefix (n - x) (suffix x w)))\n  Abs (Rep ?\\<phi>) = ?\\<phi>\n  (Abs ?x = Abs ?y) = ?x \\<equiv>\\<^sub>P ?y\n\ngoal (1 subgoal):\n 1. Rep (token_run x n) \\<equiv>\\<^sub>P\n    af\\<^sub>G \\<phi> (prefix (n - x) (suffix x w))", "by auto"], ["proof (state)\nthis:\n  Rep (token_run x n) \\<equiv>\\<^sub>P\n  af\\<^sub>G \\<phi> (prefix (n - x) (suffix x w))\n\ngoal (1 subgoal):\n 1. Rep (token_run x n) \\<equiv>\\<^sub>P\n    af\\<^sub>G \\<phi> (w [x \\<rightarrow> n])", "thus ?thesis"], ["proof (prove)\nusing this:\n  Rep (token_run x n) \\<equiv>\\<^sub>P\n  af\\<^sub>G \\<phi> (prefix (n - x) (suffix x w))\n\ngoal (1 subgoal):\n 1. Rep (token_run x n) \\<equiv>\\<^sub>P\n    af\\<^sub>G \\<phi> (w [x \\<rightarrow> n])", "unfolding ltl_prop_equiv_def subsequence_shift"], ["proof (prove)\nusing this:\n  \\<forall>\\<A>.\n     \\<A> \\<Turnstile>\\<^sub>P Rep (token_run x n) =\n     \\<A> \\<Turnstile>\\<^sub>P\n     af\\<^sub>G \\<phi> (w [x + 0 \\<rightarrow> x + (n - x)])\n\ngoal (1 subgoal):\n 1. \\<forall>\\<A>.\n       \\<A> \\<Turnstile>\\<^sub>P Rep (token_run x n) =\n       \\<A> \\<Turnstile>\\<^sub>P af\\<^sub>G \\<phi> (w [x \\<rightarrow> n])", "by (cases \"x \\<le> n\"; simp add: subsequence_def)"], ["proof (state)\nthis:\n  Rep (token_run x n) \\<equiv>\\<^sub>P\n  af\\<^sub>G \\<phi> (w [x \\<rightarrow> n])\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale ltl_FG_to_rabin = ltl_FG_to_rabin_def +\n  assumes \n    wellformed_\\<G>: \"Only_G \\<G>\"\n  assumes\n    bounded_w: \"range w \\<subseteq> \\<Sigma>\"\n  assumes\n    finite_\\<Sigma>: \"finite \\<Sigma>\"\nbegin"], ["", "sublocale mojmir_to_rabin \\<Sigma> \"\\<up>af\\<^sub>G\" \"Abs \\<phi>\" w \"{q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mojmir_to_rabin \\<Sigma> \\<up>af\\<^sub>G (Abs \\<phi>) w\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. finite \\<Sigma>\n 2. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<phi>))\n 3. range w \\<subseteq> \\<Sigma>\n 4. \\<And>q \\<nu>.\n       q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n       \\<up>af\\<^sub>G q \\<nu> \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "show \"\\<And>q \\<nu>. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow> \\<up>af\\<^sub>Gq \\<nu> \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q \\<nu>.\n       q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n       \\<up>af\\<^sub>G q \\<nu> \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "using wellformed_\\<G> af_G_letter_sat_core_lifted"], ["proof (prove)\nusing this:\n  Only_G \\<G>\n  \\<lbrakk>Only_G ?\\<G>; ?\\<G> \\<Turnstile>\\<^sub>P Rep ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?\\<G> \\<Turnstile>\\<^sub>P\n                    Rep (\\<up>af\\<^sub>G ?\\<phi> ?\\<nu>)\n\ngoal (1 subgoal):\n 1. \\<And>q \\<nu>.\n       q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n       \\<up>af\\<^sub>G q \\<nu> \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "by auto"], ["proof (state)\nthis:\n  ?q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n  \\<up>af\\<^sub>G ?q ?\\<nu> \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (3 subgoals):\n 1. finite \\<Sigma>\n 2. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<phi>))\n 3. range w \\<subseteq> \\<Sigma>", "have nonempty_\\<Sigma>: \"\\<Sigma> \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sigma> \\<noteq> {}", "using bounded_w"], ["proof (prove)\nusing this:\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. \\<Sigma> \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  \\<Sigma> \\<noteq> {}\n\ngoal (3 subgoals):\n 1. finite \\<Sigma>\n 2. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<phi>))\n 3. range w \\<subseteq> \\<Sigma>", "show \"finite (reach \\<Sigma> \\<up>af\\<^sub>G(Abs \\<phi>))\" (is \"finite ?A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<phi>))", "using af_G_abs.finite_abs_reach finite_subset[where A = ?A, where B = \"lift_ltl_transformer.abs_reach af_G_letter (Abs \\<phi>)\"]"], ["proof (prove)\nusing this:\n  finite (af_G_abs.abs_reach (Abs ?\\<phi>))\n  \\<lbrakk>reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<phi>)\n           \\<subseteq> af_G_abs.abs_reach (Abs \\<phi>);\n   finite (af_G_abs.abs_reach (Abs \\<phi>))\\<rbrakk>\n  \\<Longrightarrow> finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<phi>))\n\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<phi>))", "unfolding af_G_abs.abs_reach_def af_G_letter_abs_def reach_foldl_def[OF nonempty_\\<Sigma>]"], ["proof (prove)\nusing this:\n  finite {foldl af_G_abs.f_abs (Abs ?\\<phi>) w |w. True}\n  \\<lbrakk>{foldl af_G_abs.f_abs (Abs \\<phi>) w |w.\n            set w \\<subseteq> \\<Sigma>}\n           \\<subseteq> {foldl af_G_abs.f_abs (Abs \\<phi>) w |w. True};\n   finite {foldl af_G_abs.f_abs (Abs \\<phi>) w |w. True}\\<rbrakk>\n  \\<Longrightarrow> finite\n                     {foldl af_G_abs.f_abs (Abs \\<phi>) w |w.\n                      set w \\<subseteq> \\<Sigma>}\n\ngoal (1 subgoal):\n 1. finite\n     {foldl af_G_abs.f_abs (Abs \\<phi>) w |w. set w \\<subseteq> \\<Sigma>}", "by blast"], ["proof (state)\nthis:\n  finite (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<phi>))\n\ngoal (2 subgoals):\n 1. finite \\<Sigma>\n 2. range w \\<subseteq> \\<Sigma>", "qed (insert finite_\\<Sigma> bounded_w)"], ["", "lemma ltl_to_rabin_correct_exposed':\n  \"\\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w \\<longleftrightarrow> accept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "have \"(\\<exists>j. \\<G> \\<Turnstile>\\<^sub>P af\\<^sub>G \\<phi> (map w [i + 0..<i + (j - i)])) = \\<PP> \\<phi> \\<G> w i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        af\\<^sub>G \\<phi> (map w [i + 0..<i + (j - i)])) =\n    \\<PP> \\<phi> \\<G> w i", "by (auto simp add: subsequence_def, metis add_diff_cancel_left' le_Suc_ex nat_le_linear upt_conv_Nil )"], ["proof (state)\nthis:\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      af\\<^sub>G \\<phi> (map w [i + 0..<i + (j - i)])) =\n  \\<PP> \\<phi> \\<G> w i\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "hence \"(\\<exists>j. \\<G> \\<Turnstile>\\<^sub>P af\\<^sub>G \\<phi> (w [i \\<rightarrow> j])) \\<longleftrightarrow> (\\<exists>j. \\<G> \\<Turnstile>\\<^sub>P run af_G_letter \\<phi> (suffix i w) (j-i))\" \n      (is \"?l \\<longleftrightarrow> _\")"], ["proof (prove)\nusing this:\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      af\\<^sub>G \\<phi> (map w [i + 0..<i + (j - i)])) =\n  \\<PP> \\<phi> \\<G> w i\n\ngoal (1 subgoal):\n 1. \\<PP> \\<phi> \\<G> w i =\n    (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        run af_G_letter \\<phi> (suffix i w) (j - i))", "unfolding run_foldl"], ["proof (prove)\nusing this:\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      af\\<^sub>G \\<phi> (map w [i + 0..<i + (j - i)])) =\n  \\<PP> \\<phi> \\<G> w i\n\ngoal (1 subgoal):\n 1. \\<PP> \\<phi> \\<G> w i =\n    (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        af\\<^sub>G \\<phi> (map (suffix i w) [0..<j - i]))", "using subsequence_shift subsequence_def"], ["proof (prove)\nusing this:\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      af\\<^sub>G \\<phi> (map w [i + 0..<i + (j - i)])) =\n  \\<PP> \\<phi> \\<G> w i\n  suffix ?i ?w [?j \\<rightarrow> ?k] = ?w [?i + ?j \\<rightarrow> ?i + ?k]\n  ?w [?i \\<rightarrow> ?j] \\<equiv> map ?w [?i..<?j]\n\ngoal (1 subgoal):\n 1. \\<PP> \\<phi> \\<G> w i =\n    (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        af\\<^sub>G \\<phi> (map (suffix i w) [0..<j - i]))", "by metis"], ["proof (state)\nthis:\n  \\<PP> \\<phi> \\<G> w i =\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P run af_G_letter \\<phi> (suffix i w) (j - i))\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "also"], ["proof (state)\nthis:\n  \\<PP> \\<phi> \\<G> w i =\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P run af_G_letter \\<phi> (suffix i w) (j - i))\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "have \"\\<dots> \\<longleftrightarrow> (\\<exists>j. \\<G> \\<Turnstile>\\<^sub>P Rep (run \\<up>af\\<^sub>G(Abs \\<phi>) (suffix i w) (j-i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        run af_G_letter \\<phi> (suffix i w) (j - i)) =\n    (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        Rep (run \\<up>af\\<^sub>G (Abs \\<phi>) (suffix i w) (j - i)))", "using Quotient3_ltl_prop_equiv_quotient[THEN Quotient3_rep_abs]"], ["proof (prove)\nusing this:\n  ?r \\<equiv>\\<^sub>P ?r \\<Longrightarrow> Rep (Abs ?r) \\<equiv>\\<^sub>P ?r\n\ngoal (1 subgoal):\n 1. (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        run af_G_letter \\<phi> (suffix i w) (j - i)) =\n    (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        Rep (run \\<up>af\\<^sub>G (Abs \\<phi>) (suffix i w) (j - i)))", "unfolding ltl_prop_equiv_def run_af_G_letter_abs_eq_Abs_af_G_letter"], ["proof (prove)\nusing this:\n  \\<forall>\\<A>.\n     \\<A> \\<Turnstile>\\<^sub>P ?r =\n     \\<A> \\<Turnstile>\\<^sub>P ?r \\<Longrightarrow>\n  \\<forall>\\<A>.\n     \\<A> \\<Turnstile>\\<^sub>P Rep (Abs ?r) = \\<A> \\<Turnstile>\\<^sub>P ?r\n\ngoal (1 subgoal):\n 1. (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        run af_G_letter \\<phi> (suffix i w) (j - i)) =\n    (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        Rep (Abs (run af_G_letter \\<phi> (suffix i w) (j - i))))", "by blast"], ["proof (state)\nthis:\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      run af_G_letter \\<phi> (suffix i w) (j - i)) =\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      Rep (run \\<up>af\\<^sub>G (Abs \\<phi>) (suffix i w) (j - i)))\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "also"], ["proof (state)\nthis:\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      run af_G_letter \\<phi> (suffix i w) (j - i)) =\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      Rep (run \\<up>af\\<^sub>G (Abs \\<phi>) (suffix i w) (j - i)))\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "have \"\\<dots> \\<longleftrightarrow> (\\<exists>j. token_run i j \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>j.\n        \\<G> \\<Turnstile>\\<^sub>P\n        Rep (run \\<up>af\\<^sub>G (Abs \\<phi>) (suffix i w) (j - i))) =\n    (\\<exists>j. token_run i j \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})", "by simp"], ["proof (state)\nthis:\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      Rep (run \\<up>af\\<^sub>G (Abs \\<phi>) (suffix i w) (j - i))) =\n  (\\<exists>j. token_run i j \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "also"], ["proof (state)\nthis:\n  (\\<exists>j.\n      \\<G> \\<Turnstile>\\<^sub>P\n      Rep (run \\<up>af\\<^sub>G (Abs \\<phi>) (suffix i w) (j - i))) =\n  (\\<exists>j. token_run i j \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "have \"\\<dots> \\<longleftrightarrow> token_succeeds i\"\n      (is \"_ \\<longleftrightarrow> ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>j. token_run i j \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}) =\n    token_succeeds i", "unfolding token_succeeds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>j. token_run i j \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}) =\n    (\\<exists>n. token_run i n \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})", "by auto"], ["proof (state)\nthis:\n  (\\<exists>j. token_run i j \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}) =\n  token_succeeds i\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "finally"], ["proof (chain)\npicking this:\n  \\<PP> \\<phi> \\<G> w i = token_succeeds i", "have \"?l \\<longleftrightarrow> ?r\""], ["proof (prove)\nusing this:\n  \\<PP> \\<phi> \\<G> w i = token_succeeds i\n\ngoal (1 subgoal):\n 1. \\<PP> \\<phi> \\<G> w i = token_succeeds i", "."], ["proof (state)\nthis:\n  \\<PP> \\<phi> \\<G> w i = token_succeeds i\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "}"], ["proof (state)\nthis:\n  \\<PP> \\<phi> \\<G> w ?i2 = token_succeeds ?i2\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "thus \"?thesis\""], ["proof (prove)\nusing this:\n  \\<PP> \\<phi> \\<G> w ?i2 = token_succeeds ?i2\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'", "by (simp only: almost_all_eventually_provable_def accept_def)"], ["proof (state)\nthis:\n  \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w = accept\\<^sub>R'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ltl_to_rabin_correct_exposed:\n  \"\\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w \\<longleftrightarrow> accept\\<^sub>R (\\<delta>\\<^sub>R, q\\<^sub>R, {Acc\\<^sub>R i | i. i < max_rank\\<^sub>R}) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<phi> \\<G> w =\n    accept\\<^sub>R\n     (\\<delta>\\<^sub>R, q\\<^sub>R,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) |i.\n       i < max_rank\\<^sub>R})\n     w", "unfolding ltl_to_rabin_correct_exposed' mojmir_accept_iff_rabin_accept"], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>R\n     (\\<delta>\\<^sub>R, q\\<^sub>R,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n       j < max_rank\\<^sub>R})\n     w =\n    accept\\<^sub>R\n     (\\<delta>\\<^sub>R, q\\<^sub>R,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) |i.\n       i < max_rank\\<^sub>R})\n     w", "..\n\n\\<comment> \\<open>Import lemmas from parent locale to simplify assumptions\\<close>"], ["", "lemmas max_rank_lowerbound = max_rank_lowerbound"], ["", "lemmas state_rank_step_foldl = state_rank_step_foldl"], ["", "lemmas smallest_accepting_rank_properties = smallest_accepting_rank_properties"], ["", "lemmas wellformed_\\<R> = wellformed_\\<R>"], ["", "end"], ["", "fun ltl_to_rabin\nwhere\n  \"ltl_to_rabin \\<Sigma> \\<phi> \\<G> = (ltl_FG_to_rabin_def.\\<delta>\\<^sub>R \\<Sigma> \\<phi>, ltl_FG_to_rabin_def.q\\<^sub>R \\<phi>, {ltl_FG_to_rabin_def.Acc\\<^sub>R \\<Sigma> \\<phi> \\<G> i | i. i < ltl_FG_to_rabin_def.max_rank\\<^sub>R \\<Sigma> \\<phi>})\""], ["", "context\n  fixes \n    \\<Sigma> :: \"'a set set\"\n  assumes \n    finite_\\<Sigma>: \"finite \\<Sigma>\"\nbegin"], ["", "lemma ltl_to_rabin_correct:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"w \\<Turnstile> F G \\<phi> = (\\<exists>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>). G \\<phi> \\<in> \\<G> \\<and> (\\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<Turnstile> F G \\<phi> =\n    (\\<exists>\\<G>\\<subseteq>\\<^bold>G (G \\<phi>).\n        G \\<phi> \\<in> \\<G> \\<and>\n        (\\<forall>\\<psi>.\n            G \\<psi> \\<in> \\<G> \\<longrightarrow>\n            accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<Turnstile> F G \\<phi> =\n    (\\<exists>\\<G>\\<subseteq>\\<^bold>G (G \\<phi>).\n        G \\<phi> \\<in> \\<G> \\<and>\n        (\\<forall>\\<psi>.\n            G \\<psi> \\<in> \\<G> \\<longrightarrow>\n            accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w))", "have \"\\<And>\\<G> \\<psi>. \\<G> \\<subseteq> \\<^bold>G (G \\<phi>) \\<Longrightarrow> G \\<psi> \\<in> \\<G> \\<Longrightarrow> (\\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w \\<longleftrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<G> \\<psi>.\n       \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>);\n        G \\<psi> \\<in> \\<G>\\<rbrakk>\n       \\<Longrightarrow> \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w =\n                         accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>)\n                          w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<G> \\<psi>.\n       \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>);\n        G \\<psi> \\<in> \\<G>\\<rbrakk>\n       \\<Longrightarrow> \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w =\n                         accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>)\n                          w", "fix \\<G> \\<psi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<G> \\<psi>.\n       \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>);\n        G \\<psi> \\<in> \\<G>\\<rbrakk>\n       \\<Longrightarrow> \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w =\n                         accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>)\n                          w", "assume \"\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\" \"G \\<psi> \\<in> \\<G>\""], ["proof (state)\nthis:\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>\\<G> \\<psi>.\n       \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>);\n        G \\<psi> \\<in> \\<G>\\<rbrakk>\n       \\<Longrightarrow> \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w =\n                         accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>)\n                          w", "then"], ["proof (chain)\npicking this:\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<psi> \\<in> \\<G>", "interpret ltl_FG_to_rabin \\<Sigma> \\<psi> \\<G>"], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "using finite_\\<Sigma> assms G_nested_propos_alt_def"], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<psi> \\<in> \\<G>\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n  \\<^bold>G ?\\<phi> =\n  nested_propos ?\\<phi> \\<inter> {\\<psi>. \\<exists>x. \\<psi> = G x}\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "by (unfold_locales; auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<G> \\<psi>.\n       \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>);\n        G \\<psi> \\<in> \\<G>\\<rbrakk>\n       \\<Longrightarrow> \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w =\n                         accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>)\n                          w", "show \"(\\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w \\<longleftrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w =\n    accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "using ltl_to_rabin_correct_exposed"], ["proof (prove)\nusing this:\n  \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w =\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R i, succeed\\<^sub>R i) |i.\n     i < max_rank\\<^sub>R})\n   w\n\ngoal (1 subgoal):\n 1. \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w =\n    accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "by simp"], ["proof (state)\nthis:\n  \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w =\n  accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<G> \\<subseteq> \\<^bold>G (G \\<phi>);\n   G ?\\<psi> \\<in> ?\\<G>\\<rbrakk>\n  \\<Longrightarrow> \\<PP>\\<^sub>\\<infinity> ?\\<psi> ?\\<G> w =\n                    accept\\<^sub>R (ltl_to_rabin \\<Sigma> ?\\<psi> ?\\<G>) w\n\ngoal (1 subgoal):\n 1. w \\<Turnstile> F G \\<phi> =\n    (\\<exists>\\<G>\\<subseteq>\\<^bold>G (G \\<phi>).\n        G \\<phi> \\<in> \\<G> \\<and>\n        (\\<forall>\\<psi>.\n            G \\<psi> \\<in> \\<G> \\<longrightarrow>\n            accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<G> \\<subseteq> \\<^bold>G (G \\<phi>);\n   G ?\\<psi> \\<in> ?\\<G>\\<rbrakk>\n  \\<Longrightarrow> \\<PP>\\<^sub>\\<infinity> ?\\<psi> ?\\<G> w =\n                    accept\\<^sub>R (ltl_to_rabin \\<Sigma> ?\\<psi> ?\\<G>) w\n\ngoal (1 subgoal):\n 1. w \\<Turnstile> F G \\<phi> =\n    (\\<exists>\\<G>\\<subseteq>\\<^bold>G (G \\<phi>).\n        G \\<phi> \\<in> \\<G> \\<and>\n        (\\<forall>\\<psi>.\n            G \\<psi> \\<in> \\<G> \\<longrightarrow>\n            accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w))", "using \\<G>_elements[of _ \"G \\<phi>\"] \\<G>_finite[of _ \"G \\<phi>\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<G> \\<subseteq> \\<^bold>G (G \\<phi>);\n   G ?\\<psi> \\<in> ?\\<G>\\<rbrakk>\n  \\<Longrightarrow> \\<PP>\\<^sub>\\<infinity> ?\\<psi> ?\\<G> w =\n                    accept\\<^sub>R (ltl_to_rabin \\<Sigma> ?\\<psi> ?\\<G>) w\n  ?\\<G> \\<subseteq> \\<^bold>G (G \\<phi>) \\<Longrightarrow> Only_G ?\\<G>\n  ?\\<G> \\<subseteq> \\<^bold>G (G \\<phi>) \\<Longrightarrow> finite ?\\<G>\n\ngoal (1 subgoal):\n 1. w \\<Turnstile> F G \\<phi> =\n    (\\<exists>\\<G>\\<subseteq>\\<^bold>G (G \\<phi>).\n        G \\<phi> \\<in> \\<G> \\<and>\n        (\\<forall>\\<psi>.\n            G \\<psi> \\<in> \\<G> \\<longrightarrow>\n            accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w))", "unfolding ltl_FG_logical_characterization G_nested_propos.simps"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<G> \\<subseteq> \\<^bold>G \\<phi> \\<union> {G \\<phi>};\n   G ?\\<psi> \\<in> ?\\<G>\\<rbrakk>\n  \\<Longrightarrow> \\<PP>\\<^sub>\\<infinity> ?\\<psi> ?\\<G> w =\n                    accept\\<^sub>R (ltl_to_rabin \\<Sigma> ?\\<psi> ?\\<G>) w\n  ?\\<G> \\<subseteq> \\<^bold>G \\<phi> \\<union> {G \\<phi>} \\<Longrightarrow>\n  Only_G ?\\<G>\n  ?\\<G> \\<subseteq> \\<^bold>G \\<phi> \\<union> {G \\<phi>} \\<Longrightarrow>\n  finite ?\\<G>\n\ngoal (1 subgoal):\n 1. (\\<exists>\\<G>\\<subseteq>\\<^bold>G \\<phi> \\<union> {G \\<phi>}.\n        G \\<phi> \\<in> \\<G> \\<and> closed \\<G> w) =\n    (\\<exists>\\<G>\\<subseteq>\\<^bold>G \\<phi> \\<union> {G \\<phi>}.\n        G \\<phi> \\<in> \\<G> \\<and>\n        (\\<forall>\\<psi>.\n            G \\<psi> \\<in> \\<G> \\<longrightarrow>\n            accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w))", "by meson"], ["proof (state)\nthis:\n  w \\<Turnstile> F G \\<phi> =\n  (\\<exists>\\<G>\\<subseteq>\\<^bold>G (G \\<phi>).\n      G \\<phi> \\<in> \\<G> \\<and>\n      (\\<forall>\\<psi>.\n          G \\<psi> \\<in> \\<G> \\<longrightarrow>\n          accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection \\<open>LTL-to-Mojmir Lemmas\\<close>"], ["", "lemma \\<F>_eq_\\<S>:\n  assumes finite_\\<Sigma>: \"finite \\<Sigma>\"\n  assumes bounded_w: \"range w \\<subseteq> \\<Sigma>\"\n  assumes \"closed \\<G> w\"\n  assumes \"G \\<psi> \\<in> \\<G>\"\n  shows \"\\<forall>\\<^sub>\\<infinity>j. (\\<forall>S. (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and> \\<G> \\<subseteq> S) \\<longleftrightarrow> (\\<forall>q. q \\<in> (ltl_FG_to_rabin_def.\\<S>\\<^sub>R \\<Sigma> \\<psi> \\<G> w j) \\<longrightarrow> S \\<Turnstile>\\<^sub>P Rep q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n                       w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                       j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n                       w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                       j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "let ?F = \"{q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n                       w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                       j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "define k where \"k = the (threshold \\<psi> w \\<G>)\""], ["proof (state)\nthis:\n  k = the (threshold \\<psi> w \\<G>)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n                       w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                       j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"threshold \\<psi> w \\<G> = Some k\""], ["proof (prove)\nusing this:\n  k = the (threshold \\<psi> w \\<G>)\n\ngoal (1 subgoal):\n 1. threshold \\<psi> w \\<G> = Some k", "using assms"], ["proof (prove)\nusing this:\n  k = the (threshold \\<psi> w \\<G>)\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n  closed \\<G> w\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. threshold \\<psi> w \\<G> = Some k", "unfolding threshold.simps index.simps almost_all_eventually_provable_def"], ["proof (prove)\nusing this:\n  k =\n  the (if \\<forall>\\<^sub>\\<infinity>j. \\<PP> \\<psi> \\<G> w j\n       then Some (LEAST i. \\<forall>j\\<ge>i. \\<PP> \\<psi> \\<G> w j)\n       else None)\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n  finite \\<G> \\<and>\n  Only_G \\<G> \\<and>\n  (\\<forall>\\<psi>.\n      G \\<psi> \\<in> \\<G> \\<longrightarrow>\n      (\\<forall>\\<^sub>\\<infinity>i. \\<PP> \\<psi> \\<G> w i))\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. (if \\<forall>\\<^sub>\\<infinity>j. \\<PP> \\<psi> \\<G> w j\n     then Some (LEAST i. \\<forall>j\\<ge>i. \\<PP> \\<psi> \\<G> w j)\n     else None) =\n    Some k", "by simp"], ["proof (state)\nthis:\n  threshold \\<psi> w \\<G> = Some k\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n                       w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                       j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "have \"Only_G \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Only_G \\<G>", "using assms G_nested_propos_alt_def"], ["proof (prove)\nusing this:\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n  closed \\<G> w\n  G \\<psi> \\<in> \\<G>\n  \\<^bold>G ?\\<phi> =\n  nested_propos ?\\<phi> \\<inter> {\\<psi>. \\<exists>x. \\<psi> = G x}\n\ngoal (1 subgoal):\n 1. Only_G \\<G>", "by blast"], ["proof (state)\nthis:\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n                       w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                       j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "then"], ["proof (chain)\npicking this:\n  Only_G \\<G>", "interpret ltl_FG_to_rabin \\<Sigma> \\<psi> \\<G> w"], ["proof (prove)\nusing this:\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "using finite_\\<Sigma> bounded_w"], ["proof (prove)\nusing this:\n  Only_G \\<G>\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "by (unfold_locales, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "have \"accept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>R'", "using ltl_to_rabin_correct_exposed' assms"], ["proof (prove)\nusing this:\n  \\<PP>\\<^sub>\\<infinity> \\<psi> \\<G> w = accept\\<^sub>R'\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n  closed \\<G> w\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R'", "by blast"], ["proof (state)\nthis:\n  accept\\<^sub>R'\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "then"], ["proof (chain)\npicking this:\n  accept\\<^sub>R'", "obtain i where \"smallest_accepting_rank = Some i\""], ["proof (prove)\nusing this:\n  accept\\<^sub>R'\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        smallest_accepting_rank\\<^sub>R = Some i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding smallest_accepting_rank_def"], ["proof (prove)\nusing this:\n  accept\\<^sub>R'\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (if accept\\<^sub>R'\n         then Some\n               (LEAST i.\n                   finite fail \\<and>\n                   finite (local.merge i) \\<and> infinite (succeed i))\n         else None) =\n        Some i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  smallest_accepting_rank\\<^sub>R = Some i\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "(* Wait until succeeding states can be recognised *)"], ["proof (state)\nthis:\n  smallest_accepting_rank\\<^sub>R = Some i\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "obtain n\\<^sub>1 where \"\\<And>m q. m \\<ge> n\\<^sub>1 \\<Longrightarrow> ((\\<exists>x \\<in> configuration q m. token_succeeds x) \\<longrightarrow> q \\<in> \\<S> m) \\<and> (q \\<in> \\<S> m \\<longrightarrow> (\\<forall>x \\<in> configuration q m. token_succeeds x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>1.\n        (\\<And>m q.\n            n\\<^sub>1 \\<le> m \\<Longrightarrow>\n            (Bex (configuration q m) token_succeeds \\<longrightarrow>\n             q \\<in> \\<S>\\<^sub>R m) \\<and>\n            (q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n             Ball (configuration q m) token_succeeds)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using succeeding_states[OF \\<open>smallest_accepting_rank = Some i\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>n.\n     \\<forall>q.\n        (Bex (configuration q n) token_succeeds \\<longrightarrow>\n         q \\<in> \\<S>\\<^sub>R n) \\<and>\n        (q \\<in> \\<S>\\<^sub>R n \\<longrightarrow>\n         Ball (configuration q n) token_succeeds)\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>1.\n        (\\<And>m q.\n            n\\<^sub>1 \\<le> m \\<Longrightarrow>\n            (Bex (configuration q m) token_succeeds \\<longrightarrow>\n             q \\<in> \\<S>\\<^sub>R m) \\<and>\n            (q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n             Ball (configuration q m) token_succeeds)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding MOST_nat_le"], ["proof (prove)\nusing this:\n  \\<exists>m.\n     \\<forall>n\\<ge>m.\n        \\<forall>q.\n           (Bex (configuration q n) token_succeeds \\<longrightarrow>\n            q \\<in> \\<S>\\<^sub>R n) \\<and>\n           (q \\<in> \\<S>\\<^sub>R n \\<longrightarrow>\n            Ball (configuration q n) token_succeeds)\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>1.\n        (\\<And>m q.\n            n\\<^sub>1 \\<le> m \\<Longrightarrow>\n            (Bex (configuration q m) token_succeeds \\<longrightarrow>\n             q \\<in> \\<S>\\<^sub>R m) \\<and>\n            (q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n             Ball (configuration q m) token_succeeds)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n\\<^sub>1 \\<le> ?m \\<Longrightarrow>\n  (Bex (configuration ?q ?m) token_succeeds \\<longrightarrow>\n   ?q \\<in> \\<S>\\<^sub>R ?m) \\<and>\n  (?q \\<in> \\<S>\\<^sub>R ?m \\<longrightarrow>\n   Ball (configuration ?q ?m) token_succeeds)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "(* Wait until all \"early\" succeeding tokens reached the final states *)"], ["proof (state)\nthis:\n  n\\<^sub>1 \\<le> ?m \\<Longrightarrow>\n  (Bex (configuration ?q ?m) token_succeeds \\<longrightarrow>\n   ?q \\<in> \\<S>\\<^sub>R ?m) \\<and>\n  (?q \\<in> \\<S>\\<^sub>R ?m \\<longrightarrow>\n   Ball (configuration ?q ?m) token_succeeds)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "obtain n\\<^sub>2 where \"\\<And>x. x < k \\<Longrightarrow> token_succeeds x \\<Longrightarrow> token_run x n\\<^sub>2 \\<in> ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>2.\n        (\\<And>x.\n            \\<lbrakk>x < k; token_succeeds x\\<rbrakk>\n            \\<Longrightarrow> token_run x n\\<^sub>2\n                              \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P\n  Rep q}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (induction k) (simp, metis token_stays_in_final_states add.commute le_neq_implies_less not_less not_less_eq token_succeeds_def)"], ["proof (state)\nthis:\n  \\<lbrakk>?x < k; token_succeeds ?x\\<rbrakk>\n  \\<Longrightarrow> token_run ?x n\\<^sub>2\n                    \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "define n where \"n = Max {n\\<^sub>1, n\\<^sub>2, k}\""], ["proof (state)\nthis:\n  n = Max {n\\<^sub>1, n\\<^sub>2, k}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "(* Prove properties for the larger n *)"], ["proof (state)\nthis:\n  n = Max {n\\<^sub>1, n\\<^sub>2, k}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "{"], ["proof (state)\nthis:\n  n = Max {n\\<^sub>1, n\\<^sub>2, k}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "fix m q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "assume \"n \\<le> m\""], ["proof (state)\nthis:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"n\\<^sub>1 \\<le> m\""], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. n\\<^sub>1 \\<le> m", "unfolding n_def"], ["proof (prove)\nusing this:\n  Max {n\\<^sub>1, n\\<^sub>2, k} \\<le> m\n\ngoal (1 subgoal):\n 1. n\\<^sub>1 \\<le> m", "by simp"], ["proof (state)\nthis:\n  n\\<^sub>1 \\<le> m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"((\\<exists>x \\<in> configuration q m. token_succeeds x) \\<longrightarrow> q \\<in> \\<S> m) \\<and> (q \\<in> \\<S> m \\<longrightarrow> (\\<forall>x \\<in> configuration q m. token_succeeds x))\""], ["proof (prove)\nusing this:\n  n\\<^sub>1 \\<le> m\n\ngoal (1 subgoal):\n 1. (Bex (configuration q m) token_succeeds \\<longrightarrow>\n     q \\<in> \\<S>\\<^sub>R m) \\<and>\n    (q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n     Ball (configuration q m) token_succeeds)", "using \\<open>\\<And>m q. m \\<ge> n\\<^sub>1 \\<Longrightarrow> ((\\<exists>x \\<in> configuration q m. token_succeeds x) \\<longrightarrow> q \\<in> \\<S> m) \\<and> (q \\<in> \\<S> m \\<longrightarrow> (\\<forall>x \\<in> configuration q m. token_succeeds x))\\<close>"], ["proof (prove)\nusing this:\n  n\\<^sub>1 \\<le> m\n  n\\<^sub>1 \\<le> ?m \\<Longrightarrow>\n  (Bex (configuration ?q ?m) token_succeeds \\<longrightarrow>\n   ?q \\<in> \\<S>\\<^sub>R ?m) \\<and>\n  (?q \\<in> \\<S>\\<^sub>R ?m \\<longrightarrow>\n   Ball (configuration ?q ?m) token_succeeds)\n\ngoal (1 subgoal):\n 1. (Bex (configuration q m) token_succeeds \\<longrightarrow>\n     q \\<in> \\<S>\\<^sub>R m) \\<and>\n    (q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n     Ball (configuration q m) token_succeeds)", "by blast"], ["proof (state)\nthis:\n  (Bex (configuration q m) token_succeeds \\<longrightarrow>\n   q \\<in> \\<S>\\<^sub>R m) \\<and>\n  (q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n   Ball (configuration q m) token_succeeds)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "}"], ["proof (state)\nthis:\n  n \\<le> ?m2 \\<Longrightarrow>\n  (Bex (configuration ?q2 ?m2) token_succeeds \\<longrightarrow>\n   ?q2 \\<in> \\<S>\\<^sub>R ?m2) \\<and>\n  (?q2 \\<in> \\<S>\\<^sub>R ?m2 \\<longrightarrow>\n   Ball (configuration ?q2 ?m2) token_succeeds)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence n_def_1: \"\\<And>m q. m \\<ge> n \\<Longrightarrow> ((\\<exists>x \\<in> configuration q m. token_succeeds x) \\<longrightarrow> q \\<in> \\<S> m) \\<and> (q \\<in> \\<S> m \\<longrightarrow> (\\<forall>x \\<in> configuration q m. token_succeeds x))\""], ["proof (prove)\nusing this:\n  n \\<le> ?m2 \\<Longrightarrow>\n  (Bex (configuration ?q2 ?m2) token_succeeds \\<longrightarrow>\n   ?q2 \\<in> \\<S>\\<^sub>R ?m2) \\<and>\n  (?q2 \\<in> \\<S>\\<^sub>R ?m2 \\<longrightarrow>\n   Ball (configuration ?q2 ?m2) token_succeeds)\n\ngoal (1 subgoal):\n 1. \\<And>m q.\n       n \\<le> m \\<Longrightarrow>\n       (Bex (configuration q m) token_succeeds \\<longrightarrow>\n        q \\<in> \\<S>\\<^sub>R m) \\<and>\n       (q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n        Ball (configuration q m) token_succeeds)", "by presburger"], ["proof (state)\nthis:\n  n \\<le> ?m \\<Longrightarrow>\n  (Bex (configuration ?q ?m) token_succeeds \\<longrightarrow>\n   ?q \\<in> \\<S>\\<^sub>R ?m) \\<and>\n  (?q \\<in> \\<S>\\<^sub>R ?m \\<longrightarrow>\n   Ball (configuration ?q ?m) token_succeeds)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "have n_def_2: \"\\<And>x m. x < k \\<Longrightarrow> m \\<ge> n \\<Longrightarrow> token_succeeds x \\<Longrightarrow> token_run x m \\<in> ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x < k; n \\<le> m; token_succeeds x\\<rbrakk>\n       \\<Longrightarrow> token_run x m\n                         \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "using \\<open>\\<And>x. x < k \\<Longrightarrow> token_succeeds x \\<Longrightarrow> token_run x n\\<^sub>2 \\<in> ?F\\<close> Max.coboundedI[of \"{n\\<^sub>1, n\\<^sub>2, k}\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x < k; token_succeeds ?x\\<rbrakk>\n  \\<Longrightarrow> token_run ?x n\\<^sub>2\n                    \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  \\<lbrakk>finite {n\\<^sub>1, n\\<^sub>2, k};\n   ?a \\<in> {n\\<^sub>1, n\\<^sub>2, k}\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le> Max {n\\<^sub>1, n\\<^sub>2, k}\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x < k; n \\<le> m; token_succeeds x\\<rbrakk>\n       \\<Longrightarrow> token_run x m\n                         \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "using token_stays_in_final_states[of _ n\\<^sub>2] le_Suc_ex"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x < k; token_succeeds ?x\\<rbrakk>\n  \\<Longrightarrow> token_run ?x n\\<^sub>2\n                    \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  \\<lbrakk>finite {n\\<^sub>1, n\\<^sub>2, k};\n   ?a \\<in> {n\\<^sub>1, n\\<^sub>2, k}\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le> Max {n\\<^sub>1, n\\<^sub>2, k}\n  token_run ?x n\\<^sub>2\n  \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n  token_run ?x (n\\<^sub>2 + ?m) \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x < k; n \\<le> m; token_succeeds x\\<rbrakk>\n       \\<Longrightarrow> token_run x m\n                         \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "unfolding n_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x < k; token_succeeds ?x\\<rbrakk>\n  \\<Longrightarrow> token_run ?x n\\<^sub>2\n                    \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  \\<lbrakk>finite {n\\<^sub>1, n\\<^sub>2, k};\n   ?a \\<in> {n\\<^sub>1, n\\<^sub>2, k}\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le> Max {n\\<^sub>1, n\\<^sub>2, k}\n  token_run ?x n\\<^sub>2\n  \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n  token_run ?x (n\\<^sub>2 + ?m) \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n\ngoal (1 subgoal):\n 1. \\<And>x m.\n       \\<lbrakk>x < k; Max {n\\<^sub>1, n\\<^sub>2, k} \\<le> m;\n        token_succeeds x\\<rbrakk>\n       \\<Longrightarrow> token_run x m\n                         \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>?x < k; n \\<le> ?m; token_succeeds ?x\\<rbrakk>\n  \\<Longrightarrow> token_run ?x ?m\n                    \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?x < k; n \\<le> ?m; token_succeeds ?x\\<rbrakk>\n  \\<Longrightarrow> token_run ?x ?m\n                    \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "fix S m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "assume \"n \\<le> m\""], ["proof (state)\nthis:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"k \\<le> m\" \"n \\<le> Suc m\""], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. k \\<le> m &&& n \\<le> Suc m", "using n_def"], ["proof (prove)\nusing this:\n  n \\<le> m\n  n = Max {n\\<^sub>1, n\\<^sub>2, k}\n\ngoal (1 subgoal):\n 1. k \\<le> m &&& n \\<le> Suc m", "by simp+"], ["proof (state)\nthis:\n  k \\<le> m\n  n \\<le> Suc m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "{"], ["proof (state)\nthis:\n  k \\<le> m\n  n \\<le> Suc m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "assume \"S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m\" \"\\<G> \\<subseteq> S\""], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"\\<And>x. k \\<le> x \\<Longrightarrow> x \\<le> Suc m \\<Longrightarrow> S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\""], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>k \\<le> x; x \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])", "unfolding And_prop_entailment \\<F>_def k_def[symmetric] subsequence_def"], ["proof (prove)\nusing this:\n  Ball\n   (set (map (\\<lambda>i. af\\<^sub>G \\<psi> (map w [i..<m])) [k..<Suc m]))\n   ((\\<Turnstile>\\<^sub>P) S)\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>k \\<le> x; x \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af\\<^sub>G \\<psi> (map w [x..<m])", "using \\<open>k \\<le> m\\<close>"], ["proof (prove)\nusing this:\n  Ball\n   (set (map (\\<lambda>i. af\\<^sub>G \\<psi> (map w [i..<m])) [k..<Suc m]))\n   ((\\<Turnstile>\\<^sub>P) S)\n  \\<G> \\<subseteq> S\n  k \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>k \\<le> x; x \\<le> Suc m\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                         af\\<^sub>G \\<psi> (map w [x..<m])", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>k \\<le> ?x; ?x \\<le> Suc m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                    af\\<^sub>G \\<psi> (w [?x \\<rightarrow> m])\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "assume \"q \\<in> \\<S> m\""], ["proof (state)\nthis:\n  q \\<in> \\<S>\\<^sub>R m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "have \"S \\<Turnstile>\\<^sub>P Rep q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep q", "proof (cases \"q \\<in> ?F\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q\n 2. q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q", "case False"], ["proof (state)\nthis:\n  q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (2 subgoals):\n 1. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q\n 2. q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q", "moreover"], ["proof (state)\nthis:\n  q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (2 subgoals):\n 1. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q\n 2. q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q", "from False"], ["proof (chain)\npicking this:\n  q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "obtain j where \"state_rank q m = Some j\" and \"j \\<ge> i\""], ["proof (prove)\nusing this:\n  q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>state_rank q m = Some j; i \\<le> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>q \\<in> \\<S> m\\<close> \\<open>smallest_accepting_rank = Some i\\<close>"], ["proof (prove)\nusing this:\n  q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  q \\<in> \\<S>\\<^sub>R m\n  smallest_accepting_rank\\<^sub>R = Some i\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>state_rank q m = Some j; i \\<le> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  state_rank q m = Some j\n  i \\<le> j\n\ngoal (2 subgoals):\n 1. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q\n 2. q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q", "then"], ["proof (chain)\npicking this:\n  state_rank q m = Some j\n  i \\<le> j", "obtain x where x: \"x \\<in> configuration q m\" \"token_run x m = q\""], ["proof (prove)\nusing this:\n  state_rank q m = Some j\n  i \\<le> j\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> configuration q m; token_run x m = q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  x \\<in> configuration q m\n  token_run x m = q\n\ngoal (2 subgoals):\n 1. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q\n 2. q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q", "moreover"], ["proof (state)\nthis:\n  x \\<in> configuration q m\n  token_run x m = q\n\ngoal (2 subgoals):\n 1. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q\n 2. q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q", "from x"], ["proof (chain)\npicking this:\n  x \\<in> configuration q m\n  token_run x m = q", "have \"token_succeeds x\""], ["proof (prove)\nusing this:\n  x \\<in> configuration q m\n  token_run x m = q\n\ngoal (1 subgoal):\n 1. token_succeeds x", "using n_def_1[OF \\<open>n \\<le> m\\<close>] \\<open>q \\<in> \\<S> m\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> configuration q m\n  token_run x m = q\n  (Bex (configuration ?q m) token_succeeds \\<longrightarrow>\n   ?q \\<in> \\<S>\\<^sub>R m) \\<and>\n  (?q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n   Ball (configuration ?q m) token_succeeds)\n  q \\<in> \\<S>\\<^sub>R m\n\ngoal (1 subgoal):\n 1. token_succeeds x", "by blast"], ["proof (state)\nthis:\n  token_succeeds x\n\ngoal (2 subgoals):\n 1. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q\n 2. q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q", "ultimately"], ["proof (chain)\npicking this:\n  q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  x \\<in> configuration q m\n  token_run x m = q\n  token_succeeds x", "have \"S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\""], ["proof (prove)\nusing this:\n  q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  x \\<in> configuration q m\n  token_run x m = q\n  token_succeeds x\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])", "using \\<open>\\<And>x. k \\<le> x \\<Longrightarrow> x \\<le> Suc m \\<Longrightarrow> S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\\<close>[of x] n_def_2[OF _ \\<open>n \\<le> m\\<close>]"], ["proof (prove)\nusing this:\n  q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  x \\<in> configuration q m\n  token_run x m = q\n  token_succeeds x\n  \\<lbrakk>k \\<le> x; x \\<le> Suc m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                    af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\n  \\<lbrakk>?x < k; token_succeeds ?x\\<rbrakk>\n  \\<Longrightarrow> token_run ?x m\n                    \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])", "by fastforce"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\n\ngoal (2 subgoals):\n 1. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q\n 2. q \\<notin> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q", "thus ?thesis"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep q", "using Rep_token_run_af"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\n  Rep (token_run ?x ?n) \\<equiv>\\<^sub>P\n  af\\<^sub>G \\<psi> (w [?x \\<rightarrow> ?n])\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep q", "unfolding \\<open>token_run x m = q\\<close>[symmetric] ltl_prop_equiv_def"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\n  \\<forall>\\<A>.\n     \\<A> \\<Turnstile>\\<^sub>P Rep (token_run ?x ?n) =\n     \\<A> \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [?x \\<rightarrow> ?n])\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep (token_run x m)", "by simp"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Rep q\n\ngoal (1 subgoal):\n 1. q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep q", "qed (insert \\<open>\\<G> \\<subseteq> S\\<close>, blast)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Rep q\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m; \\<G> \\<subseteq> S;\n   ?q2 \\<in> \\<S>\\<^sub>R m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep ?q2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m; \\<G> \\<subseteq> S;\n   ?q2 \\<in> \\<S>\\<^sub>R m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep ?q2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "{"], ["proof (state)\nthis:\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m; \\<G> \\<subseteq> S;\n   ?q2 \\<in> \\<S>\\<^sub>R m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep ?q2\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "assume \"\\<And>q. q \\<in> \\<S> m \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep q\""], ["proof (state)\nthis:\n  ?q \\<in> \\<S>\\<^sub>R m \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep ?q\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"\\<And>q. q \\<in> ?F \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep q\""], ["proof (prove)\nusing this:\n  ?q \\<in> \\<S>\\<^sub>R m \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep ?q\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P Rep q", "by simp"], ["proof (state)\nthis:\n  ?q \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P Rep ?q\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "have \"\\<G> \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G> \\<subseteq> S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<G> \\<Longrightarrow> x \\<in> S", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<G> \\<Longrightarrow> x \\<in> S", "assume \"x \\<in> \\<G>\""], ["proof (state)\nthis:\n  x \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<G> \\<Longrightarrow> x \\<in> S", "with \\<open>Only_G \\<G>\\<close>"], ["proof (chain)\npicking this:\n  Only_G \\<G>\n  x \\<in> \\<G>", "show \"x \\<in> S\""], ["proof (prove)\nusing this:\n  Only_G \\<G>\n  x \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. x \\<in> S", "using \\<open>\\<And>q. q \\<in> ?F \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep q\\<close>[of \"Abs x\"]"], ["proof (prove)\nusing this:\n  Only_G \\<G>\n  x \\<in> \\<G>\n  Abs x \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P Rep (Abs x)\n\ngoal (1 subgoal):\n 1. x \\<in> S", "by auto"], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "{"], ["proof (state)\nthis:\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "assume \"k \\<le> x\" \"x \\<le> m\""], ["proof (state)\nthis:\n  k \\<le> x\n  x \\<le> m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "define q where \"q = token_run x m\""], ["proof (state)\nthis:\n  q = token_run x m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"token_succeeds x\""], ["proof (prove)\nusing this:\n  q = token_run x m\n\ngoal (1 subgoal):\n 1. token_succeeds x", "using threshold_properties[OF \\<open>threshold \\<psi> w \\<G> = Some k\\<close>] \\<open>x \\<ge> k\\<close> Rep_token_run_af"], ["proof (prove)\nusing this:\n  q = token_run x m\n  0 < k \\<Longrightarrow>\n  \\<not> \\<G> \\<Turnstile>\\<^sub>P\n         af\\<^sub>G \\<psi> (w [k - 1 \\<rightarrow> ?k])\n  k \\<le> ?j \\<Longrightarrow> \\<PP> \\<psi> \\<G> w ?j\n  k \\<le> x\n  Rep (token_run ?x ?n) \\<equiv>\\<^sub>P\n  af\\<^sub>G \\<psi> (w [?x \\<rightarrow> ?n])\n\ngoal (1 subgoal):\n 1. token_succeeds x", "unfolding token_succeeds_def ltl_prop_equiv_def"], ["proof (prove)\nusing this:\n  q = token_run x m\n  0 < k \\<Longrightarrow>\n  \\<not> \\<G> \\<Turnstile>\\<^sub>P\n         af\\<^sub>G \\<psi> (w [k - 1 \\<rightarrow> ?k])\n  k \\<le> ?j \\<Longrightarrow> \\<PP> \\<psi> \\<G> w ?j\n  k \\<le> x\n  \\<forall>\\<A>.\n     \\<A> \\<Turnstile>\\<^sub>P Rep (token_run ?x ?n) =\n     \\<A> \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [?x \\<rightarrow> ?n])\n\ngoal (1 subgoal):\n 1. \\<exists>n. token_run x n \\<in> {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "by blast"], ["proof (state)\nthis:\n  token_succeeds x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"q \\<in> \\<S> m\""], ["proof (prove)\nusing this:\n  token_succeeds x\n\ngoal (1 subgoal):\n 1. q \\<in> \\<S>\\<^sub>R m", "using n_def_1[OF \\<open>n \\<le> m\\<close>, of q] \\<open>x \\<le> m\\<close>"], ["proof (prove)\nusing this:\n  token_succeeds x\n  (Bex (configuration q m) token_succeeds \\<longrightarrow>\n   q \\<in> \\<S>\\<^sub>R m) \\<and>\n  (q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n   Ball (configuration q m) token_succeeds)\n  x \\<le> m\n\ngoal (1 subgoal):\n 1. q \\<in> \\<S>\\<^sub>R m", "unfolding q_def configuration.simps"], ["proof (prove)\nusing this:\n  token_succeeds x\n  (Bex {xa. xa \\<le> m \\<and> token_run xa m = token_run x m}\n    token_succeeds \\<longrightarrow>\n   token_run x m \\<in> \\<S>\\<^sub>R m) \\<and>\n  (token_run x m \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n   Ball {xa. xa \\<le> m \\<and> token_run xa m = token_run x m}\n    token_succeeds)\n  x \\<le> m\n\ngoal (1 subgoal):\n 1. token_run x m \\<in> \\<S>\\<^sub>R m", "by blast"], ["proof (state)\nthis:\n  q \\<in> \\<S>\\<^sub>R m\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"S \\<Turnstile>\\<^sub>P Rep q\""], ["proof (prove)\nusing this:\n  q \\<in> \\<S>\\<^sub>R m\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep q", "by (rule \\<open>\\<And>q. q \\<in> \\<S> m \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep q\\<close>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Rep q\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\""], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Rep q\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])", "using Rep_token_run_af"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Rep q\n  Rep (token_run ?x ?n) \\<equiv>\\<^sub>P\n  af\\<^sub>G \\<psi> (w [?x \\<rightarrow> ?n])\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])", "unfolding q_def ltl_prop_equiv_def"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Rep (token_run x m)\n  \\<forall>\\<A>.\n     \\<A> \\<Turnstile>\\<^sub>P Rep (token_run ?x ?n) =\n     \\<A> \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [?x \\<rightarrow> ?n])\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])", "by simp"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af\\<^sub>G \\<psi> (w [x \\<rightarrow> m])\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>k \\<le> ?x2; ?x2 \\<le> m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                    af\\<^sub>G \\<psi> (w [?x2 \\<rightarrow> m])\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"\\<forall>x \\<in> (set (map (\\<lambda>i. af\\<^sub>G \\<psi> (w [i \\<rightarrow> m])) [k..<Suc m])). S \\<Turnstile>\\<^sub>P x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>k \\<le> ?x2; ?x2 \\<le> m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                    af\\<^sub>G \\<psi> (w [?x2 \\<rightarrow> m])\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (map (\\<lambda>i.\n                                af\\<^sub>G \\<psi> (w [i \\<rightarrow> m]))\n                         [k..<Suc m]).\n       S \\<Turnstile>\\<^sub>P x", "unfolding set_map set_upt"], ["proof (prove)\nusing this:\n  \\<lbrakk>k \\<le> ?x2; ?x2 \\<le> m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P\n                    af\\<^sub>G \\<psi> (w [?x2 \\<rightarrow> m])\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>i. af\\<^sub>G \\<psi> (w [i \\<rightarrow> m])) `\n                   {k..<Suc m}.\n       S \\<Turnstile>\\<^sub>P x", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set (map (\\<lambda>i.\n                              af\\<^sub>G \\<psi> (w [i \\<rightarrow> m]))\n                       [k..<Suc m]).\n     S \\<Turnstile>\\<^sub>P x\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "hence \"S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m\" and \"\\<G> \\<subseteq> S\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set (map (\\<lambda>i.\n                              af\\<^sub>G \\<psi> (w [i \\<rightarrow> m]))\n                       [k..<Suc m]).\n     S \\<Turnstile>\\<^sub>P x\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m &&& \\<G> \\<subseteq> S", "unfolding \\<F>_def And_prop_entailment[of S] k_def[symmetric]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set (map (\\<lambda>i.\n                              af\\<^sub>G \\<psi> (w [i \\<rightarrow> m]))\n                       [k..<Suc m]).\n     S \\<Turnstile>\\<^sub>P x\n\ngoal (1 subgoal):\n 1. Ball\n     (set (map (\\<lambda>i. af\\<^sub>G \\<psi> (w [i \\<rightarrow> m]))\n            [k..<Suc m]))\n     ((\\<Turnstile>\\<^sub>P) S) &&&\n    \\<G> \\<subseteq> S", "using \\<open>k \\<le> m\\<close> \\<open>\\<G> \\<subseteq> S\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set (map (\\<lambda>i.\n                              af\\<^sub>G \\<psi> (w [i \\<rightarrow> m]))\n                       [k..<Suc m]).\n     S \\<Turnstile>\\<^sub>P x\n  k \\<le> m\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. Ball\n     (set (map (\\<lambda>i. af\\<^sub>G \\<psi> (w [i \\<rightarrow> m]))\n            [k..<Suc m]))\n     ((\\<Turnstile>\\<^sub>P) S) &&&\n    \\<G> \\<subseteq> S", "by simp+"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "}"], ["proof (state)\nthis:\n  (\\<And>q.\n      q \\<in> \\<S>\\<^sub>R m \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m\n  (\\<And>q.\n      q \\<in> \\<S>\\<^sub>R m \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m; \\<G> \\<subseteq> S;\n   ?q2 \\<in> \\<S>\\<^sub>R m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep ?q2\n  (\\<And>q.\n      q \\<in> \\<S>\\<^sub>R m \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m\n  (\\<And>q.\n      q \\<in> \\<S>\\<^sub>R m \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n  \\<G> \\<subseteq> S", "have \"(S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m \\<and> \\<G> \\<subseteq> S) \\<longleftrightarrow> (\\<forall>q. q \\<in> \\<S> m \\<longrightarrow> S \\<Turnstile>\\<^sub>P Rep q)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m; \\<G> \\<subseteq> S;\n   ?q2 \\<in> \\<S>\\<^sub>R m\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep ?q2\n  (\\<And>q.\n      q \\<in> \\<S>\\<^sub>R m \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m\n  (\\<And>q.\n      q \\<in> \\<S>\\<^sub>R m \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m \\<and>\n     \\<G> \\<subseteq> S) =\n    (\\<forall>q.\n        q \\<in> \\<S>\\<^sub>R m \\<longrightarrow>\n        S \\<Turnstile>\\<^sub>P Rep q)", "by blast"], ["proof (state)\nthis:\n  (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> m \\<and> \\<G> \\<subseteq> S) =\n  (\\<forall>q.\n      q \\<in> \\<S>\\<^sub>R m \\<longrightarrow> S \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "}"], ["proof (state)\nthis:\n  n \\<le> ?m2 \\<Longrightarrow>\n  (?S2 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> ?m2 \\<and>\n   \\<G> \\<subseteq> ?S2) =\n  (\\<forall>q.\n      q \\<in> \\<S>\\<^sub>R ?m2 \\<longrightarrow>\n      ?S2 \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> ?m2 \\<Longrightarrow>\n  (?S2 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> ?m2 \\<and>\n   \\<G> \\<subseteq> ?S2) =\n  (\\<forall>q.\n      q \\<in> \\<S>\\<^sub>R ?m2 \\<longrightarrow>\n      ?S2 \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>S.\n          (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n           \\<G> \\<subseteq> S) =\n          (\\<forall>q.\n              q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n              S \\<Turnstile>\\<^sub>P Rep q)", "unfolding MOST_nat_le"], ["proof (prove)\nusing this:\n  n \\<le> ?m2 \\<Longrightarrow>\n  (?S2 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> ?m2 \\<and>\n   \\<G> \\<subseteq> ?S2) =\n  (\\<forall>q.\n      q \\<in> \\<S>\\<^sub>R ?m2 \\<longrightarrow>\n      ?S2 \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. \\<exists>m.\n       \\<forall>n\\<ge>m.\n          \\<forall>S.\n             (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> n \\<and>\n              \\<G> \\<subseteq> S) =\n             (\\<forall>q.\n                 q \\<in> \\<S>\\<^sub>R n \\<longrightarrow>\n                 S \\<Turnstile>\\<^sub>P Rep q)", "by blast"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>j.\n     \\<forall>S.\n        (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n         \\<G> \\<subseteq> S) =\n        (\\<forall>q.\n            q \\<in> \\<S>\\<^sub>R j \\<longrightarrow>\n            S \\<Turnstile>\\<^sub>P Rep q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<F>_eq_\\<S>_generalized:\n  assumes finite_\\<Sigma>: \"finite \\<Sigma>\"\n  assumes bounded_w: \"range w \\<subseteq> \\<Sigma>\"\n  assumes \"closed \\<G> w\"\n  shows \"\\<forall>\\<^sub>\\<infinity>j. \\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> (\\<forall>S. (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and> \\<G> \\<subseteq> S) \\<longleftrightarrow> (\\<forall>q. q \\<in> (ltl_FG_to_rabin_def.\\<S>\\<^sub>R \\<Sigma> \\<psi> \\<G>) w j \\<longrightarrow> S \\<Turnstile>\\<^sub>P Rep q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>\\<psi>.\n          G \\<psi> \\<in> \\<G> \\<longrightarrow>\n          (\\<forall>S.\n              (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n               \\<G> \\<subseteq> S) =\n              (\\<forall>q.\n                  q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                           (Abs \\<psi>) w\n                           {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                           j \\<longrightarrow>\n                  S \\<Turnstile>\\<^sub>P Rep q))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>\\<psi>.\n          G \\<psi> \\<in> \\<G> \\<longrightarrow>\n          (\\<forall>S.\n              (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n               \\<G> \\<subseteq> S) =\n              (\\<forall>q.\n                  q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                           (Abs \\<psi>) w\n                           {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                           j \\<longrightarrow>\n                  S \\<Turnstile>\\<^sub>P Rep q))", "have \"Only_G \\<G>\" and \"finite \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Only_G \\<G> &&& finite \\<G>", "using assms"], ["proof (prove)\nusing this:\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n  closed \\<G> w\n\ngoal (1 subgoal):\n 1. Only_G \\<G> &&& finite \\<G>", "by simp+"], ["proof (state)\nthis:\n  Only_G \\<G>\n  finite \\<G>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>\\<psi>.\n          G \\<psi> \\<in> \\<G> \\<longrightarrow>\n          (\\<forall>S.\n              (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n               \\<G> \\<subseteq> S) =\n              (\\<forall>q.\n                  q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                           (Abs \\<psi>) w\n                           {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                           j \\<longrightarrow>\n                  S \\<Turnstile>\\<^sub>P Rep q))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>\\<psi>.\n          G \\<psi> \\<in> \\<G> \\<longrightarrow>\n          (\\<forall>S.\n              (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n               \\<G> \\<subseteq> S) =\n              (\\<forall>q.\n                  q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                           (Abs \\<psi>) w\n                           {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                           j \\<longrightarrow>\n                  S \\<Turnstile>\\<^sub>P Rep q))", "using almost_all_commutative''[OF \\<open>finite \\<G>\\<close> \\<open>Only_G \\<G>\\<close>] \\<F>_eq_\\<S>[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      G x \\<in> \\<G> \\<Longrightarrow>\n      \\<forall>\\<^sub>\\<infinity>i. ?P x i) \\<Longrightarrow>\n  \\<forall>\\<^sub>\\<infinity>i.\n     \\<forall>x. G x \\<in> \\<G> \\<longrightarrow> ?P x i\n  G ?\\<psi> \\<in> \\<G> \\<Longrightarrow>\n  \\<forall>\\<^sub>\\<infinity>j.\n     \\<forall>S.\n        (S \\<Turnstile>\\<^sub>P \\<F> ?\\<psi> w \\<G> j \\<and>\n         \\<G> \\<subseteq> S) =\n        (\\<forall>q.\n            q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G (Abs ?\\<psi>) w\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                     j \\<longrightarrow>\n            S \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>\\<infinity>j.\n       \\<forall>\\<psi>.\n          G \\<psi> \\<in> \\<G> \\<longrightarrow>\n          (\\<forall>S.\n              (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n               \\<G> \\<subseteq> S) =\n              (\\<forall>q.\n                  q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                           (Abs \\<psi>) w\n                           {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                           j \\<longrightarrow>\n                  S \\<Turnstile>\\<^sub>P Rep q))", "by simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>\\<infinity>j.\n     \\<forall>\\<psi>.\n        G \\<psi> \\<in> \\<G> \\<longrightarrow>\n        (\\<forall>S.\n            (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n             \\<G> \\<subseteq> S) =\n            (\\<forall>q.\n                q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                         (Abs \\<psi>) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                         j \\<longrightarrow>\n                S \\<Turnstile>\\<^sub>P Rep q))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Product of Secondary Automata\\<close>"], ["", "context\n  fixes \n    \\<Sigma> :: \"'a set set\"\nbegin"], ["", "fun product_initial_state :: \"'a set \\<Rightarrow> ('a \\<Rightarrow> 'b) \\<Rightarrow> ('a \\<rightharpoonup> 'b)\" (\"\\<iota>\\<^sub>\\<times>\")\nwhere\n  \"\\<iota>\\<^sub>\\<times> K q\\<^sub>m = (\\<lambda>k. if k \\<in> K then Some (q\\<^sub>m k) else None)\""], ["", "fun combine_pairs :: \"(('a, 'b) transition set \\<times> ('a, 'b) transition set) set \\<Rightarrow> (('a, 'b) transition set \\<times> ('a, 'b) transition set set)\"\nwhere\n  \"combine_pairs P = (\\<Union>(fst ` P), snd ` P)\""], ["", "fun combine_pairs' :: \"(('a ltl \\<Rightarrow> ('a ltl_prop_equiv_quotient \\<Rightarrow> nat option) option, 'a set) transition set \\<times> ('a ltl \\<Rightarrow> ('a ltl_prop_equiv_quotient \\<Rightarrow> nat option) option, 'a set) transition set) set \\<Rightarrow> (('a ltl \\<Rightarrow> ('a ltl_prop_equiv_quotient \\<Rightarrow> nat option) option, 'a set) transition set \\<times> ('a ltl \\<Rightarrow> ('a ltl_prop_equiv_quotient \\<Rightarrow> nat option) option, 'a set) transition set set)\"\nwhere\n  \"combine_pairs' P = (\\<Union>(fst ` P), snd ` P)\""], ["", "lemma combine_pairs_prop: \n  \"(\\<forall>P \\<in> \\<P>. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w) = accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (combine_pairs \\<P>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>P\\<in>\\<P>. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w) =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (local.combine_pairs \\<P>) w", "by auto"], ["", "lemma combine_pairs2:\n  \"combine_pairs \\<P> \\<in> \\<alpha> \\<Longrightarrow> (\\<And>P. P \\<in> \\<P> \\<Longrightarrow> accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w ) \\<Longrightarrow> accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>local.combine_pairs \\<P> \\<in> \\<alpha>;\n     \\<And>P.\n        P \\<in> \\<P> \\<Longrightarrow>\n        accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w\\<rbrakk>\n    \\<Longrightarrow> accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>)\n                       w", "using combine_pairs_prop[of \\<P> \\<delta> q\\<^sub>0 w]"], ["proof (prove)\nusing this:\n  (\\<forall>P\\<in>\\<P>. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w) =\n  accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n   (local.combine_pairs \\<P>) w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>local.combine_pairs \\<P> \\<in> \\<alpha>;\n     \\<And>P.\n        P \\<in> \\<P> \\<Longrightarrow>\n        accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w\\<rbrakk>\n    \\<Longrightarrow> accept\\<^sub>G\\<^sub>R (\\<delta>, q\\<^sub>0, \\<alpha>)\n                       w", "by fastforce"], ["", "lemma combine_pairs'_prop: \n  \"(\\<forall>P \\<in> \\<P>. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w) = accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0 (combine_pairs' \\<P>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>P\\<in>\\<P>. accepting_pair\\<^sub>R \\<delta> q\\<^sub>0 P w) =\n    accepting_pair\\<^sub>G\\<^sub>R \\<delta> q\\<^sub>0\n     (local.combine_pairs' \\<P>) w", "by auto"], ["", "fun ltl_FG_to_generalized_rabin :: \"'a ltl \\<Rightarrow> ('a ltl \\<rightharpoonup> 'a ltl\\<^sub>P \\<rightharpoonup> nat, 'a set) generalized_rabin_automaton\" (\"\\<P>\")\nwhere\n  \"ltl_FG_to_generalized_rabin \\<phi> = (\n    \\<Delta>\\<^sub>\\<times> (\\<lambda>\\<chi>. ltl_FG_to_rabin_def.\\<delta>\\<^sub>R \\<Sigma> (theG \\<chi>)), \n    \\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>)) (\\<lambda>\\<chi>. ltl_FG_to_rabin_def.q\\<^sub>R (theG \\<chi>)),\n    {combine_pairs' {embed_pair \\<chi> (ltl_FG_to_rabin_def.Acc\\<^sub>R \\<Sigma> (theG \\<chi>) \\<G> (\\<pi> \\<chi>)) | \\<chi>. \\<chi> \\<in> \\<G>} \n      | \\<G> \\<pi>. \\<G> \\<subseteq> \\<^bold>G (G \\<phi>) \\<and> G \\<phi> \\<in> \\<G> \\<and> (\\<forall>\\<chi>. \\<pi> \\<chi> < ltl_FG_to_rabin_def.max_rank\\<^sub>R \\<Sigma> (theG \\<chi>))})\""], ["", "context\n  assumes \n    finite_\\<Sigma>: \"finite \\<Sigma>\"\nbegin"], ["", "lemma ltl_FG_to_generalized_rabin_wellformed:\n  \"finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))", "proof (cases \"\\<Sigma> = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Sigma> = {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\n 2. \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))", "case False"], ["proof (state)\nthis:\n  \\<Sigma> \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<Sigma> = {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\n 2. \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))", "have \"finite (reach \\<Sigma> (\\<Delta>\\<^sub>\\<times> (\\<lambda>\\<chi>. ltl_FG_to_rabin_def.\\<delta>\\<^sub>R \\<Sigma> (theG \\<chi>))) (fst (snd (\\<P> \\<phi>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (reach \\<Sigma>\n       (\\<Delta>\\<^sub>\\<times>\n         (\\<lambda>\\<chi>.\n             semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))))\n       (fst (snd (\\<P> \\<phi>))))", "proof (rule finite_reach_product, goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (dom (fst (snd (\\<P> \\<phi>))))\n 2. \\<And>x.\n       x \\<in> dom (fst (snd (\\<P> \\<phi>))) \\<Longrightarrow>\n       finite\n        (reach \\<Sigma>\n          (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n          (the (fst (snd (\\<P> \\<phi>)) x)))", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. finite (dom (fst (snd (\\<P> \\<phi>))))\n 2. \\<And>x.\n       x \\<in> dom (fst (snd (\\<P> \\<phi>))) \\<Longrightarrow>\n       finite\n        (reach \\<Sigma>\n          (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n          (the (fst (snd (\\<P> \\<phi>)) x)))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (dom (fst (snd (\\<P> \\<phi>))))", "using G_nested_finite(1)"], ["proof (prove)\nusing this:\n  finite (\\<^bold>G ?\\<phi>)\n\ngoal (1 subgoal):\n 1. finite (dom (fst (snd (\\<P> \\<phi>))))", "by (auto simp add: dom_def LTL_Rabin.product_initial_state.simps)"], ["proof (state)\nthis:\n  finite (dom (fst (snd (\\<P> \\<phi>))))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dom (fst (snd (\\<P> \\<phi>))) \\<Longrightarrow>\n       finite\n        (reach \\<Sigma>\n          (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n          (the (fst (snd (\\<P> \\<phi>)) x)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dom (fst (snd (\\<P> \\<phi>))) \\<Longrightarrow>\n       finite\n        (reach \\<Sigma>\n          (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n          (the (fst (snd (\\<P> \\<phi>)) x)))", "case (2 x)"], ["proof (state)\nthis:\n  x \\<in> dom (fst (snd (\\<P> \\<phi>)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dom (fst (snd (\\<P> \\<phi>))) \\<Longrightarrow>\n       finite\n        (reach \\<Sigma>\n          (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n          (the (fst (snd (\\<P> \\<phi>)) x)))", "hence \"the (fst (snd (\\<P> \\<phi>)) x) = ltl_FG_to_rabin_def.q\\<^sub>R (theG x)\""], ["proof (prove)\nusing this:\n  x \\<in> dom (fst (snd (\\<P> \\<phi>)))\n\ngoal (1 subgoal):\n 1. the (fst (snd (\\<P> \\<phi>)) x) = semi_mojmir_def.initial (Abs (theG x))", "by (auto simp add: LTL_Rabin.product_initial_state.simps)"], ["proof (state)\nthis:\n  the (fst (snd (\\<P> \\<phi>)) x) = semi_mojmir_def.initial (Abs (theG x))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> dom (fst (snd (\\<P> \\<phi>))) \\<Longrightarrow>\n       finite\n        (reach \\<Sigma>\n          (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n          (the (fst (snd (\\<P> \\<phi>)) x)))", "thus ?case"], ["proof (prove)\nusing this:\n  the (fst (snd (\\<P> \\<phi>)) x) = semi_mojmir_def.initial (Abs (theG x))\n\ngoal (1 subgoal):\n 1. finite\n     (reach \\<Sigma>\n       (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n       (the (fst (snd (\\<P> \\<phi>)) x)))", "using ltl_FG_to_rabin.wellformed_\\<R>[unfolded ltl_FG_to_rabin_def, of \"{}\" _ \\<Sigma> \"theG x\"] finite_\\<Sigma> False"], ["proof (prove)\nusing this:\n  the (fst (snd (\\<P> \\<phi>)) x) = semi_mojmir_def.initial (Abs (theG x))\n  Only_G {} \\<and>\n  range ?w \\<subseteq> \\<Sigma> \\<and> finite \\<Sigma> \\<Longrightarrow>\n  finite\n   (reach \\<Sigma>\n     (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n     (semi_mojmir_def.initial (Abs (theG x))))\n  finite \\<Sigma>\n  \\<Sigma> \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite\n     (reach \\<Sigma>\n       (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n       (the (fst (snd (\\<P> \\<phi>)) x)))", "by fastforce"], ["proof (state)\nthis:\n  finite\n   (reach \\<Sigma>\n     (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG x)))\n     (the (fst (snd (\\<P> \\<phi>)) x)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite\n   (reach \\<Sigma>\n     (\\<Delta>\\<^sub>\\<times>\n       (\\<lambda>\\<chi>.\n           semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n            (Abs (theG \\<chi>))))\n     (fst (snd (\\<P> \\<phi>))))\n\ngoal (2 subgoals):\n 1. \\<Sigma> = {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\n 2. \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite\n   (reach \\<Sigma>\n     (\\<Delta>\\<^sub>\\<times>\n       (\\<lambda>\\<chi>.\n           semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n            (Abs (theG \\<chi>))))\n     (fst (snd (\\<P> \\<phi>))))\n\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))", "by fastforce"], ["proof (state)\nthis:\n  finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\n\ngoal (1 subgoal):\n 1. \\<Sigma> = {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))", "qed (simp add: reach_def)"], ["", "theorem ltl_FG_to_generalized_rabin_correct:\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"w \\<Turnstile> F G \\<phi> = accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\"\n  (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<Turnstile> F G \\<phi> = accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "define r where \"r = run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w\""], ["proof (state)\nthis:\n  r = run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "have [intro]: \"\\<And>i. w i \\<in> \\<Sigma>\" and \"\\<Sigma> \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i. w i \\<in> \\<Sigma>) &&& \\<Sigma> \\<noteq> {}", "using assms"], ["proof (prove)\nusing this:\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. (\\<And>i. w i \\<in> \\<Sigma>) &&& \\<Sigma> \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  w ?i10 \\<in> \\<Sigma>\n  \\<Sigma> \\<noteq> {}\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "{"], ["proof (state)\nthis:\n  w ?i10 \\<in> \\<Sigma>\n  \\<Sigma> \\<noteq> {}\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "let ?S = \"(reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) ) \\<times> \\<Sigma> \\<times> (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\""], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "have \"\\<And>n. r n \\<in> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       r n\n       \\<in> reach \\<Sigma> (fst (\\<P> \\<phi>))\n              (fst (snd (\\<P> \\<phi>))) \\<times>\n             \\<Sigma> \\<times>\n             reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))", "unfolding run\\<^sub>t.simps run_foldl reach_foldl_def[OF \\<open>\\<Sigma> \\<noteq> {}\\<close>] r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (foldl (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) (map w [0..<n]),\n        w n,\n        foldl (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n         (map w [0..<Suc n]))\n       \\<in> {foldl (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w |w.\n              set w \\<subseteq> \\<Sigma>} \\<times>\n             \\<Sigma> \\<times>\n             {foldl (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w |w.\n              set w \\<subseteq> \\<Sigma>}", "by fastforce"], ["proof (state)\nthis:\n  r ?n10\n  \\<in> reach \\<Sigma> (fst (\\<P> \\<phi>))\n         (fst (snd (\\<P> \\<phi>))) \\<times>\n        \\<Sigma> \\<times>\n        reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence \"range r \\<subseteq> ?S\" and  \"finite ?S\""], ["proof (prove)\nusing this:\n  r ?n10\n  \\<in> reach \\<Sigma> (fst (\\<P> \\<phi>))\n         (fst (snd (\\<P> \\<phi>))) \\<times>\n        \\<Sigma> \\<times>\n        reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n\ngoal (1 subgoal):\n 1. range r\n    \\<subseteq> reach \\<Sigma> (fst (\\<P> \\<phi>))\n                 (fst (snd (\\<P> \\<phi>))) \\<times>\n                \\<Sigma> \\<times>\n                reach \\<Sigma> (fst (\\<P> \\<phi>))\n                 (fst (snd (\\<P> \\<phi>))) &&&\n    finite\n     (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) \\<times>\n      \\<Sigma> \\<times>\n      reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))", "using ltl_FG_to_generalized_rabin_wellformed assms \\<open>finite \\<Sigma>\\<close>"], ["proof (prove)\nusing this:\n  r ?n10\n  \\<in> reach \\<Sigma> (fst (\\<P> \\<phi>))\n         (fst (snd (\\<P> \\<phi>))) \\<times>\n        \\<Sigma> \\<times>\n        reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n  finite (reach \\<Sigma> (fst (\\<P> ?\\<phi>)) (fst (snd (\\<P> ?\\<phi>))))\n  range w \\<subseteq> \\<Sigma>\n  finite \\<Sigma>\n\ngoal (1 subgoal):\n 1. range r\n    \\<subseteq> reach \\<Sigma> (fst (\\<P> \\<phi>))\n                 (fst (snd (\\<P> \\<phi>))) \\<times>\n                \\<Sigma> \\<times>\n                reach \\<Sigma> (fst (\\<P> \\<phi>))\n                 (fst (snd (\\<P> \\<phi>))) &&&\n    finite\n     (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) \\<times>\n      \\<Sigma> \\<times>\n      reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))", "by (blast, fast)"], ["proof (state)\nthis:\n  range r\n  \\<subseteq> reach \\<Sigma> (fst (\\<P> \\<phi>))\n               (fst (snd (\\<P> \\<phi>))) \\<times>\n              \\<Sigma> \\<times>\n              reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n  finite\n   (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) \\<times>\n    \\<Sigma> \\<times>\n    reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "}"], ["proof (state)\nthis:\n  range r\n  \\<subseteq> reach \\<Sigma> (fst (\\<P> \\<phi>))\n               (fst (snd (\\<P> \\<phi>))) \\<times>\n              \\<Sigma> \\<times>\n              reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n  finite\n   (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) \\<times>\n    \\<Sigma> \\<times>\n    reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence \"finite (range r)\""], ["proof (prove)\nusing this:\n  range r\n  \\<subseteq> reach \\<Sigma> (fst (\\<P> \\<phi>))\n               (fst (snd (\\<P> \\<phi>))) \\<times>\n              \\<Sigma> \\<times>\n              reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n  finite\n   (reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) \\<times>\n    \\<Sigma> \\<times>\n    reach \\<Sigma> (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))))\n\ngoal (1 subgoal):\n 1. finite (range r)", "by (blast dest: finite_subset)"], ["proof (state)\nthis:\n  finite (range r)\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "{"], ["proof (state)\nthis:\n  finite (range r)\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "assume ?lhs"], ["proof (state)\nthis:\n  w \\<Turnstile> F G \\<phi>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "then"], ["proof (chain)\npicking this:\n  w \\<Turnstile> F G \\<phi>", "obtain \\<G> where \"\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\" and \"G \\<phi> \\<in> \\<G>\" and \"\\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\""], ["proof (prove)\nusing this:\n  w \\<Turnstile> F G \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<G>.\n        \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>); G \\<phi> \\<in> \\<G>;\n         \\<forall>\\<psi>.\n            G \\<psi> \\<in> \\<G> \\<longrightarrow>\n            accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ltl_to_rabin_correct[OF \\<open>finite \\<Sigma>\\<close> \\<open>range w \\<subseteq> \\<Sigma>\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>\\<G>\\<subseteq>\\<^bold>G (G \\<phi>).\n     G \\<phi> \\<in> \\<G> \\<and>\n     (\\<forall>\\<psi>.\n         G \\<psi> \\<in> \\<G> \\<longrightarrow>\n         accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<G>.\n        \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>); G \\<phi> \\<in> \\<G>;\n         \\<forall>\\<psi>.\n            G \\<psi> \\<in> \\<G> \\<longrightarrow>\n            accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ltl_to_rabin.simps"], ["proof (prove)\nusing this:\n  \\<exists>\\<G>\\<subseteq>\\<^bold>G (G \\<phi>).\n     G \\<phi> \\<in> \\<G> \\<and>\n     (\\<forall>\\<psi>.\n         G \\<psi> \\<in> \\<G> \\<longrightarrow>\n         accept\\<^sub>R\n          (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>),\n           semi_mojmir_def.initial (Abs \\<psi>),\n           {(mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n              (Abs \\<psi>) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n             mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n              {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} i,\n             mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n              (Abs \\<psi>) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} i) |\n            i. i < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n                    (Abs \\<psi>)})\n          w)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<G>.\n        \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>); G \\<phi> \\<in> \\<G>;\n         \\<forall>\\<psi>.\n            G \\<psi> \\<in> \\<G> \\<longrightarrow>\n            accept\\<^sub>R\n             (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>),\n              semi_mojmir_def.initial (Abs \\<psi>),\n              {(mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                 (Abs \\<psi>) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                 (Abs \\<psi>) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} i,\n                mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                 (Abs \\<psi>) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} i) |\n               i. i < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n                       (Abs \\<psi>)})\n             w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<phi> \\<in> \\<G>\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "note \\<G>_properties[OF \\<open>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\\<close>]"], ["proof (state)\nthis:\n  finite \\<G>\n  Only_G \\<G>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence \"ltl_FG_to_rabin \\<Sigma> \\<G> w\""], ["proof (prove)\nusing this:\n  finite \\<G>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "using \\<open>finite \\<Sigma>\\<close> \\<open>range w \\<subseteq> \\<Sigma>\\<close>"], ["proof (prove)\nusing this:\n  finite \\<G>\n  Only_G \\<G>\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "unfolding ltl_FG_to_rabin_def"], ["proof (prove)\nusing this:\n  finite \\<G>\n  Only_G \\<G>\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. Only_G \\<G> \\<and> range w \\<subseteq> \\<Sigma> \\<and> finite \\<Sigma>", "by auto"], ["proof (state)\nthis:\n  ltl_FG_to_rabin \\<Sigma> \\<G> w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "define \\<pi> where \"\\<pi> \\<psi> =\n        (if \\<psi> \\<in> \\<G> then the (ltl_FG_to_rabin_def.smallest_accepting_rank\\<^sub>R \\<Sigma> (theG \\<psi>) \\<G> w) else 0)\"\n      for \\<psi>"], ["proof (state)\nthis:\n  \\<pi> ?\\<psi> =\n  (if ?\\<psi> \\<in> \\<G>\n   then the (mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG ?\\<psi>)) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})\n   else 0)\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "let ?P' = \"{\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi> (ltl_FG_to_rabin_def.Acc\\<^sub>R \\<Sigma> (theG \\<chi>) \\<G> (\\<pi> \\<chi>)) | \\<chi>. \\<chi> \\<in> \\<G>}\""], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "have \"\\<forall>P \\<in> ?P'. accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>{\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma>\n                       \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n                       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                       (Abs (theG \\<chi>))\n                       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n                      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                       (Abs (theG \\<chi>))\n                       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                       (\\<pi> \\<chi>)) |\n                    \\<chi>. \\<chi> \\<in> \\<G>}.\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "fix P"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "assume \"P \\<in> ?P'\""], ["proof (state)\nthis:\n  P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n            (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))\n              {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n             mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>),\n             mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>)) |\n           \\<chi>. \\<chi> \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "then"], ["proof (chain)\npicking this:\n  P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n            (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))\n              {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n             mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>),\n             mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>)) |\n           \\<chi>. \\<chi> \\<in> \\<G>}", "obtain \\<chi> where P_def: \"P = \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi> (ltl_FG_to_rabin_def.Acc\\<^sub>R \\<Sigma> (theG \\<chi>) \\<G> (\\<pi> \\<chi>))\"\n        and \"\\<chi> \\<in> \\<G>\""], ["proof (prove)\nusing this:\n  P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n            (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))\n              {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n             mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>),\n             mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>)) |\n           \\<chi>. \\<chi> \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<chi>.\n        \\<lbrakk>P =\n                 \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                  (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                    (Abs (theG \\<chi>))\n                    {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                   mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                    (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                    (\\<pi> \\<chi>),\n                   mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                    (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                    (\\<pi> \\<chi>));\n         \\<chi> \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P =\n  \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n   (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n     (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n    mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>))\n  \\<chi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "hence \"\\<exists>\\<chi>'. \\<chi> = G \\<chi>'\""], ["proof (prove)\nusing this:\n  P =\n  \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n   (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n     (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n    mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>))\n  \\<chi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<chi>'. \\<chi> = G \\<chi>'", "using \\<open>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\\<close> G_nested_propos_alt_def"], ["proof (prove)\nusing this:\n  P =\n  \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n   (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n     (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n    mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>))\n  \\<chi> \\<in> \\<G>\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  \\<^bold>G ?\\<phi> =\n  nested_propos ?\\<phi> \\<inter> {\\<psi>. \\<exists>x. \\<psi> = G x}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<chi>'. \\<chi> = G \\<chi>'", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<chi>'. \\<chi> = G \\<chi>'\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "interpret ltl_FG_to_rabin \\<Sigma> \"theG \\<chi>\" \\<G> w"], ["proof (prove)\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "by (insert \\<open>ltl_FG_to_rabin \\<Sigma> \\<G> w\\<close>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "define r\\<^sub>\\<chi> where \"r\\<^sub>\\<chi> = run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w\""], ["proof (state)\nthis:\n  r\\<^sub>\\<chi> = run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "moreover"], ["proof (state)\nthis:\n  r\\<^sub>\\<chi> = run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "have \"accept\" and \"accept\\<^sub>R (\\<delta>\\<^sub>\\<R>, q\\<^sub>\\<R>, {Acc\\<^sub>\\<R> j | j. j < max_rank}) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>R' &&&\n    accept\\<^sub>R\n     (\\<delta>\\<^sub>R, q\\<^sub>R,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n       j < max_rank\\<^sub>R})\n     w", "using \\<open>\\<chi> \\<in> \\<G>\\<close> \\<open>\\<exists>\\<chi>'. \\<chi> = G \\<chi>'\\<close> \\<open>\\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\\<close>"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> \\<G>\n  \\<exists>\\<chi>'. \\<chi> = G \\<chi>'\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R' &&&\n    accept\\<^sub>R\n     (\\<delta>\\<^sub>R, q\\<^sub>R,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n       j < max_rank\\<^sub>R})\n     w", "using mojmir_accept_iff_rabin_accept"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> \\<G>\n  \\<exists>\\<chi>'. \\<chi> = G \\<chi>'\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n  accept\\<^sub>R' =\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n     j < max_rank\\<^sub>R})\n   w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R' &&&\n    accept\\<^sub>R\n     (\\<delta>\\<^sub>R, q\\<^sub>R,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n       j < max_rank\\<^sub>R})\n     w", "by auto"], ["proof (state)\nthis:\n  accept\\<^sub>R'\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n     j < max_rank\\<^sub>R})\n   w\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "hence \"smallest_accepting_rank\\<^sub>\\<R> = Some (\\<pi> \\<chi>)\""], ["proof (prove)\nusing this:\n  accept\\<^sub>R'\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n     j < max_rank\\<^sub>R})\n   w\n\ngoal (1 subgoal):\n 1. smallest_accepting_rank\\<^sub>\\<R> = Some (\\<pi> \\<chi>)", "unfolding \\<pi>_def smallest_accepting_rank_def Mojmir_rabin_smallest_accepting_rank[symmetric]"], ["proof (prove)\nusing this:\n  accept\\<^sub>R'\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n     j < max_rank\\<^sub>R})\n   w\n\ngoal (1 subgoal):\n 1. (if accept\\<^sub>R'\n     then Some\n           (LEAST i.\n               finite fail \\<and>\n               finite (local.merge i) \\<and> infinite (succeed i))\n     else None) =\n    Some\n     (if \\<chi> \\<in> \\<G>\n      then the (if accept\\<^sub>R'\n                then Some\n                      (LEAST i.\n                          finite fail \\<and>\n                          finite (local.merge i) \\<and>\n                          infinite (succeed i))\n                else None)\n      else 0)", "using \\<open>\\<chi> \\<in> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  accept\\<^sub>R'\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n     j < max_rank\\<^sub>R})\n   w\n  \\<chi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. (if accept\\<^sub>R'\n     then Some\n           (LEAST i.\n               finite fail \\<and>\n               finite (local.merge i) \\<and> infinite (succeed i))\n     else None) =\n    Some\n     (if \\<chi> \\<in> \\<G>\n      then the (if accept\\<^sub>R'\n                then Some\n                      (LEAST i.\n                          finite fail \\<and>\n                          finite (local.merge i) \\<and>\n                          infinite (succeed i))\n                else None)\n      else 0)", "by simp"], ["proof (state)\nthis:\n  smallest_accepting_rank\\<^sub>\\<R> = Some (\\<pi> \\<chi>)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "hence \"accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (Acc\\<^sub>\\<R> (\\<pi> \\<chi>)) w\""], ["proof (prove)\nusing this:\n  smallest_accepting_rank\\<^sub>\\<R> = Some (\\<pi> \\<chi>)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n     (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n      succeed\\<^sub>R (\\<pi> \\<chi>))\n     w", "using \\<open>accept\\<^sub>R (\\<delta>\\<^sub>\\<R>, q\\<^sub>\\<R>, {Acc\\<^sub>\\<R> j | j. j < max_rank}) w\\<close> LeastI[of \"\\<lambda>i. accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (Acc\\<^sub>\\<R> i) w\"]"], ["proof (prove)\nusing this:\n  smallest_accepting_rank\\<^sub>\\<R> = Some (\\<pi> \\<chi>)\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n     j < max_rank\\<^sub>R})\n   w\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n   (fail\\<^sub>R \\<union> merge\\<^sub>R ?k, succeed\\<^sub>R ?k)\n   w \\<Longrightarrow>\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n   (fail\\<^sub>R \\<union>\n    merge\\<^sub>R\n     (LEAST x.\n         accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n          (fail\\<^sub>R \\<union> merge\\<^sub>R x, succeed\\<^sub>R x) w),\n    succeed\\<^sub>R\n     (LEAST x.\n         accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n          (fail\\<^sub>R \\<union> merge\\<^sub>R x, succeed\\<^sub>R x) w))\n   w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n     (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n      succeed\\<^sub>R (\\<pi> \\<chi>))\n     w", "by (auto simp add: smallest_accepting_rank\\<^sub>\\<R>_def)"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n   (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n    succeed\\<^sub>R (\\<pi> \\<chi>))\n   w\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "ultimately"], ["proof (chain)\npicking this:\n  r\\<^sub>\\<chi> = run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n   (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n    succeed\\<^sub>R (\\<pi> \\<chi>))\n   w", "have \"limit r\\<^sub>\\<chi> \\<inter> fst (Acc\\<^sub>\\<R> (\\<pi> \\<chi>)) = {}\" and \"limit r\\<^sub>\\<chi> \\<inter> snd (Acc\\<^sub>\\<R> (\\<pi> \\<chi>)) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  r\\<^sub>\\<chi> = run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n   (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n    succeed\\<^sub>R (\\<pi> \\<chi>))\n   w\n\ngoal (1 subgoal):\n 1. limit r\\<^sub>\\<chi> \\<inter>\n    fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n         succeed\\<^sub>R (\\<pi> \\<chi>)) =\n    {} &&&\n    limit r\\<^sub>\\<chi> \\<inter>\n    snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n         succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n    {}", "by simp+"], ["proof (state)\nthis:\n  limit r\\<^sub>\\<chi> \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) =\n  {}\n  limit r\\<^sub>\\<chi> \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "moreover"], ["proof (state)\nthis:\n  limit r\\<^sub>\\<chi> \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) =\n  {}\n  limit r\\<^sub>\\<chi> \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "have 1: \"(\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>)) (\\<lambda>\\<chi>. ltl_FG_to_rabin_def.q\\<^sub>R (theG \\<chi>))) \\<chi> = Some q\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n     (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))) \\<chi> =\n    Some q\\<^sub>R", "using \\<open>\\<chi> \\<in> \\<G>\\<close> \\<open>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\\<close>"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> \\<G>\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n     (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))) \\<chi> =\n    Some q\\<^sub>R", "by (simp add: LTL_Rabin.product_initial_state.simps subset_iff)"], ["proof (state)\nthis:\n  \\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n   (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))) \\<chi> =\n  Some q\\<^sub>R\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "have 2: \"finite (range (run\\<^sub>t \n              (\\<Delta>\\<^sub>\\<times> (\\<lambda>\\<chi>. ltl_FG_to_rabin_def.\\<delta>\\<^sub>R \\<Sigma> (theG \\<chi>)))\n              (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>)) (\\<lambda>\\<chi>. ltl_FG_to_rabin_def.q\\<^sub>R (theG \\<chi>))) \n              w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (range\n       (run\\<^sub>t\n         (\\<Delta>\\<^sub>\\<times>\n           (\\<lambda>\\<chi>.\n               semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n                (Abs (theG \\<chi>))))\n         (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n           (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n         w))", "using \\<open>finite (range r)\\<close>[unfolded r_def]"], ["proof (prove)\nusing this:\n  finite\n   (range (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w))\n\ngoal (1 subgoal):\n 1. finite\n     (range\n       (run\\<^sub>t\n         (\\<Delta>\\<^sub>\\<times>\n           (\\<lambda>\\<chi>.\n               semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n                (Abs (theG \\<chi>))))\n         (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n           (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n         w))", "by simp"], ["proof (state)\nthis:\n  finite\n   (range\n     (run\\<^sub>t\n       (\\<Delta>\\<^sub>\\<times>\n         (\\<lambda>\\<chi>.\n             semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))))\n       (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n         (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n       w))\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "ultimately"], ["proof (chain)\npicking this:\n  limit r\\<^sub>\\<chi> \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) =\n  {}\n  limit r\\<^sub>\\<chi> \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n  finite\n   (range\n     (run\\<^sub>t\n       (\\<Delta>\\<^sub>\\<times>\n         (\\<lambda>\\<chi>.\n             semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))))\n       (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n         (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n       w))", "have \"limit r \\<inter> fst P = {}\" and \"limit r \\<inter> snd P \\<noteq> {}\""], ["proof (prove)\nusing this:\n  limit r\\<^sub>\\<chi> \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) =\n  {}\n  limit r\\<^sub>\\<chi> \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n  finite\n   (range\n     (run\\<^sub>t\n       (\\<Delta>\\<^sub>\\<times>\n         (\\<lambda>\\<chi>.\n             semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))))\n       (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n         (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n       w))\n\ngoal (1 subgoal):\n 1. limit r \\<inter> fst P = {} &&& limit r \\<inter> snd P \\<noteq> {}", "using product_run_embed_limit_finiteness[OF 1 2]"], ["proof (prove)\nusing this:\n  limit r\\<^sub>\\<chi> \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) =\n  {}\n  limit r\\<^sub>\\<chi> \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n  finite\n   (range\n     (run\\<^sub>t\n       (\\<Delta>\\<^sub>\\<times>\n         (\\<lambda>\\<chi>.\n             semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))))\n       (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n         (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n       w))\n  (limit\n    (run\\<^sub>t\n      (\\<Delta>\\<^sub>\\<times>\n        (\\<lambda>\\<chi>.\n            semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n             (Abs (theG \\<chi>))))\n      (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n        (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n      w) \\<inter>\n   \\<Union> (\\<upharpoonleft>\\<^sub>\\<chi> ` ?S) =\n   {}) =\n  (limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter> ?S = {})\n\ngoal (1 subgoal):\n 1. limit r \\<inter> fst P = {} &&& limit r \\<inter> snd P \\<noteq> {}", "unfolding r_def r\\<^sub>\\<chi>_def P_def"], ["proof (prove)\nusing this:\n  limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) =\n  {}\n  limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n  finite\n   (range\n     (run\\<^sub>t\n       (\\<Delta>\\<^sub>\\<times>\n         (\\<lambda>\\<chi>.\n             semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))))\n       (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n         (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n       w))\n  (limit\n    (run\\<^sub>t\n      (\\<Delta>\\<^sub>\\<times>\n        (\\<lambda>\\<chi>.\n            semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n             (Abs (theG \\<chi>))))\n      (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n        (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n      w) \\<inter>\n   \\<Union> (\\<upharpoonleft>\\<^sub>\\<chi> ` ?S) =\n   {}) =\n  (limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter> ?S = {})\n\ngoal (1 subgoal):\n 1. limit\n     (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w) \\<inter>\n    fst (\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n          (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n           succeed\\<^sub>R (\\<pi> \\<chi>))) =\n    {} &&&\n    limit\n     (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w) \\<inter>\n    snd (\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n          (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n           succeed\\<^sub>R (\\<pi> \\<chi>))) \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  limit r \\<inter> fst P = {}\n  limit r \\<inter> snd P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "thus \"accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w\""], ["proof (prove)\nusing this:\n  limit r \\<inter> fst P = {}\n  limit r \\<inter> snd P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w", "unfolding P_def r_def"], ["proof (prove)\nusing this:\n  limit\n   (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w) \\<inter>\n  fst (\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n        (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n         succeed\\<^sub>R (\\<pi> \\<chi>))) =\n  {}\n  limit\n   (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w) \\<inter>\n  snd (\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n        (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n         succeed\\<^sub>R (\\<pi> \\<chi>))) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n     (\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n       (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n        succeed\\<^sub>R (\\<pi> \\<chi>)))\n     w", "by simp"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P\\<in>{\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                   (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma>\n                     \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                    mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                     (Abs (theG \\<chi>))\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n                    mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                     (Abs (theG \\<chi>))\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>)) |\n                  \\<chi>. \\<chi> \\<in> \\<G>}.\n     accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P\n      w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence \"accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) (combine_pairs' ?P') w\""], ["proof (prove)\nusing this:\n  \\<forall>P\\<in>{\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                   (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma>\n                     \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                    mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                     (Abs (theG \\<chi>))\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n                    mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                     (Abs (theG \\<chi>))\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>)) |\n                  \\<chi>. \\<chi> \\<in> \\<G>}.\n     accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P\n      w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n     (fst (snd (\\<P> \\<phi>)))\n     (local.combine_pairs'\n       {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n         (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n          mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n           (\\<pi> \\<chi>),\n          mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n           (\\<pi> \\<chi>)) |\n        \\<chi>. \\<chi> \\<in> \\<G>})\n     w", "using combine_pairs'_prop"], ["proof (prove)\nusing this:\n  \\<forall>P\\<in>{\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                   (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma>\n                     \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                    mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                     (Abs (theG \\<chi>))\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n                    mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                     (Abs (theG \\<chi>))\n                     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>)) |\n                  \\<chi>. \\<chi> \\<in> \\<G>}.\n     accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P\n      w\n  (\\<forall>P\\<in>?\\<P>. accepting_pair\\<^sub>R ?\\<delta> ?q\\<^sub>0 P ?w) =\n  accepting_pair\\<^sub>G\\<^sub>R ?\\<delta> ?q\\<^sub>0\n   (local.combine_pairs' ?\\<P>) ?w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n     (fst (snd (\\<P> \\<phi>)))\n     (local.combine_pairs'\n       {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n         (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n          mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n           (\\<pi> \\<chi>),\n          mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n           (\\<pi> \\<chi>)) |\n        \\<chi>. \\<chi> \\<in> \\<G>})\n     w", "by blast"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>)))\n   (local.combine_pairs'\n     {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n       (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n        mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>),\n        mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>)) |\n      \\<chi>. \\<chi> \\<in> \\<G>})\n   w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "moreover"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>)))\n   (local.combine_pairs'\n     {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n       (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n        mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>),\n        mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>)) |\n      \\<chi>. \\<chi> \\<in> \\<G>})\n   w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "{"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>)))\n   (local.combine_pairs'\n     {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n       (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n        mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>),\n        mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>)) |\n      \\<chi>. \\<chi> \\<in> \\<G>})\n   w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "fix \\<psi>"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "assume \"\\<psi> \\<in> \\<G>\""], ["proof (state)\nthis:\n  \\<psi> \\<in> \\<G>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence \"\\<exists>\\<chi>. \\<psi> = G \\<chi>\""], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<chi>. \\<psi> = G \\<chi>", "using \\<open>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\\<close> G_nested_propos_alt_def"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<G>\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  \\<^bold>G ?\\<phi> =\n  nested_propos ?\\<phi> \\<inter> {\\<psi>. \\<exists>x. \\<psi> = G x}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<chi>. \\<psi> = G \\<chi>", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<chi>. \\<psi> = G \\<chi>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "interpret ltl_FG_to_rabin \\<Sigma> \"theG \\<psi>\" \\<G> w"], ["proof (prove)\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "by (insert \\<open>ltl_FG_to_rabin \\<Sigma> \\<G> w\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "have \"accept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>R'", "using \\<open>\\<psi> \\<in> \\<G>\\<close> \\<open>\\<exists>\\<chi>. \\<psi> = G \\<chi>\\<close> \\<open>\\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\\<close>  mojmir_accept_iff_rabin_accept"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<G>\n  \\<exists>\\<chi>. \\<psi> = G \\<chi>\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n  accept\\<^sub>R' =\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n     j < max_rank\\<^sub>R})\n   w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R'", "by auto"], ["proof (state)\nthis:\n  accept\\<^sub>R'\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "then"], ["proof (chain)\npicking this:\n  accept\\<^sub>R'", "obtain i where \"smallest_accepting_rank = Some i\""], ["proof (prove)\nusing this:\n  accept\\<^sub>R'\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        smallest_accepting_rank\\<^sub>R = Some i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding smallest_accepting_rank_def"], ["proof (prove)\nusing this:\n  accept\\<^sub>R'\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (if accept\\<^sub>R'\n         then Some\n               (LEAST i.\n                   finite fail \\<and>\n                   finite (local.merge i) \\<and> infinite (succeed i))\n         else None) =\n        Some i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  smallest_accepting_rank\\<^sub>R = Some i\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence \"\\<pi> \\<psi> < max_rank\\<^sub>R\""], ["proof (prove)\nusing this:\n  smallest_accepting_rank\\<^sub>R = Some i\n\ngoal (1 subgoal):\n 1. \\<pi> \\<psi> < max_rank\\<^sub>R", "using smallest_accepting_rank_properties \\<pi>_def \\<open>\\<psi> \\<in> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  smallest_accepting_rank\\<^sub>R = Some i\n  smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  accept\\<^sub>R'\n  smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow> finite fail\n  smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  finite (local.merge ?i)\n  smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  infinite (succeed ?i)\n  smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  \\<forall>j<?i. finite (succeed j)\n  smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  ?i < max_rank\\<^sub>R\n  \\<pi> ?\\<psi> =\n  (if ?\\<psi> \\<in> \\<G>\n   then the (mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG ?\\<psi>)) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})\n   else 0)\n  \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<pi> \\<psi> < max_rank\\<^sub>R", "by auto"], ["proof (state)\nthis:\n  \\<pi> \\<psi> < max_rank\\<^sub>R\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "}"], ["proof (state)\nthis:\n  ?\\<psi>12 \\<in> \\<G> \\<Longrightarrow>\n  \\<pi> ?\\<psi>12\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<psi>12))\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence \"\\<And>\\<chi>. \\<pi> \\<chi> < ltl_FG_to_rabin_def.max_rank\\<^sub>R \\<Sigma> (theG \\<chi>)\""], ["proof (prove)\nusing this:\n  ?\\<psi>12 \\<in> \\<G> \\<Longrightarrow>\n  \\<pi> ?\\<psi>12\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<psi>12))\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<pi> \\<chi>\n       < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n          (Abs (theG \\<chi>))", "unfolding \\<pi>_def"], ["proof (prove)\nusing this:\n  ?\\<psi>12 \\<in> \\<G> \\<Longrightarrow>\n  (if ?\\<psi>12 \\<in> \\<G>\n   then the (mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG ?\\<psi>12)) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})\n   else 0)\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<psi>12))\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       (if \\<chi> \\<in> \\<G>\n        then the (mojmir_def.smallest_accepting_rank \\<Sigma>\n                   \\<up>af\\<^sub>G (Abs (theG \\<chi>)) w\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})\n        else 0)\n       < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n          (Abs (theG \\<chi>))", "using ltl_FG_to_rabin.max_rank_lowerbound[OF \\<open>ltl_FG_to_rabin \\<Sigma> \\<G> w\\<close>]"], ["proof (prove)\nusing this:\n  ?\\<psi>12 \\<in> \\<G> \\<Longrightarrow>\n  (if ?\\<psi>12 \\<in> \\<G>\n   then the (mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG ?\\<psi>12)) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})\n   else 0)\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<psi>12))\n  0 < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs ?\\<phi>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       (if \\<chi> \\<in> \\<G>\n        then the (mojmir_def.smallest_accepting_rank \\<Sigma>\n                   \\<up>af\\<^sub>G (Abs (theG \\<chi>)) w\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q})\n        else 0)\n       < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n          (Abs (theG \\<chi>))", "by force"], ["proof (state)\nthis:\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence \"combine_pairs' ?P' \\<in> snd (snd (\\<P> \\<phi>))\""], ["proof (prove)\nusing this:\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n\ngoal (1 subgoal):\n 1. local.combine_pairs'\n     {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n       (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n        mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>),\n        mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>)) |\n      \\<chi>. \\<chi> \\<in> \\<G>}\n    \\<in> snd (snd (\\<P> \\<phi>))", "using \\<open>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\\<close> \\<open>G \\<phi> \\<in> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<phi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. local.combine_pairs'\n     {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n       (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n        mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>),\n        mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>)) |\n      \\<chi>. \\<chi> \\<in> \\<G>}\n    \\<in> snd (snd (\\<P> \\<phi>))", "by auto"], ["proof (state)\nthis:\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  \\<in> snd (snd (\\<P> \\<phi>))\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>)))\n   (local.combine_pairs'\n     {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n       (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n        mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>),\n        mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>)) |\n      \\<chi>. \\<chi> \\<in> \\<G>})\n   w\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  \\<in> snd (snd (\\<P> \\<phi>))", "show ?rhs"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>)))\n   (local.combine_pairs'\n     {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n       (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n        mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>),\n        mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>)) |\n      \\<chi>. \\<chi> \\<in> \\<G>})\n   w\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  \\<in> snd (snd (\\<P> \\<phi>))\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w", "unfolding accept\\<^sub>G\\<^sub>R_simp2 ltl_FG_to_generalized_rabin.simps fst_conv snd_conv"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>G\\<^sub>R\n   (\\<Delta>\\<^sub>\\<times>\n     (\\<lambda>\\<chi>.\n         semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs (theG \\<chi>))))\n   (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n     (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n   (local.combine_pairs'\n     {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n       (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n        mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>),\n        mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n         (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         (\\<pi> \\<chi>)) |\n      \\<chi>. \\<chi> \\<in> \\<G>})\n   w\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  \\<in> {local.combine_pairs'\n          {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n            (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))\n              {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n             mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>),\n             mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>)) |\n           \\<chi>. \\<chi> \\<in> \\<G>} |\n         \\<G> \\<pi>.\n         \\<G> \\<subseteq> \\<^bold>G (G \\<phi>) \\<and>\n         G \\<phi> \\<in> \\<G> \\<and>\n         (\\<forall>\\<chi>.\n             \\<pi> \\<chi>\n             < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n                (Abs (theG \\<chi>)))}\n\ngoal (1 subgoal):\n 1. \\<exists>P\\<in>{local.combine_pairs'\n                     {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                       (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma>\n                         \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n                         {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                        mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                         (Abs (theG \\<chi>))\n                         {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                         (\\<pi> \\<chi>),\n                        mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                         (Abs (theG \\<chi>))\n                         {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                         (\\<pi> \\<chi>)) |\n                      \\<chi>. \\<chi> \\<in> \\<G>} |\n                    \\<G> \\<pi>.\n                    \\<G> \\<subseteq> \\<^bold>G (G \\<phi>) \\<and>\n                    G \\<phi> \\<in> \\<G> \\<and>\n                    (\\<forall>\\<chi>.\n                        \\<pi> \\<chi>\n                        < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n                           (Abs (theG \\<chi>)))}.\n       accepting_pair\\<^sub>G\\<^sub>R\n        (\\<Delta>\\<^sub>\\<times>\n          (\\<lambda>\\<chi>.\n              semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n               (Abs (theG \\<chi>))))\n        (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n          (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n        P w", "by blast"], ["proof (state)\nthis:\n  accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "}"], ["proof (state)\nthis:\n  w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n  accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "{"], ["proof (state)\nthis:\n  w \\<Turnstile> F G \\<phi> \\<Longrightarrow>\n  accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "assume ?rhs"], ["proof (state)\nthis:\n  accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "then"], ["proof (chain)\npicking this:\n  accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w", "obtain \\<G> \\<pi> P where \"P = combine_pairs' {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi> (ltl_FG_to_rabin_def.Acc\\<^sub>R \\<Sigma> (theG \\<chi>) \\<G> (\\<pi> \\<chi>)) | \\<chi>. \\<chi> \\<in> \\<G>}\" (is \"P = combine_pairs' ?P'\") \n      and \"accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w\"\n      and \"\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\" and \"G \\<phi> \\<in> \\<G>\" and \"\\<And>\\<chi>. \\<pi> \\<chi> < ltl_FG_to_rabin_def.max_rank\\<^sub>R \\<Sigma> (theG \\<chi>)\""], ["proof (prove)\nusing this:\n  accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w\n\ngoal (1 subgoal):\n 1. (\\<And>P \\<G> \\<pi>.\n        \\<lbrakk>P =\n                 local.combine_pairs'\n                  {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                    (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma>\n                      \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n                      {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                     mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                      (Abs (theG \\<chi>))\n                      {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n                     mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                      (Abs (theG \\<chi>))\n                      {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>)) |\n                   \\<chi>. \\<chi> \\<in> \\<G>};\n         accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n          (fst (snd (\\<P> \\<phi>))) P w;\n         \\<G> \\<subseteq> \\<^bold>G (G \\<phi>); G \\<phi> \\<in> \\<G>;\n         \\<And>\\<chi>.\n            \\<pi> \\<chi>\n            < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n               (Abs (theG \\<chi>))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding accept\\<^sub>G\\<^sub>R_def"], ["proof (prove)\nusing this:\n  \\<exists>(Fin, Inf)\\<in>snd (snd (\\<P> \\<phi>)).\n     accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n      (fst (snd (\\<P> \\<phi>))) (Fin, Inf) w\n\ngoal (1 subgoal):\n 1. (\\<And>P \\<G> \\<pi>.\n        \\<lbrakk>P =\n                 local.combine_pairs'\n                  {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                    (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma>\n                      \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n                      {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                     mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                      (Abs (theG \\<chi>))\n                      {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n                     mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                      (Abs (theG \\<chi>))\n                      {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>)) |\n                   \\<chi>. \\<chi> \\<in> \\<G>};\n         accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n          (fst (snd (\\<P> \\<phi>))) P w;\n         \\<G> \\<subseteq> \\<^bold>G (G \\<phi>); G \\<phi> \\<in> \\<G>;\n         \\<And>\\<chi>.\n            \\<pi> \\<chi>\n            < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n               (Abs (theG \\<chi>))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P =\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>))) P w\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<phi> \\<in> \\<G>\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "moreover"], ["proof (state)\nthis:\n  P =\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>))) P w\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<phi> \\<in> \\<G>\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence P'_def: \"\\<And>P. P \\<in> ?P' \\<Longrightarrow> accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w\""], ["proof (prove)\nusing this:\n  P =\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>))) P w\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<phi> \\<in> \\<G>\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "using combine_pairs'_prop"], ["proof (prove)\nusing this:\n  P =\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>))) P w\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<phi> \\<in> \\<G>\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n  (\\<forall>P\\<in>?\\<P>. accepting_pair\\<^sub>R ?\\<delta> ?q\\<^sub>0 P ?w) =\n  accepting_pair\\<^sub>G\\<^sub>R ?\\<delta> ?q\\<^sub>0\n   (local.combine_pairs' ?\\<P>) ?w\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n                 (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>))\n                   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                  mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>),\n                  mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                   (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                   (\\<pi> \\<chi>)) |\n                \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n       accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>)))\n        P w", "by meson"], ["proof (state)\nthis:\n  ?P10\n  \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n          (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n            (Abs (theG \\<chi>))\n            {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n           mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n            (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n            (\\<pi> \\<chi>),\n           mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n            (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n            (\\<pi> \\<chi>)) |\n         \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n  accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) ?P10\n   w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "note \\<G>_properties[OF \\<open>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\\<close>]"], ["proof (state)\nthis:\n  finite \\<G>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "hence \"ltl_FG_to_rabin \\<Sigma> \\<G> w\""], ["proof (prove)\nusing this:\n  finite \\<G>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "using \\<open>finite \\<Sigma>\\<close> \\<open>range w \\<subseteq> \\<Sigma>\\<close>"], ["proof (prove)\nusing this:\n  finite \\<G>\n  Only_G \\<G>\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "unfolding ltl_FG_to_rabin_def"], ["proof (prove)\nusing this:\n  finite \\<G>\n  Only_G \\<G>\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. Only_G \\<G> \\<and> range w \\<subseteq> \\<Sigma> \\<and> finite \\<Sigma>", "by auto"], ["proof (state)\nthis:\n  ltl_FG_to_rabin \\<Sigma> \\<G> w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "have \"\\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "proof (rule+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "fix \\<psi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "assume \"G \\<psi> \\<in> \\<G>\""], ["proof (state)\nthis:\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "define \\<chi> where \"\\<chi> = G \\<psi>\""], ["proof (state)\nthis:\n  \\<chi> = G \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "define P where \"P = \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi> (ltl_FG_to_rabin_def.Acc\\<^sub>R \\<Sigma> \\<psi> \\<G> (\\<pi> \\<chi>))\""], ["proof (state)\nthis:\n  P =\n  \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n   (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n    mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>))\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "hence \"\\<chi> \\<in> \\<G>\" and \"theG \\<chi> = \\<psi>\""], ["proof (prove)\nusing this:\n  P =\n  \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n   (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n    mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>))\n\ngoal (1 subgoal):\n 1. \\<chi> \\<in> \\<G> &&& theG \\<chi> = \\<psi>", "using \\<chi>_def \\<open>G \\<psi> \\<in> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  P =\n  \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n   (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n    mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n     {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>))\n  \\<chi> = G \\<psi>\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<chi> \\<in> \\<G> &&& theG \\<chi> = \\<psi>", "by simp+"], ["proof (state)\nthis:\n  \\<chi> \\<in> \\<G>\n  theG \\<chi> = \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "hence \"P \\<in> ?P'\""], ["proof (prove)\nusing this:\n  \\<chi> \\<in> \\<G>\n  theG \\<chi> = \\<psi>\n\ngoal (1 subgoal):\n 1. P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n              (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n                (Abs (theG \\<chi>))\n                {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n               mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n                (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                (\\<pi> \\<chi>),\n               mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n                (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                (\\<pi> \\<chi>)) |\n             \\<chi>. \\<chi> \\<in> \\<G>}", "unfolding P_def"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> \\<G>\n  theG \\<chi> = \\<psi>\n\ngoal (1 subgoal):\n 1. \\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>))\n    \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n            (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))\n              {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n             mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>),\n             mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>)) |\n           \\<chi>. \\<chi> \\<in> \\<G>}", "by auto"], ["proof (state)\nthis:\n  P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n            (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))\n              {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n             mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>),\n             mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>)) |\n           \\<chi>. \\<chi> \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "hence \"accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w\""], ["proof (prove)\nusing this:\n  P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n            (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))\n              {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n             mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>),\n             mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>)) |\n           \\<chi>. \\<chi> \\<in> \\<G>}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w", "using P'_def"], ["proof (prove)\nusing this:\n  P \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n            (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))\n              {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n             mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>),\n             mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n              (\\<pi> \\<chi>)) |\n           \\<chi>. \\<chi> \\<in> \\<G>}\n  ?P10\n  \\<in> {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n          (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n            (Abs (theG \\<chi>))\n            {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n           mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G\n            (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n            (\\<pi> \\<chi>),\n           mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n            (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n            (\\<pi> \\<chi>)) |\n         \\<chi>. \\<chi> \\<in> \\<G>} \\<Longrightarrow>\n  accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) ?P10\n   w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w", "by blast"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "interpret ltl_FG_to_rabin \\<Sigma> \\<psi> \\<G> w"], ["proof (prove)\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "by (insert \\<open>ltl_FG_to_rabin \\<Sigma> \\<G> w\\<close>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "define r\\<^sub>\\<chi> where \"r\\<^sub>\\<chi> = run\\<^sub>t \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> w\""], ["proof (state)\nthis:\n  r\\<^sub>\\<chi> = run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "have \"limit r \\<inter> fst P = {}\" and \"limit r \\<inter> snd P \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limit r \\<inter> fst P = {} &&& limit r \\<inter> snd P \\<noteq> {}", "using \\<open>accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w\\<close>"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) P w\n\ngoal (1 subgoal):\n 1. limit r \\<inter> fst P = {} &&& limit r \\<inter> snd P \\<noteq> {}", "unfolding r_def accepting_pair\\<^sub>R_def"], ["proof (prove)\nusing this:\n  limit\n   (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w) \\<inter>\n  fst P =\n  {} \\<and>\n  limit\n   (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w) \\<inter>\n  snd P \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. limit\n     (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w) \\<inter>\n    fst P =\n    {} &&&\n    limit\n     (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w) \\<inter>\n    snd P \\<noteq>\n    {}", "by metis+"], ["proof (state)\nthis:\n  limit r \\<inter> fst P = {}\n  limit r \\<inter> snd P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "moreover"], ["proof (state)\nthis:\n  limit r \\<inter> fst P = {}\n  limit r \\<inter> snd P \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "have 1: \"(\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>)) (\\<lambda>\\<chi>. ltl_FG_to_rabin_def.q\\<^sub>R (theG \\<chi>))) (G \\<psi>) = Some q\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n     (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>)))\n     (G \\<psi>) =\n    Some q\\<^sub>R", "using \\<open>G \\<psi> \\<in> \\<G>\\<close> \\<open>\\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\\<close>"], ["proof (prove)\nusing this:\n  G \\<psi> \\<in> \\<G>\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n     (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>)))\n     (G \\<psi>) =\n    Some q\\<^sub>R", "by (auto simp add: LTL_Rabin.product_initial_state.simps subset_iff)"], ["proof (state)\nthis:\n  \\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n   (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>)))\n   (G \\<psi>) =\n  Some q\\<^sub>R\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "have 2: \"finite (range (run\\<^sub>t (\\<Delta>\\<^sub>\\<times> (\\<lambda>\\<chi>. ltl_FG_to_rabin_def.\\<delta>\\<^sub>R \\<Sigma> (theG \\<chi>))) (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>)) (\\<lambda>\\<chi>. ltl_FG_to_rabin_def.q\\<^sub>R (theG \\<chi>)))  w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (range\n       (run\\<^sub>t\n         (\\<Delta>\\<^sub>\\<times>\n           (\\<lambda>\\<chi>.\n               semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n                (Abs (theG \\<chi>))))\n         (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n           (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n         w))", "using \\<open>finite (range r)\\<close>[unfolded r_def]"], ["proof (prove)\nusing this:\n  finite\n   (range (run\\<^sub>t (fst (\\<P> \\<phi>)) (fst (snd (\\<P> \\<phi>))) w))\n\ngoal (1 subgoal):\n 1. finite\n     (range\n       (run\\<^sub>t\n         (\\<Delta>\\<^sub>\\<times>\n           (\\<lambda>\\<chi>.\n               semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n                (Abs (theG \\<chi>))))\n         (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n           (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n         w))", "by simp"], ["proof (state)\nthis:\n  finite\n   (range\n     (run\\<^sub>t\n       (\\<Delta>\\<^sub>\\<times>\n         (\\<lambda>\\<chi>.\n             semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n              (Abs (theG \\<chi>))))\n       (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n         (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n       w))\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "have \"\\<And>S. limit r \\<inter> (\\<Union> (\\<upharpoonleft>\\<^sub>\\<chi> ` S)) = {} \\<longleftrightarrow> limit r\\<^sub>\\<chi> \\<inter> S = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       (limit r \\<inter> \\<Union> (\\<upharpoonleft>\\<^sub>\\<chi> ` S) =\n        {}) =\n       (limit r\\<^sub>\\<chi> \\<inter> S = {})", "using product_run_embed_limit_finiteness[OF 1 2]"], ["proof (prove)\nusing this:\n  (limit\n    (run\\<^sub>t\n      (\\<Delta>\\<^sub>\\<times>\n        (\\<lambda>\\<chi>.\n            semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n             (Abs (theG \\<chi>))))\n      (\\<iota>\\<^sub>\\<times> (\\<^bold>G (G \\<phi>))\n        (\\<lambda>\\<chi>. semi_mojmir_def.initial (Abs (theG \\<chi>))))\n      w) \\<inter>\n   \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` ?S) =\n   {}) =\n  (limit\n    (run\\<^sub>t\n      (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G\n        (Abs (theG (G \\<psi>))))\n      q\\<^sub>R w) \\<inter>\n   ?S =\n   {})\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       (limit r \\<inter> \\<Union> (\\<upharpoonleft>\\<^sub>\\<chi> ` S) =\n        {}) =\n       (limit r\\<^sub>\\<chi> \\<inter> S = {})", "by (simp add: r_def r\\<^sub>\\<chi>_def \\<chi>_def)"], ["proof (state)\nthis:\n  (limit r \\<inter> \\<Union> (\\<upharpoonleft>\\<^sub>\\<chi> ` ?S10) = {}) =\n  (limit r\\<^sub>\\<chi> \\<inter> ?S10 = {})\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "ultimately"], ["proof (chain)\npicking this:\n  limit r \\<inter> fst P = {}\n  limit r \\<inter> snd P \\<noteq> {}\n  (limit r \\<inter> \\<Union> (\\<upharpoonleft>\\<^sub>\\<chi> ` ?S10) = {}) =\n  (limit r\\<^sub>\\<chi> \\<inter> ?S10 = {})", "have \"limit r\\<^sub>\\<chi> \\<inter> fst (Acc\\<^sub>\\<R> (\\<pi> \\<chi>)) = {}\" and \"limit r\\<^sub>\\<chi> \\<inter> snd (Acc\\<^sub>\\<R> (\\<pi> \\<chi>)) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  limit r \\<inter> fst P = {}\n  limit r \\<inter> snd P \\<noteq> {}\n  (limit r \\<inter> \\<Union> (\\<upharpoonleft>\\<^sub>\\<chi> ` ?S10) = {}) =\n  (limit r\\<^sub>\\<chi> \\<inter> ?S10 = {})\n\ngoal (1 subgoal):\n 1. limit r\\<^sub>\\<chi> \\<inter>\n    fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n         succeed\\<^sub>R (\\<pi> \\<chi>)) =\n    {} &&&\n    limit r\\<^sub>\\<chi> \\<inter>\n    snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n         succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n    {}", "unfolding P_def fst_conv snd_conv embed_pair.simps"], ["proof (prove)\nusing this:\n  limit r \\<inter>\n  \\<Union>\n   (\\<upharpoonleft>\\<^sub>\\<chi> `\n    (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>))) =\n  {}\n  limit r \\<inter>\n  \\<Union>\n   (\\<upharpoonleft>\\<^sub>\\<chi> ` succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n  (limit r \\<inter> \\<Union> (\\<upharpoonleft>\\<^sub>\\<chi> ` ?S10) = {}) =\n  (limit r\\<^sub>\\<chi> \\<inter> ?S10 = {})\n\ngoal (1 subgoal):\n 1. limit r\\<^sub>\\<chi> \\<inter>\n    (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>)) =\n    {} &&&\n    limit r\\<^sub>\\<chi> \\<inter> succeed\\<^sub>R (\\<pi> \\<chi>) \\<noteq> {}", "by meson+"], ["proof (state)\nthis:\n  limit r\\<^sub>\\<chi> \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) =\n  {}\n  limit r\\<^sub>\\<chi> \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "hence \"accepting_pair\\<^sub>R \\<delta>\\<^sub>\\<R> q\\<^sub>\\<R> (Acc\\<^sub>\\<R> (\\<pi> \\<chi>)) w\""], ["proof (prove)\nusing this:\n  limit r\\<^sub>\\<chi> \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) =\n  {}\n  limit r\\<^sub>\\<chi> \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n     (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n      succeed\\<^sub>R (\\<pi> \\<chi>))\n     w", "unfolding r\\<^sub>\\<chi>_def"], ["proof (prove)\nusing this:\n  limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter>\n  fst (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) =\n  {}\n  limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter>\n  snd (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n       succeed\\<^sub>R (\\<pi> \\<chi>)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n     (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n      succeed\\<^sub>R (\\<pi> \\<chi>))\n     w", "by simp"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n   (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n    succeed\\<^sub>R (\\<pi> \\<chi>))\n   w\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "hence \"accept\\<^sub>R (\\<delta>\\<^sub>\\<R>, q\\<^sub>\\<R>, {Acc\\<^sub>\\<R> j | j. j < max_rank}) w\""], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n   (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n    succeed\\<^sub>R (\\<pi> \\<chi>))\n   w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R\n     (\\<delta>\\<^sub>R, q\\<^sub>R,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n       j < max_rank\\<^sub>R})\n     w", "using \\<open>\\<And>\\<chi>. \\<pi> \\<chi> < ltl_FG_to_rabin_def.max_rank\\<^sub>R \\<Sigma> (theG \\<chi>)\\<close> \\<open>theG \\<chi> = \\<psi>\\<close>"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R \\<delta>\\<^sub>R q\\<^sub>R\n   (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>),\n    succeed\\<^sub>R (\\<pi> \\<chi>))\n   w\n  \\<pi> ?\\<chi>\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>))\n  theG \\<chi> = \\<psi>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R\n     (\\<delta>\\<^sub>R, q\\<^sub>R,\n      {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n       j < max_rank\\<^sub>R})\n     w", "unfolding accept\\<^sub>R_simp accepting_pair\\<^sub>R_def fst_conv snd_conv"], ["proof (prove)\nusing this:\n  limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter>\n  (fail\\<^sub>R \\<union> merge\\<^sub>R (\\<pi> \\<chi>)) =\n  {} \\<and>\n  limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter>\n  succeed\\<^sub>R (\\<pi> \\<chi>) \\<noteq>\n  {}\n  \\<pi> ?\\<chi>\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>))\n  theG \\<chi> = \\<psi>\n\ngoal (1 subgoal):\n 1. \\<exists>(Fin, Inf)\n             \\<in>{(fail\\<^sub>R \\<union> merge\\<^sub>R j,\n                    succeed\\<^sub>R j) |\n                   j. j < max_rank\\<^sub>R}.\n       limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter> Fin =\n       {} \\<and>\n       limit (run\\<^sub>t \\<delta>\\<^sub>R q\\<^sub>R w) \\<inter>\n       Inf \\<noteq>\n       {}", "by blast"], ["proof (state)\nthis:\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n     j < max_rank\\<^sub>R})\n   w\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "thus \"accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\""], ["proof (prove)\nusing this:\n  accept\\<^sub>R\n   (\\<delta>\\<^sub>R, q\\<^sub>R,\n    {(fail\\<^sub>R \\<union> merge\\<^sub>R j, succeed\\<^sub>R j) |j.\n     j < max_rank\\<^sub>R})\n   w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "by simp"], ["proof (state)\nthis:\n  accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> F G \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  P =\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>))) P w\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<phi> \\<in> \\<G>\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "show ?lhs"], ["proof (prove)\nusing this:\n  P =\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>))) P w\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<phi> \\<in> \\<G>\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n\ngoal (1 subgoal):\n 1. w \\<Turnstile> F G \\<phi>", "unfolding ltl_to_rabin_correct[OF \\<open>finite \\<Sigma>\\<close> assms]"], ["proof (prove)\nusing this:\n  P =\n  local.combine_pairs'\n   {\\<^bold>\\<upharpoonleft>\\<^sub>\\<chi>\n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs (theG \\<chi>))\n       {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} (\\<pi> \\<chi>),\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G\n       (Abs (theG \\<chi>)) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n       (\\<pi> \\<chi>)) |\n    \\<chi>. \\<chi> \\<in> \\<G>}\n  accepting_pair\\<^sub>G\\<^sub>R (fst (\\<P> \\<phi>))\n   (fst (snd (\\<P> \\<phi>))) P w\n  \\<G> \\<subseteq> \\<^bold>G (G \\<phi>)\n  G \\<phi> \\<in> \\<G>\n  \\<pi> ?\\<chi>10\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>10))\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n\ngoal (1 subgoal):\n 1. \\<exists>\\<G>\\<subseteq>\\<^bold>G (G \\<phi>).\n       G \\<phi> \\<in> \\<G> \\<and>\n       (\\<forall>\\<psi>.\n           G \\<psi> \\<in> \\<G> \\<longrightarrow>\n           accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w)", "by auto"], ["proof (state)\nthis:\n  w \\<Turnstile> F G \\<phi>\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  accept\\<^sub>G\\<^sub>R (\\<P> \\<phi>) w \\<Longrightarrow>\n  w \\<Turnstile> F G \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "subsection \\<open>Automaton Template\\<close>\n\n\\<comment> \\<open>This locale provides the construction template for all composed constructions.\\<close>"], ["", "locale ltl_to_rabin_base_def =\n  fixes\n    \\<delta> :: \"'a ltl\\<^sub>P \\<Rightarrow> 'a set \\<Rightarrow> 'a ltl\\<^sub>P\"\n  fixes\n    \\<delta>\\<^sub>M :: \"'a ltl\\<^sub>P \\<Rightarrow> 'a set \\<Rightarrow> 'a ltl\\<^sub>P\"\n  fixes\n    q\\<^sub>0 :: \"'a ltl \\<Rightarrow> 'a ltl\\<^sub>P\"\n  fixes \n    q\\<^sub>0\\<^sub>M :: \"'a ltl \\<Rightarrow> 'a ltl\\<^sub>P\"\n  fixes\n    M_fin :: \"('a ltl \\<rightharpoonup> nat) \\<Rightarrow> ('a ltl\\<^sub>P \\<times> ('a ltl \\<rightharpoonup> 'a ltl\\<^sub>P \\<rightharpoonup> nat), 'a set) transition set\"\nbegin\n\n\\<comment> \\<open>Transition Function and Initial State\\<close>"], ["", "fun delta\nwhere\n  \"delta \\<Sigma> = \\<delta> \\<times> \\<Delta>\\<^sub>\\<times> (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M o q\\<^sub>0\\<^sub>M o theG)\""], ["", "fun initial\nwhere\n  \"initial \\<phi> = (q\\<^sub>0 \\<phi>, \\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>) (semi_mojmir_def.initial o q\\<^sub>0\\<^sub>M o theG))\"\n\n\\<comment> \\<open>Acceptance Condition\\<close>"], ["", "definition max_rank_of\nwhere\n  \"max_rank_of \\<Sigma> \\<psi> \\<equiv> semi_mojmir_def.max_rank \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<psi>))\""], ["", "fun Acc_fin\nwhere\n  \"Acc_fin \\<Sigma> \\<pi> \\<chi> = \\<Union>(embed_transition_snd ` \\<Union>(embed_transition \\<chi> ` \n     (mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\n     \\<union> mojmir_to_rabin_def.merge\\<^sub>R \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} (the (\\<pi> \\<chi>)))))\""], ["", "fun Acc_inf\nwhere\n  \"Acc_inf \\<pi> \\<chi> = \\<Union>(embed_transition_snd ` \\<Union>(embed_transition \\<chi> ` \n    (mojmir_to_rabin_def.succeed\\<^sub>R \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} (the (\\<pi> \\<chi>)))))\""], ["", "abbreviation Acc\nwhere\n  \"Acc \\<Sigma> \\<pi> \\<chi> \\<equiv> (Acc_fin \\<Sigma> \\<pi> \\<chi>, Acc_inf \\<pi> \\<chi>)\""], ["", "fun rabin_pairs :: \"'a set set \\<Rightarrow> 'a ltl \\<Rightarrow> ('a ltl\\<^sub>P \\<times> ('a ltl \\<rightharpoonup> 'a ltl\\<^sub>P \\<rightharpoonup> nat), 'a set) generalized_rabin_condition\"\nwhere\n  \"rabin_pairs \\<Sigma> \\<phi> = {(M_fin \\<pi> \\<union> \\<Union>{Acc_fin \\<Sigma> \\<pi> \\<chi> | \\<chi>. \\<chi> \\<in> dom \\<pi>}, {Acc_inf \\<pi> \\<chi> | \\<chi>. \\<chi> \\<in> dom \\<pi>}) \n    | \\<pi>. dom \\<pi> \\<subseteq> \\<^bold>G \\<phi> \\<and> (\\<forall>\\<chi> \\<in> dom \\<pi>. the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>)}\""], ["", "fun ltl_to_generalized_rabin :: \"'a set set \\<Rightarrow> 'a ltl \\<Rightarrow> ('a ltl\\<^sub>P \\<times> ('a ltl \\<rightharpoonup> 'a ltl\\<^sub>P \\<rightharpoonup> nat), 'a set) generalized_rabin_automaton\" (\"\\<A>\")\nwhere\n  \"\\<A> \\<Sigma> \\<phi> = (delta \\<Sigma>, initial \\<phi>, rabin_pairs \\<Sigma> \\<phi>)\""], ["", "end"], ["", "locale ltl_to_rabin_base = ltl_to_rabin_base_def +\n  fixes\n    \\<Sigma> :: \"'a set set\" \n  fixes\n    w :: \"'a set word\"\n  assumes\n    finite_\\<Sigma>: \"finite \\<Sigma>\"\n  assumes\n    bounded_w: \"range w \\<subseteq> \\<Sigma>\"\n  assumes\n    M_fin_monotonic: \"dom \\<pi> = dom \\<pi>' \\<Longrightarrow> (\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> the (\\<pi> \\<chi>) \\<le> the (\\<pi>' \\<chi>)) \\<Longrightarrow> M_fin \\<pi> \\<subseteq> M_fin \\<pi>'\"\n  assumes \n    finite_reach': \"finite (reach \\<Sigma> \\<delta> (q\\<^sub>0 \\<phi>))\"\n  assumes\n    mojmir_to_rabin: \"Only_G \\<G> \\<Longrightarrow> mojmir_to_rabin \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w {q. \\<G> \\<up>\\<Turnstile>\\<^sub>P q}\" \nbegin"], ["", "lemma semi_mojmir:\n  \"semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w", "using mojmir_to_rabin[of \"{}\"]"], ["proof (prove)\nusing this:\n  Only_G {} \\<Longrightarrow>\n  mojmir_to_rabin \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M ?\\<psi>) w\n   {q. {} \\<up>\\<Turnstile>\\<^sub>P q}\n\ngoal (1 subgoal):\n 1. semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w", "by (simp add: mojmir_to_rabin_def mojmir_def)"], ["", "lemma finite_reach:\n  \"finite (reach \\<Sigma> (delta \\<Sigma>) (initial \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (reach \\<Sigma> (delta \\<Sigma>) (initial \\<phi>))", "apply (cases \"\\<Sigma> = {}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Sigma> = {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (delta \\<Sigma>) (initial \\<phi>))\n 2. \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (delta \\<Sigma>) (initial \\<phi>))", "apply (simp add: reach_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite (reach \\<Sigma> (delta \\<Sigma>) (initial \\<phi>))", "apply (simp only: ltl_to_rabin_base_def.initial.simps ltl_to_rabin_base_def.delta.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite\n     (reach \\<Sigma>\n       \\<delta> \\<times> \\<Delta>\\<^sub>\\<times>\n                          (semi_mojmir_def.step \\<Sigma>\n                            \\<delta>\\<^sub>M \\<circ>\n                           q\\<^sub>0\\<^sub>M \\<circ>\n                           theG)\n       (q\\<^sub>0 \\<phi>,\n        \\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>)\n         (semi_mojmir_def.initial \\<circ> q\\<^sub>0\\<^sub>M \\<circ> theG)))", "apply (rule finite_reach_simple_product[OF finite_reach' finite_reach_product])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Sigma> \\<noteq> {} \\<Longrightarrow>\n    finite\n     (dom (\\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>)\n            (semi_mojmir_def.initial \\<circ> q\\<^sub>0\\<^sub>M \\<circ>\n             theG)))\n 2. \\<And>x.\n       \\<lbrakk>\\<Sigma> \\<noteq> {};\n        x \\<in> dom (\\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>)\n                      (semi_mojmir_def.initial \\<circ>\n                       q\\<^sub>0\\<^sub>M \\<circ>\n                       theG))\\<rbrakk>\n       \\<Longrightarrow> finite\n                          (reach \\<Sigma>\n                            ((semi_mojmir_def.step \\<Sigma>\n                               \\<delta>\\<^sub>M \\<circ>\n                              q\\<^sub>0\\<^sub>M \\<circ>\n                              theG)\n                              x)\n                            (the (\\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>)\n                                   (semi_mojmir_def.initial \\<circ>\n                                    q\\<^sub>0\\<^sub>M \\<circ>\n                                    theG)\n                                   x)))", "apply (insert mojmir_to_rabin[of \"{}\", unfolded mojmir_to_rabin_def mojmir_def])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Sigma> \\<noteq> {};\n     \\<And>\\<psi>.\n        Only_G {} \\<Longrightarrow>\n        semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>)\n         w \\<and>\n        mojmir_axioms \\<delta>\\<^sub>M\n         (Collect (ltl_prop_entails_abs {}))\\<rbrakk>\n    \\<Longrightarrow> finite\n                       (dom (\\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>)\n                              (semi_mojmir_def.initial \\<circ>\n                               q\\<^sub>0\\<^sub>M \\<circ>\n                               theG)))\n 2. \\<And>x.\n       \\<lbrakk>\\<Sigma> \\<noteq> {};\n        x \\<in> dom (\\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>)\n                      (semi_mojmir_def.initial \\<circ>\n                       q\\<^sub>0\\<^sub>M \\<circ>\n                       theG));\n        \\<And>\\<psi>.\n           Only_G {} \\<Longrightarrow>\n           semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>)\n            w \\<and>\n           mojmir_axioms \\<delta>\\<^sub>M\n            (Collect (ltl_prop_entails_abs {}))\\<rbrakk>\n       \\<Longrightarrow> finite\n                          (reach \\<Sigma>\n                            ((semi_mojmir_def.step \\<Sigma>\n                               \\<delta>\\<^sub>M \\<circ>\n                              q\\<^sub>0\\<^sub>M \\<circ>\n                              theG)\n                              x)\n                            (the (\\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>)\n                                   (semi_mojmir_def.initial \\<circ>\n                                    q\\<^sub>0\\<^sub>M \\<circ>\n                                    theG)\n                                   x)))", "apply (auto simp add: dom_def intro: G_nested_finite semi_mojmir.wellformed_\\<R>)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma run_limit_not_empty:\n  \"limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<noteq> {}", "by (metis emptyE finite_\\<Sigma> limit_nonemptyE finite_reach bounded_w run\\<^sub>t_finite)"], ["", "lemma run_properties:\n  fixes \\<phi>\n  defines \"r \\<equiv> run (delta \\<Sigma>) (initial \\<phi>) w\"\n  shows \"fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (w [0 \\<rightarrow> i])\"\n    and \"\\<And>\\<chi> q. \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow> the (snd (r i) \\<chi>) q = semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w) &&&\n    (\\<And>\\<chi> q.\n        \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n        the (snd (r i) \\<chi>) q =\n        semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n         (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w)\n 2. \\<And>\\<chi> q.\n       \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n       the (snd (r i) \\<chi>) q =\n       semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n        (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i", "have sm: \"\\<And>\\<psi>. semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w", "using mojmir_to_rabin[of \"{}\"]"], ["proof (prove)\nusing this:\n  Only_G {} \\<Longrightarrow>\n  mojmir_to_rabin \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M ?\\<psi>) w\n   {q. {} \\<up>\\<Turnstile>\\<^sub>P q}\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w", "unfolding mojmir_to_rabin_def mojmir_def"], ["proof (prove)\nusing this:\n  Only_G {} \\<Longrightarrow>\n  semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M ?\\<psi>) w \\<and>\n  mojmir_axioms \\<delta>\\<^sub>M (Collect (ltl_prop_entails_abs {}))\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w", "by simp"], ["proof (state)\nthis:\n  semi_mojmir \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M ?\\<psi>7) w\n\ngoal (2 subgoals):\n 1. fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w)\n 2. \\<And>\\<chi> q.\n       \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n       the (snd (r i) \\<chi>) q =\n       semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n        (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i", "have \"r i = (foldl \\<delta> (q\\<^sub>0 \\<phi>) (w [0 \\<rightarrow> i]), \n    \\<lambda>\\<chi>. if \\<chi> \\<in> \\<^bold>G \\<phi> then Some (\\<lambda>\\<psi>. foldl (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>))) (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>))) (map w [0..< i]) \\<psi>) else None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r i =\n    (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n     \\<lambda>\\<chi>.\n        if \\<chi> \\<in> \\<^bold>G \\<phi>\n        then Some\n              (foldl\n                (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                  (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (map w [0..<i]))\n        else None)", "proof (induction i)"], ["proof (state)\ngoal (2 subgoals):\n 1. r 0 =\n    (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix 0 w),\n     \\<lambda>\\<chi>.\n        if \\<chi> \\<in> \\<^bold>G \\<phi>\n        then Some\n              (foldl\n                (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                  (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (map w [0..<0]))\n        else None)\n 2. \\<And>i.\n       r i =\n       (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n        \\<lambda>\\<chi>.\n           if \\<chi> \\<in> \\<^bold>G \\<phi>\n           then Some\n                 (foldl\n                   (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                     (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                   (semi_mojmir_def.initial\n                     (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                   (map w [0..<i]))\n           else None) \\<Longrightarrow>\n       r (Suc i) =\n       (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix (Suc i) w),\n        \\<lambda>\\<chi>.\n           if \\<chi> \\<in> \\<^bold>G \\<phi>\n           then Some\n                 (foldl\n                   (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                     (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                   (semi_mojmir_def.initial\n                     (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                   (map w [0..<Suc i]))\n           else None)", "case (Suc i)"], ["proof (state)\nthis:\n  r i =\n  (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n   \\<lambda>\\<chi>.\n      if \\<chi> \\<in> \\<^bold>G \\<phi>\n      then Some\n            (foldl\n              (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (map w [0..<i]))\n      else None)\n\ngoal (2 subgoals):\n 1. r 0 =\n    (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix 0 w),\n     \\<lambda>\\<chi>.\n        if \\<chi> \\<in> \\<^bold>G \\<phi>\n        then Some\n              (foldl\n                (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                  (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (map w [0..<0]))\n        else None)\n 2. \\<And>i.\n       r i =\n       (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n        \\<lambda>\\<chi>.\n           if \\<chi> \\<in> \\<^bold>G \\<phi>\n           then Some\n                 (foldl\n                   (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                     (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                   (semi_mojmir_def.initial\n                     (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                   (map w [0..<i]))\n           else None) \\<Longrightarrow>\n       r (Suc i) =\n       (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix (Suc i) w),\n        \\<lambda>\\<chi>.\n           if \\<chi> \\<in> \\<^bold>G \\<phi>\n           then Some\n                 (foldl\n                   (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                     (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                   (semi_mojmir_def.initial\n                     (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                   (map w [0..<Suc i]))\n           else None)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. r (Suc i) =\n    (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix (Suc i) w),\n     \\<lambda>\\<chi>.\n        if \\<chi> \\<in> \\<^bold>G \\<phi>\n        then Some\n              (foldl\n                (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                  (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (map w [0..<Suc i]))\n        else None)", "unfolding r_def run_foldl upt_Suc less_eq_nat.simps if_True map_append foldl_append"], ["proof (prove)\ngoal (1 subgoal):\n 1. foldl (delta \\<Sigma>)\n     (foldl (delta \\<Sigma>) (initial \\<phi>) (map w [0..<i])) (map w [i]) =\n    (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix (Suc i) w),\n     \\<lambda>\\<chi>.\n        if \\<chi> \\<in> \\<^bold>G \\<phi>\n        then Some\n              (foldl\n                (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                  (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (foldl\n                  (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                    (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                  (semi_mojmir_def.initial\n                    (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                  (map w [0..<i]))\n                (map w [i]))\n        else None)", "unfolding Suc[unfolded r_def run_foldl] subsequence_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. foldl (delta \\<Sigma>)\n     (foldl \\<delta> (q\\<^sub>0 \\<phi>) (map w [0..<i]),\n      \\<lambda>\\<chi>.\n         if \\<chi> \\<in> \\<^bold>G \\<phi>\n         then Some\n               (foldl\n                 (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                   (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                 (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                 (map w [0..<i]))\n         else None)\n     (map w [i]) =\n    (foldl \\<delta> (q\\<^sub>0 \\<phi>) (map w [0..<Suc i]),\n     \\<lambda>\\<chi>.\n        if \\<chi> \\<in> \\<^bold>G \\<phi>\n        then Some\n              (foldl\n                (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                  (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (foldl\n                  (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                    (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                  (semi_mojmir_def.initial\n                    (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                  (map w [0..<i]))\n                (map w [i]))\n        else None)", "by auto"], ["proof (state)\nthis:\n  r (Suc i) =\n  (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix (Suc i) w),\n   \\<lambda>\\<chi>.\n      if \\<chi> \\<in> \\<^bold>G \\<phi>\n      then Some\n            (foldl\n              (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (map w [0..<Suc i]))\n      else None)\n\ngoal (1 subgoal):\n 1. r 0 =\n    (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix 0 w),\n     \\<lambda>\\<chi>.\n        if \\<chi> \\<in> \\<^bold>G \\<phi>\n        then Some\n              (foldl\n                (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                  (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (map w [0..<0]))\n        else None)", "qed (auto simp add: subsequence_def r_def)"], ["proof (state)\nthis:\n  r i =\n  (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n   \\<lambda>\\<chi>.\n      if \\<chi> \\<in> \\<^bold>G \\<phi>\n      then Some\n            (foldl\n              (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (map w [0..<i]))\n      else None)\n\ngoal (2 subgoals):\n 1. fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w)\n 2. \\<And>\\<chi> q.\n       \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n       the (snd (r i) \\<chi>) q =\n       semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n        (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i", "hence state_run: \"r i = (foldl \\<delta> (q\\<^sub>0 \\<phi>) (w [0 \\<rightarrow> i]), \n    \\<lambda>\\<chi>. if \\<chi> \\<in> \\<^bold>G \\<phi> then Some (\\<lambda>\\<psi>. semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w \\<psi> i) else None)\""], ["proof (prove)\nusing this:\n  r i =\n  (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n   \\<lambda>\\<chi>.\n      if \\<chi> \\<in> \\<^bold>G \\<phi>\n      then Some\n            (foldl\n              (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (map w [0..<i]))\n      else None)\n\ngoal (1 subgoal):\n 1. r i =\n    (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n     \\<lambda>\\<chi>.\n        if \\<chi> \\<in> \\<^bold>G \\<phi>\n        then Some\n              (\\<lambda>\\<psi>.\n                  semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n                   (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w \\<psi> i)\n        else None)", "unfolding semi_mojmir.state_rank_step_foldl[OF sm] r_def"], ["proof (prove)\nusing this:\n  run (delta \\<Sigma>) (initial \\<phi>) w i =\n  (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n   \\<lambda>\\<chi>.\n      if \\<chi> \\<in> \\<^bold>G \\<phi>\n      then Some\n            (foldl\n              (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n              (map w [0..<i]))\n      else None)\n\ngoal (1 subgoal):\n 1. run (delta \\<Sigma>) (initial \\<phi>) w i =\n    (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n     \\<lambda>\\<chi>.\n        if \\<chi> \\<in> \\<^bold>G \\<phi>\n        then Some\n              (foldl\n                (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n                  (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (semi_mojmir_def.initial (q\\<^sub>0\\<^sub>M (theG \\<chi>)))\n                (map w [0..<i]))\n        else None)", "by simp"], ["proof (state)\nthis:\n  r i =\n  (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n   \\<lambda>\\<chi>.\n      if \\<chi> \\<in> \\<^bold>G \\<phi>\n      then Some\n            (\\<lambda>\\<psi>.\n                semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n                 (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w \\<psi> i)\n      else None)\n\ngoal (2 subgoals):\n 1. fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w)\n 2. \\<And>\\<chi> q.\n       \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n       the (snd (r i) \\<chi>) q =\n       semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n        (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i", "show \"fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (w [0 \\<rightarrow> i])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w)", "using state_run"], ["proof (prove)\nusing this:\n  r i =\n  (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n   \\<lambda>\\<chi>.\n      if \\<chi> \\<in> \\<^bold>G \\<phi>\n      then Some\n            (\\<lambda>\\<psi>.\n                semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n                 (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w \\<psi> i)\n      else None)\n\ngoal (1 subgoal):\n 1. fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w)", "by fastforce"], ["proof (state)\nthis:\n  fst (r i) = foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w)\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi> q.\n       \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n       the (snd (r i) \\<chi>) q =\n       semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n        (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i", "show \"\\<And>\\<chi> q. \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow> the (snd (r i) \\<chi>) q = semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<chi> q.\n       \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n       the (snd (r i) \\<chi>) q =\n       semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n        (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i", "unfolding state_run"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<chi> q.\n       \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n       the (snd (foldl \\<delta> (q\\<^sub>0 \\<phi>) (prefix i w),\n                 \\<lambda>\\<chi>.\n                    if \\<chi> \\<in> \\<^bold>G \\<phi>\n                    then Some\n                          (\\<lambda>\\<psi>.\n                              semi_mojmir_def.state_rank \\<Sigma>\n                               \\<delta>\\<^sub>M\n                               (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w \\<psi> i)\n                    else None)\n             \\<chi>)\n        q =\n       semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n        (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w q i", "by force"], ["proof (state)\nthis:\n  ?\\<chi>7 \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n  the (snd (r i) ?\\<chi>7) ?q7 =\n  semi_mojmir_def.state_rank \\<Sigma> \\<delta>\\<^sub>M\n   (q\\<^sub>0\\<^sub>M (theG ?\\<chi>7)) w ?q7 i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma accept\\<^sub>G\\<^sub>R_I:\n  assumes \"accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\"\n  obtains \\<pi> where \"dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\" \n    and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\"\n    and \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (M_fin \\<pi>, UNIV) w\"\n    and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> \\<chi>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w", "obtain P where \"P \\<in> rabin_pairs \\<Sigma> \\<phi>\" and \"accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) P w\""], ["proof (prove)\nusing this:\n  accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>P \\<in> rabin_pairs \\<Sigma> \\<phi>;\n         accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) P\n          w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding accept\\<^sub>G\\<^sub>R_def ltl_to_generalized_rabin.simps fst_conv snd_conv"], ["proof (prove)\nusing this:\n  \\<exists>(Fin, Inf)\\<in>rabin_pairs \\<Sigma> \\<phi>.\n     accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n      (Fin, Inf) w\n\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>P \\<in> rabin_pairs \\<Sigma> \\<phi>;\n         accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) P\n          w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P \\<in> rabin_pairs \\<Sigma> \\<phi>\n  accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) P w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  P \\<in> rabin_pairs \\<Sigma> \\<phi>\n  accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) P w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  P \\<in> rabin_pairs \\<Sigma> \\<phi>\n  accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) P w", "obtain \\<pi> where \"dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\" and \"\\<forall>\\<chi> \\<in> dom \\<pi>. the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\"\n    and P_def: \"P = (M_fin \\<pi> \\<union> \\<Union>{Acc_fin \\<Sigma> \\<pi> \\<chi> | \\<chi>. \\<chi> \\<in> dom \\<pi>}, {Acc_inf \\<pi> \\<chi> | \\<chi>. \\<chi> \\<in> dom \\<pi>})\""], ["proof (prove)\nusing this:\n  P \\<in> rabin_pairs \\<Sigma> \\<phi>\n  accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) P w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n         \\<forall>\\<chi>\\<in>dom \\<pi>.\n            the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n         P =\n         (M_fin \\<pi> \\<union>\n          \\<Union>\n           {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n          {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n  \\<forall>\\<chi>\\<in>dom \\<pi>.\n     the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\n  P =\n  (M_fin \\<pi> \\<union>\n   \\<Union> {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n   {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter> UNIV \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n    UNIV \\<noteq>\n    {}", "using run_limit_not_empty assms"], ["proof (prove)\nusing this:\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial ?\\<phi>) w) \\<noteq> {}\n  accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n\ngoal (1 subgoal):\n 1. limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n    UNIV \\<noteq>\n    {}", "by simp"], ["proof (state)\nthis:\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n  UNIV \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  P \\<in> rabin_pairs \\<Sigma> \\<phi>\n  accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) P w\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n  UNIV \\<noteq>\n  {}", "have \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (M_fin \\<pi>, UNIV) w\" \n    and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> \\<chi>) w\""], ["proof (prove)\nusing this:\n  P \\<in> rabin_pairs \\<Sigma> \\<phi>\n  accepting_pair\\<^sub>G\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) P w\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n  UNIV \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (M_fin \\<pi>, UNIV) w &&&\n    (\\<And>\\<chi>.\n        \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n        accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n         (Acc \\<Sigma> \\<pi> \\<chi>) w)", "unfolding P_def accepting_pair\\<^sub>G\\<^sub>R_simp accepting_pair\\<^sub>R_simp"], ["proof (prove)\nusing this:\n  (M_fin \\<pi> \\<union>\n   \\<Union> {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n   {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n  \\<in> rabin_pairs \\<Sigma> \\<phi>\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n  (M_fin \\<pi> \\<union>\n   \\<Union>\n    {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>}) =\n  {} \\<and>\n  (\\<forall>I\\<in>{Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>}.\n      limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n      I \\<noteq>\n      {})\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n  UNIV \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n    M_fin \\<pi> =\n    {} \\<and>\n    limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n    UNIV \\<noteq>\n    {} &&&\n    (\\<And>\\<chi>.\n        \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n        limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n        Acc_fin \\<Sigma> \\<pi> \\<chi> =\n        {} \\<and>\n        limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n        Acc_inf \\<pi> \\<chi> \\<noteq>\n        {})", "by blast+"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>, UNIV) w\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> ?\\<chi>7) w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "(* Slow... *)"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>, UNIV) w\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> ?\\<chi>7) w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>, UNIV) w\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> ?\\<chi>7) w\n\ngoal (1 subgoal):\n 1. thesis", "using that \\<open>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\\<close> \\<open>\\<forall>\\<chi> \\<in> dom \\<pi>. the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\\<close>"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>, UNIV) w\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> ?\\<chi>7) w\n  \\<lbrakk>dom ?\\<pi>7 \\<subseteq> \\<^bold>G \\<phi>;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> dom ?\\<pi>7 \\<Longrightarrow>\n      the (?\\<pi>7 \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n   accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n    (M_fin ?\\<pi>7, UNIV) w;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> dom ?\\<pi>7 \\<Longrightarrow>\n      accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n       (Acc \\<Sigma> ?\\<pi>7 \\<chi>) w\\<rbrakk>\n  \\<Longrightarrow> thesis\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n  \\<forall>\\<chi>\\<in>dom \\<pi>.\n     the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "context\n  fixes\n    \\<phi> :: \"'a ltl\"\nbegin"], ["", "context\n  fixes \n    \\<psi> :: \"'a ltl\"\n  fixes \n    \\<pi> :: \"'a ltl \\<rightharpoonup> nat\"\n  assumes\n    \"G \\<psi> \\<in> dom \\<pi>\"\n  assumes\n    \"dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\"\nbegin"], ["", "interpretation \\<MM>: mojmir_to_rabin \\<Sigma> \\<delta>\\<^sub>M \"q\\<^sub>0\\<^sub>M \\<psi>\" w \"{q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mojmir_to_rabin \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M \\<psi>) w\n     {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}", "by (metis mojmir_to_rabin \\<open>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\\<close> \\<G>_elements)"], ["", "lemma Acc_property:\n  \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w \\<longleftrightarrow> accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> (\\<MM>.Acc\\<^sub>\\<R> (the (\\<pi> (G \\<psi>)))) w\"\n  (is \"?Acc = ?Acc\\<^sub>\\<R>\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi> (G \\<psi>)) w =\n    accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n     (\\<MM>.fail\\<^sub>R \\<union>\n      \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n      \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n     w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi> (G \\<psi>)) w =\n    accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n     (\\<MM>.fail\\<^sub>R \\<union>\n      \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n      \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n     w", "define r r\\<^sub>\\<psi> where \"r = run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w\" and \"r\\<^sub>\\<psi> = run\\<^sub>t \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> w\""], ["proof (state)\nthis:\n  r = run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w\n  r\\<^sub>\\<psi> =\n  run\\<^sub>t \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi> (G \\<psi>)) w =\n    accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n     (\\<MM>.fail\\<^sub>R \\<union>\n      \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n      \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n     w", "hence \"finite (range r)\""], ["proof (prove)\nusing this:\n  r = run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w\n  r\\<^sub>\\<psi> =\n  run\\<^sub>t \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> w\n\ngoal (1 subgoal):\n 1. finite (range r)", "using run\\<^sub>t_finite[OF finite_reach] bounded_w finite_\\<Sigma>"], ["proof (prove)\nusing this:\n  r = run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w\n  r\\<^sub>\\<psi> =\n  run\\<^sub>t \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> w\n  \\<lbrakk>finite \\<Sigma>; range ?w \\<subseteq> \\<Sigma>\\<rbrakk>\n  \\<Longrightarrow> finite\n                     (range\n                       (run\\<^sub>t (delta \\<Sigma>) (initial ?\\<phi>1) ?w))\n  range w \\<subseteq> \\<Sigma>\n  finite \\<Sigma>\n\ngoal (1 subgoal):\n 1. finite (range r)", "by (blast dest: finite_subset)"], ["proof (state)\nthis:\n  finite (range r)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi> (G \\<psi>)) w =\n    accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n     (\\<MM>.fail\\<^sub>R \\<union>\n      \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n      \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n     w", "have \"\\<And>S. limit r\\<^sub>\\<psi> \\<inter> S = {} \\<longleftrightarrow> limit r \\<inter> \\<Union>(embed_transition_snd ` (\\<Union> ((embed_transition (G \\<psi>)) ` S))) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       (limit r\\<^sub>\\<psi> \\<inter> S = {}) =\n       (limit r \\<inter>\n        \\<Union>\n         (embed_transition_snd `\n          \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S)) =\n        {})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S.\n       (limit r\\<^sub>\\<psi> \\<inter> S = {}) =\n       (limit r \\<inter>\n        \\<Union>\n         (embed_transition_snd `\n          \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S)) =\n        {})", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>S.\n       (limit r\\<^sub>\\<psi> \\<inter> S = {}) =\n       (limit r \\<inter>\n        \\<Union>\n         (embed_transition_snd `\n          \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S)) =\n        {})", "have 1: \"snd (initial \\<phi>) (G \\<psi>) = Some \\<MM>.q\\<^sub>\\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd (initial \\<phi>) (G \\<psi>) = Some \\<MM>.q\\<^sub>\\<R>", "using \\<open>G \\<psi> \\<in> dom \\<pi>\\<close> \\<open>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\\<close>"], ["proof (prove)\nusing this:\n  G \\<psi> \\<in> dom \\<pi>\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n\ngoal (1 subgoal):\n 1. snd (initial \\<phi>) (G \\<psi>) = Some \\<MM>.q\\<^sub>\\<R>", "by auto"], ["proof (state)\nthis:\n  snd (initial \\<phi>) (G \\<psi>) = Some \\<MM>.q\\<^sub>\\<R>\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       (limit r\\<^sub>\\<psi> \\<inter> S = {}) =\n       (limit r \\<inter>\n        \\<Union>\n         (embed_transition_snd `\n          \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S)) =\n        {})", "have 2: \"finite (range (run\\<^sub>t (\\<Delta>\\<^sub>\\<times> (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M o q\\<^sub>0\\<^sub>M o theG)) (snd (initial \\<phi>)) w))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (range\n       (run\\<^sub>t\n         (\\<Delta>\\<^sub>\\<times>\n           (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M \\<circ>\n            q\\<^sub>0\\<^sub>M \\<circ>\n            theG))\n         (snd (initial \\<phi>)) w))", "using \\<open>finite (range r)\\<close> r_def comp_apply"], ["proof (prove)\nusing this:\n  finite (range r)\n  r = run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w\n  (?f \\<circ> ?g) ?x = ?f (?g ?x)\n\ngoal (1 subgoal):\n 1. finite\n     (range\n       (run\\<^sub>t\n         (\\<Delta>\\<^sub>\\<times>\n           (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M \\<circ>\n            q\\<^sub>0\\<^sub>M \\<circ>\n            theG))\n         (snd (initial \\<phi>)) w))", "by (auto intro: product_run_finite_snd cong del: image_cong_simp)"], ["proof (state)\nthis:\n  finite\n   (range\n     (run\\<^sub>t\n       (\\<Delta>\\<^sub>\\<times>\n         (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M \\<circ>\n          q\\<^sub>0\\<^sub>M \\<circ>\n          theG))\n       (snd (initial \\<phi>)) w))\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       (limit r\\<^sub>\\<psi> \\<inter> S = {}) =\n       (limit r \\<inter>\n        \\<Union>\n         (embed_transition_snd `\n          \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S)) =\n        {})", "show \"?thesis S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (limit r\\<^sub>\\<psi> \\<inter> S = {}) =\n    (limit r \\<inter>\n     \\<Union>\n      (embed_transition_snd `\n       \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S)) =\n     {})", "unfolding r_def r\\<^sub>\\<psi>_def product_run_embed_limit_finiteness[OF 1 2, unfolded ltl.sel comp_def, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (limit\n      (run\\<^sub>t\n        (\\<Delta>\\<^sub>\\<times>\n          (\\<lambda>x.\n              semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n               (q\\<^sub>0\\<^sub>M (theG x))))\n        (snd (initial \\<phi>)) w) \\<inter>\n     \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S) =\n     {}) =\n    (limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n     \\<Union>\n      (embed_transition_snd `\n       \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S)) =\n     {})", "using product_run_embed_limit_finiteness_snd[OF  \\<open>finite (range r)\\<close>[unfolded r_def delta.simps initial.simps]]"], ["proof (prove)\nusing this:\n  (limit\n    (run\\<^sub>t\n      \\<delta> \\<times> \\<Delta>\\<^sub>\\<times>\n                         (semi_mojmir_def.step \\<Sigma>\n                           \\<delta>\\<^sub>M \\<circ>\n                          q\\<^sub>0\\<^sub>M \\<circ>\n                          theG)\n      (q\\<^sub>0 \\<phi>,\n       \\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>)\n        (semi_mojmir_def.initial \\<circ> q\\<^sub>0\\<^sub>M \\<circ> theG))\n      w) \\<inter>\n   \\<Union> (embed_transition_snd ` ?S') =\n   {}) =\n  (limit\n    (run\\<^sub>t\n      (\\<Delta>\\<^sub>\\<times>\n        (semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M \\<circ>\n         q\\<^sub>0\\<^sub>M \\<circ>\n         theG))\n      (\\<iota>\\<^sub>\\<times> (\\<^bold>G \\<phi>)\n        (semi_mojmir_def.initial \\<circ> q\\<^sub>0\\<^sub>M \\<circ> theG))\n      w) \\<inter>\n   ?S' =\n   {})\n\ngoal (1 subgoal):\n 1. (limit\n      (run\\<^sub>t\n        (\\<Delta>\\<^sub>\\<times>\n          (\\<lambda>x.\n              semi_mojmir_def.step \\<Sigma> \\<delta>\\<^sub>M\n               (q\\<^sub>0\\<^sub>M (theG x))))\n        (snd (initial \\<phi>)) w) \\<inter>\n     \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S) =\n     {}) =\n    (limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n     \\<Union>\n      (embed_transition_snd `\n       \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S)) =\n     {})", "by (auto simp del: simple_product.simps product.simps product_initial_state.simps simp add: comp_def cong del: SUP_cong_simp)"], ["proof (state)\nthis:\n  (limit r\\<^sub>\\<psi> \\<inter> S = {}) =\n  (limit r \\<inter>\n   \\<Union>\n    (embed_transition_snd `\n     \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` S)) =\n   {})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (limit r\\<^sub>\\<psi> \\<inter> ?S7 = {}) =\n  (limit r \\<inter>\n   \\<Union>\n    (embed_transition_snd `\n     \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` ?S7)) =\n   {})\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi> (G \\<psi>)) w =\n    accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n     (\\<MM>.fail\\<^sub>R \\<union>\n      \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n      \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n     w", "hence \"limit r \\<inter> fst (Acc \\<Sigma> \\<pi> (G \\<psi>)) = {} \\<and> limit r \\<inter> snd (Acc \\<Sigma> \\<pi> (G \\<psi>)) \\<noteq> {} \n     \\<longleftrightarrow> limit r\\<^sub>\\<psi> \\<inter> fst (\\<MM>.Acc\\<^sub>\\<R> (the (\\<pi> (G \\<psi>)))) = {} \\<and> limit r\\<^sub>\\<psi> \\<inter> snd (\\<MM>.Acc\\<^sub>\\<R> (the (\\<pi> (G \\<psi>)))) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  (limit r\\<^sub>\\<psi> \\<inter> ?S7 = {}) =\n  (limit r \\<inter>\n   \\<Union>\n    (embed_transition_snd `\n     \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` ?S7)) =\n   {})\n\ngoal (1 subgoal):\n 1. (limit r \\<inter> fst (Acc \\<Sigma> \\<pi> (G \\<psi>)) = {} \\<and>\n     limit r \\<inter> snd (Acc \\<Sigma> \\<pi> (G \\<psi>)) \\<noteq> {}) =\n    (limit r\\<^sub>\\<psi> \\<inter>\n     fst (\\<MM>.fail\\<^sub>R \\<union>\n          \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n          \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) =\n     {} \\<and>\n     limit r\\<^sub>\\<psi> \\<inter>\n     snd (\\<MM>.fail\\<^sub>R \\<union>\n          \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n          \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) \\<noteq>\n     {})", "unfolding fst_conv snd_conv"], ["proof (prove)\nusing this:\n  (limit r\\<^sub>\\<psi> \\<inter> ?S7 = {}) =\n  (limit r \\<inter>\n   \\<Union>\n    (embed_transition_snd `\n     \\<Union> (\\<upharpoonleft>\\<^sub>G \\<psi> ` ?S7)) =\n   {})\n\ngoal (1 subgoal):\n 1. (limit r \\<inter> Acc_fin \\<Sigma> \\<pi> (G \\<psi>) = {} \\<and>\n     limit r \\<inter> Acc_inf \\<pi> (G \\<psi>) \\<noteq> {}) =\n    (limit r\\<^sub>\\<psi> \\<inter>\n     (\\<MM>.fail\\<^sub>R \\<union>\n      \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>)))) =\n     {} \\<and>\n     limit r\\<^sub>\\<psi> \\<inter>\n     \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))) \\<noteq>\n     {})", "by simp"], ["proof (state)\nthis:\n  (limit r \\<inter> fst (Acc \\<Sigma> \\<pi> (G \\<psi>)) = {} \\<and>\n   limit r \\<inter> snd (Acc \\<Sigma> \\<pi> (G \\<psi>)) \\<noteq> {}) =\n  (limit r\\<^sub>\\<psi> \\<inter>\n   fst (\\<MM>.fail\\<^sub>R \\<union>\n        \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n        \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) =\n   {} \\<and>\n   limit r\\<^sub>\\<psi> \\<inter>\n   snd (\\<MM>.fail\\<^sub>R \\<union>\n        \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n        \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) \\<noteq>\n   {})\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi> (G \\<psi>)) w =\n    accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n     (\\<MM>.fail\\<^sub>R \\<union>\n      \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n      \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n     w", "thus \"?Acc \\<longleftrightarrow> ?Acc\\<^sub>\\<R>\""], ["proof (prove)\nusing this:\n  (limit r \\<inter> fst (Acc \\<Sigma> \\<pi> (G \\<psi>)) = {} \\<and>\n   limit r \\<inter> snd (Acc \\<Sigma> \\<pi> (G \\<psi>)) \\<noteq> {}) =\n  (limit r\\<^sub>\\<psi> \\<inter>\n   fst (\\<MM>.fail\\<^sub>R \\<union>\n        \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n        \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) =\n   {} \\<and>\n   limit r\\<^sub>\\<psi> \\<inter>\n   snd (\\<MM>.fail\\<^sub>R \\<union>\n        \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n        \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) \\<noteq>\n   {})\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi> (G \\<psi>)) w =\n    accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n     (\\<MM>.fail\\<^sub>R \\<union>\n      \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n      \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n     w", "unfolding r\\<^sub>\\<psi>_def r_def accepting_pair\\<^sub>R_def"], ["proof (prove)\nusing this:\n  (limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n   fst (Acc \\<Sigma> \\<pi> (G \\<psi>)) =\n   {} \\<and>\n   limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n   snd (Acc \\<Sigma> \\<pi> (G \\<psi>)) \\<noteq>\n   {}) =\n  (limit\n    (run\\<^sub>t \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> w) \\<inter>\n   fst (\\<MM>.fail\\<^sub>R \\<union>\n        \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n        \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) =\n   {} \\<and>\n   limit\n    (run\\<^sub>t \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> w) \\<inter>\n   snd (\\<MM>.fail\\<^sub>R \\<union>\n        \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n        \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) \\<noteq>\n   {})\n\ngoal (1 subgoal):\n 1. (limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n     fst (Acc \\<Sigma> \\<pi> (G \\<psi>)) =\n     {} \\<and>\n     limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n     snd (Acc \\<Sigma> \\<pi> (G \\<psi>)) \\<noteq>\n     {}) =\n    (limit\n      (run\\<^sub>t \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> w) \\<inter>\n     fst (\\<MM>.fail\\<^sub>R \\<union>\n          \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n          \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) =\n     {} \\<and>\n     limit\n      (run\\<^sub>t \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> w) \\<inter>\n     snd (\\<MM>.fail\\<^sub>R \\<union>\n          \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n          \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>)))) \\<noteq>\n     {})", "by blast"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> (G \\<psi>)) w =\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union>\n    \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n    \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n   w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Acc_to_rabin_accept:\n  \"\\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w; the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk> \\<Longrightarrow> accept\\<^sub>R \\<MM>.\\<R> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n              (Acc \\<Sigma> \\<pi> (G \\<psi>)) w;\n     the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk>\n    \\<Longrightarrow> accept\\<^sub>R\n                       (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n                        {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n                          \\<MM>.succeed\\<^sub>R j) |\n                         j. j < \\<MM>.max_rank})\n                       w", "unfolding Acc_property"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R>\n              \\<MM>.q\\<^sub>\\<R>\n              (\\<MM>.fail\\<^sub>R \\<union>\n               \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n               \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n              w;\n     the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk>\n    \\<Longrightarrow> accept\\<^sub>R\n                       (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n                        {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n                          \\<MM>.succeed\\<^sub>R j) |\n                         j. j < \\<MM>.max_rank})\n                       w", "by auto"], ["", "lemma Acc_to_mojmir_accept:\n  \"\\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w; the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk> \\<Longrightarrow> \\<MM>.accept\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n              (Acc \\<Sigma> \\<pi> (G \\<psi>)) w;\n     the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk>\n    \\<Longrightarrow> \\<MM>.accept", "using Acc_to_rabin_accept"], ["proof (prove)\nusing this:\n  \\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n            (Acc \\<Sigma> \\<pi> (G \\<psi>)) w;\n   the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk>\n  \\<Longrightarrow> accept\\<^sub>R\n                     (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n                      {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n                        \\<MM>.succeed\\<^sub>R j) |\n                       j. j < \\<MM>.max_rank})\n                     w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n              (Acc \\<Sigma> \\<pi> (G \\<psi>)) w;\n     the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk>\n    \\<Longrightarrow> \\<MM>.accept", "unfolding \\<MM>.mojmir_accept_iff_rabin_accept"], ["proof (prove)\nusing this:\n  \\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n            (Acc \\<Sigma> \\<pi> (G \\<psi>)) w;\n   the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk>\n  \\<Longrightarrow> accept\\<^sub>R\n                     (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n                      {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n                        \\<MM>.succeed\\<^sub>R j) |\n                       j. j < \\<MM>.max_rank})\n                     w\n\ngoal (1 subgoal):\n 1. \\<lbrakk>accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n              (Acc \\<Sigma> \\<pi> (G \\<psi>)) w;\n     the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<rbrakk>\n    \\<Longrightarrow> accept\\<^sub>R\n                       (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n                        {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n                          \\<MM>.succeed\\<^sub>R j) |\n                         j. j < \\<MM>.max_rank})\n                       w", "by auto"], ["", "lemma rabin_accept_to_Acc:\n  \"\\<lbrakk>accept\\<^sub>R \\<MM>.\\<R> w; \\<pi> (G \\<psi>) = \\<MM>.smallest_accepting_rank\\<rbrakk> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accept\\<^sub>R\n              (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n               {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n                 \\<MM>.succeed\\<^sub>R j) |\n                j. j < \\<MM>.max_rank})\n              w;\n     \\<pi> (G \\<psi>) = \\<MM>.smallest_accepting_rank\\<rbrakk>\n    \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>)\n                       (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w", "unfolding Acc_property \\<MM>.Mojmir_rabin_smallest_accepting_rank"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accept\\<^sub>R\n              (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n               {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n                 \\<MM>.succeed\\<^sub>R j) |\n                j. j < \\<MM>.max_rank})\n              w;\n     \\<pi> (G \\<psi>) = \\<MM>.smallest_accepting_rank\\<^sub>\\<R>\\<rbrakk>\n    \\<Longrightarrow> accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R>\n                       \\<MM>.q\\<^sub>\\<R>\n                       (\\<MM>.fail\\<^sub>R \\<union>\n                        \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n                        \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n                       w", "using \\<MM>.smallest_accepting_rank\\<^sub>\\<R>_properties \\<MM>.smallest_accepting_rank\\<^sub>\\<R>_def"], ["proof (prove)\nusing this:\n  \\<MM>.smallest_accepting_rank\\<^sub>\\<R> = Some ?i \\<Longrightarrow>\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R ?i,\n    \\<MM>.succeed\\<^sub>R ?i)\n   w\n  \\<MM>.smallest_accepting_rank\\<^sub>\\<R> \\<equiv>\n  if accept\\<^sub>R\n      (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n       {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n         \\<MM>.succeed\\<^sub>R j) |\n        j. j < \\<MM>.max_rank})\n      w\n  then Some\n        (LEAST i.\n            accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R>\n             \\<MM>.q\\<^sub>\\<R>\n             (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R i,\n              \\<MM>.succeed\\<^sub>R i)\n             w)\n  else None\n\ngoal (1 subgoal):\n 1. \\<lbrakk>accept\\<^sub>R\n              (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n               {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n                 \\<MM>.succeed\\<^sub>R j) |\n                j. j < \\<MM>.max_rank})\n              w;\n     \\<pi> (G \\<psi>) = \\<MM>.smallest_accepting_rank\\<^sub>\\<R>\\<rbrakk>\n    \\<Longrightarrow> accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R>\n                       \\<MM>.q\\<^sub>\\<R>\n                       (\\<MM>.fail\\<^sub>R \\<union>\n                        \\<MM>.merge\\<^sub>R (the (\\<pi> (G \\<psi>))),\n                        \\<MM>.succeed\\<^sub>R (the (\\<pi> (G \\<psi>))))\n                       w", "by (metis (no_types, lifting) option.sel)"], ["", "lemma mojmir_accept_to_Acc:\n  \"\\<lbrakk>\\<MM>.accept; \\<pi> (G \\<psi>) = \\<MM>.smallest_accepting_rank\\<rbrakk> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<MM>.accept;\n     \\<pi> (G \\<psi>) = \\<MM>.smallest_accepting_rank\\<rbrakk>\n    \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>)\n                       (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w", "unfolding \\<MM>.mojmir_accept_iff_rabin_accept"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accept\\<^sub>R\n              (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n               {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n                 \\<MM>.succeed\\<^sub>R j) |\n                j. j < \\<MM>.max_rank})\n              w;\n     \\<pi> (G \\<psi>) = \\<MM>.smallest_accepting_rank\\<rbrakk>\n    \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>)\n                       (initial \\<phi>) (Acc \\<Sigma> \\<pi> (G \\<psi>)) w", "by (blast dest: rabin_accept_to_Acc)"], ["", "end"], ["", "lemma normalize_\\<pi>:\n  assumes dom_subset: \"dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\"\n  assumes \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\"\n  assumes \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (M_fin \\<pi>, UNIV) w\"\n  assumes \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> \\<chi>) w\"\n  obtains \\<pi>\\<^sub>\\<A> where \"dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\"\n    and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow> \\<pi>\\<^sub>\\<A> \\<chi> = mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}\"\n    and \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\" \n    and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow> accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define \\<G> where \"\\<G> = dom \\<pi>\""], ["proof (state)\nthis:\n  \\<G> = dom \\<pi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note \\<G>_properties[OF dom_subset]"], ["proof (state)\nthis:\n  finite (dom \\<pi>)\n  Only_G (dom \\<pi>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define \\<pi>\\<^sub>\\<A>\n    where \"\\<pi>\\<^sub>\\<A> = (\\<lambda>\\<chi>.  mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}) |` \\<G>\""], ["proof (state)\nthis:\n  \\<pi>\\<^sub>\\<A> =\n  (\\<lambda>\\<chi>.\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}) |`\n  \\<G>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>\\<A> =\n  (\\<lambda>\\<chi>.\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}) |`\n  \\<G>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>\\<A> =\n  (\\<lambda>\\<chi>.\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}) |`\n  \\<G>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix \\<chi>"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume \"\\<chi> \\<in> dom \\<pi>\""], ["proof (state)\nthis:\n  \\<chi> \\<in> dom \\<pi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret \\<MM>: mojmir_to_rabin \\<Sigma> \\<delta>\\<^sub>M \"q\\<^sub>0\\<^sub>M (theG \\<chi>)\" w \"{q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mojmir_to_rabin \\<Sigma> \\<delta>\\<^sub>M\n     (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n     {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}", "by (metis mojmir_to_rabin \\<open>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\\<close> \\<G>_elements)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from \\<open>\\<chi> \\<in> dom \\<pi>\\<close>"], ["proof (chain)\npicking this:\n  \\<chi> \\<in> dom \\<pi>", "have \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi> \\<chi>) w\""], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dom \\<pi>\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi> \\<chi>) w", "using assms(4)"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dom \\<pi>\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> ?\\<chi>7) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi> \\<chi>) w", "by blast"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> \\<chi>) w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R> (\\<MM>.Acc\\<^sub>\\<R> (the (\\<pi> \\<chi>))) w\""], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> \\<chi>) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n     (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R (the (\\<pi> \\<chi>)),\n      \\<MM>.succeed\\<^sub>R (the (\\<pi> \\<chi>)))\n     w", "by (metis \\<open>\\<chi> \\<in> dom \\<pi>\\<close> Acc_property[OF _ dom_subset] \\<open>Only_G (dom \\<pi>)\\<close> ltl.sel(8))"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R (the (\\<pi> \\<chi>)),\n    \\<MM>.succeed\\<^sub>R (the (\\<pi> \\<chi>)))\n   w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R (the (\\<pi> \\<chi>)),\n    \\<MM>.succeed\\<^sub>R (the (\\<pi> \\<chi>)))\n   w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"accept\\<^sub>R (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>, {\\<MM>.Acc\\<^sub>\\<R> j | j. j < \\<MM>.max_rank}) w\""], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R (the (\\<pi> \\<chi>)),\n    \\<MM>.succeed\\<^sub>R (the (\\<pi> \\<chi>)))\n   w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R\n     (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n      {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n        \\<MM>.succeed\\<^sub>R j) |\n       j. j < \\<MM>.max_rank})\n     w", "using assms(2)[OF \\<open>\\<chi> \\<in> dom \\<pi>\\<close>]"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R (the (\\<pi> \\<chi>)),\n    \\<MM>.succeed\\<^sub>R (the (\\<pi> \\<chi>)))\n   w\n  the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R\n     (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n      {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n        \\<MM>.succeed\\<^sub>R j) |\n       j. j < \\<MM>.max_rank})\n     w", "unfolding max_rank_of_def"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R (the (\\<pi> \\<chi>)),\n    \\<MM>.succeed\\<^sub>R (the (\\<pi> \\<chi>)))\n   w\n  the (\\<pi> \\<chi>) < \\<MM>.max_rank\n\ngoal (1 subgoal):\n 1. accept\\<^sub>R\n     (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n      {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n        \\<MM>.succeed\\<^sub>R j) |\n       j. j < \\<MM>.max_rank})\n     w", "by auto"], ["proof (state)\nthis:\n  accept\\<^sub>R\n   (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n    {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n      \\<MM>.succeed\\<^sub>R j) |\n     j. j < \\<MM>.max_rank})\n   w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R (the (\\<pi> \\<chi>)),\n    \\<MM>.succeed\\<^sub>R (the (\\<pi> \\<chi>)))\n   w\n  accept\\<^sub>R\n   (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n    {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n      \\<MM>.succeed\\<^sub>R j) |\n     j. j < \\<MM>.max_rank})\n   w", "have \"the (\\<MM>.smallest_accepting_rank\\<^sub>\\<R>) \\<le> the (\\<pi> \\<chi>)\" and \"\\<MM>.smallest_accepting_rank \\<noteq> None\""], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R (the (\\<pi> \\<chi>)),\n    \\<MM>.succeed\\<^sub>R (the (\\<pi> \\<chi>)))\n   w\n  accept\\<^sub>R\n   (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n    {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n      \\<MM>.succeed\\<^sub>R j) |\n     j. j < \\<MM>.max_rank})\n   w\n\ngoal (1 subgoal):\n 1. the \\<MM>.smallest_accepting_rank\\<^sub>\\<R>\n    \\<le> the (\\<pi> \\<chi>) &&&\n    \\<MM>.smallest_accepting_rank \\<noteq> None", "using Least_le[of _ \"the (\\<pi> \\<chi>)\"] assms(2)[OF \\<open>\\<chi> \\<in> dom \\<pi>\\<close>] \\<MM>.mojmir_accept_iff_rabin_accept option.distinct(1) \\<MM>.smallest_accepting_rank_def"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R \\<MM>.\\<delta>\\<^sub>\\<R> \\<MM>.q\\<^sub>\\<R>\n   (\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R (the (\\<pi> \\<chi>)),\n    \\<MM>.succeed\\<^sub>R (the (\\<pi> \\<chi>)))\n   w\n  accept\\<^sub>R\n   (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n    {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n      \\<MM>.succeed\\<^sub>R j) |\n     j. j < \\<MM>.max_rank})\n   w\n  ?P (the (\\<pi> \\<chi>)) \\<Longrightarrow>\n  (LEAST x. ?P x) \\<le> the (\\<pi> \\<chi>)\n  the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>\n  \\<MM>.accept =\n  accept\\<^sub>R\n   (\\<MM>.\\<delta>\\<^sub>\\<R>, \\<MM>.q\\<^sub>\\<R>,\n    {(\\<MM>.fail\\<^sub>R \\<union> \\<MM>.merge\\<^sub>R j,\n      \\<MM>.succeed\\<^sub>R j) |\n     j. j < \\<MM>.max_rank})\n   w\n  None \\<noteq> Some ?x2.0\n  \\<MM>.smallest_accepting_rank \\<equiv>\n  if \\<MM>.accept\n  then Some\n        (LEAST i.\n            finite \\<MM>.fail \\<and>\n            finite (\\<MM>.merge i) \\<and> infinite (\\<MM>.succeed i))\n  else None\n\ngoal (1 subgoal):\n 1. the \\<MM>.smallest_accepting_rank\\<^sub>\\<R>\n    \\<le> the (\\<pi> \\<chi>) &&&\n    \\<MM>.smallest_accepting_rank \\<noteq> None", "by (simp add: \\<MM>.smallest_accepting_rank\\<^sub>\\<R>_def)+"], ["proof (state)\nthis:\n  the \\<MM>.smallest_accepting_rank\\<^sub>\\<R> \\<le> the (\\<pi> \\<chi>)\n  \\<MM>.smallest_accepting_rank \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"the (\\<pi>\\<^sub>\\<A> \\<chi>) \\<le> the (\\<pi> \\<chi>)\" and \"\\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\""], ["proof (prove)\nusing this:\n  the \\<MM>.smallest_accepting_rank\\<^sub>\\<R> \\<le> the (\\<pi> \\<chi>)\n  \\<MM>.smallest_accepting_rank \\<noteq> None\n\ngoal (1 subgoal):\n 1. the (\\<pi>\\<^sub>\\<A> \\<chi>) \\<le> the (\\<pi> \\<chi>) &&&\n    \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>", "unfolding \\<pi>\\<^sub>\\<A>_def dom_restrict"], ["proof (prove)\nusing this:\n  the \\<MM>.smallest_accepting_rank\\<^sub>\\<R> \\<le> the (\\<pi> \\<chi>)\n  \\<MM>.smallest_accepting_rank \\<noteq> None\n\ngoal (1 subgoal):\n 1. the (((\\<lambda>\\<chi>.\n              mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n               (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n               (Collect (ltl_prop_entails_abs (dom \\<pi>)))) |`\n          \\<G>)\n          \\<chi>)\n    \\<le> the (\\<pi> \\<chi>) &&&\n    \\<chi>\n    \\<in> dom (\\<lambda>\\<chi>.\n                  mojmir_def.smallest_accepting_rank \\<Sigma>\n                   \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n                   (Collect (ltl_prop_entails_abs (dom \\<pi>)))) \\<inter>\n          \\<G>", "using assms(2) \\<open>\\<chi> \\<in> dom \\<pi>\\<close>"], ["proof (prove)\nusing this:\n  the \\<MM>.smallest_accepting_rank\\<^sub>\\<R> \\<le> the (\\<pi> \\<chi>)\n  \\<MM>.smallest_accepting_rank \\<noteq> None\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  the (\\<pi> ?\\<chi>7) < max_rank_of \\<Sigma> ?\\<chi>7\n  \\<chi> \\<in> dom \\<pi>\n\ngoal (1 subgoal):\n 1. the (((\\<lambda>\\<chi>.\n              mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n               (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n               (Collect (ltl_prop_entails_abs (dom \\<pi>)))) |`\n          \\<G>)\n          \\<chi>)\n    \\<le> the (\\<pi> \\<chi>) &&&\n    \\<chi>\n    \\<in> dom (\\<lambda>\\<chi>.\n                  mojmir_def.smallest_accepting_rank \\<Sigma>\n                   \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n                   (Collect (ltl_prop_entails_abs (dom \\<pi>)))) \\<inter>\n          \\<G>", "by (simp add: \\<MM>.Mojmir_rabin_smallest_accepting_rank \\<G>_def, subst dom_def, simp add: \\<G>_def)"], ["proof (state)\nthis:\n  the (\\<pi>\\<^sub>\\<A> \\<chi>) \\<le> the (\\<pi> \\<chi>)\n  \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?\\<chi>9 \\<in> dom \\<pi> \\<Longrightarrow>\n  the (\\<pi>\\<^sub>\\<A> ?\\<chi>9) \\<le> the (\\<pi> ?\\<chi>9)\n  ?\\<chi>9 \\<in> dom \\<pi> \\<Longrightarrow>\n  ?\\<chi>9 \\<in> dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\""], ["proof (prove)\nusing this:\n  ?\\<chi>9 \\<in> dom \\<pi> \\<Longrightarrow>\n  the (\\<pi>\\<^sub>\\<A> ?\\<chi>9) \\<le> the (\\<pi> ?\\<chi>9)\n  ?\\<chi>9 \\<in> dom \\<pi> \\<Longrightarrow>\n  ?\\<chi>9 \\<in> dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. dom \\<pi> = dom \\<pi>\\<^sub>\\<A>", "unfolding \\<pi>\\<^sub>\\<A>_def dom_restrict \\<G>_def"], ["proof (prove)\nusing this:\n  ?\\<chi>9 \\<in> dom \\<pi> \\<Longrightarrow>\n  the (((\\<lambda>\\<chi>.\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             (Collect (ltl_prop_entails_abs (dom \\<pi>)))) |`\n        dom \\<pi>)\n        ?\\<chi>9)\n  \\<le> the (\\<pi> ?\\<chi>9)\n  ?\\<chi>9 \\<in> dom \\<pi> \\<Longrightarrow>\n  ?\\<chi>9\n  \\<in> dom (\\<lambda>\\<chi>.\n                mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n                 (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n                 (Collect (ltl_prop_entails_abs (dom \\<pi>)))) \\<inter>\n        dom \\<pi>\n\ngoal (1 subgoal):\n 1. dom \\<pi> =\n    dom (\\<lambda>\\<chi>.\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             (Collect (ltl_prop_entails_abs (dom \\<pi>)))) \\<inter>\n    dom \\<pi>", "by auto"], ["proof (state)\nthis:\n  dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "note \\<G>_properties[OF dom_subset, unfolded \\<open>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\\<close>]"], ["proof (state)\nthis:\n  finite (dom \\<pi>\\<^sub>\\<A>)\n  Only_G (dom \\<pi>\\<^sub>\\<A>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"M_fin \\<pi>\\<^sub>\\<A> \\<subseteq> M_fin \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M_fin \\<pi>\\<^sub>\\<A> \\<subseteq> M_fin \\<pi>", "using \\<open>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\\<close>"], ["proof (prove)\nusing this:\n  dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. M_fin \\<pi>\\<^sub>\\<A> \\<subseteq> M_fin \\<pi>", "by (simp add: M_fin_monotonic \\<open>\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> the (\\<pi>\\<^sub>\\<A> \\<chi>) \\<le> the (\\<pi> \\<chi>)\\<close>)"], ["proof (state)\nthis:\n  M_fin \\<pi>\\<^sub>\\<A> \\<subseteq> M_fin \\<pi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\""], ["proof (prove)\nusing this:\n  M_fin \\<pi>\\<^sub>\\<A> \\<subseteq> M_fin \\<pi>\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w", "using assms"], ["proof (prove)\nusing this:\n  M_fin \\<pi>\\<^sub>\\<A> \\<subseteq> M_fin \\<pi>\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  the (\\<pi> ?\\<chi>7) < max_rank_of \\<Sigma> ?\\<chi>7\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>, UNIV) w\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> ?\\<chi>7) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w", "unfolding accepting_pair\\<^sub>R_simp"], ["proof (prove)\nusing this:\n  M_fin \\<pi>\\<^sub>\\<A> \\<subseteq> M_fin \\<pi>\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  the (\\<pi> ?\\<chi>7) < max_rank_of \\<Sigma> ?\\<chi>7\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n  M_fin \\<pi> =\n  {} \\<and>\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n  UNIV \\<noteq>\n  {}\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n  Acc_fin \\<Sigma> \\<pi> ?\\<chi>7 =\n  {} \\<and>\n  limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n  Acc_inf \\<pi> ?\\<chi>7 \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n    M_fin \\<pi>\\<^sub>\\<A> =\n    {} \\<and>\n    limit (run\\<^sub>t (delta \\<Sigma>) (initial \\<phi>) w) \\<inter>\n    UNIV \\<noteq>\n    {}", "by blast"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover\n\n  \\<comment> \\<open>Goal 2\\<close>"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "{"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "fix \\<chi>"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "assume \"\\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\""], ["proof (state)\nthis:\n  \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"\\<chi> = G (theG \\<chi>)\""], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. \\<chi> = G theG \\<chi>", "unfolding \\<open>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\\<close>[symmetric] \\<open>Only_G (dom \\<pi>)\\<close>"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> dom \\<pi>\n\ngoal (1 subgoal):\n 1. \\<chi> = G theG \\<chi>", "by (metis \\<open>Only_G (dom \\<pi>\\<^sub>\\<A>)\\<close> \\<open>\\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\\<close> ltl.collapse(6) ltl.disc(58))"], ["proof (state)\nthis:\n  \\<chi> = G theG \\<chi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<chi> = G theG \\<chi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"G (theG \\<chi>) \\<in> dom \\<pi>\\<^sub>\\<A>\""], ["proof (prove)\nusing this:\n  \\<chi> = G theG \\<chi>\n\ngoal (1 subgoal):\n 1. G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>", "using \\<open>\\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\\<close>"], ["proof (prove)\nusing this:\n  \\<chi> = G theG \\<chi>\n  \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>", "by simp"], ["proof (state)\nthis:\n  G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence X: \"mojmir_def.accept \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\""], ["proof (prove)\nusing this:\n  G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. mojmir_def.accept \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n     {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}", "using assms(1,2,4) \\<open>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\\<close> ltl.sel(8) Acc_to_mojmir_accept \\<open>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\\<close>"], ["proof (prove)\nusing this:\n  G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  the (\\<pi> ?\\<chi>7) < max_rank_of \\<Sigma> ?\\<chi>7\n  ?\\<chi>7 \\<in> dom \\<pi> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi> ?\\<chi>7) w\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n  theG (G ?x8.0) = ?x8.0\n  \\<lbrakk>G ?\\<psi> \\<in> dom ?\\<pi>;\n   dom ?\\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n   accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n    (Acc \\<Sigma> ?\\<pi> (G ?\\<psi>)) w;\n   the (?\\<pi> (G ?\\<psi>))\n   < semi_mojmir_def.max_rank \\<Sigma> \\<delta>\\<^sub>M\n      (q\\<^sub>0\\<^sub>M ?\\<psi>)\\<rbrakk>\n  \\<Longrightarrow> mojmir_def.accept \\<delta>\\<^sub>M\n                     (q\\<^sub>0\\<^sub>M ?\\<psi>) w\n                     {q. dom ?\\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\n  dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\n\ngoal (1 subgoal):\n 1. mojmir_def.accept \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n     {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}", "by (metis max_rank_of_def)"], ["proof (state)\nthis:\n  mojmir_def.accept \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n   {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have Y: \"\\<pi>\\<^sub>\\<A> (G theG \\<chi>) = mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>\\<A> (G theG \\<chi>) =\n    mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n     (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n     {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}", "using \\<open>G (theG \\<chi>) \\<in> dom \\<pi>\\<^sub>\\<A>\\<close> \\<open>\\<chi> = G (theG \\<chi>)\\<close> \\<pi>\\<^sub>\\<A>_def \\<open>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\\<close>[symmetric]"], ["proof (prove)\nusing this:\n  G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n  \\<chi> = G theG \\<chi>\n  \\<pi>\\<^sub>\\<A> =\n  (\\<lambda>\\<chi>.\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}) |`\n  \\<G>\n  dom \\<pi>\\<^sub>\\<A> = dom \\<pi>\n\ngoal (1 subgoal):\n 1. \\<pi>\\<^sub>\\<A> (G theG \\<chi>) =\n    mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n     (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n     {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}", "by simp"], ["proof (state)\nthis:\n  \\<pi>\\<^sub>\\<A> (G theG \\<chi>) =\n  mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n   (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n   {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<chi> = G theG \\<chi>\n  G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n  \\<pi>\\<^sub>\\<A> (G theG \\<chi>) =\n  mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n   (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n   {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}", "have \"accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>) (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\""], ["proof (prove)\nusing this:\n  \\<chi> = G theG \\<chi>\n  G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n  \\<pi>\\<^sub>\\<A> (G theG \\<chi>) =\n  mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n   (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n   {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w", "using mojmir_accept_to_Acc[OF \\<open>G (theG \\<chi>) \\<in> dom \\<pi>\\<^sub>\\<A>\\<close> \\<open>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\\<close>[unfolded \\<open>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\\<close>] X[unfolded \\<open>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\\<close>] Y]"], ["proof (prove)\nusing this:\n  \\<chi> = G theG \\<chi>\n  G theG \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A>\n  \\<pi>\\<^sub>\\<A> (G theG \\<chi>) =\n  mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n   (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n   {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> (G theG \\<chi>)) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n     (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w", "by simp"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "}"], ["proof (state)\nthis:\n  ?\\<chi>9 \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> ?\\<chi>9) w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>\\<^sub>\\<A>.\n        \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            \\<pi>\\<^sub>\\<A> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n             (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n             {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n         accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n          (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n             (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<pi>\\<^sub>\\<A> =\n  (\\<lambda>\\<chi>.\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}) |`\n  \\<G>\n  dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\n  ?\\<chi>9 \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> ?\\<chi>9) w", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<pi>\\<^sub>\\<A> =\n  (\\<lambda>\\<chi>.\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}) |`\n  \\<G>\n  dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\n  ?\\<chi>9 \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> ?\\<chi>9) w\n\ngoal (1 subgoal):\n 1. thesis", "using that[of \\<pi>\\<^sub>\\<A>] restrict_in"], ["proof (prove)\nusing this:\n  \\<pi>\\<^sub>\\<A> =\n  (\\<lambda>\\<chi>.\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}) |`\n  \\<G>\n  dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\n  ?\\<chi>9 \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> ?\\<chi>9) w\n  \\<lbrakk>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n      \\<pi>\\<^sub>\\<A> \\<chi> =\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n   accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n    (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n      accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n       (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ?x \\<in> ?A \\<Longrightarrow> (?m |` ?A) ?x = ?m ?x\n\ngoal (1 subgoal):\n 1. thesis", "unfolding \\<open>dom \\<pi> = dom \\<pi>\\<^sub>\\<A>\\<close> \\<G>_def"], ["proof (prove)\nusing this:\n  \\<pi>\\<^sub>\\<A> =\n  (\\<lambda>\\<chi>.\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q}) |`\n  dom \\<pi>\\<^sub>\\<A>\n  dom \\<pi>\\<^sub>\\<A> = dom \\<pi>\\<^sub>\\<A>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w\n  ?\\<chi>9 \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n   (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> ?\\<chi>9) w\n  \\<lbrakk>dom \\<pi>\\<^sub>\\<A> = dom \\<pi>\\<^sub>\\<A>;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n      \\<pi>\\<^sub>\\<A> \\<chi> =\n      mojmir_def.smallest_accepting_rank \\<Sigma> \\<delta>\\<^sub>M\n       (q\\<^sub>0\\<^sub>M (theG \\<chi>)) w\n       {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n   accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n    (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n      accepting_pair\\<^sub>R (delta \\<Sigma>) (initial \\<phi>)\n       (Acc \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n  \\<Longrightarrow> thesis\n  ?x \\<in> ?A \\<Longrightarrow> (?m |` ?A) ?x = ?m ?x\n\ngoal (1 subgoal):\n 1. thesis", "by (metis (no_types, lifting))"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"], ["", "subsection \\<open>Generalized Deterministic Rabin Automaton\\<close>\n\n\\<comment> \\<open>Instantiate Automaton Template\\<close>"], ["", "subsubsection \\<open>Definition\\<close>"], ["", "fun M_fin :: \"('a ltl \\<rightharpoonup> nat) \\<Rightarrow> ('a ltl\\<^sub>P \\<times> ('a ltl \\<rightharpoonup> 'a ltl\\<^sub>P \\<rightharpoonup> nat), 'a set) transition set\"\nwhere\n  \"M_fin \\<pi> = {((\\<phi>', m), \\<nu>, p). \n    \\<not>(\\<forall>S. (\\<forall>\\<chi> \\<in> dom \\<pi>. S \\<up>\\<Turnstile>\\<^sub>P Abs \\<chi> \\<and> (\\<forall>q. (\\<exists>j \\<ge> the (\\<pi> \\<chi>). the (m \\<chi>) q = Some j) \\<longrightarrow> S \\<up>\\<Turnstile>\\<^sub>P \\<up>eval\\<^sub>G (dom \\<pi>) q)) \\<longrightarrow> S \\<up>\\<Turnstile>\\<^sub>P \\<phi>')}\""], ["", "locale ltl_to_rabin_af = ltl_to_rabin_base \"\\<up>af\" \"\\<up>af\\<^sub>G\" \"Abs\" \"Abs\" M_fin begin"], ["", "abbreviation \"\\<delta>\\<^sub>\\<A> \\<equiv> delta\""], ["", "abbreviation \"\\<iota>\\<^sub>\\<A> \\<equiv> initial\""], ["", "abbreviation \"Acc\\<^sub>\\<A> \\<equiv> Acc\""], ["", "abbreviation \"F\\<^sub>\\<A> \\<equiv> rabin_pairs\""], ["", "abbreviation \"\\<A> \\<equiv> ltl_to_generalized_rabin\""], ["", "subsubsection \\<open>Correctness Theorem\\<close>"], ["", "theorem ltl_to_generalized_rabin_correct:\n  \"w \\<Turnstile> \\<phi> = accept\\<^sub>G\\<^sub>R (ltl_to_generalized_rabin \\<Sigma> \\<phi>) w\"\n  (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<Turnstile> \\<phi> = accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "let ?\\<Delta> = \"\\<delta>\\<^sub>\\<A> \\<Sigma>\""], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "let ?q\\<^sub>0 = \"\\<iota>\\<^sub>\\<A> \\<phi>\""], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "let ?F = \"F\\<^sub>\\<A> \\<Sigma> \\<phi>\"\n \n  \\<comment> \\<open>Preliminary facts needed by both proof directions\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "define r where \"r = run\\<^sub>t ?\\<Delta> ?q\\<^sub>0 w\""], ["proof (state)\nthis:\n  r =\n  run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>) w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have r_alt_def': \"\\<And>i. fst (fst (r i)) = Abs (af \\<phi> (w [0 \\<rightarrow> i]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. fst (fst (r i)) = Abs (af \\<phi> (prefix i w))", "using run_properties(1)"], ["proof (prove)\nusing this:\n  fst (run (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> ?\\<phi>) w\n        ?i) =\n  foldl \\<up>af (Abs ?\\<phi>) (prefix ?i w)\n\ngoal (1 subgoal):\n 1. \\<And>i. fst (fst (r i)) = Abs (af \\<phi> (prefix i w))", "unfolding r_def run\\<^sub>t.simps fst_conv"], ["proof (prove)\nusing this:\n  fst (run (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> ?\\<phi>) w\n        ?i) =\n  foldl \\<up>af (Abs ?\\<phi>) (prefix ?i w)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       fst (run (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>) w\n             i) =\n       Abs (af \\<phi> (prefix i w))", "by (metis af_abs.f_foldl_abs.abs_eq af_abs.f_foldl_abs_alt_def af_letter_abs_def)"], ["proof (state)\nthis:\n  fst (fst (r ?i8)) = Abs (af \\<phi> (prefix ?i8 w))\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have r_alt_def'': \"\\<And>\\<chi> i q. \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow> the (snd (fst (r i)) \\<chi>) q = semi_mojmir_def.state_rank \\<Sigma> \\<up>af\\<^sub>G(Abs (theG \\<chi>)) w q i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<chi> i q.\n       \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n       the (snd (fst (r i)) \\<chi>) q =\n       semi_mojmir_def.state_rank \\<Sigma> \\<up>af\\<^sub>G\n        (Abs (theG \\<chi>)) w q i", "using run_properties(2) r_def"], ["proof (prove)\nusing this:\n  ?\\<chi> \\<in> \\<^bold>G ?\\<phi> \\<Longrightarrow>\n  the (snd (run (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> ?\\<phi>)\n             w ?i)\n        ?\\<chi>)\n   ?q =\n  semi_mojmir_def.state_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>)) w\n   ?q ?i\n  r =\n  run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>) w\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi> i q.\n       \\<chi> \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n       the (snd (fst (r i)) \\<chi>) q =\n       semi_mojmir_def.state_rank \\<Sigma> \\<up>af\\<^sub>G\n        (Abs (theG \\<chi>)) w q i", "by force"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<^bold>G \\<phi> \\<Longrightarrow>\n  the (snd (fst (r ?i8)) ?\\<chi>8) ?q8 =\n  semi_mojmir_def.state_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>8))\n   w ?q8 ?i8\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have \\<phi>'_def: \"\\<And>i. af \\<phi> (w [0 \\<rightarrow> i]) \\<equiv>\\<^sub>P Rep (fst (fst (r i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. af \\<phi> (prefix i w) \\<equiv>\\<^sub>P Rep (fst (fst (r i)))", "by (metis r_alt_def' Quotient3_ltl_prop_equiv_quotient ltl_prop_equiv_quotient.abs_eq_iff Quotient3_abs_rep)"], ["proof (state)\nthis:\n  af \\<phi> (prefix ?i8 w) \\<equiv>\\<^sub>P Rep (fst (fst (r ?i8)))\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have \"finite (range r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (range r)", "using run\\<^sub>t_finite[OF finite_reach] bounded_w finite_\\<Sigma>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite \\<Sigma>; range ?w \\<subseteq> \\<Sigma>\\<rbrakk>\n  \\<Longrightarrow> finite\n                     (range\n                       (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n                         (\\<iota>\\<^sub>\\<A> ?\\<phi>1) ?w))\n  range w \\<subseteq> \\<Sigma>\n  finite \\<Sigma>\n\ngoal (1 subgoal):\n 1. finite (range r)", "by (simp add: r_def)\n\n  \\<comment> \\<open>Assuming @{term \"w \\<Turnstile> \\<phi>\"} holds, we prove that @{term \"ltl_to_generalized_rabin \\<Sigma> \\<phi>\"} accepts @{term w}\\<close>"], ["proof (state)\nthis:\n  finite (range r)\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "{"], ["proof (state)\nthis:\n  finite (range r)\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "assume ?lhs"], ["proof (state)\nthis:\n  w \\<Turnstile> \\<phi>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "then"], ["proof (chain)\npicking this:\n  w \\<Turnstile> \\<phi>", "obtain \\<G> where \"\\<G> \\<subseteq> \\<^bold>G \\<phi>\" and \"accept\\<^sub>M \\<phi> \\<G> w\" and \"closed \\<G> w\""], ["proof (prove)\nusing this:\n  w \\<Turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<G>.\n        \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G \\<phi>;\n         accept\\<^sub>M \\<phi> \\<G> w; closed \\<G> w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding ltl_logical_characterization"], ["proof (prove)\nusing this:\n  \\<exists>\\<G>\\<subseteq>\\<^bold>G \\<phi>.\n     accept\\<^sub>M \\<phi> \\<G> w \\<and> closed \\<G> w\n\ngoal (1 subgoal):\n 1. (\\<And>\\<G>.\n        \\<lbrakk>\\<G> \\<subseteq> \\<^bold>G \\<phi>;\n         accept\\<^sub>M \\<phi> \\<G> w; closed \\<G> w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  accept\\<^sub>M \\<phi> \\<G> w\n  closed \\<G> w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "note \\<G>_properties[OF \\<open>\\<G> \\<subseteq> \\<^bold>G \\<phi>\\<close>]"], ["proof (state)\nthis:\n  finite \\<G>\n  Only_G \\<G>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "hence \"ltl_FG_to_rabin \\<Sigma> \\<G> w\""], ["proof (prove)\nusing this:\n  finite \\<G>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "using finite_\\<Sigma> bounded_w"], ["proof (prove)\nusing this:\n  finite \\<G>\n  Only_G \\<G>\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "unfolding ltl_FG_to_rabin_def"], ["proof (prove)\nusing this:\n  finite \\<G>\n  Only_G \\<G>\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n\ngoal (1 subgoal):\n 1. Only_G \\<G> \\<and> range w \\<subseteq> \\<Sigma> \\<and> finite \\<Sigma>", "by auto"], ["proof (state)\nthis:\n  ltl_FG_to_rabin \\<Sigma> \\<G> w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "define \\<pi>\n      where \"\\<pi> \\<chi> = (if \\<chi> \\<in> \\<G> then (ltl_FG_to_rabin_def.smallest_accepting_rank\\<^sub>R \\<Sigma> (theG \\<chi>) \\<G> w) else None)\"\n      for \\<chi>"], ["proof (state)\nthis:\n  \\<pi> ?\\<chi> =\n  (if ?\\<chi> \\<in> \\<G>\n   then mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG ?\\<chi>)) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n   else None)\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have \\<MM>_accept: \"\\<And>\\<psi>. G \\<psi> \\<in> \\<G> \\<Longrightarrow> ltl_FG_to_rabin_def.accept\\<^sub>R' \\<psi> \\<G> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       mojmir_def.accept \\<up>af\\<^sub>G (Abs \\<psi>) w\n        {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "using \\<open>closed \\<G> w\\<close> \\<open>ltl_FG_to_rabin \\<Sigma> \\<G> w\\<close> ltl_FG_to_rabin.ltl_to_rabin_correct_exposed'"], ["proof (prove)\nusing this:\n  closed \\<G> w\n  ltl_FG_to_rabin \\<Sigma> \\<G> w\n  ltl_FG_to_rabin ?\\<Sigma> ?\\<G> ?w \\<Longrightarrow>\n  \\<PP>\\<^sub>\\<infinity> ?\\<phi> ?\\<G> ?w =\n  mojmir_def.accept \\<up>af\\<^sub>G (Abs ?\\<phi>) ?w\n   {q. ?\\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       mojmir_def.accept \\<up>af\\<^sub>G (Abs \\<psi>) w\n        {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "by blast"], ["proof (state)\nthis:\n  G ?\\<psi>8 \\<in> \\<G> \\<Longrightarrow>\n  mojmir_def.accept \\<up>af\\<^sub>G (Abs ?\\<psi>8) w\n   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have \"\\<And>\\<psi>. G \\<psi> \\<in> \\<G> \\<Longrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "using \\<open>closed \\<G> w\\<close>"], ["proof (prove)\nusing this:\n  closed \\<G> w\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "unfolding ltl_FG_to_rabin.ltl_to_rabin_correct_exposed[OF \\<open>ltl_FG_to_rabin \\<Sigma> \\<G> w\\<close>]"], ["proof (prove)\nusing this:\n  finite \\<G> \\<and>\n  Only_G \\<G> \\<and>\n  (\\<forall>\\<psi>.\n      G \\<psi> \\<in> \\<G> \\<longrightarrow>\n      accept\\<^sub>R\n       (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>),\n        semi_mojmir_def.initial (Abs \\<psi>),\n        {(mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n           (Abs \\<psi>) {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n          mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n           {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} i,\n          mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n           {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} i) |\n         i. i < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n                 (Abs \\<psi>)})\n       w)\n\ngoal (1 subgoal):\n 1. \\<And>\\<psi>.\n       G \\<psi> \\<in> \\<G> \\<Longrightarrow>\n       accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w", "by simp"], ["proof (state)\nthis:\n  G ?\\<psi>8 \\<in> \\<G> \\<Longrightarrow>\n  accept\\<^sub>R (ltl_to_rabin \\<Sigma> ?\\<psi>8 \\<G>) w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "{"], ["proof (state)\nthis:\n  G ?\\<psi>8 \\<in> \\<G> \\<Longrightarrow>\n  accept\\<^sub>R (ltl_to_rabin \\<Sigma> ?\\<psi>8 \\<G>) w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "fix \\<psi>"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "assume \"G \\<psi> \\<in> \\<G>\""], ["proof (state)\nthis:\n  G \\<psi> \\<in> \\<G>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "interpret \\<MM>: ltl_FG_to_rabin \\<Sigma> \\<psi> \\<G> w"], ["proof (prove)\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "by (insert \\<open>ltl_FG_to_rabin \\<Sigma> \\<G> w\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "obtain i where \"\\<MM>.smallest_accepting_rank = Some i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<MM>.smallest_accepting_rank\\<^sub>R = Some i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<MM>_accept[OF \\<open>G \\<psi> \\<in> \\<G>\\<close>]"], ["proof (prove)\nusing this:\n  \\<MM>.accept\\<^sub>R'\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<MM>.smallest_accepting_rank\\<^sub>R = Some i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding \\<MM>.smallest_accepting_rank_def"], ["proof (prove)\nusing this:\n  \\<MM>.accept\\<^sub>R'\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (if \\<MM>.accept\\<^sub>R'\n         then Some\n               (LEAST i.\n                   finite \\<MM>.fail \\<and>\n                   finite (\\<MM>.merge i) \\<and> infinite (\\<MM>.succeed i))\n         else None) =\n        Some i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some i\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "hence \"the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\" and \"\\<pi> (G \\<psi>) \\<noteq> None\""], ["proof (prove)\nusing this:\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some i\n\ngoal (1 subgoal):\n 1. the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<^sub>R &&&\n    \\<pi> (G \\<psi>) \\<noteq> None", "using \\<MM>.smallest_accepting_rank_properties \\<open>G \\<psi> \\<in> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some i\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  \\<MM>.accept\\<^sub>R'\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  finite \\<MM>.fail\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  finite (\\<MM>.merge ?i)\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  infinite (\\<MM>.succeed ?i)\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  \\<forall>j<?i. finite (\\<MM>.succeed j)\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  ?i < \\<MM>.max_rank\\<^sub>R\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<^sub>R &&&\n    \\<pi> (G \\<psi>) \\<noteq> None", "unfolding \\<pi>_def"], ["proof (prove)\nusing this:\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some i\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  \\<MM>.accept\\<^sub>R'\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  finite \\<MM>.fail\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  finite (\\<MM>.merge ?i)\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  infinite (\\<MM>.succeed ?i)\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  \\<forall>j<?i. finite (\\<MM>.succeed j)\n  \\<MM>.smallest_accepting_rank\\<^sub>R = Some ?i \\<Longrightarrow>\n  ?i < \\<MM>.max_rank\\<^sub>R\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. the (if G \\<psi> \\<in> \\<G>\n         then mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n               (Abs (theG (G \\<psi>))) w\n               {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n         else None)\n    < \\<MM>.max_rank\\<^sub>R &&&\n    (if G \\<psi> \\<in> \\<G>\n     then mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n           (Abs (theG (G \\<psi>))) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n     else None) \\<noteq>\n    None", "by simp+"], ["proof (state)\nthis:\n  the (\\<pi> (G \\<psi>)) < \\<MM>.max_rank\\<^sub>R\n  \\<pi> (G \\<psi>) \\<noteq> None\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "}"], ["proof (state)\nthis:\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow>\n  the (\\<pi> (G ?\\<psi>10))\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs ?\\<psi>10)\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow> \\<pi> (G ?\\<psi>10) \\<noteq> None\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "hence \"\\<G> = dom \\<pi>\" and \"\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> the (\\<pi> \\<chi>) < ltl_FG_to_rabin_def.max_rank\\<^sub>R \\<Sigma> (theG \\<chi>)\""], ["proof (prove)\nusing this:\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow>\n  the (\\<pi> (G ?\\<psi>10))\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs ?\\<psi>10)\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow> \\<pi> (G ?\\<psi>10) \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<G> = dom \\<pi> &&&\n    (\\<And>\\<chi>.\n        \\<chi> \\<in> \\<G> \\<Longrightarrow>\n        the (\\<pi> \\<chi>)\n        < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)))", "using \\<open>Only_G \\<G>\\<close> \\<pi>_def"], ["proof (prove)\nusing this:\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow>\n  the (\\<pi> (G ?\\<psi>10))\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs ?\\<psi>10)\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow> \\<pi> (G ?\\<psi>10) \\<noteq> None\n  Only_G \\<G>\n  \\<pi> ?\\<chi> =\n  (if ?\\<chi> \\<in> \\<G>\n   then mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG ?\\<chi>)) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n   else None)\n\ngoal (1 subgoal):\n 1. \\<G> = dom \\<pi> &&&\n    (\\<And>\\<chi>.\n        \\<chi> \\<in> \\<G> \\<Longrightarrow>\n        the (\\<pi> \\<chi>)\n        < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)))", "unfolding dom_def"], ["proof (prove)\nusing this:\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow>\n  the (\\<pi> (G ?\\<psi>10))\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs ?\\<psi>10)\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow> \\<pi> (G ?\\<psi>10) \\<noteq> None\n  Only_G \\<G>\n  \\<pi> ?\\<chi> =\n  (if ?\\<chi> \\<in> \\<G>\n   then mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG ?\\<chi>)) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n   else None)\n\ngoal (1 subgoal):\n 1. \\<G> = {a. \\<pi> a \\<noteq> None} &&&\n    (\\<And>\\<chi>.\n        \\<chi> \\<in> \\<G> \\<Longrightarrow>\n        the (\\<pi> \\<chi>)\n        < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)))", "by auto"], ["proof (state)\nthis:\n  \\<G> = dom \\<pi>\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  the (\\<pi> ?\\<chi>8)\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>8))\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "hence \"(M_fin \\<pi> \\<union> \\<Union>{Acc_fin \\<Sigma> \\<pi> \\<chi> | \\<chi>. \\<chi> \\<in> dom \\<pi>}, {Acc_inf \\<pi> \\<chi> | \\<chi>. \\<chi> \\<in> dom \\<pi>}) \\<in> ?F\""], ["proof (prove)\nusing this:\n  \\<G> = dom \\<pi>\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  the (\\<pi> ?\\<chi>8)\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>8))\n\ngoal (1 subgoal):\n 1. (M_fin \\<pi> \\<union>\n     \\<Union>\n      {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n     {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n    \\<in> F\\<^sub>\\<A> \\<Sigma> \\<phi>", "using \\<open>\\<G> \\<subseteq> \\<^bold>G \\<phi>\\<close> max_rank_of_def"], ["proof (prove)\nusing this:\n  \\<G> = dom \\<pi>\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  the (\\<pi> ?\\<chi>8)\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>8))\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  max_rank_of ?\\<Sigma> ?\\<psi> \\<equiv>\n  semi_mojmir_def.max_rank ?\\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<psi>))\n\ngoal (1 subgoal):\n 1. (M_fin \\<pi> \\<union>\n     \\<Union>\n      {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n     {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n    \\<in> F\\<^sub>\\<A> \\<Sigma> \\<phi>", "by auto"], ["proof (state)\nthis:\n  (M_fin \\<pi> \\<union>\n   \\<Union> {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n   {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n  \\<in> F\\<^sub>\\<A> \\<Sigma> \\<phi>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  (M_fin \\<pi> \\<union>\n   \\<Union> {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n   {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n  \\<in> F\\<^sub>\\<A> \\<Sigma> \\<phi>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "{"], ["proof (state)\nthis:\n  (M_fin \\<pi> \\<union>\n   \\<Union> {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n   {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n  \\<in> F\\<^sub>\\<A> \\<Sigma> \\<phi>\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have \"accepting_pair\\<^sub>R ?\\<Delta> ?q\\<^sub>0 (M_fin \\<pi>, UNIV) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "(* Wait until the Mojmir automata provide enough information *)"], ["proof (state)\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "obtain i where i_def: \n          \"\\<And>j. j \\<ge> i \\<Longrightarrow> \\<forall>S. (\\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> S \\<Turnstile>\\<^sub>P G \\<psi> \\<and> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)) \\<longrightarrow> S \\<Turnstile>\\<^sub>P af \\<phi> (w [0 \\<rightarrow> j])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i \\<le> j \\<Longrightarrow>\n            \\<forall>S.\n               (\\<forall>\\<psi>.\n                   G \\<psi> \\<in> \\<G> \\<longrightarrow>\n                   S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n                   S \\<Turnstile>\\<^sub>P\n                   eval\\<^sub>G \\<G>\n                    (\\<F> \\<psi> w \\<G> j)) \\<longrightarrow>\n               S \\<Turnstile>\\<^sub>P\n               af \\<phi> (prefix j w)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>accept\\<^sub>M \\<phi> \\<G> w\\<close>"], ["proof (prove)\nusing this:\n  accept\\<^sub>M \\<phi> \\<G> w\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i \\<le> j \\<Longrightarrow>\n            \\<forall>S.\n               (\\<forall>\\<psi>.\n                   G \\<psi> \\<in> \\<G> \\<longrightarrow>\n                   S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n                   S \\<Turnstile>\\<^sub>P\n                   eval\\<^sub>G \\<G>\n                    (\\<F> \\<psi> w \\<G> j)) \\<longrightarrow>\n               S \\<Turnstile>\\<^sub>P\n               af \\<phi> (prefix j w)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding MOST_nat_le accept\\<^sub>M_def"], ["proof (prove)\nusing this:\n  \\<exists>m.\n     \\<forall>n\\<ge>m.\n        \\<forall>S.\n           (\\<forall>\\<psi>.\n               G \\<psi> \\<in> \\<G> \\<longrightarrow>\n               S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n               S \\<Turnstile>\\<^sub>P\n               eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> n)) \\<longrightarrow>\n           S \\<Turnstile>\\<^sub>P af \\<phi> (prefix n w)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i \\<le> j \\<Longrightarrow>\n            \\<forall>S.\n               (\\<forall>\\<psi>.\n                   G \\<psi> \\<in> \\<G> \\<longrightarrow>\n                   S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n                   S \\<Turnstile>\\<^sub>P\n                   eval\\<^sub>G \\<G>\n                    (\\<F> \\<psi> w \\<G> j)) \\<longrightarrow>\n               S \\<Turnstile>\\<^sub>P\n               af \\<phi> (prefix j w)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<le> ?j8 \\<Longrightarrow>\n  \\<forall>S.\n     (\\<forall>\\<psi>.\n         G \\<psi> \\<in> \\<G> \\<longrightarrow>\n         S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n         S \\<Turnstile>\\<^sub>P\n         eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> ?j8)) \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P af \\<phi> (prefix ?j8 w)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "(* Wait until the states with succeeding tokens are (prop.) equivalent to \\<F> *)"], ["proof (state)\nthis:\n  i \\<le> ?j8 \\<Longrightarrow>\n  \\<forall>S.\n     (\\<forall>\\<psi>.\n         G \\<psi> \\<in> \\<G> \\<longrightarrow>\n         S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n         S \\<Turnstile>\\<^sub>P\n         eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> ?j8)) \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P af \\<phi> (prefix ?j8 w)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "obtain i' where i'_def: \n          \"\\<And>j \\<psi> S. j \\<ge> i' \\<Longrightarrow> G \\<psi> \\<in> \\<G> \\<Longrightarrow> (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and> \\<G> \\<subseteq> S) = (\\<forall>q. q \\<in> ltl_FG_to_rabin_def.\\<S>\\<^sub>R \\<Sigma> \\<psi> \\<G> w j \\<longrightarrow> S \\<Turnstile>\\<^sub>P Rep q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        (\\<And>j \\<psi> S.\n            \\<lbrakk>i' \\<le> j; G \\<psi> \\<in> \\<G>\\<rbrakk>\n            \\<Longrightarrow> (S \\<Turnstile>\\<^sub>P\n                               \\<F> \\<psi> w \\<G> j \\<and>\n                               \\<G> \\<subseteq> S) =\n                              (\\<forall>q.\n                                  q \\<in> mojmir_def.\\<S> \\<Sigma>\n     \\<up>af\\<^sub>G (Abs \\<psi>) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n     j \\<longrightarrow>\n                                  S \\<Turnstile>\\<^sub>P\n                                  Rep q)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<F>_eq_\\<S>_generalized[OF finite_\\<Sigma> bounded_w \\<open>closed \\<G> w\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>j.\n     \\<forall>\\<psi>.\n        G \\<psi> \\<in> \\<G> \\<longrightarrow>\n        (\\<forall>S.\n            (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n             \\<G> \\<subseteq> S) =\n            (\\<forall>q.\n                q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                         (Abs \\<psi>) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                         j \\<longrightarrow>\n                S \\<Turnstile>\\<^sub>P Rep q))\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        (\\<And>j \\<psi> S.\n            \\<lbrakk>i' \\<le> j; G \\<psi> \\<in> \\<G>\\<rbrakk>\n            \\<Longrightarrow> (S \\<Turnstile>\\<^sub>P\n                               \\<F> \\<psi> w \\<G> j \\<and>\n                               \\<G> \\<subseteq> S) =\n                              (\\<forall>q.\n                                  q \\<in> mojmir_def.\\<S> \\<Sigma>\n     \\<up>af\\<^sub>G (Abs \\<psi>) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n     j \\<longrightarrow>\n                                  S \\<Turnstile>\\<^sub>P\n                                  Rep q)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding MOST_nat_le"], ["proof (prove)\nusing this:\n  \\<exists>m.\n     \\<forall>n\\<ge>m.\n        \\<forall>\\<psi>.\n           G \\<psi> \\<in> \\<G> \\<longrightarrow>\n           (\\<forall>S.\n               (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> n \\<and>\n                \\<G> \\<subseteq> S) =\n               (\\<forall>q.\n                   q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                            (Abs \\<psi>) w\n                            {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                            n \\<longrightarrow>\n                   S \\<Turnstile>\\<^sub>P Rep q))\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        (\\<And>j \\<psi> S.\n            \\<lbrakk>i' \\<le> j; G \\<psi> \\<in> \\<G>\\<rbrakk>\n            \\<Longrightarrow> (S \\<Turnstile>\\<^sub>P\n                               \\<F> \\<psi> w \\<G> j \\<and>\n                               \\<G> \\<subseteq> S) =\n                              (\\<forall>q.\n                                  q \\<in> mojmir_def.\\<S> \\<Sigma>\n     \\<up>af\\<^sub>G (Abs \\<psi>) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n     j \\<longrightarrow>\n                                  S \\<Turnstile>\\<^sub>P\n                                  Rep q)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by presburger"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> ?j8; G ?\\<psi>8 \\<in> \\<G>\\<rbrakk>\n  \\<Longrightarrow> (?S8 \\<Turnstile>\\<^sub>P\n                     \\<F> ?\\<psi>8 w \\<G> ?j8 \\<and>\n                     \\<G> \\<subseteq> ?S8) =\n                    (\\<forall>q.\n                        q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                                 (Abs ?\\<psi>8) w\n                                 {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                                 ?j8 \\<longrightarrow>\n                        ?S8 \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "(* From now on the run does not visit forbidden states *)"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> ?j8; G ?\\<psi>8 \\<in> \\<G>\\<rbrakk>\n  \\<Longrightarrow> (?S8 \\<Turnstile>\\<^sub>P\n                     \\<F> ?\\<psi>8 w \\<G> ?j8 \\<and>\n                     \\<G> \\<subseteq> ?S8) =\n                    (\\<forall>q.\n                        q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                                 (Abs ?\\<psi>8) w\n                                 {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                                 ?j8 \\<longrightarrow>\n                        ?S8 \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "have \"\\<And>j. j \\<ge> max i i' \\<Longrightarrow> r j \\<notin> M_fin \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "assume \"j \\<ge> max i i'\""], ["proof (state)\nthis:\n  max i i' \\<le> j\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "let ?\\<phi>' = \"fst (fst (r j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "let ?m = \"snd (fst (r j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "assume \"\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<up>\\<Turnstile>\\<^sub>P Abs \\<chi>\""], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  S \\<up>\\<Turnstile>\\<^sub>P Abs ?\\<chi>8\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "hence assm1: \"\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<chi>\""], ["proof (prove)\nusing this:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  S \\<up>\\<Turnstile>\\<^sub>P Abs ?\\<chi>8\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<chi>", "using ltl_prop_entails_abs.abs_eq"], ["proof (prove)\nusing this:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  S \\<up>\\<Turnstile>\\<^sub>P Abs ?\\<chi>8\n  ?xa \\<up>\\<Turnstile>\\<^sub>P Abs ?x = ?xa \\<Turnstile>\\<^sub>P ?x\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<chi>", "by blast"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P ?\\<chi>8\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "assume \"\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> \\<forall>q. (\\<exists>j \\<ge> the (\\<pi> \\<chi>). the (?m \\<chi>) q = Some j) \\<longrightarrow> S \\<up>\\<Turnstile>\\<^sub>P \\<up>eval\\<^sub>G \\<G> q\""], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  \\<forall>q.\n     (\\<exists>ja\\<ge>the (\\<pi> ?\\<chi>8).\n         the (snd (fst (r j)) ?\\<chi>8) q = Some ja) \\<longrightarrow>\n     S \\<up>\\<Turnstile>\\<^sub>P \\<up>eval\\<^sub>G \\<G> q\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "hence assm2: \"\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> \\<forall>q. (\\<exists>j \\<ge> the (\\<pi> \\<chi>). the (?m \\<chi>) q = Some j) \\<longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\""], ["proof (prove)\nusing this:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  \\<forall>q.\n     (\\<exists>ja\\<ge>the (\\<pi> ?\\<chi>8).\n         the (snd (fst (r j)) ?\\<chi>8) q = Some ja) \\<longrightarrow>\n     S \\<up>\\<Turnstile>\\<^sub>P \\<up>eval\\<^sub>G \\<G> q\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       \\<forall>q.\n          (\\<exists>ja\\<ge>the (\\<pi> \\<chi>).\n              the (snd (fst (r j)) \\<chi>) q = Some ja) \\<longrightarrow>\n          S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "unfolding ltl_prop_entails_abs.rep_eq eval\\<^sub>G_abs_def"], ["proof (prove)\nusing this:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  \\<forall>q.\n     (\\<exists>ja\\<ge>the (\\<pi> ?\\<chi>8).\n         the (snd (fst (r j)) ?\\<chi>8) q = Some ja) \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P\n     Rep (map_fun id (map_fun Rep Abs) eval\\<^sub>G \\<G> q)\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       \\<forall>q.\n          (\\<exists>ja\\<ge>the (\\<pi> \\<chi>).\n              the (snd (fst (r j)) \\<chi>) q = Some ja) \\<longrightarrow>\n          S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "by simp"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  \\<forall>q.\n     (\\<exists>ja\\<ge>the (\\<pi> ?\\<chi>8).\n         the (snd (fst (r j)) ?\\<chi>8) q = Some ja) \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "{"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  \\<forall>q.\n     (\\<exists>ja\\<ge>the (\\<pi> ?\\<chi>8).\n         the (snd (fst (r j)) ?\\<chi>8) q = Some ja) \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "fix \\<psi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "assume \"G \\<psi> \\<in> \\<G>\""], ["proof (state)\nthis:\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "hence \"G \\<psi> \\<in> \\<^bold>G \\<phi>\" and \"\\<G> \\<subseteq> S\""], ["proof (prove)\nusing this:\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. G \\<psi> \\<in> \\<^bold>G \\<phi> &&& \\<G> \\<subseteq> S", "using \\<open>\\<G> \\<subseteq> \\<^bold>G \\<phi>\\<close> assm1 \\<open>Only_G \\<G>\\<close>"], ["proof (prove)\nusing this:\n  G \\<psi> \\<in> \\<G>\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P ?\\<chi>8\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. G \\<psi> \\<in> \\<^bold>G \\<phi> &&& \\<G> \\<subseteq> S", "by (blast, force)"], ["proof (state)\nthis:\n  G \\<psi> \\<in> \\<^bold>G \\<phi>\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "interpret \\<MM>: ltl_FG_to_rabin \\<Sigma> \\<psi> \\<G> w"], ["proof (prove)\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "by (unfold_locales; insert \\<open>Only_G \\<G>\\<close> finite_\\<Sigma> bounded_w; blast)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "have \"\\<And>S. (\\<And>q. q \\<in> \\<MM>.\\<S> j \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       (\\<And>q.\n           q \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n           S \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j", "using i'_def \\<open>G \\<psi> \\<in> \\<G>\\<close> \\<open>j \\<ge> max i i'\\<close> max.bounded_iff"], ["proof (prove)\nusing this:\n  \\<lbrakk>i' \\<le> ?j8; G ?\\<psi>8 \\<in> \\<G>\\<rbrakk>\n  \\<Longrightarrow> (?S8 \\<Turnstile>\\<^sub>P\n                     \\<F> ?\\<psi>8 w \\<G> ?j8 \\<and>\n                     \\<G> \\<subseteq> ?S8) =\n                    (\\<forall>q.\n                        q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                                 (Abs ?\\<psi>8) w\n                                 {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                                 ?j8 \\<longrightarrow>\n                        ?S8 \\<Turnstile>\\<^sub>P Rep q)\n  G \\<psi> \\<in> \\<G>\n  max i i' \\<le> j\n  (max ?b ?c \\<le> ?a) = (?b \\<le> ?a \\<and> ?c \\<le> ?a)\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       (\\<And>q.\n           q \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n           S \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j", "by metis"], ["proof (state)\nthis:\n  (\\<And>q.\n      q \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n      ?S8 \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n  ?S8 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "hence \"\\<And>S. (\\<And>q. q \\<in> Rep ` \\<MM>.\\<S> j \\<Longrightarrow> S \\<Turnstile>\\<^sub>P q) \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\""], ["proof (prove)\nusing this:\n  (\\<And>q.\n      q \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n      ?S8 \\<Turnstile>\\<^sub>P Rep q) \\<Longrightarrow>\n  ?S8 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n\ngoal (1 subgoal):\n 1. \\<And>S.\n       (\\<And>q.\n           q \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n           S \\<Turnstile>\\<^sub>P q) \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j", "by simp"], ["proof (state)\nthis:\n  (\\<And>q.\n      q \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n      ?S8 \\<Turnstile>\\<^sub>P q) \\<Longrightarrow>\n  ?S8 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "moreover"], ["proof (state)\nthis:\n  (\\<And>q.\n      q \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n      ?S8 \\<Turnstile>\\<^sub>P q) \\<Longrightarrow>\n  ?S8 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "have \\<S>_def: \"\\<MM>.\\<S> j = {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union> {q . \\<exists>j'. the (\\<pi> (G \\<psi>)) \\<le> j' \\<and> the (?m (G \\<psi>)) q = Some j'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<MM>.\\<S>\\<^sub>R j =\n    {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    {q. \\<exists>j'\\<ge>the (\\<pi> (G \\<psi>)).\n           the (snd (fst (r j)) (G \\<psi>)) q = Some j'}", "using r_alt_def''[OF \\<open>G \\<psi> \\<in> \\<^bold>G \\<phi>\\<close>, unfolded ltl.sel, of j] \\<open>G \\<psi> \\<in> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  the (snd (fst (r j)) (G \\<psi>)) ?q8 = \\<MM>.state_rank ?q8 j\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<MM>.\\<S>\\<^sub>R j =\n    {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    {q. \\<exists>j'\\<ge>the (\\<pi> (G \\<psi>)).\n           the (snd (fst (r j)) (G \\<psi>)) q = Some j'}", "by (simp add: \\<pi>_def)"], ["proof (state)\nthis:\n  \\<MM>.\\<S>\\<^sub>R j =\n  {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n  {q. \\<exists>j'\\<ge>the (\\<pi> (G \\<psi>)).\n         the (snd (fst (r j)) (G \\<psi>)) q = Some j'}\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "have \"\\<And>q. \\<G> \\<Turnstile>\\<^sub>P Rep q \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<G> \\<Turnstile>\\<^sub>P Rep q \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "using \\<open>\\<G> \\<subseteq> S\\<close> eval\\<^sub>G_prop_entailment"], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> S\n  ?S \\<Turnstile>\\<^sub>P eval\\<^sub>G ?S ?\\<phi> =\n  ?S \\<Turnstile>\\<^sub>P ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<G> \\<Turnstile>\\<^sub>P Rep q \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "by blast"], ["proof (state)\nthis:\n  \\<G> \\<Turnstile>\\<^sub>P Rep ?q8 \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q8)\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "hence \"\\<And>q. q \\<in> Rep ` \\<MM>.\\<S> j \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> q\""], ["proof (prove)\nusing this:\n  \\<G> \\<Turnstile>\\<^sub>P Rep ?q8 \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q8)\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       q \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> q", "using assm2 \\<open>G \\<psi> \\<in> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  \\<G> \\<Turnstile>\\<^sub>P Rep ?q8 \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q8)\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  \\<forall>q.\n     (\\<exists>ja\\<ge>the (\\<pi> ?\\<chi>8).\n         the (snd (fst (r j)) ?\\<chi>8) q = Some ja) \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       q \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> q", "unfolding \\<S>_def"], ["proof (prove)\nusing this:\n  \\<G> \\<Turnstile>\\<^sub>P Rep ?q8 \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q8)\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  \\<forall>q.\n     (\\<exists>ja\\<ge>the (\\<pi> ?\\<chi>8).\n         the (snd (fst (r j)) ?\\<chi>8) q = Some ja) \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       q \\<in> Rep `\n               ({q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n                {q. \\<exists>j'\\<ge>the (\\<pi> (G \\<psi>)).\n                       the (snd (fst (r j)) (G \\<psi>)) q =\n                       Some j'}) \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> q", "by auto"], ["proof (state)\nthis:\n  ?q8 \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> ?q8\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "ultimately"], ["proof (chain)\npicking this:\n  (\\<And>q.\n      q \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n      ?S8 \\<Turnstile>\\<^sub>P q) \\<Longrightarrow>\n  ?S8 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n  ?q8 \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> ?q8", "have \"S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\""], ["proof (prove)\nusing this:\n  (\\<And>q.\n      q \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n      ?S8 \\<Turnstile>\\<^sub>P q) \\<Longrightarrow>\n  ?S8 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n  ?q8 \\<in> Rep ` \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> ?q8\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)", "by (rule eval\\<^sub>G_respectfulness_generalized)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "}"], ["proof (state)\nthis:\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> ?\\<psi>10 w \\<G> j)\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "hence \"S \\<Turnstile>\\<^sub>P af \\<phi> (w [0 \\<rightarrow> j])\""], ["proof (prove)\nusing this:\n  G ?\\<psi>10 \\<in> \\<G> \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> ?\\<psi>10 w \\<G> j)\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af \\<phi> (prefix j w)", "by (metis max.bounded_iff i_def \\<open>j \\<ge> max i i'\\<close> \\<open>\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<chi>\\<close>)"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af \\<phi> (prefix j w)\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "hence \"S \\<Turnstile>\\<^sub>P Rep ?\\<phi>'\""], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af \\<phi> (prefix j w)\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))", "using \\<phi>'_def ltl_prop_equiv_def"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P af \\<phi> (prefix j w)\n  af \\<phi> (prefix ?i8 w) \\<equiv>\\<^sub>P Rep (fst (fst (r ?i8)))\n  ?\\<phi> \\<equiv>\\<^sub>P ?\\<psi> \\<equiv>\n  \\<forall>\\<A>.\n     \\<A> \\<Turnstile>\\<^sub>P ?\\<phi> = \\<A> \\<Turnstile>\\<^sub>P ?\\<psi>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))", "by blast"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "hence \"S \\<up>\\<Turnstile>\\<^sub>P ?\\<phi>'\""], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\n\ngoal (1 subgoal):\n 1. S \\<up>\\<Turnstile>\\<^sub>P fst (fst (r j))", "using ltl_prop_entails_abs.rep_eq"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\n  ?x \\<up>\\<Turnstile>\\<^sub>P ?xa = ?x \\<Turnstile>\\<^sub>P Rep ?xa\n\ngoal (1 subgoal):\n 1. S \\<up>\\<Turnstile>\\<^sub>P fst (fst (r j))", "by blast"], ["proof (state)\nthis:\n  S \\<up>\\<Turnstile>\\<^sub>P fst (fst (r j))\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>\\<chi>.\n              \\<chi> \\<in> \\<G> \\<Longrightarrow>\n              ?S10 \\<up>\\<Turnstile>\\<^sub>P Abs \\<chi>;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> \\<G> \\<Longrightarrow>\n      \\<forall>q.\n         (\\<exists>ja\\<ge>the (\\<pi> \\<chi>).\n             the (snd (fst (r j)) \\<chi>) q = Some ja) \\<longrightarrow>\n         ?S10 \\<up>\\<Turnstile>\\<^sub>P \\<up>eval\\<^sub>G \\<G> q\\<rbrakk>\n  \\<Longrightarrow> ?S10 \\<up>\\<Turnstile>\\<^sub>P fst (fst (r j))\n\ngoal (1 subgoal):\n 1. \\<And>j. max i i' \\<le> j \\<Longrightarrow> r j \\<notin> M_fin \\<pi>", "thus \"r j \\<notin> M_fin \\<pi>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>\\<chi>.\n              \\<chi> \\<in> \\<G> \\<Longrightarrow>\n              ?S10 \\<up>\\<Turnstile>\\<^sub>P Abs \\<chi>;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> \\<G> \\<Longrightarrow>\n      \\<forall>q.\n         (\\<exists>ja\\<ge>the (\\<pi> \\<chi>).\n             the (snd (fst (r j)) \\<chi>) q = Some ja) \\<longrightarrow>\n         ?S10 \\<up>\\<Turnstile>\\<^sub>P \\<up>eval\\<^sub>G \\<G> q\\<rbrakk>\n  \\<Longrightarrow> ?S10 \\<up>\\<Turnstile>\\<^sub>P fst (fst (r j))\n\ngoal (1 subgoal):\n 1. r j \\<notin> M_fin \\<pi>", "using \\<open>\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> the (\\<pi> \\<chi>) < ltl_FG_to_rabin_def.max_rank\\<^sub>R \\<Sigma> (theG \\<chi>)\\<close> \\<open>\\<G> = dom \\<pi>\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>\\<chi>.\n              \\<chi> \\<in> \\<G> \\<Longrightarrow>\n              ?S10 \\<up>\\<Turnstile>\\<^sub>P Abs \\<chi>;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> \\<G> \\<Longrightarrow>\n      \\<forall>q.\n         (\\<exists>ja\\<ge>the (\\<pi> \\<chi>).\n             the (snd (fst (r j)) \\<chi>) q = Some ja) \\<longrightarrow>\n         ?S10 \\<up>\\<Turnstile>\\<^sub>P \\<up>eval\\<^sub>G \\<G> q\\<rbrakk>\n  \\<Longrightarrow> ?S10 \\<up>\\<Turnstile>\\<^sub>P fst (fst (r j))\n  ?\\<chi> \\<in> \\<G> \\<Longrightarrow>\n  the (\\<pi> ?\\<chi>)\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>))\n  \\<G> = dom \\<pi>\n\ngoal (1 subgoal):\n 1. r j \\<notin> M_fin \\<pi>", "by fastforce"], ["proof (state)\nthis:\n  r j \\<notin> M_fin \\<pi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max i i' \\<le> ?j8 \\<Longrightarrow> r ?j8 \\<notin> M_fin \\<pi>\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "hence \"range (suffix (max i i') r) \\<inter> M_fin \\<pi> = {}\""], ["proof (prove)\nusing this:\n  max i i' \\<le> ?j8 \\<Longrightarrow> r ?j8 \\<notin> M_fin \\<pi>\n\ngoal (1 subgoal):\n 1. range (suffix (max i i') r) \\<inter> M_fin \\<pi> = {}", "unfolding suffix_def"], ["proof (prove)\nusing this:\n  max i i' \\<le> ?j8 \\<Longrightarrow> r ?j8 \\<notin> M_fin \\<pi>\n\ngoal (1 subgoal):\n 1. range (\\<lambda>n. r (max i i' + n)) \\<inter> M_fin \\<pi> = {}", "by (blast intro: le_add1 elim: rangeE)"], ["proof (state)\nthis:\n  range (suffix (max i i') r) \\<inter> M_fin \\<pi> = {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "hence \"limit r \\<inter> M_fin \\<pi> = {}\""], ["proof (prove)\nusing this:\n  range (suffix (max i i') r) \\<inter> M_fin \\<pi> = {}\n\ngoal (1 subgoal):\n 1. limit r \\<inter> M_fin \\<pi> = {}", "using limit_in_range_suffix[of r]"], ["proof (prove)\nusing this:\n  range (suffix (max i i') r) \\<inter> M_fin \\<pi> = {}\n  limit r \\<subseteq> range (suffix ?k r)\n\ngoal (1 subgoal):\n 1. limit r \\<inter> M_fin \\<pi> = {}", "by blast"], ["proof (state)\nthis:\n  limit r \\<inter> M_fin \\<pi> = {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "moreover"], ["proof (state)\nthis:\n  limit r \\<inter> M_fin \\<pi> = {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "have \"limit r \\<inter> UNIV \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. limit r \\<inter> UNIV \\<noteq> {}", "using \\<open>finite (range r)\\<close>"], ["proof (prove)\nusing this:\n  finite (range r)\n\ngoal (1 subgoal):\n 1. limit r \\<inter> UNIV \\<noteq> {}", "by (simp, metis empty_iff limit_nonemptyE)"], ["proof (state)\nthis:\n  limit r \\<inter> UNIV \\<noteq> {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "ultimately"], ["proof (chain)\npicking this:\n  limit r \\<inter> M_fin \\<pi> = {}\n  limit r \\<inter> UNIV \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  limit r \\<inter> M_fin \\<pi> = {}\n  limit r \\<inter> UNIV \\<noteq> {}\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w", "unfolding r_def accepting_pair\\<^sub>R_simp"], ["proof (prove)\nusing this:\n  limit\n   (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>)\n     w) \\<inter>\n  M_fin \\<pi> =\n  {}\n  limit\n   (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>)\n     w) \\<inter>\n  UNIV \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. limit\n     (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>)\n       w) \\<inter>\n    M_fin \\<pi> =\n    {} \\<and>\n    limit\n     (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>)\n       w) \\<inter>\n    UNIV \\<noteq>\n    {}", ".."], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have \"\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> accepting_pair\\<^sub>R ?\\<Delta> ?q\\<^sub>0 (Acc \\<Sigma> \\<pi> \\<chi>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w", "fix \\<chi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w", "assume \"\\<chi> \\<in> \\<G>\""], ["proof (state)\nthis:\n  \\<chi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w", "then"], ["proof (chain)\npicking this:\n  \\<chi> \\<in> \\<G>", "obtain \\<psi> where \"\\<chi> = G \\<psi>\" and \"G \\<psi> \\<in> \\<G>\""], ["proof (prove)\nusing this:\n  \\<chi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>\\<chi> = G \\<psi>; G \\<psi> \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>Only_G \\<G>\\<close>"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> \\<G>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>\\<chi> = G \\<psi>; G \\<psi> \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  \\<chi> = G \\<psi>\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w", "thus \"?thesis \\<chi>\""], ["proof (prove)\nusing this:\n  \\<chi> = G \\<psi>\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w", "using \\<open>\\<And>\\<psi>. G \\<psi> \\<in> \\<G> \\<Longrightarrow> accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\\<close>[OF \\<open>G \\<psi> \\<in> \\<G>\\<close>]"], ["proof (prove)\nusing this:\n  \\<chi> = G \\<psi>\n  G \\<psi> \\<in> \\<G>\n  accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w", "using rabin_accept_to_Acc[of \\<psi> \\<pi>] \\<open>G \\<psi> \\<in> \\<G>\\<close> \\<open>\\<G> \\<subseteq> \\<^bold>G \\<phi>\\<close> \\<open>\\<chi> \\<in> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  \\<chi> = G \\<psi>\n  G \\<psi> \\<in> \\<G>\n  accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n  \\<lbrakk>G \\<psi> \\<in> dom \\<pi>;\n   dom \\<pi> \\<subseteq> \\<^bold>G ?\\<phi>;\n   accept\\<^sub>R\n    (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>),\n     semi_mojmir_def.initial (Abs \\<psi>),\n     {(mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n        (Abs \\<psi>) {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} \\<union>\n       mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} j,\n       mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} j) |\n      j. j < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n              (Abs \\<psi>)})\n    w;\n   \\<pi> (G \\<psi>) =\n   mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n    w {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\\<rbrakk>\n  \\<Longrightarrow> accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n                     (\\<iota>\\<^sub>\\<A> ?\\<phi>)\n                     (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> (G \\<psi>)) w\n  G \\<psi> \\<in> \\<G>\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  \\<chi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w", "unfolding ltl.sel"], ["proof (prove)\nusing this:\n  \\<chi> = G \\<psi>\n  G \\<psi> \\<in> \\<G>\n  accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> \\<G>) w\n  \\<lbrakk>G \\<psi> \\<in> dom \\<pi>;\n   dom \\<pi> \\<subseteq> \\<^bold>G ?\\<phi>;\n   accept\\<^sub>R\n    (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>),\n     semi_mojmir_def.initial (Abs \\<psi>),\n     {(mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n        (Abs \\<psi>) {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} \\<union>\n       mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} j,\n       mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} j) |\n      j. j < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n              (Abs \\<psi>)})\n    w;\n   \\<pi> (G \\<psi>) =\n   mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n    w {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\\<rbrakk>\n  \\<Longrightarrow> accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n                     (\\<iota>\\<^sub>\\<A> ?\\<phi>)\n                     (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> (G \\<psi>)) w\n  G \\<psi> \\<in> \\<G>\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  \\<chi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w", "unfolding \\<open>\\<chi> = G \\<psi>\\<close> \\<open>\\<G> = dom \\<pi>\\<close>"], ["proof (prove)\nusing this:\n  G \\<psi> = G \\<psi>\n  G \\<psi> \\<in> dom \\<pi>\n  accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> (dom \\<pi>)) w\n  \\<lbrakk>G \\<psi> \\<in> dom \\<pi>;\n   dom \\<pi> \\<subseteq> \\<^bold>G ?\\<phi>;\n   accept\\<^sub>R\n    (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>),\n     semi_mojmir_def.initial (Abs \\<psi>),\n     {(mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n        (Abs \\<psi>) {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} \\<union>\n       mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} j,\n       mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} j) |\n      j. j < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n              (Abs \\<psi>)})\n    w;\n   \\<pi> (G \\<psi>) =\n   mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n    w {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\\<rbrakk>\n  \\<Longrightarrow> accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n                     (\\<iota>\\<^sub>\\<A> ?\\<phi>)\n                     (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> (G \\<psi>)) w\n  G \\<psi> \\<in> dom \\<pi>\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n  G \\<psi> \\<in> dom \\<pi>\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> (G \\<psi>))\n     w", "using \\<pi>_def \\<open>\\<G> = dom \\<pi>\\<close> ltl.sel(8)"], ["proof (prove)\nusing this:\n  G \\<psi> = G \\<psi>\n  G \\<psi> \\<in> dom \\<pi>\n  accept\\<^sub>R (ltl_to_rabin \\<Sigma> \\<psi> (dom \\<pi>)) w\n  \\<lbrakk>G \\<psi> \\<in> dom \\<pi>;\n   dom \\<pi> \\<subseteq> \\<^bold>G ?\\<phi>;\n   accept\\<^sub>R\n    (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>),\n     semi_mojmir_def.initial (Abs \\<psi>),\n     {(mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n        (Abs \\<psi>) {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} \\<union>\n       mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} j,\n       mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q} j) |\n      j. j < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n              (Abs \\<psi>)})\n    w;\n   \\<pi> (G \\<psi>) =\n   mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n    w {q. dom \\<pi> \\<up>\\<Turnstile>\\<^sub>P q}\\<rbrakk>\n  \\<Longrightarrow> accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n                     (\\<iota>\\<^sub>\\<A> ?\\<phi>)\n                     (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> (G \\<psi>)) w\n  G \\<psi> \\<in> dom \\<pi>\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n  G \\<psi> \\<in> dom \\<pi>\n  \\<pi> ?\\<chi> =\n  (if ?\\<chi> \\<in> \\<G>\n   then mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG ?\\<chi>)) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n   else None)\n  \\<G> = dom \\<pi>\n  theG (G ?x8.0) = ?x8.0\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> (G \\<psi>))\n     w", "unfolding ltl_prop_entails_abs.rep_eq ltl_to_rabin.simps"], ["proof (prove)\nusing this:\n  G \\<psi> = G \\<psi>\n  G \\<psi> \\<in> dom \\<pi>\n  accept\\<^sub>R\n   (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>),\n    semi_mojmir_def.initial (Abs \\<psi>),\n    {(mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n       {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n      mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n       {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q} i,\n      mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n       {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q} i) |\n     i. i < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)})\n   w\n  \\<lbrakk>G \\<psi> \\<in> dom \\<pi>;\n   dom \\<pi> \\<subseteq> \\<^bold>G ?\\<phi>;\n   accept\\<^sub>R\n    (semi_mojmir_def.step \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>),\n     semi_mojmir_def.initial (Abs \\<psi>),\n     {(mojmir_to_rabin_def.fail\\<^sub>R \\<Sigma> \\<up>af\\<^sub>G\n        (Abs \\<psi>) {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n       mojmir_to_rabin_def.merge\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q} j,\n       mojmir_to_rabin_def.succeed\\<^sub>R \\<up>af\\<^sub>G (Abs \\<psi>)\n        {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q} j) |\n      j. j < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n              (Abs \\<psi>)})\n    w;\n   \\<pi> (G \\<psi>) =\n   mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>)\n    w {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q}\\<rbrakk>\n  \\<Longrightarrow> accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n                     (\\<iota>\\<^sub>\\<A> ?\\<phi>)\n                     (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> (G \\<psi>)) w\n  G \\<psi> \\<in> dom \\<pi>\n  dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>\n  G \\<psi> \\<in> dom \\<pi>\n  \\<pi> ?\\<chi> =\n  (if ?\\<chi> \\<in> \\<G>\n   then mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n         (Abs (theG ?\\<chi>)) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n   else None)\n  \\<G> = dom \\<pi>\n  theG (G ?x8.0) = ?x8.0\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> (G \\<psi>))\n     w", "by (metis (no_types, lifting) Collect_cong)"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> ?\\<chi>8) w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> ?\\<chi>8) w", "have \"accepting_pair\\<^sub>G\\<^sub>R ?\\<Delta> ?q\\<^sub>0 (M_fin \\<pi> \\<union> \\<Union>{Acc_fin \\<Sigma> \\<pi> \\<chi> | \\<chi>. \\<chi> \\<in> dom \\<pi>}, {Acc_inf \\<pi> \\<chi> | \\<chi>. \\<chi> \\<in> dom \\<pi>}) w\""], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> ?\\<chi>8) w\n\ngoal (1 subgoal):\n 1. accepting_pair\\<^sub>G\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n     (\\<iota>\\<^sub>\\<A> \\<phi>)\n     (M_fin \\<pi> \\<union>\n      \\<Union>\n       {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n      {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n     w", "unfolding accepting_pair\\<^sub>G\\<^sub>R_def accepting_pair\\<^sub>R_def fst_conv snd_conv \\<open>\\<G> = dom \\<pi>\\<close>"], ["proof (prove)\nusing this:\n  limit\n   (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>)\n     w) \\<inter>\n  M_fin \\<pi> =\n  {} \\<and>\n  limit\n   (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>)\n     w) \\<inter>\n  UNIV \\<noteq>\n  {}\n  ?\\<chi>8 \\<in> dom \\<pi> \\<Longrightarrow>\n  limit\n   (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>)\n     w) \\<inter>\n  Acc_fin \\<Sigma> \\<pi> ?\\<chi>8 =\n  {} \\<and>\n  limit\n   (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>)\n     w) \\<inter>\n  Acc_inf \\<pi> ?\\<chi>8 \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. limit\n     (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>)\n       w) \\<inter>\n    (M_fin \\<pi> \\<union>\n     \\<Union>\n      {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>}) =\n    {} \\<and>\n    (\\<forall>I\\<in>{Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>}.\n        limit\n         (run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n           (\\<iota>\\<^sub>\\<A> \\<phi>) w) \\<inter>\n        I \\<noteq>\n        {})", "by blast"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>)\n   (M_fin \\<pi> \\<union>\n    \\<Union>\n     {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n    {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n   w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "}"], ["proof (state)\nthis:\n  accepting_pair\\<^sub>G\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>)\n   (M_fin \\<pi> \\<union>\n    \\<Union>\n     {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n    {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n   w\n\ngoal (2 subgoals):\n 1. w \\<Turnstile> \\<phi> \\<Longrightarrow>\n    accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n 2. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  (M_fin \\<pi> \\<union>\n   \\<Union> {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n   {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n  \\<in> F\\<^sub>\\<A> \\<Sigma> \\<phi>\n  accepting_pair\\<^sub>G\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>)\n   (M_fin \\<pi> \\<union>\n    \\<Union>\n     {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n    {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n   w", "show ?rhs"], ["proof (prove)\nusing this:\n  (M_fin \\<pi> \\<union>\n   \\<Union> {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n   {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n  \\<in> F\\<^sub>\\<A> \\<Sigma> \\<phi>\n  accepting_pair\\<^sub>G\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>)\n   (M_fin \\<pi> \\<union>\n    \\<Union>\n     {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n    {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n   w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w", "unfolding ltl_to_rabin_base_def.ltl_to_generalized_rabin.simps accept\\<^sub>G\\<^sub>R_def fst_conv snd_conv"], ["proof (prove)\nusing this:\n  (M_fin \\<pi> \\<union>\n   \\<Union> {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n   {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n  \\<in> F\\<^sub>\\<A> \\<Sigma> \\<phi>\n  accepting_pair\\<^sub>G\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>)\n   (M_fin \\<pi> \\<union>\n    \\<Union>\n     {Acc_fin \\<Sigma> \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>},\n    {Acc_inf \\<pi> \\<chi> |\\<chi>. \\<chi> \\<in> dom \\<pi>})\n   w\n\ngoal (1 subgoal):\n 1. \\<exists>(Fin, Inf)\\<in>F\\<^sub>\\<A> \\<Sigma> \\<phi>.\n       accepting_pair\\<^sub>G\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (Fin, Inf) w", "by blast"], ["proof (state)\nthis:\n  accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "}\n\n  \\<comment> \\<open>Assuming @{term \"ltl_to_generalized_rabin \\<Sigma> \\<phi>\"} accepts @{term w}, we prove that @{term \"w \\<Turnstile> \\<phi>\"} holds\\<close>"], ["proof (state)\nthis:\n  w \\<Turnstile> \\<phi> \\<Longrightarrow>\n  accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "{"], ["proof (state)\nthis:\n  w \\<Turnstile> \\<phi> \\<Longrightarrow>\n  accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "assume ?rhs"], ["proof (state)\nthis:\n  accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "obtain \\<pi>' where 0: \"dom \\<pi>' \\<subseteq> \\<^bold>G \\<phi>\"\n      and 1: \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow> the (\\<pi>' \\<chi>) < ltl_FG_to_rabin_def.max_rank\\<^sub>R \\<Sigma> (theG \\<chi>)\"\n      and 2: \"accepting_pair\\<^sub>R ?\\<Delta> ?q\\<^sub>0 (M_fin \\<pi>', UNIV) w\"\n      and 3: \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow> accepting_pair\\<^sub>R ?\\<Delta> ?q\\<^sub>0 (Acc \\<Sigma> \\<pi>' \\<chi>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>'.\n        \\<lbrakk>dom \\<pi>' \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow>\n            the (\\<pi>' \\<chi>)\n            < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n               (Abs (theG \\<chi>));\n         accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n          (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>', UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow>\n            accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n             (\\<iota>\\<^sub>\\<A> \\<phi>)\n             (Acc\\<^sub>\\<A> \\<Sigma> \\<pi>' \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using accept\\<^sub>G\\<^sub>R_I[OF \\<open>?rhs\\<close>]"], ["proof (prove)\nusing this:\n  (\\<And>\\<pi>.\n      \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n       \\<And>\\<chi>.\n          \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n          the (\\<pi> \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n       accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w;\n       \\<And>\\<chi>.\n          \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n          accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n           (\\<iota>\\<^sub>\\<A> \\<phi>)\n           (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>'.\n        \\<lbrakk>dom \\<pi>' \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow>\n            the (\\<pi>' \\<chi>)\n            < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n               (Abs (theG \\<chi>));\n         accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n          (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>', UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow>\n            accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n             (\\<iota>\\<^sub>\\<A> \\<phi>)\n             (Acc\\<^sub>\\<A> \\<Sigma> \\<pi>' \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding max_rank_of_def"], ["proof (prove)\nusing this:\n  (\\<And>\\<pi>.\n      \\<lbrakk>dom \\<pi> \\<subseteq> \\<^bold>G \\<phi>;\n       \\<And>\\<chi>.\n          \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n          the (\\<pi> \\<chi>)\n          < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n             (Abs (theG \\<chi>));\n       accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w;\n       \\<And>\\<chi>.\n          \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n          accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n           (\\<iota>\\<^sub>\\<A> \\<phi>)\n           (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>'.\n        \\<lbrakk>dom \\<pi>' \\<subseteq> \\<^bold>G \\<phi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow>\n            the (\\<pi>' \\<chi>)\n            < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n               (Abs (theG \\<chi>));\n         accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n          (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>', UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow>\n            accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n             (\\<iota>\\<^sub>\\<A> \\<phi>)\n             (Acc\\<^sub>\\<A> \\<Sigma> \\<pi>' \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dom \\<pi>' \\<subseteq> \\<^bold>G \\<phi>\n  ?\\<chi>8 \\<in> dom \\<pi>' \\<Longrightarrow>\n  the (\\<pi>' ?\\<chi>8)\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>8))\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>', UNIV) w\n  ?\\<chi>8 \\<in> dom \\<pi>' \\<Longrightarrow>\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi>' ?\\<chi>8) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "define \\<G> where \"\\<G> = dom \\<pi>'\""], ["proof (state)\nthis:\n  \\<G> = dom \\<pi>'\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "hence \"\\<G> \\<subseteq> \\<^bold>G \\<phi>\""], ["proof (prove)\nusing this:\n  \\<G> = dom \\<pi>'\n\ngoal (1 subgoal):\n 1. \\<G> \\<subseteq> \\<^bold>G \\<phi>", "using \\<open>dom \\<pi>' \\<subseteq> \\<^bold>G \\<phi>\\<close>"], ["proof (prove)\nusing this:\n  \\<G> = dom \\<pi>'\n  dom \\<pi>' \\<subseteq> \\<^bold>G \\<phi>\n\ngoal (1 subgoal):\n 1. \\<G> \\<subseteq> \\<^bold>G \\<phi>", "by simp"], ["proof (state)\nthis:\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "note \\<G>_properties[OF \\<open>dom \\<pi>' \\<subseteq> \\<^bold>G \\<phi>\\<close>[unfolded \\<G>_def[symmetric]]]"], ["proof (state)\nthis:\n  finite \\<G>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  finite \\<G>\n  Only_G \\<G>", "have \\<MM>_Accept: \"\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> ltl_FG_to_rabin_def.accept\\<^sub>R' (theG \\<chi>) \\<G> w\""], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  finite \\<G>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       mojmir_def.accept \\<up>af\\<^sub>G (Abs (theG \\<chi>)) w\n        {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "using Acc_to_mojmir_accept[OF _ 0 3, of \"theG _\"] 1[of \"G theG _\", unfolded ltl.sel] \\<G>_def"], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  finite \\<G>\n  Only_G \\<G>\n  \\<lbrakk>G theG ?uu11 \\<in> dom \\<pi>'; G theG ?uu11 \\<in> dom \\<pi>';\n   the (\\<pi>' (G theG ?uu11))\n   < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n      (Abs (theG ?uu11))\\<rbrakk>\n  \\<Longrightarrow> mojmir_def.accept \\<up>af\\<^sub>G (Abs (theG ?uu11)) w\n                     {q. dom \\<pi>' \\<up>\\<Turnstile>\\<^sub>P q}\n  G theG ?uu11 \\<in> dom \\<pi>' \\<Longrightarrow>\n  the (\\<pi>' (G theG ?uu11))\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?uu11))\n  \\<G> = dom \\<pi>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       mojmir_def.accept \\<up>af\\<^sub>G (Abs (theG \\<chi>)) w\n        {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "unfolding ltl_prop_entails_abs.rep_eq"], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  finite \\<G>\n  Only_G \\<G>\n  \\<lbrakk>G theG ?uu11 \\<in> dom \\<pi>'; G theG ?uu11 \\<in> dom \\<pi>';\n   the (\\<pi>' (G theG ?uu11))\n   < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n      (Abs (theG ?uu11))\\<rbrakk>\n  \\<Longrightarrow> mojmir_def.accept \\<up>af\\<^sub>G (Abs (theG ?uu11)) w\n                     {q. dom \\<pi>' \\<Turnstile>\\<^sub>P Rep q}\n  G theG ?uu11 \\<in> dom \\<pi>' \\<Longrightarrow>\n  the (\\<pi>' (G theG ?uu11))\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?uu11))\n  \\<G> = dom \\<pi>'\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow>\n       mojmir_def.accept \\<up>af\\<^sub>G (Abs (theG \\<chi>)) w\n        {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}", "by (metis (no_types) ltl.sel(8)) \n \n    \\<comment> \\<open>Normalise @{text \\<pi>} to the smallest accepting ranks\\<close>"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  mojmir_def.accept \\<up>af\\<^sub>G (Abs (theG ?\\<chi>8)) w\n   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "obtain \\<pi> where \"dom \\<pi>' = dom \\<pi>\"\n      and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> \\<pi> \\<chi> = ltl_FG_to_rabin_def.smallest_accepting_rank\\<^sub>R \\<Sigma> (theG \\<chi>) (dom \\<pi>) w\"\n      and \"accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w\" \n      and \"\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc \\<Sigma> \\<pi> \\<chi>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi>' = dom \\<pi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            \\<pi> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n             (Abs (theG \\<chi>)) w\n             {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q};\n         accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n          (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n             (\\<iota>\\<^sub>\\<A> \\<phi>)\n             (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using normalize_\\<pi>[OF 0 _ 2 3] 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>\\<chi>.\n              \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow>\n              the (\\<pi>' \\<chi>) < max_rank_of \\<Sigma> \\<chi>;\n   \\<And>\\<chi>.\n      \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow> \\<chi> \\<in> dom \\<pi>';\n   \\<And>\\<pi>\\<^sub>\\<A>.\n      \\<lbrakk>dom \\<pi>' = dom \\<pi>\\<^sub>\\<A>;\n       \\<And>\\<chi>.\n          \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n          \\<pi>\\<^sub>\\<A> \\<chi> =\n          mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)) w\n           {q. dom \\<pi>\\<^sub>\\<A> \\<up>\\<Turnstile>\\<^sub>P q};\n       accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n       \\<And>\\<chi>.\n          \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n          accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n           (\\<iota>\\<^sub>\\<A> \\<phi>)\n           (Acc\\<^sub>\\<A> \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ?\\<chi>8 \\<in> dom \\<pi>' \\<Longrightarrow>\n  the (\\<pi>' ?\\<chi>8)\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>8))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi>' = dom \\<pi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            \\<pi> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n             (Abs (theG \\<chi>)) w\n             {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q};\n         accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n          (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n             (\\<iota>\\<^sub>\\<A> \\<phi>)\n             (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding max_rank_of_def ltl_prop_entails_abs.rep_eq"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>\\<chi>.\n              \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow>\n              the (\\<pi>' \\<chi>)\n              < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G\n                 (Abs (theG \\<chi>));\n   \\<And>\\<chi>.\n      \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow> \\<chi> \\<in> dom \\<pi>';\n   \\<And>\\<pi>\\<^sub>\\<A>.\n      \\<lbrakk>dom \\<pi>' = dom \\<pi>\\<^sub>\\<A>;\n       \\<And>\\<chi>.\n          \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n          \\<pi>\\<^sub>\\<A> \\<chi> =\n          mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n           (Abs (theG \\<chi>)) w\n           {q. dom \\<pi>\\<^sub>\\<A> \\<Turnstile>\\<^sub>P Rep q};\n       accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n        (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>\\<^sub>\\<A>, UNIV) w;\n       \\<And>\\<chi>.\n          \\<chi> \\<in> dom \\<pi>\\<^sub>\\<A> \\<Longrightarrow>\n          accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n           (\\<iota>\\<^sub>\\<A> \\<phi>)\n           (Acc\\<^sub>\\<A> \\<Sigma> \\<pi>\\<^sub>\\<A> \\<chi>) w\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  ?\\<chi>8 \\<in> dom \\<pi>' \\<Longrightarrow>\n  the (\\<pi>' ?\\<chi>8)\n  < semi_mojmir_def.max_rank \\<Sigma> \\<up>af\\<^sub>G (Abs (theG ?\\<chi>8))\n\ngoal (1 subgoal):\n 1. (\\<And>\\<pi>.\n        \\<lbrakk>dom \\<pi>' = dom \\<pi>;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            \\<pi> \\<chi> =\n            mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n             (Abs (theG \\<chi>)) w\n             {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q};\n         accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n          (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w;\n         \\<And>\\<chi>.\n            \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n            accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n             (\\<iota>\\<^sub>\\<A> \\<phi>)\n             (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> \\<chi>) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dom \\<pi>' = dom \\<pi>\n  ?\\<chi>8 \\<in> dom \\<pi> \\<Longrightarrow>\n  \\<pi> ?\\<chi>8 =\n  mojmir_def.smallest_accepting_rank \\<Sigma> \\<up>af\\<^sub>G\n   (Abs (theG ?\\<chi>8)) w {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q}\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w\n  ?\\<chi>8 \\<in> dom \\<pi> \\<Longrightarrow>\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (Acc\\<^sub>\\<A> \\<Sigma> \\<pi> ?\\<chi>8) w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have \"ltl_FG_to_rabin \\<Sigma> \\<G> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "using finite_\\<Sigma> bounded_w \\<open>Only_G \\<G>\\<close>"], ["proof (prove)\nusing this:\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "unfolding ltl_FG_to_rabin_def"], ["proof (prove)\nusing this:\n  finite \\<Sigma>\n  range w \\<subseteq> \\<Sigma>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. Only_G \\<G> \\<and> range w \\<subseteq> \\<Sigma> \\<and> finite \\<Sigma>", "by auto"], ["proof (state)\nthis:\n  ltl_FG_to_rabin \\<Sigma> \\<G> w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have \"closed \\<G> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. closed \\<G> w", "using \\<MM>_Accept \\<open>Only_G \\<G>\\<close> ltl.sel(8) \\<open>finite \\<G>\\<close>"], ["proof (prove)\nusing this:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  mojmir_def.accept \\<up>af\\<^sub>G (Abs (theG ?\\<chi>8)) w\n   {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n  Only_G \\<G>\n  theG (G ?x8.0) = ?x8.0\n  finite \\<G>\n\ngoal (1 subgoal):\n 1. closed \\<G> w", "unfolding ltl_FG_to_rabin.ltl_to_rabin_correct_exposed'[OF \\<open>ltl_FG_to_rabin \\<Sigma> \\<G> w\\<close>, symmetric]"], ["proof (prove)\nusing this:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow>\n  \\<PP>\\<^sub>\\<infinity> (theG ?\\<chi>8) \\<G> w\n  Only_G \\<G>\n  theG (G ?x8.0) = ?x8.0\n  finite \\<G>\n\ngoal (1 subgoal):\n 1. closed \\<G> w", "by fastforce"], ["proof (state)\nthis:\n  closed \\<G> w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "moreover"], ["proof (state)\nthis:\n  closed \\<G> w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "have \"accept\\<^sub>M \\<phi> \\<G> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "(* Wait until the run gets trapped in the \"good\" states *)"], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "obtain i where i_def: \"\\<And>j. j \\<ge> i \\<Longrightarrow> r j \\<notin> M_fin \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i \\<le> j \\<Longrightarrow>\n            r j \\<notin> M_fin \\<pi>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>accepting_pair\\<^sub>R  ?\\<Delta> ?q\\<^sub>0 (M_fin \\<pi>, UNIV) w\\<close> limit_inter_empty[OF \\<open>finite (range r)\\<close>, of \"M_fin \\<pi>\"]"], ["proof (prove)\nusing this:\n  accepting_pair\\<^sub>R (\\<delta>\\<^sub>\\<A> \\<Sigma>)\n   (\\<iota>\\<^sub>\\<A> \\<phi>) (M_fin \\<pi>, UNIV) w\n  limit r \\<inter> M_fin \\<pi> = {} \\<Longrightarrow>\n  \\<forall>\\<^sub>\\<infinity>n. r n \\<notin> M_fin \\<pi>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i \\<le> j \\<Longrightarrow>\n            r j \\<notin> M_fin \\<pi>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding r_def[symmetric] MOST_nat_le accepting_pair\\<^sub>R_def"], ["proof (prove)\nusing this:\n  limit r \\<inter> fst (M_fin \\<pi>, UNIV) = {} \\<and>\n  limit r \\<inter> snd (M_fin \\<pi>, UNIV) \\<noteq> {}\n  limit r \\<inter> M_fin \\<pi> = {} \\<Longrightarrow>\n  \\<exists>m. \\<forall>n\\<ge>m. r n \\<notin> M_fin \\<pi>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<And>j.\n            i \\<le> j \\<Longrightarrow>\n            r j \\<notin> M_fin \\<pi>) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<le> ?j8 \\<Longrightarrow> r ?j8 \\<notin> M_fin \\<pi>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "(* Wait until the states with succeeding tokens are (prop.) equivalent to \\<F> *)"], ["proof (state)\nthis:\n  i \\<le> ?j8 \\<Longrightarrow> r ?j8 \\<notin> M_fin \\<pi>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "obtain i' where i'_def: \n        \"\\<And>j \\<psi> S. j \\<ge> i' \\<Longrightarrow> G \\<psi> \\<in> \\<G> \\<Longrightarrow> (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and> \\<G> \\<subseteq> S) = (\\<forall>q. q \\<in> ltl_FG_to_rabin_def.\\<S>\\<^sub>R \\<Sigma> \\<psi> \\<G> w j \\<longrightarrow> S \\<Turnstile>\\<^sub>P Rep q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        (\\<And>j \\<psi> S.\n            \\<lbrakk>i' \\<le> j; G \\<psi> \\<in> \\<G>\\<rbrakk>\n            \\<Longrightarrow> (S \\<Turnstile>\\<^sub>P\n                               \\<F> \\<psi> w \\<G> j \\<and>\n                               \\<G> \\<subseteq> S) =\n                              (\\<forall>q.\n                                  q \\<in> mojmir_def.\\<S> \\<Sigma>\n     \\<up>af\\<^sub>G (Abs \\<psi>) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n     j \\<longrightarrow>\n                                  S \\<Turnstile>\\<^sub>P\n                                  Rep q)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<F>_eq_\\<S>_generalized[OF finite_\\<Sigma> bounded_w \\<open>closed \\<G> w\\<close>]"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>\\<infinity>j.\n     \\<forall>\\<psi>.\n        G \\<psi> \\<in> \\<G> \\<longrightarrow>\n        (\\<forall>S.\n            (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n             \\<G> \\<subseteq> S) =\n            (\\<forall>q.\n                q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                         (Abs \\<psi>) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                         j \\<longrightarrow>\n                S \\<Turnstile>\\<^sub>P Rep q))\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        (\\<And>j \\<psi> S.\n            \\<lbrakk>i' \\<le> j; G \\<psi> \\<in> \\<G>\\<rbrakk>\n            \\<Longrightarrow> (S \\<Turnstile>\\<^sub>P\n                               \\<F> \\<psi> w \\<G> j \\<and>\n                               \\<G> \\<subseteq> S) =\n                              (\\<forall>q.\n                                  q \\<in> mojmir_def.\\<S> \\<Sigma>\n     \\<up>af\\<^sub>G (Abs \\<psi>) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n     j \\<longrightarrow>\n                                  S \\<Turnstile>\\<^sub>P\n                                  Rep q)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding MOST_nat_le"], ["proof (prove)\nusing this:\n  \\<exists>m.\n     \\<forall>n\\<ge>m.\n        \\<forall>\\<psi>.\n           G \\<psi> \\<in> \\<G> \\<longrightarrow>\n           (\\<forall>S.\n               (S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> n \\<and>\n                \\<G> \\<subseteq> S) =\n               (\\<forall>q.\n                   q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                            (Abs \\<psi>) w\n                            {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                            n \\<longrightarrow>\n                   S \\<Turnstile>\\<^sub>P Rep q))\n\ngoal (1 subgoal):\n 1. (\\<And>i'.\n        (\\<And>j \\<psi> S.\n            \\<lbrakk>i' \\<le> j; G \\<psi> \\<in> \\<G>\\<rbrakk>\n            \\<Longrightarrow> (S \\<Turnstile>\\<^sub>P\n                               \\<F> \\<psi> w \\<G> j \\<and>\n                               \\<G> \\<subseteq> S) =\n                              (\\<forall>q.\n                                  q \\<in> mojmir_def.\\<S> \\<Sigma>\n     \\<up>af\\<^sub>G (Abs \\<psi>) w {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n     j \\<longrightarrow>\n                                  S \\<Turnstile>\\<^sub>P\n                                  Rep q)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by presburger"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> ?j8; G ?\\<psi>8 \\<in> \\<G>\\<rbrakk>\n  \\<Longrightarrow> (?S8 \\<Turnstile>\\<^sub>P\n                     \\<F> ?\\<psi>8 w \\<G> ?j8 \\<and>\n                     \\<G> \\<subseteq> ?S8) =\n                    (\\<forall>q.\n                        q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                                 (Abs ?\\<psi>8) w\n                                 {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                                 ?j8 \\<longrightarrow>\n                        ?S8 \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "{"], ["proof (state)\nthis:\n  \\<lbrakk>i' \\<le> ?j8; G ?\\<psi>8 \\<in> \\<G>\\<rbrakk>\n  \\<Longrightarrow> (?S8 \\<Turnstile>\\<^sub>P\n                     \\<F> ?\\<psi>8 w \\<G> ?j8 \\<and>\n                     \\<G> \\<subseteq> ?S8) =\n                    (\\<forall>q.\n                        q \\<in> mojmir_def.\\<S> \\<Sigma> \\<up>af\\<^sub>G\n                                 (Abs ?\\<psi>8) w\n                                 {q. \\<G> \\<Turnstile>\\<^sub>P Rep q}\n                                 ?j8 \\<longrightarrow>\n                        ?S8 \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "fix j S"], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "assume \"j \\<ge> max i i'\""], ["proof (state)\nthis:\n  max i i' \\<le> j\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "hence \"j \\<ge> i\" and \"j \\<ge> i'\""], ["proof (prove)\nusing this:\n  max i i' \\<le> j\n\ngoal (1 subgoal):\n 1. i \\<le> j &&& i' \\<le> j", "by simp+"], ["proof (state)\nthis:\n  i \\<le> j\n  i' \\<le> j\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "assume \\<G>_def': \"\\<forall>\\<psi>. G \\<psi> \\<in> \\<G> \\<longrightarrow> S \\<Turnstile>\\<^sub>P G \\<psi> \\<and> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\""], ["proof (state)\nthis:\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n     S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "let ?\\<phi>' = \"fst (fst (r j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "let ?m = \"snd (fst (r j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "have \"\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<chi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<chi>", "using \\<G>_def' \\<open>\\<G> \\<subseteq> \\<^bold>G \\<phi>\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n     S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<chi>", "unfolding G_nested_propos_alt_def"], ["proof (prove)\nusing this:\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n     S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n  \\<G>\n  \\<subseteq> nested_propos \\<phi> \\<inter>\n              {\\<psi>. \\<exists>x. \\<psi> = G x}\n\ngoal (1 subgoal):\n 1. \\<And>\\<chi>.\n       \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<chi>", "by auto"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P ?\\<chi>8\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "moreover"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P ?\\<chi>8\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "(* Proof that the chosen S propositionally implies all succeeding states of the projected Mojmir automaton *)"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P ?\\<chi>8\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "{"], ["proof (state)\nthis:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P ?\\<chi>8\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "fix \\<chi>"], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "assume \"\\<chi> \\<in> \\<G>\""], ["proof (state)\nthis:\n  \\<chi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "then"], ["proof (chain)\npicking this:\n  \\<chi> \\<in> \\<G>", "obtain \\<psi> where \"\\<chi> = G \\<psi>\" and \"G \\<psi> \\<in> \\<G>\""], ["proof (prove)\nusing this:\n  \\<chi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>\\<chi> = G \\<psi>; G \\<psi> \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>Only_G \\<G>\\<close>"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> \\<G>\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>\\<chi> = G \\<psi>; G \\<psi> \\<in> \\<G>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<chi> = G \\<psi>\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "hence \"G \\<psi> \\<in> \\<^bold>G \\<phi>\""], ["proof (prove)\nusing this:\n  \\<chi> = G \\<psi>\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. G \\<psi> \\<in> \\<^bold>G \\<phi>", "using \\<open>\\<G> \\<subseteq> \\<^bold>G \\<phi>\\<close>"], ["proof (prove)\nusing this:\n  \\<chi> = G \\<psi>\n  G \\<psi> \\<in> \\<G>\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n\ngoal (1 subgoal):\n 1. G \\<psi> \\<in> \\<^bold>G \\<phi>", "by blast"], ["proof (state)\nthis:\n  G \\<psi> \\<in> \\<^bold>G \\<phi>\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "interpret \\<MM>: ltl_FG_to_rabin \\<Sigma> \\<psi> \\<G> w"], ["proof (prove)\ngoal (1 subgoal):\n 1. ltl_FG_to_rabin \\<Sigma> \\<G> w", "by (insert \\<open>ltl_FG_to_rabin \\<Sigma> \\<G> w\\<close>)"], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "assume \"q \\<in> \\<MM>.\\<S> j\""], ["proof (state)\nthis:\n  q \\<in> \\<MM>.\\<S>\\<^sub>R j\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "hence \"S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\""], ["proof (prove)\nusing this:\n  q \\<in> \\<MM>.\\<S>\\<^sub>R j\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)", "using \\<G>_def' \\<open>G \\<psi> \\<in> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  q \\<in> \\<MM>.\\<S>\\<^sub>R j\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n     S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)", "by simp"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "moreover"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "have \"S \\<supseteq> \\<G>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<G> \\<subseteq> S", "using \\<G>_def' \\<open>Only_G \\<G>\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>\\<psi>.\n     G \\<psi> \\<in> \\<G> \\<longrightarrow>\n     S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n     S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. \\<G> \\<subseteq> S", "by auto"], ["proof (state)\nthis:\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "hence \"\\<And>x. x \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> x\""], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> x", "using \\<open>Only_G \\<G>\\<close> \\<open>S \\<supseteq> \\<G>\\<close>"], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> S\n  Only_G \\<G>\n  \\<G> \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<G> \\<Longrightarrow>\n       S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> x", "by fastforce"], ["proof (state)\nthis:\n  ?x8 \\<in> \\<G> \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> ?x8\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "moreover"], ["proof (state)\nthis:\n  ?x8 \\<in> \\<G> \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> ?x8\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "{"], ["proof (state)\nthis:\n  ?x8 \\<in> \\<G> \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> ?x8\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "fix S"], ["proof (state)\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "assume \"\\<And>x. x \\<in> \\<G> \\<union> {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow> S \\<Turnstile>\\<^sub>P x\""], ["proof (state)\nthis:\n  ?x8 \\<in> \\<G> \\<union> {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P ?x8\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "hence \"\\<G> \\<subseteq> S\" and \"S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\""], ["proof (prove)\nusing this:\n  ?x8 \\<in> \\<G> \\<union> {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P ?x8\n\ngoal (1 subgoal):\n 1. \\<G> \\<subseteq> S &&& S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j", "using \\<open>Only_G \\<G>\\<close>"], ["proof (prove)\nusing this:\n  ?x8 \\<in> \\<G> \\<union> {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P ?x8\n  Only_G \\<G>\n\ngoal (1 subgoal):\n 1. \\<G> \\<subseteq> S &&& S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j", "by fastforce+"], ["proof (state)\nthis:\n  \\<G> \\<subseteq> S\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "hence \"S \\<Turnstile>\\<^sub>P Rep q\""], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> S\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep q", "using \\<open>q \\<in> ltl_FG_to_rabin_def.\\<S>\\<^sub>R \\<Sigma> \\<psi> \\<G> w j\\<close>"], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> S\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n  q \\<in> \\<MM>.\\<S>\\<^sub>R j\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep q", "using i'_def[OF \\<open>j \\<ge> i'\\<close> \\<open>G \\<psi> \\<in> \\<G>\\<close>]"], ["proof (prove)\nusing this:\n  \\<G> \\<subseteq> S\n  S \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j\n  q \\<in> \\<MM>.\\<S>\\<^sub>R j\n  (?S8 \\<Turnstile>\\<^sub>P \\<F> \\<psi> w \\<G> j \\<and>\n   \\<G> \\<subseteq> ?S8) =\n  (\\<forall>q.\n      q \\<in> \\<MM>.\\<S>\\<^sub>R j \\<longrightarrow>\n      ?S8 \\<Turnstile>\\<^sub>P Rep q)\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep q", "by blast"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Rep q\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "}"], ["proof (state)\nthis:\n  (\\<And>x.\n      x \\<in> \\<G> \\<union> {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow>\n      ?Sa10 \\<Turnstile>\\<^sub>P x) \\<Longrightarrow>\n  ?Sa10 \\<Turnstile>\\<^sub>P Rep q\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "ultimately"], ["proof (chain)\npicking this:\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n  ?x8 \\<in> \\<G> \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> ?x8\n  (\\<And>x.\n      x \\<in> \\<G> \\<union> {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow>\n      ?Sa10 \\<Turnstile>\\<^sub>P x) \\<Longrightarrow>\n  ?Sa10 \\<Turnstile>\\<^sub>P Rep q", "have \"S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\""], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n  ?x8 \\<in> \\<G> \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> ?x8\n  (\\<And>x.\n      x \\<in> \\<G> \\<union> {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow>\n      ?Sa10 \\<Turnstile>\\<^sub>P x) \\<Longrightarrow>\n  ?Sa10 \\<Turnstile>\\<^sub>P Rep q\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "using eval\\<^sub>G_respectfulness_generalized[of \"\\<G> \\<union> {\\<F> \\<psi> w \\<G> j}\" \"Rep q\" S \\<G>]"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> j)\n  ?x8 \\<in> \\<G> \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> ?x8\n  (\\<And>x.\n      x \\<in> \\<G> \\<union> {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow>\n      ?Sa10 \\<Turnstile>\\<^sub>P x) \\<Longrightarrow>\n  ?Sa10 \\<Turnstile>\\<^sub>P Rep q\n  \\<lbrakk>\\<And>\\<A>.\n              (\\<And>x.\n                  x \\<in> \\<G> \\<union>\n                          {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow>\n                  \\<A> \\<Turnstile>\\<^sub>P x) \\<Longrightarrow>\n              \\<A> \\<Turnstile>\\<^sub>P Rep q;\n   \\<And>x.\n      x \\<in> \\<G> \\<union> {\\<F> \\<psi> w \\<G> j} \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> x\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "by blast"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "}"], ["proof (state)\nthis:\n  ?q10 \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q10)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "moreover"], ["proof (state)\nthis:\n  ?q10 \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q10)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "have \"\\<MM>.\\<S> j = {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union> {q . \\<exists>j'. the \\<MM>.smallest_accepting_rank \\<le> j' \\<and> the (?m (G \\<psi>)) q = Some j'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<MM>.\\<S>\\<^sub>R j =\n    {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    {q. \\<exists>j'\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n           the (snd (fst (r j)) (G \\<psi>)) q = Some j'}", "unfolding \\<MM>.\\<S>.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    {q. \\<exists>ja\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n           \\<MM>.state_rank q j = Some ja} =\n    {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    {q. \\<exists>j'\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n           the (snd (fst (r j)) (G \\<psi>)) q = Some j'}", "using run_properties(2)[OF \\<open>G \\<psi> \\<in> \\<^bold>G \\<phi>\\<close>] r_def"], ["proof (prove)\nusing this:\n  the (snd (run (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>) w\n             ?i)\n        (G \\<psi>))\n   ?q =\n  semi_mojmir_def.state_rank \\<Sigma> \\<up>af\\<^sub>G\n   (Abs (theG (G \\<psi>))) w ?q ?i\n  r =\n  run\\<^sub>t (\\<delta>\\<^sub>\\<A> \\<Sigma>) (\\<iota>\\<^sub>\\<A> \\<phi>) w\n\ngoal (1 subgoal):\n 1. {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    {q. \\<exists>ja\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n           \\<MM>.state_rank q j = Some ja} =\n    {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n    {q. \\<exists>j'\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n           the (snd (fst (r j)) (G \\<psi>)) q = Some j'}", "by simp"], ["proof (state)\nthis:\n  \\<MM>.\\<S>\\<^sub>R j =\n  {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n  {q. \\<exists>j'\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n         the (snd (fst (r j)) (G \\<psi>)) q = Some j'}\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "ultimately"], ["proof (chain)\npicking this:\n  ?q10 \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q10)\n  \\<MM>.\\<S>\\<^sub>R j =\n  {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n  {q. \\<exists>j'\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n         the (snd (fst (r j)) (G \\<psi>)) q = Some j'}", "have \"\\<And>q j. j \\<ge> the (\\<pi> \\<chi>) \\<Longrightarrow> the (?m \\<chi>) q = Some j \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)\""], ["proof (prove)\nusing this:\n  ?q10 \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q10)\n  \\<MM>.\\<S>\\<^sub>R j =\n  {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n  {q. \\<exists>j'\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n         the (snd (fst (r j)) (G \\<psi>)) q = Some j'}\n\ngoal (1 subgoal):\n 1. \\<And>q ja.\n       \\<lbrakk>the (\\<pi> \\<chi>) \\<le> ja;\n        the (snd (fst (r j)) \\<chi>) q = Some ja\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "using  \\<open>\\<chi> \\<in> \\<G>\\<close>[unfolded \\<G>_def \\<open>dom \\<pi>' = dom \\<pi>\\<close>]"], ["proof (prove)\nusing this:\n  ?q10 \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q10)\n  \\<MM>.\\<S>\\<^sub>R j =\n  {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n  {q. \\<exists>j'\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n         the (snd (fst (r j)) (G \\<psi>)) q = Some j'}\n  \\<chi> \\<in> dom \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>q ja.\n       \\<lbrakk>the (\\<pi> \\<chi>) \\<le> ja;\n        the (snd (fst (r j)) \\<chi>) q = Some ja\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "unfolding \\<open>\\<chi> = G \\<psi>\\<close> \\<open>\\<And>\\<chi>. \\<chi> \\<in> dom \\<pi> \\<Longrightarrow> \\<pi> \\<chi> = ltl_FG_to_rabin_def.smallest_accepting_rank\\<^sub>R \\<Sigma> (theG \\<chi>) (dom \\<pi>) w\\<close>[OF \\<open>\\<chi> \\<in> \\<G>\\<close>[unfolded \\<G>_def \\<open>dom \\<pi>' = dom \\<pi>\\<close>], unfolded \\<open>\\<chi> = G \\<psi>\\<close>] ltl.sel(8)"], ["proof (prove)\nusing this:\n  ?q10 \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q10)\n  \\<MM>.\\<S>\\<^sub>R j =\n  {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n  {q. \\<exists>j'\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n         the (snd (fst (r j)) (G \\<psi>)) q = Some j'}\n  G \\<psi> \\<in> dom \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>q ja.\n       \\<lbrakk>the (mojmir_def.smallest_accepting_rank \\<Sigma>\n                      \\<up>af\\<^sub>G (Abs \\<psi>) w\n                      {q. dom \\<pi> \\<Turnstile>\\<^sub>P Rep q})\n                \\<le> ja;\n        the (snd (fst (r j)) (G \\<psi>)) q = Some ja\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "unfolding  \\<open>\\<G> \\<equiv> dom \\<pi>'\\<close>[symmetric] \\<open>dom \\<pi>' = dom \\<pi>\\<close>[symmetric]"], ["proof (prove)\nusing this:\n  ?q10 \\<in> \\<MM>.\\<S>\\<^sub>R j \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q10)\n  \\<MM>.\\<S>\\<^sub>R j =\n  {q. \\<G> \\<Turnstile>\\<^sub>P Rep q} \\<union>\n  {q. \\<exists>j'\\<ge>the \\<MM>.smallest_accepting_rank\\<^sub>R.\n         the (snd (fst (r j)) (G \\<psi>)) q = Some j'}\n  G \\<psi> \\<in> \\<G>\n\ngoal (1 subgoal):\n 1. \\<And>q ja.\n       \\<lbrakk>the \\<MM>.smallest_accepting_rank\\<^sub>R \\<le> ja;\n        the (snd (fst (r j)) (G \\<psi>)) q = Some ja\\<rbrakk>\n       \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q)", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>the (\\<pi> \\<chi>) \\<le> ?j8;\n   the (snd (fst (r j)) \\<chi>) ?q8 = Some ?j8\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q8)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<chi>16 \\<in> \\<G>; the (\\<pi> ?\\<chi>16) \\<le> ?ja13;\n   the (snd (fst (r j)) ?\\<chi>16) ?q13 = Some ?ja13\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q13)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<chi>16 \\<in> \\<G>; the (\\<pi> ?\\<chi>16) \\<le> ?ja13;\n   the (snd (fst (r j)) ?\\<chi>16) ?q13 = Some ?ja13\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q13)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "have \"(\\<And>\\<chi>. \\<chi> \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P \\<chi> \\<and> (\\<forall>q. \\<forall>j' \\<ge> the (\\<pi> \\<chi>). the (?m \\<chi>) q = Some j' \\<longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q))) \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep ?\\<phi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<chi>.\n        \\<chi> \\<in> \\<G> \\<Longrightarrow>\n        S \\<Turnstile>\\<^sub>P \\<chi> \\<and>\n        (\\<forall>q j'.\n            the (\\<pi> \\<chi>) \\<le> j' \\<longrightarrow>\n            the (snd (fst (r j)) \\<chi>) q = Some j' \\<longrightarrow>\n            S \\<Turnstile>\\<^sub>P\n            eval\\<^sub>G \\<G> (Rep q))) \\<Longrightarrow>\n    S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))", "apply (insert i_def[OF \\<open>j \\<ge> i\\<close>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<chi>.\n                \\<chi> \\<in> \\<G> \\<Longrightarrow>\n                S \\<Turnstile>\\<^sub>P \\<chi> \\<and>\n                (\\<forall>q j'.\n                    the (\\<pi> \\<chi>) \\<le> j' \\<longrightarrow>\n                    the (snd (fst (r j)) \\<chi>) q =\n                    Some j' \\<longrightarrow>\n                    S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q));\n     r j \\<notin> M_fin \\<pi>\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))", "apply (simp add: eval\\<^sub>G_abs_def ltl_prop_entails_abs.rep_eq case_prod_beta option.case_eq_if)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<chi>.\n                \\<chi> \\<in> \\<G> \\<Longrightarrow>\n                S \\<Turnstile>\\<^sub>P \\<chi> \\<and>\n                (\\<forall>q j'.\n                    the (\\<pi> \\<chi>) \\<le> j' \\<longrightarrow>\n                    the (snd (fst (r j)) \\<chi>) q =\n                    Some j' \\<longrightarrow>\n                    S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q));\n     \\<forall>S.\n        (\\<exists>\\<chi>\\<in>dom \\<pi>.\n            S \\<Turnstile>\\<^sub>P \\<chi> \\<longrightarrow>\n            (\\<exists>q.\n                (\\<exists>ja\\<ge>the (\\<pi> \\<chi>).\n                    the (snd (fst (r j)) \\<chi>) q = Some ja) \\<and>\n                \\<not> S \\<Turnstile>\\<^sub>P\n                       eval\\<^sub>G (dom \\<pi>) (Rep q))) \\<or>\n        S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))", "apply (unfold \\<open>\\<G> \\<equiv> dom \\<pi>'\\<close>[symmetric] \\<open>dom \\<pi>' = dom \\<pi>\\<close>[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>\\<chi>.\n                \\<chi> \\<in> \\<G> \\<Longrightarrow>\n                S \\<Turnstile>\\<^sub>P \\<chi> \\<and>\n                (\\<forall>q j'.\n                    the (\\<pi> \\<chi>) \\<le> j' \\<longrightarrow>\n                    the (snd (fst (r j)) \\<chi>) q =\n                    Some j' \\<longrightarrow>\n                    S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep q));\n     \\<forall>S.\n        (\\<exists>\\<chi>\\<in>\\<G>.\n            S \\<Turnstile>\\<^sub>P \\<chi> \\<longrightarrow>\n            (\\<exists>q.\n                (\\<exists>ja\\<ge>the (\\<pi> \\<chi>).\n                    the (snd (fst (r j)) \\<chi>) q = Some ja) \\<and>\n                \\<not> S \\<Turnstile>\\<^sub>P\n                       eval\\<^sub>G \\<G> (Rep q))) \\<or>\n        S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\\<rbrakk>\n    \\<Longrightarrow> S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))", "apply meson"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<And>\\<chi>.\n      \\<chi> \\<in> \\<G> \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P \\<chi> \\<and>\n      (\\<forall>q j'.\n          the (\\<pi> \\<chi>) \\<le> j' \\<longrightarrow>\n          the (snd (fst (r j)) \\<chi>) q = Some j' \\<longrightarrow>\n          S \\<Turnstile>\\<^sub>P\n          eval\\<^sub>G \\<G> (Rep q))) \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "ultimately"], ["proof (chain)\npicking this:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P ?\\<chi>8\n  \\<lbrakk>?\\<chi>16 \\<in> \\<G>; the (\\<pi> ?\\<chi>16) \\<le> ?ja13;\n   the (snd (fst (r j)) ?\\<chi>16) ?q13 = Some ?ja13\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q13)\n  (\\<And>\\<chi>.\n      \\<chi> \\<in> \\<G> \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P \\<chi> \\<and>\n      (\\<forall>q j'.\n          the (\\<pi> \\<chi>) \\<le> j' \\<longrightarrow>\n          the (snd (fst (r j)) \\<chi>) q = Some j' \\<longrightarrow>\n          S \\<Turnstile>\\<^sub>P\n          eval\\<^sub>G \\<G> (Rep q))) \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))", "have \"S \\<Turnstile>\\<^sub>P Rep ?\\<phi>'\""], ["proof (prove)\nusing this:\n  ?\\<chi>8 \\<in> \\<G> \\<Longrightarrow> S \\<Turnstile>\\<^sub>P ?\\<chi>8\n  \\<lbrakk>?\\<chi>16 \\<in> \\<G>; the (\\<pi> ?\\<chi>16) \\<le> ?ja13;\n   the (snd (fst (r j)) ?\\<chi>16) ?q13 = Some ?ja13\\<rbrakk>\n  \\<Longrightarrow> S \\<Turnstile>\\<^sub>P eval\\<^sub>G \\<G> (Rep ?q13)\n  (\\<And>\\<chi>.\n      \\<chi> \\<in> \\<G> \\<Longrightarrow>\n      S \\<Turnstile>\\<^sub>P \\<chi> \\<and>\n      (\\<forall>q j'.\n          the (\\<pi> \\<chi>) \\<le> j' \\<longrightarrow>\n          the (snd (fst (r j)) \\<chi>) q = Some j' \\<longrightarrow>\n          S \\<Turnstile>\\<^sub>P\n          eval\\<^sub>G \\<G> (Rep q))) \\<Longrightarrow>\n  S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))", "by fast"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "hence \"S \\<Turnstile>\\<^sub>P af \\<phi> (w [0 \\<rightarrow> j])\""], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af \\<phi> (prefix j w)", "using \\<phi>'_def ltl_prop_equiv_def"], ["proof (prove)\nusing this:\n  S \\<Turnstile>\\<^sub>P Rep (fst (fst (r j)))\n  af \\<phi> (prefix ?i8 w) \\<equiv>\\<^sub>P Rep (fst (fst (r ?i8)))\n  ?\\<phi> \\<equiv>\\<^sub>P ?\\<psi> \\<equiv>\n  \\<forall>\\<A>.\n     \\<A> \\<Turnstile>\\<^sub>P ?\\<phi> = \\<A> \\<Turnstile>\\<^sub>P ?\\<psi>\n\ngoal (1 subgoal):\n 1. S \\<Turnstile>\\<^sub>P af \\<phi> (prefix j w)", "by blast"], ["proof (state)\nthis:\n  S \\<Turnstile>\\<^sub>P af \\<phi> (prefix j w)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "}"], ["proof (state)\nthis:\n  \\<lbrakk>max i i' \\<le> ?j10;\n   \\<forall>\\<psi>.\n      G \\<psi> \\<in> \\<G> \\<longrightarrow>\n      ?S10 \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n      ?S10 \\<Turnstile>\\<^sub>P\n      eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> ?j10)\\<rbrakk>\n  \\<Longrightarrow> ?S10 \\<Turnstile>\\<^sub>P af \\<phi> (prefix ?j10 w)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "thus \"accept\\<^sub>M \\<phi> \\<G> w\""], ["proof (prove)\nusing this:\n  \\<lbrakk>max i i' \\<le> ?j10;\n   \\<forall>\\<psi>.\n      G \\<psi> \\<in> \\<G> \\<longrightarrow>\n      ?S10 \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n      ?S10 \\<Turnstile>\\<^sub>P\n      eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> ?j10)\\<rbrakk>\n  \\<Longrightarrow> ?S10 \\<Turnstile>\\<^sub>P af \\<phi> (prefix ?j10 w)\n\ngoal (1 subgoal):\n 1. accept\\<^sub>M \\<phi> \\<G> w", "unfolding accept\\<^sub>M_def MOST_nat_le"], ["proof (prove)\nusing this:\n  \\<lbrakk>max i i' \\<le> ?j10;\n   \\<forall>\\<psi>.\n      G \\<psi> \\<in> \\<G> \\<longrightarrow>\n      ?S10 \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n      ?S10 \\<Turnstile>\\<^sub>P\n      eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> ?j10)\\<rbrakk>\n  \\<Longrightarrow> ?S10 \\<Turnstile>\\<^sub>P af \\<phi> (prefix ?j10 w)\n\ngoal (1 subgoal):\n 1. \\<exists>m.\n       \\<forall>n\\<ge>m.\n          \\<forall>S.\n             (\\<forall>\\<psi>.\n                 G \\<psi> \\<in> \\<G> \\<longrightarrow>\n                 S \\<Turnstile>\\<^sub>P G \\<psi> \\<and>\n                 S \\<Turnstile>\\<^sub>P\n                 eval\\<^sub>G \\<G> (\\<F> \\<psi> w \\<G> n)) \\<longrightarrow>\n             S \\<Turnstile>\\<^sub>P af \\<phi> (prefix n w)", "by blast"], ["proof (state)\nthis:\n  accept\\<^sub>M \\<phi> \\<G> w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  accept\\<^sub>M \\<phi> \\<G> w\n\ngoal (1 subgoal):\n 1. accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n    w \\<Turnstile> \\<phi>", "ultimately"], ["proof (chain)\npicking this:\n  closed \\<G> w\n  accept\\<^sub>M \\<phi> \\<G> w", "show ?lhs"], ["proof (prove)\nusing this:\n  closed \\<G> w\n  accept\\<^sub>M \\<phi> \\<G> w\n\ngoal (1 subgoal):\n 1. w \\<Turnstile> \\<phi>", "using \\<open>\\<G> \\<subseteq> \\<^bold>G \\<phi>\\<close> ltl_logical_characterization"], ["proof (prove)\nusing this:\n  closed \\<G> w\n  accept\\<^sub>M \\<phi> \\<G> w\n  \\<G> \\<subseteq> \\<^bold>G \\<phi>\n  ?w \\<Turnstile> ?\\<phi> =\n  (\\<exists>\\<G>\\<subseteq>\\<^bold>G ?\\<phi>.\n      accept\\<^sub>M ?\\<phi> \\<G> ?w \\<and> closed \\<G> ?w)\n\ngoal (1 subgoal):\n 1. w \\<Turnstile> \\<phi>", "by blast"], ["proof (state)\nthis:\n  w \\<Turnstile> \\<phi>\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  accept\\<^sub>G\\<^sub>R (\\<A> \\<Sigma> \\<phi>) w \\<Longrightarrow>\n  w \\<Turnstile> \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "fun ltl_to_generalized_rabin_af\nwhere\n  \"ltl_to_generalized_rabin_af \\<Sigma> \\<phi> = ltl_to_rabin_base_def.ltl_to_generalized_rabin \\<up>af \\<up>af\\<^sub>G Abs Abs M_fin \\<Sigma> \\<phi>\""], ["", "lemma ltl_to_generalized_rabin_af_wellformed:\n  \"finite \\<Sigma> \\<Longrightarrow> range w \\<subseteq> \\<Sigma> \\<Longrightarrow> ltl_to_rabin_af \\<Sigma> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>\\<rbrakk>\n    \\<Longrightarrow> ltl_to_rabin_af \\<Sigma> w", "apply (unfold_locales)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>\\<rbrakk>\n    \\<Longrightarrow> finite \\<Sigma>\n 2. \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>\\<rbrakk>\n    \\<Longrightarrow> range w \\<subseteq> \\<Sigma>\n 3. \\<And>\\<pi> \\<pi>'.\n       \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>;\n        dom \\<pi> = dom \\<pi>';\n        \\<And>\\<chi>.\n           \\<chi> \\<in> dom \\<pi> \\<Longrightarrow>\n           the (\\<pi> \\<chi>) \\<le> the (\\<pi>' \\<chi>)\\<rbrakk>\n       \\<Longrightarrow> M_fin \\<pi> \\<subseteq> M_fin \\<pi>'\n 4. \\<And>\\<phi>.\n       \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>\\<rbrakk>\n       \\<Longrightarrow> finite (reach \\<Sigma> \\<up>af (Abs \\<phi>))\n 5. \\<And>\\<G> \\<psi>.\n       \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>;\n        Only_G \\<G>\\<rbrakk>\n       \\<Longrightarrow> finite \\<Sigma>\n 6. \\<And>\\<G> \\<psi>.\n       \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>;\n        Only_G \\<G>\\<rbrakk>\n       \\<Longrightarrow> finite\n                          (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))\n 7. \\<And>\\<G> \\<psi>.\n       \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>;\n        Only_G \\<G>\\<rbrakk>\n       \\<Longrightarrow> range w \\<subseteq> \\<Sigma>\n 8. \\<And>\\<G> \\<psi> q \\<nu>.\n       \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>; Only_G \\<G>;\n        q \\<in> {q. \\<G> \\<up>\\<Turnstile>\\<^sub>P q}\\<rbrakk>\n       \\<Longrightarrow> \\<up>af\\<^sub>G q \\<nu>\n                         \\<in> {q. \\<G> \\<up>\\<Turnstile>\\<^sub>P q}", "apply (auto simp add: af_G_letter_sat_core_lifted ltl_prop_entails_abs.rep_eq intro: finite_reach_af)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<pi> \\<pi>' a b S.\n       \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>;\n        dom \\<pi> = dom \\<pi>';\n        \\<And>\\<chi>.\n           \\<chi> \\<in> dom \\<pi>' \\<Longrightarrow>\n           the (\\<pi> \\<chi>) \\<le> the (\\<pi>' \\<chi>);\n        \\<forall>\\<chi>\\<in>dom \\<pi>'.\n           S \\<Turnstile>\\<^sub>P \\<chi> \\<and>\n           (\\<forall>q.\n               (\\<exists>j\\<ge>the (\\<pi> \\<chi>).\n                   the (b \\<chi>) q = Some j) \\<longrightarrow>\n               S \\<Turnstile>\\<^sub>P\n               Rep (\\<up>eval\\<^sub>G (dom \\<pi>') q));\n        \\<not> S \\<Turnstile>\\<^sub>P Rep a\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S.\n                            (\\<forall>\\<chi>\\<in>dom \\<pi>'.\n                                S \\<Turnstile>\\<^sub>P \\<chi> \\<and>\n                                (\\<forall>q.\n                                    (\\<exists>j\\<ge>the (\\<pi>' \\<chi>).\n  the (b \\<chi>) q = Some j) \\<longrightarrow>\n                                    S \\<Turnstile>\\<^sub>P\n                                    Rep (\\<up>eval\\<^sub>G (dom \\<pi>')\n    q))) \\<and>\n                            \\<not> S \\<Turnstile>\\<^sub>P Rep a\n 2. \\<And>\\<G> \\<psi>.\n       \\<lbrakk>finite \\<Sigma>; range w \\<subseteq> \\<Sigma>;\n        Only_G \\<G>\\<rbrakk>\n       \\<Longrightarrow> finite\n                          (reach \\<Sigma> \\<up>af\\<^sub>G (Abs \\<psi>))", "apply (meson le_trans ltl_semi_mojmir[unfolded semi_mojmir_def])+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem ltl_to_generalized_rabin_af_correct:\n  assumes \"finite \\<Sigma>\"\n  assumes \"range w \\<subseteq> \\<Sigma>\"\n  shows \"w \\<Turnstile> \\<phi> = accept\\<^sub>G\\<^sub>R (ltl_to_generalized_rabin_af \\<Sigma> \\<phi>) w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<Turnstile> \\<phi> =\n    accept\\<^sub>G\\<^sub>R (ltl_to_generalized_rabin_af \\<Sigma> \\<phi>) w", "using ltl_to_generalized_rabin_af_wellformed[OF assms, THEN ltl_to_rabin_af.ltl_to_generalized_rabin_correct]"], ["proof (prove)\nusing this:\n  w \\<Turnstile> ?\\<phi> =\n  accept\\<^sub>G\\<^sub>R\n   (ltl_to_rabin_base_def.ltl_to_generalized_rabin \\<up>af \\<up>af\\<^sub>G\n     Abs Abs M_fin \\<Sigma> ?\\<phi>)\n   w\n\ngoal (1 subgoal):\n 1. w \\<Turnstile> \\<phi> =\n    accept\\<^sub>G\\<^sub>R (ltl_to_generalized_rabin_af \\<Sigma> \\<phi>) w", "by simp"], ["", "thm ltl_to_generalized_rabin_af_correct ltl_FG_to_generalized_rabin_correct"], ["", "end"]]}