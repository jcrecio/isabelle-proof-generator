{"file_name": "/home/qj213/afp-2021-10-22/thys/Abs_Int_ITP2012/ACom.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Abs_Int_ITP2012", "problem_names": ["lemma post_map_acom[simp]: \"post(map_acom f c) = f(post c)\"", "lemma strip_acom[simp]: \"strip (map_acom f c) = strip c\"", "lemma map_acom_SKIP:\n \"map_acom f c = SKIP {S'} \\<longleftrightarrow> (\\<exists>S. c = SKIP {S} \\<and> S' = f S)\"", "lemma map_acom_Assign:\n \"map_acom f c = x ::= e {S'} \\<longleftrightarrow> (\\<exists>S. c = x::=e {S} \\<and> S' = f S)\"", "lemma map_acom_Seq:\n \"map_acom f c = c1';;c2' \\<longleftrightarrow>\n (\\<exists>c1 c2. c = c1;;c2 \\<and> map_acom f c1 = c1' \\<and> map_acom f c2 = c2')\"", "lemma map_acom_If:\n \"map_acom f c = IF b THEN c1' ELSE c2' {S'} \\<longleftrightarrow>\n (\\<exists>S c1 c2. c = IF b THEN c1 ELSE c2 {S} \\<and> map_acom f c1 = c1' \\<and> map_acom f c2 = c2' \\<and> S' = f S)\"", "lemma map_acom_While:\n \"map_acom f w = {I'} WHILE b DO c' {P'} \\<longleftrightarrow>\n (\\<exists>I P c. w = {I} WHILE b DO c {P} \\<and> map_acom f c = c' \\<and> I' = f I \\<and> P' = f P)\"", "lemma strip_anno[simp]: \"strip (anno a c) = c\"", "lemma strip_eq_SKIP:\n  \"strip c = com.SKIP \\<longleftrightarrow> (\\<exists>P. c = SKIP {P})\"", "lemma strip_eq_Assign:\n  \"strip c = x::=e \\<longleftrightarrow> (\\<exists>P. c = x::=e {P})\"", "lemma strip_eq_Seq:\n  \"strip c = c1;;c2 \\<longleftrightarrow> (\\<exists>d1 d2. c = d1;;d2 & strip d1 = c1 & strip d2 = c2)\"", "lemma strip_eq_If:\n  \"strip c = IF b THEN c1 ELSE c2 \\<longleftrightarrow>\n  (\\<exists>d1 d2 P. c = IF b THEN d1 ELSE d2 {P} & strip d1 = c1 & strip d2 = c2)\"", "lemma strip_eq_While:\n  \"strip c = WHILE b DO c1 \\<longleftrightarrow>\n  (\\<exists>I d1 P. c = {I} WHILE b DO d1 {P} & strip d1 = c1)\"", "lemma set_annos_anno[simp]: \"set (annos (anno a C)) = {a}\"", "lemma size_annos_same: \"strip C1 = strip C2 \\<Longrightarrow> size(annos C1) = size(annos C2)\"", "lemmas size_annos_same2 = eqTrueI[OF size_annos_same]"], "translations": [["", "lemma post_map_acom[simp]: \"post(map_acom f c) = f(post c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post (ACom.map_acom f c) = f (post c)", "by (induction c) simp_all"], ["", "lemma strip_acom[simp]: \"strip (map_acom f c) = strip c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (ACom.map_acom f c) = strip c", "by (induction c) auto"], ["", "lemma map_acom_SKIP:\n \"map_acom f c = SKIP {S'} \\<longleftrightarrow> (\\<exists>S. c = SKIP {S} \\<and> S' = f S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ACom.map_acom f c = SKIP {S'}) =\n    (\\<exists>S. c = SKIP {S} \\<and> S' = f S)", "by (cases c) auto"], ["", "lemma map_acom_Assign:\n \"map_acom f c = x ::= e {S'} \\<longleftrightarrow> (\\<exists>S. c = x::=e {S} \\<and> S' = f S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ACom.map_acom f c = x ::= e {S'}) =\n    (\\<exists>S. c = x ::= e {S} \\<and> S' = f S)", "by (cases c) auto"], ["", "lemma map_acom_Seq:\n \"map_acom f c = c1';;c2' \\<longleftrightarrow>\n (\\<exists>c1 c2. c = c1;;c2 \\<and> map_acom f c1 = c1' \\<and> map_acom f c2 = c2')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ACom.map_acom f c = c1';;\n     c2') =\n    (\\<exists>c1 c2.\n        c = c1;;\n        c2 \\<and>\n        ACom.map_acom f c1 = c1' \\<and> ACom.map_acom f c2 = c2')", "by (cases c) auto"], ["", "lemma map_acom_If:\n \"map_acom f c = IF b THEN c1' ELSE c2' {S'} \\<longleftrightarrow>\n (\\<exists>S c1 c2. c = IF b THEN c1 ELSE c2 {S} \\<and> map_acom f c1 = c1' \\<and> map_acom f c2 = c2' \\<and> S' = f S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ACom.map_acom f c = IF b THEN c1' ELSE c2'\n                         {S'}) =\n    (\\<exists>S c1 c2.\n        c = IF b THEN c1 ELSE c2\n            {S} \\<and>\n        ACom.map_acom f c1 = c1' \\<and>\n        ACom.map_acom f c2 = c2' \\<and> S' = f S)", "by (cases c) auto"], ["", "lemma map_acom_While:\n \"map_acom f w = {I'} WHILE b DO c' {P'} \\<longleftrightarrow>\n (\\<exists>I P c. w = {I} WHILE b DO c {P} \\<and> map_acom f c = c' \\<and> I' = f I \\<and> P' = f P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ACom.map_acom f w = {I'}\n                         WHILE b DO c'\n                         {P'}) =\n    (\\<exists>I P c.\n        w = {I}\n            WHILE b DO c\n            {P} \\<and>\n        ACom.map_acom f c = c' \\<and> I' = f I \\<and> P' = f P)", "by (cases w) auto"], ["", "lemma strip_anno[simp]: \"strip (anno a c) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (anno a c) = c", "by(induct c) simp_all"], ["", "lemma strip_eq_SKIP:\n  \"strip c = com.SKIP \\<longleftrightarrow> (\\<exists>P. c = SKIP {P})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (strip c = com.SKIP) = (\\<exists>P. c = SKIP {P})", "by (cases c) simp_all"], ["", "lemma strip_eq_Assign:\n  \"strip c = x::=e \\<longleftrightarrow> (\\<exists>P. c = x::=e {P})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (strip c = x ::= e) = (\\<exists>P. c = x ::= e {P})", "by (cases c) simp_all"], ["", "lemma strip_eq_Seq:\n  \"strip c = c1;;c2 \\<longleftrightarrow> (\\<exists>d1 d2. c = d1;;d2 & strip d1 = c1 & strip d2 = c2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (strip c = c1;; c2) =\n    (\\<exists>d1 d2. c = d1;;\n                     d2 \\<and>\n                     strip d1 = c1 \\<and> strip d2 = c2)", "by (cases c) simp_all"], ["", "lemma strip_eq_If:\n  \"strip c = IF b THEN c1 ELSE c2 \\<longleftrightarrow>\n  (\\<exists>d1 d2 P. c = IF b THEN d1 ELSE d2 {P} & strip d1 = c1 & strip d2 = c2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (strip c = IF b THEN c1 ELSE c2) =\n    (\\<exists>d1 d2 P.\n        c = IF b THEN d1 ELSE d2\n            {P} \\<and>\n        strip d1 = c1 \\<and> strip d2 = c2)", "by (cases c) simp_all"], ["", "lemma strip_eq_While:\n  \"strip c = WHILE b DO c1 \\<longleftrightarrow>\n  (\\<exists>I d1 P. c = {I} WHILE b DO d1 {P} & strip d1 = c1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (strip c = WHILE b DO c1) =\n    (\\<exists>I d1 P. c = {I}\n                          WHILE b DO d1\n                          {P} \\<and>\n                      strip d1 = c1)", "by (cases c) simp_all"], ["", "lemma set_annos_anno[simp]: \"set (annos (anno a C)) = {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (annos (anno a C)) = {a}", "by(induction C)(auto)"], ["", "lemma size_annos_same: \"strip C1 = strip C2 \\<Longrightarrow> size(annos C1) = size(annos C2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip C1 = strip C2 \\<Longrightarrow>\n    length (annos C1) = length (annos C2)", "apply(induct C2 arbitrary: C1)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x C1.\n       strip C1 = strip (SKIP {x}) \\<Longrightarrow>\n       length (annos C1) = length (annos (SKIP {x}))\n 2. \\<And>x1a x2 x3 C1.\n       strip C1 = strip (x1a ::= x2 {x3}) \\<Longrightarrow>\n       length (annos C1) = length (annos (x1a ::= x2 {x3}))\n 3. \\<And>C21 C22 C1.\n       \\<lbrakk>\\<And>C1.\n                   strip C1 = strip C21 \\<Longrightarrow>\n                   length (annos C1) = length (annos C21);\n        \\<And>C1.\n           strip C1 = strip C22 \\<Longrightarrow>\n           length (annos C1) = length (annos C22);\n        strip C1 = strip (C21;;\n                          C22)\\<rbrakk>\n       \\<Longrightarrow> length (annos C1) = length (annos (C21;;\n                      C22))\n 4. \\<And>x1a C21 C22 x4 C1.\n       \\<lbrakk>\\<And>C1.\n                   strip C1 = strip C21 \\<Longrightarrow>\n                   length (annos C1) = length (annos C21);\n        \\<And>C1.\n           strip C1 = strip C22 \\<Longrightarrow>\n           length (annos C1) = length (annos C22);\n        strip C1 = strip (IF x1a THEN C21 ELSE C22\n                          {x4})\\<rbrakk>\n       \\<Longrightarrow> length (annos C1) =\n                         length (annos (IF x1a THEN C21 ELSE C22\n  {x4}))\n 5. \\<And>x1a x2 C2 x4 C1.\n       \\<lbrakk>\\<And>C1.\n                   strip C1 = strip C2 \\<Longrightarrow>\n                   length (annos C1) = length (annos C2);\n        strip C1 = strip ({x1a}\n                          WHILE x2 DO C2\n                          {x4})\\<rbrakk>\n       \\<Longrightarrow> length (annos C1) = length (annos ({x1a}\n                      WHILE x2 DO C2\n                      {x4}))", "apply (auto simp: strip_eq_SKIP strip_eq_Assign strip_eq_Seq strip_eq_If strip_eq_While)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas size_annos_same2 = eqTrueI[OF size_annos_same]"], ["", "end"]]}