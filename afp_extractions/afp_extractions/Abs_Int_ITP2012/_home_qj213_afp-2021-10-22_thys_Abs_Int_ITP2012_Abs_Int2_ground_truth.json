{"file_name": "/home/qj213/afp-2021-10-22/thys/Abs_Int_ITP2012/Abs_Int2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Abs_Int_ITP2012", "problem_names": ["lemma mono_meet: \"x \\<sqsubseteq> x' \\<Longrightarrow> y \\<sqsubseteq> y' \\<Longrightarrow> x \\<sqinter> y \\<sqsubseteq> x' \\<sqinter> y'\"", "lemma in_gamma_meet: \"x : \\<gamma> a1 \\<Longrightarrow> x : \\<gamma> a2 \\<Longrightarrow> x : \\<gamma>(a1 \\<sqinter> a2)\"", "lemma gamma_meet[simp]: \"\\<gamma>(a1 \\<sqinter> a2) = \\<gamma> a1 \\<inter> \\<gamma> a2\"", "lemma in_gamma_join_UpI: \"s : \\<gamma>\\<^sub>o S1 \\<or> s : \\<gamma>\\<^sub>o S2 \\<Longrightarrow> s : \\<gamma>\\<^sub>o(S1 \\<squnion> S2)\"", "lemma aval''_sound: \"s : \\<gamma>\\<^sub>o S \\<Longrightarrow> aval a s : \\<gamma>(aval'' a S)\"", "lemma afilter_sound: \"s : \\<gamma>\\<^sub>o S \\<Longrightarrow> aval e s : \\<gamma> a \\<Longrightarrow> s : \\<gamma>\\<^sub>o (afilter e a S)\"", "lemma bfilter_sound: \"s : \\<gamma>\\<^sub>o S \\<Longrightarrow> bv = bval b s \\<Longrightarrow> s : \\<gamma>\\<^sub>o(bfilter b bv S)\"", "lemma strip_step'[simp]: \"strip(step' S c) = strip c\"", "lemma in_gamma_update:\n  \"\\<lbrakk> s : \\<gamma>\\<^sub>f S; i : \\<gamma> a \\<rbrakk> \\<Longrightarrow> s(x := i) : \\<gamma>\\<^sub>f(update S x a)\"", "lemma step_preserves_le:\n  \"\\<lbrakk> S \\<subseteq> \\<gamma>\\<^sub>o S'; cs \\<le> \\<gamma>\\<^sub>c ca \\<rbrakk> \\<Longrightarrow> step S cs \\<le> \\<gamma>\\<^sub>c (step' S' ca)\"", "lemma AI_sound: \"AI c = Some c' \\<Longrightarrow> CS c \\<le> \\<gamma>\\<^sub>c c'\"", "lemma domo_Top[simp]: \"domo \\<top> = {}\"", "lemma bot_acom_Com[simp]: \"\\<bottom>\\<^sub>c c \\<in> Com X\"", "lemma post_in_annos: \"post c : set(annos c)\"", "lemma domo_join: \"domo (S \\<squnion> T) \\<subseteq> domo S \\<union> domo T\"", "lemma domo_afilter: \"vars a \\<subseteq> X \\<Longrightarrow> domo S \\<subseteq> X \\<Longrightarrow> domo(afilter a i S) \\<subseteq> X\"", "lemma domo_bfilter: \"vars b \\<subseteq> X \\<Longrightarrow> domo S \\<subseteq> X \\<Longrightarrow> domo(bfilter b bv S) \\<subseteq> X\"", "lemma step'_Com:\n  \"domo S \\<subseteq> X \\<Longrightarrow> vars(strip c) \\<subseteq> X \\<Longrightarrow> c : Com X \\<Longrightarrow> step' S c : Com X\"", "lemma mono_aval': \"S \\<sqsubseteq> S' \\<Longrightarrow> aval' e S \\<sqsubseteq> aval' e S'\"", "lemma mono_aval'': \"S \\<sqsubseteq> S' \\<Longrightarrow> aval'' e S \\<sqsubseteq> aval'' e S'\"", "lemma mono_afilter: \"r \\<sqsubseteq> r' \\<Longrightarrow> S \\<sqsubseteq> S' \\<Longrightarrow> afilter e r S \\<sqsubseteq> afilter e r' S'\"", "lemma mono_bfilter: \"S \\<sqsubseteq> S' \\<Longrightarrow> bfilter b r S \\<sqsubseteq> bfilter b r S'\"", "lemma mono_step': \"S \\<sqsubseteq> S' \\<Longrightarrow> c \\<sqsubseteq> c' \\<Longrightarrow> step' S c \\<sqsubseteq> step' S' c'\"", "lemma mono_step'2: \"mono (step' S)\""], "translations": [["", "lemma mono_meet: \"x \\<sqsubseteq> x' \\<Longrightarrow> y \\<sqsubseteq> y' \\<Longrightarrow> x \\<sqinter> y \\<sqsubseteq> x' \\<sqinter> y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> x'; y \\<sqsubseteq> y'\\<rbrakk>\n    \\<Longrightarrow> x \\<sqinter> y \\<sqsubseteq> x' \\<sqinter> y'", "by (metis meet_greatest meet_le1 meet_le2 le_trans)"], ["", "end"], ["", "locale Val_abs1_gamma =\n  Gamma where \\<gamma> = \\<gamma> for \\<gamma> :: \"'av::L_top_bot \\<Rightarrow> val set\" +\nassumes inter_gamma_subset_gamma_meet:\n  \"\\<gamma> a1 \\<inter> \\<gamma> a2 \\<subseteq> \\<gamma>(a1 \\<sqinter> a2)\"\nand gamma_Bot[simp]: \"\\<gamma> \\<bottom> = {}\"\nbegin"], ["", "lemma in_gamma_meet: \"x : \\<gamma> a1 \\<Longrightarrow> x : \\<gamma> a2 \\<Longrightarrow> x : \\<gamma>(a1 \\<sqinter> a2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> \\<gamma> a1; x \\<in> \\<gamma> a2\\<rbrakk>\n    \\<Longrightarrow> x \\<in> \\<gamma> (a1 \\<sqinter> a2)", "by (metis IntI inter_gamma_subset_gamma_meet subsetD)"], ["", "lemma gamma_meet[simp]: \"\\<gamma>(a1 \\<sqinter> a2) = \\<gamma> a1 \\<inter> \\<gamma> a2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma> (a1 \\<sqinter> a2) = \\<gamma> a1 \\<inter> \\<gamma> a2", "by (metis equalityI inter_gamma_subset_gamma_meet le_inf_iff mono_gamma meet_le1 meet_le2)"], ["", "end"], ["", "locale Val_abs1 =\n  Val_abs1_gamma where \\<gamma> = \\<gamma>\n   for \\<gamma> :: \"'av::L_top_bot \\<Rightarrow> val set\" +\nfixes test_num' :: \"val \\<Rightarrow> 'av \\<Rightarrow> bool\"\nand filter_plus' :: \"'av \\<Rightarrow> 'av \\<Rightarrow> 'av \\<Rightarrow> 'av * 'av\"\nand filter_less' :: \"bool \\<Rightarrow> 'av \\<Rightarrow> 'av \\<Rightarrow> 'av * 'av\"\nassumes test_num': \"test_num' n a = (n : \\<gamma> a)\"\nand filter_plus': \"filter_plus' a a1 a2 = (b1,b2) \\<Longrightarrow>\n  n1 : \\<gamma> a1 \\<Longrightarrow> n2 : \\<gamma> a2 \\<Longrightarrow> n1+n2 : \\<gamma> a \\<Longrightarrow> n1 : \\<gamma> b1 \\<and> n2 : \\<gamma> b2\"\nand filter_less': \"filter_less' (n1<n2) a1 a2 = (b1,b2) \\<Longrightarrow>\n  n1 : \\<gamma> a1 \\<Longrightarrow> n2 : \\<gamma> a2 \\<Longrightarrow> n1 : \\<gamma> b1 \\<and> n2 : \\<gamma> b2\""], ["", "locale Abs_Int1 =\n  Val_abs1 where \\<gamma> = \\<gamma> for \\<gamma> :: \"'av::L_top_bot \\<Rightarrow> val set\"\nbegin"], ["", "lemma in_gamma_join_UpI: \"s : \\<gamma>\\<^sub>o S1 \\<or> s : \\<gamma>\\<^sub>o S2 \\<Longrightarrow> s : \\<gamma>\\<^sub>o(S1 \\<squnion> S2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o S1 \\<or>\n    s \\<in> \\<gamma>\\<^sub>o S2 \\<Longrightarrow>\n    s \\<in> \\<gamma>\\<^sub>o (S1 \\<squnion> S2)", "by (metis (no_types) join_ge1 join_ge2 mono_gamma_o rev_subsetD)"], ["", "fun aval'' :: \"aexp \\<Rightarrow> 'av st option \\<Rightarrow> 'av\" where\n\"aval'' e None = \\<bottom>\" |\n\"aval'' e (Some sa) = aval' e sa\""], ["", "lemma aval''_sound: \"s : \\<gamma>\\<^sub>o S \\<Longrightarrow> aval a s : \\<gamma>(aval'' a S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o S \\<Longrightarrow>\n    aval a s \\<in> \\<gamma> (aval'' a S)", "by(cases S)(simp add: aval'_sound)+"], ["", "subsection \"Backward analysis\""], ["", "fun afilter :: \"aexp \\<Rightarrow> 'av \\<Rightarrow> 'av st option \\<Rightarrow> 'av st option\" where\n\"afilter (N n) a S = (if test_num' n a then S else None)\" |\n\"afilter (V x) a S = (case S of None \\<Rightarrow> None | Some S \\<Rightarrow>\n  let a' = lookup S x \\<sqinter> a in\n  if a' \\<sqsubseteq> \\<bottom> then None else Some(update S x a'))\" |\n\"afilter (Plus e1 e2) a S =\n (let (a1,a2) = filter_plus' a (aval'' e1 S) (aval'' e2 S)\n  in afilter e1 a1 (afilter e2 a2 S))\""], ["", "text\\<open>The test for @{const bot} in the @{const V}-case is important: @{const\nbot} indicates that a variable has no possible values, i.e.\\ that the current\nprogram point is unreachable. But then the abstract state should collapse to\n@{const None}. Put differently, we maintain the invariant that in an abstract\nstate of the form @{term\"Some s\"}, all variables are mapped to non-@{const\nbot} values. Otherwise the (pointwise) join of two abstract states, one of\nwhich contains @{const bot} values, may produce too large a result, thus\nmaking the analysis less precise.\\<close>"], ["", "fun bfilter :: \"bexp \\<Rightarrow> bool \\<Rightarrow> 'av st option \\<Rightarrow> 'av st option\" where\n\"bfilter (Bc v) res S = (if v=res then S else None)\" |\n\"bfilter (Not b) res S = bfilter b (\\<not> res) S\" |\n\"bfilter (And b1 b2) res S =\n  (if res then bfilter b1 True (bfilter b2 True S)\n   else bfilter b1 False S \\<squnion> bfilter b2 False S)\" |\n\"bfilter (Less e1 e2) res S =\n  (let (res1,res2) = filter_less' res (aval'' e1 S) (aval'' e2 S)\n   in afilter e1 res1 (afilter e2 res2 S))\""], ["", "lemma afilter_sound: \"s : \\<gamma>\\<^sub>o S \\<Longrightarrow> aval e s : \\<gamma> a \\<Longrightarrow> s : \\<gamma>\\<^sub>o (afilter e a S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; aval e s \\<in> \\<gamma> a\\<rbrakk>\n    \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e a S)", "proof(induction e arbitrary: a S)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (N x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (N x) a S)\n 2. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 3. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "case N"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o S\n  aval (N x_) s \\<in> \\<gamma> a\n\ngoal (3 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (N x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (N x) a S)\n 2. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 3. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "thus ?case"], ["proof (prove)\nusing this:\n  s \\<in> \\<gamma>\\<^sub>o S\n  aval (N x_) s \\<in> \\<gamma> a\n\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o (afilter (N x_) a S)", "by simp (metis test_num')"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o (afilter (N x_) a S)\n\ngoal (2 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 2. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 2. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "case (V x)"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o S\n  aval (V x) s \\<in> \\<gamma> a\n\ngoal (2 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 2. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "obtain S' where \"S = Some S'\" and \"s : \\<gamma>\\<^sub>f S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>S = Some S'; s \\<in> \\<gamma>\\<^sub>f S'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>s : \\<gamma>\\<^sub>o S\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> \\<gamma>\\<^sub>o S\n\ngoal (1 subgoal):\n 1. (\\<And>S'.\n        \\<lbrakk>S = Some S'; s \\<in> \\<gamma>\\<^sub>f S'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp: in_gamma_option_iff)"], ["proof (state)\nthis:\n  S = Some S'\n  s \\<in> \\<gamma>\\<^sub>f S'\n\ngoal (2 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 2. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "moreover"], ["proof (state)\nthis:\n  S = Some S'\n  s \\<in> \\<gamma>\\<^sub>f S'\n\ngoal (2 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 2. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "hence \"s x : \\<gamma> (lookup S' x)\""], ["proof (prove)\nusing this:\n  S = Some S'\n  s \\<in> \\<gamma>\\<^sub>f S'\n\ngoal (1 subgoal):\n 1. s x \\<in> \\<gamma> (lookup S' x)", "by(simp add: \\<gamma>_st_def)"], ["proof (state)\nthis:\n  s x \\<in> \\<gamma> (lookup S' x)\n\ngoal (2 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 2. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "moreover"], ["proof (state)\nthis:\n  s x \\<in> \\<gamma> (lookup S' x)\n\ngoal (2 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 2. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "have \"s x : \\<gamma> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s x \\<in> \\<gamma> a", "using V"], ["proof (prove)\nusing this:\n  s \\<in> \\<gamma>\\<^sub>o S\n  aval (V x) s \\<in> \\<gamma> a\n\ngoal (1 subgoal):\n 1. s x \\<in> \\<gamma> a", "by simp"], ["proof (state)\nthis:\n  s x \\<in> \\<gamma> a\n\ngoal (2 subgoals):\n 1. \\<And>x a S.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        aval (V x) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n 2. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "ultimately"], ["proof (chain)\npicking this:\n  S = Some S'\n  s \\<in> \\<gamma>\\<^sub>f S'\n  s x \\<in> \\<gamma> (lookup S' x)\n  s x \\<in> \\<gamma> a", "show ?case"], ["proof (prove)\nusing this:\n  S = Some S'\n  s \\<in> \\<gamma>\\<^sub>f S'\n  s x \\<in> \\<gamma> (lookup S' x)\n  s x \\<in> \\<gamma> a\n\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)", "using V(1)"], ["proof (prove)\nusing this:\n  S = Some S'\n  s \\<in> \\<gamma>\\<^sub>f S'\n  s x \\<in> \\<gamma> (lookup S' x)\n  s x \\<in> \\<gamma> a\n  s \\<in> \\<gamma>\\<^sub>o S\n\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)", "by(simp add: lookup_update Let_def \\<gamma>_st_def)\n      (metis mono_gamma emptyE in_gamma_meet gamma_Bot subset_empty)"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o (afilter (V x) a S)\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "case (Plus e1 e2)"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; aval e1 s \\<in> \\<gamma> ?a\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e1 ?a ?S)\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; aval e2 s \\<in> \\<gamma> ?a\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 ?a ?S)\n  s \\<in> \\<gamma>\\<^sub>o S\n  aval (Plus e1 e2) s \\<in> \\<gamma> a\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2 a S.\n       \\<lbrakk>\\<And>a S.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    aval e1 s \\<in> \\<gamma> a\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (afilter e1 a S);\n        \\<And>a S.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n            aval e2 s \\<in> \\<gamma> a\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 a S);\n        s \\<in> \\<gamma>\\<^sub>o S;\n        aval (Plus e1 e2) s \\<in> \\<gamma> a\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; aval e1 s \\<in> \\<gamma> ?a\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e1 ?a ?S)\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; aval e2 s \\<in> \\<gamma> ?a\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 ?a ?S)\n  s \\<in> \\<gamma>\\<^sub>o S\n  aval (Plus e1 e2) s \\<in> \\<gamma> a\n\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "using filter_plus'[OF _ aval''_sound[OF Plus(3)] aval''_sound[OF Plus(3)]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; aval e1 s \\<in> \\<gamma> ?a\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e1 ?a ?S)\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; aval e2 s \\<in> \\<gamma> ?a\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (afilter e2 ?a ?S)\n  s \\<in> \\<gamma>\\<^sub>o S\n  aval (Plus e1 e2) s \\<in> \\<gamma> a\n  \\<lbrakk>filter_plus' ?a (aval'' ?a2 S) (aval'' ?a1 S) = (?b1.0, ?b2.0);\n   aval ?a2 s + aval ?a1 s \\<in> \\<gamma> ?a\\<rbrakk>\n  \\<Longrightarrow> aval ?a2 s \\<in> \\<gamma> ?b1.0 \\<and>\n                    aval ?a1 s \\<in> \\<gamma> ?b2.0\n\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)", "by (auto split: prod.split)"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o (afilter (Plus e1 e2) a S)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bfilter_sound: \"s : \\<gamma>\\<^sub>o S \\<Longrightarrow> bv = bval b s \\<Longrightarrow> s : \\<gamma>\\<^sub>o(bfilter b bv S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b s\\<rbrakk>\n    \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b bv S)", "proof(induction b arbitrary: S bv)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval (Bc x) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (Bc x) bv S)\n 2. \\<And>b S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (bexp.Not b) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (bexp.Not b) bv S)\n 3. \\<And>b1 b2 S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b1 s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b1 bv S);\n        \\<And>S bv.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b2 s\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (And b1 b2) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)\n 4. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "case Bc"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o S\n  bv = bval (Bc x_) s\n\ngoal (4 subgoals):\n 1. \\<And>x S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval (Bc x) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (Bc x) bv S)\n 2. \\<And>b S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (bexp.Not b) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (bexp.Not b) bv S)\n 3. \\<And>b1 b2 S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b1 s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b1 bv S);\n        \\<And>S bv.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b2 s\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (And b1 b2) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)\n 4. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "thus ?case"], ["proof (prove)\nusing this:\n  s \\<in> \\<gamma>\\<^sub>o S\n  bv = bval (Bc x_) s\n\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o (bfilter (Bc x_) bv S)", "by simp"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o (bfilter (Bc x_) bv S)\n\ngoal (3 subgoals):\n 1. \\<And>b S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (bexp.Not b) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (bexp.Not b) bv S)\n 2. \\<And>b1 b2 S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b1 s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b1 bv S);\n        \\<And>S bv.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b2 s\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (And b1 b2) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)\n 3. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (bexp.Not b) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (bexp.Not b) bv S)\n 2. \\<And>b1 b2 S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b1 s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b1 bv S);\n        \\<And>S bv.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b2 s\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (And b1 b2) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)\n 3. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "case (Not b)"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; ?bv = bval b s\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b ?bv ?S)\n  s \\<in> \\<gamma>\\<^sub>o S\n  bv = bval (bexp.Not b) s\n\ngoal (3 subgoals):\n 1. \\<And>b S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (bexp.Not b) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (bexp.Not b) bv S)\n 2. \\<And>b1 b2 S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b1 s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b1 bv S);\n        \\<And>S bv.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b2 s\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (And b1 b2) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)\n 3. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; ?bv = bval b s\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b ?bv ?S)\n  s \\<in> \\<gamma>\\<^sub>o S\n  bv = bval (bexp.Not b) s\n\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o (bfilter (bexp.Not b) bv S)", "by simp"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o (bfilter (bexp.Not b) bv S)\n\ngoal (2 subgoals):\n 1. \\<And>b1 b2 S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b1 s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b1 bv S);\n        \\<And>S bv.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b2 s\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (And b1 b2) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)\n 2. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b1 b2 S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b1 s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b1 bv S);\n        \\<And>S bv.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b2 s\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (And b1 b2) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)\n 2. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "case (And b1 b2)"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; ?bv = bval b1 s\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b1 ?bv ?S)\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; ?bv = bval b2 s\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 ?bv ?S)\n  s \\<in> \\<gamma>\\<^sub>o S\n  bv = bval (And b1 b2) s\n\ngoal (2 subgoals):\n 1. \\<And>b1 b2 S bv.\n       \\<lbrakk>\\<And>S bv.\n                   \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n                    bv = bval b1 s\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n        (bfilter b1 bv S);\n        \\<And>S bv.\n           \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b2 s\\<rbrakk>\n           \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 bv S);\n        s \\<in> \\<gamma>\\<^sub>o S; bv = bval (And b1 b2) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)\n 2. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; ?bv = bval b1 s\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b1 ?bv ?S)\n  \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o ?S; ?bv = bval b2 s\\<rbrakk>\n  \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o (bfilter b2 ?bv ?S)\n  s \\<in> \\<gamma>\\<^sub>o S\n  bv = bval (And b1 b2) s\n\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)", "apply hypsubst_thin"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>S bv.\n                \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b1 s\\<rbrakk>\n                \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n     (bfilter b1 (bval b1 s) S);\n     \\<And>S bv.\n        \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S; bv = bval b2 s\\<rbrakk>\n        \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                   (bfilter b2 (bval b2 s) S);\n     s \\<in> \\<gamma>\\<^sub>o S\\<rbrakk>\n    \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                               (bfilter (And b1 b2) (bval (And b1 b2) s) S)", "apply (fastforce simp: in_gamma_join_UpI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o (bfilter (And b1 b2) bv S)\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "case (Less e1 e2)"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o S\n  bv = bval (Less e1 e2) s\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a S bv.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        bv = bval (Less x1a x2a) s\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (bfilter (Less x1a x2a) bv S)", "thus ?case"], ["proof (prove)\nusing this:\n  s \\<in> \\<gamma>\\<^sub>o S\n  bv = bval (Less e1 e2) s\n\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o (bfilter (Less e1 e2) bv S)", "apply hypsubst_thin"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> \\<gamma>\\<^sub>o S \\<Longrightarrow>\n    s \\<in> \\<gamma>\\<^sub>o (bfilter (Less e1 e2) (bval (Less e1 e2) s) S)", "apply (auto split: prod.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>s \\<in> \\<gamma>\\<^sub>o S;\n        filter_less' (aval e1 s < aval e2 s) (aval'' e1 S) (aval'' e2 S) =\n        (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> s \\<in> \\<gamma>\\<^sub>o\n                                  (afilter e1 x1 (afilter e2 x2 S))", "apply (metis afilter_sound filter_less' aval''_sound Less(1))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  s \\<in> \\<gamma>\\<^sub>o (bfilter (Less e1 e2) bv S)\n\ngoal:\nNo subgoals!", "qed"], ["", "fun step' :: \"'av st option \\<Rightarrow> 'av st option acom \\<Rightarrow> 'av st option acom\"\n where\n\"step' S (SKIP {P}) = (SKIP {S})\" |\n\"step' S (x ::= e {P}) =\n  x ::= e {case S of None \\<Rightarrow> None | Some S \\<Rightarrow> Some(update S x (aval' e S))}\" |\n\"step' S (c1;; c2) = step' S c1;; step' (post c1) c2\" |\n\"step' S (IF b THEN c1 ELSE c2 {P}) =\n  (let c1' = step' (bfilter b True S) c1; c2' = step' (bfilter b False S) c2\n   in IF b THEN c1' ELSE c2' {post c1 \\<squnion> post c2})\" |\n\"step' S ({Inv} WHILE b DO c {P}) =\n   {S \\<squnion> post c}\n   WHILE b DO step' (bfilter b True Inv) c\n   {bfilter b False Inv}\""], ["", "definition AI :: \"com \\<Rightarrow> 'av st option acom option\" where\n\"AI = lpfp\\<^sub>c (step' \\<top>)\""], ["", "lemma strip_step'[simp]: \"strip(step' S c) = strip c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (step' S c) = strip c", "by(induct c arbitrary: S) (simp_all add: Let_def)"], ["", "subsection \"Soundness\""], ["", "lemma in_gamma_update:\n  \"\\<lbrakk> s : \\<gamma>\\<^sub>f S; i : \\<gamma> a \\<rbrakk> \\<Longrightarrow> s(x := i) : \\<gamma>\\<^sub>f(update S x a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> \\<gamma>\\<^sub>f S; i \\<in> \\<gamma> a\\<rbrakk>\n    \\<Longrightarrow> s(x := i) \\<in> \\<gamma>\\<^sub>f (update S x a)", "by(simp add: \\<gamma>_st_def lookup_update)"], ["", "lemma step_preserves_le:\n  \"\\<lbrakk> S \\<subseteq> \\<gamma>\\<^sub>o S'; cs \\<le> \\<gamma>\\<^sub>c ca \\<rbrakk> \\<Longrightarrow> step S cs \\<le> \\<gamma>\\<^sub>c (step' S' ca)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n     cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n    \\<Longrightarrow> step S cs \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "proof(induction cs arbitrary: ca S S')"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x ca S S'.\n       \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n        SKIP {x} \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (SKIP {x})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 x3 ca S S'.\n       \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n        x1a ::= x2 {x3} \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (x1a ::= x2 {x3})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 3. \\<And>cs1 cs2 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        cs1;;\n        cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (cs1;;\n                                 cs2)\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 4. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 5. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "case SKIP"], ["proof (state)\nthis:\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  SKIP {x_} \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (5 subgoals):\n 1. \\<And>x ca S S'.\n       \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n        SKIP {x} \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (SKIP {x})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 x3 ca S S'.\n       \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n        x1a ::= x2 {x3} \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (x1a ::= x2 {x3})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 3. \\<And>cs1 cs2 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        cs1;;\n        cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (cs1;;\n                                 cs2)\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 4. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 5. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  SKIP {x_} \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (1 subgoal):\n 1. step S (SKIP {x_}) \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "by(auto simp:SKIP_le map_acom_SKIP)"], ["proof (state)\nthis:\n  step S (SKIP {x_}) \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n\ngoal (4 subgoals):\n 1. \\<And>x1a x2 x3 ca S S'.\n       \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n        x1a ::= x2 {x3} \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (x1a ::= x2 {x3})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>cs1 cs2 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        cs1;;\n        cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (cs1;;\n                                 cs2)\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 3. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 4. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1a x2 x3 ca S S'.\n       \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n        x1a ::= x2 {x3} \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (x1a ::= x2 {x3})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>cs1 cs2 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        cs1;;\n        cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (cs1;;\n                                 cs2)\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 3. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 4. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "case Assign"], ["proof (state)\nthis:\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  x1a_ ::= x2_ {x3_} \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (4 subgoals):\n 1. \\<And>x1a x2 x3 ca S S'.\n       \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n        x1a ::= x2 {x3} \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (x1a ::= x2 {x3})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>cs1 cs2 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        cs1;;\n        cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (cs1;;\n                                 cs2)\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 3. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 4. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "thus ?case"], ["proof (prove)\nusing this:\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  x1a_ ::= x2_ {x3_} \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (1 subgoal):\n 1. step S (x1a_ ::= x2_ {x3_}) \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "by (fastforce simp: Assign_le  map_acom_Assign intro: aval'_sound in_gamma_update\n      split: option.splits del:subsetD)"], ["proof (state)\nthis:\n  step S (x1a_ ::= x2_ {x3_}) \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n\ngoal (3 subgoals):\n 1. \\<And>cs1 cs2 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        cs1;;\n        cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (cs1;;\n                                 cs2)\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 3. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>cs1 cs2 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        cs1;;\n        cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (cs1;;\n                                 cs2)\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 3. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "case Seq"], ["proof (state)\nthis:\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs1_ \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs1_ \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs2_ \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs2_ \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  cs1_;;\n  cs2_ \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (3 subgoals):\n 1. \\<And>cs1 cs2 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        cs1;;\n        cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (cs1;;\n                                 cs2)\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 3. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs1_ \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs1_ \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs2_ \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs2_ \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  cs1_;;\n  cs2_ \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (1 subgoal):\n 1. step S (cs1_;;\n            cs2_)\n    \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "apply (auto simp: Seq_le map_acom_Seq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>c1 c2.\n       \\<lbrakk>\\<And>S S' ca.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1_ \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1_\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>S S' ca.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2_ \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2_\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S'; cs1_ \\<le> \\<gamma>\\<^sub>c c1;\n        cs2_ \\<le> \\<gamma>\\<^sub>c c2; ca = c1;;\n  c2\\<rbrakk>\n       \\<Longrightarrow> step (post cs1_) cs2_\n                         \\<le> \\<gamma>\\<^sub>c (step' (post c1) c2)", "by (metis le_post post_map_acom)"], ["proof (state)\nthis:\n  step S (cs1_;;\n          cs2_)\n  \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n\ngoal (2 subgoals):\n 1. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "case (If b cs1 cs2 P)"], ["proof (state)\nthis:\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs1 \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs1 \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs2 \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs2 \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  IF b THEN cs1 ELSE cs2\n  {P}\n  \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (2 subgoals):\n 1. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs1 \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs1 \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs2 \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs2 \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  IF b THEN cs1 ELSE cs2\n  {P}\n  \\<le> \\<gamma>\\<^sub>c ca", "obtain ca1 ca2 Pa where\n      \"ca= IF b THEN ca1 ELSE ca2 {Pa}\"\n      \"P \\<subseteq> \\<gamma>\\<^sub>o Pa\" \"cs1 \\<le> \\<gamma>\\<^sub>c ca1\" \"cs2 \\<le> \\<gamma>\\<^sub>c ca2\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs1 \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs1 \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs2 \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs2 \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  IF b THEN cs1 ELSE cs2\n  {P}\n  \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (1 subgoal):\n 1. (\\<And>ca1 ca2 Pa.\n        \\<lbrakk>ca = IF b THEN ca1 ELSE ca2\n                      {Pa};\n         P \\<subseteq> \\<gamma>\\<^sub>o Pa; cs1 \\<le> \\<gamma>\\<^sub>c ca1;\n         cs2 \\<le> \\<gamma>\\<^sub>c ca2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp: If_le map_acom_If)"], ["proof (state)\nthis:\n  ca = IF b THEN ca1 ELSE ca2\n       {Pa}\n  P \\<subseteq> \\<gamma>\\<^sub>o Pa\n  cs1 \\<le> \\<gamma>\\<^sub>c ca1\n  cs2 \\<le> \\<gamma>\\<^sub>c ca2\n\ngoal (2 subgoals):\n 1. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "moreover"], ["proof (state)\nthis:\n  ca = IF b THEN ca1 ELSE ca2\n       {Pa}\n  P \\<subseteq> \\<gamma>\\<^sub>o Pa\n  cs1 \\<le> \\<gamma>\\<^sub>c ca1\n  cs2 \\<le> \\<gamma>\\<^sub>c ca2\n\ngoal (2 subgoals):\n 1. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "have \"post cs1 \\<subseteq> \\<gamma>\\<^sub>o(post ca1 \\<squnion> post ca2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post cs1 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)", "by (metis (no_types) \\<open>cs1 \\<le> \\<gamma>\\<^sub>c ca1\\<close> join_ge1 le_post mono_gamma_o order_trans post_map_acom)"], ["proof (state)\nthis:\n  post cs1 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)\n\ngoal (2 subgoals):\n 1. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "moreover"], ["proof (state)\nthis:\n  post cs1 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)\n\ngoal (2 subgoals):\n 1. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "have \"post cs2 \\<subseteq> \\<gamma>\\<^sub>o(post ca1 \\<squnion> post ca2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post cs2 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)", "by (metis (no_types) \\<open>cs2 \\<le> \\<gamma>\\<^sub>c ca2\\<close> join_ge2 le_post mono_gamma_o order_trans post_map_acom)"], ["proof (state)\nthis:\n  post cs2 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)\n\ngoal (2 subgoals):\n 1. \\<And>x1a cs1 cs2 x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs1 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs1\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        \\<And>ca S S'.\n           \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n            cs2 \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n           \\<Longrightarrow> step S cs2\n                             \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        IF x1a THEN cs1 ELSE cs2\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S (IF x1a THEN cs1 ELSE cs2\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n 2. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "ultimately"], ["proof (chain)\npicking this:\n  ca = IF b THEN ca1 ELSE ca2\n       {Pa}\n  P \\<subseteq> \\<gamma>\\<^sub>o Pa\n  cs1 \\<le> \\<gamma>\\<^sub>c ca1\n  cs2 \\<le> \\<gamma>\\<^sub>c ca2\n  post cs1 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)\n  post cs2 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)", "show ?case"], ["proof (prove)\nusing this:\n  ca = IF b THEN ca1 ELSE ca2\n       {Pa}\n  P \\<subseteq> \\<gamma>\\<^sub>o Pa\n  cs1 \\<le> \\<gamma>\\<^sub>c ca1\n  cs2 \\<le> \\<gamma>\\<^sub>c ca2\n  post cs1 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)\n  post cs2 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)\n\ngoal (1 subgoal):\n 1. step S (IF b THEN cs1 ELSE cs2\n            {P})\n    \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "using \\<open>S \\<subseteq> \\<gamma>\\<^sub>o S'\\<close>"], ["proof (prove)\nusing this:\n  ca = IF b THEN ca1 ELSE ca2\n       {Pa}\n  P \\<subseteq> \\<gamma>\\<^sub>o Pa\n  cs1 \\<le> \\<gamma>\\<^sub>c ca1\n  cs2 \\<le> \\<gamma>\\<^sub>c ca2\n  post cs1 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)\n  post cs2 \\<subseteq> \\<gamma>\\<^sub>o (post ca1 \\<squnion> post ca2)\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n\ngoal (1 subgoal):\n 1. step S (IF b THEN cs1 ELSE cs2\n            {P})\n    \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "by (simp add: If.IH subset_iff bfilter_sound)"], ["proof (state)\nthis:\n  step S (IF b THEN cs1 ELSE cs2\n          {P})\n  \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "case (While I b cs1 P)"], ["proof (state)\nthis:\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs1 \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs1 \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  {I}\n  WHILE b DO cs1\n  {P}\n  \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs1 \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs1 \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  {I}\n  WHILE b DO cs1\n  {P}\n  \\<le> \\<gamma>\\<^sub>c ca", "obtain ca1 Ia Pa where\n    \"ca = {Ia} WHILE b DO ca1 {Pa}\"\n    \"I \\<subseteq> \\<gamma>\\<^sub>o Ia\" \"P \\<subseteq> \\<gamma>\\<^sub>o Pa\" \"cs1 \\<le> \\<gamma>\\<^sub>c ca1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?S \\<subseteq> \\<gamma>\\<^sub>o ?S';\n   cs1 \\<le> \\<gamma>\\<^sub>c ?ca\\<rbrakk>\n  \\<Longrightarrow> step ?S cs1 \\<le> \\<gamma>\\<^sub>c (step' ?S' ?ca)\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  {I}\n  WHILE b DO cs1\n  {P}\n  \\<le> \\<gamma>\\<^sub>c ca\n\ngoal (1 subgoal):\n 1. (\\<And>Ia ca1 Pa.\n        \\<lbrakk>ca = {Ia}\n                      WHILE b DO ca1\n                      {Pa};\n         I \\<subseteq> \\<gamma>\\<^sub>o Ia;\n         P \\<subseteq> \\<gamma>\\<^sub>o Pa;\n         cs1 \\<le> \\<gamma>\\<^sub>c ca1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fastforce simp: map_acom_While While_le)"], ["proof (state)\nthis:\n  ca = {Ia}\n       WHILE b DO ca1\n       {Pa}\n  I \\<subseteq> \\<gamma>\\<^sub>o Ia\n  P \\<subseteq> \\<gamma>\\<^sub>o Pa\n  cs1 \\<le> \\<gamma>\\<^sub>c ca1\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "moreover"], ["proof (state)\nthis:\n  ca = {Ia}\n       WHILE b DO ca1\n       {Pa}\n  I \\<subseteq> \\<gamma>\\<^sub>o Ia\n  P \\<subseteq> \\<gamma>\\<^sub>o Pa\n  cs1 \\<le> \\<gamma>\\<^sub>c ca1\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "have \"S \\<union> post cs1 \\<subseteq> \\<gamma>\\<^sub>o (S' \\<squnion> post ca1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<union> post cs1\n    \\<subseteq> \\<gamma>\\<^sub>o (S' \\<squnion> post ca1)", "using \\<open>S \\<subseteq> \\<gamma>\\<^sub>o S'\\<close> le_post[OF \\<open>cs1 \\<le> \\<gamma>\\<^sub>c ca1\\<close>, simplified]"], ["proof (prove)\nusing this:\n  S \\<subseteq> \\<gamma>\\<^sub>o S'\n  post cs1 \\<subseteq> \\<gamma>\\<^sub>o (post ca1)\n\ngoal (1 subgoal):\n 1. S \\<union> post cs1\n    \\<subseteq> \\<gamma>\\<^sub>o (S' \\<squnion> post ca1)", "by (metis (no_types) join_ge1 join_ge2 le_sup_iff mono_gamma_o order_trans)"], ["proof (state)\nthis:\n  S \\<union> post cs1 \\<subseteq> \\<gamma>\\<^sub>o (S' \\<squnion> post ca1)\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2 cs x4 ca S S'.\n       \\<lbrakk>\\<And>ca S S'.\n                   \\<lbrakk>S \\<subseteq> \\<gamma>\\<^sub>o S';\n                    cs \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n                   \\<Longrightarrow> step S cs\n                                     \\<le> \\<gamma>\\<^sub>c (step' S' ca);\n        S \\<subseteq> \\<gamma>\\<^sub>o S';\n        {x1a}\n        WHILE x2 DO cs\n        {x4}\n        \\<le> \\<gamma>\\<^sub>c ca\\<rbrakk>\n       \\<Longrightarrow> step S ({x1a}\n                                 WHILE x2 DO cs\n                                 {x4})\n                         \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "ultimately"], ["proof (chain)\npicking this:\n  ca = {Ia}\n       WHILE b DO ca1\n       {Pa}\n  I \\<subseteq> \\<gamma>\\<^sub>o Ia\n  P \\<subseteq> \\<gamma>\\<^sub>o Pa\n  cs1 \\<le> \\<gamma>\\<^sub>c ca1\n  S \\<union> post cs1 \\<subseteq> \\<gamma>\\<^sub>o (S' \\<squnion> post ca1)", "show ?case"], ["proof (prove)\nusing this:\n  ca = {Ia}\n       WHILE b DO ca1\n       {Pa}\n  I \\<subseteq> \\<gamma>\\<^sub>o Ia\n  P \\<subseteq> \\<gamma>\\<^sub>o Pa\n  cs1 \\<le> \\<gamma>\\<^sub>c ca1\n  S \\<union> post cs1 \\<subseteq> \\<gamma>\\<^sub>o (S' \\<squnion> post ca1)\n\ngoal (1 subgoal):\n 1. step S ({I}\n            WHILE b DO cs1\n            {P})\n    \\<le> \\<gamma>\\<^sub>c (step' S' ca)", "by (simp add: While.IH subset_iff bfilter_sound)"], ["proof (state)\nthis:\n  step S ({I}\n          WHILE b DO cs1\n          {P})\n  \\<le> \\<gamma>\\<^sub>c (step' S' ca)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma AI_sound: \"AI c = Some c' \\<Longrightarrow> CS c \\<le> \\<gamma>\\<^sub>c c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AI c = Some c' \\<Longrightarrow> CS c \\<le> \\<gamma>\\<^sub>c c'", "proof(simp add: CS_def AI_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. lpfp\\<^sub>c (step' \\<top>) c = Some c' \\<Longrightarrow>\n    Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c c'", "assume 1: \"lpfp\\<^sub>c (step' \\<top>) c = Some c'\""], ["proof (state)\nthis:\n  lpfp\\<^sub>c (step' \\<top>) c = Some c'\n\ngoal (1 subgoal):\n 1. lpfp\\<^sub>c (step' \\<top>) c = Some c' \\<Longrightarrow>\n    Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c c'", "have 2: \"step' \\<top> c' \\<sqsubseteq> c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. step' \\<top> c' \\<sqsubseteq> c'", "by(rule lpfpc_pfp[OF 1])"], ["proof (state)\nthis:\n  step' \\<top> c' \\<sqsubseteq> c'\n\ngoal (1 subgoal):\n 1. lpfp\\<^sub>c (step' \\<top>) c = Some c' \\<Longrightarrow>\n    Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c c'", "have 3: \"strip (\\<gamma>\\<^sub>c (step' \\<top> c')) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strip (\\<gamma>\\<^sub>c (step' \\<top> c')) = c", "by(simp add: strip_lpfpc[OF _ 1])"], ["proof (state)\nthis:\n  strip (\\<gamma>\\<^sub>c (step' \\<top> c')) = c\n\ngoal (1 subgoal):\n 1. lpfp\\<^sub>c (step' \\<top>) c = Some c' \\<Longrightarrow>\n    Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c c'", "have \"lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c (step' \\<top> c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c (step' \\<top> c')", "proof(rule lfp_lowerbound[simplified,OF 3])"], ["proof (state)\ngoal (1 subgoal):\n 1. step UNIV (\\<gamma>\\<^sub>c (step' \\<top> c'))\n    \\<le> \\<gamma>\\<^sub>c (step' \\<top> c')", "show \"step UNIV (\\<gamma>\\<^sub>c (step' \\<top> c')) \\<le> \\<gamma>\\<^sub>c (step' \\<top> c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. step UNIV (\\<gamma>\\<^sub>c (step' \\<top> c'))\n    \\<le> \\<gamma>\\<^sub>c (step' \\<top> c')", "proof(rule step_preserves_le[OF _ _])"], ["proof (state)\ngoal (2 subgoals):\n 1. UNIV \\<subseteq> \\<gamma>\\<^sub>o \\<top>\n 2. \\<gamma>\\<^sub>c (step' \\<top> c') \\<le> \\<gamma>\\<^sub>c c'", "show \"UNIV \\<subseteq> \\<gamma>\\<^sub>o \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<subseteq> \\<gamma>\\<^sub>o \\<top>", "by simp"], ["proof (state)\nthis:\n  UNIV \\<subseteq> \\<gamma>\\<^sub>o \\<top>\n\ngoal (1 subgoal):\n 1. \\<gamma>\\<^sub>c (step' \\<top> c') \\<le> \\<gamma>\\<^sub>c c'", "show \"\\<gamma>\\<^sub>c (step' \\<top> c') \\<le> \\<gamma>\\<^sub>c c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma>\\<^sub>c (step' \\<top> c') \\<le> \\<gamma>\\<^sub>c c'", "by(rule mono_gamma_c[OF 2])"], ["proof (state)\nthis:\n  \\<gamma>\\<^sub>c (step' \\<top> c') \\<le> \\<gamma>\\<^sub>c c'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  step UNIV (\\<gamma>\\<^sub>c (step' \\<top> c'))\n  \\<le> \\<gamma>\\<^sub>c (step' \\<top> c')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c (step' \\<top> c')\n\ngoal (1 subgoal):\n 1. lpfp\\<^sub>c (step' \\<top>) c = Some c' \\<Longrightarrow>\n    Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c c'", "from this 2"], ["proof (chain)\npicking this:\n  Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c (step' \\<top> c')\n  step' \\<top> c' \\<sqsubseteq> c'", "show \"lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c c'\""], ["proof (prove)\nusing this:\n  Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c (step' \\<top> c')\n  step' \\<top> c' \\<sqsubseteq> c'\n\ngoal (1 subgoal):\n 1. Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c c'", "by (blast intro: mono_gamma_c order_trans)"], ["proof (state)\nthis:\n  Collecting.lfp (step UNIV) c \\<le> \\<gamma>\\<^sub>c c'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Commands over a set of variables\""], ["", "text\\<open>Key invariant: the domains of all abstract states are subsets of the\nset of variables of the program.\\<close>"], ["", "definition \"domo S = (case S of None \\<Rightarrow> {} | Some S' \\<Rightarrow> set(dom S'))\""], ["", "definition Com :: \"vname set \\<Rightarrow> 'a st option acom set\" where\n\"Com X = {c. \\<forall>S \\<in> set(annos c). domo S \\<subseteq> X}\""], ["", "lemma domo_Top[simp]: \"domo \\<top> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domo \\<top> = {}", "by(simp add: domo_def Top_st_def Top_option_def)"], ["", "lemma bot_acom_Com[simp]: \"\\<bottom>\\<^sub>c c \\<in> Com X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom>\\<^sub>c c \\<in> Com X", "by(simp add: bot_acom_def Com_def domo_def)"], ["", "lemma post_in_annos: \"post c : set(annos c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. post c \\<in> set (annos c)", "by(induction c) simp_all"], ["", "lemma domo_join: \"domo (S \\<squnion> T) \\<subseteq> domo S \\<union> domo T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. domo (S \\<squnion> T) \\<subseteq> domo S \\<union> domo T", "by(auto simp: domo_def join_st_def split: option.split)"], ["", "lemma domo_afilter: \"vars a \\<subseteq> X \\<Longrightarrow> domo S \\<subseteq> X \\<Longrightarrow> domo(afilter a i S) \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars a \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n    \\<Longrightarrow> domo (afilter a i S) \\<subseteq> X", "apply(induction a arbitrary: i S)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x i S.\n       \\<lbrakk>vars (N x) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (afilter (N x) i S) \\<subseteq> X\n 2. \\<And>x i S.\n       \\<lbrakk>vars (V x) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (afilter (V x) i S) \\<subseteq> X\n 3. \\<And>a1 a2 i S.\n       \\<lbrakk>\\<And>i S.\n                   \\<lbrakk>vars a1 \\<subseteq> X;\n                    domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> domo (afilter a1 i S) \\<subseteq> X;\n        \\<And>i S.\n           \\<lbrakk>vars a2 \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> domo (afilter a2 i S) \\<subseteq> X;\n        vars (Plus a1 a2) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (afilter (Plus a1 a2) i S) \\<subseteq> X", "apply(simp add: domo_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x i S.\n       \\<lbrakk>vars (V x) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (afilter (V x) i S) \\<subseteq> X\n 2. \\<And>a1 a2 i S.\n       \\<lbrakk>\\<And>i S.\n                   \\<lbrakk>vars a1 \\<subseteq> X;\n                    domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> domo (afilter a1 i S) \\<subseteq> X;\n        \\<And>i S.\n           \\<lbrakk>vars a2 \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> domo (afilter a2 i S) \\<subseteq> X;\n        vars (Plus a1 a2) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (afilter (Plus a1 a2) i S) \\<subseteq> X", "apply(simp add: domo_def Let_def update_def lookup_def split: option.splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x i S x2.\n       \\<lbrakk>x \\<in> X; S = Some x2;\n        set (Abs_State.dom x2) \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2a.\n                            (x \\<in> set\n(Abs_State.dom x2a) \\<longrightarrow>\n                             \\<not> fun x2a x \\<sqinter> i \\<sqsubseteq>\n                                    \\<bottom> \\<longrightarrow>\n                             x2 = x2a \\<longrightarrow>\n                             set (Abs_State.dom x2a) \\<subseteq> X) \\<and>\n                            (x \\<notin> set\n   (Abs_State.dom x2a) \\<longrightarrow>\n                             \\<not> \\<top> \\<sqinter> i \\<sqsubseteq>\n                                    \\<bottom> \\<longrightarrow>\n                             x2 = x2a \\<longrightarrow>\n                             set (Abs_State.dom x2a) \\<subseteq> X)\n 2. \\<And>a1 a2 i S.\n       \\<lbrakk>\\<And>i S.\n                   \\<lbrakk>vars a1 \\<subseteq> X;\n                    domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> domo (afilter a1 i S) \\<subseteq> X;\n        \\<And>i S.\n           \\<lbrakk>vars a2 \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> domo (afilter a2 i S) \\<subseteq> X;\n        vars (Plus a1 a2) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (afilter (Plus a1 a2) i S) \\<subseteq> X", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2 i S.\n       \\<lbrakk>\\<And>i S.\n                   \\<lbrakk>vars a1 \\<subseteq> X;\n                    domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> domo (afilter a1 i S) \\<subseteq> X;\n        \\<And>i S.\n           \\<lbrakk>vars a2 \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> domo (afilter a2 i S) \\<subseteq> X;\n        vars (Plus a1 a2) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (afilter (Plus a1 a2) i S) \\<subseteq> X", "apply(simp split: prod.split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma domo_bfilter: \"vars b \\<subseteq> X \\<Longrightarrow> domo S \\<subseteq> X \\<Longrightarrow> domo(bfilter b bv S) \\<subseteq> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars b \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n    \\<Longrightarrow> domo (bfilter b bv S) \\<subseteq> X", "apply(induction b arbitrary: bv S)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x bv S.\n       \\<lbrakk>vars (Bc x) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (Bc x) bv S) \\<subseteq> X\n 2. \\<And>b bv S.\n       \\<lbrakk>\\<And>bv S.\n                   \\<lbrakk>vars b \\<subseteq> X;\n                    domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> domo (bfilter b bv S) \\<subseteq> X;\n        vars (bexp.Not b) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (bexp.Not b) bv S) \\<subseteq> X\n 3. \\<And>b1 b2 bv S.\n       \\<lbrakk>\\<And>bv S.\n                   \\<lbrakk>vars b1 \\<subseteq> X;\n                    domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> domo (bfilter b1 bv S) \\<subseteq> X;\n        \\<And>bv S.\n           \\<lbrakk>vars b2 \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> domo (bfilter b2 bv S) \\<subseteq> X;\n        vars (And b1 b2) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (And b1 b2) bv S) \\<subseteq> X\n 4. \\<And>x1a x2a bv S.\n       \\<lbrakk>vars (Less x1a x2a) \\<subseteq> X;\n        domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (Less x1a x2a) bv S) \\<subseteq> X", "apply(simp add: domo_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>b bv S.\n       \\<lbrakk>\\<And>bv S.\n                   \\<lbrakk>vars b \\<subseteq> X;\n                    domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> domo (bfilter b bv S) \\<subseteq> X;\n        vars (bexp.Not b) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (bexp.Not b) bv S) \\<subseteq> X\n 2. \\<And>b1 b2 bv S.\n       \\<lbrakk>\\<And>bv S.\n                   \\<lbrakk>vars b1 \\<subseteq> X;\n                    domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> domo (bfilter b1 bv S) \\<subseteq> X;\n        \\<And>bv S.\n           \\<lbrakk>vars b2 \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> domo (bfilter b2 bv S) \\<subseteq> X;\n        vars (And b1 b2) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (And b1 b2) bv S) \\<subseteq> X\n 3. \\<And>x1a x2a bv S.\n       \\<lbrakk>vars (Less x1a x2a) \\<subseteq> X;\n        domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (Less x1a x2a) bv S) \\<subseteq> X", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b1 b2 bv S.\n       \\<lbrakk>\\<And>bv S.\n                   \\<lbrakk>vars b1 \\<subseteq> X;\n                    domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> domo (bfilter b1 bv S) \\<subseteq> X;\n        \\<And>bv S.\n           \\<lbrakk>vars b2 \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> domo (bfilter b2 bv S) \\<subseteq> X;\n        vars (And b1 b2) \\<subseteq> X; domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (And b1 b2) bv S) \\<subseteq> X\n 2. \\<And>x1a x2a bv S.\n       \\<lbrakk>vars (Less x1a x2a) \\<subseteq> X;\n        domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (Less x1a x2a) bv S) \\<subseteq> X", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b1 b2 bv S.\n       \\<lbrakk>\\<And>bv S.\n                   domo S \\<subseteq> X \\<Longrightarrow>\n                   domo (bfilter b1 bv S) \\<subseteq> X;\n        \\<And>bv S.\n           domo S \\<subseteq> X \\<Longrightarrow>\n           domo (bfilter b2 bv S) \\<subseteq> X;\n        vars b1 \\<subseteq> X \\<and> vars b2 \\<subseteq> X;\n        domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> \\<not> bv \\<longrightarrow>\n                         domo\n                          (bfilter b1 False S \\<squnion> bfilter b2 False S)\n                         \\<subseteq> X\n 2. \\<And>x1a x2a bv S.\n       \\<lbrakk>vars (Less x1a x2a) \\<subseteq> X;\n        domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (Less x1a x2a) bv S) \\<subseteq> X", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b1 b2 bv S.\n       \\<lbrakk>\\<And>bv S.\n                   domo S \\<subseteq> X \\<Longrightarrow>\n                   domo (bfilter b1 bv S) \\<subseteq> X;\n        \\<And>bv S.\n           domo S \\<subseteq> X \\<Longrightarrow>\n           domo (bfilter b2 bv S) \\<subseteq> X;\n        vars b1 \\<subseteq> X \\<and> vars b2 \\<subseteq> X;\n        domo S \\<subseteq> X; \\<not> bv\\<rbrakk>\n       \\<Longrightarrow> domo\n                          (bfilter b1 False S \\<squnion> bfilter b2 False S)\n                         \\<subseteq> X\n 2. \\<And>x1a x2a bv S.\n       \\<lbrakk>vars (Less x1a x2a) \\<subseteq> X;\n        domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (Less x1a x2a) bv S) \\<subseteq> X", "apply (metis le_sup_iff subset_trans[OF domo_join])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a bv S.\n       \\<lbrakk>vars (Less x1a x2a) \\<subseteq> X;\n        domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter (Less x1a x2a) bv S) \\<subseteq> X", "apply(simp split: prod.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a bv S.\n       \\<lbrakk>vars x1a \\<subseteq> X \\<and> vars x2a \\<subseteq> X;\n        domo S \\<subseteq> X\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x1 x2.\n                            filter_less' bv (aval'' x1a S) (aval'' x2a S) =\n                            (x1, x2) \\<longrightarrow>\n                            domo (afilter x1a x1 (afilter x2a x2 S))\n                            \\<subseteq> X", "by (metis domo_afilter)"], ["", "lemma step'_Com:\n  \"domo S \\<subseteq> X \\<Longrightarrow> vars(strip c) \\<subseteq> X \\<Longrightarrow> c : Com X \\<Longrightarrow> step' S c : Com X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>domo S \\<subseteq> X; vars (strip c) \\<subseteq> X;\n     c \\<in> Com X\\<rbrakk>\n    \\<Longrightarrow> step' S c \\<in> Com X", "apply(induction c arbitrary: S)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x S.\n       \\<lbrakk>domo S \\<subseteq> X; vars (strip (SKIP {x})) \\<subseteq> X;\n        SKIP {x} \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (SKIP {x}) \\<in> Com X\n 2. \\<And>x1a x2 x3 S.\n       \\<lbrakk>domo S \\<subseteq> X;\n        vars (strip (x1a ::= x2 {x3})) \\<subseteq> X;\n        x1a ::= x2 {x3} \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (x1a ::= x2 {x3}) \\<in> Com X\n 3. \\<And>c1 c2 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X; c1 \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<in> Com X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            c2 \\<in> Com X\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip (c1;;\n     c2))\n                              \\<subseteq> X;\n        c1;;\n        c2 \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (c1;;\n                                  c2)\n                         \\<in> Com X\n 4. \\<And>x1a c1 c2 x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X; c1 \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<in> Com X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            c2 \\<in> Com X\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<in> Com X;\n        domo S \\<subseteq> X;\n        vars (strip (IF x1a THEN c1 ELSE c2\n                     {x4}))\n        \\<subseteq> X;\n        IF x1a THEN c1 ELSE c2\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (IF x1a THEN c1 ELSE c2\n                                  {x4})\n                         \\<in> Com X\n 5. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X; c \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip ({x1a}\n     WHILE x2 DO c\n     {x4}))\n                              \\<subseteq> X;\n        {x1a}\n        WHILE x2 DO c\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S ({x1a}\n                                  WHILE x2 DO c\n                                  {x4})\n                         \\<in> Com X", "apply(simp add: Com_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1a x2 x3 S.\n       \\<lbrakk>domo S \\<subseteq> X;\n        vars (strip (x1a ::= x2 {x3})) \\<subseteq> X;\n        x1a ::= x2 {x3} \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (x1a ::= x2 {x3}) \\<in> Com X\n 2. \\<And>c1 c2 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X; c1 \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<in> Com X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            c2 \\<in> Com X\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip (c1;;\n     c2))\n                              \\<subseteq> X;\n        c1;;\n        c2 \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (c1;;\n                                  c2)\n                         \\<in> Com X\n 3. \\<And>x1a c1 c2 x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X; c1 \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<in> Com X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            c2 \\<in> Com X\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<in> Com X;\n        domo S \\<subseteq> X;\n        vars (strip (IF x1a THEN c1 ELSE c2\n                     {x4}))\n        \\<subseteq> X;\n        IF x1a THEN c1 ELSE c2\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (IF x1a THEN c1 ELSE c2\n                                  {x4})\n                         \\<in> Com X\n 4. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X; c \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip ({x1a}\n     WHILE x2 DO c\n     {x4}))\n                              \\<subseteq> X;\n        {x1a}\n        WHILE x2 DO c\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S ({x1a}\n                                  WHILE x2 DO c\n                                  {x4})\n                         \\<in> Com X", "apply(simp add: Com_def domo_def update_def split: option.splits)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>c1 c2 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X; c1 \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<in> Com X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            c2 \\<in> Com X\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip (c1;;\n     c2))\n                              \\<subseteq> X;\n        c1;;\n        c2 \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (c1;;\n                                  c2)\n                         \\<in> Com X\n 2. \\<And>x1a c1 c2 x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X; c1 \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<in> Com X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            c2 \\<in> Com X\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<in> Com X;\n        domo S \\<subseteq> X;\n        vars (strip (IF x1a THEN c1 ELSE c2\n                     {x4}))\n        \\<subseteq> X;\n        IF x1a THEN c1 ELSE c2\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (IF x1a THEN c1 ELSE c2\n                                  {x4})\n                         \\<in> Com X\n 3. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X; c \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip ({x1a}\n     WHILE x2 DO c\n     {x4}))\n                              \\<subseteq> X;\n        {x1a}\n        WHILE x2 DO c\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S ({x1a}\n                                  WHILE x2 DO c\n                                  {x4})\n                         \\<in> Com X", "apply(simp (no_asm_use) add: Com_def ball_Un)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>c1 c2 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c1).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\n        \\<in>set (annos (step' S c1)).\n  domo S \\<subseteq> X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            \\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c2)).\n                                domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars (strip c1) \\<subseteq> X \\<and> vars (strip c2) \\<subseteq> X;\n        (\\<forall>S\\<in>set (annos c1). domo S \\<subseteq> X) \\<and>\n        (\\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S\\<in>set (annos (step' S c1)).\n                             domo S \\<subseteq> X) \\<and>\n                         (\\<forall>S\\<in>set (annos (step' (post c1) c2)).\n                             domo S \\<subseteq> X)\n 2. \\<And>x1a c1 c2 x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X; c1 \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<in> Com X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            c2 \\<in> Com X\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<in> Com X;\n        domo S \\<subseteq> X;\n        vars (strip (IF x1a THEN c1 ELSE c2\n                     {x4}))\n        \\<subseteq> X;\n        IF x1a THEN c1 ELSE c2\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (IF x1a THEN c1 ELSE c2\n                                  {x4})\n                         \\<in> Com X\n 3. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X; c \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip ({x1a}\n     WHILE x2 DO c\n     {x4}))\n                              \\<subseteq> X;\n        {x1a}\n        WHILE x2 DO c\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S ({x1a}\n                                  WHILE x2 DO c\n                                  {x4})\n                         \\<in> Com X", "apply (metis post_in_annos)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a c1 c2 x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X; c1 \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<in> Com X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            c2 \\<in> Com X\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<in> Com X;\n        domo S \\<subseteq> X;\n        vars (strip (IF x1a THEN c1 ELSE c2\n                     {x4}))\n        \\<subseteq> X;\n        IF x1a THEN c1 ELSE c2\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S (IF x1a THEN c1 ELSE c2\n                                  {x4})\n                         \\<in> Com X\n 2. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X; c \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip ({x1a}\n     WHILE x2 DO c\n     {x4}))\n                              \\<subseteq> X;\n        {x1a}\n        WHILE x2 DO c\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S ({x1a}\n                                  WHILE x2 DO c\n                                  {x4})\n                         \\<in> Com X", "apply(simp (no_asm_use) add: Com_def ball_Un)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a c1 c2 x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c1).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\n        \\<in>set (annos (step' S c1)).\n  domo S \\<subseteq> X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            \\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c2)).\n                                domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x1a \\<subseteq> X \\<and>\n        vars (strip c1) \\<subseteq> X \\<and> vars (strip c2) \\<subseteq> X;\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c1). domo S \\<subseteq> X) \\<and>\n        (\\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> domo (post c1 \\<squnion> post c2)\n                         \\<subseteq> X \\<and>\n                         (\\<forall>S\\<in>set\n    (annos (step' (bfilter x1a True S) c1)).\n                             domo S \\<subseteq> X) \\<and>\n                         (\\<forall>S\\<in>set\n    (annos (step' (bfilter x1a False S) c2)).\n                             domo S \\<subseteq> X)\n 2. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X; c \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip ({x1a}\n     WHILE x2 DO c\n     {x4}))\n                              \\<subseteq> X;\n        {x1a}\n        WHILE x2 DO c\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S ({x1a}\n                                  WHILE x2 DO c\n                                  {x4})\n                         \\<in> Com X", "apply rule"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a c1 c2 x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c1).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\n        \\<in>set (annos (step' S c1)).\n  domo S \\<subseteq> X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            \\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c2)).\n                                domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x1a \\<subseteq> X \\<and>\n        vars (strip c1) \\<subseteq> X \\<and> vars (strip c2) \\<subseteq> X;\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c1). domo S \\<subseteq> X) \\<and>\n        (\\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> domo (post c1 \\<squnion> post c2) \\<subseteq> X\n 2. \\<And>x1a c1 c2 x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c1).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\n        \\<in>set (annos (step' S c1)).\n  domo S \\<subseteq> X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            \\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c2)).\n                                domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x1a \\<subseteq> X \\<and>\n        vars (strip c1) \\<subseteq> X \\<and> vars (strip c2) \\<subseteq> X;\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c1). domo S \\<subseteq> X) \\<and>\n        (\\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S\\<in>set\n    (annos (step' (bfilter x1a True S) c1)).\n                             domo S \\<subseteq> X) \\<and>\n                         (\\<forall>S\\<in>set\n    (annos (step' (bfilter x1a False S) c2)).\n                             domo S \\<subseteq> X)\n 3. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X; c \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip ({x1a}\n     WHILE x2 DO c\n     {x4}))\n                              \\<subseteq> X;\n        {x1a}\n        WHILE x2 DO c\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S ({x1a}\n                                  WHILE x2 DO c\n                                  {x4})\n                         \\<in> Com X", "apply (metis Un_assoc domo_join order_trans post_in_annos subset_Un_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a c1 c2 x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c1) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c1).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\n        \\<in>set (annos (step' S c1)).\n  domo S \\<subseteq> X;\n        \\<And>S.\n           \\<lbrakk>domo S \\<subseteq> X; vars (strip c2) \\<subseteq> X;\n            \\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X\\<rbrakk>\n           \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c2)).\n                                domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x1a \\<subseteq> X \\<and>\n        vars (strip c1) \\<subseteq> X \\<and> vars (strip c2) \\<subseteq> X;\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c1). domo S \\<subseteq> X) \\<and>\n        (\\<forall>S\\<in>set (annos c2). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S\\<in>set\n    (annos (step' (bfilter x1a True S) c1)).\n                             domo S \\<subseteq> X) \\<and>\n                         (\\<forall>S\\<in>set\n    (annos (step' (bfilter x1a False S) c2)).\n                             domo S \\<subseteq> X)\n 2. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X; c \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip ({x1a}\n     WHILE x2 DO c\n     {x4}))\n                              \\<subseteq> X;\n        {x1a}\n        WHILE x2 DO c\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S ({x1a}\n                                  WHILE x2 DO c\n                                  {x4})\n                         \\<in> Com X", "apply (metis domo_bfilter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X; c \\<in> Com X\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<in> Com X;\n        domo S \\<subseteq> X; vars (strip ({x1a}\n     WHILE x2 DO c\n     {x4}))\n                              \\<subseteq> X;\n        {x1a}\n        WHILE x2 DO c\n        {x4}\n        \\<in> Com X\\<rbrakk>\n       \\<Longrightarrow> step' S ({x1a}\n                                  WHILE x2 DO c\n                                  {x4})\n                         \\<in> Com X", "apply(simp (no_asm_use) add: Com_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c)).\n  domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x2 \\<subseteq> X \\<and> vars (strip c) \\<subseteq> X;\n        domo x1a \\<subseteq> X \\<and>\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> domo (S \\<squnion> post c) \\<subseteq> X \\<and>\n                         domo (bfilter x2 False x1a) \\<subseteq> X \\<and>\n                         (\\<forall>S\\<in>set\n    (annos (step' (bfilter x2 True x1a) c)).\n                             domo S \\<subseteq> X)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c)).\n  domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x2 \\<subseteq> X \\<and> vars (strip c) \\<subseteq> X;\n        domo x1a \\<subseteq> X \\<and>\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> domo (S \\<squnion> post c) \\<subseteq> X\n 2. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c)).\n  domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x2 \\<subseteq> X \\<and> vars (strip c) \\<subseteq> X;\n        domo x1a \\<subseteq> X \\<and>\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter x2 False x1a) \\<subseteq> X \\<and>\n                         (\\<forall>S\\<in>set\n    (annos (step' (bfilter x2 True x1a) c)).\n                             domo S \\<subseteq> X)", "apply (metis domo_join le_sup_iff post_in_annos subset_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c)).\n  domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x2 \\<subseteq> X \\<and> vars (strip c) \\<subseteq> X;\n        domo x1a \\<subseteq> X \\<and>\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter x2 False x1a) \\<subseteq> X \\<and>\n                         (\\<forall>S\\<in>set\n    (annos (step' (bfilter x2 True x1a) c)).\n                             domo S \\<subseteq> X)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c)).\n  domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x2 \\<subseteq> X \\<and> vars (strip c) \\<subseteq> X;\n        domo x1a \\<subseteq> X \\<and>\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> domo (bfilter x2 False x1a) \\<subseteq> X\n 2. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c)).\n  domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x2 \\<subseteq> X \\<and> vars (strip c) \\<subseteq> X;\n        domo x1a \\<subseteq> X \\<and>\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S\\<in>set\n   (annos (step' (bfilter x2 True x1a) c)).\n                            domo S \\<subseteq> X", "apply (metis domo_bfilter)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2 c x4 S.\n       \\<lbrakk>\\<And>S.\n                   \\<lbrakk>domo S \\<subseteq> X;\n                    vars (strip c) \\<subseteq> X;\n                    \\<forall>S\\<in>set (annos c).\n                       domo S \\<subseteq> X\\<rbrakk>\n                   \\<Longrightarrow> \\<forall>S\\<in>set (annos (step' S c)).\n  domo S \\<subseteq> X;\n        domo S \\<subseteq> X;\n        vars x2 \\<subseteq> X \\<and> vars (strip c) \\<subseteq> X;\n        domo x1a \\<subseteq> X \\<and>\n        domo x4 \\<subseteq> X \\<and>\n        (\\<forall>S\\<in>set (annos c). domo S \\<subseteq> X)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S\\<in>set\n   (annos (step' (bfilter x2 True x1a) c)).\n                            domo S \\<subseteq> X", "by (metis domo_bfilter)"], ["", "end"], ["", "subsection \"Monotonicity\""], ["", "locale Abs_Int1_mono = Abs_Int1 +\nassumes mono_plus': \"a1 \\<sqsubseteq> b1 \\<Longrightarrow> a2 \\<sqsubseteq> b2 \\<Longrightarrow> plus' a1 a2 \\<sqsubseteq> plus' b1 b2\"\nand mono_filter_plus': \"a1 \\<sqsubseteq> b1 \\<Longrightarrow> a2 \\<sqsubseteq> b2 \\<Longrightarrow> r \\<sqsubseteq> r' \\<Longrightarrow>\n  filter_plus' r a1 a2 \\<sqsubseteq> filter_plus' r' b1 b2\"\nand mono_filter_less': \"a1 \\<sqsubseteq> b1 \\<Longrightarrow> a2 \\<sqsubseteq> b2 \\<Longrightarrow>\n  filter_less' bv a1 a2 \\<sqsubseteq> filter_less' bv b1 b2\"\nbegin"], ["", "lemma mono_aval': \"S \\<sqsubseteq> S' \\<Longrightarrow> aval' e S \\<sqsubseteq> aval' e S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<sqsubseteq> S' \\<Longrightarrow> aval' e S \\<sqsubseteq> aval' e S'", "by(induction e) (auto simp: le_st_def lookup_def mono_plus')"], ["", "lemma mono_aval'': \"S \\<sqsubseteq> S' \\<Longrightarrow> aval'' e S \\<sqsubseteq> aval'' e S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<sqsubseteq> S' \\<Longrightarrow>\n    aval'' e S \\<sqsubseteq> aval'' e S'", "apply(cases S)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<sqsubseteq> S'; S = None\\<rbrakk>\n    \\<Longrightarrow> aval'' e S \\<sqsubseteq> aval'' e S'\n 2. \\<And>a.\n       \\<lbrakk>S \\<sqsubseteq> S'; S = Some a\\<rbrakk>\n       \\<Longrightarrow> aval'' e S \\<sqsubseteq> aval'' e S'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>S \\<sqsubseteq> S'; S = Some a\\<rbrakk>\n       \\<Longrightarrow> aval'' e S \\<sqsubseteq> aval'' e S'", "apply(cases S')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>S \\<sqsubseteq> S'; S = Some a; S' = None\\<rbrakk>\n       \\<Longrightarrow> aval'' e S \\<sqsubseteq> aval'' e S'\n 2. \\<And>a aa.\n       \\<lbrakk>S \\<sqsubseteq> S'; S = Some a; S' = Some aa\\<rbrakk>\n       \\<Longrightarrow> aval'' e S \\<sqsubseteq> aval'' e S'", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>S \\<sqsubseteq> S'; S = Some a; S' = Some aa\\<rbrakk>\n       \\<Longrightarrow> aval'' e S \\<sqsubseteq> aval'' e S'", "by (simp add: mono_aval')"], ["", "lemma mono_afilter: \"r \\<sqsubseteq> r' \\<Longrightarrow> S \\<sqsubseteq> S' \\<Longrightarrow> afilter e r S \\<sqsubseteq> afilter e r' S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n    \\<Longrightarrow> afilter e r S \\<sqsubseteq> afilter e r' S'", "apply(induction e arbitrary: r r' S S')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x r r' S S'.\n       \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n       \\<Longrightarrow> afilter (N x) r S \\<sqsubseteq> afilter (N x) r' S'\n 2. \\<And>x r r' S S'.\n       \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n       \\<Longrightarrow> afilter (V x) r S \\<sqsubseteq> afilter (V x) r' S'\n 3. \\<And>e1 e2 r r' S S'.\n       \\<lbrakk>\\<And>r r' S S'.\n                   \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n                   \\<Longrightarrow> afilter e1 r S \\<sqsubseteq>\n                                     afilter e1 r' S';\n        \\<And>r r' S S'.\n           \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n           \\<Longrightarrow> afilter e2 r S \\<sqsubseteq> afilter e2 r' S';\n        r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n       \\<Longrightarrow> afilter (Plus e1 e2) r S \\<sqsubseteq>\n                         afilter (Plus e1 e2) r' S'", "apply(auto simp: test_num' Let_def split: option.splits prod.splits)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x r r' S S'.\n       \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'; x \\<in> \\<gamma> r;\n        x \\<notin> \\<gamma> r'\\<rbrakk>\n       \\<Longrightarrow> S = None\n 2. \\<And>x r r' x2 x2a.\n       \\<lbrakk>r \\<sqsubseteq> r'; x2 \\<sqsubseteq> x2a;\n        \\<not> lookup x2 x \\<sqinter> r \\<sqsubseteq> \\<bottom>;\n        lookup x2a x \\<sqinter> r' \\<sqsubseteq> \\<bottom>\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>x r r' x2 x2a.\n       \\<lbrakk>r \\<sqsubseteq> r'; x2 \\<sqsubseteq> x2a;\n        \\<not> lookup x2 x \\<sqinter> r \\<sqsubseteq> \\<bottom>;\n        \\<not> lookup x2a x \\<sqinter> r' \\<sqsubseteq> \\<bottom>\\<rbrakk>\n       \\<Longrightarrow> update x2 x\n                          (lookup x2 x \\<sqinter> r) \\<sqsubseteq>\n                         update x2a x (lookup x2a x \\<sqinter> r')\n 4. \\<And>e1 e2 r r' S S' x1 x2 x1a x2a.\n       \\<lbrakk>\\<And>r r' S S'.\n                   \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n                   \\<Longrightarrow> afilter e1 r S \\<sqsubseteq>\n                                     afilter e1 r' S';\n        \\<And>r r' S S'.\n           \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n           \\<Longrightarrow> afilter e2 r S \\<sqsubseteq> afilter e2 r' S';\n        r \\<sqsubseteq> r'; S \\<sqsubseteq> S';\n        filter_plus' r (aval'' e1 S) (aval'' e2 S) = (x1, x2);\n        filter_plus' r' (aval'' e1 S') (aval'' e2 S') = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> afilter e1 x1 (afilter e2 x2 S) \\<sqsubseteq>\n                         afilter e1 x1a (afilter e2 x2a S')", "apply (metis mono_gamma subsetD)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x r r' x2 x2a.\n       \\<lbrakk>r \\<sqsubseteq> r'; x2 \\<sqsubseteq> x2a;\n        \\<not> lookup x2 x \\<sqinter> r \\<sqsubseteq> \\<bottom>;\n        lookup x2a x \\<sqinter> r' \\<sqsubseteq> \\<bottom>\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x r r' x2 x2a.\n       \\<lbrakk>r \\<sqsubseteq> r'; x2 \\<sqsubseteq> x2a;\n        \\<not> lookup x2 x \\<sqinter> r \\<sqsubseteq> \\<bottom>;\n        \\<not> lookup x2a x \\<sqinter> r' \\<sqsubseteq> \\<bottom>\\<rbrakk>\n       \\<Longrightarrow> update x2 x\n                          (lookup x2 x \\<sqinter> r) \\<sqsubseteq>\n                         update x2a x (lookup x2a x \\<sqinter> r')\n 3. \\<And>e1 e2 r r' S S' x1 x2 x1a x2a.\n       \\<lbrakk>\\<And>r r' S S'.\n                   \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n                   \\<Longrightarrow> afilter e1 r S \\<sqsubseteq>\n                                     afilter e1 r' S';\n        \\<And>r r' S S'.\n           \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n           \\<Longrightarrow> afilter e2 r S \\<sqsubseteq> afilter e2 r' S';\n        r \\<sqsubseteq> r'; S \\<sqsubseteq> S';\n        filter_plus' r (aval'' e1 S) (aval'' e2 S) = (x1, x2);\n        filter_plus' r' (aval'' e1 S') (aval'' e2 S') = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> afilter e1 x1 (afilter e2 x2 S) \\<sqsubseteq>\n                         afilter e1 x1a (afilter e2 x2a S')", "apply(rename_tac list a b c d, drule_tac x = \"list\" in mono_lookup)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>list a b c d.\n       \\<lbrakk>a \\<sqsubseteq> b;\n        \\<not> lookup c list \\<sqinter> a \\<sqsubseteq> \\<bottom>;\n        lookup d list \\<sqinter> b \\<sqsubseteq> \\<bottom>;\n        lookup c list \\<sqsubseteq> lookup d list\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x r r' x2 x2a.\n       \\<lbrakk>r \\<sqsubseteq> r'; x2 \\<sqsubseteq> x2a;\n        \\<not> lookup x2 x \\<sqinter> r \\<sqsubseteq> \\<bottom>;\n        \\<not> lookup x2a x \\<sqinter> r' \\<sqsubseteq> \\<bottom>\\<rbrakk>\n       \\<Longrightarrow> update x2 x\n                          (lookup x2 x \\<sqinter> r) \\<sqsubseteq>\n                         update x2a x (lookup x2a x \\<sqinter> r')\n 3. \\<And>e1 e2 r r' S S' x1 x2 x1a x2a.\n       \\<lbrakk>\\<And>r r' S S'.\n                   \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n                   \\<Longrightarrow> afilter e1 r S \\<sqsubseteq>\n                                     afilter e1 r' S';\n        \\<And>r r' S S'.\n           \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n           \\<Longrightarrow> afilter e2 r S \\<sqsubseteq> afilter e2 r' S';\n        r \\<sqsubseteq> r'; S \\<sqsubseteq> S';\n        filter_plus' r (aval'' e1 S) (aval'' e2 S) = (x1, x2);\n        filter_plus' r' (aval'' e1 S') (aval'' e2 S') = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> afilter e1 x1 (afilter e2 x2 S) \\<sqsubseteq>\n                         afilter e1 x1a (afilter e2 x2a S')", "apply (metis mono_meet le_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x r r' x2 x2a.\n       \\<lbrakk>r \\<sqsubseteq> r'; x2 \\<sqsubseteq> x2a;\n        \\<not> lookup x2 x \\<sqinter> r \\<sqsubseteq> \\<bottom>;\n        \\<not> lookup x2a x \\<sqinter> r' \\<sqsubseteq> \\<bottom>\\<rbrakk>\n       \\<Longrightarrow> update x2 x\n                          (lookup x2 x \\<sqinter> r) \\<sqsubseteq>\n                         update x2a x (lookup x2a x \\<sqinter> r')\n 2. \\<And>e1 e2 r r' S S' x1 x2 x1a x2a.\n       \\<lbrakk>\\<And>r r' S S'.\n                   \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n                   \\<Longrightarrow> afilter e1 r S \\<sqsubseteq>\n                                     afilter e1 r' S';\n        \\<And>r r' S S'.\n           \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n           \\<Longrightarrow> afilter e2 r S \\<sqsubseteq> afilter e2 r' S';\n        r \\<sqsubseteq> r'; S \\<sqsubseteq> S';\n        filter_plus' r (aval'' e1 S) (aval'' e2 S) = (x1, x2);\n        filter_plus' r' (aval'' e1 S') (aval'' e2 S') = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> afilter e1 x1 (afilter e2 x2 S) \\<sqsubseteq>\n                         afilter e1 x1a (afilter e2 x2a S')", "apply (metis mono_meet mono_lookup mono_update)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 r r' S S' x1 x2 x1a x2a.\n       \\<lbrakk>\\<And>r r' S S'.\n                   \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n                   \\<Longrightarrow> afilter e1 r S \\<sqsubseteq>\n                                     afilter e1 r' S';\n        \\<And>r r' S S'.\n           \\<lbrakk>r \\<sqsubseteq> r'; S \\<sqsubseteq> S'\\<rbrakk>\n           \\<Longrightarrow> afilter e2 r S \\<sqsubseteq> afilter e2 r' S';\n        r \\<sqsubseteq> r'; S \\<sqsubseteq> S';\n        filter_plus' r (aval'' e1 S) (aval'' e2 S) = (x1, x2);\n        filter_plus' r' (aval'' e1 S') (aval'' e2 S') = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> afilter e1 x1 (afilter e2 x2 S) \\<sqsubseteq>\n                         afilter e1 x1a (afilter e2 x2a S')", "apply(metis mono_aval'' mono_filter_plus'[simplified le_prod_def] fst_conv snd_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mono_bfilter: \"S \\<sqsubseteq> S' \\<Longrightarrow> bfilter b r S \\<sqsubseteq> bfilter b r S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<sqsubseteq> S' \\<Longrightarrow>\n    bfilter b r S \\<sqsubseteq> bfilter b r S'", "apply(induction b arbitrary: r S S')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x r S S'.\n       S \\<sqsubseteq> S' \\<Longrightarrow>\n       bfilter (Bc x) r S \\<sqsubseteq> bfilter (Bc x) r S'\n 2. \\<And>b r S S'.\n       \\<lbrakk>\\<And>r S S'.\n                   S \\<sqsubseteq> S' \\<Longrightarrow>\n                   bfilter b r S \\<sqsubseteq> bfilter b r S';\n        S \\<sqsubseteq> S'\\<rbrakk>\n       \\<Longrightarrow> bfilter (bexp.Not b) r S \\<sqsubseteq>\n                         bfilter (bexp.Not b) r S'\n 3. \\<And>b1 b2 r S S'.\n       \\<lbrakk>\\<And>r S S'.\n                   S \\<sqsubseteq> S' \\<Longrightarrow>\n                   bfilter b1 r S \\<sqsubseteq> bfilter b1 r S';\n        \\<And>r S S'.\n           S \\<sqsubseteq> S' \\<Longrightarrow>\n           bfilter b2 r S \\<sqsubseteq> bfilter b2 r S';\n        S \\<sqsubseteq> S'\\<rbrakk>\n       \\<Longrightarrow> bfilter (And b1 b2) r S \\<sqsubseteq>\n                         bfilter (And b1 b2) r S'\n 4. \\<And>x1a x2a r S S'.\n       S \\<sqsubseteq> S' \\<Longrightarrow>\n       bfilter (Less x1a x2a) r S \\<sqsubseteq> bfilter (Less x1a x2a) r S'", "apply(auto simp: le_trans[OF _ join_ge1] le_trans[OF _ join_ge2] split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a r S S' x1 x2 x1b x2b.\n       \\<lbrakk>S \\<sqsubseteq> S';\n        filter_less' r (aval'' x1a S) (aval'' x2a S) = (x1, x2);\n        filter_less' r (aval'' x1a S') (aval'' x2a S') = (x1b, x2b)\\<rbrakk>\n       \\<Longrightarrow> afilter x1a x1 (afilter x2a x2 S) \\<sqsubseteq>\n                         afilter x1a x1b (afilter x2a x2b S')", "apply(metis mono_aval'' mono_afilter mono_filter_less'[simplified le_prod_def] fst_conv snd_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mono_step': \"S \\<sqsubseteq> S' \\<Longrightarrow> c \\<sqsubseteq> c' \\<Longrightarrow> step' S c \\<sqsubseteq> step' S' c'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<sqsubseteq> S'; c \\<sqsubseteq> c'\\<rbrakk>\n    \\<Longrightarrow> step' S c \\<sqsubseteq> step' S' c'", "apply(induction c c' arbitrary: S S' rule: le_acom.induct)"], ["proof (prove)\ngoal (37 subgoals):\n 1. \\<And>S S' Sa S'a.\n       \\<lbrakk>Sa \\<sqsubseteq> S'a;\n        SKIP {S} \\<sqsubseteq> SKIP {S'}\\<rbrakk>\n       \\<Longrightarrow> step' Sa (SKIP {S}) \\<sqsubseteq>\n                         step' S'a (SKIP {S'})\n 2. \\<And>x e S x' e' S' Sa S'a.\n       \\<lbrakk>Sa \\<sqsubseteq> S'a;\n        x ::= e {S} \\<sqsubseteq> x' ::= e' {S'}\\<rbrakk>\n       \\<Longrightarrow> step' Sa (x ::= e {S}) \\<sqsubseteq>\n                         step' S'a (x' ::= e' {S'})\n 3. \\<And>c1 c2 c1' c2' S S'.\n       \\<lbrakk>\\<And>S S'.\n                   \\<lbrakk>S \\<sqsubseteq> S';\n                    c1 \\<sqsubseteq> c1'\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<sqsubseteq> step' S' c1';\n        \\<And>S S'.\n           \\<lbrakk>S \\<sqsubseteq> S'; c2 \\<sqsubseteq> c2'\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<sqsubseteq> step' S' c2';\n        S \\<sqsubseteq> S'; c1;;\n                            c2 \\<sqsubseteq> c1';;\n                            c2'\\<rbrakk>\n       \\<Longrightarrow> step' S (c1;;\n                                  c2) \\<sqsubseteq>\n                         step' S' (c1';;\n                                   c2')\n 4. \\<And>b c1 c2 S b' c1' c2' S' Sa S'a.\n       \\<lbrakk>\\<And>S S'.\n                   \\<lbrakk>S \\<sqsubseteq> S';\n                    c1 \\<sqsubseteq> c1'\\<rbrakk>\n                   \\<Longrightarrow> step' S c1 \\<sqsubseteq> step' S' c1';\n        \\<And>S S'.\n           \\<lbrakk>S \\<sqsubseteq> S'; c2 \\<sqsubseteq> c2'\\<rbrakk>\n           \\<Longrightarrow> step' S c2 \\<sqsubseteq> step' S' c2';\n        Sa \\<sqsubseteq> S'a;\n        IF b THEN c1 ELSE c2\n        {S} \\<sqsubseteq>\n        IF b' THEN c1' ELSE c2'\n        {S'}\\<rbrakk>\n       \\<Longrightarrow> step' Sa (IF b THEN c1 ELSE c2\n                                   {S}) \\<sqsubseteq>\n                         step' S'a (IF b' THEN c1' ELSE c2'\n                                    {S'})\n 5. \\<And>Inv b c P Inv' b' c' P' S S'.\n       \\<lbrakk>\\<And>S S'.\n                   \\<lbrakk>S \\<sqsubseteq> S'; c \\<sqsubseteq> c'\\<rbrakk>\n                   \\<Longrightarrow> step' S c \\<sqsubseteq> step' S' c';\n        S \\<sqsubseteq> S';\n        {Inv}\n        WHILE b DO c\n        {P} \\<sqsubseteq>\n        {Inv'}\n        WHILE b' DO c'\n        {P'}\\<rbrakk>\n       \\<Longrightarrow> step' S ({Inv}\n                                  WHILE b DO c\n                                  {P}) \\<sqsubseteq>\n                         step' S' ({Inv'}\n                                   WHILE b' DO c'\n                                   {P'})\n 6. \\<And>v va vb vc S S'.\n       \\<lbrakk>S \\<sqsubseteq> S';\n        v ::= va {vb} \\<sqsubseteq> SKIP {vc}\\<rbrakk>\n       \\<Longrightarrow> step' S (v ::= va {vb}) \\<sqsubseteq>\n                         step' S' (SKIP {vc})\n 7. \\<And>v va vb vc vd S S'.\n       \\<lbrakk>S \\<sqsubseteq> S';\n        v ::= va {vb} \\<sqsubseteq> vc;;\n        vd\\<rbrakk>\n       \\<Longrightarrow> step' S (v ::= va {vb}) \\<sqsubseteq>\n                         step' S' (vc;;\n                                   vd)\n 8. \\<And>v va vb vc vd ve vf S S'.\n       \\<lbrakk>S \\<sqsubseteq> S';\n        v ::= va {vb} \\<sqsubseteq> IF vc THEN vd ELSE ve\n                                    {vf}\\<rbrakk>\n       \\<Longrightarrow> step' S (v ::= va {vb}) \\<sqsubseteq>\n                         step' S' (IF vc THEN vd ELSE ve\n                                   {vf})\n 9. \\<And>v va vb vc vd ve vf S S'.\n       \\<lbrakk>S \\<sqsubseteq> S';\n        v ::= va {vb} \\<sqsubseteq> {vc}\n                                    WHILE vd DO ve\n                                    {vf}\\<rbrakk>\n       \\<Longrightarrow> step' S (v ::= va {vb}) \\<sqsubseteq>\n                         step' S' ({vc}\n                                   WHILE vd DO ve\n                                   {vf})\n 10. \\<And>v va vb S S'.\n        \\<lbrakk>S \\<sqsubseteq> S'; v;;\n                                     va \\<sqsubseteq> SKIP {vb}\\<rbrakk>\n        \\<Longrightarrow> step' S (v;;\n                                   va) \\<sqsubseteq>\n                          step' S' (SKIP {vb})\nA total of 37 subgoals...", "apply (auto simp: mono_post mono_bfilter mono_update mono_aval' Let_def le_join_disj\n  split: option.split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mono_step'2: \"mono (step' S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preord_class.mono (step' S)", "by(simp add: mono_def mono_step'[OF le_refl])"], ["", "end"], ["", "end"]]}