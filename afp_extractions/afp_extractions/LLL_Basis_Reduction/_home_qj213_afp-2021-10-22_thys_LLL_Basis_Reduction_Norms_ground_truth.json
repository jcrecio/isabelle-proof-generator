{"file_name": "/home/qj213/afp-2021-10-22/thys/LLL_Basis_Reduction/Norms.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LLL_Basis_Reduction", "problem_names": ["lemma linf_norm_vec: \"\\<parallel>vec n f\\<parallel>\\<^sub>\\<infinity> = max_list (map (abs \\<circ> f) [0..<n] @ [0])\"", "lemma linf_norm_vec_vCons[simp]: \"\\<parallel>vCons a v\\<parallel>\\<^sub>\\<infinity> = max \\<bar>a\\<bar> \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\"", "lemma linf_norm_vec_0 [simp]: \"\\<parallel>vec 0 f\\<parallel>\\<^sub>\\<infinity> = 0\"", "lemma linf_norm_zero_vec [simp]: \"\\<parallel>0\\<^sub>v n :: 'a :: ordered_ab_group_add_abs vec\\<parallel>\\<^sub>\\<infinity> = 0\"", "lemma linf_norm_vec_ge_0 [intro!]:\n  fixes v :: \"'a :: ordered_ab_group_add_abs vec\"\n  shows \"\\<parallel>v\\<parallel>\\<^sub>\\<infinity> \\<ge> 0\"", "lemma linf_norm_vec_eq_0 [simp]:\n  fixes v :: \"'a :: ordered_ab_group_add_abs vec\"\n  assumes \"v \\<in> carrier_vec n\"\n  shows \"\\<parallel>v\\<parallel>\\<^sub>\\<infinity> = 0 \\<longleftrightarrow> v = 0\\<^sub>v n\"", "lemma linf_norm_vec_greater_0 [simp]:\n  fixes v :: \"'a :: ordered_ab_group_add_abs vec\"\n  assumes \"v \\<in> carrier_vec n\"\n  shows \"\\<parallel>v\\<parallel>\\<^sub>\\<infinity> > 0 \\<longleftrightarrow> v \\<noteq> 0\\<^sub>v n\"", "lemma linf_norm_poly_0 [simp]: \"\\<parallel>0::_ poly\\<parallel>\\<^sub>\\<infinity> = 0\"", "lemma linf_norm_pCons [simp]:\n  fixes p :: \"'a :: ordered_ab_group_add_abs poly\"\n  shows \"\\<parallel>pCons a p\\<parallel>\\<^sub>\\<infinity> = max \\<bar>a\\<bar> \\<parallel>p\\<parallel>\\<^sub>\\<infinity>\"", "lemma linf_norm_poly_ge_0 [intro!]:\n  fixes f :: \"'a :: ordered_ab_group_add_abs poly\"\n  shows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity> \\<ge> 0\"", "lemma linf_norm_poly_eq_0 [simp]:\n  fixes f :: \"'a :: ordered_ab_group_add_abs poly\"\n  shows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity> = 0 \\<longleftrightarrow> f = 0\"", "lemma linf_norm_poly_greater_0 [simp]:\n  fixes f :: \"'a :: ordered_ab_group_add_abs poly\"\n  shows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity> > 0 \\<longleftrightarrow> f \\<noteq> 0\"", "lemma sq_norm_vec_vCons[simp]: \"\\<parallel>vCons a v\\<parallel>\\<^sup>2 = \\<parallel>a\\<parallel>\\<^sup>2 + \\<parallel>v\\<parallel>\\<^sup>2\"", "lemma sq_norm_vec_0[simp]: \"\\<parallel>vec 0 f\\<parallel>\\<^sup>2 = 0\"", "lemma sq_norm_vec_as_cscalar_prod:\n  fixes v :: \"'a :: conjugatable_ring vec\"\n  shows \"\\<parallel>v\\<parallel>\\<^sup>2 = v \\<bullet>c v\"", "lemma sq_norm_zero_vec[simp]: \"\\<parallel>0\\<^sub>v n :: 'a :: conjugatable_ring vec\\<parallel>\\<^sup>2 = 0\"", "lemmas sq_norm_vec_ge_0 [intro!] = conjugate_square_ge_0_vec[folded sq_norm_vec_as_cscalar_prod]", "lemmas sq_norm_vec_eq_0 [simp] = conjugate_square_eq_0_vec[folded sq_norm_vec_as_cscalar_prod]", "lemmas sq_norm_vec_greater_0 [simp] = conjugate_square_greater_0_vec[folded sq_norm_vec_as_cscalar_prod]", "lemma sq_norm_poly_0 [simp]: \"\\<parallel>0::_poly\\<parallel>\\<^sup>2 = 0\"", "lemma sq_norm_poly_pCons [simp]:\n  fixes a :: \"'a :: conjugatable_ring\"\n  shows \"\\<parallel>pCons a p\\<parallel>\\<^sup>2 = \\<parallel>a\\<parallel>\\<^sup>2 + \\<parallel>p\\<parallel>\\<^sup>2\"", "lemma sq_norm_poly_ge_0 [intro!]:\n  fixes p :: \"'a :: conjugatable_ordered_ring poly\"\n  shows \"\\<parallel>p\\<parallel>\\<^sup>2 \\<ge> 0\"", "lemma sq_norm_poly_eq_0 [simp]:\n  fixes p :: \"'a :: {conjugatable_ordered_ring,ring_no_zero_divisors} poly\"\n  shows \"\\<parallel>p\\<parallel>\\<^sup>2 = 0 \\<longleftrightarrow> p = 0\"", "lemma sq_norm_poly_pos [simp]:\n  fixes p :: \"'a :: {conjugatable_ordered_ring,ring_no_zero_divisors} poly\"\n  shows \"\\<parallel>p\\<parallel>\\<^sup>2 > 0 \\<longleftrightarrow> p \\<noteq> 0\"", "lemma sq_norm_vec_of_poly [simp]:\n  fixes p :: \"'a :: conjugatable_ring poly\"\n  shows \"\\<parallel>vec_of_poly p\\<parallel>\\<^sup>2 = \\<parallel>p\\<parallel>\\<^sup>2\"", "lemma sq_norm_poly_of_vec [simp]:\n  fixes v :: \"'a :: conjugatable_ring vec\"\n  shows \"\\<parallel>poly_of_vec v\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2\"", "lemma add_neg_pos_is_real: \"a < 0 \\<Longrightarrow> b > 0 \\<Longrightarrow> is_real (a + b)\"", "lemma nonneg_linorder_cases [consumes 2, case_names less eq greater]:\n  assumes \"0 \\<le> a\" and \"0 \\<le> b\"\n      and \"a < b \\<Longrightarrow> thesis\" \"a = b \\<Longrightarrow> thesis\" \"b < a \\<Longrightarrow> thesis\"\n  shows thesis", "lemma nonpos_linorder_cases [consumes 2, case_names less eq greater]:\n  assumes \"a \\<le> 0\" \"b \\<le> 0\"\n      and \"a < b \\<Longrightarrow> thesis\" \"a = b \\<Longrightarrow> thesis\" \"b < a \\<Longrightarrow> thesis\"\n  shows thesis", "lemma real_linear:\n  assumes \"is_real a\" and \"is_real b\" shows \"a < b \\<or> a = b \\<or> b < a\"", "lemma real_linorder_cases [consumes 2, case_names less eq greater]:\n  assumes real: \"is_real a\" \"is_real b\"\n      and cases: \"a < b \\<Longrightarrow> thesis\" \"a = b \\<Longrightarrow> thesis\" \"b < a \\<Longrightarrow> thesis\"\n  shows thesis", "lemma\n  assumes a: \"is_real a\" and b: \"is_real b\"\n  shows real_add_le_cancel_left_pos: \"c + a \\<le> c + b \\<longleftrightarrow> a \\<le> b\"\n    and real_add_less_cancel_left_pos: \"c + a < c + b \\<longleftrightarrow> a < b\"\n    and real_add_le_cancel_right_pos: \"a + c \\<le> b + c \\<longleftrightarrow> a \\<le> b\"\n    and real_add_less_cancel_right_pos: \"a + c < b + c \\<longleftrightarrow> a < b\"", "lemma\n  assumes a: \"is_real a\" and b: \"is_real b\" and c: \"0 < c\"\n  shows real_mult_le_cancel_left_pos: \"c * a \\<le> c * b \\<longleftrightarrow> a \\<le> b\"\n    and real_mult_less_cancel_left_pos: \"c * a < c * b \\<longleftrightarrow> a < b\"\n    and real_mult_le_cancel_right_pos: \"a * c \\<le> b * c \\<longleftrightarrow> a \\<le> b\"\n    and real_mult_less_cancel_right_pos: \"a * c < b * c \\<longleftrightarrow> a < b\"", "lemma\n  assumes a: \"is_real a\" and b: \"is_real b\"\n  shows not_le_real: \"\\<not> a \\<ge> b \\<longleftrightarrow> a < b\"\n    and not_less_real: \"\\<not> a > b \\<longleftrightarrow> a \\<le> b\"", "lemma real_mult_eq_0_iff:\n  assumes a: \"is_real a\" and b: \"is_real b\"\n  shows \"a * b = 0 \\<longleftrightarrow> a = 0 \\<or> b = 0\"", "lemma real_pos_mult_max:\n  fixes a b c :: \"'a :: semiring_real_line\"\n  assumes c: \"c > 0\" and a: \"is_real a\" and b: \"is_real b\"\n  shows \"c * max a b = max (c * a) (c * b)\"", "lemma power_both_mono: \"1 \\<le> a \\<Longrightarrow> m \\<le> n \\<Longrightarrow> a \\<le> b \\<Longrightarrow> a ^ m \\<le> b ^ n\"", "lemma power_pos:\n  assumes a0: \"0 < a\" shows \"0 < a ^ n\"", "lemma power_neg:\n  assumes a0: \"a < 0\" shows \"odd n \\<Longrightarrow> a ^ n < 0\" and \"even n \\<Longrightarrow> a ^ n > 0\"", "lemma power_ge_0_iff:\n  assumes a: \"is_real a\"\n  shows \"0 \\<le> a ^ n \\<longleftrightarrow> 0 \\<le> a \\<or> even n\"", "lemma nonneg_power_less:\n  assumes \"0 \\<le> a\" and \"0 \\<le> b\" shows \"a^n < b^n \\<longleftrightarrow> n > 0 \\<and> a < b\"", "lemma power_strict_mono:\n  shows \"a < b \\<Longrightarrow> 0 \\<le> a \\<Longrightarrow> 0 < n \\<Longrightarrow> a ^ n < b ^ n\"", "lemma nonneg_power_le:\n  assumes \"0 \\<le> a\" and \"0 \\<le> b\" shows \"a^n \\<le> b^n \\<longleftrightarrow> n = 0 \\<or> a \\<le> b\"", "lemma abs_cases:\n  assumes \"a = 0 \\<Longrightarrow> thesis\" and \"\\<bar>a\\<bar> > 0 \\<Longrightarrow> thesis\" shows thesis", "lemma abs_linorder_cases[case_names less eq greater]:\n  assumes \"\\<bar>a\\<bar> < \\<bar>b\\<bar> \\<Longrightarrow> thesis\" and \"\\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow> thesis\" and \"\\<bar>b\\<bar> < \\<bar>a\\<bar> \\<Longrightarrow> thesis\"\n  shows thesis", "lemma [simp]:\n  shows not_le_abs_abs: \"\\<not> \\<bar>a\\<bar> \\<ge> \\<bar>b\\<bar> \\<longleftrightarrow> \\<bar>a\\<bar> < \\<bar>b\\<bar>\"\n    and not_less_abs_abs: \"\\<not> \\<bar>a\\<bar> > \\<bar>b\\<bar> \\<longleftrightarrow> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\"", "lemma abs_power_less [simp]: \"\\<bar>a\\<bar>^n < \\<bar>b\\<bar>^n \\<longleftrightarrow> n > 0 \\<and> \\<bar>a\\<bar> < \\<bar>b\\<bar>\"", "lemma abs_power_le [simp]: \"\\<bar>a\\<bar>^n \\<le> \\<bar>b\\<bar>^n \\<longleftrightarrow> n = 0 \\<or> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\"", "lemma abs_power_pos [simp]: \"\\<bar>a\\<bar>^n > 0 \\<longleftrightarrow> a \\<noteq> 0 \\<or> n = 0\"", "lemma abs_power_nonneg [intro!]: \"\\<bar>a\\<bar>^n \\<ge> 0\"", "lemma abs_power_eq_0 [simp]: \"\\<bar>a\\<bar>^n = 0 \\<longleftrightarrow> a = 0 \\<and> n \\<noteq> 0\"", "lemma vec_index_vec_of_list [simp]: \"vec_of_list xs $ i = xs ! i\"", "lemma vec_of_list_append: \"vec_of_list (xs @ ys) = vec_of_list xs @\\<^sub>v vec_of_list ys\"", "lemma linf_norm_vec_of_list:\n  \"\\<parallel>vec_of_list xs\\<parallel>\\<^sub>\\<infinity> = max_list (map abs xs @ [0])\"", "lemma linf_norm_vec_as_Greatest:\n  fixes v :: \"'a :: ring_1_abs_real_line vec\"\n  shows \"\\<parallel>v\\<parallel>\\<^sub>\\<infinity> = (GREATEST a. a \\<in> abs ` set (list_of_vec v) \\<union> {0})\"", "lemma vec_of_poly_pCons:\n  assumes \"f \\<noteq> 0\"\n  shows \"vec_of_poly (pCons a f) = vec_of_poly f @\\<^sub>v vec_of_list [a]\"", "lemma vec_of_poly_as_vec_of_list:\n  assumes \"f \\<noteq> 0\"\n  shows \"vec_of_poly f = vec_of_list (rev (coeffs f))\"", "lemma linf_norm_vec_of_poly [simp]:\n  fixes f :: \"'a :: ring_1_abs_real_line poly\"\n  shows \"\\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> = \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\"", "lemma linf_norm_poly_as_Greatest:\n  fixes f :: \"'a :: ring_1_abs_real_line poly\"\n  shows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity> = (GREATEST a. a \\<in> abs ` set (coeffs f) \\<union> {0})\"", "lemma vec_index_le_linf_norm:\n  fixes v :: \"'a :: ring_1_abs_real_line vec\"\n  assumes \"i < dim_vec v\"\n  shows \"\\<bar>v$i\\<bar> \\<le> \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\"", "lemma coeff_le_linf_norm:\n  fixes f :: \"'a :: ring_1_abs_real_line poly\"\n  shows \"\\<bar>coeff f i\\<bar> \\<le> \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\"", "lemma sq_norm_as_sq_abs [simp]: \"(sq_norm :: 'a :: conjugatable_ring_1_abs_real_line \\<Rightarrow> 'a) = power2 \\<circ> abs\"", "lemma sq_norm_vec_le_linf_norm:\n  fixes v :: \"'a :: {conjugatable_ring_1_abs_real_line} vec\"\n  assumes \"v \\<in> carrier_vec n\"\n  shows \"\\<parallel>v\\<parallel>\\<^sup>2 \\<le> of_nat n * \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\"", "lemma sq_norm_poly_le_linf_norm:\n  fixes p :: \"'a :: {conjugatable_ring_1_abs_real_line} poly\"\n  shows \"\\<parallel>p\\<parallel>\\<^sup>2 \\<le> of_nat (degree p + 1) * \\<parallel>p\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\"", "lemma coeff_le_sq_norm:\n  fixes f :: \"'a :: {conjugatable_ring_1_abs_real_line} poly\"\n  shows \"\\<bar>coeff f i\\<bar>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2\"", "lemma max_norm_witness:\n  fixes f :: \"'a :: ordered_ring_abs poly\"\n  shows \"\\<exists> i. \\<parallel>f\\<parallel>\\<^sub>\\<infinity> = \\<bar>coeff f i\\<bar>\"", "lemma max_norm_le_sq_norm:\n  fixes f ::  \"'a :: conjugatable_ring_1_abs_real_line poly\"\nshows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2\"", "lemma (in conjugatable_ring) conjugate_minus: \"conjugate (x - y) = conjugate x - conjugate y\"", "lemma conjugate_1[simp]: \"(conjugate 1 :: 'a :: {conjugatable_ring, ring_1}) = 1\"", "lemma conjugate_of_int [simp]:\n  \"(conjugate (of_int x) :: 'a :: {conjugatable_ring,ring_1}) = of_int x\"", "lemma sq_norm_of_int: \"\\<parallel>map_vec of_int v :: 'a :: {conjugatable_ring,ring_1} vec\\<parallel>\\<^sup>2 = of_int \\<parallel>v\\<parallel>\\<^sup>2\"", "lemma norm1_ge_0: \"norm1 (f :: 'a :: {abs,ordered_semiring_0,ordered_ab_group_add_abs}poly) \\<ge> 0\"", "lemma norm2_norm1_main_equality: fixes f :: \"nat \\<Rightarrow> 'a :: linordered_idom\" \n  shows \"(\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2 = (\\<Sum>i = 0..<n. f i * f i)\n      + (\\<Sum>i = 0..<n. \\<Sum>j = 0..<n. if i = j then 0 else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)\"", "lemma norm2_norm1_main_inequality: fixes f :: \"nat \\<Rightarrow> 'a :: linordered_idom\" \n  shows \"(\\<Sum>i = 0..<n. f i * f i) \\<le> (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2\"", "lemma norm2_le_norm1_int: \"\\<parallel>f :: int poly\\<parallel>\\<^sup>2 \\<le> (norm1 f)^2\"", "lemma sq_norm_smult_vec: \"sq_norm ((c :: 'a :: {conjugatable_ring,comm_semiring_0}) \\<cdot>\\<^sub>v v) = (c * conjugate c) * sq_norm v\"", "lemma vec_le_sq_norm:\n  fixes v :: \"'a :: conjugatable_ring_1_abs_real_line vec\"\n  assumes \"v \\<in> carrier_vec n\" \"i < n\"\n  shows \"\\<bar>v $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2\"", "lemma scalar_prod_ge_0: \"(x :: 'a :: linordered_idom vec) \\<bullet> x \\<ge> 0\"", "lemma cscalar_prod_is_scalar_prod[simp]: \"(x :: 'a :: trivial_conjugatable_ordered_field vec) \\<bullet>c y = x \\<bullet> y\"", "lemma scalar_prod_Cauchy:\n  fixes u v::\"'a :: {trivial_conjugatable_linordered_field} Matrix.vec\"\n  assumes \"u \\<in> carrier_vec n\" \"v \\<in> carrier_vec n\"\n  shows \"(u \\<bullet> v)\\<^sup>2 \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2 \""], "translations": [["", "lemma linf_norm_vec: \"\\<parallel>vec n f\\<parallel>\\<^sub>\\<infinity> = max_list (map (abs \\<circ> f) [0..<n] @ [0])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>vec n f\\<parallel>\\<^sub>\\<infinity> =\n    Missing_Lemmas.max_list (map (abs \\<circ> f) [0..<n] @ [0::'a])", "by (simp add: linf_norm_vec_def)"], ["", "lemma linf_norm_vec_vCons[simp]: \"\\<parallel>vCons a v\\<parallel>\\<^sub>\\<infinity> = max \\<bar>a\\<bar> \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>vCons a v\\<parallel>\\<^sub>\\<infinity> =\n    max \\<bar>a\\<bar> \\<parallel>v\\<parallel>\\<^sub>\\<infinity>", "by (auto simp: linf_norm_vec_def max_list_Cons)"], ["", "lemma linf_norm_vec_0 [simp]: \"\\<parallel>vec 0 f\\<parallel>\\<^sub>\\<infinity> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>vec 0 f\\<parallel>\\<^sub>\\<infinity> = (0::'a)", "by (simp add: linf_norm_vec_def)"], ["", "lemma linf_norm_zero_vec [simp]: \"\\<parallel>0\\<^sub>v n :: 'a :: ordered_ab_group_add_abs vec\\<parallel>\\<^sub>\\<infinity> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>0\\<^sub>v n\\<parallel>\\<^sub>\\<infinity> = (0::'a)", "by (induct n, simp add: zero_vec_def, auto simp: zero_vec_Suc)"], ["", "lemma linf_norm_vec_ge_0 [intro!]:\n  fixes v :: \"'a :: ordered_ab_group_add_abs vec\"\n  shows \"\\<parallel>v\\<parallel>\\<^sub>\\<infinity> \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> \\<parallel>v\\<parallel>\\<^sub>\\<infinity>", "by (induct v, auto simp: max_def)"], ["", "lemma linf_norm_vec_eq_0 [simp]:\n  fixes v :: \"'a :: ordered_ab_group_add_abs vec\"\n  assumes \"v \\<in> carrier_vec n\"\n  shows \"\\<parallel>v\\<parallel>\\<^sub>\\<infinity> = 0 \\<longleftrightarrow> v = 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<parallel>v\\<parallel>\\<^sub>\\<infinity> = (0::'a)) =\n    (v = 0\\<^sub>v n)", "by (insert assms, induct rule: carrier_vec_induct, auto simp: zero_vec_Suc max_def)"], ["", "lemma linf_norm_vec_greater_0 [simp]:\n  fixes v :: \"'a :: ordered_ab_group_add_abs vec\"\n  assumes \"v \\<in> carrier_vec n\"\n  shows \"\\<parallel>v\\<parallel>\\<^sub>\\<infinity> > 0 \\<longleftrightarrow> v \\<noteq> 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) < \\<parallel>v\\<parallel>\\<^sub>\\<infinity>) =\n    (v \\<noteq> 0\\<^sub>v n)", "by (insert assms, induct rule: carrier_vec_induct, auto simp: zero_vec_Suc max_def)"], ["", "lemma linf_norm_poly_0 [simp]: \"\\<parallel>0::_ poly\\<parallel>\\<^sub>\\<infinity> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>0\\<parallel>\\<^sub>\\<infinity> = (0::'a)", "by (simp add: linf_norm_poly_def)"], ["", "lemma linf_norm_pCons [simp]:\n  fixes p :: \"'a :: ordered_ab_group_add_abs poly\"\n  shows \"\\<parallel>pCons a p\\<parallel>\\<^sub>\\<infinity> = max \\<bar>a\\<bar> \\<parallel>p\\<parallel>\\<^sub>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>pCons a p\\<parallel>\\<^sub>\\<infinity> =\n    max \\<bar>a\\<bar> \\<parallel>p\\<parallel>\\<^sub>\\<infinity>", "by (cases \"p = 0\", cases \"a = 0\", auto simp: linf_norm_poly_def max_list_Cons)"], ["", "lemma linf_norm_poly_ge_0 [intro!]:\n  fixes f :: \"'a :: ordered_ab_group_add_abs poly\"\n  shows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity> \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> \\<parallel>f\\<parallel>\\<^sub>\\<infinity>", "by (induct f, auto simp: max_def)"], ["", "lemma linf_norm_poly_eq_0 [simp]:\n  fixes f :: \"'a :: ordered_ab_group_add_abs poly\"\n  shows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity> = 0 \\<longleftrightarrow> f = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<parallel>f\\<parallel>\\<^sub>\\<infinity> = (0::'a)) = (f = 0)", "by (induct f, auto simp: max_def)"], ["", "lemma linf_norm_poly_greater_0 [simp]:\n  fixes f :: \"'a :: ordered_ab_group_add_abs poly\"\n  shows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity> > 0 \\<longleftrightarrow> f \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) < \\<parallel>f\\<parallel>\\<^sub>\\<infinity>) = (f \\<noteq> 0)", "by (induct f, auto simp: max_def)"], ["", "subsection \\<open>Square Norms\\<close>"], ["", "consts sq_norm :: \"'a \\<Rightarrow> 'b\" (\"\\<parallel>(_)\\<parallel>\\<^sup>2\")"], ["", "abbreviation \"sq_norm_conjugate x \\<equiv> x * conjugate x\""], ["", "adhoc_overloading sq_norm sq_norm_conjugate"], ["", "subsubsection \\<open>Square norms for vectors\\<close>"], ["", "text \\<open>We prefer sum\\_list over sum because it is not essentially dependent on commutativity,\n  and easier for proving.\n\\<close>"], ["", "definition \"sq_norm_vec v \\<equiv> \\<Sum>x \\<leftarrow> list_of_vec v. \\<parallel>x\\<parallel>\\<^sup>2\""], ["", "adhoc_overloading sq_norm sq_norm_vec"], ["", "lemma sq_norm_vec_vCons[simp]: \"\\<parallel>vCons a v\\<parallel>\\<^sup>2 = \\<parallel>a\\<parallel>\\<^sup>2 + \\<parallel>v\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>vCons a v\\<parallel>\\<^sup>2 =\n    sq_norm_conjugate a + \\<parallel>v\\<parallel>\\<^sup>2", "by (simp add: sq_norm_vec_def)"], ["", "lemma sq_norm_vec_0[simp]: \"\\<parallel>vec 0 f\\<parallel>\\<^sup>2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>vec 0 f\\<parallel>\\<^sup>2 = (0::'a)", "by (simp add: sq_norm_vec_def)"], ["", "lemma sq_norm_vec_as_cscalar_prod:\n  fixes v :: \"'a :: conjugatable_ring vec\"\n  shows \"\\<parallel>v\\<parallel>\\<^sup>2 = v \\<bullet>c v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>v\\<parallel>\\<^sup>2 = v \\<bullet>c v", "by (induct v, simp_all add: sq_norm_vec_def)"], ["", "lemma sq_norm_zero_vec[simp]: \"\\<parallel>0\\<^sub>v n :: 'a :: conjugatable_ring vec\\<parallel>\\<^sup>2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>0\\<^sub>v n\\<parallel>\\<^sup>2 = (0::'a)", "by (simp add: sq_norm_vec_as_cscalar_prod)"], ["", "lemmas sq_norm_vec_ge_0 [intro!] = conjugate_square_ge_0_vec[folded sq_norm_vec_as_cscalar_prod]"], ["", "lemmas sq_norm_vec_eq_0 [simp] = conjugate_square_eq_0_vec[folded sq_norm_vec_as_cscalar_prod]"], ["", "lemmas sq_norm_vec_greater_0 [simp] = conjugate_square_greater_0_vec[folded sq_norm_vec_as_cscalar_prod]"], ["", "subsubsection \\<open>Square norm for polynomials\\<close>"], ["", "definition sq_norm_poly where \"sq_norm_poly p \\<equiv> \\<Sum>a\\<leftarrow>coeffs p. \\<parallel>a\\<parallel>\\<^sup>2\""], ["", "adhoc_overloading sq_norm sq_norm_poly"], ["", "lemma sq_norm_poly_0 [simp]: \"\\<parallel>0::_poly\\<parallel>\\<^sup>2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>0\\<parallel>\\<^sup>2 = (0::'a)", "by (auto simp: sq_norm_poly_def)"], ["", "lemma sq_norm_poly_pCons [simp]:\n  fixes a :: \"'a :: conjugatable_ring\"\n  shows \"\\<parallel>pCons a p\\<parallel>\\<^sup>2 = \\<parallel>a\\<parallel>\\<^sup>2 + \\<parallel>p\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>pCons a p\\<parallel>\\<^sup>2 =\n    sq_norm_conjugate a + \\<parallel>p\\<parallel>\\<^sup>2", "by (cases \"p = 0\"; cases \"a = 0\", auto simp: sq_norm_poly_def)"], ["", "lemma sq_norm_poly_ge_0 [intro!]:\n  fixes p :: \"'a :: conjugatable_ordered_ring poly\"\n  shows \"\\<parallel>p\\<parallel>\\<^sup>2 \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> \\<parallel>p\\<parallel>\\<^sup>2", "by (unfold sq_norm_poly_def, rule sum_list_nonneg, auto intro!:conjugate_square_positive)"], ["", "lemma sq_norm_poly_eq_0 [simp]:\n  fixes p :: \"'a :: {conjugatable_ordered_ring,ring_no_zero_divisors} poly\"\n  shows \"\\<parallel>p\\<parallel>\\<^sup>2 = 0 \\<longleftrightarrow> p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<parallel>p\\<parallel>\\<^sup>2 = (0::'a)) = (p = 0)", "proof (induct p)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<parallel>0\\<parallel>\\<^sup>2 = (0::'a)) = (0 = 0)\n 2. \\<And>a p.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> p \\<noteq> 0;\n        (\\<parallel>p\\<parallel>\\<^sup>2 = (0::'a)) = (p = 0)\\<rbrakk>\n       \\<Longrightarrow> (\\<parallel>pCons a p\\<parallel>\\<^sup>2 =\n                          (0::'a)) =\n                         (pCons a p = 0)", "case IH: (pCons a p)"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a) \\<or> p \\<noteq> 0\n  (\\<parallel>p\\<parallel>\\<^sup>2 = (0::'a)) = (p = 0)\n\ngoal (2 subgoals):\n 1. (\\<parallel>0\\<parallel>\\<^sup>2 = (0::'a)) = (0 = 0)\n 2. \\<And>a p.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> p \\<noteq> 0;\n        (\\<parallel>p\\<parallel>\\<^sup>2 = (0::'a)) = (p = 0)\\<rbrakk>\n       \\<Longrightarrow> (\\<parallel>pCons a p\\<parallel>\\<^sup>2 =\n                          (0::'a)) =\n                         (pCons a p = 0)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)", "proof (cases \"a = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = (0::'a) \\<Longrightarrow>\n    (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)\n 2. a \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)", "case True"], ["proof (state)\nthis:\n  a = (0::'a)\n\ngoal (2 subgoals):\n 1. a = (0::'a) \\<Longrightarrow>\n    (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)\n 2. a \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)", "with IH"], ["proof (chain)\npicking this:\n  a \\<noteq> (0::'a) \\<or> p \\<noteq> 0\n  (\\<parallel>p\\<parallel>\\<^sup>2 = (0::'a)) = (p = 0)\n  a = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a) \\<or> p \\<noteq> 0\n  (\\<parallel>p\\<parallel>\\<^sup>2 = (0::'a)) = (p = 0)\n  a = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)", "by simp"], ["proof (state)\nthis:\n  (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)\n\ngoal (1 subgoal):\n 1. a \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)", "case False"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)", "then"], ["proof (chain)\npicking this:\n  a \\<noteq> (0::'a)", "have \"\\<parallel>a\\<parallel>\\<^sup>2 + \\<parallel>p\\<parallel>\\<^sup>2 > 0\""], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (0::'a) < sq_norm_conjugate a + \\<parallel>p\\<parallel>\\<^sup>2", "by (intro add_pos_nonneg, auto)"], ["proof (state)\nthis:\n  (0::'a) < sq_norm_conjugate a + \\<parallel>p\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. a \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)", "then"], ["proof (chain)\npicking this:\n  (0::'a) < sq_norm_conjugate a + \\<parallel>p\\<parallel>\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  (0::'a) < sq_norm_conjugate a + \\<parallel>p\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)", "by auto"], ["proof (state)\nthis:\n  (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<parallel>pCons a p\\<parallel>\\<^sup>2 = (0::'a)) = (pCons a p = 0)\n\ngoal (1 subgoal):\n 1. (\\<parallel>0\\<parallel>\\<^sup>2 = (0::'a)) = (0 = 0)", "qed simp"], ["", "lemma sq_norm_poly_pos [simp]:\n  fixes p :: \"'a :: {conjugatable_ordered_ring,ring_no_zero_divisors} poly\"\n  shows \"\\<parallel>p\\<parallel>\\<^sup>2 > 0 \\<longleftrightarrow> p \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) < \\<parallel>p\\<parallel>\\<^sup>2) = (p \\<noteq> 0)", "by (auto simp: less_le)"], ["", "lemma sq_norm_vec_of_poly [simp]:\n  fixes p :: \"'a :: conjugatable_ring poly\"\n  shows \"\\<parallel>vec_of_poly p\\<parallel>\\<^sup>2 = \\<parallel>p\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>vec_of_poly p\\<parallel>\\<^sup>2 =\n    \\<parallel>p\\<parallel>\\<^sup>2", "apply (unfold sq_norm_poly_def sq_norm_vec_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map sq_norm (list_of_vec (vec_of_poly p))) =\n    sum_list (map sq_norm (coeffs p))", "apply (fold sum_mset_sum_list)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub># (mset (map sq_norm (list_of_vec (vec_of_poly p)))) =\n    \\<Sum>\\<^sub># (mset (map sq_norm (coeffs p)))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma sq_norm_poly_of_vec [simp]:\n  fixes v :: \"'a :: conjugatable_ring vec\"\n  shows \"\\<parallel>poly_of_vec v\\<parallel>\\<^sup>2 = \\<parallel>v\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>poly_of_vec v\\<parallel>\\<^sup>2 =\n    \\<parallel>v\\<parallel>\\<^sup>2", "apply (unfold sq_norm_poly_def sq_norm_vec_def coeffs_poly_of_vec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map sq_norm (rev (dropWhile ((=) (0::'a)) (list_of_vec v)))) =\n    sum_list (map sq_norm (list_of_vec v))", "apply (fold rev_map)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (rev (map sq_norm (dropWhile ((=) (0::'a)) (list_of_vec v)))) =\n    sum_list (map sq_norm (list_of_vec v))", "apply (fold sum_mset_sum_list)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub>#\n     (mset (rev (map sq_norm (dropWhile ((=) (0::'a)) (list_of_vec v))))) =\n    \\<Sum>\\<^sub># (mset (map sq_norm (list_of_vec v)))", "apply (unfold mset_rev)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sum>\\<^sub>#\n     (mset (map sq_norm (dropWhile ((=) (0::'a)) (list_of_vec v)))) =\n    \\<Sum>\\<^sub># (mset (map sq_norm (list_of_vec v)))", "apply (unfold sum_mset_sum_list)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map sq_norm (dropWhile ((=) (0::'a)) (list_of_vec v))) =\n    sum_list (map sq_norm (list_of_vec v))", "by (auto intro: sum_list_map_dropWhile0)"], ["", "subsection \\<open>Relating Norms\\<close>"], ["", "text \\<open>A class where ordering around 0 is linear.\\<close>"], ["", "abbreviation (in ordered_semiring) is_real where \"is_real a \\<equiv> a < 0 \\<or> a = 0 \\<or> 0 < a\""], ["", "class semiring_real_line = ordered_semiring_strict + ordered_semiring_0 +\n  assumes add_pos_neg_is_real: \"a > 0 \\<Longrightarrow> b < 0 \\<Longrightarrow> is_real (a + b)\"\n      and mult_neg_neg: \"a < 0 \\<Longrightarrow> b < 0 \\<Longrightarrow> 0 < a * b\"\n      and pos_pos_linear: \"0 < a \\<Longrightarrow> 0 < b \\<Longrightarrow> a < b \\<or> a = b \\<or> b < a\"\n      and neg_neg_linear: \"a < 0 \\<Longrightarrow> b < 0 \\<Longrightarrow> a < b \\<or> a = b \\<or> b < a\"\nbegin"], ["", "lemma add_neg_pos_is_real: \"a < 0 \\<Longrightarrow> b > 0 \\<Longrightarrow> is_real (a + b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> is_real (a + b)", "using add_pos_neg_is_real[of b a]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) < b; a < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> is_real (b + a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> is_real (a + b)", "by (simp add: ac_simps)"], ["", "lemma nonneg_linorder_cases [consumes 2, case_names less eq greater]:\n  assumes \"0 \\<le> a\" and \"0 \\<le> b\"\n      and \"a < b \\<Longrightarrow> thesis\" \"a = b \\<Longrightarrow> thesis\" \"b < a \\<Longrightarrow> thesis\"\n  shows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms pos_pos_linear"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n  a < b \\<Longrightarrow> thesis\n  a = b \\<Longrightarrow> thesis\n  b < a \\<Longrightarrow> thesis\n  \\<lbrakk>(0::'a) < ?a; (0::'a) < ?b\\<rbrakk>\n  \\<Longrightarrow> ?a < ?b \\<or> ?a = ?b \\<or> ?b < ?a\n\ngoal (1 subgoal):\n 1. thesis", "by (auto simp: le_less)"], ["", "lemma nonpos_linorder_cases [consumes 2, case_names less eq greater]:\n  assumes \"a \\<le> 0\" \"b \\<le> 0\"\n      and \"a < b \\<Longrightarrow> thesis\" \"a = b \\<Longrightarrow> thesis\" \"b < a \\<Longrightarrow> thesis\"\n  shows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms neg_neg_linear"], ["proof (prove)\nusing this:\n  a \\<le> (0::'a)\n  b \\<le> (0::'a)\n  a < b \\<Longrightarrow> thesis\n  a = b \\<Longrightarrow> thesis\n  b < a \\<Longrightarrow> thesis\n  \\<lbrakk>?a < (0::'a); ?b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> ?a < ?b \\<or> ?a = ?b \\<or> ?b < ?a\n\ngoal (1 subgoal):\n 1. thesis", "by (auto simp: le_less)"], ["", "lemma real_linear:\n  assumes \"is_real a\" and \"is_real b\" shows \"a < b \\<or> a = b \\<or> b < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < b \\<or> a = b \\<or> b < a", "using pos_pos_linear neg_neg_linear assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) < ?a; (0::'a) < ?b\\<rbrakk>\n  \\<Longrightarrow> ?a < ?b \\<or> ?a = ?b \\<or> ?b < ?a\n  \\<lbrakk>?a < (0::'a); ?b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> ?a < ?b \\<or> ?a = ?b \\<or> ?b < ?a\n  is_real a\n  is_real b\n\ngoal (1 subgoal):\n 1. a < b \\<or> a = b \\<or> b < a", "by (auto dest: less_trans[of _ 0])"], ["", "lemma real_linorder_cases [consumes 2, case_names less eq greater]:\n  assumes real: \"is_real a\" \"is_real b\"\n      and cases: \"a < b \\<Longrightarrow> thesis\" \"a = b \\<Longrightarrow> thesis\" \"b < a \\<Longrightarrow> thesis\"\n  shows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using real_linear[OF real] cases"], ["proof (prove)\nusing this:\n  a < b \\<or> a = b \\<or> b < a\n  a < b \\<Longrightarrow> thesis\n  a = b \\<Longrightarrow> thesis\n  b < a \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["", "lemma\n  assumes a: \"is_real a\" and b: \"is_real b\"\n  shows real_add_le_cancel_left_pos: \"c + a \\<le> c + b \\<longleftrightarrow> a \\<le> b\"\n    and real_add_less_cancel_left_pos: \"c + a < c + b \\<longleftrightarrow> a < b\"\n    and real_add_le_cancel_right_pos: \"a + c \\<le> b + c \\<longleftrightarrow> a \\<le> b\"\n    and real_add_less_cancel_right_pos: \"a + c < b + c \\<longleftrightarrow> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c + a \\<le> c + b) = (a \\<le> b) &&& (c + a < c + b) = (a < b)) &&&\n    (a + c \\<le> b + c) = (a \\<le> b) &&& (a + c < b + c) = (a < b)", "using add_strict_left_mono[of b a c] add_strict_left_mono[of a b c]"], ["proof (prove)\nusing this:\n  b < a \\<Longrightarrow> c + b < c + a\n  a < b \\<Longrightarrow> c + a < c + b\n\ngoal (1 subgoal):\n 1. ((c + a \\<le> c + b) = (a \\<le> b) &&& (c + a < c + b) = (a < b)) &&&\n    (a + c \\<le> b + c) = (a \\<le> b) &&& (a + c < b + c) = (a < b)", "using add_strict_right_mono[of b a c] add_strict_right_mono[of a b c]"], ["proof (prove)\nusing this:\n  b < a \\<Longrightarrow> c + b < c + a\n  a < b \\<Longrightarrow> c + a < c + b\n  b < a \\<Longrightarrow> b + c < a + c\n  a < b \\<Longrightarrow> a + c < b + c\n\ngoal (1 subgoal):\n 1. ((c + a \\<le> c + b) = (a \\<le> b) &&& (c + a < c + b) = (a < b)) &&&\n    (a + c \\<le> b + c) = (a \\<le> b) &&& (a + c < b + c) = (a < b)", "by (atomize(full), cases rule: real_linorder_cases[OF a b], auto)"], ["", "lemma\n  assumes a: \"is_real a\" and b: \"is_real b\" and c: \"0 < c\"\n  shows real_mult_le_cancel_left_pos: \"c * a \\<le> c * b \\<longleftrightarrow> a \\<le> b\"\n    and real_mult_less_cancel_left_pos: \"c * a < c * b \\<longleftrightarrow> a < b\"\n    and real_mult_le_cancel_right_pos: \"a * c \\<le> b * c \\<longleftrightarrow> a \\<le> b\"\n    and real_mult_less_cancel_right_pos: \"a * c < b * c \\<longleftrightarrow> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((c * a \\<le> c * b) = (a \\<le> b) &&& (c * a < c * b) = (a < b)) &&&\n    (a * c \\<le> b * c) = (a \\<le> b) &&& (a * c < b * c) = (a < b)", "using mult_strict_left_mono[of b a c] mult_strict_left_mono[of a b c] c"], ["proof (prove)\nusing this:\n  \\<lbrakk>b < a; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * b < c * a\n  \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n  (0::'a) < c\n\ngoal (1 subgoal):\n 1. ((c * a \\<le> c * b) = (a \\<le> b) &&& (c * a < c * b) = (a < b)) &&&\n    (a * c \\<le> b * c) = (a \\<le> b) &&& (a * c < b * c) = (a < b)", "using mult_strict_right_mono[of b a c] mult_strict_right_mono[of a b c] c"], ["proof (prove)\nusing this:\n  \\<lbrakk>b < a; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * b < c * a\n  \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n  (0::'a) < c\n  \\<lbrakk>b < a; (0::'a) < c\\<rbrakk> \\<Longrightarrow> b * c < a * c\n  \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> a * c < b * c\n  (0::'a) < c\n\ngoal (1 subgoal):\n 1. ((c * a \\<le> c * b) = (a \\<le> b) &&& (c * a < c * b) = (a < b)) &&&\n    (a * c \\<le> b * c) = (a \\<le> b) &&& (a * c < b * c) = (a < b)", "by (atomize(full), cases rule: real_linorder_cases[OF a b], auto)"], ["", "lemma\n  assumes a: \"is_real a\" and b: \"is_real b\"\n  shows not_le_real: \"\\<not> a \\<ge> b \\<longleftrightarrow> a < b\"\n    and not_less_real: \"\\<not> a > b \\<longleftrightarrow> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> b \\<le> a) = (a < b) &&& (\\<not> b < a) = (a \\<le> b)", "by (atomize(full), cases rule: real_linorder_cases[OF a b], auto simp: less_imp_le)"], ["", "lemma real_mult_eq_0_iff:\n  assumes a: \"is_real a\" and b: \"is_real b\"\n  shows \"a * b = 0 \\<longleftrightarrow> a = 0 \\<or> b = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * b = (0::'a)) = (a = (0::'a) \\<or> b = (0::'a))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (a * b = (0::'a)) = (a = (0::'a) \\<or> b = (0::'a))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (a * b = (0::'a)) = (a = (0::'a) \\<or> b = (0::'a))", "assume l: \"a * b = 0\" and \"a \\<noteq> 0\" and \"b \\<noteq> 0\""], ["proof (state)\nthis:\n  a * b = (0::'a)\n  a \\<noteq> (0::'a)\n  b \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (a * b = (0::'a)) = (a = (0::'a) \\<or> b = (0::'a))", "with a b"], ["proof (chain)\npicking this:\n  is_real a\n  is_real b\n  a * b = (0::'a)\n  a \\<noteq> (0::'a)\n  b \\<noteq> (0::'a)", "have \"a < 0 \\<or> 0 < a\" and \"b < 0 \\<or> 0 < b\""], ["proof (prove)\nusing this:\n  is_real a\n  is_real b\n  a * b = (0::'a)\n  a \\<noteq> (0::'a)\n  b \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. a < (0::'a) \\<or> (0::'a) < a &&& b < (0::'a) \\<or> (0::'a) < b", "by auto"], ["proof (state)\nthis:\n  a < (0::'a) \\<or> (0::'a) < a\n  b < (0::'a) \\<or> (0::'a) < b\n\ngoal (1 subgoal):\n 1. (a * b = (0::'a)) = (a = (0::'a) \\<or> b = (0::'a))", "then"], ["proof (chain)\npicking this:\n  a < (0::'a) \\<or> (0::'a) < a\n  b < (0::'a) \\<or> (0::'a) < b", "have \"False\""], ["proof (prove)\nusing this:\n  a < (0::'a) \\<or> (0::'a) < a\n  b < (0::'a) \\<or> (0::'a) < b\n\ngoal (1 subgoal):\n 1. False", "using mult_pos_pos[of a b] mult_pos_neg[of a b] mult_neg_pos[of a b] mult_neg_neg[of a b]"], ["proof (prove)\nusing this:\n  a < (0::'a) \\<or> (0::'a) < a\n  b < (0::'a) \\<or> (0::'a) < b\n  \\<lbrakk>(0::'a) < a; (0::'a) < b\\<rbrakk>\n  \\<Longrightarrow> (0::'a) < a * b\n  \\<lbrakk>(0::'a) < a; b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> a * b < (0::'a)\n  \\<lbrakk>a < (0::'a); (0::'a) < b\\<rbrakk>\n  \\<Longrightarrow> a * b < (0::'a)\n  \\<lbrakk>a < (0::'a); b < (0::'a)\\<rbrakk>\n  \\<Longrightarrow> (0::'a) < a * b\n\ngoal (1 subgoal):\n 1. False", "by (auto simp:l)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. (a * b = (0::'a)) = (a = (0::'a) \\<or> b = (0::'a))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>a * b = (0::'a); a \\<noteq> (0::'a); b \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (a * b = (0::'a)) = (a = (0::'a) \\<or> b = (0::'a))", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>a * b = (0::'a); a \\<noteq> (0::'a); b \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>a * b = (0::'a); a \\<noteq> (0::'a); b \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. (a * b = (0::'a)) = (a = (0::'a) \\<or> b = (0::'a))", "by auto"], ["proof (state)\nthis:\n  (a * b = (0::'a)) = (a = (0::'a) \\<or> b = (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma real_pos_mult_max:\n  fixes a b c :: \"'a :: semiring_real_line\"\n  assumes c: \"c > 0\" and a: \"is_real a\" and b: \"is_real b\"\n  shows \"c * max a b = max (c * a) (c * b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * max a b = max (c * a) (c * b)", "by (rule hom_max, simp add: real_mult_le_cancel_left_pos[OF a b c])"], ["", "class ring_abs_real_line = ordered_ring_abs + semiring_real_line"], ["", "class semiring_1_real_line = semiring_real_line + monoid_mult + zero_less_one\nbegin"], ["", "subclass ordered_semiring_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_semiring_1 (1::'a) (*) (+) (0::'a) (\\<le>) (<)", "by (unfold_locales, auto)"], ["", "lemma power_both_mono: \"1 \\<le> a \\<Longrightarrow> m \\<le> n \\<Longrightarrow> a \\<le> b \\<Longrightarrow> a ^ m \\<le> b ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(1::'a) \\<le> a; m \\<le> n; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> a ^ m \\<le> b ^ n", "using power_mono[of a b n] power_increasing[of m n a]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<le> b; (0::'a) \\<le> a\\<rbrakk>\n  \\<Longrightarrow> a ^ n \\<le> b ^ n\n  \\<lbrakk>m \\<le> n; (1::'a) \\<le> a\\<rbrakk>\n  \\<Longrightarrow> a ^ m \\<le> a ^ n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(1::'a) \\<le> a; m \\<le> n; a \\<le> b\\<rbrakk>\n    \\<Longrightarrow> a ^ m \\<le> b ^ n", "by (auto simp: order.trans[OF zero_le_one])"], ["", "lemma power_pos:\n  assumes a0: \"0 < a\" shows \"0 < a ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < a ^ n", "by (induct n, insert mult_strict_mono[OF a0] a0, auto)"], ["", "lemma power_neg:\n  assumes a0: \"a < 0\" shows \"odd n \\<Longrightarrow> a ^ n < 0\" and \"even n \\<Longrightarrow> a ^ n > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (odd n \\<Longrightarrow> a ^ n < (0::'a)) &&&\n    (even n \\<Longrightarrow> (0::'a) < a ^ n)", "by (atomize(full), induct n, insert a0, auto simp add: mult_pos_neg2 mult_neg_neg)"], ["", "lemma power_ge_0_iff:\n  assumes a: \"is_real a\"\n  shows \"0 \\<le> a ^ n \\<longleftrightarrow> 0 \\<le> a \\<or> even n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "using a"], ["proof (prove)\nusing this:\n  is_real a\n\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "proof (elim disjE)"], ["proof (state)\ngoal (3 subgoals):\n 1. a < (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n 2. a = (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n 3. (0::'a) < a \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "assume \"a < 0\""], ["proof (state)\nthis:\n  a < (0::'a)\n\ngoal (3 subgoals):\n 1. a < (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n 2. a = (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n 3. (0::'a) < a \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "with power_neg[OF this, of n]"], ["proof (chain)\npicking this:\n  odd n \\<Longrightarrow> a ^ n < (0::'a)\n  even n \\<Longrightarrow> (0::'a) < a ^ n\n  a < (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  odd n \\<Longrightarrow> a ^ n < (0::'a)\n  even n \\<Longrightarrow> (0::'a) < a ^ n\n  a < (0::'a)\n\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "by(cases \"even n\", auto)"], ["proof (state)\nthis:\n  ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n\ngoal (2 subgoals):\n 1. a = (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n 2. (0::'a) < a \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. a = (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n 2. (0::'a) < a \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "assume \"0 < a\""], ["proof (state)\nthis:\n  (0::'a) < a\n\ngoal (2 subgoals):\n 1. a = (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n 2. (0::'a) < a \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "with power_pos[OF this]"], ["proof (chain)\npicking this:\n  (0::'a) < a ^ ?n\n  (0::'a) < a", "show ?thesis"], ["proof (prove)\nusing this:\n  (0::'a) < a ^ ?n\n  (0::'a) < a\n\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "by auto"], ["proof (state)\nthis:\n  ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n\ngoal (1 subgoal):\n 1. a = (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a = (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "assume \"a = 0\""], ["proof (state)\nthis:\n  a = (0::'a)\n\ngoal (1 subgoal):\n 1. a = (0::'a) \\<Longrightarrow>\n    ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "then"], ["proof (chain)\npicking this:\n  a = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  a = (0::'a)\n\ngoal (1 subgoal):\n 1. ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)", "by (auto simp:power_0_left)"], ["proof (state)\nthis:\n  ((0::'a) \\<le> a ^ n) = ((0::'a) \\<le> a \\<or> even n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nonneg_power_less:\n  assumes \"0 \\<le> a\" and \"0 \\<le> b\" shows \"a^n < b^n \\<longleftrightarrow> n > 0 \\<and> a < b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a ^ n < b ^ n) = (0 < n \\<and> a < b)", "proof (insert assms, induct n arbitrary: a b)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (a ^ 0 < b ^ 0) = (0 < 0 \\<and> a < b)\n 2. \\<And>n a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n                   \\<Longrightarrow> (a ^ n < b ^ n) = (0 < n \\<and> a < b);\n        (0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "case 0"], ["proof (state)\nthis:\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (a ^ 0 < b ^ 0) = (0 < 0 \\<and> a < b)\n 2. \\<And>n a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n                   \\<Longrightarrow> (a ^ n < b ^ n) = (0 < n \\<and> a < b);\n        (0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "then"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b", "show ?case"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n\ngoal (1 subgoal):\n 1. (a ^ 0 < b ^ 0) = (0 < 0 \\<and> a < b)", "by auto"], ["proof (state)\nthis:\n  (a ^ 0 < b ^ 0) = (0 < 0 \\<and> a < b)\n\ngoal (1 subgoal):\n 1. \\<And>n a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n                   \\<Longrightarrow> (a ^ n < b ^ n) = (0 < n \\<and> a < b);\n        (0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n                   \\<Longrightarrow> (a ^ n < b ^ n) = (0 < n \\<and> a < b);\n        (0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>(0::'a) \\<le> ?a1; (0::'a) \\<le> ?b1\\<rbrakk>\n  \\<Longrightarrow> (?a1 ^ n < ?b1 ^ n) = (0 < n \\<and> ?a1 < ?b1)\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n\ngoal (1 subgoal):\n 1. \\<And>n a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n                   \\<Longrightarrow> (a ^ n < b ^ n) = (0 < n \\<and> a < b);\n        (0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "note a = \\<open>0 \\<le> a\\<close>"], ["proof (state)\nthis:\n  (0::'a) \\<le> a\n\ngoal (1 subgoal):\n 1. \\<And>n a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n                   \\<Longrightarrow> (a ^ n < b ^ n) = (0 < n \\<and> a < b);\n        (0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "note b = \\<open>0 \\<le> b\\<close>"], ["proof (state)\nthis:\n  (0::'a) \\<le> b\n\ngoal (1 subgoal):\n 1. \\<And>n a b.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>(0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n                   \\<Longrightarrow> (a ^ n < b ^ n) = (0 < n \\<and> a < b);\n        (0::'a) \\<le> a; (0::'a) \\<le> b\\<rbrakk>\n       \\<Longrightarrow> (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "proof (cases \"n > 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n 2. \\<not> 0 < n \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "case True"], ["proof (state)\nthis:\n  0 < n\n\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n 2. \\<not> 0 < n \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "from a b"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b", "show ?thesis"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n\ngoal (1 subgoal):\n 1. (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "proof (cases rule: nonneg_linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. a < b \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n 2. a = b \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n 3. b < a \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "case less"], ["proof (state)\nthis:\n  a < b\n\ngoal (3 subgoals):\n 1. a < b \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n 2. a = b \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n 3. b < a \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "then"], ["proof (chain)\npicking this:\n  a < b", "show ?thesis"], ["proof (prove)\nusing this:\n  a < b\n\ngoal (1 subgoal):\n 1. (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "by (auto simp: Suc.hyps[OF a b] True intro!:mult_strict_mono' a b zero_le_power)"], ["proof (state)\nthis:\n  (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n 2. b < a \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n 2. b < a \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "case eq"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n 2. b < a \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "then"], ["proof (chain)\npicking this:\n  a = b", "show ?thesis"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "by simp"], ["proof (state)\nthis:\n  (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n\ngoal (1 subgoal):\n 1. b < a \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b < a \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "case greater"], ["proof (state)\nthis:\n  b < a\n\ngoal (1 subgoal):\n 1. b < a \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "with Suc.hyps[OF b a] True"], ["proof (chain)\npicking this:\n  (b ^ n < a ^ n) = (0 < n \\<and> b < a)\n  0 < n\n  b < a", "have \"b ^ n < a ^ n\""], ["proof (prove)\nusing this:\n  (b ^ n < a ^ n) = (0 < n \\<and> b < a)\n  0 < n\n  b < a\n\ngoal (1 subgoal):\n 1. b ^ n < a ^ n", "by auto"], ["proof (state)\nthis:\n  b ^ n < a ^ n\n\ngoal (1 subgoal):\n 1. b < a \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "with mult_strict_mono'[OF greater this] b greater"], ["proof (chain)\npicking this:\n  \\<lbrakk>(0::'a) \\<le> b; (0::'a) \\<le> b ^ n\\<rbrakk>\n  \\<Longrightarrow> b * b ^ n < a * a ^ n\n  (0::'a) \\<le> b\n  b < a\n  b ^ n < a ^ n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) \\<le> b; (0::'a) \\<le> b ^ n\\<rbrakk>\n  \\<Longrightarrow> b * b ^ n < a * a ^ n\n  (0::'a) \\<le> b\n  b < a\n  b ^ n < a ^ n\n\ngoal (1 subgoal):\n 1. (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "by auto"], ["proof (state)\nthis:\n  (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n\ngoal (1 subgoal):\n 1. \\<not> 0 < n \\<Longrightarrow>\n    (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)", "qed auto"], ["proof (state)\nthis:\n  (a ^ Suc n < b ^ Suc n) = (0 < Suc n \\<and> a < b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma power_strict_mono:\n  shows \"a < b \\<Longrightarrow> 0 \\<le> a \\<Longrightarrow> 0 < n \\<Longrightarrow> a ^ n < b ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; (0::'a) \\<le> a; 0 < n\\<rbrakk>\n    \\<Longrightarrow> a ^ n < b ^ n", "by (subst nonneg_power_less, auto)"], ["", "lemma nonneg_power_le:\n  assumes \"0 \\<le> a\" and \"0 \\<le> b\" shows \"a^n \\<le> b^n \\<longleftrightarrow> n = 0 \\<or> a \\<le> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "using assms"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n\ngoal (1 subgoal):\n 1. (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "proof (cases rule: nonneg_linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. a < b \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n 2. a = b \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n 3. b < a \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "case less"], ["proof (state)\nthis:\n  a < b\n\ngoal (3 subgoals):\n 1. a < b \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n 2. a = b \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n 3. b < a \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "with power_strict_mono[OF this, of n] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>(0::'a) \\<le> a; 0 < n\\<rbrakk> \\<Longrightarrow> a ^ n < b ^ n\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n  a < b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) \\<le> a; 0 < n\\<rbrakk> \\<Longrightarrow> a ^ n < b ^ n\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n  a < b\n\ngoal (1 subgoal):\n 1. (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "by (cases n, auto)"], ["proof (state)\nthis:\n  (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n 2. b < a \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n 2. b < a \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "case eq"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n 2. b < a \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "then"], ["proof (chain)\npicking this:\n  a = b", "show ?thesis"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "by auto"], ["proof (state)\nthis:\n  (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n\ngoal (1 subgoal):\n 1. b < a \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b < a \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "case greater"], ["proof (state)\nthis:\n  b < a\n\ngoal (1 subgoal):\n 1. b < a \\<Longrightarrow> (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "with power_strict_mono[OF this, of n] assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>(0::'a) \\<le> b; 0 < n\\<rbrakk> \\<Longrightarrow> b ^ n < a ^ n\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n  b < a", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) \\<le> b; 0 < n\\<rbrakk> \\<Longrightarrow> b ^ n < a ^ n\n  (0::'a) \\<le> a\n  (0::'a) \\<le> b\n  b < a\n\ngoal (1 subgoal):\n 1. (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)", "by (cases n, auto)"], ["proof (state)\nthis:\n  (a ^ n \\<le> b ^ n) = (n = 0 \\<or> a \\<le> b)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subclass (in linordered_idom) semiring_1_real_line"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.semiring_1_real_line (1::'a) (*) (+) (0::'a) (-) (\\<le>) (<)", "apply unfold_locales"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; (0::'a) < c\\<rbrakk> \\<Longrightarrow> a * c < b * c\n 3. \\<And>a b.\n       \\<lbrakk>(0::'a) < a; b < (0::'a)\\<rbrakk>\n       \\<Longrightarrow> is_real (a + b)\n 4. \\<And>a b.\n       \\<lbrakk>a < (0::'a); b < (0::'a)\\<rbrakk>\n       \\<Longrightarrow> (0::'a) < a * b\n 5. \\<And>a b.\n       \\<lbrakk>(0::'a) < a; (0::'a) < b\\<rbrakk>\n       \\<Longrightarrow> a < b \\<or> a = b \\<or> b < a\n 6. \\<And>a b.\n       \\<lbrakk>a < (0::'a); b < (0::'a)\\<rbrakk>\n       \\<Longrightarrow> a < b \\<or> a = b \\<or> b < a", "by (auto simp: mult_strict_left_mono mult_strict_right_mono mult_neg_neg)"], ["", "class ring_1_abs_real_line = ring_abs_real_line + semiring_1_real_line\nbegin"], ["", "subclass ring_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ring_1 (1::'a) (*) (+) (0::'a) (-) uminus", ".."], ["", "lemma abs_cases:\n  assumes \"a = 0 \\<Longrightarrow> thesis\" and \"\\<bar>a\\<bar> > 0 \\<Longrightarrow> thesis\" shows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms"], ["proof (prove)\nusing this:\n  a = (0::'a) \\<Longrightarrow> thesis\n  (0::'a) < \\<bar>a\\<bar> \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["", "lemma abs_linorder_cases[case_names less eq greater]:\n  assumes \"\\<bar>a\\<bar> < \\<bar>b\\<bar> \\<Longrightarrow> thesis\" and \"\\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow> thesis\" and \"\\<bar>b\\<bar> < \\<bar>a\\<bar> \\<Longrightarrow> thesis\"\n  shows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "apply (cases rule: nonneg_linorder_cases[of \"\\<bar>a\\<bar>\" \"\\<bar>b\\<bar>\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. (0::'a) \\<le> \\<bar>a\\<bar>\n 2. (0::'a) \\<le> \\<bar>b\\<bar>\n 3. \\<bar>a\\<bar> < \\<bar>b\\<bar> \\<Longrightarrow> thesis\n 4. \\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow> thesis\n 5. \\<bar>b\\<bar> < \\<bar>a\\<bar> \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  \\<bar>a\\<bar> < \\<bar>b\\<bar> \\<Longrightarrow> thesis\n  \\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow> thesis\n  \\<bar>b\\<bar> < \\<bar>a\\<bar> \\<Longrightarrow> thesis\n\ngoal (5 subgoals):\n 1. (0::'a) \\<le> \\<bar>a\\<bar>\n 2. (0::'a) \\<le> \\<bar>b\\<bar>\n 3. \\<bar>a\\<bar> < \\<bar>b\\<bar> \\<Longrightarrow> thesis\n 4. \\<bar>a\\<bar> = \\<bar>b\\<bar> \\<Longrightarrow> thesis\n 5. \\<bar>b\\<bar> < \\<bar>a\\<bar> \\<Longrightarrow> thesis", "by auto"], ["", "lemma [simp]:\n  shows not_le_abs_abs: \"\\<not> \\<bar>a\\<bar> \\<ge> \\<bar>b\\<bar> \\<longleftrightarrow> \\<bar>a\\<bar> < \\<bar>b\\<bar>\"\n    and not_less_abs_abs: \"\\<not> \\<bar>a\\<bar> > \\<bar>b\\<bar> \\<longleftrightarrow> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> \\<bar>b\\<bar> \\<le> \\<bar>a\\<bar>) =\n    (\\<bar>a\\<bar> < \\<bar>b\\<bar>) &&&\n    (\\<not> \\<bar>b\\<bar> < \\<bar>a\\<bar>) =\n    (\\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "by (atomize(full), cases a b rule: abs_linorder_cases, auto simp: less_imp_le)"], ["", "lemma abs_power_less [simp]: \"\\<bar>a\\<bar>^n < \\<bar>b\\<bar>^n \\<longleftrightarrow> n > 0 \\<and> \\<bar>a\\<bar> < \\<bar>b\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<bar>a\\<bar> ^ n < \\<bar>b\\<bar> ^ n) =\n    (0 < n \\<and> \\<bar>a\\<bar> < \\<bar>b\\<bar>)", "by (subst nonneg_power_less, auto)"], ["", "lemma abs_power_le [simp]: \"\\<bar>a\\<bar>^n \\<le> \\<bar>b\\<bar>^n \\<longleftrightarrow> n = 0 \\<or> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<bar>a\\<bar> ^ n \\<le> \\<bar>b\\<bar> ^ n) =\n    (n = 0 \\<or> \\<bar>a\\<bar> \\<le> \\<bar>b\\<bar>)", "by (subst nonneg_power_le, auto)"], ["", "lemma abs_power_pos [simp]: \"\\<bar>a\\<bar>^n > 0 \\<longleftrightarrow> a \\<noteq> 0 \\<or> n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((0::'a) < \\<bar>a\\<bar> ^ n) = (a \\<noteq> (0::'a) \\<or> n = 0)", "using power_pos[of \"\\<bar>a\\<bar>\"]"], ["proof (prove)\nusing this:\n  (0::'a) < \\<bar>a\\<bar> \\<Longrightarrow> (0::'a) < \\<bar>a\\<bar> ^ ?n\n\ngoal (1 subgoal):\n 1. ((0::'a) < \\<bar>a\\<bar> ^ n) = (a \\<noteq> (0::'a) \\<or> n = 0)", "by (cases \"n\", auto)"], ["", "lemma abs_power_nonneg [intro!]: \"\\<bar>a\\<bar>^n \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> \\<bar>a\\<bar> ^ n", "by auto"], ["", "lemma abs_power_eq_0 [simp]: \"\\<bar>a\\<bar>^n = 0 \\<longleftrightarrow> a = 0 \\<and> n \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<bar>a\\<bar> ^ n = (0::'a)) = (a = (0::'a) \\<and> n \\<noteq> 0)", "apply (induct n, force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<bar>a\\<bar> ^ n = (0::'a)) =\n       (a = (0::'a) \\<and> n \\<noteq> 0) \\<Longrightarrow>\n       (\\<bar>a\\<bar> ^ Suc n = (0::'a)) =\n       (a = (0::'a) \\<and> Suc n \\<noteq> 0)", "apply (unfold power_Suc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<bar>a\\<bar> ^ n = (0::'a)) =\n       (a = (0::'a) \\<and> n \\<noteq> 0) \\<Longrightarrow>\n       (\\<bar>a\\<bar> * \\<bar>a\\<bar> ^ n = (0::'a)) =\n       (a = (0::'a) \\<and> Suc n \\<noteq> 0)", "apply (subst real_mult_eq_0_iff, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "end"], ["", "instance nat :: semiring_1_real_line"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(nat, semiring_1_real_line_class)", "by (intro_classes, auto)"], ["", "instance int :: ring_1_abs_real_line"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(int, ring_1_abs_real_line_class)", ".."], ["", "lemma vec_index_vec_of_list [simp]: \"vec_of_list xs $ i = xs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_of_list xs $ i = xs ! i", "by transfer (auto simp: mk_vec_def undef_vec_def dest: empty_nth)"], ["", "lemma vec_of_list_append: \"vec_of_list (xs @ ys) = vec_of_list xs @\\<^sub>v vec_of_list ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_of_list (xs @ ys) = vec_of_list xs @\\<^sub>v vec_of_list ys", "by (auto simp: nth_append)"], ["", "lemma linf_norm_vec_of_list:\n  \"\\<parallel>vec_of_list xs\\<parallel>\\<^sub>\\<infinity> = max_list (map abs xs @ [0])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>vec_of_list xs\\<parallel>\\<^sub>\\<infinity> =\n    Missing_Lemmas.max_list (map abs xs @ [0::'a])", "by (simp add: linf_norm_vec_def)"], ["", "lemma linf_norm_vec_as_Greatest:\n  fixes v :: \"'a :: ring_1_abs_real_line vec\"\n  shows \"\\<parallel>v\\<parallel>\\<^sub>\\<infinity> = (GREATEST a. a \\<in> abs ` set (list_of_vec v) \\<union> {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>v\\<parallel>\\<^sub>\\<infinity> =\n    (GREATEST a. a \\<in> abs ` set (list_of_vec v) \\<union> {0::'a})", "unfolding linf_norm_vec_of_list[of \"list_of_vec v\", simplified]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Missing_Lemmas.max_list (map abs (list_of_vec v) @ [0::'a]) =\n    (GREATEST a. a \\<in> abs ` set (list_of_vec v) \\<union> {0::'a})", "by (subst max_list_as_Greatest, auto)"], ["", "lemma vec_of_poly_pCons:\n  assumes \"f \\<noteq> 0\"\n  shows \"vec_of_poly (pCons a f) = vec_of_poly f @\\<^sub>v vec_of_list [a]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_of_poly (pCons a f) = vec_of_poly f @\\<^sub>v vec_of_list [a]", "using assms"], ["proof (prove)\nusing this:\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. vec_of_poly (pCons a f) = vec_of_poly f @\\<^sub>v vec_of_list [a]", "by (auto simp: vec_eq_iff Suc_diff_le)"], ["", "lemma vec_of_poly_as_vec_of_list:\n  assumes \"f \\<noteq> 0\"\n  shows \"vec_of_poly f = vec_of_list (rev (coeffs f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vec_of_poly f = vec_of_list (rev (coeffs f))", "proof (insert assms, induct f)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<noteq> 0 \\<Longrightarrow>\n    vec_of_poly 0 = vec_of_list (rev (coeffs 0))\n 2. \\<And>a f.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> f \\<noteq> 0;\n        f \\<noteq> 0 \\<Longrightarrow>\n        vec_of_poly f = vec_of_list (rev (coeffs f));\n        pCons a f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> vec_of_poly (pCons a f) =\n                         vec_of_list (rev (coeffs (pCons a f)))", "case 0"], ["proof (state)\nthis:\n  0 \\<noteq> 0\n\ngoal (2 subgoals):\n 1. 0 \\<noteq> 0 \\<Longrightarrow>\n    vec_of_poly 0 = vec_of_list (rev (coeffs 0))\n 2. \\<And>a f.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> f \\<noteq> 0;\n        f \\<noteq> 0 \\<Longrightarrow>\n        vec_of_poly f = vec_of_list (rev (coeffs f));\n        pCons a f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> vec_of_poly (pCons a f) =\n                         vec_of_list (rev (coeffs (pCons a f)))", "then"], ["proof (chain)\npicking this:\n  0 \\<noteq> 0", "show ?case"], ["proof (prove)\nusing this:\n  0 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. vec_of_poly 0 = vec_of_list (rev (coeffs 0))", "by auto"], ["proof (state)\nthis:\n  vec_of_poly 0 = vec_of_list (rev (coeffs 0))\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> f \\<noteq> 0;\n        f \\<noteq> 0 \\<Longrightarrow>\n        vec_of_poly f = vec_of_list (rev (coeffs f));\n        pCons a f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> vec_of_poly (pCons a f) =\n                         vec_of_list (rev (coeffs (pCons a f)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a f.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> f \\<noteq> 0;\n        f \\<noteq> 0 \\<Longrightarrow>\n        vec_of_poly f = vec_of_list (rev (coeffs f));\n        pCons a f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> vec_of_poly (pCons a f) =\n                         vec_of_list (rev (coeffs (pCons a f)))", "case (pCons a f)"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a) \\<or> f \\<noteq> 0\n  f \\<noteq> 0 \\<Longrightarrow>\n  vec_of_poly f = vec_of_list (rev (coeffs f))\n  pCons a f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a f.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> f \\<noteq> 0;\n        f \\<noteq> 0 \\<Longrightarrow>\n        vec_of_poly f = vec_of_list (rev (coeffs f));\n        pCons a f \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> vec_of_poly (pCons a f) =\n                         vec_of_list (rev (coeffs (pCons a f)))", "then"], ["proof (chain)\npicking this:\n  a \\<noteq> (0::'a) \\<or> f \\<noteq> 0\n  f \\<noteq> 0 \\<Longrightarrow>\n  vec_of_poly f = vec_of_list (rev (coeffs f))\n  pCons a f \\<noteq> 0", "show ?case"], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a) \\<or> f \\<noteq> 0\n  f \\<noteq> 0 \\<Longrightarrow>\n  vec_of_poly f = vec_of_list (rev (coeffs f))\n  pCons a f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. vec_of_poly (pCons a f) = vec_of_list (rev (coeffs (pCons a f)))", "by (cases \"f = 0\", auto simp: vec_of_list_append vec_of_poly_pCons)"], ["proof (state)\nthis:\n  vec_of_poly (pCons a f) = vec_of_list (rev (coeffs (pCons a f)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma linf_norm_vec_of_poly [simp]:\n  fixes f :: \"'a :: ring_1_abs_real_line poly\"\n  shows \"\\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> = \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> =\n    \\<parallel>f\\<parallel>\\<^sub>\\<infinity>", "proof (cases \"f = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f = 0 \\<Longrightarrow>\n    \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> =\n    \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\n 2. f \\<noteq> 0 \\<Longrightarrow>\n    \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> =\n    \\<parallel>f\\<parallel>\\<^sub>\\<infinity>", "case False"], ["proof (state)\nthis:\n  f \\<noteq> 0\n\ngoal (2 subgoals):\n 1. f = 0 \\<Longrightarrow>\n    \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> =\n    \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\n 2. f \\<noteq> 0 \\<Longrightarrow>\n    \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> =\n    \\<parallel>f\\<parallel>\\<^sub>\\<infinity>", "then"], ["proof (chain)\npicking this:\n  f \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> =\n    \\<parallel>f\\<parallel>\\<^sub>\\<infinity>", "apply (unfold vec_of_poly_as_vec_of_list linf_norm_vec_of_list linf_norm_poly_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<noteq> 0 \\<Longrightarrow>\n    Missing_Lemmas.max_list (map abs (rev (coeffs f)) @ [0::'a]) =\n    Missing_Lemmas.max_list (map abs (coeffs f) @ [0::'a])", "apply (subst (1 2) max_list_as_Greatest, auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["proof (state)\nthis:\n  \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> =\n  \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\n\ngoal (1 subgoal):\n 1. f = 0 \\<Longrightarrow>\n    \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> =\n    \\<parallel>f\\<parallel>\\<^sub>\\<infinity>", "qed simp"], ["", "lemma linf_norm_poly_as_Greatest:\n  fixes f :: \"'a :: ring_1_abs_real_line poly\"\n  shows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity> = (GREATEST a. a \\<in> abs ` set (coeffs f) \\<union> {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sub>\\<infinity> =\n    (GREATEST a. a \\<in> abs ` set (coeffs f) \\<union> {0::'a})", "using linf_norm_vec_as_Greatest[of \"vec_of_poly f\"]"], ["proof (prove)\nusing this:\n  \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity> =\n  (GREATEST a.\n      a \\<in> abs ` set (list_of_vec (vec_of_poly f)) \\<union> {0::'a})\n\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sub>\\<infinity> =\n    (GREATEST a. a \\<in> abs ` set (coeffs f) \\<union> {0::'a})", "by simp"], ["", "lemma vec_index_le_linf_norm:\n  fixes v :: \"'a :: ring_1_abs_real_line vec\"\n  assumes \"i < dim_vec v\"\n  shows \"\\<bar>v$i\\<bar> \\<le> \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>v $ i\\<bar> \\<le> \\<parallel>v\\<parallel>\\<^sub>\\<infinity>", "apply (unfold linf_norm_vec_def, rule le_max_list)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> set (map abs (list_of_vec v) @ [0::'a]);\n        b \\<in> set (map abs (list_of_vec v) @ [0::'a])\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 2. \\<bar>v $ i\\<bar> \\<le> ?b\n 3. ?b \\<in> set (map abs (list_of_vec v) @ [0::'a])", "using assms"], ["proof (prove)\nusing this:\n  i < dim_vec v\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> set (map abs (list_of_vec v) @ [0::'a]);\n        b \\<in> set (map abs (list_of_vec v) @ [0::'a])\\<rbrakk>\n       \\<Longrightarrow> a \\<le> b \\<or> b \\<le> a\n 2. \\<bar>v $ i\\<bar> \\<le> ?b\n 3. ?b \\<in> set (map abs (list_of_vec v) @ [0::'a])", "apply (auto simp:  in_set_conv_nth intro!: imageI exI[of _ i])"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma coeff_le_linf_norm:\n  fixes f :: \"'a :: ring_1_abs_real_line poly\"\n  shows \"\\<bar>coeff f i\\<bar> \\<le> \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>coeff f i\\<bar> \\<le> \\<parallel>f\\<parallel>\\<^sub>\\<infinity>", "using vec_index_le_linf_norm[of \"degree f - i\" \"vec_of_poly f\"]"], ["proof (prove)\nusing this:\n  degree f - i < dim_vec (vec_of_poly f) \\<Longrightarrow>\n  \\<bar>vec_of_poly f $ (degree f - i)\\<bar>\n  \\<le> \\<parallel>vec_of_poly f\\<parallel>\\<^sub>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<bar>coeff f i\\<bar> \\<le> \\<parallel>f\\<parallel>\\<^sub>\\<infinity>", "by (cases \"i \\<le> degree f\", auto simp: coeff_eq_0)"], ["", "class conjugatable_ring_1_abs_real_line = conjugatable_ring + ring_1_abs_real_line + power +\n  assumes sq_norm_as_sq_abs [simp]: \"\\<parallel>a\\<parallel>\\<^sup>2 = \\<bar>a\\<bar>\\<^sup>2\"\nbegin"], ["", "subclass conjugatable_ordered_ring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.conjugatable_ordered_ring conjugate (+) (0::'a) (-) uminus (*)\n     (\\<le>) (<)", "by (unfold_locales, simp)"], ["", "end"], ["", "instance int :: conjugatable_ring_1_abs_real_line"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(int, conjugatable_ring_1_abs_real_line_class)", "by (intro_classes, simp add: numeral_2_eq_2)"], ["", "instance rat :: conjugatable_ring_1_abs_real_line"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(rat, conjugatable_ring_1_abs_real_line_class)", "by (intro_classes, simp add: numeral_2_eq_2)"], ["", "instance real :: conjugatable_ring_1_abs_real_line"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(real, conjugatable_ring_1_abs_real_line_class)", "by (intro_classes, simp add: numeral_2_eq_2)"], ["", "instance complex :: semiring_1_real_line"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(complex, semiring_1_real_line_class)", "apply intro_classes"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> c * a < c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a < b; 0 < c\\<rbrakk> \\<Longrightarrow> a * c < b * c\n 3. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b\n 4. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * c \\<le> b * c\n 5. \\<And>a b.\n       \\<lbrakk>0 < a; b < 0\\<rbrakk>\n       \\<Longrightarrow> a + b < 0 \\<or> a + b = 0 \\<or> 0 < a + b\n 6. \\<And>a b. \\<lbrakk>a < 0; b < 0\\<rbrakk> \\<Longrightarrow> 0 < a * b\n 7. \\<And>a b.\n       \\<lbrakk>0 < a; 0 < b\\<rbrakk>\n       \\<Longrightarrow> a < b \\<or> a = b \\<or> b < a\n 8. \\<And>a b.\n       \\<lbrakk>a < 0; b < 0\\<rbrakk>\n       \\<Longrightarrow> a < b \\<or> a = b \\<or> b < a\n 9. 0 < 1", "by (auto simp: complex_eq_iff mult_le_cancel_left mult_le_cancel_right mult_neg_neg)"], ["", "text \\<open>\n  Due to the assumption @{thm abs_ge_self} from Groups.thy,\n  @{type complex} cannot be @{class ring_1_abs_real_line}!\n\\<close>"], ["", "instance complex :: ordered_ab_group_add_abs"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(complex, ordered_ab_group_add_abs_class)", "oops"], ["", "lemma sq_norm_as_sq_abs [simp]: \"(sq_norm :: 'a :: conjugatable_ring_1_abs_real_line \\<Rightarrow> 'a) = power2 \\<circ> abs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sq_norm = power2 \\<circ> abs", "by auto"], ["", "lemma sq_norm_vec_le_linf_norm:\n  fixes v :: \"'a :: {conjugatable_ring_1_abs_real_line} vec\"\n  assumes \"v \\<in> carrier_vec n\"\n  shows \"\\<parallel>v\\<parallel>\\<^sup>2 \\<le> of_nat n * \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>v\\<parallel>\\<^sup>2\n    \\<le> of_nat n * \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2", "proof (insert assms, induct rule: carrier_vec_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<parallel>vNil\\<parallel>\\<^sup>2\n    \\<le> of_nat 0 * \\<parallel>vNil\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n 2. \\<And>n a v.\n       \\<lbrakk>v \\<in> carrier_vec n;\n        \\<parallel>v\\<parallel>\\<^sup>2\n        \\<le> of_nat n *\n              \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> \\<parallel>vCons a v\\<parallel>\\<^sup>2\n                         \\<le> of_nat (Suc n) *\n                               \\<parallel>vCons a\n     v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2", "case (Suc n a v)"], ["proof (state)\nthis:\n  v \\<in> carrier_vec n\n  \\<parallel>v\\<parallel>\\<^sup>2\n  \\<le> of_nat n * \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<parallel>vNil\\<parallel>\\<^sup>2\n    \\<le> of_nat 0 * \\<parallel>vNil\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n 2. \\<And>n a v.\n       \\<lbrakk>v \\<in> carrier_vec n;\n        \\<parallel>v\\<parallel>\\<^sup>2\n        \\<le> of_nat n *\n              \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> \\<parallel>vCons a v\\<parallel>\\<^sup>2\n                         \\<le> of_nat (Suc n) *\n                               \\<parallel>vCons a\n     v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2", "have [dest!]: \"\\<not> \\<bar>a\\<bar> \\<le> \\<parallel>v\\<parallel>\\<^sub>\\<infinity> \\<Longrightarrow> of_nat n * \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2 \\<le> of_nat n * \\<bar>a\\<bar>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<bar>a\\<bar>\n           \\<le> \\<parallel>v\\<parallel>\\<^sub>\\<infinity> \\<Longrightarrow>\n    of_nat n * \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n    \\<le> of_nat n * \\<bar>a\\<bar>\\<^sup>2", "by (rule real_linorder_cases[of \"\\<bar>a\\<bar>\" \"\\<parallel>v\\<parallel>\\<^sub>\\<infinity>\"], insert Suc, auto simp: less_le intro!: power_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<not> \\<bar>a\\<bar>\n         \\<le> \\<parallel>v\\<parallel>\\<^sub>\\<infinity> \\<Longrightarrow>\n  of_nat n * \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n  \\<le> of_nat n * \\<bar>a\\<bar>\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<parallel>vNil\\<parallel>\\<^sup>2\n    \\<le> of_nat 0 * \\<parallel>vNil\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n 2. \\<And>n a v.\n       \\<lbrakk>v \\<in> carrier_vec n;\n        \\<parallel>v\\<parallel>\\<^sup>2\n        \\<le> of_nat n *\n              \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> \\<parallel>vCons a v\\<parallel>\\<^sup>2\n                         \\<le> of_nat (Suc n) *\n                               \\<parallel>vCons a\n     v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2", "from Suc"], ["proof (chain)\npicking this:\n  v \\<in> carrier_vec n\n  \\<parallel>v\\<parallel>\\<^sup>2\n  \\<le> of_nat n * \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2", "show ?case"], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec n\n  \\<parallel>v\\<parallel>\\<^sup>2\n  \\<le> of_nat n * \\<parallel>v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>vCons a v\\<parallel>\\<^sup>2\n    \\<le> of_nat (Suc n) *\n          \\<parallel>vCons a v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2", "by (auto simp: ring_distribs max_def intro!:add_mono power_mono)"], ["proof (state)\nthis:\n  \\<parallel>vCons a v\\<parallel>\\<^sup>2\n  \\<le> of_nat (Suc n) *\n        \\<parallel>vCons a v\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>vNil\\<parallel>\\<^sup>2\n    \\<le> of_nat 0 * \\<parallel>vNil\\<parallel>\\<^sub>\\<infinity>\\<^sup>2", "qed simp"], ["", "lemma sq_norm_poly_le_linf_norm:\n  fixes p :: \"'a :: {conjugatable_ring_1_abs_real_line} poly\"\n  shows \"\\<parallel>p\\<parallel>\\<^sup>2 \\<le> of_nat (degree p + 1) * \\<parallel>p\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>p\\<parallel>\\<^sup>2\n    \\<le> of_nat (degree p + 1) *\n          \\<parallel>p\\<parallel>\\<^sub>\\<infinity>\\<^sup>2", "using sq_norm_vec_le_linf_norm[of \"vec_of_poly p\" \"degree p + 1\"]"], ["proof (prove)\nusing this:\n  vec_of_poly p \\<in> carrier_vec (degree p + 1) \\<Longrightarrow>\n  \\<parallel>vec_of_poly p\\<parallel>\\<^sup>2\n  \\<le> of_nat (degree p + 1) *\n        \\<parallel>vec_of_poly p\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<parallel>p\\<parallel>\\<^sup>2\n    \\<le> of_nat (degree p + 1) *\n          \\<parallel>p\\<parallel>\\<^sub>\\<infinity>\\<^sup>2", "by (auto simp: carrier_dim_vec)"], ["", "lemma coeff_le_sq_norm:\n  fixes f :: \"'a :: {conjugatable_ring_1_abs_real_line} poly\"\n  shows \"\\<bar>coeff f i\\<bar>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>coeff f i\\<bar>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2", "proof (induct f arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<bar>coeff 0 i\\<bar>\\<^sup>2 \\<le> \\<parallel>0\\<parallel>\\<^sup>2\n 2. \\<And>a f i.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> f \\<noteq> 0;\n        \\<And>i.\n           \\<bar>coeff f i\\<bar>\\<^sup>2\n           \\<le> \\<parallel>f\\<parallel>\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n                         \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "case (pCons a f)"], ["proof (state)\nthis:\n  a \\<noteq> (0::'a) \\<or> f \\<noteq> 0\n  \\<bar>coeff f ?i\\<bar>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<bar>coeff 0 i\\<bar>\\<^sup>2 \\<le> \\<parallel>0\\<parallel>\\<^sup>2\n 2. \\<And>a f i.\n       \\<lbrakk>a \\<noteq> (0::'a) \\<or> f \\<noteq> 0;\n        \\<And>i.\n           \\<bar>coeff f i\\<bar>\\<^sup>2\n           \\<le> \\<parallel>f\\<parallel>\\<^sup>2\\<rbrakk>\n       \\<Longrightarrow> \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n                         \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow>\n       \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n       \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "case (Suc ii)"], ["proof (state)\nthis:\n  i = Suc ii\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow>\n       \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n       \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "note pCons(2)[of ii]"], ["proof (state)\nthis:\n  \\<bar>coeff f ii\\<bar>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow>\n       \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n       \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  \\<bar>coeff f ii\\<bar>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow>\n       \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n       \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "have \"\\<parallel>f\\<parallel>\\<^sup>2 \\<le> \\<bar>a\\<bar>\\<^sup>2 + \\<parallel>f\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2\n    \\<le> \\<bar>a\\<bar>\\<^sup>2 + \\<parallel>f\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  \\<parallel>f\\<parallel>\\<^sup>2\n  \\<le> \\<bar>a\\<bar>\\<^sup>2 + \\<parallel>f\\<parallel>\\<^sup>2\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow>\n       \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n       \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  \\<bar>coeff f ii\\<bar>\\<^sup>2\n  \\<le> \\<bar>a\\<bar>\\<^sup>2 + \\<parallel>f\\<parallel>\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<bar>coeff f ii\\<bar>\\<^sup>2\n  \\<le> \\<bar>a\\<bar>\\<^sup>2 + \\<parallel>f\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "unfolding Suc"], ["proof (prove)\nusing this:\n  \\<bar>coeff f ii\\<bar>\\<^sup>2\n  \\<le> \\<bar>a\\<bar>\\<^sup>2 + \\<parallel>f\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>coeff (pCons a f) (Suc ii)\\<bar>\\<^sup>2\n    \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n  \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow>\n    \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2", "qed auto"], ["proof (state)\nthis:\n  \\<bar>coeff (pCons a f) i\\<bar>\\<^sup>2\n  \\<le> \\<parallel>pCons a f\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<bar>coeff 0 i\\<bar>\\<^sup>2 \\<le> \\<parallel>0\\<parallel>\\<^sup>2", "qed simp"], ["", "lemma max_norm_witness:\n  fixes f :: \"'a :: ordered_ring_abs poly\"\n  shows \"\\<exists> i. \\<parallel>f\\<parallel>\\<^sub>\\<infinity> = \\<bar>coeff f i\\<bar>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<parallel>f\\<parallel>\\<^sub>\\<infinity> = \\<bar>coeff f i\\<bar>", "by (induct f, auto simp add: max_def intro: exI[of _ \"Suc _\"] exI[of _ 0])"], ["", "lemma max_norm_le_sq_norm:\n  fixes f ::  \"'a :: conjugatable_ring_1_abs_real_line poly\"\nshows \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n    \\<le> \\<parallel>f\\<parallel>\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n    \\<le> \\<parallel>f\\<parallel>\\<^sup>2", "from max_norm_witness[of f]"], ["proof (chain)\npicking this:\n  \\<exists>i.\n     \\<parallel>f\\<parallel>\\<^sub>\\<infinity> = \\<bar>coeff f i\\<bar>", "obtain i where id: \"\\<parallel>f\\<parallel>\\<^sub>\\<infinity> = \\<bar>coeff f i\\<bar>\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     \\<parallel>f\\<parallel>\\<^sub>\\<infinity> = \\<bar>coeff f i\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<parallel>f\\<parallel>\\<^sub>\\<infinity> =\n        \\<bar>coeff f i\\<bar> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<parallel>f\\<parallel>\\<^sub>\\<infinity> = \\<bar>coeff f i\\<bar>\n\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n    \\<le> \\<parallel>f\\<parallel>\\<^sup>2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n    \\<le> \\<parallel>f\\<parallel>\\<^sup>2", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>coeff f i\\<bar>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2", "using coeff_le_sq_norm[of f i]"], ["proof (prove)\nusing this:\n  \\<bar>coeff f i\\<bar>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>coeff f i\\<bar>\\<^sup>2 \\<le> \\<parallel>f\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  \\<parallel>f\\<parallel>\\<^sub>\\<infinity>\\<^sup>2\n  \\<le> \\<parallel>f\\<parallel>\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "(*TODO MOVE*)"], ["", "lemma (in conjugatable_ring) conjugate_minus: \"conjugate (x - y) = conjugate x - conjugate y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (x - y) = conjugate x - conjugate y", "by (unfold diff_conv_add_uminus conjugate_dist_add conjugate_neg, rule)"], ["", "lemma conjugate_1[simp]: \"(conjugate 1 :: 'a :: {conjugatable_ring, ring_1}) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (1::'a) = (1::'a)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. conjugate (1::'a) = (1::'a)", "have \"conjugate 1 * 1 = (conjugate 1 :: 'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (1::'a) * (1::'a) = conjugate (1::'a)", "by simp"], ["proof (state)\nthis:\n  conjugate (1::'a) * (1::'a) = conjugate (1::'a)\n\ngoal (1 subgoal):\n 1. conjugate (1::'a) = (1::'a)", "also"], ["proof (state)\nthis:\n  conjugate (1::'a) * (1::'a) = conjugate (1::'a)\n\ngoal (1 subgoal):\n 1. conjugate (1::'a) = (1::'a)", "have \"conjugate \\<dots> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (conjugate (1::'a)) = (1::'a)", "by simp"], ["proof (state)\nthis:\n  conjugate (conjugate (1::'a)) = (1::'a)\n\ngoal (1 subgoal):\n 1. conjugate (1::'a) = (1::'a)", "finally"], ["proof (chain)\npicking this:\n  conjugate (conjugate (1::'a) * (1::'a)) = (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  conjugate (conjugate (1::'a) * (1::'a)) = (1::'a)\n\ngoal (1 subgoal):\n 1. conjugate (1::'a) = (1::'a)", "by (unfold conjugate_dist_mul, simp)"], ["proof (state)\nthis:\n  conjugate (1::'a) = (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjugate_of_int [simp]:\n  \"(conjugate (of_int x) :: 'a :: {conjugatable_ring,ring_1}) = of_int x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (of_int x) = of_int x", "proof (induct x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n. conjugate (of_int (int n)) = of_int (int n)\n 2. \\<And>n. conjugate (of_int (- int (Suc n))) = of_int (- int (Suc n))", "case (nonneg n)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>n. conjugate (of_int (int n)) = of_int (int n)\n 2. \\<And>n. conjugate (of_int (- int (Suc n))) = of_int (- int (Suc n))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (of_int (int n)) = of_int (int n)", "by (induct n, auto simp: conjugate_dist_add)"], ["proof (state)\nthis:\n  conjugate (of_int (int n)) = of_int (int n)\n\ngoal (1 subgoal):\n 1. \\<And>n. conjugate (of_int (- int (Suc n))) = of_int (- int (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. conjugate (of_int (- int (Suc n))) = of_int (- int (Suc n))", "case (neg n)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>n. conjugate (of_int (- int (Suc n))) = of_int (- int (Suc n))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (of_int (- int (Suc n))) = of_int (- int (Suc n))", "apply (induct n, auto simp: conjugate_minus conjugate_neg)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       conjugate (of_nat n) = of_nat n \\<Longrightarrow>\n       conjugate (2::'a) = (2::'a)", "by (metis conjugate_1 conjugate_dist_add one_add_one)"], ["proof (state)\nthis:\n  conjugate (of_int (- int (Suc n))) = of_int (- int (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sq_norm_of_int: \"\\<parallel>map_vec of_int v :: 'a :: {conjugatable_ring,ring_1} vec\\<parallel>\\<^sup>2 = of_int \\<parallel>v\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>of_int_hom.vec_hom v\\<parallel>\\<^sup>2 =\n    of_int \\<parallel>v\\<parallel>\\<^sup>2", "unfolding sq_norm_vec_as_cscalar_prod scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec (conjugate (of_int_hom.vec_hom v)).\n        of_int_hom.vec_hom v $ i * conjugate (of_int_hom.vec_hom v) $ i) =\n    of_int (\\<Sum>i = 0..<dim_vec (conjugate v). v $ i * conjugate v $ i)", "unfolding hom_distribs"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec (conjugate (of_int_hom.vec_hom v)).\n        of_int_hom.vec_hom v $ i * conjugate (of_int_hom.vec_hom v) $ i) =\n    (\\<Sum>x = 0..<dim_vec (conjugate v).\n        of_int (v $ x) * of_int (conjugate v $ x))", "by (rule sum.cong, auto)"], ["", "definition \"norm1 p = sum_list (map abs (coeffs p))\""], ["", "lemma norm1_ge_0: \"norm1 (f :: 'a :: {abs,ordered_semiring_0,ordered_ab_group_add_abs}poly) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> norm1 f", "unfolding norm1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum_list (map abs (coeffs f))", "by (rule sum_list_nonneg, auto)"], ["", "lemma norm2_norm1_main_equality: fixes f :: \"nat \\<Rightarrow> 'a :: linordered_idom\" \n  shows \"(\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2 = (\\<Sum>i = 0..<n. f i * f i)\n      + (\\<Sum>i = 0..<n. \\<Sum>j = 0..<n. if i = j then 0 else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2 =\n    (\\<Sum>i = 0..<n. f i * f i) +\n    (\\<Sum>i = 0..<n.\n        \\<Sum>j = 0..<n.\n           if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Sum>i = 0..<0. \\<bar>f i\\<bar>)\\<^sup>2 =\n    (\\<Sum>i = 0..<0. f i * f i) +\n    (\\<Sum>i = 0..<0.\n        \\<Sum>j = 0..<0.\n           if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)\n 2. \\<And>n.\n       (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2 =\n       (\\<Sum>i = 0..<n. f i * f i) +\n       (\\<Sum>i = 0..<n.\n           \\<Sum>j = 0..<n.\n              if i = j then 0::'a\n              else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>) \\<Longrightarrow>\n       (\\<Sum>i = 0..<Suc n. \\<bar>f i\\<bar>)\\<^sup>2 =\n       (\\<Sum>i = 0..<Suc n. f i * f i) +\n       (\\<Sum>i = 0..<Suc n.\n           \\<Sum>j = 0..<Suc n.\n              if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)", "case (Suc n)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2 =\n  (\\<Sum>i = 0..<n. f i * f i) +\n  (\\<Sum>i = 0..<n.\n      \\<Sum>j = 0..<n.\n         if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)\n\ngoal (2 subgoals):\n 1. (\\<Sum>i = 0..<0. \\<bar>f i\\<bar>)\\<^sup>2 =\n    (\\<Sum>i = 0..<0. f i * f i) +\n    (\\<Sum>i = 0..<0.\n        \\<Sum>j = 0..<0.\n           if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)\n 2. \\<And>n.\n       (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2 =\n       (\\<Sum>i = 0..<n. f i * f i) +\n       (\\<Sum>i = 0..<n.\n           \\<Sum>j = 0..<n.\n              if i = j then 0::'a\n              else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>) \\<Longrightarrow>\n       (\\<Sum>i = 0..<Suc n. \\<bar>f i\\<bar>)\\<^sup>2 =\n       (\\<Sum>i = 0..<Suc n. f i * f i) +\n       (\\<Sum>i = 0..<Suc n.\n           \\<Sum>j = 0..<Suc n.\n              if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)", "have id: \"{0 ..< Suc n} = insert n {0 ..< n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<Suc n} = insert n {0..<n}", "by auto"], ["proof (state)\nthis:\n  {0..<Suc n} = insert n {0..<n}\n\ngoal (2 subgoals):\n 1. (\\<Sum>i = 0..<0. \\<bar>f i\\<bar>)\\<^sup>2 =\n    (\\<Sum>i = 0..<0. f i * f i) +\n    (\\<Sum>i = 0..<0.\n        \\<Sum>j = 0..<0.\n           if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)\n 2. \\<And>n.\n       (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2 =\n       (\\<Sum>i = 0..<n. f i * f i) +\n       (\\<Sum>i = 0..<n.\n           \\<Sum>j = 0..<n.\n              if i = j then 0::'a\n              else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>) \\<Longrightarrow>\n       (\\<Sum>i = 0..<Suc n. \\<bar>f i\\<bar>)\\<^sup>2 =\n       (\\<Sum>i = 0..<Suc n. f i * f i) +\n       (\\<Sum>i = 0..<Suc n.\n           \\<Sum>j = 0..<Suc n.\n              if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)", "have id: \"sum f {0 ..< Suc n} = f n + sum f {0 ..< n}\" for f :: \"nat \\<Rightarrow> 'a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {0..<Suc n} = f n + sum f {0..<n}", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f (insert n {0..<n}) = f n + sum f {0..<n}", "by (rule sum.insert, auto)"], ["proof (state)\nthis:\n  sum ?f {0..<Suc n} = ?f n + sum ?f {0..<n}\n\ngoal (2 subgoals):\n 1. (\\<Sum>i = 0..<0. \\<bar>f i\\<bar>)\\<^sup>2 =\n    (\\<Sum>i = 0..<0. f i * f i) +\n    (\\<Sum>i = 0..<0.\n        \\<Sum>j = 0..<0.\n           if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)\n 2. \\<And>n.\n       (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2 =\n       (\\<Sum>i = 0..<n. f i * f i) +\n       (\\<Sum>i = 0..<n.\n           \\<Sum>j = 0..<n.\n              if i = j then 0::'a\n              else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>) \\<Longrightarrow>\n       (\\<Sum>i = 0..<Suc n. \\<bar>f i\\<bar>)\\<^sup>2 =\n       (\\<Sum>i = 0..<Suc n. f i * f i) +\n       (\\<Sum>i = 0..<Suc n.\n           \\<Sum>j = 0..<Suc n.\n              if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<Suc n. \\<bar>f i\\<bar>)\\<^sup>2 =\n    (\\<Sum>i = 0..<Suc n. f i * f i) +\n    (\\<Sum>i = 0..<Suc n.\n        \\<Sum>j = 0..<Suc n.\n           if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)", "unfolding id power2_sum"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>f n\\<bar>\\<^sup>2 + (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2 +\n    (2::'a) * \\<bar>f n\\<bar> * (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>) =\n    f n * f n + (\\<Sum>i = 0..<n. f i * f i) +\n    ((if n = n then 0::'a else \\<bar>f n\\<bar> * \\<bar>f n\\<bar>) +\n     (\\<Sum>j = 0..<n.\n         if n = j then 0::'a else \\<bar>f n\\<bar> * \\<bar>f j\\<bar>) +\n     (\\<Sum>i = 0..<n.\n         (if i = n then 0::'a else \\<bar>f i\\<bar> * \\<bar>f n\\<bar>) +\n         (\\<Sum>j = 0..<n.\n             if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)))", "unfolding Suc"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>f n\\<bar>\\<^sup>2 +\n    ((\\<Sum>i = 0..<n. f i * f i) +\n     (\\<Sum>i = 0..<n.\n         \\<Sum>j = 0..<n.\n            if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)) +\n    (2::'a) * \\<bar>f n\\<bar> * (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>) =\n    f n * f n + (\\<Sum>i = 0..<n. f i * f i) +\n    ((if n = n then 0::'a else \\<bar>f n\\<bar> * \\<bar>f n\\<bar>) +\n     (\\<Sum>j = 0..<n.\n         if n = j then 0::'a else \\<bar>f n\\<bar> * \\<bar>f j\\<bar>) +\n     (\\<Sum>i = 0..<n.\n         (if i = n then 0::'a else \\<bar>f i\\<bar> * \\<bar>f n\\<bar>) +\n         (\\<Sum>j = 0..<n.\n             if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)))", "by (auto simp: power2_eq_square sum_distrib_left sum.distrib ac_simps)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<Suc n. \\<bar>f i\\<bar>)\\<^sup>2 =\n  (\\<Sum>i = 0..<Suc n. f i * f i) +\n  (\\<Sum>i = 0..<Suc n.\n      \\<Sum>j = 0..<Suc n.\n         if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<0. \\<bar>f i\\<bar>)\\<^sup>2 =\n    (\\<Sum>i = 0..<0. f i * f i) +\n    (\\<Sum>i = 0..<0.\n        \\<Sum>j = 0..<0.\n           if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)", "qed auto"], ["", "lemma norm2_norm1_main_inequality: fixes f :: \"nat \\<Rightarrow> 'a :: linordered_idom\" \n  shows \"(\\<Sum>i = 0..<n. f i * f i) \\<le> (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n. f i * f i)\n    \\<le> (\\<Sum>i = 0..<n. \\<bar>f i\\<bar>)\\<^sup>2", "unfolding norm2_norm1_main_equality"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n. f i * f i)\n    \\<le> (\\<Sum>i = 0..<n. f i * f i) +\n          (\\<Sum>i = 0..<n.\n              \\<Sum>j = 0..<n.\n                 if i = j then 0::'a else \\<bar>f i\\<bar> * \\<bar>f j\\<bar>)", "by (auto intro!: sum_nonneg)"], ["", "lemma norm2_le_norm1_int: \"\\<parallel>f :: int poly\\<parallel>\\<^sup>2 \\<le> (norm1 f)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 \\<le> (norm1 f)\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 \\<le> (norm1 f)\\<^sup>2", "define F where \"F = (!) (coeffs f)\""], ["proof (state)\nthis:\n  F = (!) (coeffs f)\n\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 \\<le> (norm1 f)\\<^sup>2", "define n where \"n = length (coeffs f)\""], ["proof (state)\nthis:\n  n = length (coeffs f)\n\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 \\<le> (norm1 f)\\<^sup>2", "have 1: \"\\<parallel>f\\<parallel>\\<^sup>2 = (\\<Sum>i = 0..<n. F i * F i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 = (\\<Sum>i = 0..<n. F i * F i)", "unfolding norm1_def sq_norm_poly_def sum_list_sum_nth F_def n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((!) (map sq_norm (coeffs f)))\n     {0..<length (map sq_norm (coeffs f))} =\n    (\\<Sum>i = 0..<length (coeffs f). coeffs f ! i * coeffs f ! i)", "by (subst sum.cong, auto simp: power2_eq_square)"], ["proof (state)\nthis:\n  \\<parallel>f\\<parallel>\\<^sup>2 = (\\<Sum>i = 0..<n. F i * F i)\n\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 \\<le> (norm1 f)\\<^sup>2", "have 2: \"norm1 f = (\\<Sum>i = 0..<n. \\<bar>F i\\<bar>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm1 f = (\\<Sum>i = 0..<n. \\<bar>F i\\<bar>)", "unfolding norm1_def sq_norm_poly_def sum_list_sum_nth F_def n_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((!) (map abs (coeffs f))) {0..<length (map abs (coeffs f))} =\n    (\\<Sum>i = 0..<length (coeffs f). \\<bar>coeffs f ! i\\<bar>)", "by (subst sum.cong, auto)"], ["proof (state)\nthis:\n  norm1 f = (\\<Sum>i = 0..<n. \\<bar>F i\\<bar>)\n\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 \\<le> (norm1 f)\\<^sup>2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>f\\<parallel>\\<^sup>2 \\<le> (norm1 f)\\<^sup>2", "unfolding 1 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<n. F i * F i)\n    \\<le> (\\<Sum>i = 0..<n. \\<bar>F i\\<bar>)\\<^sup>2", "by (rule norm2_norm1_main_inequality)"], ["proof (state)\nthis:\n  \\<parallel>f\\<parallel>\\<^sup>2 \\<le> (norm1 f)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sq_norm_smult_vec: \"sq_norm ((c :: 'a :: {conjugatable_ring,comm_semiring_0}) \\<cdot>\\<^sub>v v) = (c * conjugate c) * sq_norm v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>c \\<cdot>\\<^sub>v v\\<parallel>\\<^sup>2 =\n    sq_norm_conjugate c * \\<parallel>v\\<parallel>\\<^sup>2", "unfolding sq_norm_vec_as_cscalar_prod"], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<cdot>\\<^sub>v v) \\<bullet>c (c \\<cdot>\\<^sub>v v) =\n    sq_norm_conjugate c * (v \\<bullet>c v)", "by (subst scalar_prod_smult_left, force, unfold conjugate_smult_vec, \n    subst scalar_prod_smult_right, force, simp add: ac_simps)"], ["", "lemma vec_le_sq_norm:\n  fixes v :: \"'a :: conjugatable_ring_1_abs_real_line vec\"\n  assumes \"v \\<in> carrier_vec n\" \"i < n\"\n  shows \"\\<bar>v $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>v $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec n\n  i < n\n\ngoal (1 subgoal):\n 1. \\<bar>v $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2", "proof (induction v arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < 0 \\<Longrightarrow>\n       \\<bar>vNil $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>vNil\\<parallel>\\<^sup>2\n 2. \\<And>n a v i.\n       \\<lbrakk>v \\<in> carrier_vec n;\n        \\<And>i.\n           i < n \\<Longrightarrow>\n           \\<bar>v $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2;\n        i < Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n                         \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2", "case (Suc n a v i)"], ["proof (state)\nthis:\n  v \\<in> carrier_vec n\n  ?i < n \\<Longrightarrow>\n  \\<bar>v $ ?i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2\n  i < Suc n\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < 0 \\<Longrightarrow>\n       \\<bar>vNil $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>vNil\\<parallel>\\<^sup>2\n 2. \\<And>n a v i.\n       \\<lbrakk>v \\<in> carrier_vec n;\n        \\<And>i.\n           i < n \\<Longrightarrow>\n           \\<bar>v $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2;\n        i < Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n                         \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2", "note IH = Suc"], ["proof (state)\nthis:\n  v \\<in> carrier_vec n\n  ?i < n \\<Longrightarrow>\n  \\<bar>v $ ?i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2\n  i < Suc n\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < 0 \\<Longrightarrow>\n       \\<bar>vNil $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>vNil\\<parallel>\\<^sup>2\n 2. \\<And>n a v i.\n       \\<lbrakk>v \\<in> carrier_vec n;\n        \\<And>i.\n           i < n \\<Longrightarrow>\n           \\<bar>v $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2;\n        i < Suc n\\<rbrakk>\n       \\<Longrightarrow> \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n                         \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2", "proof (cases i)"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow>\n       \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n       \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2", "case (Suc ii)"], ["proof (state)\nthis:\n  i = Suc ii\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow>\n    \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2\n 2. \\<And>nat.\n       i = Suc nat \\<Longrightarrow>\n       \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n       \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  i = Suc ii", "show ?thesis"], ["proof (prove)\nusing this:\n  i = Suc ii\n\ngoal (1 subgoal):\n 1. \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2", "using IH IH(2)[of ii] le_add_same_cancel2 order_trans"], ["proof (prove)\nusing this:\n  i = Suc ii\n  v \\<in> carrier_vec n\n  ?i < n \\<Longrightarrow>\n  \\<bar>v $ ?i\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2\n  i < Suc n\n  ii < n \\<Longrightarrow>\n  \\<bar>v $ ii\\<bar>\\<^sup>2 \\<le> \\<parallel>v\\<parallel>\\<^sup>2\n  (?a \\<le> ?b + ?a) = ((0::?'a) \\<le> ?b)\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2", "by fastforce"], ["proof (state)\nthis:\n  \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n  \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. i = 0 \\<Longrightarrow>\n    \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n    \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2", "qed auto"], ["proof (state)\nthis:\n  \\<bar>vCons a v $ i\\<bar>\\<^sup>2\n  \\<le> \\<parallel>vCons a v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < 0 \\<Longrightarrow>\n       \\<bar>vNil $ i\\<bar>\\<^sup>2 \\<le> \\<parallel>vNil\\<parallel>\\<^sup>2", "qed auto"], ["", "class trivial_conjugatable =\n  conjugate +\n  assumes conjugate_id [simp]: \"conjugate x = x\""], ["", "class trivial_conjugatable_ordered_field = \n  conjugatable_ordered_field + trivial_conjugatable"], ["", "class trivial_conjugatable_linordered_field = \n  trivial_conjugatable_ordered_field + linordered_field\nbegin"], ["", "subclass conjugatable_ring_1_abs_real_line"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.conjugatable_ring_1_abs_real_line conjugate (+) (0::'a) (-) uminus\n     (*) (\\<le>) (<) abs (1::'a)", "by (standard) (auto simp add: semiring_normalization_rules)"], ["", "end"], ["", "instance rat :: trivial_conjugatable_linordered_field"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(rat, trivial_conjugatable_linordered_field_class)", "by (standard, auto)"], ["", "instance real :: trivial_conjugatable_linordered_field"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(real, trivial_conjugatable_linordered_field_class)", "by (standard, auto)"], ["", "lemma scalar_prod_ge_0: \"(x :: 'a :: linordered_idom vec) \\<bullet> x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> x \\<bullet> x", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> (\\<Sum>i = 0..<dim_vec x. x $ i * x $ i)", "by (rule sum_nonneg, auto)"], ["", "lemma cscalar_prod_is_scalar_prod[simp]: \"(x :: 'a :: trivial_conjugatable_ordered_field vec) \\<bullet>c y = x \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<bullet>c y = x \\<bullet> y", "unfolding conjugate_id"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<bullet>c y = x \\<bullet> y", "by (rule arg_cong[of _ _ \"scalar_prod x\"], auto)"], ["", "lemma scalar_prod_Cauchy:\n  fixes u v::\"'a :: {trivial_conjugatable_linordered_field} Matrix.vec\"\n  assumes \"u \\<in> carrier_vec n\" \"v \\<in> carrier_vec n\"\n  shows \"(u \\<bullet> v)\\<^sup>2 \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "assume v_0: \"v \\<noteq> 0\\<^sub>v n\""], ["proof (state)\nthis:\n  v \\<noteq> 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "have \"0 \\<le> (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v)\" for r"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v)", "by (simp add: scalar_prod_ge_0)"], ["proof (state)\nthis:\n  (0::'a)\n  \\<le> (u - ?r \\<cdot>\\<^sub>v v) \\<bullet> (u - ?r \\<cdot>\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  (0::'a)\n  \\<le> (u - ?r \\<cdot>\\<^sub>v v) \\<bullet> (u - ?r \\<cdot>\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "have \"(u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) = u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) + r * r * (v \\<bullet> v)\" for r::'a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "have \"(u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) = (u - r \\<cdot>\\<^sub>v v) \\<bullet> u - (u - r \\<cdot>\\<^sub>v v) \\<bullet> (r \\<cdot>\\<^sub>v v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    (u - r \\<cdot>\\<^sub>v v) \\<bullet> u -\n    (u - r \\<cdot>\\<^sub>v v) \\<bullet> (r \\<cdot>\\<^sub>v v)", "using assms"], ["proof (prove)\nusing this:\n  u \\<in> carrier_vec n\n  v \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    (u - r \\<cdot>\\<^sub>v v) \\<bullet> u -\n    (u - r \\<cdot>\\<^sub>v v) \\<bullet> (r \\<cdot>\\<^sub>v v)", "by (subst scalar_prod_minus_distrib) auto"], ["proof (state)\nthis:\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> u -\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> (r \\<cdot>\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "also"], ["proof (state)\nthis:\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> u -\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> (r \\<cdot>\\<^sub>v v)\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "have \"\\<dots> = u \\<bullet> u - (r \\<cdot>\\<^sub>v v) \\<bullet> u - r * ((u - r \\<cdot>\\<^sub>v v) \\<bullet> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> u -\n    (u - r \\<cdot>\\<^sub>v v) \\<bullet> (r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - (r \\<cdot>\\<^sub>v v) \\<bullet> u -\n    r * ((u - r \\<cdot>\\<^sub>v v) \\<bullet> v)", "using assms"], ["proof (prove)\nusing this:\n  u \\<in> carrier_vec n\n  v \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> u -\n    (u - r \\<cdot>\\<^sub>v v) \\<bullet> (r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - (r \\<cdot>\\<^sub>v v) \\<bullet> u -\n    r * ((u - r \\<cdot>\\<^sub>v v) \\<bullet> v)", "by (subst minus_scalar_prod_distrib) auto"], ["proof (state)\nthis:\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> u -\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> (r \\<cdot>\\<^sub>v v) =\n  u \\<bullet> u - (r \\<cdot>\\<^sub>v v) \\<bullet> u -\n  r * ((u - r \\<cdot>\\<^sub>v v) \\<bullet> v)\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "also"], ["proof (state)\nthis:\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> u -\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> (r \\<cdot>\\<^sub>v v) =\n  u \\<bullet> u - (r \\<cdot>\\<^sub>v v) \\<bullet> u -\n  r * ((u - r \\<cdot>\\<^sub>v v) \\<bullet> v)\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "have \"\\<dots> = u \\<bullet> u - r * (v \\<bullet> u) - r * (u \\<bullet> v - r * (v \\<bullet> v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<bullet> u - (r \\<cdot>\\<^sub>v v) \\<bullet> u -\n    r * ((u - r \\<cdot>\\<^sub>v v) \\<bullet> v) =\n    u \\<bullet> u - r * (v \\<bullet> u) -\n    r * (u \\<bullet> v - r * (v \\<bullet> v))", "using assms"], ["proof (prove)\nusing this:\n  u \\<in> carrier_vec n\n  v \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. u \\<bullet> u - (r \\<cdot>\\<^sub>v v) \\<bullet> u -\n    r * ((u - r \\<cdot>\\<^sub>v v) \\<bullet> v) =\n    u \\<bullet> u - r * (v \\<bullet> u) -\n    r * (u \\<bullet> v - r * (v \\<bullet> v))", "by (subst minus_scalar_prod_distrib) auto"], ["proof (state)\nthis:\n  u \\<bullet> u - (r \\<cdot>\\<^sub>v v) \\<bullet> u -\n  r * ((u - r \\<cdot>\\<^sub>v v) \\<bullet> v) =\n  u \\<bullet> u - r * (v \\<bullet> u) -\n  r * (u \\<bullet> v - r * (v \\<bullet> v))\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "also"], ["proof (state)\nthis:\n  u \\<bullet> u - (r \\<cdot>\\<^sub>v v) \\<bullet> u -\n  r * ((u - r \\<cdot>\\<^sub>v v) \\<bullet> v) =\n  u \\<bullet> u - r * (v \\<bullet> u) -\n  r * (u \\<bullet> v - r * (v \\<bullet> v))\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "have \"\\<dots> = u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) + r * r * (v \\<bullet> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<bullet> u - r * (v \\<bullet> u) -\n    r * (u \\<bullet> v - r * (v \\<bullet> v)) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "using assms comm_scalar_prod"], ["proof (prove)\nusing this:\n  u \\<in> carrier_vec n\n  v \\<in> carrier_vec n\n  \\<lbrakk>?v\\<^sub>1 \\<in> carrier_vec ?n;\n   ?v\\<^sub>2 \\<in> carrier_vec ?n\\<rbrakk>\n  \\<Longrightarrow> ?v\\<^sub>1 \\<bullet> ?v\\<^sub>2 =\n                    ?v\\<^sub>2 \\<bullet> ?v\\<^sub>1\n\ngoal (1 subgoal):\n 1. u \\<bullet> u - r * (v \\<bullet> u) -\n    r * (u \\<bullet> v - r * (v \\<bullet> v)) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  u \\<bullet> u - r * (v \\<bullet> u) -\n  r * (u \\<bullet> v - r * (v \\<bullet> v)) =\n  u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n  r * r * (v \\<bullet> v)\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "finally"], ["proof (chain)\npicking this:\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n  u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n  r * r * (v \\<bullet> v)", "show ?thesis"], ["proof (prove)\nusing this:\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n  u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n  r * r * (v \\<bullet> v)\n\ngoal (1 subgoal):\n 1. (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n    u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v)", "by simp"], ["proof (state)\nthis:\n  (u - r \\<cdot>\\<^sub>v v) \\<bullet> (u - r \\<cdot>\\<^sub>v v) =\n  u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n  r * r * (v \\<bullet> v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (u - ?r \\<cdot>\\<^sub>v v) \\<bullet> (u - ?r \\<cdot>\\<^sub>v v) =\n  u \\<bullet> u - ?r * (u \\<bullet> v) - ?r * (u \\<bullet> v) +\n  ?r * ?r * (v \\<bullet> v)\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "also"], ["proof (state)\nthis:\n  (u - ?r \\<cdot>\\<^sub>v v) \\<bullet> (u - ?r \\<cdot>\\<^sub>v v) =\n  u \\<bullet> u - ?r * (u \\<bullet> v) - ?r * (u \\<bullet> v) +\n  ?r * ?r * (v \\<bullet> v)\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "have \"u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) + r * r * (v \\<bullet> v) = sq_norm u - (u \\<bullet> v)\\<^sup>2 / sq_norm v\"\n      if \"r = (u \\<bullet> v) / (v \\<bullet> v)\" for r"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<bullet> u - r * (u \\<bullet> v) - r * (u \\<bullet> v) +\n    r * r * (v \\<bullet> v) =\n    \\<parallel>u\\<parallel>\\<^sup>2 -\n    (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2", "unfolding that"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<bullet> u - u \\<bullet> v / (v \\<bullet> v) * (u \\<bullet> v) -\n    u \\<bullet> v / (v \\<bullet> v) * (u \\<bullet> v) +\n    u \\<bullet> v / (v \\<bullet> v) * (u \\<bullet> v / (v \\<bullet> v)) *\n    (v \\<bullet> v) =\n    \\<parallel>u\\<parallel>\\<^sup>2 -\n    (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2", "by (auto simp add: sq_norm_vec_as_cscalar_prod power2_eq_square)"], ["proof (state)\nthis:\n  ?r = u \\<bullet> v / (v \\<bullet> v) \\<Longrightarrow>\n  u \\<bullet> u - ?r * (u \\<bullet> v) - ?r * (u \\<bullet> v) +\n  ?r * ?r * (v \\<bullet> v) =\n  \\<parallel>u\\<parallel>\\<^sup>2 -\n  (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  ?r1 = u \\<bullet> v / (v \\<bullet> v) \\<Longrightarrow>\n  (0::'a)\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 -\n        (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2", "have \"0 \\<le> \\<parallel>u\\<parallel>\\<^sup>2 - (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\""], ["proof (prove)\nusing this:\n  ?r1 = u \\<bullet> v / (v \\<bullet> v) \\<Longrightarrow>\n  (0::'a)\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 -\n        (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (0::'a)\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 -\n          (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  (0::'a)\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 -\n        (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  (0::'a)\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 -\n        (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2", "have \"(u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2 \\<le> \\<parallel>u\\<parallel>\\<^sup>2\""], ["proof (prove)\nusing this:\n  (0::'a)\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 -\n        (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2", "have \"(u \\<bullet> v)\\<^sup>2 \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2\""], ["proof (prove)\nusing this:\n  (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "using pos_divide_le_eq[of \"\\<parallel>v\\<parallel>\\<^sup>2\"] v_0 assms"], ["proof (prove)\nusing this:\n  (u \\<bullet> v)\\<^sup>2 / \\<parallel>v\\<parallel>\\<^sup>2\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2\n  (0::'a) < \\<parallel>v\\<parallel>\\<^sup>2 \\<Longrightarrow>\n  (?b / \\<parallel>v\\<parallel>\\<^sup>2 \\<le> ?a) =\n  (?b \\<le> ?a * \\<parallel>v\\<parallel>\\<^sup>2)\n  v \\<noteq> 0\\<^sub>v n\n  u \\<in> carrier_vec n\n  v \\<in> carrier_vec n\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "by (auto)"], ["proof (state)\nthis:\n  (u \\<bullet> v)\\<^sup>2\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "}"], ["proof (state)\nthis:\n  v \\<noteq> 0\\<^sub>v n \\<Longrightarrow>\n  (u \\<bullet> v)\\<^sup>2\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "then"], ["proof (chain)\npicking this:\n  v \\<noteq> 0\\<^sub>v n \\<Longrightarrow>\n  (u \\<bullet> v)\\<^sup>2\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  v \\<noteq> 0\\<^sub>v n \\<Longrightarrow>\n  (u \\<bullet> v)\\<^sup>2\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (u \\<bullet> v)\\<^sup>2\n    \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2", "by (fastforce simp add: assms)"], ["proof (state)\nthis:\n  (u \\<bullet> v)\\<^sup>2\n  \\<le> \\<parallel>u\\<parallel>\\<^sup>2 * \\<parallel>v\\<parallel>\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}