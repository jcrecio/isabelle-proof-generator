{"file_name": "/home/qj213/afp-2021-10-22/thys/LLL_Basis_Reduction/Int_Rat_Operations.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LLL_Basis_Reduction", "problem_names": ["lemma int_times_rat_code[code abstract]: \"quotient_of (int_times_rat i x) =\n  (case quotient_of x of (n,d) \\<Rightarrow> Rat.normalize (i * n, d))\"", "lemma quotient_of_square: assumes \"quotient_of x = (a,b)\"\n  shows \"quotient_of (x * x) = (a * a, b * b)\"", "lemma square_rat_code[code abstract]: \"quotient_of (square_rat x) = (case quotient_of x of (n,d)\n  \\<Rightarrow> (n * n, d * d))\"", "lemma scalar_prod_int_rat_code[code]: \"v \\<bullet>i w = (\\<Sum>i = 0..<dim_vec v. int_times_rat (v $ i) (w $ i))\"", "lemma scalar_prod_int_rat[simp]: \"dim_vec x = dim_vec y \\<Longrightarrow> x \\<bullet>i y = map_vec of_int x \\<bullet> y\"", "lemma sq_norm_vec_rat_code[code]: \"sq_norm_vec_rat x = (\\<Sum>x\\<leftarrow>list_of_vec x. square_rat x)\""], "translations": [["", "lemma int_times_rat_code[code abstract]: \"quotient_of (int_times_rat i x) =\n  (case quotient_of x of (n,d) \\<Rightarrow> Rat.normalize (i * n, d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quotient_of (int_times_rat i x) =\n    (case quotient_of x of (n, d) \\<Rightarrow> Rat.normalize (i * n, d))", "unfolding int_times_rat_def rat_times_code"], ["proof (prove)\ngoal (1 subgoal):\n 1. (let (a, c) = quotient_of (rat_of_int i); (b, d) = quotient_of x\n     in Rat.normalize (a * b, c * d)) =\n    (case quotient_of x of (n, d) \\<Rightarrow> Rat.normalize (i * n, d))", "by auto"], ["", "definition square_rat :: \"rat \\<Rightarrow> rat\" where [simp]: \"square_rat x = x * x\""], ["", "lemma quotient_of_square: assumes \"quotient_of x = (a,b)\"\n  shows \"quotient_of (x * x) = (a * a, b * b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quotient_of (x * x) = (a * a, b * b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. quotient_of (x * x) = (a * a, b * b)", "have b0: \"b > 0\" \"b \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < b &&& b \\<noteq> 0", "using quotient_of_denom_pos[OF assms]"], ["proof (prove)\nusing this:\n  0 < b\n\ngoal (1 subgoal):\n 1. 0 < b &&& b \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  0 < b\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. quotient_of (x * x) = (a * a, b * b)", "hence b: \"(b * b > 0) = True\""], ["proof (prove)\nusing this:\n  0 < b\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (0 < b * b) = True", "by auto"], ["proof (state)\nthis:\n  (0 < b * b) = True\n\ngoal (1 subgoal):\n 1. quotient_of (x * x) = (a * a, b * b)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. quotient_of (x * x) = (a * a, b * b)", "unfolding rat_times_code assms Let_def split Rat.normalize_def fst_conv snd_conv b if_True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * a div gcd (a * a) (b * b), b * b div gcd (a * a) (b * b)) =\n    (a * a, b * b)", "using quotient_of_coprime[OF assms] b0"], ["proof (prove)\nusing this:\n  algebraic_semidom_class.coprime a b\n  0 < b\n  b \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (a * a div gcd (a * a) (b * b), b * b div gcd (a * a) (b * b)) =\n    (a * a, b * b)", "by simp"], ["proof (state)\nthis:\n  quotient_of (x * x) = (a * a, b * b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma square_rat_code[code abstract]: \"quotient_of (square_rat x) = (case quotient_of x of (n,d)\n  \\<Rightarrow> (n * n, d * d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quotient_of (square_rat x) =\n    (case quotient_of x of (n, d) \\<Rightarrow> (n * n, d * d))", "using quotient_of_square[of x]"], ["proof (prove)\nusing this:\n  quotient_of x = (?a, ?b) \\<Longrightarrow>\n  quotient_of (x * x) = (?a * ?a, ?b * ?b)\n\ngoal (1 subgoal):\n 1. quotient_of (square_rat x) =\n    (case quotient_of x of (n, d) \\<Rightarrow> (n * n, d * d))", "unfolding square_rat_def"], ["proof (prove)\nusing this:\n  quotient_of x = (?a, ?b) \\<Longrightarrow>\n  quotient_of (x * x) = (?a * ?a, ?b * ?b)\n\ngoal (1 subgoal):\n 1. quotient_of (x * x) =\n    (case quotient_of x of (n, d) \\<Rightarrow> (n * n, d * d))", "by (cases \"quotient_of x\", auto)"], ["", "definition scalar_prod_int_rat :: \"int vec \\<Rightarrow> rat vec \\<Rightarrow> rat\" (infix \"\\<bullet>i\" 70) where\n  \"x \\<bullet>i y = (y \\<bullet> map_vec rat_of_int x)\""], ["", "lemma scalar_prod_int_rat_code[code]: \"v \\<bullet>i w = (\\<Sum>i = 0..<dim_vec v. int_times_rat (v $ i) (w $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<bullet>i w =\n    (\\<Sum>i = 0..<dim_vec v. int_times_rat (v $ i) (w $ i))", "unfolding scalar_prod_int_rat_def Let_def scalar_prod_def int_times_rat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<dim_vec (of_int_hom.vec_hom v).\n        w $ i * of_int_hom.vec_hom v $ i) =\n    (\\<Sum>i = 0..<dim_vec v. rat_of_int (v $ i) * w $ i)", "by (rule sum.cong, auto)"], ["", "lemma scalar_prod_int_rat[simp]: \"dim_vec x = dim_vec y \\<Longrightarrow> x \\<bullet>i y = map_vec of_int x \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec x = dim_vec y \\<Longrightarrow>\n    x \\<bullet>i y = of_int_hom.vec_hom x \\<bullet> y", "unfolding scalar_prod_int_rat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec x = dim_vec y \\<Longrightarrow>\n    y \\<bullet> of_int_hom.vec_hom x = of_int_hom.vec_hom x \\<bullet> y", "by (intro comm_scalar_prod[of _ \"dim_vec x\"], auto intro: carrier_vecI)"], ["", "definition sq_norm_vec_rat :: \"rat vec \\<Rightarrow> rat\" where [simp]: \"sq_norm_vec_rat x = sq_norm_vec x\""], ["", "lemma sq_norm_vec_rat_code[code]: \"sq_norm_vec_rat x = (\\<Sum>x\\<leftarrow>list_of_vec x. square_rat x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sq_norm_vec_rat x = sum_list (map square_rat (list_of_vec x))", "unfolding sq_norm_vec_rat_def sq_norm_vec_def square_rat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum_list (map sq_norm (list_of_vec x)) =\n    (\\<Sum>x\\<leftarrow>list_of_vec x. x * x)", "by auto"], ["", "end"]]}