{"file_name": "/home/qj213/afp-2021-10-22/thys/First_Order_Terms/Term_Pair_Multiset.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/First_Order_Terms", "problem_names": ["lemma fold_pair_size_plus:\n  \"fold_mset ((+) \\<circ> pair_size) 0 M + n = fold_mset ((+) \\<circ> pair_size) n M\"", "lemma size_mset_union [simp]:\n  \"size_mset (M + N) = size_mset N + size_mset M\"", "lemma size_mset_add_mset [simp]:\n  \"size_mset (add_mset x M) = pair_size x + (size_mset M)\"", "lemma nonempty_size_mset [simp]:\n  assumes \"M \\<noteq> {#}\"\n  shows \"size_mset M > 0\"", "lemma size_mset_singleton [simp]:\n  \"size_mset {#(l, r)#} = size l + size r + 1\"", "lemma size_mset_empty [simp]:\n  \"size_mset {#} = 0\"", "lemma size_mset_set_zip_leq:\n  \"size_mset (mset (zip ss ts)) \\<le> size_list size ss + size_list size ts\"", "lemma size_mset_Fun_less:\n  \"size_mset {#(Fun f ss, Fun g ts)#} > size_mset (mset (zip ss ts))\"", "lemma decomp_size_mset_less:\n  assumes \"length ss = length ts\"\n  shows \"size_mset (M + mset (zip ss ts)) < size_mset (M + {#(Fun f ss, Fun f ts)#})\"", "lemma subst_mset_empty [simp]:\n  \"subst_mset \\<sigma> {#} = {#}\"", "lemma subst_mset_union:\n  \"subst_mset \\<sigma> (M + N) = subst_mset \\<sigma> M + subst_mset \\<sigma> N\"", "lemma subst_mset_Var [simp]:\n  \"subst_mset Var M = M\"", "lemma subst_mset_subst_compose [simp]:\n  \"subst_mset (\\<sigma> \\<circ>\\<^sub>s \\<tau>) M = subst_mset \\<tau> (subst_mset \\<sigma> M)\"", "lemma vars_mset_singleton [simp]:\n  \"vars_mset {#p#} = vars_term (fst p) \\<union> vars_term (snd p)\"", "lemma vars_mset_union [simp]:\n  \"vars_mset (A + B) = vars_mset A \\<union> vars_mset B\"", "lemma vars_mset_add_mset [simp]:\n  \"vars_mset (add_mset x M) = vars_term (fst x) \\<union> vars_term (snd x) \\<union> vars_mset M\"", "lemma vars_mset_set_zip [simp]:\n  assumes \"length xs = length ys\"\n  shows \"vars_mset (mset (zip xs ys)) = (\\<Union>x\\<in>set xs \\<union> set ys. vars_term x)\"", "lemma not_in_vars_mset_subst_mset [simp]:\n  assumes \"x \\<notin> vars_term t\"\n  shows \"x \\<notin> vars_mset (subst_mset (subst x t) M)\"", "lemma vars_mset_subst_mset_subset:\n  \"vars_mset (subst_mset (subst x t) M) \\<subseteq> vars_mset M \\<union> vars_term t \\<union> {x}\" (is \"?L \\<subseteq> ?R\")", "lemma Var_left_vars_mset_less:\n  assumes \"x \\<notin> vars_term t\"\n  shows \"vars_mset (subst_mset (subst x t) M) \\<subset> vars_mset (add_mset (Var x, t) M)\" (is \"?L \\<subset> ?R\")", "lemma Var_right_vars_mset_less:\n  assumes \"x \\<notin> vars_term t\"\n  shows \"vars_mset (subst_mset (subst x t) M) \\<subset> vars_mset (add_mset (t, Var x) M)\"", "lemma mem_vars_mset_subst_mset:\n  assumes \"y \\<in> vars_mset (subst_mset (subst x t) M)\"\n    and \"y \\<noteq> x\"\n    and \"y \\<notin> vars_term t\"\n  shows \"y \\<in> vars_mset M\"", "lemma finite_vars_mset:\n  \"finite (vars_mset A)\""], "translations": [["", "lemma fold_pair_size_plus:\n  \"fold_mset ((+) \\<circ> pair_size) 0 M + n = fold_mset ((+) \\<circ> pair_size) n M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fold_mset ((+) \\<circ> pair_size) 0 M + n =\n    fold_mset ((+) \\<circ> pair_size) n M", "by (induct M arbitrary: n) (simp add: size_mset_def)+"], ["", "lemma size_mset_union [simp]:\n  \"size_mset (M + N) = size_mset N + size_mset M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size_mset (M + N) = size_mset N + size_mset M", "by (auto simp: size_mset_def fold_pair_size_plus)"], ["", "lemma size_mset_add_mset [simp]:\n  \"size_mset (add_mset x M) = pair_size x + (size_mset M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size_mset (add_mset x M) = pair_size x + size_mset M", "by (auto simp: size_mset_def)"], ["", "lemma nonempty_size_mset [simp]:\n  assumes \"M \\<noteq> {#}\"\n  shows \"size_mset M > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < size_mset M", "using assms"], ["proof (prove)\nusing this:\n  M \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. 0 < size_mset M", "by (induct M) (simp add: size_mset_def pair_size_def)+"], ["", "lemma size_mset_singleton [simp]:\n  \"size_mset {#(l, r)#} = size l + size r + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size_mset {#(l, r)#} = size l + size r + 1", "by (auto simp: size_mset_def pair_size_def)"], ["", "lemma size_mset_empty [simp]:\n  \"size_mset {#} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size_mset {#} = 0", "by (auto simp: size_mset_def)"], ["", "lemma size_mset_set_zip_leq:\n  \"size_mset (mset (zip ss ts)) \\<le> size_list size ss + size_list size ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size_mset (mset (zip ss ts)) \\<le> size_list size ss + size_list size ts", "proof (induct ss arbitrary: ts)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ts.\n       size_mset (mset (zip [] ts))\n       \\<le> size_list size [] + size_list size ts\n 2. \\<And>a ss ts.\n       (\\<And>ts.\n           size_mset (mset (zip ss ts))\n           \\<le> size_list size ss + size_list size ts) \\<Longrightarrow>\n       size_mset (mset (zip (a # ss) ts))\n       \\<le> size_list size (a # ss) + size_list size ts", "case (Cons s ss)"], ["proof (state)\nthis:\n  size_mset (mset (zip ss ?ts)) \\<le> size_list size ss + size_list size ?ts\n\ngoal (2 subgoals):\n 1. \\<And>ts.\n       size_mset (mset (zip [] ts))\n       \\<le> size_list size [] + size_list size ts\n 2. \\<And>a ss ts.\n       (\\<And>ts.\n           size_mset (mset (zip ss ts))\n           \\<le> size_list size ss + size_list size ts) \\<Longrightarrow>\n       size_mset (mset (zip (a # ss) ts))\n       \\<le> size_list size (a # ss) + size_list size ts", "then"], ["proof (chain)\npicking this:\n  size_mset (mset (zip ss ?ts)) \\<le> size_list size ss + size_list size ?ts", "show ?case"], ["proof (prove)\nusing this:\n  size_mset (mset (zip ss ?ts)) \\<le> size_list size ss + size_list size ?ts\n\ngoal (1 subgoal):\n 1. size_mset (mset (zip (s # ss) ts))\n    \\<le> size_list size (s # ss) + size_list size ts", "by (cases ts) (auto intro: le_SucI simp: pair_size_def)"], ["proof (state)\nthis:\n  size_mset (mset (zip (s # ss) ts))\n  \\<le> size_list size (s # ss) + size_list size ts\n\ngoal (1 subgoal):\n 1. \\<And>ts.\n       size_mset (mset (zip [] ts))\n       \\<le> size_list size [] + size_list size ts", "qed simp"], ["", "lemma size_mset_Fun_less:\n  \"size_mset {#(Fun f ss, Fun g ts)#} > size_mset (mset (zip ss ts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size_mset (mset (zip ss ts)) < size_mset {#(Fun f ss, Fun g ts)#}", "by (auto simp: pair_size_def intro: order_le_less_trans size_mset_set_zip_leq)"], ["", "lemma decomp_size_mset_less:\n  assumes \"length ss = length ts\"\n  shows \"size_mset (M + mset (zip ss ts)) < size_mset (M + {#(Fun f ss, Fun f ts)#})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size_mset (M + mset (zip ss ts))\n    < size_mset (M + {#(Fun f ss, Fun f ts)#})", "using assms and size_mset_Fun_less [of ss ts f f]"], ["proof (prove)\nusing this:\n  length ss = length ts\n  size_mset (mset (zip ss ts)) < size_mset {#(Fun f ss, Fun f ts)#}\n\ngoal (1 subgoal):\n 1. size_mset (M + mset (zip ss ts))\n    < size_mset (M + {#(Fun f ss, Fun f ts)#})", "by simp"], ["", "subsubsection \\<open>Substitutions\\<close>"], ["", "text \\<open>Applying a substitution to a multiset of term pairs.\\<close>"], ["", "definition \"subst_mset \\<sigma> M = image_mset (\\<lambda>p. (fst p \\<cdot> \\<sigma>, snd p \\<cdot> \\<sigma>)) M\""], ["", "lemma subst_mset_empty [simp]:\n  \"subst_mset \\<sigma> {#} = {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_mset \\<sigma> {#} = {#}", "by (auto simp: subst_mset_def)"], ["", "lemma subst_mset_union:\n  \"subst_mset \\<sigma> (M + N) = subst_mset \\<sigma> M + subst_mset \\<sigma> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_mset \\<sigma> (M + N) =\n    subst_mset \\<sigma> M + subst_mset \\<sigma> N", "by (auto simp: subst_mset_def)"], ["", "lemma subst_mset_Var [simp]:\n  \"subst_mset Var M = M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_mset Var M = M", "by (auto simp: subst_mset_def)"], ["", "lemma subst_mset_subst_compose [simp]:\n  \"subst_mset (\\<sigma> \\<circ>\\<^sub>s \\<tau>) M = subst_mset \\<tau> (subst_mset \\<sigma> M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_mset (\\<sigma> \\<circ>\\<^sub>s \\<tau>) M =\n    subst_mset \\<tau> (subst_mset \\<sigma> M)", "by (simp add: subst_mset_def image_mset.compositionality o_def)"], ["", "subsubsection \\<open>Variables\\<close>"], ["", "text \\<open>Compute the set of variables occurring in a multiset of term pairs.\\<close>"], ["", "definition \"vars_mset M = \\<Union>(set_mset (image_mset (\\<lambda>r. vars_term (fst r) \\<union> vars_term (snd r)) M))\""], ["", "lemma vars_mset_singleton [simp]:\n  \"vars_mset {#p#} = vars_term (fst p) \\<union> vars_term (snd p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset {#p#} = vars_term (fst p) \\<union> vars_term (snd p)", "by (auto simp: vars_mset_def)"], ["", "lemma vars_mset_union [simp]:\n  \"vars_mset (A + B) = vars_mset A \\<union> vars_mset B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (A + B) = vars_mset A \\<union> vars_mset B", "by (auto simp: vars_mset_def)"], ["", "lemma vars_mset_add_mset [simp]:\n  \"vars_mset (add_mset x M) = vars_term (fst x) \\<union> vars_term (snd x) \\<union> vars_mset M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (add_mset x M) =\n    vars_term (fst x) \\<union> vars_term (snd x) \\<union> vars_mset M", "by (auto simp: vars_mset_def)"], ["", "lemma vars_mset_set_zip [simp]:\n  assumes \"length xs = length ys\"\n  shows \"vars_mset (mset (zip xs ys)) = (\\<Union>x\\<in>set xs \\<union> set ys. vars_term x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (mset (zip xs ys)) =\n    \\<Union> (vars_term ` (set xs \\<union> set ys))", "using assms"], ["proof (prove)\nusing this:\n  length xs = length ys\n\ngoal (1 subgoal):\n 1. vars_mset (mset (zip xs ys)) =\n    \\<Union> (vars_term ` (set xs \\<union> set ys))", "by (induct xs ys rule: list_induct2) (auto simp: vars_mset_def)"], ["", "lemma not_in_vars_mset_subst_mset [simp]:\n  assumes \"x \\<notin> vars_term t\"\n  shows \"x \\<notin> vars_mset (subst_mset (subst x t) M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> vars_mset (subst_mset (subst x t) M)", "using assms"], ["proof (prove)\nusing this:\n  x \\<notin> vars_term t\n\ngoal (1 subgoal):\n 1. x \\<notin> vars_mset (subst_mset (subst x t) M)", "by (auto simp: vars_mset_def subst_mset_def vars_term_subst subst_def)"], ["", "lemma vars_mset_subst_mset_subset:\n  \"vars_mset (subst_mset (subst x t) M) \\<subseteq> vars_mset M \\<union> vars_term t \\<union> {x}\" (is \"?L \\<subseteq> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M)\n    \\<subseteq> vars_mset M \\<union> vars_term t \\<union> {x}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> vars_mset (subst_mset (subst x t) M) \\<Longrightarrow>\n       xa \\<in> vars_mset M \\<union> vars_term t \\<union> {x}", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> vars_mset (subst_mset (subst x t) M) \\<Longrightarrow>\n       xa \\<in> vars_mset M \\<union> vars_term t \\<union> {x}", "assume \"y \\<in> ?L\""], ["proof (state)\nthis:\n  y \\<in> vars_mset (subst_mset (subst x t) M)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> vars_mset (subst_mset (subst x t) M) \\<Longrightarrow>\n       xa \\<in> vars_mset M \\<union> vars_term t \\<union> {x}", "then"], ["proof (chain)\npicking this:\n  y \\<in> vars_mset (subst_mset (subst x t) M)", "obtain u v where \"(u, v) \\<in># M\"\n    and \"y \\<in> vars_term (u \\<cdot> subst x t) \\<union> vars_term (v \\<cdot> subst x t)\""], ["proof (prove)\nusing this:\n  y \\<in> vars_mset (subst_mset (subst x t) M)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>(u, v) \\<in># M;\n         y \\<in> vars_term (u \\<cdot> subst x t) \\<union>\n                 vars_term (v \\<cdot> subst x t)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: vars_mset_def subst_mset_def)"], ["proof (state)\nthis:\n  (u, v) \\<in># M\n  y \\<in> vars_term (u \\<cdot> subst x t) \\<union>\n          vars_term (v \\<cdot> subst x t)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> vars_mset (subst_mset (subst x t) M) \\<Longrightarrow>\n       xa \\<in> vars_mset M \\<union> vars_term t \\<union> {x}", "moreover"], ["proof (state)\nthis:\n  (u, v) \\<in># M\n  y \\<in> vars_term (u \\<cdot> subst x t) \\<union>\n          vars_term (v \\<cdot> subst x t)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> vars_mset (subst_mset (subst x t) M) \\<Longrightarrow>\n       xa \\<in> vars_mset M \\<union> vars_term t \\<union> {x}", "then"], ["proof (chain)\npicking this:\n  (u, v) \\<in># M\n  y \\<in> vars_term (u \\<cdot> subst x t) \\<union>\n          vars_term (v \\<cdot> subst x t)", "have \"y \\<in> vars_term u \\<union> vars_term v \\<union> vars_term t\""], ["proof (prove)\nusing this:\n  (u, v) \\<in># M\n  y \\<in> vars_term (u \\<cdot> subst x t) \\<union>\n          vars_term (v \\<cdot> subst x t)\n\ngoal (1 subgoal):\n 1. y \\<in> vars_term u \\<union> vars_term v \\<union> vars_term t", "unfolding vars_term_subst subst_def fun_upd_def"], ["proof (prove)\nusing this:\n  (u, v) \\<in># M\n  y \\<in> \\<Union>\n           (vars_term `\n            (\\<lambda>xa. if xa = x then t else Var xa) `\n            vars_term u) \\<union>\n          \\<Union>\n           (vars_term `\n            (\\<lambda>xa. if xa = x then t else Var xa) ` vars_term v)\n\ngoal (1 subgoal):\n 1. y \\<in> vars_term u \\<union> vars_term v \\<union> vars_term t", "by (auto) (metis empty_iff)+"], ["proof (state)\nthis:\n  y \\<in> vars_term u \\<union> vars_term v \\<union> vars_term t\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> vars_mset (subst_mset (subst x t) M) \\<Longrightarrow>\n       xa \\<in> vars_mset M \\<union> vars_term t \\<union> {x}", "ultimately"], ["proof (chain)\npicking this:\n  (u, v) \\<in># M\n  y \\<in> vars_term (u \\<cdot> subst x t) \\<union>\n          vars_term (v \\<cdot> subst x t)\n  y \\<in> vars_term u \\<union> vars_term v \\<union> vars_term t", "show \"y \\<in> ?R\""], ["proof (prove)\nusing this:\n  (u, v) \\<in># M\n  y \\<in> vars_term (u \\<cdot> subst x t) \\<union>\n          vars_term (v \\<cdot> subst x t)\n  y \\<in> vars_term u \\<union> vars_term v \\<union> vars_term t\n\ngoal (1 subgoal):\n 1. y \\<in> vars_mset M \\<union> vars_term t \\<union> {x}", "by (force simp: vars_mset_def)"], ["proof (state)\nthis:\n  y \\<in> vars_mset M \\<union> vars_term t \\<union> {x}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Var_left_vars_mset_less:\n  assumes \"x \\<notin> vars_term t\"\n  shows \"vars_mset (subst_mset (subst x t) M) \\<subset> vars_mset (add_mset (Var x, t) M)\" (is \"?L \\<subset> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M)\n    \\<subset> vars_mset (add_mset (Var x, t) M)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. vars_mset (subst_mset (subst x t) M)\n    \\<subseteq> vars_mset (add_mset (Var x, t) M)\n 2. vars_mset (subst_mset (subst x t) M) \\<noteq>\n    vars_mset (add_mset (Var x, t) M)", "show \"?L \\<subseteq> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M)\n    \\<subseteq> vars_mset (add_mset (Var x, t) M)", "using vars_mset_subst_mset_subset [of x t M]"], ["proof (prove)\nusing this:\n  vars_mset (subst_mset (subst x t) M)\n  \\<subseteq> vars_mset M \\<union> vars_term t \\<union> {x}\n\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M)\n    \\<subseteq> vars_mset (add_mset (Var x, t) M)", "by (simp add: ac_simps)"], ["proof (state)\nthis:\n  vars_mset (subst_mset (subst x t) M)\n  \\<subseteq> vars_mset (add_mset (Var x, t) M)\n\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M) \\<noteq>\n    vars_mset (add_mset (Var x, t) M)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M) \\<noteq>\n    vars_mset (add_mset (Var x, t) M)", "have \"x \\<in> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> vars_mset (add_mset (Var x, t) M)", "using assms"], ["proof (prove)\nusing this:\n  x \\<notin> vars_term t\n\ngoal (1 subgoal):\n 1. x \\<in> vars_mset (add_mset (Var x, t) M)", "by (force simp: vars_mset_def)"], ["proof (state)\nthis:\n  x \\<in> vars_mset (add_mset (Var x, t) M)\n\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M) \\<noteq>\n    vars_mset (add_mset (Var x, t) M)", "moreover"], ["proof (state)\nthis:\n  x \\<in> vars_mset (add_mset (Var x, t) M)\n\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M) \\<noteq>\n    vars_mset (add_mset (Var x, t) M)", "have \"x \\<notin> ?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> vars_mset (subst_mset (subst x t) M)", "using assms"], ["proof (prove)\nusing this:\n  x \\<notin> vars_term t\n\ngoal (1 subgoal):\n 1. x \\<notin> vars_mset (subst_mset (subst x t) M)", "by simp"], ["proof (state)\nthis:\n  x \\<notin> vars_mset (subst_mset (subst x t) M)\n\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M) \\<noteq>\n    vars_mset (add_mset (Var x, t) M)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> vars_mset (add_mset (Var x, t) M)\n  x \\<notin> vars_mset (subst_mset (subst x t) M)", "show \"?L \\<noteq> ?R\""], ["proof (prove)\nusing this:\n  x \\<in> vars_mset (add_mset (Var x, t) M)\n  x \\<notin> vars_mset (subst_mset (subst x t) M)\n\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M) \\<noteq>\n    vars_mset (add_mset (Var x, t) M)", "by blast"], ["proof (state)\nthis:\n  vars_mset (subst_mset (subst x t) M) \\<noteq>\n  vars_mset (add_mset (Var x, t) M)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Var_right_vars_mset_less:\n  assumes \"x \\<notin> vars_term t\"\n  shows \"vars_mset (subst_mset (subst x t) M) \\<subset> vars_mset (add_mset (t, Var x) M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M)\n    \\<subset> vars_mset (add_mset (t, Var x) M)", "using Var_left_vars_mset_less [OF assms]"], ["proof (prove)\nusing this:\n  vars_mset (subst_mset (subst x t) ?M)\n  \\<subset> vars_mset (add_mset (Var x, t) ?M)\n\ngoal (1 subgoal):\n 1. vars_mset (subst_mset (subst x t) M)\n    \\<subset> vars_mset (add_mset (t, Var x) M)", "by simp"], ["", "lemma mem_vars_mset_subst_mset:\n  assumes \"y \\<in> vars_mset (subst_mset (subst x t) M)\"\n    and \"y \\<noteq> x\"\n    and \"y \\<notin> vars_term t\"\n  shows \"y \\<in> vars_mset M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> vars_mset M", "using vars_mset_subst_mset_subset [of x t M] and assms"], ["proof (prove)\nusing this:\n  vars_mset (subst_mset (subst x t) M)\n  \\<subseteq> vars_mset M \\<union> vars_term t \\<union> {x}\n  y \\<in> vars_mset (subst_mset (subst x t) M)\n  y \\<noteq> x\n  y \\<notin> vars_term t\n\ngoal (1 subgoal):\n 1. y \\<in> vars_mset M", "by blast"], ["", "lemma finite_vars_mset:\n  \"finite (vars_mset A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (vars_mset A)", "by (auto simp: vars_mset_def)"], ["", "end"]]}