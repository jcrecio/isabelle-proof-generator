{"file_name": "/home/qj213/afp-2021-10-22/thys/MiniSail/Syntax.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/MiniSail", "problem_names": ["lemma check_typedef_poly:\n  \"AF_typedef_poly ''option'' bv [ (''None'', \\<lbrace> zz : B_unit | TRUE \\<rbrace>), (''Some'', \\<lbrace> zz : B_var bv | TRUE \\<rbrace>) ] = \n    AF_typedef_poly ''option'' bv2 [ (''None'', \\<lbrace> zz : B_unit | TRUE \\<rbrace>), (''Some'', \\<lbrace> zz : B_var bv2 | TRUE \\<rbrace>) ]\"", "lemma x_not_in_u_atoms[simp]:\n  fixes u::u and x::x and us::\"u set\"\n  shows \"atom x \\<notin> atom`us\"", "lemma x_fresh_u[simp]:\n  fixes u::u and x::x\n  shows \"atom x \\<sharp> u\"", "lemma x_not_in_b_set[simp]:\n  fixes  x::x and bs::\"bv fset\"\n  shows \"atom x \\<notin> supp bs\"", "lemma x_fresh_b[simp]:\n  fixes  x::x and b::b\n  shows \"atom x \\<sharp> b\"", "lemma x_fresh_bv[simp]:\n  fixes  x::x and bv::bv\n  shows \"atom x \\<sharp> bv\"", "lemma u_not_in_x_atoms[simp]:\n  fixes u::u and x::x and xs::\"x set\"\n  shows \"atom u \\<notin> atom`xs\"", "lemma bv_not_in_x_atoms[simp]:\n  fixes bv::bv and x::x and xs::\"x set\"\n  shows \"atom bv \\<notin> atom`xs\"", "lemma u_not_in_b_atoms[simp]:\n  fixes b :: b and u::u\n  shows \"atom u \\<notin> supp b\"", "lemma u_not_in_b_set[simp]:\n  fixes  u::u and bs::\"bv fset\"\n  shows \"atom u \\<notin> supp bs\"", "lemma u_fresh_b[simp]:\n  fixes  x::u and b::b\n  shows \"atom x \\<sharp> b\"", "lemma supp_b_v_disjoint:\n  fixes x::x and bv::bv\n  shows \"supp (V_var x) \\<inter> supp (B_var bv) = {}\"", "lemma supp_b_u_disjoint[simp]:\n  fixes b::b and u::u\n  shows \"supp u \\<inter> supp b = {}\"", "lemma u_fresh_bv[simp]:\n  fixes  u::u and b::bv\n  shows \"atom u \\<sharp> b\"", "lemma supp_b_empty[simp]:\n  fixes b :: b and x::x\n  shows \"atom x \\<notin> supp b\"", "lemma flip_b_id[simp]:\n  fixes x::x and b::b\n  shows \"(x \\<leftrightarrow> x') \\<bullet> b = b\"", "lemma flip_x_b_cancel[simp]:\n  fixes x::x and y::x  and b::b and bv::bv\n  shows \"(x \\<leftrightarrow> y) \\<bullet> b = b\" and \"(x \\<leftrightarrow> y) \\<bullet> bv = bv\"", "lemma flip_bv_x_cancel[simp]:\n  fixes bv::bv and z::bv and x::x\n  shows \"(bv \\<leftrightarrow> z) \\<bullet> x = x\"", "lemma flip_bv_u_cancel[simp]:\n  fixes bv::bv and z::bv and x::u\n  shows \"(bv \\<leftrightarrow> z) \\<bullet> x = x\"", "lemma supp_bitvec_empty:\n  fixes bv::\"bit list\"\n  shows \"supp bv = {}\"", "lemma bitvec_pure[simp]:\n  fixes bv::\"bit list\" and x::x\n  shows \"atom x \\<sharp> bv\"", "lemma supp_l_empty[simp]:\n  fixes l:: l\n  shows \"supp (V_lit l) = {}\"", "lemma type_l_nosupp[simp]:\n  fixes x::x and l::l\n  shows \"atom x \\<notin> supp (\\<lbrace> z : b  |  [[z]\\<^sup>v]\\<^sup>c\\<^sup>e ==  [[l]\\<^sup>v]\\<^sup>c\\<^sup>e \\<rbrace>)\"", "lemma flip_bitvec0:\n  fixes x::\"bit list\"\n  assumes \"atom c \\<sharp> (z, x, z')\"\n  shows \"(z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x\"", "lemma flip_bitvec:\n  assumes \"atom c \\<sharp> (z, L_bitvec x, z')\"\n  shows \"(z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x\"", "lemma type_l_eq:\n  shows \"\\<lbrace> z : b  |  [[z]\\<^sup>v]\\<^sup>c\\<^sup>e == [V_lit l]\\<^sup>c\\<^sup>e \\<rbrace> = (\\<lbrace> z' : b  |  [[z']\\<^sup>v]\\<^sup>c\\<^sup>e == [V_lit l]\\<^sup>c\\<^sup>e \\<rbrace>)\"", "lemma flip_l_eq:\n  fixes x::l\n  shows \"(z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x\"", "lemma flip_l_eq1:\n  fixes x::l\n  assumes  \"(z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x'\"\n  shows \"x' = x\"", "lemma flip_base_eq:\n  fixes b::b and x::x and y::x                      \n  shows \"(x \\<leftrightarrow> y) \\<bullet> b = b\"", "lemma has_fresh_z0:\n  fixes t::\"'b::fs\"\n  shows \"\\<exists>z. atom z \\<sharp> (c',t) \\<and> (\\<lbrace>z' : b | c' \\<rbrace>) = (\\<lbrace> z : b | (z \\<leftrightarrow> z' ) \\<bullet> c' \\<rbrace>)\"", "lemma has_fresh_z:\n  fixes t::\"'b::fs\"\n  shows \"\\<exists>z b c. atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b | c \\<rbrace>\"", "lemma obtain_fresh_z:\n  fixes t::\"'b::fs\"\n  obtains z and b and c where \"atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b | c \\<rbrace>\"", "lemma has_fresh_z2:\n  fixes t::\"'b::fs\"\n  shows \"\\<exists>z c. atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b_of \\<tau> | c \\<rbrace>\"", "lemma obtain_fresh_z2:\n  fixes t::\"'b::fs\"\n  obtains z and  c where \"atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b_of \\<tau> | c \\<rbrace>\"", "lemma u_notin_supp_v[simp]:\n  fixes u::u and v::v\n  shows \"atom u \\<notin> supp v\"", "lemma u_fresh_xv[simp]:\n  fixes u::u and x::x and v::v\n  shows \"atom u \\<sharp>  (x,v)\"", "lemma v_flip_eq:\n  fixes v::v and va::v and x::x and c::x\n  assumes \"atom c \\<sharp> (v, va)\" and \"atom c \\<sharp> (x, xa, v, va)\" and \"(x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> va\" \n  shows \"((v = V_lit l \\<longrightarrow> (\\<exists>l'. va = V_lit l' \\<and>  (x \\<leftrightarrow> c) \\<bullet> l = (xa \\<leftrightarrow> c) \\<bullet> l'))) \\<and>\n         ((v = V_var y \\<longrightarrow> (\\<exists>y'. va = V_var y' \\<and>  (x \\<leftrightarrow> c) \\<bullet> y = (xa \\<leftrightarrow> c) \\<bullet> y'))) \\<and>\n         ((v = V_pair vone vtwo \\<longrightarrow> (\\<exists>v1' v2'. va = V_pair v1' v2' \\<and>  (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>  (x \\<leftrightarrow> c) \\<bullet> vtwo = (xa \\<leftrightarrow> c) \\<bullet> v2'))) \\<and>\n         ((v = V_cons tyid dc vone \\<longrightarrow> (\\<exists>v1'. va = V_cons tyid dc v1'\\<and>  (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1'))) \\<and>\n         ((v = V_consp tyid dc b vone \\<longrightarrow> (\\<exists>v1'. va = V_consp tyid dc b v1'\\<and>  (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1')))\"", "lemma flip_eq:\n  fixes x::x and xa::x and s::\"'a::fs\" and sa::\"'a::fs\"\n  assumes \"(\\<forall>c. atom c \\<sharp> (s, sa) \\<longrightarrow> atom c \\<sharp> (x, xa, s, sa) \\<longrightarrow> (x \\<leftrightarrow> c) \\<bullet> s = (xa \\<leftrightarrow> c) \\<bullet> sa)\" and \"x \\<noteq> xa\"\n  shows \"(x \\<leftrightarrow> xa) \\<bullet> s = sa\"", "lemma  swap_v_supp:\n  fixes v::v and d::x and z::x\n  assumes \"atom d \\<sharp> v\"\n  shows \"supp ((z \\<leftrightarrow> d ) \\<bullet> v) \\<subseteq> supp v - { atom z } \\<union> { atom d}\"", "lemma  swap_e_supp:\n  fixes e::e and d::x and z::x\n  assumes \"atom d \\<sharp> e\"\n  shows \"supp ((z \\<leftrightarrow> d ) \\<bullet> e) \\<subseteq> supp e - { atom z } \\<union> { atom d}\"", "lemma  swap_ce_supp:\n  fixes e::ce and d::x and z::x\n  assumes \"atom d \\<sharp> e\"\n  shows \"supp ((z \\<leftrightarrow> d ) \\<bullet> e) \\<subseteq> supp e - { atom z } \\<union> { atom d}\"", "lemma  swap_c_supp:\n  fixes c::c and d::x and z::x\n  assumes \"atom d \\<sharp> c\"\n  shows \"supp ((z \\<leftrightarrow> d ) \\<bullet> c) \\<subseteq> supp c - { atom z } \\<union> { atom d}\"", "lemma type_e_eq:\n  assumes \"atom z \\<sharp> e\" and \"atom z' \\<sharp> e\"\n  shows \"\\<lbrace> z : b  |  [[z]\\<^sup>v]\\<^sup>c\\<^sup>e == e \\<rbrace> = (\\<lbrace> z' : b  |  [[z']\\<^sup>v]\\<^sup>c\\<^sup>e ==  e \\<rbrace>)\"", "lemma type_e_eq2:\n  assumes \"atom z \\<sharp> e\" and \"atom z' \\<sharp> e\" and \"b=b'\"\n  shows \"\\<lbrace> z : b  |  [[z]\\<^sup>v]\\<^sup>c\\<^sup>e == e \\<rbrace> = (\\<lbrace> z' : b'  |  [[z']\\<^sup>v]\\<^sup>c\\<^sup>e == e \\<rbrace>)\"", "lemma e_flip_eq:\n  fixes e::e and ea::e\n  assumes \"atom c \\<sharp> (e, ea)\" and \"atom c \\<sharp> (x, xa, e, ea)\" and \"(x \\<leftrightarrow> c) \\<bullet> e = (xa \\<leftrightarrow> c) \\<bullet> ea\" \n  shows \"(e = AE_val w \\<longrightarrow> (\\<exists>w'. ea = AE_val w' \\<and> (x \\<leftrightarrow> c) \\<bullet> w = (xa \\<leftrightarrow> c) \\<bullet> w')) \\<or> \n         (e = AE_op opp v1 v2 \\<longrightarrow> (\\<exists>v1' v2'. ea = AS_op opp v1' v2' \\<and> (x \\<leftrightarrow> c) \\<bullet> v1 = (xa \\<leftrightarrow> c) \\<bullet> v1') \\<and> (x \\<leftrightarrow> c) \\<bullet> v2 = (xa \\<leftrightarrow> c) \\<bullet> v2') \\<or> \n         (e = AE_fst v \\<longrightarrow> (\\<exists>v'. ea = AE_fst v' \\<and> (x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> v')) \\<or> \n         (e = AE_snd v \\<longrightarrow> (\\<exists>v'. ea = AE_snd v' \\<and> (x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> v')) \\<or> \n         (e = AE_len v \\<longrightarrow> (\\<exists>v'. ea = AE_len v' \\<and> (x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> v')) \\<or> \n         (e = AE_concat v1 v2 \\<longrightarrow> (\\<exists>v1' v2'. ea = AS_concat v1' v2' \\<and> (x \\<leftrightarrow> c) \\<bullet> v1 = (xa \\<leftrightarrow> c) \\<bullet> v1') \\<and> (x \\<leftrightarrow> c) \\<bullet> v2 = (xa \\<leftrightarrow> c) \\<bullet> v2') \\<or> \n         (e = AE_app f v \\<longrightarrow> (\\<exists>v'. ea = AE_app f  v' \\<and> (x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> v'))\"", "lemma fresh_opp_all:\n  fixes opp::opp\n  shows \"z \\<sharp> opp\"", "lemma fresh_e_opp_all:\n  shows \"(z \\<sharp> v1 \\<and> z \\<sharp> v2) = z \\<sharp> AE_op opp v1 v2\"", "lemma fresh_e_opp:\n  fixes z::x\n  assumes \"atom z \\<sharp> v1 \\<and> atom z \\<sharp> v2\"\n  shows \"atom z \\<sharp> AE_op opp v1 v2\"", "lemma branch_s_flip_eq:\n  fixes v::v and va::v\n  assumes \"atom c \\<sharp> (v, va)\" and \"atom c \\<sharp> (x, xa, v, va)\" and \"(x \\<leftrightarrow> c) \\<bullet> s = (xa \\<leftrightarrow> c) \\<bullet> sa\" \n  shows \"(s = AS_val w \\<longrightarrow> (\\<exists>w'. sa = AS_val w' \\<and> (x \\<leftrightarrow> c) \\<bullet> w = (xa \\<leftrightarrow> c) \\<bullet> w')) \\<or> \n         (s = AS_seq s1 s2 \\<longrightarrow> (\\<exists>s1' s2'. sa = AS_seq s1' s2' \\<and> (x \\<leftrightarrow> c) \\<bullet> s1 = (xa \\<leftrightarrow> c) \\<bullet> s1') \\<and> (x \\<leftrightarrow> c) \\<bullet> s2 = (xa \\<leftrightarrow> c) \\<bullet> s2') \\<or> \n         (s = AS_if v s1 s2 \\<longrightarrow> (\\<exists>v' s1' s2'. sa = AS_if seq s1' s2' \\<and> (x \\<leftrightarrow> c) \\<bullet> s1 = (xa \\<leftrightarrow> c) \\<bullet> s1') \\<and> (x \\<leftrightarrow> c) \\<bullet> s2 = (xa \\<leftrightarrow> c) \\<bullet> s2' \\<and> (x \\<leftrightarrow> c) \\<bullet> c = (xa \\<leftrightarrow> c) \\<bullet> v')\"", "lemma \\<Gamma>_induct [case_names GNil GCons] : \"P GNil \\<Longrightarrow> (\\<And>x b c \\<Gamma>'. P \\<Gamma>' \\<Longrightarrow> P ((x,b,c) #\\<^sub>\\<Gamma> \\<Gamma>')) \\<Longrightarrow> P \\<Gamma>\"", "lemmas [eqvt] =  permute_\\<Delta>.simps", "lemma \\<Delta>_induct [case_names DNil DCons] : \"P DNil \\<Longrightarrow> (\\<And>u t \\<Delta>'. P \\<Delta>' \\<Longrightarrow> P ((u,t) #\\<^sub>\\<Delta> \\<Delta>')) \\<Longrightarrow> P \\<Delta>\"", "lemma \\<Phi>_induct [case_names PNil PConsNone PConsSome] : \"P [] \\<Longrightarrow> (\\<And>f x b c \\<tau> s' \\<Phi>'. P \\<Phi>' \\<Longrightarrow> P ((AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s'))) # \\<Phi>')) \\<Longrightarrow>\n                                                                  (\\<And>f bv x b c \\<tau> s' \\<Phi>'. P \\<Phi>' \\<Longrightarrow> P ((AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s'))) # \\<Phi>'))  \\<Longrightarrow> P \\<Phi>\"", "lemma \\<Theta>_induct [case_names TNil AF_typedef AF_typedef_poly] : \"P [] \\<Longrightarrow> (\\<And>tid dclist \\<Theta>'. P \\<Theta>' \\<Longrightarrow> P ((AF_typedef tid dclist) # \\<Theta>')) \\<Longrightarrow>\n                                                                  (\\<And>tid bv dclist \\<Theta>'. P \\<Theta>' \\<Longrightarrow> P ((AF_typedef_poly tid bv dclist ) # \\<Theta>'))  \\<Longrightarrow> P \\<Theta>\"", "lemmas [eqvt] =  permute_\\<Gamma>.simps", "lemma G_cons_eqvt[simp]:\n  fixes \\<Gamma>::\\<Gamma>\n  shows \"p \\<bullet> ((x,b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = ((p \\<bullet> x,  p \\<bullet> b , p \\<bullet> c) #\\<^sub>\\<Gamma> (p \\<bullet> \\<Gamma> ))\" (is \"?A = ?B\" )", "lemma G_cons_flip[simp]:\n  fixes  x::x and \\<Gamma>::\\<Gamma>\n  shows  \"(x\\<leftrightarrow>x') \\<bullet> ((x'',b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = (((x\\<leftrightarrow>x') \\<bullet> x'',  b , (x\\<leftrightarrow>x') \\<bullet> c) #\\<^sub>\\<Gamma> ((x\\<leftrightarrow>x') \\<bullet> \\<Gamma> ))\"", "lemma G_cons_flip_fresh[simp]:\n  fixes  x::x and \\<Gamma>::\\<Gamma> \n  assumes  \"atom x \\<sharp> (c,\\<Gamma>)\" and \"atom x' \\<sharp> (c,\\<Gamma>)\" \n  shows  \"(x\\<leftrightarrow>x') \\<bullet> ((x',b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = ((x,  b , c) #\\<^sub>\\<Gamma> \\<Gamma> )\"", "lemma G_cons_flip_fresh2[simp]:\n  fixes  x::x and \\<Gamma>::\\<Gamma> \n  assumes  \"atom x \\<sharp> (c,\\<Gamma>)\" and \"atom x' \\<sharp> (c,\\<Gamma>)\" \n  shows  \"(x\\<leftrightarrow>x') \\<bullet> ((x,b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = ((x',  b , c) #\\<^sub>\\<Gamma> \\<Gamma> )\"", "lemma G_cons_flip_fresh3[simp]:\n  fixes  x::x and \\<Gamma>::\\<Gamma> \n  assumes  \"atom x \\<sharp> \\<Gamma>\" and \"atom x' \\<sharp> \\<Gamma>\" \n  shows  \"(x\\<leftrightarrow>x') \\<bullet> ((x',b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = ((x,  b , (x\\<leftrightarrow>x') \\<bullet> c) #\\<^sub>\\<Gamma> \\<Gamma> )\"", "lemma neq_GNil_conv: \"(xs \\<noteq> GNil) = (\\<exists>y ys. xs = y #\\<^sub>\\<Gamma> ys)\"", "lemma append_GNil[simp]:\n  \"GNil @ G = G\"", "lemma append_g_toSetU [simp]: \"toSet (G1@G2) = toSet G1 \\<union> toSet G2\"", "lemma supp_GNil: \n  shows \"supp GNil = {}\"", "lemma supp_GCons: \n  fixes xs::\\<Gamma>\n  shows \"supp (x #\\<^sub>\\<Gamma> xs) = supp x \\<union> supp xs\"", "lemma atom_dom_eq[simp]: \n  fixes G::\\<Gamma>\n  shows  \"atom_dom ((x, b, c) #\\<^sub>\\<Gamma> G) = atom_dom ((x, b, c') #\\<^sub>\\<Gamma> G)\"", "lemma dom_append[simp]:\n  \"atom_dom (\\<Gamma>@\\<Gamma>') = atom_dom \\<Gamma> \\<union> atom_dom \\<Gamma>'\"", "lemma dom_cons[simp]:\n  \"atom_dom ((x,b,c) #\\<^sub>\\<Gamma> G) = { atom x } \\<union> atom_dom G\"", "lemma fresh_GNil[ms_fresh]: \n  shows \"a \\<sharp> GNil\"", "lemma fresh_GCons[ms_fresh]: \n  fixes xs::\\<Gamma>\n  shows \"a \\<sharp> (x #\\<^sub>\\<Gamma> xs) \\<longleftrightarrow> a \\<sharp> x \\<and> a \\<sharp> xs\"", "lemma dom_supp_g[simp]:\n  \"atom_dom G \\<subseteq> supp G\"", "lemma fresh_append_g[ms_fresh]:\n  fixes xs::\\<Gamma>\n  shows \"a \\<sharp> (xs @ ys) \\<longleftrightarrow> a \\<sharp> xs \\<and> a \\<sharp> ys\"", "lemma append_g_assoc:\n  fixes xs::\\<Gamma> \n  shows  \"(xs @ ys) @ zs = xs @ (ys @ zs)\"", "lemma append_g_inside:\n  fixes xs::\\<Gamma> \n  shows \"xs @ (x #\\<^sub>\\<Gamma> ys) = (xs @ (x #\\<^sub>\\<Gamma> GNil)) @ ys\"", "lemma finite_\\<Gamma>:\n  \"finite (toSet \\<Gamma>)\"", "lemma supp_\\<Gamma>:\n  \"supp \\<Gamma> = supp (toSet \\<Gamma>)\"", "lemma supp_of_subset:\n  fixes G::\"('a::fs set)\"\n  assumes \"finite G\" and \"finite G'\" and \"G \\<subseteq> G'\" \n  shows \"supp G \\<subseteq> supp G'\"", "lemma supp_weakening:\n  assumes \"toSet G \\<subseteq> toSet G'\"\n  shows \"supp G \\<subseteq> supp G'\"", "lemma fresh_weakening[ms_fresh]:\n  assumes \"toSet G \\<subseteq> toSet G'\" and \"x \\<sharp> G'\" \n  shows \"x \\<sharp> G\"", "lemma fresh_gamma_elem:\n  fixes \\<Gamma>::\\<Gamma>\n  assumes \"a \\<sharp> \\<Gamma>\"\n    and \"e \\<in> toSet \\<Gamma>\"\n  shows \"a \\<sharp> e\"", "lemma fresh_gamma_append:\n  fixes xs::\\<Gamma>\n  shows \"a \\<sharp> (xs @ ys) \\<longleftrightarrow> a \\<sharp> xs \\<and> a \\<sharp> ys\"", "lemma supp_triple[simp]:\n  shows \"supp (x, y, z) = supp x \\<union> supp y \\<union> supp z\"", "lemma supp_append_g:\n  fixes xs::\\<Gamma>\n  shows \"supp (xs @ ys) = supp xs \\<union> supp ys\"", "lemma fresh_in_g[simp]:\n  fixes \\<Gamma>::\\<Gamma> and x'::x\n  shows \"atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> = (atom x' \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union> supp c0 \\<union> supp \\<Gamma>)\"", "lemma fresh_suffix[ms_fresh]:\n  fixes \\<Gamma>::\\<Gamma>\n  assumes \"atom x \\<sharp> \\<Gamma>'@\\<Gamma>\"\n  shows \"atom x \\<sharp> \\<Gamma>\"", "lemma not_GCons_self [simp]:\n  fixes xs::\\<Gamma>\n  shows \"xs \\<noteq> x #\\<^sub>\\<Gamma> xs\"", "lemma not_GCons_self2 [simp]: \n  fixes xs::\\<Gamma>\n  shows \"x #\\<^sub>\\<Gamma> xs \\<noteq> xs\"", "lemma fresh_restrict:\n  fixes y::x and \\<Gamma>::\\<Gamma>\n  assumes  \"atom y \\<sharp>  (\\<Gamma>' @ (x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>)\"\n  shows \"atom y \\<sharp> (\\<Gamma>'@\\<Gamma>)\"", "lemma fresh_dom_free:\n  assumes \"atom x \\<sharp> \\<Gamma>\" \n  shows \"(x,b,c) \\<notin> toSet \\<Gamma>\"", "lemma \\<Gamma>_set_intros: \"x \\<in> toSet ( x #\\<^sub>\\<Gamma> xs)\" and \"y \\<in> toSet xs \\<Longrightarrow> y \\<in> toSet (x #\\<^sub>\\<Gamma> xs)\"", "lemma fresh_dom_free2:\n  assumes \"atom x \\<notin> atom_dom \\<Gamma>\" \n  shows \"(x,b,c) \\<notin> toSet \\<Gamma>\"", "lemma supp_DNil: \n  shows \"supp DNil = {}\"", "lemma supp_DCons: \n  fixes xs::\\<Delta>\n  shows \"supp (x #\\<^sub>\\<Delta> xs) = supp x \\<union> supp xs\"", "lemma fresh_DNil[ms_fresh]:\n  shows \"a \\<sharp> DNil\"", "lemma fresh_DCons[ms_fresh]: \n  fixes xs::\\<Delta>\n  shows \"a \\<sharp> (x #\\<^sub>\\<Delta> xs) \\<longleftrightarrow> a \\<sharp> x \\<and> a \\<sharp> xs\"", "lemma neq_DNil_conv: \"(xs \\<noteq> DNil) = (\\<exists>y ys. xs = y #\\<^sub>\\<Delta> ys)\"", "lemma eqvt_triple:\n  fixes y::\"'a::at\" and ya::\"'a::at\" and xa::\"'c::at\" and va::\"'d::fs\" and s::s and sa::s and f::\"s*'c*'d \\<Rightarrow> s\"\n  assumes \"atom y \\<sharp> (xa, va)\" and \"atom ya \\<sharp> (xa, va)\" and \n    \"\\<forall>c. atom c \\<sharp> (s, sa) \\<longrightarrow> atom c \\<sharp> (y, ya, s, sa) \\<longrightarrow> (y \\<leftrightarrow> c) \\<bullet> s = (ya \\<leftrightarrow> c) \\<bullet> sa\"\n    and \"eqvt_at f (s,xa,va)\" and \"eqvt_at f (sa,xa,va)\" and\n    \"atom c \\<sharp> (s, va, xa, sa)\" and \"atom c \\<sharp> (y, ya, f (s, xa, va), f (sa, xa, va))\"\n  shows \"(y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =  (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)\"", "lemma split_concat:\n  assumes \"split n v (v1,v2)\"\n  shows \"v = append v1 v2\"", "lemma split_n:\n  assumes \"split n v (v1,v2)\"\n  shows \"0 \\<le> n \\<and> n \\<le> int (length v)\"", "lemma split_length:\n  assumes \"split n v (v1,v2)\"\n  shows \"n = int (length v1)\"", "lemma obtain_split:\n  assumes \"0 \\<le> n\" and \"n \\<le> int (length bv)\" \n  shows \"\\<exists> bv1 bv2. split n bv (bv1 , bv2)\""], "translations": [["", "lemma check_typedef_poly:\n  \"AF_typedef_poly ''option'' bv [ (''None'', \\<lbrace> zz : B_unit | TRUE \\<rbrace>), (''Some'', \\<lbrace> zz : B_var bv | TRUE \\<rbrace>) ] = \n    AF_typedef_poly ''option'' bv2 [ (''None'', \\<lbrace> zz : B_unit | TRUE \\<rbrace>), (''Some'', \\<lbrace> zz : B_var bv2 | TRUE \\<rbrace>) ]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AF_typedef_poly ''option'' bv\n     [(''None'', \\<lbrace> zz : B_unit  | TRUE \\<rbrace>),\n      (''Some'', \\<lbrace> zz : B_var bv  | TRUE \\<rbrace>)] =\n    AF_typedef_poly ''option'' bv2\n     [(''None'', \\<lbrace> zz : B_unit  | TRUE \\<rbrace>),\n      (''Some'', \\<lbrace> zz : B_var bv2  | TRUE \\<rbrace>)]", "by auto"], ["", "nominal_datatype \"var_def\" =  AV_def u \\<tau> v"], ["", "text  \\<open> Programs \\<close>"], ["", "nominal_datatype \"p\" = \n  AP_prog \"type_def list\" \"fun_def list\" \"var_def list\" \"s\" (\"PROG _ _ _ _\")"], ["", "declare l.supp [simp] v.supp [simp]  e.supp [simp] s_branch_s_branch_list.supp [simp]  \\<tau>.supp [simp] c.supp [simp] b.supp[simp]"], ["", "subsection \\<open>Lemmas\\<close>"], ["", "text \\<open>These lemmas deal primarily with freshness and alpha-equivalence\\<close>"], ["", "subsubsection \\<open>Atoms\\<close>"], ["", "lemma x_not_in_u_atoms[simp]:\n  fixes u::u and x::x and us::\"u set\"\n  shows \"atom x \\<notin> atom`us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<notin> atom ` us", "by (simp add: image_iff)"], ["", "lemma x_fresh_u[simp]:\n  fixes u::u and x::x\n  shows \"atom x \\<sharp> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> u", "by auto"], ["", "lemma x_not_in_b_set[simp]:\n  fixes  x::x and bs::\"bv fset\"\n  shows \"atom x \\<notin> supp bs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<notin> supp bs", "by(induct bs,auto, simp add: supp_finsert supp_at_base)"], ["", "lemma x_fresh_b[simp]:\n  fixes  x::x and b::b\n  shows \"atom x \\<sharp> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> b", "apply (induct b rule: b.induct, auto simp: pure_supp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa. atom x \\<sharp> xa\n 2. \\<And>x1 x2. atom x \\<sharp> x2 \\<Longrightarrow> atom x \\<sharp> x1", "using pure_supp fresh_def"], ["proof (prove)\nusing this:\n  supp ?x = {}\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (2 subgoals):\n 1. \\<And>xa. atom x \\<sharp> xa\n 2. \\<And>x1 x2. atom x \\<sharp> x2 \\<Longrightarrow> atom x \\<sharp> x1", "by blast+"], ["", "lemma x_fresh_bv[simp]:\n  fixes  x::x and bv::bv\n  shows \"atom x \\<sharp> bv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> bv", "using fresh_def supp_at_base"], ["proof (prove)\nusing this:\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  supp ?a = {atom ?a}\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> bv", "by auto"], ["", "lemma u_not_in_x_atoms[simp]:\n  fixes u::u and x::x and xs::\"x set\"\n  shows \"atom u \\<notin> atom`xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<notin> atom ` xs", "by (simp add: image_iff)"], ["", "lemma bv_not_in_x_atoms[simp]:\n  fixes bv::bv and x::x and xs::\"x set\"\n  shows \"atom bv \\<notin> atom`xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom bv \\<notin> atom ` xs", "by (simp add: image_iff)"], ["", "lemma u_not_in_b_atoms[simp]:\n  fixes b :: b and u::u\n  shows \"atom u \\<notin> supp b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<notin> supp b", "by (induct b rule: b.induct,auto simp: pure_supp supp_at_base)"], ["", "lemma u_not_in_b_set[simp]:\n  fixes  u::u and bs::\"bv fset\"\n  shows \"atom u \\<notin> supp bs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<notin> supp bs", "by(induct bs, auto simp add: supp_at_base supp_finsert)"], ["", "lemma u_fresh_b[simp]:\n  fixes  x::u and b::b\n  shows \"atom x \\<sharp> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> b", "by(induct b rule: b.induct, auto simp: pure_fresh )"], ["", "lemma supp_b_v_disjoint:\n  fixes x::x and bv::bv\n  shows \"supp (V_var x) \\<inter> supp (B_var bv) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp [ x ]\\<^sup>v \\<inter> supp (B_var bv) = {}", "by (simp add: supp_at_base)"], ["", "lemma supp_b_u_disjoint[simp]:\n  fixes b::b and u::u\n  shows \"supp u \\<inter> supp b = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp u \\<inter> supp b = {}", "by(nominal_induct b rule:b.strong_induct,(auto simp add: pure_supp b.supp supp_at_base)+)"], ["", "lemma u_fresh_bv[simp]:\n  fixes  u::u and b::bv\n  shows \"atom u \\<sharp> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<sharp> b", "using fresh_at_base"], ["proof (prove)\nusing this:\n  sort_of ?a \\<noteq> sort_of (atom ?b) \\<Longrightarrow> ?a \\<sharp> ?b\n  ?a \\<sharp> ?b = (?a \\<noteq> atom ?b)\n\ngoal (1 subgoal):\n 1. atom u \\<sharp> b", "by simp"], ["", "subsubsection \\<open>Basic Types\\<close>"], ["", "nominal_function b_of :: \"\\<tau> \\<Rightarrow> b\" where\n  \"b_of \\<lbrace> z : b | c \\<rbrace> = b\""], ["proof (prove)\ngoal (4 subgoals):\n 1. eqvt b_of_graph_aux\n 2. \\<And>x y. b_of_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       (\\<And>z b c.\n           x = \\<lbrace> z : b  | c \\<rbrace> \\<Longrightarrow>\n           P) \\<Longrightarrow>\n       P\n 4. \\<And>z b c za ba ca.\n       \\<lbrace> z : b  | c \\<rbrace> =\n       \\<lbrace> za : ba  | ca \\<rbrace> \\<Longrightarrow>\n       b = ba", "apply(auto,simp add: eqvt_def b_of_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       (\\<And>z b c.\n           x = \\<lbrace> z : b  | c \\<rbrace> \\<Longrightarrow>\n           P) \\<Longrightarrow>\n       P", "by (meson \\<tau>.exhaust)"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All b_of_dom", "by lexicographic_order"], ["", "lemma supp_b_empty[simp]:\n  fixes b :: b and x::x\n  shows \"atom x \\<notin> supp b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<notin> supp b", "by (induct b rule: b.induct, auto simp: pure_supp supp_at_base x_not_in_b_set)"], ["", "lemma flip_b_id[simp]:\n  fixes x::x and b::b\n  shows \"(x \\<leftrightarrow> x') \\<bullet> b = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> x') \\<bullet> b = b", "by(rule flip_fresh_fresh, auto simp add: fresh_def)"], ["", "lemma flip_x_b_cancel[simp]:\n  fixes x::x and y::x  and b::b and bv::bv\n  shows \"(x \\<leftrightarrow> y) \\<bullet> b = b\" and \"(x \\<leftrightarrow> y) \\<bullet> bv = bv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> y) \\<bullet> b = b &&&\n    (x \\<leftrightarrow> y) \\<bullet> bv = bv", "using flip_b_id"], ["proof (prove)\nusing this:\n  (?x \\<leftrightarrow> ?x') \\<bullet> ?b = ?b\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> y) \\<bullet> b = b &&&\n    (x \\<leftrightarrow> y) \\<bullet> bv = bv", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> y) \\<bullet> bv = bv", "by (metis b.eq_iff(7) b.perm_simps(7) flip_b_id)"], ["", "lemma flip_bv_x_cancel[simp]:\n  fixes bv::bv and z::bv and x::x\n  shows \"(bv \\<leftrightarrow> z) \\<bullet> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bv \\<leftrightarrow> z) \\<bullet> x = x", "using flip_fresh_fresh[of bv x z] fresh_at_base"], ["proof (prove)\nusing this:\n  \\<lbrakk>atom bv \\<sharp> x; atom z \\<sharp> x\\<rbrakk>\n  \\<Longrightarrow> (bv \\<leftrightarrow> z) \\<bullet> x = x\n  sort_of ?a \\<noteq> sort_of (atom ?b) \\<Longrightarrow> ?a \\<sharp> ?b\n  ?a \\<sharp> ?b = (?a \\<noteq> atom ?b)\n\ngoal (1 subgoal):\n 1. (bv \\<leftrightarrow> z) \\<bullet> x = x", "by auto"], ["", "lemma flip_bv_u_cancel[simp]:\n  fixes bv::bv and z::bv and x::u\n  shows \"(bv \\<leftrightarrow> z) \\<bullet> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bv \\<leftrightarrow> z) \\<bullet> x = x", "using flip_fresh_fresh[of bv x z] fresh_at_base"], ["proof (prove)\nusing this:\n  \\<lbrakk>atom bv \\<sharp> x; atom z \\<sharp> x\\<rbrakk>\n  \\<Longrightarrow> (bv \\<leftrightarrow> z) \\<bullet> x = x\n  sort_of ?a \\<noteq> sort_of (atom ?b) \\<Longrightarrow> ?a \\<sharp> ?b\n  ?a \\<sharp> ?b = (?a \\<noteq> atom ?b)\n\ngoal (1 subgoal):\n 1. (bv \\<leftrightarrow> z) \\<bullet> x = x", "by auto"], ["", "subsubsection \\<open>Literals\\<close>"], ["", "lemma supp_bitvec_empty:\n  fixes bv::\"bit list\"\n  shows \"supp bv = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp bv = {}", "proof(induct bv)"], ["proof (state)\ngoal (2 subgoals):\n 1. supp [] = {}\n 2. \\<And>a bv. supp bv = {} \\<Longrightarrow> supp (a # bv) = {}", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. supp [] = {}\n 2. \\<And>a bv. supp bv = {} \\<Longrightarrow> supp (a # bv) = {}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp [] = {}", "using supp_Nil"], ["proof (prove)\nusing this:\n  supp [] = {}\n\ngoal (1 subgoal):\n 1. supp [] = {}", "by auto"], ["proof (state)\nthis:\n  supp [] = {}\n\ngoal (1 subgoal):\n 1. \\<And>a bv. supp bv = {} \\<Longrightarrow> supp (a # bv) = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a bv. supp bv = {} \\<Longrightarrow> supp (a # bv) = {}", "case (Cons a bv)"], ["proof (state)\nthis:\n  supp bv = {}\n\ngoal (1 subgoal):\n 1. \\<And>a bv. supp bv = {} \\<Longrightarrow> supp (a # bv) = {}", "then"], ["proof (chain)\npicking this:\n  supp bv = {}", "show ?case"], ["proof (prove)\nusing this:\n  supp bv = {}\n\ngoal (1 subgoal):\n 1. supp (a # bv) = {}", "using supp_Cons  bit.supp"], ["proof (prove)\nusing this:\n  supp bv = {}\n  supp (?x # ?xs) = supp ?x \\<union> supp ?xs\n  supp BitOne = {}\n  supp BitZero = {}\n\ngoal (1 subgoal):\n 1. supp (a # bv) = {}", "by (metis (mono_tags, hide_lams) bit.strong_exhaust l.supp(5) sup_bot.right_neutral)"], ["proof (state)\nthis:\n  supp (a # bv) = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bitvec_pure[simp]:\n  fixes bv::\"bit list\" and x::x\n  shows \"atom x \\<sharp> bv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> bv", "using fresh_def supp_bitvec_empty"], ["proof (prove)\nusing this:\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  supp ?bv = {}\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> bv", "by auto"], ["", "lemma supp_l_empty[simp]:\n  fixes l:: l\n  shows \"supp (V_lit l) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp [ l ]\\<^sup>v = {}", "by(nominal_induct l rule: l.strong_induct,\n      auto simp add: l.strong_exhaust pure_supp v.fv_defs supp_bitvec_empty)"], ["", "lemma type_l_nosupp[simp]:\n  fixes x::x and l::l\n  shows \"atom x \\<notin> supp (\\<lbrace> z : b  |  [[z]\\<^sup>v]\\<^sup>c\\<^sup>e ==  [[l]\\<^sup>v]\\<^sup>c\\<^sup>e \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x\n    \\<notin> supp\n              \\<lbrace> z : b  | [ [ z ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  [ [ l ]\\<^sup>v ]\\<^sup>c\\<^sup>e  \\<rbrace>", "using supp_at_base supp_l_empty ce.supp(1) c.supp \\<tau>.supp"], ["proof (prove)\nusing this:\n  supp ?a = {atom ?a}\n  supp [ ?l ]\\<^sup>v = {}\n  supp [ ?v ]\\<^sup>c\\<^sup>e = supp ?v\n  supp (TRUE) = {}\n  supp (FALSE) = {}\n  supp (?c1.0  AND  ?c2.0 ) = supp ?c1.0 \\<union> supp ?c2.0\n  supp (?c1.0 OR ?c2.0 ) = supp ?c1.0 \\<union> supp ?c2.0\n  supp (\\<not> ?c ) = supp ?c\n  supp (?c1.0  IMP  ?c2.0 ) = supp ?c1.0 \\<union> supp ?c2.0\n  supp (?ce1.0  ==  ?ce2.0 ) = supp ?ce1.0 \\<union> supp ?ce2.0\n  supp \\<lbrace> ?x : ?b  | ?c \\<rbrace> =\n  supp ?c - set [atom ?x] \\<union> supp ?b\n\ngoal (1 subgoal):\n 1. atom x\n    \\<notin> supp\n              \\<lbrace> z : b  | [ [ z ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  [ [ l ]\\<^sup>v ]\\<^sup>c\\<^sup>e  \\<rbrace>", "by force"], ["", "lemma flip_bitvec0:\n  fixes x::\"bit list\"\n  assumes \"atom c \\<sharp> (z, x, z')\"\n  shows \"(z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "have \"atom z \\<sharp> x\" and \"atom z' \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom z \\<sharp> x &&& atom z' \\<sharp> x", "using flip_fresh_fresh assms supp_bitvec_empty fresh_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  atom c \\<sharp> (z, x, z')\n  supp ?bv = {}\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. atom z \\<sharp> x &&& atom z' \\<sharp> x", "by blast+"], ["proof (state)\nthis:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "moreover"], ["proof (state)\nthis:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "have \"atom c \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom c \\<sharp> x", "using  supp_bitvec_empty fresh_def"], ["proof (prove)\nusing this:\n  supp ?bv = {}\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. atom c \\<sharp> x", "by auto"], ["proof (state)\nthis:\n  atom c \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "ultimately"], ["proof (chain)\npicking this:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n  atom c \\<sharp> x", "show ?thesis"], ["proof (prove)\nusing this:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n  atom c \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "using assms flip_fresh_fresh"], ["proof (prove)\nusing this:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n  atom c \\<sharp> x\n  atom c \\<sharp> (z, x, z')\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "by metis"], ["proof (state)\nthis:\n  (z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flip_bitvec:\n  assumes \"atom c \\<sharp> (z, L_bitvec x, z')\"\n  shows \"(z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "have \"atom z \\<sharp> x\" and \"atom z' \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom z \\<sharp> x &&& atom z' \\<sharp> x", "using flip_fresh_fresh assms supp_bitvec_empty fresh_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  atom c \\<sharp> (z, L_bitvec x, z')\n  supp ?bv = {}\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. atom z \\<sharp> x &&& atom z' \\<sharp> x", "by blast+"], ["proof (state)\nthis:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "moreover"], ["proof (state)\nthis:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "have \"atom c \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom c \\<sharp> x", "using  supp_bitvec_empty fresh_def"], ["proof (prove)\nusing this:\n  supp ?bv = {}\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. atom c \\<sharp> x", "by auto"], ["proof (state)\nthis:\n  atom c \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "ultimately"], ["proof (chain)\npicking this:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n  atom c \\<sharp> x", "show ?thesis"], ["proof (prove)\nusing this:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n  atom c \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "using assms flip_fresh_fresh"], ["proof (prove)\nusing this:\n  atom z \\<sharp> x\n  atom z' \\<sharp> x\n  atom c \\<sharp> x\n  atom c \\<sharp> (z, L_bitvec x, z')\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "by metis"], ["proof (state)\nthis:\n  (z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma type_l_eq:\n  shows \"\\<lbrace> z : b  |  [[z]\\<^sup>v]\\<^sup>c\\<^sup>e == [V_lit l]\\<^sup>c\\<^sup>e \\<rbrace> = (\\<lbrace> z' : b  |  [[z']\\<^sup>v]\\<^sup>c\\<^sup>e == [V_lit l]\\<^sup>c\\<^sup>e \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> z : b  | [ [ z ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  [ [ l ]\\<^sup>v ]\\<^sup>c\\<^sup>e  \\<rbrace> =\n    \\<lbrace> z' : b  | [ [ z' ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  [ [ l ]\\<^sup>v ]\\<^sup>c\\<^sup>e  \\<rbrace>", "by(auto,nominal_induct l rule: l.strong_induct,auto, metis permute_pure, auto simp add: flip_bitvec)"], ["", "lemma flip_l_eq:\n  fixes x::l\n  shows \"(z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "have \"atom z \\<sharp> x\" and \"atom c \\<sharp> x\" and \"atom z' \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom z \\<sharp> x &&& atom c \\<sharp> x &&& atom z' \\<sharp> x", "using flip_fresh_fresh fresh_def supp_l_empty"], ["proof (prove)\nusing this:\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  supp [ ?l ]\\<^sup>v = {}\n\ngoal (1 subgoal):\n 1. atom z \\<sharp> x &&& atom c \\<sharp> x &&& atom z' \\<sharp> x", "by fastforce+"], ["proof (state)\nthis:\n  atom z \\<sharp> x\n  atom c \\<sharp> x\n  atom z' \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  atom z \\<sharp> x\n  atom c \\<sharp> x\n  atom z' \\<sharp> x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "using flip_fresh_fresh"], ["proof (prove)\nusing this:\n  atom z \\<sharp> x\n  atom c \\<sharp> x\n  atom z' \\<sharp> x\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> c) \\<bullet> x =\n    (z' \\<leftrightarrow> c) \\<bullet> x", "by metis"], ["proof (state)\nthis:\n  (z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flip_l_eq1:\n  fixes x::l\n  assumes  \"(z \\<leftrightarrow> c) \\<bullet> x = (z' \\<leftrightarrow> c) \\<bullet> x'\"\n  shows \"x' = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x' = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x' = x", "have \"atom z \\<sharp> x\" and \"atom c \\<sharp> x'\" and \"atom c \\<sharp> x\" and \"atom z' \\<sharp> x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (atom z \\<sharp> x &&& atom c \\<sharp> x') &&&\n    atom c \\<sharp> x &&& atom z' \\<sharp> x'", "using flip_fresh_fresh fresh_def supp_l_empty"], ["proof (prove)\nusing this:\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  supp [ ?l ]\\<^sup>v = {}\n\ngoal (1 subgoal):\n 1. (atom z \\<sharp> x &&& atom c \\<sharp> x') &&&\n    atom c \\<sharp> x &&& atom z' \\<sharp> x'", "by fastforce+"], ["proof (state)\nthis:\n  atom z \\<sharp> x\n  atom c \\<sharp> x'\n  atom c \\<sharp> x\n  atom z' \\<sharp> x'\n\ngoal (1 subgoal):\n 1. x' = x", "thus ?thesis"], ["proof (prove)\nusing this:\n  atom z \\<sharp> x\n  atom c \\<sharp> x'\n  atom c \\<sharp> x\n  atom z' \\<sharp> x'\n\ngoal (1 subgoal):\n 1. x' = x", "using flip_fresh_fresh assms"], ["proof (prove)\nusing this:\n  atom z \\<sharp> x\n  atom c \\<sharp> x'\n  atom c \\<sharp> x\n  atom z' \\<sharp> x'\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  (z \\<leftrightarrow> c) \\<bullet> x =\n  (z' \\<leftrightarrow> c) \\<bullet> x'\n\ngoal (1 subgoal):\n 1. x' = x", "by metis"], ["proof (state)\nthis:\n  x' = x\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Types\\<close>"], ["", "lemma flip_base_eq:\n  fixes b::b and x::x and y::x                      \n  shows \"(x \\<leftrightarrow> y) \\<bullet> b = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> y) \\<bullet> b = b", "using b.fresh"], ["proof (prove)\nusing this:\n  ?a \\<sharp> B_int\n  ?a \\<sharp> B_bool\n  ?a \\<sharp> B_id ?list = ?a \\<sharp> ?list\n  ?a \\<sharp> [ ?b1.0 , ?b2.0 ]\\<^sup>b =\n  (?a \\<sharp> ?b1.0 \\<and> ?a \\<sharp> ?b2.0)\n  ?a \\<sharp> B_unit\n  ?a \\<sharp> B_bitvec\n  ?a \\<sharp> B_var ?bv = ?a \\<sharp> ?bv\n  ?a \\<sharp> B_app ?list ?b = (?a \\<sharp> ?list \\<and> ?a \\<sharp> ?b)\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> y) \\<bullet> b = b", "by (simp add: flip_fresh_fresh fresh_def)"], ["", "text \\<open> Obtain an alpha-equivalent type where the bound variable is fresh in some term t \\<close>"], ["", "lemma has_fresh_z0:\n  fixes t::\"'b::fs\"\n  shows \"\\<exists>z. atom z \\<sharp> (c',t) \\<and> (\\<lbrace>z' : b | c' \\<rbrace>) = (\\<lbrace> z : b | (z \\<leftrightarrow> z' ) \\<bullet> c' \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       atom z \\<sharp> (c', t) \\<and>\n       \\<lbrace> z' : b  | c' \\<rbrace> =\n       \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       atom z \\<sharp> (c', t) \\<and>\n       \\<lbrace> z' : b  | c' \\<rbrace> =\n       \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "obtain z::x where fr: \"atom z \\<sharp> (c',t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        atom z \\<sharp> (c', t) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using obtain_fresh"], ["proof (prove)\nusing this:\n  (\\<And>a. atom a \\<sharp> ?x \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        atom z \\<sharp> (c', t) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  atom z \\<sharp> (c', t)\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       atom z \\<sharp> (c', t) \\<and>\n       \\<lbrace> z' : b  | c' \\<rbrace> =\n       \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "moreover"], ["proof (state)\nthis:\n  atom z \\<sharp> (c', t)\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       atom z \\<sharp> (c', t) \\<and>\n       \\<lbrace> z' : b  | c' \\<rbrace> =\n       \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "hence \"(\\<lbrace> z' : b | c' \\<rbrace>) = (\\<lbrace> z : b | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>)\""], ["proof (prove)\nusing this:\n  atom z \\<sharp> (c', t)\n\ngoal (1 subgoal):\n 1. \\<lbrace> z' : b  | c' \\<rbrace> =\n    \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "using \\<tau>.eq_iff Abs1_eq_iff"], ["proof (prove)\nusing this:\n  atom z \\<sharp> (c', t)\n  (\\<lbrace> ?x : ?b  | ?c \\<rbrace> =\n   \\<lbrace> ?xa : ?ba  | ?ca \\<rbrace>) =\n  ([[atom ?x]]lst. ?c = [[atom ?xa]]lst. ?ca \\<and> ?b = ?ba)\n  ([{atom ?a}]set. ?x = [{atom ?b}]set. ?y) =\n  (?a = ?b \\<and> ?x = ?y \\<or>\n   ?a \\<noteq> ?b \\<and>\n   ?x = (?a \\<leftrightarrow> ?b) \\<bullet> ?y \\<and> atom ?a \\<sharp> ?y)\n  ([{atom ?a}]res. ?x = [{atom ?b}]res. ?y) =\n  (?a = ?b \\<and> ?x = ?y \\<or>\n   ?a \\<noteq> ?b \\<and>\n   ?x = (?a \\<leftrightarrow> ?b) \\<bullet> ?y \\<and> atom ?a \\<sharp> ?y)\n  ([[atom ?a]]lst. ?x = [[atom ?b]]lst. ?y) =\n  (?a = ?b \\<and> ?x = ?y \\<or>\n   ?a \\<noteq> ?b \\<and>\n   ?x = (?a \\<leftrightarrow> ?b) \\<bullet> ?y \\<and> atom ?a \\<sharp> ?y)\n\ngoal (1 subgoal):\n 1. \\<lbrace> z' : b  | c' \\<rbrace> =\n    \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "by (metis flip_commute flip_fresh_fresh fresh_PairD(1))"], ["proof (state)\nthis:\n  \\<lbrace> z' : b  | c' \\<rbrace> =\n  \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       atom z \\<sharp> (c', t) \\<and>\n       \\<lbrace> z' : b  | c' \\<rbrace> =\n       \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "ultimately"], ["proof (chain)\npicking this:\n  atom z \\<sharp> (c', t)\n  \\<lbrace> z' : b  | c' \\<rbrace> =\n  \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "show ?thesis"], ["proof (prove)\nusing this:\n  atom z \\<sharp> (c', t)\n  \\<lbrace> z' : b  | c' \\<rbrace> =\n  \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<exists>z.\n       atom z \\<sharp> (c', t) \\<and>\n       \\<lbrace> z' : b  | c' \\<rbrace> =\n       \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>z.\n     atom z \\<sharp> (c', t) \\<and>\n     \\<lbrace> z' : b  | c' \\<rbrace> =\n     \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma has_fresh_z:\n  fixes t::\"'b::fs\"\n  shows \"\\<exists>z b c. atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b | c \\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z b c.\n       atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>z b c.\n       atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>", "obtain z' and b and c' where teq: \"\\<tau> =  (\\<lbrace> z' : b | c' \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z' b c'.\n        \\<tau> = \\<lbrace> z' : b  | c' \\<rbrace> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<tau>.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2 x3.\n      ?y = \\<lbrace> x1 : x2  | x3 \\<rbrace> \\<Longrightarrow>\n      ?P) \\<Longrightarrow>\n  ?P\n\ngoal (1 subgoal):\n 1. (\\<And>z' b c'.\n        \\<tau> = \\<lbrace> z' : b  | c' \\<rbrace> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<tau> = \\<lbrace> z' : b  | c' \\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<exists>z b c.\n       atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>", "obtain z::x where fr: \"atom z \\<sharp> (t,c')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        atom z \\<sharp> (t, c') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using obtain_fresh"], ["proof (prove)\nusing this:\n  (\\<And>a. atom a \\<sharp> ?x \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        atom z \\<sharp> (t, c') \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  atom z \\<sharp> (t, c')\n\ngoal (1 subgoal):\n 1. \\<exists>z b c.\n       atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>", "hence \"(\\<lbrace> z' : b | c' \\<rbrace>) = (\\<lbrace> z : b | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>)\""], ["proof (prove)\nusing this:\n  atom z \\<sharp> (t, c')\n\ngoal (1 subgoal):\n 1. \\<lbrace> z' : b  | c' \\<rbrace> =\n    \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "using \\<tau>.eq_iff Abs1_eq_iff\n      flip_commute flip_fresh_fresh fresh_PairD(1)"], ["proof (prove)\nusing this:\n  atom z \\<sharp> (t, c')\n  (\\<lbrace> ?x : ?b  | ?c \\<rbrace> =\n   \\<lbrace> ?xa : ?ba  | ?ca \\<rbrace>) =\n  ([[atom ?x]]lst. ?c = [[atom ?xa]]lst. ?ca \\<and> ?b = ?ba)\n  ([{atom ?a}]set. ?x = [{atom ?b}]set. ?y) =\n  (?a = ?b \\<and> ?x = ?y \\<or>\n   ?a \\<noteq> ?b \\<and>\n   ?x = (?a \\<leftrightarrow> ?b) \\<bullet> ?y \\<and> atom ?a \\<sharp> ?y)\n  ([{atom ?a}]res. ?x = [{atom ?b}]res. ?y) =\n  (?a = ?b \\<and> ?x = ?y \\<or>\n   ?a \\<noteq> ?b \\<and>\n   ?x = (?a \\<leftrightarrow> ?b) \\<bullet> ?y \\<and> atom ?a \\<sharp> ?y)\n  ([[atom ?a]]lst. ?x = [[atom ?b]]lst. ?y) =\n  (?a = ?b \\<and> ?x = ?y \\<or>\n   ?a \\<noteq> ?b \\<and>\n   ?x = (?a \\<leftrightarrow> ?b) \\<bullet> ?y \\<and> atom ?a \\<sharp> ?y)\n  (?a \\<leftrightarrow> ?b) = (?b \\<leftrightarrow> ?a)\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  ?a \\<sharp> (?x, ?y) \\<Longrightarrow> ?a \\<sharp> ?x\n\ngoal (1 subgoal):\n 1. \\<lbrace> z' : b  | c' \\<rbrace> =\n    \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "by (metis fresh_PairD(2))"], ["proof (state)\nthis:\n  \\<lbrace> z' : b  | c' \\<rbrace> =\n  \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<exists>z b c.\n       atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>", "hence \"atom z \\<sharp> t \\<and> \\<tau> = (\\<lbrace> z : b | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>)\""], ["proof (prove)\nusing this:\n  \\<lbrace> z' : b  | c' \\<rbrace> =\n  \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>\n\ngoal (1 subgoal):\n 1. atom z \\<sharp> t \\<and>\n    \\<tau> =\n    \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "using fr teq"], ["proof (prove)\nusing this:\n  \\<lbrace> z' : b  | c' \\<rbrace> =\n  \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>\n  atom z \\<sharp> (t, c')\n  \\<tau> = \\<lbrace> z' : b  | c' \\<rbrace>\n\ngoal (1 subgoal):\n 1. atom z \\<sharp> t \\<and>\n    \\<tau> =\n    \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>", "by force"], ["proof (state)\nthis:\n  atom z \\<sharp> t \\<and>\n  \\<tau> =\n  \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<exists>z b c.\n       atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>", "thus ?thesis"], ["proof (prove)\nusing this:\n  atom z \\<sharp> t \\<and>\n  \\<tau> =\n  \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<exists>z b c.\n       atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>", "using teq fr"], ["proof (prove)\nusing this:\n  atom z \\<sharp> t \\<and>\n  \\<tau> =\n  \\<lbrace> z : b  | (z \\<leftrightarrow> z') \\<bullet> c' \\<rbrace>\n  \\<tau> = \\<lbrace> z' : b  | c' \\<rbrace>\n  atom z \\<sharp> (t, c')\n\ngoal (1 subgoal):\n 1. \\<exists>z b c.\n       atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>", "by fast"], ["proof (state)\nthis:\n  \\<exists>z b c.\n     atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma obtain_fresh_z:\n  fixes t::\"'b::fs\"\n  obtains z and b and c where \"atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b | c \\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z b c.\n        atom z \\<sharp> t \\<and>\n        \\<tau> = \\<lbrace> z : b  | c \\<rbrace> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using has_fresh_z"], ["proof (prove)\nusing this:\n  \\<exists>z b c.\n     atom z \\<sharp> ?t \\<and> ?\\<tau> = \\<lbrace> z : b  | c \\<rbrace>\n\ngoal (1 subgoal):\n 1. (\\<And>z b c.\n        atom z \\<sharp> t \\<and>\n        \\<tau> = \\<lbrace> z : b  | c \\<rbrace> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "lemma has_fresh_z2:\n  fixes t::\"'b::fs\"\n  shows \"\\<exists>z c. atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b_of \\<tau> | c \\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z c.\n       atom z \\<sharp> t \\<and>\n       \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>z c.\n       atom z \\<sharp> t \\<and>\n       \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace>", "obtain z and b and c where \"atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b | c \\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z b c.\n        atom z \\<sharp> t \\<and>\n        \\<tau> = \\<lbrace> z : b  | c \\<rbrace> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using obtain_fresh_z"], ["proof (prove)\nusing this:\n  (\\<And>z b c.\n      atom z \\<sharp> ?t \\<and>\n      ?\\<tau> = \\<lbrace> z : b  | c \\<rbrace> \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>z b c.\n        atom z \\<sharp> t \\<and>\n        \\<tau> = \\<lbrace> z : b  | c \\<rbrace> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<exists>z c.\n       atom z \\<sharp> t \\<and>\n       \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace>", "moreover"], ["proof (state)\nthis:\n  atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<exists>z c.\n       atom z \\<sharp> t \\<and>\n       \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace>", "then"], ["proof (chain)\npicking this:\n  atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>", "have \"b_of \\<tau> = b\""], ["proof (prove)\nusing this:\n  atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>\n\ngoal (1 subgoal):\n 1. b_of \\<tau> = b", "using \\<tau>.eq_iff"], ["proof (prove)\nusing this:\n  atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>\n  (\\<lbrace> ?x : ?b  | ?c \\<rbrace> =\n   \\<lbrace> ?xa : ?ba  | ?ca \\<rbrace>) =\n  ([[atom ?x]]lst. ?c = [[atom ?xa]]lst. ?ca \\<and> ?b = ?ba)\n\ngoal (1 subgoal):\n 1. b_of \\<tau> = b", "by simp"], ["proof (state)\nthis:\n  b_of \\<tau> = b\n\ngoal (1 subgoal):\n 1. \\<exists>z c.\n       atom z \\<sharp> t \\<and>\n       \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace>", "ultimately"], ["proof (chain)\npicking this:\n  atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>\n  b_of \\<tau> = b", "show ?thesis"], ["proof (prove)\nusing this:\n  atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>\n  b_of \\<tau> = b\n\ngoal (1 subgoal):\n 1. \\<exists>z c.\n       atom z \\<sharp> t \\<and>\n       \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace>", "using obtain_fresh_z \\<tau>.eq_iff"], ["proof (prove)\nusing this:\n  atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b  | c \\<rbrace>\n  b_of \\<tau> = b\n  (\\<And>z b c.\n      atom z \\<sharp> ?t \\<and>\n      ?\\<tau> = \\<lbrace> z : b  | c \\<rbrace> \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n  (\\<lbrace> ?x : ?b  | ?c \\<rbrace> =\n   \\<lbrace> ?xa : ?ba  | ?ca \\<rbrace>) =\n  ([[atom ?x]]lst. ?c = [[atom ?xa]]lst. ?ca \\<and> ?b = ?ba)\n\ngoal (1 subgoal):\n 1. \\<exists>z c.\n       atom z \\<sharp> t \\<and>\n       \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace>", "by auto"], ["proof (state)\nthis:\n  \\<exists>z c.\n     atom z \\<sharp> t \\<and>\n     \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma obtain_fresh_z2:\n  fixes t::\"'b::fs\"\n  obtains z and  c where \"atom z \\<sharp> t \\<and> \\<tau> = \\<lbrace> z : b_of \\<tau> | c \\<rbrace>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z c.\n        atom z \\<sharp> t \\<and>\n        \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using has_fresh_z2"], ["proof (prove)\nusing this:\n  \\<exists>z c.\n     atom z \\<sharp> ?t \\<and>\n     ?\\<tau> = \\<lbrace> z : b_of ?\\<tau>  | c \\<rbrace>\n\ngoal (1 subgoal):\n 1. (\\<And>z c.\n        atom z \\<sharp> t \\<and>\n        \\<tau> = \\<lbrace> z : b_of \\<tau>  | c \\<rbrace> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["", "subsubsection \\<open>Values\\<close>"], ["", "lemma u_notin_supp_v[simp]:\n  fixes u::u and v::v\n  shows \"atom u \\<notin> supp v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<notin> supp v", "proof(nominal_induct v rule: v.strong_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x. atom u \\<notin> supp [ x ]\\<^sup>v\n 2. \\<And>x. atom u \\<notin> supp [ x ]\\<^sup>v\n 3. \\<And>x1a x2a.\n       \\<lbrakk>atom u \\<notin> supp x1a; atom u \\<notin> supp x2a\\<rbrakk>\n       \\<Longrightarrow> atom u \\<notin> supp [ x1a , x2a ]\\<^sup>v\n 4. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 5. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "case (V_lit l)"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>x. atom u \\<notin> supp [ x ]\\<^sup>v\n 2. \\<And>x. atom u \\<notin> supp [ x ]\\<^sup>v\n 3. \\<And>x1a x2a.\n       \\<lbrakk>atom u \\<notin> supp x1a; atom u \\<notin> supp x2a\\<rbrakk>\n       \\<Longrightarrow> atom u \\<notin> supp [ x1a , x2a ]\\<^sup>v\n 4. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 5. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<notin> supp [ l ]\\<^sup>v", "using supp_l_empty"], ["proof (prove)\nusing this:\n  supp [ ?l ]\\<^sup>v = {}\n\ngoal (1 subgoal):\n 1. atom u \\<notin> supp [ l ]\\<^sup>v", "by auto"], ["proof (state)\nthis:\n  atom u \\<notin> supp [ l ]\\<^sup>v\n\ngoal (4 subgoals):\n 1. \\<And>x. atom u \\<notin> supp [ x ]\\<^sup>v\n 2. \\<And>x1a x2a.\n       \\<lbrakk>atom u \\<notin> supp x1a; atom u \\<notin> supp x2a\\<rbrakk>\n       \\<Longrightarrow> atom u \\<notin> supp [ x1a , x2a ]\\<^sup>v\n 3. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 4. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x. atom u \\<notin> supp [ x ]\\<^sup>v\n 2. \\<And>x1a x2a.\n       \\<lbrakk>atom u \\<notin> supp x1a; atom u \\<notin> supp x2a\\<rbrakk>\n       \\<Longrightarrow> atom u \\<notin> supp [ x1a , x2a ]\\<^sup>v\n 3. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 4. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "case (V_var x)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>x. atom u \\<notin> supp [ x ]\\<^sup>v\n 2. \\<And>x1a x2a.\n       \\<lbrakk>atom u \\<notin> supp x1a; atom u \\<notin> supp x2a\\<rbrakk>\n       \\<Longrightarrow> atom u \\<notin> supp [ x1a , x2a ]\\<^sup>v\n 3. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 4. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<notin> supp [ x ]\\<^sup>v", "by (simp add: supp_at_base)"], ["proof (state)\nthis:\n  atom u \\<notin> supp [ x ]\\<^sup>v\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom u \\<notin> supp x1a; atom u \\<notin> supp x2a\\<rbrakk>\n       \\<Longrightarrow> atom u \\<notin> supp [ x1a , x2a ]\\<^sup>v\n 2. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 3. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom u \\<notin> supp x1a; atom u \\<notin> supp x2a\\<rbrakk>\n       \\<Longrightarrow> atom u \\<notin> supp [ x1a , x2a ]\\<^sup>v\n 2. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 3. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "case (V_pair v1 v2)"], ["proof (state)\nthis:\n  atom u \\<notin> supp v1\n  atom u \\<notin> supp v2\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom u \\<notin> supp x1a; atom u \\<notin> supp x2a\\<rbrakk>\n       \\<Longrightarrow> atom u \\<notin> supp [ x1a , x2a ]\\<^sup>v\n 2. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 3. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "then"], ["proof (chain)\npicking this:\n  atom u \\<notin> supp v1\n  atom u \\<notin> supp v2", "show ?case"], ["proof (prove)\nusing this:\n  atom u \\<notin> supp v1\n  atom u \\<notin> supp v2\n\ngoal (1 subgoal):\n 1. atom u \\<notin> supp [ v1 , v2 ]\\<^sup>v", "by auto"], ["proof (state)\nthis:\n  atom u \\<notin> supp [ v1 , v2 ]\\<^sup>v\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 2. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 2. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "case (V_cons tyid list v)"], ["proof (state)\nthis:\n  atom u \\<notin> supp v\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2a x3.\n       atom u \\<notin> supp x3 \\<Longrightarrow>\n       atom u \\<notin> supp (V_cons x1a x2a x3)\n 2. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "then"], ["proof (chain)\npicking this:\n  atom u \\<notin> supp v", "show ?case"], ["proof (prove)\nusing this:\n  atom u \\<notin> supp v\n\ngoal (1 subgoal):\n 1. atom u \\<notin> supp (V_cons tyid list v)", "using pure_supp"], ["proof (prove)\nusing this:\n  atom u \\<notin> supp v\n  supp ?x = {}\n\ngoal (1 subgoal):\n 1. atom u \\<notin> supp (V_cons tyid list v)", "by auto"], ["proof (state)\nthis:\n  atom u \\<notin> supp (V_cons tyid list v)\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "case (V_consp tyid list b v)"], ["proof (state)\nthis:\n  atom u \\<notin> supp v\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 x4.\n       atom u \\<notin> supp x4 \\<Longrightarrow>\n       atom u \\<notin> supp (V_consp x1a x2a x3 x4)", "then"], ["proof (chain)\npicking this:\n  atom u \\<notin> supp v", "show ?case"], ["proof (prove)\nusing this:\n  atom u \\<notin> supp v\n\ngoal (1 subgoal):\n 1. atom u \\<notin> supp (V_consp tyid list b v)", "using pure_supp"], ["proof (prove)\nusing this:\n  atom u \\<notin> supp v\n  supp ?x = {}\n\ngoal (1 subgoal):\n 1. atom u \\<notin> supp (V_consp tyid list b v)", "by auto"], ["proof (state)\nthis:\n  atom u \\<notin> supp (V_consp tyid list b v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma u_fresh_xv[simp]:\n  fixes u::u and x::x and v::v\n  shows \"atom u \\<sharp>  (x,v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<sharp> (x, v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. atom u \\<sharp> (x, v)", "have \"atom u \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<sharp> x", "using fresh_def"], ["proof (prove)\nusing this:\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. atom u \\<sharp> x", "by fastforce"], ["proof (state)\nthis:\n  atom u \\<sharp> x\n\ngoal (1 subgoal):\n 1. atom u \\<sharp> (x, v)", "moreover"], ["proof (state)\nthis:\n  atom u \\<sharp> x\n\ngoal (1 subgoal):\n 1. atom u \\<sharp> (x, v)", "have \"atom u \\<sharp> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom u \\<sharp> v", "using fresh_def u_notin_supp_v"], ["proof (prove)\nusing this:\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  atom ?u \\<notin> supp ?v\n\ngoal (1 subgoal):\n 1. atom u \\<sharp> v", "by metis"], ["proof (state)\nthis:\n  atom u \\<sharp> v\n\ngoal (1 subgoal):\n 1. atom u \\<sharp> (x, v)", "ultimately"], ["proof (chain)\npicking this:\n  atom u \\<sharp> x\n  atom u \\<sharp> v", "show ?thesis"], ["proof (prove)\nusing this:\n  atom u \\<sharp> x\n  atom u \\<sharp> v\n\ngoal (1 subgoal):\n 1. atom u \\<sharp> (x, v)", "using fresh_prod2"], ["proof (prove)\nusing this:\n  atom u \\<sharp> x\n  atom u \\<sharp> v\n  ?x \\<sharp> (?a, ?b) = (?x \\<sharp> ?a \\<and> ?x \\<sharp> ?b)\n\ngoal (1 subgoal):\n 1. atom u \\<sharp> (x, v)", "by auto"], ["proof (state)\nthis:\n  atom u \\<sharp> (x, v)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Part of an effort to make the proofs across inductive cases more uniform by distilling \nthe non-uniform parts into lemmas like this\\<close>"], ["", "lemma v_flip_eq:\n  fixes v::v and va::v and x::x and c::x\n  assumes \"atom c \\<sharp> (v, va)\" and \"atom c \\<sharp> (x, xa, v, va)\" and \"(x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> va\" \n  shows \"((v = V_lit l \\<longrightarrow> (\\<exists>l'. va = V_lit l' \\<and>  (x \\<leftrightarrow> c) \\<bullet> l = (xa \\<leftrightarrow> c) \\<bullet> l'))) \\<and>\n         ((v = V_var y \\<longrightarrow> (\\<exists>y'. va = V_var y' \\<and>  (x \\<leftrightarrow> c) \\<bullet> y = (xa \\<leftrightarrow> c) \\<bullet> y'))) \\<and>\n         ((v = V_pair vone vtwo \\<longrightarrow> (\\<exists>v1' v2'. va = V_pair v1' v2' \\<and>  (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>  (x \\<leftrightarrow> c) \\<bullet> vtwo = (xa \\<leftrightarrow> c) \\<bullet> v2'))) \\<and>\n         ((v = V_cons tyid dc vone \\<longrightarrow> (\\<exists>v1'. va = V_cons tyid dc v1'\\<and>  (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1'))) \\<and>\n         ((v = V_consp tyid dc b vone \\<longrightarrow> (\\<exists>v1'. va = V_consp tyid dc b v1'\\<and>  (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1')))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    (v = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    (v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    (v = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    (v = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "using assms"], ["proof (prove)\nusing this:\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. (v = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    (v = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    (v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    (v = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    (v = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "proof(nominal_induct v rule:v.strong_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>xb.\n       \\<lbrakk>atom c \\<sharp> ([ xb ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ xb ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ xb ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ xb ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ xb ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>xb.\n       \\<lbrakk>atom c \\<sharp> ([ xb ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ xb ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ xb ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ xb ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ xb ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x1a, va);\n                 atom c \\<sharp> (x, xa, x1a, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x1a =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x1a = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x1a = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x1a =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x1a =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x1a =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        \\<lbrakk>atom c \\<sharp> (x2a, va);\n         atom c \\<sharp> (x, xa, x2a, va);\n         (x \\<leftrightarrow> c) \\<bullet> x2a =\n         (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n        \\<Longrightarrow> (x2a = [ l ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>l'.\n                               va = [ l' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> l =\n                               (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                          (x2a = [ y ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>y'.\n                               va = [ y' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> y =\n                               (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                          (x2a = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>v1' v2'.\n                               va = [ v1' , v2' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                               (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                          (x2a = V_cons tyid dc vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_cons tyid dc v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                          (x2a = V_consp tyid dc b vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_consp tyid dc b v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> ([ x1a , x2a ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ x1a , x2a ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ x1a , x2a ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ x1a , x2a ]\\<^sup>v =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 4. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 5. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "case (V_lit l)"], ["proof (state)\nthis:\n  atom c \\<sharp> ([ l ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ l ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ l ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (5 subgoals):\n 1. \\<And>xb.\n       \\<lbrakk>atom c \\<sharp> ([ xb ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ xb ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ xb ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ xb ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ xb ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>xb.\n       \\<lbrakk>atom c \\<sharp> ([ xb ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ xb ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ xb ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ xb ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ xb ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x1a, va);\n                 atom c \\<sharp> (x, xa, x1a, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x1a =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x1a = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x1a = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x1a =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x1a =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x1a =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        \\<lbrakk>atom c \\<sharp> (x2a, va);\n         atom c \\<sharp> (x, xa, x2a, va);\n         (x \\<leftrightarrow> c) \\<bullet> x2a =\n         (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n        \\<Longrightarrow> (x2a = [ l ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>l'.\n                               va = [ l' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> l =\n                               (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                          (x2a = [ y ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>y'.\n                               va = [ y' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> y =\n                               (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                          (x2a = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>v1' v2'.\n                               va = [ v1' , v2' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                               (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                          (x2a = V_cons tyid dc vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_cons tyid dc v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                          (x2a = V_consp tyid dc b vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_consp tyid dc b v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> ([ x1a , x2a ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ x1a , x2a ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ x1a , x2a ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ x1a , x2a ]\\<^sup>v =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 4. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 5. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "then"], ["proof (chain)\npicking this:\n  atom c \\<sharp> ([ l ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ l ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ l ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va", "show ?case"], ["proof (prove)\nusing this:\n  atom c \\<sharp> ([ l ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ l ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ l ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. ([ l ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    ([ l ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    ([ l ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    ([ l ]\\<^sup>v = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    ([ l ]\\<^sup>v = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "using assms v.perm_simps \n      empty_iff flip_def fresh_def fresh_permute_iff supp_l_empty swap_fresh_fresh v.fresh"], ["proof (prove)\nusing this:\n  atom c \\<sharp> ([ l ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ l ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ l ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  ?p \\<bullet> [ ?l ]\\<^sup>v = [ ?p \\<bullet> ?l ]\\<^sup>v\n  ?p \\<bullet> [ ?x ]\\<^sup>v = [ ?p \\<bullet> ?x ]\\<^sup>v\n  ?p \\<bullet> [ ?v1.0 , ?v2.0 ]\\<^sup>v =\n  [ ?p \\<bullet> ?v1.0 , ?p \\<bullet> ?v2.0 ]\\<^sup>v\n  ?p \\<bullet> V_cons ?list1.0 ?list2.0 ?v =\n  V_cons (?p \\<bullet> ?list1.0) (?p \\<bullet> ?list2.0) (?p \\<bullet> ?v)\n  ?p \\<bullet> V_consp ?list1.0 ?list2.0 ?b ?v =\n  V_consp (?p \\<bullet> ?list1.0) (?p \\<bullet> ?list2.0) (?p \\<bullet> ?b)\n   (?p \\<bullet> ?v)\n  (?c \\<in> {}) = False\n  (?a \\<leftrightarrow> ?b) = (atom ?a \\<rightleftharpoons> atom ?b)\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  ?p \\<bullet> ?a \\<sharp> ?p \\<bullet> ?x = ?a \\<sharp> ?x\n  supp [ ?l ]\\<^sup>v = {}\n  \\<lbrakk>?a \\<sharp> ?x; ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<rightleftharpoons> ?b) \\<bullet> ?x = ?x\n  ?a \\<sharp> [ ?l ]\\<^sup>v = ?a \\<sharp> ?l\n  ?a \\<sharp> [ ?x ]\\<^sup>v = ?a \\<sharp> ?x\n  ?a \\<sharp> [ ?v1.0 , ?v2.0 ]\\<^sup>v =\n  (?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  ?a \\<sharp> V_cons ?list1.0 ?list2.0 ?v =\n  (?a \\<sharp> ?list1.0 \\<and> ?a \\<sharp> ?list2.0 \\<and> ?a \\<sharp> ?v)\n  ?a \\<sharp> V_consp ?list1.0 ?list2.0 ?b ?v =\n  (?a \\<sharp> ?list1.0 \\<and>\n   ?a \\<sharp> ?list2.0 \\<and> ?a \\<sharp> ?b \\<and> ?a \\<sharp> ?v)\n\ngoal (1 subgoal):\n 1. ([ l ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    ([ l ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    ([ l ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    ([ l ]\\<^sup>v = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    ([ l ]\\<^sup>v = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "by (metis permute_swap_cancel2 v.distinct)"], ["proof (state)\nthis:\n  ([ l ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>l'.\n       va = [ l' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> l =\n       (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n  ([ l ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>y'.\n       va = [ y' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> y =\n       (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n  ([ l ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>v1' v2'.\n       va = [ v1' , v2' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vtwo =\n       (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n  ([ l ]\\<^sup>v = V_cons tyid dc vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n  ([ l ]\\<^sup>v = V_consp tyid dc b vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'))\n\ngoal (4 subgoals):\n 1. \\<And>xb.\n       \\<lbrakk>atom c \\<sharp> ([ xb ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ xb ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ xb ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ xb ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ xb ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x1a, va);\n                 atom c \\<sharp> (x, xa, x1a, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x1a =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x1a = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x1a = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x1a =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x1a =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x1a =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        \\<lbrakk>atom c \\<sharp> (x2a, va);\n         atom c \\<sharp> (x, xa, x2a, va);\n         (x \\<leftrightarrow> c) \\<bullet> x2a =\n         (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n        \\<Longrightarrow> (x2a = [ l ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>l'.\n                               va = [ l' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> l =\n                               (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                          (x2a = [ y ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>y'.\n                               va = [ y' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> y =\n                               (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                          (x2a = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>v1' v2'.\n                               va = [ v1' , v2' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                               (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                          (x2a = V_cons tyid dc vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_cons tyid dc v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                          (x2a = V_consp tyid dc b vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_consp tyid dc b v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> ([ x1a , x2a ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ x1a , x2a ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ x1a , x2a ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ x1a , x2a ]\\<^sup>v =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 3. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 4. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xb.\n       \\<lbrakk>atom c \\<sharp> ([ xb ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ xb ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ xb ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ xb ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ xb ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x1a, va);\n                 atom c \\<sharp> (x, xa, x1a, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x1a =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x1a = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x1a = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x1a =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x1a =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x1a =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        \\<lbrakk>atom c \\<sharp> (x2a, va);\n         atom c \\<sharp> (x, xa, x2a, va);\n         (x \\<leftrightarrow> c) \\<bullet> x2a =\n         (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n        \\<Longrightarrow> (x2a = [ l ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>l'.\n                               va = [ l' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> l =\n                               (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                          (x2a = [ y ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>y'.\n                               va = [ y' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> y =\n                               (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                          (x2a = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>v1' v2'.\n                               va = [ v1' , v2' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                               (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                          (x2a = V_cons tyid dc vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_cons tyid dc v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                          (x2a = V_consp tyid dc b vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_consp tyid dc b v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> ([ x1a , x2a ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ x1a , x2a ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ x1a , x2a ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ x1a , x2a ]\\<^sup>v =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 3. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 4. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "case (V_var x)"], ["proof (state)\nthis:\n  atom c \\<sharp> ([ x ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ x ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ x ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (4 subgoals):\n 1. \\<And>xb.\n       \\<lbrakk>atom c \\<sharp> ([ xb ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ xb ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ xb ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ xb ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ xb ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ xb ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x1a, va);\n                 atom c \\<sharp> (x, xa, x1a, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x1a =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x1a = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x1a = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x1a =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x1a =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x1a =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        \\<lbrakk>atom c \\<sharp> (x2a, va);\n         atom c \\<sharp> (x, xa, x2a, va);\n         (x \\<leftrightarrow> c) \\<bullet> x2a =\n         (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n        \\<Longrightarrow> (x2a = [ l ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>l'.\n                               va = [ l' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> l =\n                               (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                          (x2a = [ y ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>y'.\n                               va = [ y' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> y =\n                               (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                          (x2a = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>v1' v2'.\n                               va = [ v1' , v2' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                               (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                          (x2a = V_cons tyid dc vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_cons tyid dc v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                          (x2a = V_consp tyid dc b vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_consp tyid dc b v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> ([ x1a , x2a ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ x1a , x2a ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ x1a , x2a ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ x1a , x2a ]\\<^sup>v =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 3. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 4. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "then"], ["proof (chain)\npicking this:\n  atom c \\<sharp> ([ x ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ x ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ x ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va", "show ?case"], ["proof (prove)\nusing this:\n  atom c \\<sharp> ([ x ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ x ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ x ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. ([ x ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    ([ x ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    ([ x ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    ([ x ]\\<^sup>v = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    ([ x ]\\<^sup>v = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "using assms v.perm_simps \n      empty_iff flip_def fresh_def fresh_permute_iff supp_l_empty swap_fresh_fresh v.fresh"], ["proof (prove)\nusing this:\n  atom c \\<sharp> ([ x ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ x ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ x ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  ?p \\<bullet> [ ?l ]\\<^sup>v = [ ?p \\<bullet> ?l ]\\<^sup>v\n  ?p \\<bullet> [ ?x ]\\<^sup>v = [ ?p \\<bullet> ?x ]\\<^sup>v\n  ?p \\<bullet> [ ?v1.0 , ?v2.0 ]\\<^sup>v =\n  [ ?p \\<bullet> ?v1.0 , ?p \\<bullet> ?v2.0 ]\\<^sup>v\n  ?p \\<bullet> V_cons ?list1.0 ?list2.0 ?v =\n  V_cons (?p \\<bullet> ?list1.0) (?p \\<bullet> ?list2.0) (?p \\<bullet> ?v)\n  ?p \\<bullet> V_consp ?list1.0 ?list2.0 ?b ?v =\n  V_consp (?p \\<bullet> ?list1.0) (?p \\<bullet> ?list2.0) (?p \\<bullet> ?b)\n   (?p \\<bullet> ?v)\n  (?c \\<in> {}) = False\n  (?a \\<leftrightarrow> ?b) = (atom ?a \\<rightleftharpoons> atom ?b)\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  ?p \\<bullet> ?a \\<sharp> ?p \\<bullet> ?x = ?a \\<sharp> ?x\n  supp [ ?l ]\\<^sup>v = {}\n  \\<lbrakk>?a \\<sharp> ?x; ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<rightleftharpoons> ?b) \\<bullet> ?x = ?x\n  ?a \\<sharp> [ ?l ]\\<^sup>v = ?a \\<sharp> ?l\n  ?a \\<sharp> [ ?x ]\\<^sup>v = ?a \\<sharp> ?x\n  ?a \\<sharp> [ ?v1.0 , ?v2.0 ]\\<^sup>v =\n  (?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  ?a \\<sharp> V_cons ?list1.0 ?list2.0 ?v =\n  (?a \\<sharp> ?list1.0 \\<and> ?a \\<sharp> ?list2.0 \\<and> ?a \\<sharp> ?v)\n  ?a \\<sharp> V_consp ?list1.0 ?list2.0 ?b ?v =\n  (?a \\<sharp> ?list1.0 \\<and>\n   ?a \\<sharp> ?list2.0 \\<and> ?a \\<sharp> ?b \\<and> ?a \\<sharp> ?v)\n\ngoal (1 subgoal):\n 1. ([ x ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    ([ x ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    ([ x ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    ([ x ]\\<^sup>v = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    ([ x ]\\<^sup>v = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "by (metis permute_swap_cancel2 v.distinct)"], ["proof (state)\nthis:\n  ([ x ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>l'.\n       va = [ l' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> l =\n       (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n  ([ x ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>y'.\n       va = [ y' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> y =\n       (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n  ([ x ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>v1' v2'.\n       va = [ v1' , v2' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vtwo =\n       (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n  ([ x ]\\<^sup>v = V_cons tyid dc vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n  ([ x ]\\<^sup>v = V_consp tyid dc b vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'))\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x1a, va);\n                 atom c \\<sharp> (x, xa, x1a, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x1a =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x1a = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x1a = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x1a =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x1a =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x1a =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        \\<lbrakk>atom c \\<sharp> (x2a, va);\n         atom c \\<sharp> (x, xa, x2a, va);\n         (x \\<leftrightarrow> c) \\<bullet> x2a =\n         (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n        \\<Longrightarrow> (x2a = [ l ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>l'.\n                               va = [ l' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> l =\n                               (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                          (x2a = [ y ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>y'.\n                               va = [ y' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> y =\n                               (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                          (x2a = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>v1' v2'.\n                               va = [ v1' , v2' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                               (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                          (x2a = V_cons tyid dc vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_cons tyid dc v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                          (x2a = V_consp tyid dc b vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_consp tyid dc b v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> ([ x1a , x2a ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ x1a , x2a ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ x1a , x2a ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ x1a , x2a ]\\<^sup>v =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 3. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x1a, va);\n                 atom c \\<sharp> (x, xa, x1a, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x1a =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x1a = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x1a = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x1a =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x1a =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x1a =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        \\<lbrakk>atom c \\<sharp> (x2a, va);\n         atom c \\<sharp> (x, xa, x2a, va);\n         (x \\<leftrightarrow> c) \\<bullet> x2a =\n         (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n        \\<Longrightarrow> (x2a = [ l ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>l'.\n                               va = [ l' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> l =\n                               (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                          (x2a = [ y ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>y'.\n                               va = [ y' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> y =\n                               (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                          (x2a = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>v1' v2'.\n                               va = [ v1' , v2' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                               (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                          (x2a = V_cons tyid dc vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_cons tyid dc v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                          (x2a = V_consp tyid dc b vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_consp tyid dc b v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> ([ x1a , x2a ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ x1a , x2a ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ x1a , x2a ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ x1a , x2a ]\\<^sup>v =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 3. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "case (V_pair v1 v2)"], ["proof (state)\nthis:\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  \\<lbrakk>atom c \\<sharp> (v2, va); atom c \\<sharp> (x, xa, v2, va);\n   (x \\<leftrightarrow> c) \\<bullet> v2 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v2 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v2 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v2 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v2 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v2 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> ([ v1 , v2 ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ v1 , v2 ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ v1 , v2 ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x1a, va);\n                 atom c \\<sharp> (x, xa, x1a, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x1a =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x1a = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x1a = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x1a =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x1a =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x1a =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        \\<lbrakk>atom c \\<sharp> (x2a, va);\n         atom c \\<sharp> (x, xa, x2a, va);\n         (x \\<leftrightarrow> c) \\<bullet> x2a =\n         (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n        \\<Longrightarrow> (x2a = [ l ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>l'.\n                               va = [ l' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> l =\n                               (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                          (x2a = [ y ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>y'.\n                               va = [ y' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> y =\n                               (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                          (x2a = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>v1' v2'.\n                               va = [ v1' , v2' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                               (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                          (x2a = V_cons tyid dc vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_cons tyid dc v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                          (x2a = V_consp tyid dc b vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_consp tyid dc b v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> ([ x1a , x2a ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ x1a , x2a ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ x1a , x2a ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ x1a , x2a ]\\<^sup>v =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 3. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "have \" (V_pair v1 v2 = V_pair vone vtwo \\<longrightarrow> (\\<exists>v1' v2'. va = V_pair v1' v2' \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and> (x \\<leftrightarrow> c) \\<bullet> vtwo = (xa \\<leftrightarrow> c) \\<bullet> v2'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n    (\\<exists>v1' v2'.\n        va = [ v1' , v2' ]\\<^sup>v \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vone =\n        (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vtwo =\n        (xa \\<leftrightarrow> c) \\<bullet> v2')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. [ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<Longrightarrow>\n    \\<exists>v1' v2'.\n       va = [ v1' , v2' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vtwo =\n       (xa \\<leftrightarrow> c) \\<bullet> v2'", "assume \"V_pair v1 v2= V_pair vone vtwo\""], ["proof (state)\nthis:\n  [ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v\n\ngoal (1 subgoal):\n 1. [ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<Longrightarrow>\n    \\<exists>v1' v2'.\n       va = [ v1' , v2' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vtwo =\n       (xa \\<leftrightarrow> c) \\<bullet> v2'", "thus  \"(\\<exists>v1' v2'. va = V_pair v1' v2' \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and> (x \\<leftrightarrow> c) \\<bullet> vtwo = (xa \\<leftrightarrow> c) \\<bullet> v2')\""], ["proof (prove)\nusing this:\n  [ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v\n\ngoal (1 subgoal):\n 1. \\<exists>v1' v2'.\n       va = [ v1' , v2' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vtwo =\n       (xa \\<leftrightarrow> c) \\<bullet> v2'", "using V_pair assms"], ["proof (prove)\nusing this:\n  [ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  \\<lbrakk>atom c \\<sharp> (v2, va); atom c \\<sharp> (x, xa, v2, va);\n   (x \\<leftrightarrow> c) \\<bullet> v2 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v2 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v2 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v2 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v2 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v2 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> ([ v1 , v2 ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ v1 , v2 ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ v1 , v2 ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. \\<exists>v1' v2'.\n       va = [ v1' , v2' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vtwo =\n       (xa \\<leftrightarrow> c) \\<bullet> v2'", "by (metis (no_types, hide_lams) flip_def permute_swap_cancel v.perm_simps(3))"], ["proof (state)\nthis:\n  \\<exists>v1' v2'.\n     va = [ v1' , v2' ]\\<^sup>v \\<and>\n     (x \\<leftrightarrow> c) \\<bullet> vone =\n     (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n     (x \\<leftrightarrow> c) \\<bullet> vtwo =\n     (xa \\<leftrightarrow> c) \\<bullet> v2'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  [ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n  (\\<exists>v1' v2'.\n      va = [ v1' , v2' ]\\<^sup>v \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vone =\n      (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vtwo =\n      (xa \\<leftrightarrow> c) \\<bullet> v2')\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x1a, va);\n                 atom c \\<sharp> (x, xa, x1a, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x1a =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x1a = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x1a = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x1a =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x1a =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x1a =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        \\<lbrakk>atom c \\<sharp> (x2a, va);\n         atom c \\<sharp> (x, xa, x2a, va);\n         (x \\<leftrightarrow> c) \\<bullet> x2a =\n         (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n        \\<Longrightarrow> (x2a = [ l ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>l'.\n                               va = [ l' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> l =\n                               (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                          (x2a = [ y ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>y'.\n                               va = [ y' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> y =\n                               (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                          (x2a = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                           (\\<exists>v1' v2'.\n                               va = [ v1' , v2' ]\\<^sup>v \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                               (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                          (x2a = V_cons tyid dc vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_cons tyid dc v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                          (x2a = V_consp tyid dc b vone \\<longrightarrow>\n                           (\\<exists>v1'.\n                               va = V_consp tyid dc b v1' \\<and>\n                               (x \\<leftrightarrow> c) \\<bullet> vone =\n                               (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> ([ x1a , x2a ]\\<^sup>v, va);\n        atom c \\<sharp> (x, xa, [ x1a , x2a ]\\<^sup>v, va);\n        (x \\<leftrightarrow> c) \\<bullet> [ x1a , x2a ]\\<^sup>v =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> ([ x1a , x2a ]\\<^sup>v =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         ([ x1a , x2a ]\\<^sup>v =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 3. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "thus ?case"], ["proof (prove)\nusing this:\n  [ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n  (\\<exists>v1' v2'.\n      va = [ v1' , v2' ]\\<^sup>v \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vone =\n      (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vtwo =\n      (xa \\<leftrightarrow> c) \\<bullet> v2')\n\ngoal (1 subgoal):\n 1. ([ v1 , v2 ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    ([ v1 , v2 ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    ([ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    ([ v1 , v2 ]\\<^sup>v = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    ([ v1 , v2 ]\\<^sup>v = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "using V_pair"], ["proof (prove)\nusing this:\n  [ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n  (\\<exists>v1' v2'.\n      va = [ v1' , v2' ]\\<^sup>v \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vone =\n      (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vtwo =\n      (xa \\<leftrightarrow> c) \\<bullet> v2')\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  \\<lbrakk>atom c \\<sharp> (v2, va); atom c \\<sharp> (x, xa, v2, va);\n   (x \\<leftrightarrow> c) \\<bullet> v2 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v2 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v2 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v2 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v2 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v2 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> ([ v1 , v2 ]\\<^sup>v, va)\n  atom c \\<sharp> (x, xa, [ v1 , v2 ]\\<^sup>v, va)\n  (x \\<leftrightarrow> c) \\<bullet> [ v1 , v2 ]\\<^sup>v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. ([ v1 , v2 ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    ([ v1 , v2 ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    ([ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    ([ v1 , v2 ]\\<^sup>v = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    ([ v1 , v2 ]\\<^sup>v = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "by auto"], ["proof (state)\nthis:\n  ([ v1 , v2 ]\\<^sup>v = [ l ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>l'.\n       va = [ l' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> l =\n       (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n  ([ v1 , v2 ]\\<^sup>v = [ y ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>y'.\n       va = [ y' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> y =\n       (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n  ([ v1 , v2 ]\\<^sup>v = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>v1' v2'.\n       va = [ v1' , v2' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vtwo =\n       (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n  ([ v1 , v2 ]\\<^sup>v = V_cons tyid dc vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n  ([ v1 , v2 ]\\<^sup>v = V_consp tyid dc b vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'))\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "case (V_cons tyid dc v1)"], ["proof (state)\nthis:\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_cons tyid dc v1, va)\n  atom c \\<sharp> (x, xa, V_cons tyid dc v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "have \" (V_cons tyid dc v1 = V_cons tyid dc vone \\<longrightarrow> (\\<exists> v1'. va = V_cons tyid dc  v1' \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<longrightarrow>\n    (\\<exists>v1'.\n        va = V_cons tyid dc v1' \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vone =\n        (xa \\<leftrightarrow> c) \\<bullet> v1')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "assume as: \"V_cons tyid dc v1 = V_cons tyid dc  vone\""], ["proof (state)\nthis:\n  V_cons tyid dc v1 = V_cons tyid dc vone\n\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "hence \"(x \\<leftrightarrow> c) \\<bullet>  (V_cons tyid dc  vone) =  V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)\""], ["proof (prove)\nusing this:\n  V_cons tyid dc v1 = V_cons tyid dc vone\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n    V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<Longrightarrow>\n    (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n    V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)", "have \"(x \\<leftrightarrow> c)  \\<bullet> dc = dc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> dc = dc", "using pure_permute_id"], ["proof (prove)\nusing this:\n  permute ?p = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> dc = dc", "by metis"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<Longrightarrow>\n    (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n    V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)", "moreover"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<Longrightarrow>\n    (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n    V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)", "have \"(x \\<leftrightarrow> c)  \\<bullet> tyid = tyid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> tyid = tyid", "using pure_permute_id"], ["proof (prove)\nusing this:\n  permute ?p = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> tyid = tyid", "by metis"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> tyid = tyid\n\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<Longrightarrow>\n    (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n    V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)", "ultimately"], ["proof (chain)\npicking this:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n  (x \\<leftrightarrow> c) \\<bullet> tyid = tyid", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n  (x \\<leftrightarrow> c) \\<bullet> tyid = tyid\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n    V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)", "using v.perm_simps(4)"], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n  (x \\<leftrightarrow> c) \\<bullet> tyid = tyid\n  ?p \\<bullet> V_cons ?list1.0 ?list2.0 ?v =\n  V_cons (?p \\<bullet> ?list1.0) (?p \\<bullet> ?list2.0) (?p \\<bullet> ?v)\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n    V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)", "by simp"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n  V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n  V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)\n\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "then"], ["proof (chain)\npicking this:\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n  V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)", "obtain v1' where \"(xa \\<leftrightarrow> c) \\<bullet> va = V_cons tyid dc v1' \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = v1'\""], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n  V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)\n\ngoal (1 subgoal):\n 1. (\\<And>v1'.\n        (xa \\<leftrightarrow> c) \\<bullet> va = V_cons tyid dc v1' \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vone = v1' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms V_cons"], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n  V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_cons tyid dc v1, va)\n  atom c \\<sharp> (x, xa, V_cons tyid dc v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. (\\<And>v1'.\n        (xa \\<leftrightarrow> c) \\<bullet> va = V_cons tyid dc v1' \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vone = v1' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using as"], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc vone =\n  V_cons tyid dc ((x \\<leftrightarrow> c) \\<bullet> vone)\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_cons tyid dc v1, va)\n  atom c \\<sharp> (x, xa, V_cons tyid dc v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  V_cons tyid dc v1 = V_cons tyid dc vone\n\ngoal (1 subgoal):\n 1. (\\<And>v1'.\n        (xa \\<leftrightarrow> c) \\<bullet> va = V_cons tyid dc v1' \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vone = v1' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  (xa \\<leftrightarrow> c) \\<bullet> va = V_cons tyid dc v1' \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "hence \" va = V_cons tyid dc ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = v1'\""], ["proof (prove)\nusing this:\n  (xa \\<leftrightarrow> c) \\<bullet> va = V_cons tyid dc v1' \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n\ngoal (1 subgoal):\n 1. va = V_cons tyid dc ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n    (x \\<leftrightarrow> c) \\<bullet> vone = v1'", "using permute_flip_cancel empty_iff flip_def fresh_def supp_b_empty swap_fresh_fresh"], ["proof (prove)\nusing this:\n  (xa \\<leftrightarrow> c) \\<bullet> va = V_cons tyid dc v1' \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n  (?a \\<leftrightarrow> ?b) \\<bullet> (?a \\<leftrightarrow> ?b) \\<bullet> ?x =\n  ?x\n  (?c \\<in> {}) = False\n  (?a \\<leftrightarrow> ?b) = (atom ?a \\<rightleftharpoons> atom ?b)\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  atom ?x \\<notin> supp ?b\n  \\<lbrakk>?a \\<sharp> ?x; ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<rightleftharpoons> ?b) \\<bullet> ?x = ?x\n\ngoal (1 subgoal):\n 1. va = V_cons tyid dc ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n    (x \\<leftrightarrow> c) \\<bullet> vone = v1'", "by (metis pure_fresh v.perm_simps(4))"], ["proof (state)\nthis:\n  va = V_cons tyid dc ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n\ngoal (1 subgoal):\n 1. V_cons tyid dc v1 = V_cons tyid dc vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "thus  \"(\\<exists>v1'. va = V_cons tyid dc  v1' \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1')\""], ["proof (prove)\nusing this:\n  va = V_cons tyid dc ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n\ngoal (1 subgoal):\n 1. \\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "using V_cons assms"], ["proof (prove)\nusing this:\n  va = V_cons tyid dc ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_cons tyid dc v1, va)\n  atom c \\<sharp> (x, xa, V_cons tyid dc v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. \\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "by simp"], ["proof (state)\nthis:\n  \\<exists>v1'.\n     va = V_cons tyid dc v1' \\<and>\n     (x \\<leftrightarrow> c) \\<bullet> vone =\n     (xa \\<leftrightarrow> c) \\<bullet> v1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V_cons tyid dc v1 = V_cons tyid dc vone \\<longrightarrow>\n  (\\<exists>v1'.\n      va = V_cons tyid dc v1' \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vone =\n      (xa \\<leftrightarrow> c) \\<bullet> v1')\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2a x3.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x3, va);\n                 atom c \\<sharp> (x, xa, x3, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x3 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x3 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x3 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x3 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x3 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x3 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_cons x1a x2a x3, va);\n        atom c \\<sharp> (x, xa, V_cons x1a x2a x3, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_cons x1a x2a x3 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_cons x1a x2a x3 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_cons x1a x2a x3 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))\n 2. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "thus ?case"], ["proof (prove)\nusing this:\n  V_cons tyid dc v1 = V_cons tyid dc vone \\<longrightarrow>\n  (\\<exists>v1'.\n      va = V_cons tyid dc v1' \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vone =\n      (xa \\<leftrightarrow> c) \\<bullet> v1')\n\ngoal (1 subgoal):\n 1. (V_cons tyid dc v1 = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    (V_cons tyid dc v1 = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    (V_cons tyid dc v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    (V_cons tyid dc v1 = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    (V_cons tyid dc v1 = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "using V_cons"], ["proof (prove)\nusing this:\n  V_cons tyid dc v1 = V_cons tyid dc vone \\<longrightarrow>\n  (\\<exists>v1'.\n      va = V_cons tyid dc v1' \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vone =\n      (xa \\<leftrightarrow> c) \\<bullet> v1')\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_cons tyid dc v1, va)\n  atom c \\<sharp> (x, xa, V_cons tyid dc v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_cons tyid dc v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. (V_cons tyid dc v1 = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    (V_cons tyid dc v1 = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    (V_cons tyid dc v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    (V_cons tyid dc v1 = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    (V_cons tyid dc v1 = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "by auto"], ["proof (state)\nthis:\n  (V_cons tyid dc v1 = [ l ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>l'.\n       va = [ l' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> l =\n       (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n  (V_cons tyid dc v1 = [ y ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>y'.\n       va = [ y' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> y =\n       (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n  (V_cons tyid dc v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>v1' v2'.\n       va = [ v1' , v2' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vtwo =\n       (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n  (V_cons tyid dc v1 = V_cons tyid dc vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n  (V_cons tyid dc v1 = V_consp tyid dc b vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'))\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "case (V_consp tyid dc b v1)"], ["proof (state)\nthis:\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_consp tyid dc b v1, va)\n  atom c \\<sharp> (x, xa, V_consp tyid dc b v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "have \" (V_consp tyid dc b v1 = V_consp tyid dc b vone \\<longrightarrow> (\\<exists> v1'. va = V_consp tyid dc  b v1' \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<longrightarrow>\n    (\\<exists>v1'.\n        va = V_consp tyid dc b v1' \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vone =\n        (xa \\<leftrightarrow> c) \\<bullet> v1')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "assume as: \"V_consp tyid dc b v1 = V_consp tyid dc b vone\""], ["proof (state)\nthis:\n  V_consp tyid dc b v1 = V_consp tyid dc b vone\n\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "hence \"(x \\<leftrightarrow> c) \\<bullet>  (V_consp tyid dc  b vone) =  V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)\""], ["proof (prove)\nusing this:\n  V_consp tyid dc b v1 = V_consp tyid dc b vone\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n    V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<Longrightarrow>\n    (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n    V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)", "have \"(x \\<leftrightarrow> c)  \\<bullet> dc = dc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> dc = dc", "using pure_permute_id"], ["proof (prove)\nusing this:\n  permute ?p = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> dc = dc", "by metis"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<Longrightarrow>\n    (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n    V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)", "moreover"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<Longrightarrow>\n    (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n    V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)", "have \"(x \\<leftrightarrow> c)  \\<bullet> tyid = tyid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> tyid = tyid", "using pure_permute_id"], ["proof (prove)\nusing this:\n  permute ?p = (\\<lambda>x. x)\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> tyid = tyid", "by metis"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> tyid = tyid\n\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<Longrightarrow>\n    (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n    V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)", "ultimately"], ["proof (chain)\npicking this:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n  (x \\<leftrightarrow> c) \\<bullet> tyid = tyid", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n  (x \\<leftrightarrow> c) \\<bullet> tyid = tyid\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n    V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)", "using v.perm_simps(4)"], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> dc = dc\n  (x \\<leftrightarrow> c) \\<bullet> tyid = tyid\n  ?p \\<bullet> V_cons ?list1.0 ?list2.0 ?v =\n  V_cons (?p \\<bullet> ?list1.0) (?p \\<bullet> ?list2.0) (?p \\<bullet> ?v)\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n    V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)", "by simp"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n  V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n  V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)\n\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "then"], ["proof (chain)\npicking this:\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n  V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)", "obtain v1' where \"(xa \\<leftrightarrow> c) \\<bullet> va = V_consp tyid dc b v1' \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = v1'\""], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n  V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)\n\ngoal (1 subgoal):\n 1. (\\<And>v1'.\n        (xa \\<leftrightarrow> c) \\<bullet> va = V_consp tyid dc b v1' \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vone = v1' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms V_consp"], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n  V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_consp tyid dc b v1, va)\n  atom c \\<sharp> (x, xa, V_consp tyid dc b v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. (\\<And>v1'.\n        (xa \\<leftrightarrow> c) \\<bullet> va = V_consp tyid dc b v1' \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vone = v1' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using as"], ["proof (prove)\nusing this:\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b vone =\n  V_consp tyid dc b ((x \\<leftrightarrow> c) \\<bullet> vone)\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_consp tyid dc b v1, va)\n  atom c \\<sharp> (x, xa, V_consp tyid dc b v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  V_consp tyid dc b v1 = V_consp tyid dc b vone\n\ngoal (1 subgoal):\n 1. (\\<And>v1'.\n        (xa \\<leftrightarrow> c) \\<bullet> va = V_consp tyid dc b v1' \\<and>\n        (x \\<leftrightarrow> c) \\<bullet> vone = v1' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  (xa \\<leftrightarrow> c) \\<bullet> va = V_consp tyid dc b v1' \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "hence \" va = V_consp tyid dc b ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = v1'\""], ["proof (prove)\nusing this:\n  (xa \\<leftrightarrow> c) \\<bullet> va = V_consp tyid dc b v1' \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n\ngoal (1 subgoal):\n 1. va = V_consp tyid dc b ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n    (x \\<leftrightarrow> c) \\<bullet> vone = v1'", "using permute_flip_cancel empty_iff flip_def fresh_def supp_b_empty swap_fresh_fresh\n        pure_fresh v.perm_simps"], ["proof (prove)\nusing this:\n  (xa \\<leftrightarrow> c) \\<bullet> va = V_consp tyid dc b v1' \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n  (?a \\<leftrightarrow> ?b) \\<bullet> (?a \\<leftrightarrow> ?b) \\<bullet> ?x =\n  ?x\n  (?c \\<in> {}) = False\n  (?a \\<leftrightarrow> ?b) = (atom ?a \\<rightleftharpoons> atom ?b)\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  atom ?x \\<notin> supp ?b\n  \\<lbrakk>?a \\<sharp> ?x; ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<rightleftharpoons> ?b) \\<bullet> ?x = ?x\n  ?a \\<sharp> ?x\n  ?p \\<bullet> [ ?l ]\\<^sup>v = [ ?p \\<bullet> ?l ]\\<^sup>v\n  ?p \\<bullet> [ ?x ]\\<^sup>v = [ ?p \\<bullet> ?x ]\\<^sup>v\n  ?p \\<bullet> [ ?v1.0 , ?v2.0 ]\\<^sup>v =\n  [ ?p \\<bullet> ?v1.0 , ?p \\<bullet> ?v2.0 ]\\<^sup>v\n  ?p \\<bullet> V_cons ?list1.0 ?list2.0 ?v =\n  V_cons (?p \\<bullet> ?list1.0) (?p \\<bullet> ?list2.0) (?p \\<bullet> ?v)\n  ?p \\<bullet> V_consp ?list1.0 ?list2.0 ?b ?v =\n  V_consp (?p \\<bullet> ?list1.0) (?p \\<bullet> ?list2.0) (?p \\<bullet> ?b)\n   (?p \\<bullet> ?v)\n\ngoal (1 subgoal):\n 1. va = V_consp tyid dc b ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n    (x \\<leftrightarrow> c) \\<bullet> vone = v1'", "by (metis (mono_tags, hide_lams))"], ["proof (state)\nthis:\n  va = V_consp tyid dc b ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n\ngoal (1 subgoal):\n 1. V_consp tyid dc b v1 = V_consp tyid dc b vone \\<Longrightarrow>\n    \\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "thus   \"(\\<exists>v1'. va = V_consp tyid dc  b v1' \\<and> (x \\<leftrightarrow> c) \\<bullet> vone = (xa \\<leftrightarrow> c) \\<bullet> v1')\""], ["proof (prove)\nusing this:\n  va = V_consp tyid dc b ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n\ngoal (1 subgoal):\n 1. \\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "using V_consp assms"], ["proof (prove)\nusing this:\n  va = V_consp tyid dc b ((xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n  (x \\<leftrightarrow> c) \\<bullet> vone = v1'\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_consp tyid dc b v1, va)\n  atom c \\<sharp> (x, xa, V_consp tyid dc b v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n  atom c \\<sharp> (v, va)\n  atom c \\<sharp> (x, xa, v, va)\n  (x \\<leftrightarrow> c) \\<bullet> v =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. \\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'", "by simp"], ["proof (state)\nthis:\n  \\<exists>v1'.\n     va = V_consp tyid dc b v1' \\<and>\n     (x \\<leftrightarrow> c) \\<bullet> vone =\n     (xa \\<leftrightarrow> c) \\<bullet> v1'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V_consp tyid dc b v1 = V_consp tyid dc b vone \\<longrightarrow>\n  (\\<exists>v1'.\n      va = V_consp tyid dc b v1' \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vone =\n      (xa \\<leftrightarrow> c) \\<bullet> v1')\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>\\<lbrakk>atom c \\<sharp> (x4, va);\n                 atom c \\<sharp> (x, xa, x4, va);\n                 (x \\<leftrightarrow> c) \\<bullet> x4 =\n                 (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n                \\<Longrightarrow> (x4 = [ l ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>l'.\n va = [ l' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> l =\n (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                                  (x4 = [ y ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>y'.\n va = [ y' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> y =\n (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                                  (x4 =\n                                   [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                                   (\\<exists>v1' v2'.\n va = [ v1' , v2' ]\\<^sup>v \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vtwo =\n (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                                  (x4 =\n                                   V_cons tyid dc vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_cons tyid dc v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                                  (x4 =\n                                   V_consp tyid dc b vone \\<longrightarrow>\n                                   (\\<exists>v1'.\n va = V_consp tyid dc b v1' \\<and>\n (x \\<leftrightarrow> c) \\<bullet> vone =\n (xa \\<leftrightarrow> c) \\<bullet> v1'));\n        atom c \\<sharp> (V_consp x1a x2a x3 x4, va);\n        atom c \\<sharp> (x, xa, V_consp x1a x2a x3 x4, va);\n        (x \\<leftrightarrow> c) \\<bullet> V_consp x1a x2a x3 x4 =\n        (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n       \\<Longrightarrow> (V_consp x1a x2a x3 x4 =\n                          [ l ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>l'.\n                              va = [ l' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> l =\n                              (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ y ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>y'.\n                              va = [ y' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> y =\n                              (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                          (\\<exists>v1' v2'.\n                              va = [ v1' , v2' ]\\<^sup>v \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                              (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_cons tyid dc vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_cons tyid dc v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                         (V_consp x1a x2a x3 x4 =\n                          V_consp tyid dc b vone \\<longrightarrow>\n                          (\\<exists>v1'.\n                              va = V_consp tyid dc b v1' \\<and>\n                              (x \\<leftrightarrow> c) \\<bullet> vone =\n                              (xa \\<leftrightarrow> c) \\<bullet> v1'))", "thus ?case"], ["proof (prove)\nusing this:\n  V_consp tyid dc b v1 = V_consp tyid dc b vone \\<longrightarrow>\n  (\\<exists>v1'.\n      va = V_consp tyid dc b v1' \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vone =\n      (xa \\<leftrightarrow> c) \\<bullet> v1')\n\ngoal (1 subgoal):\n 1. (V_consp tyid dc b v1 = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    (V_consp tyid dc b v1 = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    (V_consp tyid dc b v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    (V_consp tyid dc b v1 = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    (V_consp tyid dc b v1 = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "using V_consp"], ["proof (prove)\nusing this:\n  V_consp tyid dc b v1 = V_consp tyid dc b vone \\<longrightarrow>\n  (\\<exists>v1'.\n      va = V_consp tyid dc b v1' \\<and>\n      (x \\<leftrightarrow> c) \\<bullet> vone =\n      (xa \\<leftrightarrow> c) \\<bullet> v1')\n  \\<lbrakk>atom c \\<sharp> (v1, va); atom c \\<sharp> (x, xa, v1, va);\n   (x \\<leftrightarrow> c) \\<bullet> v1 =\n   (xa \\<leftrightarrow> c) \\<bullet> va\\<rbrakk>\n  \\<Longrightarrow> (v1 = [ l ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>l'.\n                         va = [ l' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> l =\n                         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n                    (v1 = [ y ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>y'.\n                         va = [ y' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> y =\n                         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n                    (v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n                     (\\<exists>v1' v2'.\n                         va = [ v1' , v2' ]\\<^sup>v \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n                         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n                    (v1 = V_cons tyid dc vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_cons tyid dc v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n                    (v1 = V_consp tyid dc b vone \\<longrightarrow>\n                     (\\<exists>v1'.\n                         va = V_consp tyid dc b v1' \\<and>\n                         (x \\<leftrightarrow> c) \\<bullet> vone =\n                         (xa \\<leftrightarrow> c) \\<bullet> v1'))\n  atom c \\<sharp> (V_consp tyid dc b v1, va)\n  atom c \\<sharp> (x, xa, V_consp tyid dc b v1, va)\n  (x \\<leftrightarrow> c) \\<bullet> V_consp tyid dc b v1 =\n  (xa \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. (V_consp tyid dc b v1 = [ l ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>l'.\n         va = [ l' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> l =\n         (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n    (V_consp tyid dc b v1 = [ y ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>y'.\n         va = [ y' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> y =\n         (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n    (V_consp tyid dc b v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         va = [ v1' , v2' ]\\<^sup>v \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vtwo =\n         (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n    (V_consp tyid dc b v1 = V_cons tyid dc vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_cons tyid dc v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n    (V_consp tyid dc b v1 = V_consp tyid dc b vone \\<longrightarrow>\n     (\\<exists>v1'.\n         va = V_consp tyid dc b v1' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> vone =\n         (xa \\<leftrightarrow> c) \\<bullet> v1'))", "by auto"], ["proof (state)\nthis:\n  (V_consp tyid dc b v1 = [ l ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>l'.\n       va = [ l' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> l =\n       (xa \\<leftrightarrow> c) \\<bullet> l')) \\<and>\n  (V_consp tyid dc b v1 = [ y ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>y'.\n       va = [ y' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> y =\n       (xa \\<leftrightarrow> c) \\<bullet> y')) \\<and>\n  (V_consp tyid dc b v1 = [ vone , vtwo ]\\<^sup>v \\<longrightarrow>\n   (\\<exists>v1' v2'.\n       va = [ v1' , v2' ]\\<^sup>v \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vtwo =\n       (xa \\<leftrightarrow> c) \\<bullet> v2')) \\<and>\n  (V_consp tyid dc b v1 = V_cons tyid dc vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_cons tyid dc v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1')) \\<and>\n  (V_consp tyid dc b v1 = V_consp tyid dc b vone \\<longrightarrow>\n   (\\<exists>v1'.\n       va = V_consp tyid dc b v1' \\<and>\n       (x \\<leftrightarrow> c) \\<bullet> vone =\n       (xa \\<leftrightarrow> c) \\<bullet> v1'))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma flip_eq:\n  fixes x::x and xa::x and s::\"'a::fs\" and sa::\"'a::fs\"\n  assumes \"(\\<forall>c. atom c \\<sharp> (s, sa) \\<longrightarrow> atom c \\<sharp> (x, xa, s, sa) \\<longrightarrow> (x \\<leftrightarrow> c) \\<bullet> s = (xa \\<leftrightarrow> c) \\<bullet> sa)\" and \"x \\<noteq> xa\"\n  shows \"(x \\<leftrightarrow> xa) \\<bullet> s = sa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> xa) \\<bullet> s = sa", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> xa) \\<bullet> s = sa", "have  \" ([[atom x]]lst. s = [[atom xa]]lst. sa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [[atom x]]lst. s = [[atom xa]]lst. sa", "using assms Abs1_eq_iff_all"], ["proof (prove)\nusing this:\n  \\<forall>c.\n     atom c \\<sharp> (s, sa) \\<longrightarrow>\n     atom c \\<sharp> (x, xa, s, sa) \\<longrightarrow>\n     (x \\<leftrightarrow> c) \\<bullet> s =\n     (xa \\<leftrightarrow> c) \\<bullet> sa\n  x \\<noteq> xa\n  ([{atom ?a}]set. ?x = [{atom ?b}]set. ?y) =\n  (\\<forall>c.\n      atom c \\<sharp> ?z \\<longrightarrow>\n      atom c \\<sharp> (?a, ?b, ?x, ?y) \\<longrightarrow>\n      (?a \\<leftrightarrow> c) \\<bullet> ?x =\n      (?b \\<leftrightarrow> c) \\<bullet> ?y)\n  ([{atom ?a}]res. ?x = [{atom ?b}]res. ?y) =\n  (\\<forall>c.\n      atom c \\<sharp> ?z \\<longrightarrow>\n      atom c \\<sharp> (?a, ?b, ?x, ?y) \\<longrightarrow>\n      (?a \\<leftrightarrow> c) \\<bullet> ?x =\n      (?b \\<leftrightarrow> c) \\<bullet> ?y)\n  ([[atom ?a]]lst. ?x = [[atom ?b]]lst. ?y) =\n  (\\<forall>c.\n      atom c \\<sharp> ?z \\<longrightarrow>\n      atom c \\<sharp> (?a, ?b, ?x, ?y) \\<longrightarrow>\n      (?a \\<leftrightarrow> c) \\<bullet> ?x =\n      (?b \\<leftrightarrow> c) \\<bullet> ?y)\n\ngoal (1 subgoal):\n 1. [[atom x]]lst. s = [[atom xa]]lst. sa", "by simp"], ["proof (state)\nthis:\n  [[atom x]]lst. s = [[atom xa]]lst. sa\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> xa) \\<bullet> s = sa", "hence  \"(xa = x \\<and> sa = s \\<or> xa \\<noteq> x \\<and> sa = (xa \\<leftrightarrow> x) \\<bullet> s \\<and> atom xa \\<sharp> s)\""], ["proof (prove)\nusing this:\n  [[atom x]]lst. s = [[atom xa]]lst. sa\n\ngoal (1 subgoal):\n 1. xa = x \\<and> sa = s \\<or>\n    xa \\<noteq> x \\<and>\n    sa = (xa \\<leftrightarrow> x) \\<bullet> s \\<and> atom xa \\<sharp> s", "using assms Abs1_eq_iff[of xa sa x s]"], ["proof (prove)\nusing this:\n  [[atom x]]lst. s = [[atom xa]]lst. sa\n  \\<forall>c.\n     atom c \\<sharp> (s, sa) \\<longrightarrow>\n     atom c \\<sharp> (x, xa, s, sa) \\<longrightarrow>\n     (x \\<leftrightarrow> c) \\<bullet> s =\n     (xa \\<leftrightarrow> c) \\<bullet> sa\n  x \\<noteq> xa\n  ([{atom xa}]set. sa = [{atom x}]set. s) =\n  (xa = x \\<and> sa = s \\<or>\n   xa \\<noteq> x \\<and>\n   sa = (xa \\<leftrightarrow> x) \\<bullet> s \\<and> atom xa \\<sharp> s)\n  ([{atom xa}]res. sa = [{atom x}]res. s) =\n  (xa = x \\<and> sa = s \\<or>\n   xa \\<noteq> x \\<and>\n   sa = (xa \\<leftrightarrow> x) \\<bullet> s \\<and> atom xa \\<sharp> s)\n  ([[atom xa]]lst. sa = [[atom x]]lst. s) =\n  (xa = x \\<and> sa = s \\<or>\n   xa \\<noteq> x \\<and>\n   sa = (xa \\<leftrightarrow> x) \\<bullet> s \\<and> atom xa \\<sharp> s)\n\ngoal (1 subgoal):\n 1. xa = x \\<and> sa = s \\<or>\n    xa \\<noteq> x \\<and>\n    sa = (xa \\<leftrightarrow> x) \\<bullet> s \\<and> atom xa \\<sharp> s", "by simp"], ["proof (state)\nthis:\n  xa = x \\<and> sa = s \\<or>\n  xa \\<noteq> x \\<and>\n  sa = (xa \\<leftrightarrow> x) \\<bullet> s \\<and> atom xa \\<sharp> s\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> xa) \\<bullet> s = sa", "thus ?thesis"], ["proof (prove)\nusing this:\n  xa = x \\<and> sa = s \\<or>\n  xa \\<noteq> x \\<and>\n  sa = (xa \\<leftrightarrow> x) \\<bullet> s \\<and> atom xa \\<sharp> s\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> xa) \\<bullet> s = sa", "using assms"], ["proof (prove)\nusing this:\n  xa = x \\<and> sa = s \\<or>\n  xa \\<noteq> x \\<and>\n  sa = (xa \\<leftrightarrow> x) \\<bullet> s \\<and> atom xa \\<sharp> s\n  \\<forall>c.\n     atom c \\<sharp> (s, sa) \\<longrightarrow>\n     atom c \\<sharp> (x, xa, s, sa) \\<longrightarrow>\n     (x \\<leftrightarrow> c) \\<bullet> s =\n     (xa \\<leftrightarrow> c) \\<bullet> sa\n  x \\<noteq> xa\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> xa) \\<bullet> s = sa", "by (metis flip_commute)"], ["proof (state)\nthis:\n  (x \\<leftrightarrow> xa) \\<bullet> s = sa\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  swap_v_supp:\n  fixes v::v and d::x and z::x\n  assumes \"atom d \\<sharp> v\"\n  shows \"supp ((z \\<leftrightarrow> d ) \\<bullet> v) \\<subseteq> supp v - { atom z } \\<union> { atom d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> v)\n    \\<subseteq> supp v - {atom z} \\<union> {atom d}", "using assms"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> v)\n    \\<subseteq> supp v - {atom z} \\<union> {atom d}", "proof(nominal_induct v rule:v.strong_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>v \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n       \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>v \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n       \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x1a x2a x3.\n       \\<lbrakk>atom d \\<sharp> x3 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n                \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_cons x1a x2a x3\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_cons x1a x2a\n                        x3)\n                         \\<subseteq> supp (V_cons x1a x2a x3) -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (V_lit l)"], ["proof (state)\nthis:\n  atom d \\<sharp> [ l ]\\<^sup>v\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>v \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n       \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>v \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n       \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x1a x2a x3.\n       \\<lbrakk>atom d \\<sharp> x3 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n                \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_cons x1a x2a x3\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_cons x1a x2a\n                        x3)\n                         \\<subseteq> supp (V_cons x1a x2a x3) -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [ l ]\\<^sup>v", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ l ]\\<^sup>v\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ l ]\\<^sup>v)\n    \\<subseteq> supp [ l ]\\<^sup>v - {atom z} \\<union> {atom d}", "using l.supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ l ]\\<^sup>v\n  supp (L_num ?int) = supp ?int\n  supp L_true = {}\n  supp L_false = {}\n  supp L_unit = {}\n  supp (L_bitvec ?list) = supp ?list\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ l ]\\<^sup>v)\n    \\<subseteq> supp [ l ]\\<^sup>v - {atom z} \\<union> {atom d}", "by (metis supp_l_empty empty_subsetI l.strong_exhaust pure_supp supp_eqvt v.supp)"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ l ]\\<^sup>v)\n  \\<subseteq> supp [ l ]\\<^sup>v - {atom z} \\<union> {atom d}\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>v \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n       \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x1a x2a x3.\n       \\<lbrakk>atom d \\<sharp> x3 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n                \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_cons x1a x2a x3\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_cons x1a x2a\n                        x3)\n                         \\<subseteq> supp (V_cons x1a x2a x3) -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>v \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n       \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x1a x2a x3.\n       \\<lbrakk>atom d \\<sharp> x3 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n                \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_cons x1a x2a x3\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_cons x1a x2a\n                        x3)\n                         \\<subseteq> supp (V_cons x1a x2a x3) -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (V_var x)"], ["proof (state)\nthis:\n  atom d \\<sharp> [ x ]\\<^sup>v\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>v \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n       \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x1a x2a x3.\n       \\<lbrakk>atom d \\<sharp> x3 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n                \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_cons x1a x2a x3\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_cons x1a x2a\n                        x3)\n                         \\<subseteq> supp (V_cons x1a x2a x3) -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "hence \"d \\<noteq> x\""], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ x ]\\<^sup>v\n\ngoal (1 subgoal):\n 1. d \\<noteq> x", "using fresh_def"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ x ]\\<^sup>v\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. d \\<noteq> x", "by fastforce"], ["proof (state)\nthis:\n  d \\<noteq> x\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>v \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n       \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x1a x2a x3.\n       \\<lbrakk>atom d \\<sharp> x3 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n                \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_cons x1a x2a x3\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_cons x1a x2a\n                        x3)\n                         \\<subseteq> supp (V_cons x1a x2a x3) -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "thus ?case"], ["proof (prove)\nusing this:\n  d \\<noteq> x\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n    \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}", "apply(cases \"z = x\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>d \\<noteq> x; z = x\\<rbrakk>\n    \\<Longrightarrow> supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n                      \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union>\n                                  {atom d}\n 2. \\<lbrakk>d \\<noteq> x; z \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n                      \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union>\n                                  {atom d}", "using   supp_at_base V_var \\<open>d\\<noteq>x\\<close>"], ["proof (prove)\nusing this:\n  supp ?a = {atom ?a}\n  atom d \\<sharp> [ x ]\\<^sup>v\n  d \\<noteq> x\n\ngoal (2 subgoals):\n 1. \\<lbrakk>d \\<noteq> x; z = x\\<rbrakk>\n    \\<Longrightarrow> supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n                      \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union>\n                                  {atom d}\n 2. \\<lbrakk>d \\<noteq> x; z \\<noteq> x\\<rbrakk>\n    \\<Longrightarrow> supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n                      \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union>\n                                  {atom d}", "by fastforce+"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>v)\n  \\<subseteq> supp [ x ]\\<^sup>v - {atom z} \\<union> {atom d}\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2a x3.\n       \\<lbrakk>atom d \\<sharp> x3 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n                \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_cons x1a x2a x3\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_cons x1a x2a\n                        x3)\n                         \\<subseteq> supp (V_cons x1a x2a x3) -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2a x3.\n       \\<lbrakk>atom d \\<sharp> x3 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n                \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_cons x1a x2a x3\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_cons x1a x2a\n                        x3)\n                         \\<subseteq> supp (V_cons x1a x2a x3) -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (V_cons tyid dc v)"], ["proof (state)\nthis:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> V_cons tyid dc v\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2a x3.\n       \\<lbrakk>atom d \\<sharp> x3 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n                \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_cons x1a x2a x3\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_cons x1a x2a\n                        x3)\n                         \\<subseteq> supp (V_cons x1a x2a x3) -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> V_cons tyid dc v)\n    \\<subseteq> supp (V_cons tyid dc v) - {atom z} \\<union> {atom d}", "using v.supp(4) pure_supp"], ["proof (prove)\nusing this:\n  supp (V_cons ?list1.0 ?list2.0 ?v) =\n  supp ?list1.0 \\<union> (supp ?list2.0 \\<union> supp ?v)\n  supp ?x = {}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> V_cons tyid dc v)\n    \\<subseteq> supp (V_cons tyid dc v) - {atom z} \\<union> {atom d}", "using V_cons.hyps V_cons.prems fresh_def"], ["proof (prove)\nusing this:\n  supp (V_cons ?list1.0 ?list2.0 ?v) =\n  supp ?list1.0 \\<union> (supp ?list2.0 \\<union> supp ?v)\n  supp ?x = {}\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> V_cons tyid dc v\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> V_cons tyid dc v)\n    \\<subseteq> supp (V_cons tyid dc v) - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> V_cons tyid dc v)\n  \\<subseteq> supp (V_cons tyid dc v) - {atom z} \\<union> {atom d}\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (V_consp tyid dc b v)"], ["proof (state)\nthis:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> V_consp tyid dc b v\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2a x3 x4.\n       \\<lbrakk>atom d \\<sharp> x4 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x4)\n                \\<subseteq> supp x4 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> V_consp x1a x2a x3 x4\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> V_consp x1a x2a\n                        x3 x4)\n                         \\<subseteq> supp (V_consp x1a x2a x3 x4) -\n                                     {atom z} \\<union>\n                                     {atom d}", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> V_consp tyid dc b v)\n    \\<subseteq> supp (V_consp tyid dc b v) - {atom z} \\<union> {atom d}", "using v.supp(4) pure_supp"], ["proof (prove)\nusing this:\n  supp (V_cons ?list1.0 ?list2.0 ?v) =\n  supp ?list1.0 \\<union> (supp ?list2.0 \\<union> supp ?v)\n  supp ?x = {}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> V_consp tyid dc b v)\n    \\<subseteq> supp (V_consp tyid dc b v) - {atom z} \\<union> {atom d}", "using V_consp.hyps V_consp.prems fresh_def"], ["proof (prove)\nusing this:\n  supp (V_cons ?list1.0 ?list2.0 ?v) =\n  supp ?list1.0 \\<union> (supp ?list2.0 \\<union> supp ?v)\n  supp ?x = {}\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> V_consp tyid dc b v\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> V_consp tyid dc b v)\n    \\<subseteq> supp (V_consp tyid dc b v) - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> V_consp tyid dc b v)\n  \\<subseteq> supp (V_consp tyid dc b v) - {atom z} \\<union> {atom d}\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2a \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2a)\n        \\<subseteq> supp x2a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a , x2a ]\\<^sup>v\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a , x2a ]\\<^sup>v)\n                         \\<subseteq> supp [ x1a , x2a ]\\<^sup>v -\n                                     {atom z} \\<union>\n                                     {atom d}", "qed(force+)"], ["", "subsubsection \\<open>Expressions\\<close>"], ["", "lemma  swap_e_supp:\n  fixes e::e and d::x and z::x\n  assumes \"atom d \\<sharp> e\"\n  shows \"supp ((z \\<leftrightarrow> d ) \\<bullet> e) \\<subseteq> supp e - { atom z } \\<union> { atom d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> e)\n    \\<subseteq> supp e - {atom z} \\<union> {atom d}", "using assms"], ["proof (prove)\nusing this:\n  atom d \\<sharp> e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> e)\n    \\<subseteq> supp e - {atom z} \\<union> {atom d}", "proof(nominal_induct e rule:e.strong_induct)"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2  ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2  ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2  ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 4. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 9. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 10. \\<And>x1a x2.\n        atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n        \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_val v)"], ["proof (state)\nthis:\n  atom d \\<sharp> [ v ]\\<^sup>e\n\ngoal (10 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2  ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2  ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2  ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 4. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 9. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 10. \\<And>x1a x2.\n        atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n        \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [ v ]\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ v ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v ]\\<^sup>e)\n    \\<subseteq> supp [ v ]\\<^sup>e - {atom z} \\<union> {atom d}", "using swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ v ]\\<^sup>e\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v ]\\<^sup>e)\n    \\<subseteq> supp [ v ]\\<^sup>e - {atom z} \\<union> {atom d}", "by simp"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ v ]\\<^sup>e)\n  \\<subseteq> supp [ v ]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (9 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2  ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2  ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2  ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 3. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 9. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2  ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2  ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2  ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 3. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 9. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_app f v)"], ["proof (state)\nthis:\n  atom d \\<sharp> [ f  v  ]\\<^sup>e\n\ngoal (9 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2  ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2  ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2  ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 3. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 9. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [ f  v  ]\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ f  v  ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ f  v  ]\\<^sup>e)\n    \\<subseteq> supp [ f  v  ]\\<^sup>e - {atom z} \\<union> {atom d}", "using swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ f  v  ]\\<^sup>e\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ f  v  ]\\<^sup>e)\n    \\<subseteq> supp [ f  v  ]\\<^sup>e - {atom z} \\<union> {atom d}", "by (simp add: pure_supp)"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ f  v  ]\\<^sup>e)\n  \\<subseteq> supp [ f  v  ]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (8 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_appP b f v)"], ["proof (state)\nthis:\n  atom d \\<sharp> [b [ f ]  v ]\\<^sup>e\n\ngoal (8 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "hence df: \"atom d \\<sharp> v\""], ["proof (prove)\nusing this:\n  atom d \\<sharp> [b [ f ]  v ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. atom d \\<sharp> v", "using fresh_def e.supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [b [ f ]  v ]\\<^sup>e\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  supp [ ?v ]\\<^sup>e = supp ?v\n  supp [ ?list  ?v  ]\\<^sup>e = supp ?list \\<union> supp ?v\n  supp [?list [ ?b ]  ?v ]\\<^sup>e =\n  supp ?list \\<union> (supp ?b \\<union> supp ?v)\n  supp [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  supp ?opp \\<union> (supp ?v1.0 \\<union> supp ?v2.0)\n  supp [ ?v1.0 @@ ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n  supp [#1?v ]\\<^sup>e = supp ?v\n  supp [#2?v ]\\<^sup>e = supp ?v\n  supp [ ?u ]\\<^sup>e = supp ?u\n  supp [| ?v |]\\<^sup>e = supp ?v\n  supp [ ?v1.0  ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n\ngoal (1 subgoal):\n 1. atom d \\<sharp> v", "by force"], ["proof (state)\nthis:\n  atom d \\<sharp> v\n\ngoal (8 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "have  \"supp ((z \\<leftrightarrow> d ) \\<bullet> (AE_appP b f v)) =  supp (AE_appP b f ((z \\<leftrightarrow> d ) \\<bullet> v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e) =\n    supp [b [ f ]  (z \\<leftrightarrow> d) \\<bullet> v ]\\<^sup>e", "using  e.supp"], ["proof (prove)\nusing this:\n  supp [ ?v ]\\<^sup>e = supp ?v\n  supp [ ?list  ?v  ]\\<^sup>e = supp ?list \\<union> supp ?v\n  supp [?list [ ?b ]  ?v ]\\<^sup>e =\n  supp ?list \\<union> (supp ?b \\<union> supp ?v)\n  supp [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  supp ?opp \\<union> (supp ?v1.0 \\<union> supp ?v2.0)\n  supp [ ?v1.0 @@ ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n  supp [#1?v ]\\<^sup>e = supp ?v\n  supp [#2?v ]\\<^sup>e = supp ?v\n  supp [ ?u ]\\<^sup>e = supp ?u\n  supp [| ?v |]\\<^sup>e = supp ?v\n  supp [ ?v1.0  ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e) =\n    supp [b [ f ]  (z \\<leftrightarrow> d) \\<bullet> v ]\\<^sup>e", "by (metis b.eq_iff(3) b.perm_simps(3) e.perm_simps(3) flip_b_id)"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e) =\n  supp [b [ f ]  (z \\<leftrightarrow> d) \\<bullet> v ]\\<^sup>e\n\ngoal (8 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "also"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e) =\n  supp [b [ f ]  (z \\<leftrightarrow> d) \\<bullet> v ]\\<^sup>e\n\ngoal (8 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "have \"... = supp b \\<union> supp f \\<union> supp ((z \\<leftrightarrow> d ) \\<bullet> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp [b [ f ]  (z \\<leftrightarrow> d) \\<bullet> v ]\\<^sup>e =\n    supp b \\<union> supp f \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v)", "using e.supp"], ["proof (prove)\nusing this:\n  supp [ ?v ]\\<^sup>e = supp ?v\n  supp [ ?list  ?v  ]\\<^sup>e = supp ?list \\<union> supp ?v\n  supp [?list [ ?b ]  ?v ]\\<^sup>e =\n  supp ?list \\<union> (supp ?b \\<union> supp ?v)\n  supp [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  supp ?opp \\<union> (supp ?v1.0 \\<union> supp ?v2.0)\n  supp [ ?v1.0 @@ ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n  supp [#1?v ]\\<^sup>e = supp ?v\n  supp [#2?v ]\\<^sup>e = supp ?v\n  supp [ ?u ]\\<^sup>e = supp ?u\n  supp [| ?v |]\\<^sup>e = supp ?v\n  supp [ ?v1.0  ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n\ngoal (1 subgoal):\n 1. supp [b [ f ]  (z \\<leftrightarrow> d) \\<bullet> v ]\\<^sup>e =\n    supp b \\<union> supp f \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v)", "by auto"], ["proof (state)\nthis:\n  supp [b [ f ]  (z \\<leftrightarrow> d) \\<bullet> v ]\\<^sup>e =\n  supp b \\<union> supp f \\<union> supp ((z \\<leftrightarrow> d) \\<bullet> v)\n\ngoal (8 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "also"], ["proof (state)\nthis:\n  supp [b [ f ]  (z \\<leftrightarrow> d) \\<bullet> v ]\\<^sup>e =\n  supp b \\<union> supp f \\<union> supp ((z \\<leftrightarrow> d) \\<bullet> v)\n\ngoal (8 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "have \"... \\<subseteq>  supp b \\<union> supp f \\<union> supp v  - { atom z } \\<union> { atom d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp b \\<union> supp f \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v)\n    \\<subseteq> supp b \\<union> supp f \\<union> supp v - {atom z} \\<union>\n                {atom d}", "using swap_v_supp[OF df] pure_supp"], ["proof (prove)\nusing this:\n  supp ((?z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom ?z} \\<union> {atom d}\n  supp ?x = {}\n\ngoal (1 subgoal):\n 1. supp b \\<union> supp f \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v)\n    \\<subseteq> supp b \\<union> supp f \\<union> supp v - {atom z} \\<union>\n                {atom d}", "by auto"], ["proof (state)\nthis:\n  supp b \\<union> supp f \\<union> supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp b \\<union> supp f \\<union> supp v - {atom z} \\<union>\n              {atom d}\n\ngoal (8 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [x1a [ x2 ]  x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [x1a [ x2 ]  x3 ]\\<^sup>e)\n       \\<subseteq> supp [x1a [ x2 ]  x3 ]\\<^sup>e - {atom z} \\<union>\n                   {atom d}\n 2. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 8. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "finally"], ["proof (chain)\npicking this:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e)\n  \\<subseteq> supp b \\<union> supp f \\<union> supp v - {atom z} \\<union>\n              {atom d}", "show ?case"], ["proof (prove)\nusing this:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e)\n  \\<subseteq> supp b \\<union> supp f \\<union> supp v - {atom z} \\<union>\n              {atom d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e)\n    \\<subseteq> supp [b [ f ]  v ]\\<^sup>e - {atom z} \\<union> {atom d}", "using e.supp"], ["proof (prove)\nusing this:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e)\n  \\<subseteq> supp b \\<union> supp f \\<union> supp v - {atom z} \\<union>\n              {atom d}\n  supp [ ?v ]\\<^sup>e = supp ?v\n  supp [ ?list  ?v  ]\\<^sup>e = supp ?list \\<union> supp ?v\n  supp [?list [ ?b ]  ?v ]\\<^sup>e =\n  supp ?list \\<union> (supp ?b \\<union> supp ?v)\n  supp [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  supp ?opp \\<union> (supp ?v1.0 \\<union> supp ?v2.0)\n  supp [ ?v1.0 @@ ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n  supp [#1?v ]\\<^sup>e = supp ?v\n  supp [#2?v ]\\<^sup>e = supp ?v\n  supp [ ?u ]\\<^sup>e = supp ?u\n  supp [| ?v |]\\<^sup>e = supp ?v\n  supp [ ?v1.0  ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e)\n    \\<subseteq> supp [b [ f ]  v ]\\<^sup>e - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [b [ f ]  v ]\\<^sup>e)\n  \\<subseteq> supp [b [ f ]  v ]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_op opp v1 v2)"], ["proof (state)\nthis:\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>e\n\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "hence df: \"atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2\""], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2", "using fresh_def e.supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>e\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  supp [ ?v ]\\<^sup>e = supp ?v\n  supp [ ?list  ?v  ]\\<^sup>e = supp ?list \\<union> supp ?v\n  supp [?list [ ?b ]  ?v ]\\<^sup>e =\n  supp ?list \\<union> (supp ?b \\<union> supp ?v)\n  supp [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  supp ?opp \\<union> (supp ?v1.0 \\<union> supp ?v2.0)\n  supp [ ?v1.0 @@ ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n  supp [#1?v ]\\<^sup>e = supp ?v\n  supp [#2?v ]\\<^sup>e = supp ?v\n  supp [ ?u ]\\<^sup>e = supp ?u\n  supp [| ?v |]\\<^sup>e = supp ?v\n  supp [ ?v1.0  ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n\ngoal (1 subgoal):\n 1. atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2", "by force"], ["proof (state)\nthis:\n  atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2\n\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "have \"((z \\<leftrightarrow> d ) \\<bullet> (AE_op opp v1 v2)) = AE_op opp ((z \\<leftrightarrow> d ) \\<bullet> v1) ((z \\<leftrightarrow> d ) \\<bullet> v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e =\n    [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e", "using\n      e.perm_simps flip_commute opp.perm_simps AE_op opp.strong_exhaust  pure_supp"], ["proof (prove)\nusing this:\n  ?p \\<bullet> [ ?v ]\\<^sup>e = [ ?p \\<bullet> ?v ]\\<^sup>e\n  ?p \\<bullet> [ ?list  ?v  ]\\<^sup>e =\n  [ ?p \\<bullet> ?list  ?p \\<bullet> ?v  ]\\<^sup>e\n  ?p \\<bullet> [?list [ ?b ]  ?v ]\\<^sup>e =\n  [?p \\<bullet> ?list [ ?p \\<bullet> ?b ]  ?p \\<bullet> ?v ]\\<^sup>e\n  ?p \\<bullet> [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  [ ?p \\<bullet> ?opp ?p \\<bullet> ?v1.0 ?p \\<bullet> ?v2.0 ]\\<^sup>e\n  ?p \\<bullet> [ ?v1.0 @@ ?v2.0 ]\\<^sup>e =\n  [ ?p \\<bullet> ?v1.0 @@ ?p \\<bullet> ?v2.0 ]\\<^sup>e\n  ?p \\<bullet> [#1?v ]\\<^sup>e = [#1?p \\<bullet> ?v ]\\<^sup>e\n  ?p \\<bullet> [#2?v ]\\<^sup>e = [#2?p \\<bullet> ?v ]\\<^sup>e\n  ?p \\<bullet> [ ?u ]\\<^sup>e = [ ?p \\<bullet> ?u ]\\<^sup>e\n  ?p \\<bullet> [| ?v |]\\<^sup>e = [| ?p \\<bullet> ?v |]\\<^sup>e\n  ?p \\<bullet> [ ?v1.0  ?v2.0 ]\\<^sup>e = [ ?p \\<bullet> ?v1.0 \n  ?p \\<bullet> ?v2.0 ]\\<^sup>e\n  (?a \\<leftrightarrow> ?b) = (?b \\<leftrightarrow> ?a)\n  ?p \\<bullet> plus = plus\n  ?p \\<bullet> leq = leq\n  ?p \\<bullet> eq = eq\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>e\n  \\<lbrakk>?y = plus \\<Longrightarrow> ?P; ?y = leq \\<Longrightarrow> ?P;\n   ?y = eq \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  supp ?x = {}\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e =\n    [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e", "by (metis (full_types))"], ["proof (state)\nthis:\n  (z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e =\n  [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e\n\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "hence \"supp ((z \\<leftrightarrow> d) \\<bullet> AE_op opp v1 v2) = supp (AE_op opp ((z \\<leftrightarrow> d) \\<bullet>v1)  ((z \\<leftrightarrow> d) \\<bullet>v2))\""], ["proof (prove)\nusing this:\n  (z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e =\n  [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e) =\n    supp\n     [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e", "by simp"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e) =\n  supp\n   [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e\n\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "also"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e) =\n  supp\n   [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e\n\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "have \"... = supp  ((z \\<leftrightarrow> d) \\<bullet>v1) \\<union> supp  ((z \\<leftrightarrow> d) \\<bullet>v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp\n     [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e =\n    supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v2)", "using e.supp"], ["proof (prove)\nusing this:\n  supp [ ?v ]\\<^sup>e = supp ?v\n  supp [ ?list  ?v  ]\\<^sup>e = supp ?list \\<union> supp ?v\n  supp [?list [ ?b ]  ?v ]\\<^sup>e =\n  supp ?list \\<union> (supp ?b \\<union> supp ?v)\n  supp [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  supp ?opp \\<union> (supp ?v1.0 \\<union> supp ?v2.0)\n  supp [ ?v1.0 @@ ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n  supp [#1?v ]\\<^sup>e = supp ?v\n  supp [#2?v ]\\<^sup>e = supp ?v\n  supp [ ?u ]\\<^sup>e = supp ?u\n  supp [| ?v |]\\<^sup>e = supp ?v\n  supp [ ?v1.0  ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n\ngoal (1 subgoal):\n 1. supp\n     [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e =\n    supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v2)", "by (metis (mono_tags, hide_lams) opp.strong_exhaust opp.supp sup_bot.left_neutral)"], ["proof (state)\nthis:\n  supp\n   [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e =\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "also"], ["proof (state)\nthis:\n  supp\n   [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>e =\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "have \"... \\<subseteq> (supp v1 -  { atom z } \\<union> { atom d}) \\<union>  (supp v2 - { atom z } \\<union> { atom d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n    \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n                (supp v2 - {atom z} \\<union> {atom d})", "using swap_v_supp AE_op df"], ["proof (prove)\nusing this:\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>e\n  atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n    \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n                (supp v2 - {atom z} \\<union> {atom d})", "by blast"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n              (supp v2 - {atom z} \\<union> {atom d})\n\ngoal (7 subgoals):\n 1. \\<And>x1a x2 x3.\n       atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 7. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "finally"], ["proof (chain)\npicking this:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n              (supp v2 - {atom z} \\<union> {atom d})", "show ?case"], ["proof (prove)\nusing this:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n              (supp v2 - {atom z} \\<union> {atom d})\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e)\n    \\<subseteq> supp [ opp v1 v2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "using e.supp opp.supp"], ["proof (prove)\nusing this:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n              (supp v2 - {atom z} \\<union> {atom d})\n  supp [ ?v ]\\<^sup>e = supp ?v\n  supp [ ?list  ?v  ]\\<^sup>e = supp ?list \\<union> supp ?v\n  supp [?list [ ?b ]  ?v ]\\<^sup>e =\n  supp ?list \\<union> (supp ?b \\<union> supp ?v)\n  supp [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  supp ?opp \\<union> (supp ?v1.0 \\<union> supp ?v2.0)\n  supp [ ?v1.0 @@ ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n  supp [#1?v ]\\<^sup>e = supp ?v\n  supp [#2?v ]\\<^sup>e = supp ?v\n  supp [ ?u ]\\<^sup>e = supp ?u\n  supp [| ?v |]\\<^sup>e = supp ?v\n  supp [ ?v1.0  ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n  supp plus = {}\n  supp leq = {}\n  supp eq = {}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e)\n    \\<subseteq> supp [ opp v1 v2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "by blast"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>e)\n  \\<subseteq> supp [ opp v1 v2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (6 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_fst v)"], ["proof (state)\nthis:\n  atom d \\<sharp> [#1v ]\\<^sup>e\n\ngoal (6 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [#1x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#1x ]\\<^sup>e)\n       \\<subseteq> supp [#1x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 6. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [#1v ]\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [#1v ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [#1v ]\\<^sup>e)\n    \\<subseteq> supp [#1v ]\\<^sup>e - {atom z} \\<union> {atom d}", "using swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [#1v ]\\<^sup>e\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [#1v ]\\<^sup>e)\n    \\<subseteq> supp [#1v ]\\<^sup>e - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [#1v ]\\<^sup>e)\n  \\<subseteq> supp [#1v ]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_snd v)"], ["proof (state)\nthis:\n  atom d \\<sharp> [#2v ]\\<^sup>e\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [#2x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [#2x ]\\<^sup>e)\n       \\<subseteq> supp [#2x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 5. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [#2v ]\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [#2v ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [#2v ]\\<^sup>e)\n    \\<subseteq> supp [#2v ]\\<^sup>e - {atom z} \\<union> {atom d}", "using swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [#2v ]\\<^sup>e\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [#2v ]\\<^sup>e)\n    \\<subseteq> supp [#2v ]\\<^sup>e - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [#2v ]\\<^sup>e)\n  \\<subseteq> supp [#2v ]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (4 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_mvar u)"], ["proof (state)\nthis:\n  atom d \\<sharp> [ u ]\\<^sup>e\n\ngoal (4 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 4. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [ u ]\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ u ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ u ]\\<^sup>e)\n    \\<subseteq> supp [ u ]\\<^sup>e - {atom z} \\<union> {atom d}", "using \n      Diff_empty Diff_insert0 Un_upper1 atom_x_sort flip_def flip_fresh_fresh fresh_def set_eq_subset supp_eqvt swap_set_in_eq"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ u ]\\<^sup>e\n  ?A - {} = ?A\n  ?x \\<notin> ?A \\<Longrightarrow> ?A - insert ?x ?B = ?A - ?B\n  ?A \\<subseteq> ?A \\<union> ?B\n  sort_of (atom ?a) = Sort ''Syntax.x'' []\n  (?a \\<leftrightarrow> ?b) = (atom ?a \\<rightleftharpoons> atom ?b)\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  (?A = ?B) = (?A \\<subseteq> ?B \\<and> ?B \\<subseteq> ?A)\n  ?p \\<bullet> supp ?x = supp (?p \\<bullet> ?x)\n  \\<lbrakk>?a \\<in> ?S; ?b \\<notin> ?S; sort_of ?a = sort_of ?b\\<rbrakk>\n  \\<Longrightarrow> (?a \\<rightleftharpoons> ?b) \\<bullet> ?S =\n                    ?S - {?a} \\<union> {?b}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ u ]\\<^sup>e)\n    \\<subseteq> supp [ u ]\\<^sup>e - {atom z} \\<union> {atom d}", "by (metis sort_of_atom_eq)"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ u ]\\<^sup>e)\n  \\<subseteq> supp [ u ]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_len v)"], ["proof (state)\nthis:\n  atom d \\<sharp> [| v |]\\<^sup>e\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x.\n       atom d \\<sharp> [| x |]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>e)\n       \\<subseteq> supp [| x |]\\<^sup>e - {atom z} \\<union> {atom d}\n 3. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [| v |]\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [| v |]\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [| v |]\\<^sup>e)\n    \\<subseteq> supp [| v |]\\<^sup>e - {atom z} \\<union> {atom d}", "using swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [| v |]\\<^sup>e\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [| v |]\\<^sup>e)\n    \\<subseteq> supp [| v |]\\<^sup>e - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [| v |]\\<^sup>e)\n  \\<subseteq> supp [| v |]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_concat v1 v2)"], ["proof (state)\nthis:\n  atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>e\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>e)\n    \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "using swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>e\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>e)\n    \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>e)\n  \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "case (AE_split v1 v2)"], ["proof (state)\nthis:\n  atom d \\<sharp> [ v1  v2 ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       atom d \\<sharp> [ x1a  x2 ]\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x1a  x2 ]\\<^sup>e)\n       \\<subseteq> supp [ x1a  x2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [ v1  v2 ]\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ v1  v2 ]\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v1  v2 ]\\<^sup>e)\n    \\<subseteq> supp [ v1  v2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "using swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ v1  v2 ]\\<^sup>e\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v1  v2 ]\\<^sup>e)\n    \\<subseteq> supp [ v1  v2 ]\\<^sup>e - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ v1  v2 ]\\<^sup>e)\n  \\<subseteq> supp [ v1  v2 ]\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  swap_ce_supp:\n  fixes e::ce and d::x and z::x\n  assumes \"atom d \\<sharp> e\"\n  shows \"supp ((z \\<leftrightarrow> d ) \\<bullet> e) \\<subseteq> supp e - { atom z } \\<union> { atom d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> e)\n    \\<subseteq> supp e - {atom z} \\<union> {atom d}", "using assms"], ["proof (prove)\nusing this:\n  atom d \\<sharp> e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> e)\n    \\<subseteq> supp e - {atom z} \\<union> {atom d}", "proof(nominal_induct e rule:ce.strong_induct)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>c\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>c\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 6. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (CE_val v)"], ["proof (state)\nthis:\n  atom d \\<sharp> [ v ]\\<^sup>c\\<^sup>e\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       atom d \\<sharp> [ x ]\\<^sup>c\\<^sup>e \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> [ x ]\\<^sup>c\\<^sup>e)\n       \\<subseteq> supp [ x ]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}\n 2. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 6. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> [ v ]\\<^sup>c\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ v ]\\<^sup>c\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v ]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [ v ]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}", "using swap_v_supp ce.fresh ce.supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> [ v ]\\<^sup>c\\<^sup>e\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n  ?a \\<sharp> [ ?v ]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?opp \\<and> ?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [#1?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [#2?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [| ?ce |]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  supp [ ?v ]\\<^sup>c\\<^sup>e = supp ?v\n  supp [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?opp \\<union> (supp ?ce1.0 \\<union> supp ?ce2.0)\n  supp [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?ce1.0 \\<union> supp ?ce2.0\n  supp [#1?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [#2?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [| ?ce |]\\<^sup>c\\<^sup>e = supp ?ce\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v ]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [ v ]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}", "by simp"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ v ]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp [ v ]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (CE_op opp v1 v2)"], ["proof (state)\nthis:\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>c\\<^sup>e\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "hence df: \"atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2\""], ["proof (prove)\nusing this:\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>c\\<^sup>e\n\ngoal (1 subgoal):\n 1. atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2", "using fresh_def e.supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>c\\<^sup>e\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  supp [ ?v ]\\<^sup>e = supp ?v\n  supp [ ?list  ?v  ]\\<^sup>e = supp ?list \\<union> supp ?v\n  supp [?list [ ?b ]  ?v ]\\<^sup>e =\n  supp ?list \\<union> (supp ?b \\<union> supp ?v)\n  supp [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  supp ?opp \\<union> (supp ?v1.0 \\<union> supp ?v2.0)\n  supp [ ?v1.0 @@ ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n  supp [#1?v ]\\<^sup>e = supp ?v\n  supp [#2?v ]\\<^sup>e = supp ?v\n  supp [ ?u ]\\<^sup>e = supp ?u\n  supp [| ?v |]\\<^sup>e = supp ?v\n  supp [ ?v1.0  ?v2.0 ]\\<^sup>e = supp ?v1.0 \\<union> supp ?v2.0\n\ngoal (1 subgoal):\n 1. atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2", "by force"], ["proof (state)\nthis:\n  atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "have \"((z \\<leftrightarrow> d ) \\<bullet> (CE_op opp v1 v2)) = CE_op opp ((z \\<leftrightarrow> d ) \\<bullet> v1) ((z \\<leftrightarrow> d ) \\<bullet> v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e =\n    [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e", "using\n      ce.perm_simps flip_commute opp.perm_simps CE_op opp.strong_exhaust x_fresh_b pure_supp"], ["proof (prove)\nusing this:\n  ?p \\<bullet> [ ?v ]\\<^sup>c\\<^sup>e = [ ?p \\<bullet> ?v ]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  [ ?p \\<bullet> ?opp ?p \\<bullet> ?ce1.0 ?p \\<bullet> ?ce2.0 ]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  [ ?p \\<bullet> ?ce1.0 @@ ?p \\<bullet> ?ce2.0 ]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [#1?ce]\\<^sup>c\\<^sup>e =\n  [#1?p \\<bullet> ?ce]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [#2?ce]\\<^sup>c\\<^sup>e =\n  [#2?p \\<bullet> ?ce]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [| ?ce |]\\<^sup>c\\<^sup>e =\n  [| ?p \\<bullet> ?ce |]\\<^sup>c\\<^sup>e\n  (?a \\<leftrightarrow> ?b) = (?b \\<leftrightarrow> ?a)\n  ?p \\<bullet> plus = plus\n  ?p \\<bullet> leq = leq\n  ?p \\<bullet> eq = eq\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>c\\<^sup>e\n  \\<lbrakk>?y = plus \\<Longrightarrow> ?P; ?y = leq \\<Longrightarrow> ?P;\n   ?y = eq \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  atom ?x \\<sharp> ?b\n  supp ?x = {}\n\ngoal (1 subgoal):\n 1. (z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e =\n    [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e", "by (metis (full_types))"], ["proof (state)\nthis:\n  (z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e =\n  [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "hence \"supp ((z \\<leftrightarrow> d) \\<bullet> CE_op opp v1 v2) = supp (CE_op opp ((z \\<leftrightarrow> d) \\<bullet>v1)  ((z \\<leftrightarrow> d) \\<bullet>v2))\""], ["proof (prove)\nusing this:\n  (z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e =\n  [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e) =\n    supp\n     [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e", "by simp"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e) =\n  supp\n   [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "also"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e) =\n  supp\n   [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "have \"... = supp  ((z \\<leftrightarrow> d) \\<bullet>v1) \\<union> supp  ((z \\<leftrightarrow> d) \\<bullet>v2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp\n     [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e =\n    supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v2)", "using ce.supp"], ["proof (prove)\nusing this:\n  supp [ ?v ]\\<^sup>c\\<^sup>e = supp ?v\n  supp [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?opp \\<union> (supp ?ce1.0 \\<union> supp ?ce2.0)\n  supp [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?ce1.0 \\<union> supp ?ce2.0\n  supp [#1?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [#2?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [| ?ce |]\\<^sup>c\\<^sup>e = supp ?ce\n\ngoal (1 subgoal):\n 1. supp\n     [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e =\n    supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v2)", "by (metis (mono_tags, hide_lams) opp.strong_exhaust opp.supp sup_bot.left_neutral)"], ["proof (state)\nthis:\n  supp\n   [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e =\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "also"], ["proof (state)\nthis:\n  supp\n   [ opp (z \\<leftrightarrow> d) \\<bullet> v1 (z \\<leftrightarrow> d) \\<bullet> v2 ]\\<^sup>c\\<^sup>e =\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "have \"... \\<subseteq> (supp v1 -  { atom z } \\<union> { atom d}) \\<union>  (supp v2 - { atom z } \\<union> { atom d})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n    \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n                (supp v2 - {atom z} \\<union> {atom d})", "using swap_v_supp CE_op df"], ["proof (prove)\nusing this:\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ opp v1 v2 ]\\<^sup>c\\<^sup>e\n  atom d \\<sharp> v1 \\<and> atom d \\<sharp> v2\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n    supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n    \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n                (supp v2 - {atom z} \\<union> {atom d})", "by blast"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1) \\<union>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n              (supp v2 - {atom z} \\<union> {atom d})\n\ngoal (5 subgoals):\n 1. \\<And>x1a x2 x3.\n       \\<lbrakk>atom d \\<sharp> x2 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n                \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x3 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x3)\n        \\<subseteq> supp x3 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a x2 x3 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a x2 x3 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "finally"], ["proof (chain)\npicking this:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n              (supp v2 - {atom z} \\<union> {atom d})", "show ?case"], ["proof (prove)\nusing this:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n              (supp v2 - {atom z} \\<union> {atom d})\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [ opp v1 v2 ]\\<^sup>c\\<^sup>e - {atom z} \\<union>\n                {atom d}", "using ce.supp opp.supp"], ["proof (prove)\nusing this:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d} \\<union>\n              (supp v2 - {atom z} \\<union> {atom d})\n  supp [ ?v ]\\<^sup>c\\<^sup>e = supp ?v\n  supp [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?opp \\<union> (supp ?ce1.0 \\<union> supp ?ce2.0)\n  supp [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?ce1.0 \\<union> supp ?ce2.0\n  supp [#1?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [#2?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [| ?ce |]\\<^sup>c\\<^sup>e = supp ?ce\n  supp plus = {}\n  supp leq = {}\n  supp eq = {}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [ opp v1 v2 ]\\<^sup>c\\<^sup>e - {atom z} \\<union>\n                {atom d}", "by blast"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ opp v1 v2 ]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp [ opp v1 v2 ]\\<^sup>c\\<^sup>e - {atom z} \\<union>\n              {atom d}\n\ngoal (4 subgoals):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (CE_fst v)"], ["proof (state)\nthis:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [#1v]\\<^sup>c\\<^sup>e\n\ngoal (4 subgoals):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#1x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#1x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#1x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [#1v]\\<^sup>c\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [#1v]\\<^sup>c\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [#1v]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [#1v]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}", "using ce.supp ce.fresh swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [#1v]\\<^sup>c\\<^sup>e\n  supp [ ?v ]\\<^sup>c\\<^sup>e = supp ?v\n  supp [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?opp \\<union> (supp ?ce1.0 \\<union> supp ?ce2.0)\n  supp [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?ce1.0 \\<union> supp ?ce2.0\n  supp [#1?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [#2?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [| ?ce |]\\<^sup>c\\<^sup>e = supp ?ce\n  ?a \\<sharp> [ ?v ]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?opp \\<and> ?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [#1?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [#2?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [| ?ce |]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [#1v]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [#1v]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [#1v]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp [#1v]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (CE_snd v)"], ["proof (state)\nthis:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [#2v]\\<^sup>c\\<^sup>e\n\ngoal (3 subgoals):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [#2x]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [#2x]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [#2x]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 3. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [#2v]\\<^sup>c\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [#2v]\\<^sup>c\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [#2v]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [#2v]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}", "using ce.supp ce.fresh swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [#2v]\\<^sup>c\\<^sup>e\n  supp [ ?v ]\\<^sup>c\\<^sup>e = supp ?v\n  supp [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?opp \\<union> (supp ?ce1.0 \\<union> supp ?ce2.0)\n  supp [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?ce1.0 \\<union> supp ?ce2.0\n  supp [#1?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [#2?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [| ?ce |]\\<^sup>c\\<^sup>e = supp ?ce\n  ?a \\<sharp> [ ?v ]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?opp \\<and> ?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [#1?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [#2?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [| ?ce |]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [#2v]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [#2v]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [#2v]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp [#2v]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (CE_len v)"], ["proof (state)\nthis:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [| v |]\\<^sup>c\\<^sup>e\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}\n 2. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [| x |]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [| x |]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [| x |]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [| v |]\\<^sup>c\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [| v |]\\<^sup>c\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [| v |]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [| v |]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}", "using ce.supp ce.fresh swap_v_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v)\n  \\<subseteq> supp v - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [| v |]\\<^sup>c\\<^sup>e\n  supp [ ?v ]\\<^sup>c\\<^sup>e = supp ?v\n  supp [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?opp \\<union> (supp ?ce1.0 \\<union> supp ?ce2.0)\n  supp [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?ce1.0 \\<union> supp ?ce2.0\n  supp [#1?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [#2?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [| ?ce |]\\<^sup>c\\<^sup>e = supp ?ce\n  ?a \\<sharp> [ ?v ]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?opp \\<and> ?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [#1?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [#2?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [| ?ce |]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [| v |]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [| v |]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [| v |]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp [| v |]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "case (CE_concat v1 v2)"], ["proof (state)\nthis:\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>atom d \\<sharp> x1a \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1a)\n                \\<subseteq> supp x1a - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> [ x1a @@ x2 ]\\<^sup>c\\<^sup>e)\n                         \\<subseteq> supp [ x1a @@ x2 ]\\<^sup>c\\<^sup>e -\n                                     {atom z} \\<union>\n                                     {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>c\\<^sup>e - {atom z} \\<union>\n                {atom d}", "using ce.supp ce.fresh swap_v_supp ce.perm_simps"], ["proof (prove)\nusing this:\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e\n  supp [ ?v ]\\<^sup>c\\<^sup>e = supp ?v\n  supp [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?opp \\<union> (supp ?ce1.0 \\<union> supp ?ce2.0)\n  supp [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?ce1.0 \\<union> supp ?ce2.0\n  supp [#1?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [#2?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [| ?ce |]\\<^sup>c\\<^sup>e = supp ?ce\n  ?a \\<sharp> [ ?v ]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?opp \\<and> ?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  (?a \\<sharp> ?ce1.0 \\<and> ?a \\<sharp> ?ce2.0)\n  ?a \\<sharp> [#1?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [#2?ce]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  ?a \\<sharp> [| ?ce |]\\<^sup>c\\<^sup>e = ?a \\<sharp> ?ce\n  atom ?d \\<sharp> ?v \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?v)\n  \\<subseteq> supp ?v - {atom ?z} \\<union> {atom ?d}\n  ?p \\<bullet> [ ?v ]\\<^sup>c\\<^sup>e = [ ?p \\<bullet> ?v ]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  [ ?p \\<bullet> ?opp ?p \\<bullet> ?ce1.0 ?p \\<bullet> ?ce2.0 ]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  [ ?p \\<bullet> ?ce1.0 @@ ?p \\<bullet> ?ce2.0 ]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [#1?ce]\\<^sup>c\\<^sup>e =\n  [#1?p \\<bullet> ?ce]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [#2?ce]\\<^sup>c\\<^sup>e =\n  [#2?p \\<bullet> ?ce]\\<^sup>c\\<^sup>e\n  ?p \\<bullet> [| ?ce |]\\<^sup>c\\<^sup>e =\n  [| ?p \\<bullet> ?ce |]\\<^sup>c\\<^sup>e\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>c\\<^sup>e - {atom z} \\<union>\n                {atom d}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>atom d \\<sharp> v1 \\<Longrightarrow>\n             supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n             \\<subseteq> supp v1 - {atom z} \\<union> {atom d};\n     atom d \\<sharp> v2 \\<Longrightarrow>\n     supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n     \\<subseteq> supp v2 - {atom z} \\<union> {atom d};\n     atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e;\n     \\<And>v. supp [ v ]\\<^sup>c\\<^sup>e = supp v;\n     \\<And>opp ce1 ce2.\n        supp [ opp ce1 ce2 ]\\<^sup>c\\<^sup>e =\n        supp opp \\<union> (supp ce1 \\<union> supp ce2);\n     \\<And>ce1 ce2.\n        supp [ ce1 @@ ce2 ]\\<^sup>c\\<^sup>e = supp ce1 \\<union> supp ce2;\n     \\<And>ce. supp [#1ce]\\<^sup>c\\<^sup>e = supp ce;\n     \\<And>ce. supp [#2ce]\\<^sup>c\\<^sup>e = supp ce;\n     \\<And>ce. supp [| ce |]\\<^sup>c\\<^sup>e = supp ce;\n     \\<And>a v. a \\<sharp> [ v ]\\<^sup>c\\<^sup>e = a \\<sharp> v;\n     \\<And>a opp ce1 ce2.\n        a \\<sharp> [ opp ce1 ce2 ]\\<^sup>c\\<^sup>e =\n        (a \\<sharp> opp \\<and> a \\<sharp> ce1 \\<and> a \\<sharp> ce2);\n     \\<And>a ce1 ce2.\n        a \\<sharp> [ ce1 @@ ce2 ]\\<^sup>c\\<^sup>e =\n        (a \\<sharp> ce1 \\<and> a \\<sharp> ce2);\n     \\<And>a ce. a \\<sharp> [#1ce]\\<^sup>c\\<^sup>e = a \\<sharp> ce;\n     \\<And>a ce. a \\<sharp> [#2ce]\\<^sup>c\\<^sup>e = a \\<sharp> ce;\n     \\<And>a ce. a \\<sharp> [| ce |]\\<^sup>c\\<^sup>e = a \\<sharp> ce;\n     \\<And>d v z.\n        atom d \\<sharp> v \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> v)\n        \\<subseteq> supp v - {atom z} \\<union> {atom d};\n     \\<And>p v.\n        p \\<bullet> [ v ]\\<^sup>c\\<^sup>e =\n        [ p \\<bullet> v ]\\<^sup>c\\<^sup>e;\n     \\<And>p opp ce1 ce2.\n        p \\<bullet> [ opp ce1 ce2 ]\\<^sup>c\\<^sup>e =\n        [ p \\<bullet> opp p \\<bullet> ce1 p \\<bullet> ce2 ]\\<^sup>c\\<^sup>e;\n     \\<And>p ce1 ce2.\n        p \\<bullet> [ ce1 @@ ce2 ]\\<^sup>c\\<^sup>e =\n        [ p \\<bullet> ce1 @@ p \\<bullet> ce2 ]\\<^sup>c\\<^sup>e;\n     \\<And>p ce.\n        p \\<bullet> [#1ce]\\<^sup>c\\<^sup>e =\n        [#1p \\<bullet> ce]\\<^sup>c\\<^sup>e;\n     \\<And>p ce.\n        p \\<bullet> [#2ce]\\<^sup>c\\<^sup>e =\n        [#2p \\<bullet> ce]\\<^sup>c\\<^sup>e;\n     \\<And>p ce.\n        p \\<bullet> [| ce |]\\<^sup>c\\<^sup>e =\n        [| p \\<bullet> ce |]\\<^sup>c\\<^sup>e\\<rbrakk>\n    \\<Longrightarrow> supp\n                       ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e)\n                      \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>c\\<^sup>e -\n                                  {atom z} \\<union>\n                                  {atom d}", "have \"\\<forall>x v xa. \\<not> atom (x::x) \\<sharp> (v::v) \\<or> supp ((xa \\<leftrightarrow> x) \\<bullet> v) \\<subseteq> supp v - {atom xa} \\<union> {atom x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x v xa.\n       \\<not> atom x \\<sharp> v \\<or>\n       supp ((xa \\<leftrightarrow> x) \\<bullet> v)\n       \\<subseteq> supp v - {atom xa} \\<union> {atom x}", "by (meson swap_v_supp)"], ["proof (state)\nthis:\n  \\<forall>x v xa.\n     \\<not> atom x \\<sharp> v \\<or>\n     supp ((xa \\<leftrightarrow> x) \\<bullet> v)\n     \\<subseteq> supp v - {atom xa} \\<union> {atom x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>atom d \\<sharp> v1 \\<Longrightarrow>\n             supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n             \\<subseteq> supp v1 - {atom z} \\<union> {atom d};\n     atom d \\<sharp> v2 \\<Longrightarrow>\n     supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n     \\<subseteq> supp v2 - {atom z} \\<union> {atom d};\n     atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e;\n     \\<And>v. supp [ v ]\\<^sup>c\\<^sup>e = supp v;\n     \\<And>opp ce1 ce2.\n        supp [ opp ce1 ce2 ]\\<^sup>c\\<^sup>e =\n        supp opp \\<union> (supp ce1 \\<union> supp ce2);\n     \\<And>ce1 ce2.\n        supp [ ce1 @@ ce2 ]\\<^sup>c\\<^sup>e = supp ce1 \\<union> supp ce2;\n     \\<And>ce. supp [#1ce]\\<^sup>c\\<^sup>e = supp ce;\n     \\<And>ce. supp [#2ce]\\<^sup>c\\<^sup>e = supp ce;\n     \\<And>ce. supp [| ce |]\\<^sup>c\\<^sup>e = supp ce;\n     \\<And>a v. a \\<sharp> [ v ]\\<^sup>c\\<^sup>e = a \\<sharp> v;\n     \\<And>a opp ce1 ce2.\n        a \\<sharp> [ opp ce1 ce2 ]\\<^sup>c\\<^sup>e =\n        (a \\<sharp> opp \\<and> a \\<sharp> ce1 \\<and> a \\<sharp> ce2);\n     \\<And>a ce1 ce2.\n        a \\<sharp> [ ce1 @@ ce2 ]\\<^sup>c\\<^sup>e =\n        (a \\<sharp> ce1 \\<and> a \\<sharp> ce2);\n     \\<And>a ce. a \\<sharp> [#1ce]\\<^sup>c\\<^sup>e = a \\<sharp> ce;\n     \\<And>a ce. a \\<sharp> [#2ce]\\<^sup>c\\<^sup>e = a \\<sharp> ce;\n     \\<And>a ce. a \\<sharp> [| ce |]\\<^sup>c\\<^sup>e = a \\<sharp> ce;\n     \\<And>d v z.\n        atom d \\<sharp> v \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> v)\n        \\<subseteq> supp v - {atom z} \\<union> {atom d};\n     \\<And>p v.\n        p \\<bullet> [ v ]\\<^sup>c\\<^sup>e =\n        [ p \\<bullet> v ]\\<^sup>c\\<^sup>e;\n     \\<And>p opp ce1 ce2.\n        p \\<bullet> [ opp ce1 ce2 ]\\<^sup>c\\<^sup>e =\n        [ p \\<bullet> opp p \\<bullet> ce1 p \\<bullet> ce2 ]\\<^sup>c\\<^sup>e;\n     \\<And>p ce1 ce2.\n        p \\<bullet> [ ce1 @@ ce2 ]\\<^sup>c\\<^sup>e =\n        [ p \\<bullet> ce1 @@ p \\<bullet> ce2 ]\\<^sup>c\\<^sup>e;\n     \\<And>p ce.\n        p \\<bullet> [#1ce]\\<^sup>c\\<^sup>e =\n        [#1p \\<bullet> ce]\\<^sup>c\\<^sup>e;\n     \\<And>p ce.\n        p \\<bullet> [#2ce]\\<^sup>c\\<^sup>e =\n        [#2p \\<bullet> ce]\\<^sup>c\\<^sup>e;\n     \\<And>p ce.\n        p \\<bullet> [| ce |]\\<^sup>c\\<^sup>e =\n        [| p \\<bullet> ce |]\\<^sup>c\\<^sup>e\\<rbrakk>\n    \\<Longrightarrow> supp\n                       ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e)\n                      \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>c\\<^sup>e -\n                                  {atom z} \\<union>\n                                  {atom d}", "(* 0.0 ms *)"], ["proof (state)\nthis:\n  \\<forall>x v xa.\n     \\<not> atom x \\<sharp> v \\<or>\n     supp ((xa \\<leftrightarrow> x) \\<bullet> v)\n     \\<subseteq> supp v - {atom xa} \\<union> {atom x}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>atom d \\<sharp> v1 \\<Longrightarrow>\n             supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n             \\<subseteq> supp v1 - {atom z} \\<union> {atom d};\n     atom d \\<sharp> v2 \\<Longrightarrow>\n     supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n     \\<subseteq> supp v2 - {atom z} \\<union> {atom d};\n     atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e;\n     \\<And>v. supp [ v ]\\<^sup>c\\<^sup>e = supp v;\n     \\<And>opp ce1 ce2.\n        supp [ opp ce1 ce2 ]\\<^sup>c\\<^sup>e =\n        supp opp \\<union> (supp ce1 \\<union> supp ce2);\n     \\<And>ce1 ce2.\n        supp [ ce1 @@ ce2 ]\\<^sup>c\\<^sup>e = supp ce1 \\<union> supp ce2;\n     \\<And>ce. supp [#1ce]\\<^sup>c\\<^sup>e = supp ce;\n     \\<And>ce. supp [#2ce]\\<^sup>c\\<^sup>e = supp ce;\n     \\<And>ce. supp [| ce |]\\<^sup>c\\<^sup>e = supp ce;\n     \\<And>a v. a \\<sharp> [ v ]\\<^sup>c\\<^sup>e = a \\<sharp> v;\n     \\<And>a opp ce1 ce2.\n        a \\<sharp> [ opp ce1 ce2 ]\\<^sup>c\\<^sup>e =\n        (a \\<sharp> opp \\<and> a \\<sharp> ce1 \\<and> a \\<sharp> ce2);\n     \\<And>a ce1 ce2.\n        a \\<sharp> [ ce1 @@ ce2 ]\\<^sup>c\\<^sup>e =\n        (a \\<sharp> ce1 \\<and> a \\<sharp> ce2);\n     \\<And>a ce. a \\<sharp> [#1ce]\\<^sup>c\\<^sup>e = a \\<sharp> ce;\n     \\<And>a ce. a \\<sharp> [#2ce]\\<^sup>c\\<^sup>e = a \\<sharp> ce;\n     \\<And>a ce. a \\<sharp> [| ce |]\\<^sup>c\\<^sup>e = a \\<sharp> ce;\n     \\<And>d v z.\n        atom d \\<sharp> v \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> v)\n        \\<subseteq> supp v - {atom z} \\<union> {atom d};\n     \\<And>p v.\n        p \\<bullet> [ v ]\\<^sup>c\\<^sup>e =\n        [ p \\<bullet> v ]\\<^sup>c\\<^sup>e;\n     \\<And>p opp ce1 ce2.\n        p \\<bullet> [ opp ce1 ce2 ]\\<^sup>c\\<^sup>e =\n        [ p \\<bullet> opp p \\<bullet> ce1 p \\<bullet> ce2 ]\\<^sup>c\\<^sup>e;\n     \\<And>p ce1 ce2.\n        p \\<bullet> [ ce1 @@ ce2 ]\\<^sup>c\\<^sup>e =\n        [ p \\<bullet> ce1 @@ p \\<bullet> ce2 ]\\<^sup>c\\<^sup>e;\n     \\<And>p ce.\n        p \\<bullet> [#1ce]\\<^sup>c\\<^sup>e =\n        [#1p \\<bullet> ce]\\<^sup>c\\<^sup>e;\n     \\<And>p ce.\n        p \\<bullet> [#2ce]\\<^sup>c\\<^sup>e =\n        [#2p \\<bullet> ce]\\<^sup>c\\<^sup>e;\n     \\<And>p ce.\n        p \\<bullet> [| ce |]\\<^sup>c\\<^sup>e =\n        [| p \\<bullet> ce |]\\<^sup>c\\<^sup>e\\<rbrakk>\n    \\<Longrightarrow> supp\n                       ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e)\n                      \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>c\\<^sup>e -\n                                  {atom z} \\<union>\n                                  {atom d}", "then"], ["proof (chain)\npicking this:\n  \\<forall>x v xa.\n     \\<not> atom x \\<sharp> v \\<or>\n     supp ((xa \\<leftrightarrow> x) \\<bullet> v)\n     \\<subseteq> supp v - {atom xa} \\<union> {atom x}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>x v xa.\n     \\<not> atom x \\<sharp> v \\<or>\n     supp ((xa \\<leftrightarrow> x) \\<bullet> v)\n     \\<subseteq> supp v - {atom xa} \\<union> {atom x}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>c\\<^sup>e - {atom z} \\<union>\n                {atom d}", "using CE_concat ce.supp"], ["proof (prove)\nusing this:\n  \\<forall>x v xa.\n     \\<not> atom x \\<sharp> v \\<or>\n     supp ((xa \\<leftrightarrow> x) \\<bullet> v)\n     \\<subseteq> supp v - {atom xa} \\<union> {atom x}\n  atom d \\<sharp> v1 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v1)\n  \\<subseteq> supp v1 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> v2 \\<Longrightarrow>\n  supp ((z \\<leftrightarrow> d) \\<bullet> v2)\n  \\<subseteq> supp v2 - {atom z} \\<union> {atom d}\n  atom d \\<sharp> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e\n  supp [ ?v ]\\<^sup>c\\<^sup>e = supp ?v\n  supp [ ?opp ?ce1.0 ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?opp \\<union> (supp ?ce1.0 \\<union> supp ?ce2.0)\n  supp [ ?ce1.0 @@ ?ce2.0 ]\\<^sup>c\\<^sup>e =\n  supp ?ce1.0 \\<union> supp ?ce2.0\n  supp [#1?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [#2?ce]\\<^sup>c\\<^sup>e = supp ?ce\n  supp [| ?ce |]\\<^sup>c\\<^sup>e = supp ?ce\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e)\n    \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>c\\<^sup>e - {atom z} \\<union>\n                {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> [ v1 @@ v2 ]\\<^sup>c\\<^sup>e)\n  \\<subseteq> supp [ v1 @@ v2 ]\\<^sup>c\\<^sup>e - {atom z} \\<union> {atom d}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma  swap_c_supp:\n  fixes c::c and d::x and z::x\n  assumes \"atom d \\<sharp> c\"\n  shows \"supp ((z \\<leftrightarrow> d ) \\<bullet> c) \\<subseteq> supp c - { atom z } \\<union> { atom d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> c)\n    \\<subseteq> supp c - {atom z} \\<union> {atom d}", "using assms"], ["proof (prove)\nusing this:\n  atom d \\<sharp> c\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> c)\n    \\<subseteq> supp c - {atom z} \\<union> {atom d}", "proof(nominal_induct c rule:c.strong_induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. atom d \\<sharp> (TRUE) \\<Longrightarrow>\n    supp ((z \\<leftrightarrow> d) \\<bullet> (TRUE))\n    \\<subseteq> supp (TRUE) - {atom z} \\<union> {atom d}\n 2. atom d \\<sharp> (FALSE) \\<Longrightarrow>\n    supp ((z \\<leftrightarrow> d) \\<bullet> (FALSE))\n    \\<subseteq> supp (FALSE) - {atom z} \\<union> {atom d}\n 3. \\<And>x1 x2.\n       \\<lbrakk>atom d \\<sharp> x1 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1)\n                \\<subseteq> supp x1 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (x1  AND  x2 )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (x1  AND  x2 ))\n                         \\<subseteq> supp (x1  AND  x2 ) - {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x1 x2.\n       \\<lbrakk>atom d \\<sharp> x1 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1)\n                \\<subseteq> supp x1 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (x1 OR x2 )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (x1 OR x2 ))\n                         \\<subseteq> supp (x1 OR x2 ) - {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (\\<not> x )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (\\<not> x ))\n                         \\<subseteq> supp (\\<not> x ) - {atom z} \\<union>\n                                     {atom d}\n 6. \\<And>x1 x2.\n       \\<lbrakk>atom d \\<sharp> x1 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1)\n                \\<subseteq> supp x1 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (x1  IMP  x2 )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (x1  IMP  x2 ))\n                         \\<subseteq> supp (x1  IMP  x2 ) - {atom z} \\<union>\n                                     {atom d}\n 7. \\<And>x1 x2.\n       atom d \\<sharp> (x1  ==  x2 ) \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> (x1  ==  x2 ))\n       \\<subseteq> supp (x1  ==  x2 ) - {atom z} \\<union> {atom d}", "case (C_eq e1 e2)"], ["proof (state)\nthis:\n  atom d \\<sharp> (e1  ==  e2 )\n\ngoal (7 subgoals):\n 1. atom d \\<sharp> (TRUE) \\<Longrightarrow>\n    supp ((z \\<leftrightarrow> d) \\<bullet> (TRUE))\n    \\<subseteq> supp (TRUE) - {atom z} \\<union> {atom d}\n 2. atom d \\<sharp> (FALSE) \\<Longrightarrow>\n    supp ((z \\<leftrightarrow> d) \\<bullet> (FALSE))\n    \\<subseteq> supp (FALSE) - {atom z} \\<union> {atom d}\n 3. \\<And>x1 x2.\n       \\<lbrakk>atom d \\<sharp> x1 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1)\n                \\<subseteq> supp x1 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (x1  AND  x2 )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (x1  AND  x2 ))\n                         \\<subseteq> supp (x1  AND  x2 ) - {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x1 x2.\n       \\<lbrakk>atom d \\<sharp> x1 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1)\n                \\<subseteq> supp x1 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (x1 OR x2 )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (x1 OR x2 ))\n                         \\<subseteq> supp (x1 OR x2 ) - {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (\\<not> x )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (\\<not> x ))\n                         \\<subseteq> supp (\\<not> x ) - {atom z} \\<union>\n                                     {atom d}\n 6. \\<And>x1 x2.\n       \\<lbrakk>atom d \\<sharp> x1 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1)\n                \\<subseteq> supp x1 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (x1  IMP  x2 )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (x1  IMP  x2 ))\n                         \\<subseteq> supp (x1  IMP  x2 ) - {atom z} \\<union>\n                                     {atom d}\n 7. \\<And>x1 x2.\n       atom d \\<sharp> (x1  ==  x2 ) \\<Longrightarrow>\n       supp ((z \\<leftrightarrow> d) \\<bullet> (x1  ==  x2 ))\n       \\<subseteq> supp (x1  ==  x2 ) - {atom z} \\<union> {atom d}", "then"], ["proof (chain)\npicking this:\n  atom d \\<sharp> (e1  ==  e2 )", "show ?case"], ["proof (prove)\nusing this:\n  atom d \\<sharp> (e1  ==  e2 )\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> (e1  ==  e2 ))\n    \\<subseteq> supp (e1  ==  e2 ) - {atom z} \\<union> {atom d}", "using swap_ce_supp"], ["proof (prove)\nusing this:\n  atom d \\<sharp> (e1  ==  e2 )\n  atom ?d \\<sharp> ?e \\<Longrightarrow>\n  supp ((?z \\<leftrightarrow> ?d) \\<bullet> ?e)\n  \\<subseteq> supp ?e - {atom ?z} \\<union> {atom ?d}\n\ngoal (1 subgoal):\n 1. supp ((z \\<leftrightarrow> d) \\<bullet> (e1  ==  e2 ))\n    \\<subseteq> supp (e1  ==  e2 ) - {atom z} \\<union> {atom d}", "by auto"], ["proof (state)\nthis:\n  supp ((z \\<leftrightarrow> d) \\<bullet> (e1  ==  e2 ))\n  \\<subseteq> supp (e1  ==  e2 ) - {atom z} \\<union> {atom d}\n\ngoal (6 subgoals):\n 1. atom d \\<sharp> (TRUE) \\<Longrightarrow>\n    supp ((z \\<leftrightarrow> d) \\<bullet> (TRUE))\n    \\<subseteq> supp (TRUE) - {atom z} \\<union> {atom d}\n 2. atom d \\<sharp> (FALSE) \\<Longrightarrow>\n    supp ((z \\<leftrightarrow> d) \\<bullet> (FALSE))\n    \\<subseteq> supp (FALSE) - {atom z} \\<union> {atom d}\n 3. \\<And>x1 x2.\n       \\<lbrakk>atom d \\<sharp> x1 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1)\n                \\<subseteq> supp x1 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (x1  AND  x2 )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (x1  AND  x2 ))\n                         \\<subseteq> supp (x1  AND  x2 ) - {atom z} \\<union>\n                                     {atom d}\n 4. \\<And>x1 x2.\n       \\<lbrakk>atom d \\<sharp> x1 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1)\n                \\<subseteq> supp x1 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (x1 OR x2 )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (x1 OR x2 ))\n                         \\<subseteq> supp (x1 OR x2 ) - {atom z} \\<union>\n                                     {atom d}\n 5. \\<And>x.\n       \\<lbrakk>atom d \\<sharp> x \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x)\n                \\<subseteq> supp x - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (\\<not> x )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (\\<not> x ))\n                         \\<subseteq> supp (\\<not> x ) - {atom z} \\<union>\n                                     {atom d}\n 6. \\<And>x1 x2.\n       \\<lbrakk>atom d \\<sharp> x1 \\<Longrightarrow>\n                supp ((z \\<leftrightarrow> d) \\<bullet> x1)\n                \\<subseteq> supp x1 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> x2 \\<Longrightarrow>\n        supp ((z \\<leftrightarrow> d) \\<bullet> x2)\n        \\<subseteq> supp x2 - {atom z} \\<union> {atom d};\n        atom d \\<sharp> (x1  IMP  x2 )\\<rbrakk>\n       \\<Longrightarrow> supp\n                          ((z \\<leftrightarrow> d) \\<bullet> (x1  IMP  x2 ))\n                         \\<subseteq> supp (x1  IMP  x2 ) - {atom z} \\<union>\n                                     {atom d}", "qed(auto+)"], ["", "lemma type_e_eq:\n  assumes \"atom z \\<sharp> e\" and \"atom z' \\<sharp> e\"\n  shows \"\\<lbrace> z : b  |  [[z]\\<^sup>v]\\<^sup>c\\<^sup>e == e \\<rbrace> = (\\<lbrace> z' : b  |  [[z']\\<^sup>v]\\<^sup>c\\<^sup>e ==  e \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> z : b  | [ [ z ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  e  \\<rbrace> =\n    \\<lbrace> z' : b  | [ [ z' ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  e  \\<rbrace>", "by (auto,metis (full_types) assms(1) assms(2) flip_fresh_fresh fresh_PairD(1) fresh_PairD(2))"], ["", "lemma type_e_eq2:\n  assumes \"atom z \\<sharp> e\" and \"atom z' \\<sharp> e\" and \"b=b'\"\n  shows \"\\<lbrace> z : b  |  [[z]\\<^sup>v]\\<^sup>c\\<^sup>e == e \\<rbrace> = (\\<lbrace> z' : b'  |  [[z']\\<^sup>v]\\<^sup>c\\<^sup>e == e \\<rbrace>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace> z : b  | [ [ z ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  e  \\<rbrace> =\n    \\<lbrace> z' : b'  | [ [ z' ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  e  \\<rbrace>", "using assms type_e_eq"], ["proof (prove)\nusing this:\n  atom z \\<sharp> e\n  atom z' \\<sharp> e\n  b = b'\n  \\<lbrakk>atom ?z \\<sharp> ?e; atom ?z' \\<sharp> ?e\\<rbrakk>\n  \\<Longrightarrow> \\<lbrace> ?z : ?b  | [ [ ?z ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  ?e  \\<rbrace> =\n                    \\<lbrace> ?z' : ?b  | [ [ ?z' ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  ?e  \\<rbrace>\n\ngoal (1 subgoal):\n 1. \\<lbrace> z : b  | [ [ z ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  e  \\<rbrace> =\n    \\<lbrace> z' : b'  | [ [ z' ]\\<^sup>v ]\\<^sup>c\\<^sup>e  ==  e  \\<rbrace>", "by fast"], ["", "lemma e_flip_eq:\n  fixes e::e and ea::e\n  assumes \"atom c \\<sharp> (e, ea)\" and \"atom c \\<sharp> (x, xa, e, ea)\" and \"(x \\<leftrightarrow> c) \\<bullet> e = (xa \\<leftrightarrow> c) \\<bullet> ea\" \n  shows \"(e = AE_val w \\<longrightarrow> (\\<exists>w'. ea = AE_val w' \\<and> (x \\<leftrightarrow> c) \\<bullet> w = (xa \\<leftrightarrow> c) \\<bullet> w')) \\<or> \n         (e = AE_op opp v1 v2 \\<longrightarrow> (\\<exists>v1' v2'. ea = AS_op opp v1' v2' \\<and> (x \\<leftrightarrow> c) \\<bullet> v1 = (xa \\<leftrightarrow> c) \\<bullet> v1') \\<and> (x \\<leftrightarrow> c) \\<bullet> v2 = (xa \\<leftrightarrow> c) \\<bullet> v2') \\<or> \n         (e = AE_fst v \\<longrightarrow> (\\<exists>v'. ea = AE_fst v' \\<and> (x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> v')) \\<or> \n         (e = AE_snd v \\<longrightarrow> (\\<exists>v'. ea = AE_snd v' \\<and> (x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> v')) \\<or> \n         (e = AE_len v \\<longrightarrow> (\\<exists>v'. ea = AE_len v' \\<and> (x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> v')) \\<or> \n         (e = AE_concat v1 v2 \\<longrightarrow> (\\<exists>v1' v2'. ea = AS_concat v1' v2' \\<and> (x \\<leftrightarrow> c) \\<bullet> v1 = (xa \\<leftrightarrow> c) \\<bullet> v1') \\<and> (x \\<leftrightarrow> c) \\<bullet> v2 = (xa \\<leftrightarrow> c) \\<bullet> v2') \\<or> \n         (e = AE_app f v \\<longrightarrow> (\\<exists>v'. ea = AE_app f  v' \\<and> (x \\<leftrightarrow> c) \\<bullet> v = (xa \\<leftrightarrow> c) \\<bullet> v'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (e = [ w ]\\<^sup>e \\<longrightarrow>\n     (\\<exists>w'.\n         ea = [ w' ]\\<^sup>e \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> w =\n         (xa \\<leftrightarrow> c) \\<bullet> w')) \\<or>\n    (e = [ opp v1 v2 ]\\<^sup>e \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         ea = AS_op opp v1' v2' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> v1 =\n         (xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n     (x \\<leftrightarrow> c) \\<bullet> v2 =\n     (xa \\<leftrightarrow> c) \\<bullet> v2') \\<or>\n    (e = [#1v ]\\<^sup>e \\<longrightarrow>\n     (\\<exists>v'.\n         ea = [#1v' ]\\<^sup>e \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> v =\n         (xa \\<leftrightarrow> c) \\<bullet> v')) \\<or>\n    (e = [#2v ]\\<^sup>e \\<longrightarrow>\n     (\\<exists>v'.\n         ea = [#2v' ]\\<^sup>e \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> v =\n         (xa \\<leftrightarrow> c) \\<bullet> v')) \\<or>\n    (e = [| v |]\\<^sup>e \\<longrightarrow>\n     (\\<exists>v'.\n         ea = [| v' |]\\<^sup>e \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> v =\n         (xa \\<leftrightarrow> c) \\<bullet> v')) \\<or>\n    (e = [ v1 @@ v2 ]\\<^sup>e \\<longrightarrow>\n     (\\<exists>v1' v2'.\n         ea = AS_concat v1' v2' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> v1 =\n         (xa \\<leftrightarrow> c) \\<bullet> v1') \\<and>\n     (x \\<leftrightarrow> c) \\<bullet> v2 =\n     (xa \\<leftrightarrow> c) \\<bullet> v2') \\<or>\n    (e = [ f  v  ]\\<^sup>e \\<longrightarrow>\n     (\\<exists>v'.\n         ea = [ f  v'  ]\\<^sup>e \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> v =\n         (xa \\<leftrightarrow> c) \\<bullet> v'))", "by (metis assms e.perm_simps permute_flip_cancel2)"], ["", "lemma fresh_opp_all:\n  fixes opp::opp\n  shows \"z \\<sharp> opp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<sharp> opp", "using e.fresh opp.exhaust opp.fresh"], ["proof (prove)\nusing this:\n  ?a \\<sharp> [ ?v ]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?list  ?v  ]\\<^sup>e =\n  (?a \\<sharp> ?list \\<and> ?a \\<sharp> ?v)\n  ?a \\<sharp> [?list [ ?b ]  ?v ]\\<^sup>e =\n  (?a \\<sharp> ?list \\<and> ?a \\<sharp> ?b \\<and> ?a \\<sharp> ?v)\n  ?a \\<sharp> [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  (?a \\<sharp> ?opp \\<and> ?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  ?a \\<sharp> [ ?v1.0 @@ ?v2.0 ]\\<^sup>e =\n  (?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  ?a \\<sharp> [#1?v ]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [#2?v ]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?u ]\\<^sup>e = ?a \\<sharp> ?u\n  ?a \\<sharp> [| ?v |]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?v1.0  ?v2.0 ]\\<^sup>e =\n  (?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  \\<lbrakk>?y = plus \\<Longrightarrow> ?P; ?y = leq \\<Longrightarrow> ?P;\n   ?y = eq \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  ?a \\<sharp> plus\n  ?a \\<sharp> leq\n  ?a \\<sharp> eq\n\ngoal (1 subgoal):\n 1. z \\<sharp> opp", "by metis"], ["", "lemma fresh_e_opp_all:\n  shows \"(z \\<sharp> v1 \\<and> z \\<sharp> v2) = z \\<sharp> AE_op opp v1 v2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z \\<sharp> v1 \\<and> z \\<sharp> v2) = z \\<sharp> [ opp v1 v2 ]\\<^sup>e", "using e.fresh opp.exhaust opp.fresh fresh_opp_all"], ["proof (prove)\nusing this:\n  ?a \\<sharp> [ ?v ]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?list  ?v  ]\\<^sup>e =\n  (?a \\<sharp> ?list \\<and> ?a \\<sharp> ?v)\n  ?a \\<sharp> [?list [ ?b ]  ?v ]\\<^sup>e =\n  (?a \\<sharp> ?list \\<and> ?a \\<sharp> ?b \\<and> ?a \\<sharp> ?v)\n  ?a \\<sharp> [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  (?a \\<sharp> ?opp \\<and> ?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  ?a \\<sharp> [ ?v1.0 @@ ?v2.0 ]\\<^sup>e =\n  (?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  ?a \\<sharp> [#1?v ]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [#2?v ]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?u ]\\<^sup>e = ?a \\<sharp> ?u\n  ?a \\<sharp> [| ?v |]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?v1.0  ?v2.0 ]\\<^sup>e =\n  (?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  \\<lbrakk>?y = plus \\<Longrightarrow> ?P; ?y = leq \\<Longrightarrow> ?P;\n   ?y = eq \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  ?a \\<sharp> plus\n  ?a \\<sharp> leq\n  ?a \\<sharp> eq\n  ?z \\<sharp> ?opp\n\ngoal (1 subgoal):\n 1. (z \\<sharp> v1 \\<and> z \\<sharp> v2) = z \\<sharp> [ opp v1 v2 ]\\<^sup>e", "by simp"], ["", "lemma fresh_e_opp:\n  fixes z::x\n  assumes \"atom z \\<sharp> v1 \\<and> atom z \\<sharp> v2\"\n  shows \"atom z \\<sharp> AE_op opp v1 v2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom z \\<sharp> [ opp v1 v2 ]\\<^sup>e", "using e.fresh opp.exhaust opp.fresh opp.supp"], ["proof (prove)\nusing this:\n  ?a \\<sharp> [ ?v ]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?list  ?v  ]\\<^sup>e =\n  (?a \\<sharp> ?list \\<and> ?a \\<sharp> ?v)\n  ?a \\<sharp> [?list [ ?b ]  ?v ]\\<^sup>e =\n  (?a \\<sharp> ?list \\<and> ?a \\<sharp> ?b \\<and> ?a \\<sharp> ?v)\n  ?a \\<sharp> [ ?opp ?v1.0 ?v2.0 ]\\<^sup>e =\n  (?a \\<sharp> ?opp \\<and> ?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  ?a \\<sharp> [ ?v1.0 @@ ?v2.0 ]\\<^sup>e =\n  (?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  ?a \\<sharp> [#1?v ]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [#2?v ]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?u ]\\<^sup>e = ?a \\<sharp> ?u\n  ?a \\<sharp> [| ?v |]\\<^sup>e = ?a \\<sharp> ?v\n  ?a \\<sharp> [ ?v1.0  ?v2.0 ]\\<^sup>e =\n  (?a \\<sharp> ?v1.0 \\<and> ?a \\<sharp> ?v2.0)\n  \\<lbrakk>?y = plus \\<Longrightarrow> ?P; ?y = leq \\<Longrightarrow> ?P;\n   ?y = eq \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  ?a \\<sharp> plus\n  ?a \\<sharp> leq\n  ?a \\<sharp> eq\n  supp plus = {}\n  supp leq = {}\n  supp eq = {}\n\ngoal (1 subgoal):\n 1. atom z \\<sharp> [ opp v1 v2 ]\\<^sup>e", "by (metis assms)"], ["", "subsubsection \\<open>Statements\\<close>"], ["", "lemma branch_s_flip_eq:\n  fixes v::v and va::v\n  assumes \"atom c \\<sharp> (v, va)\" and \"atom c \\<sharp> (x, xa, v, va)\" and \"(x \\<leftrightarrow> c) \\<bullet> s = (xa \\<leftrightarrow> c) \\<bullet> sa\" \n  shows \"(s = AS_val w \\<longrightarrow> (\\<exists>w'. sa = AS_val w' \\<and> (x \\<leftrightarrow> c) \\<bullet> w = (xa \\<leftrightarrow> c) \\<bullet> w')) \\<or> \n         (s = AS_seq s1 s2 \\<longrightarrow> (\\<exists>s1' s2'. sa = AS_seq s1' s2' \\<and> (x \\<leftrightarrow> c) \\<bullet> s1 = (xa \\<leftrightarrow> c) \\<bullet> s1') \\<and> (x \\<leftrightarrow> c) \\<bullet> s2 = (xa \\<leftrightarrow> c) \\<bullet> s2') \\<or> \n         (s = AS_if v s1 s2 \\<longrightarrow> (\\<exists>v' s1' s2'. sa = AS_if seq s1' s2' \\<and> (x \\<leftrightarrow> c) \\<bullet> s1 = (xa \\<leftrightarrow> c) \\<bullet> s1') \\<and> (x \\<leftrightarrow> c) \\<bullet> s2 = (xa \\<leftrightarrow> c) \\<bullet> s2' \\<and> (x \\<leftrightarrow> c) \\<bullet> c = (xa \\<leftrightarrow> c) \\<bullet> v')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s = [w]\\<^sup>s \\<longrightarrow>\n     (\\<exists>w'.\n         sa = [w']\\<^sup>s \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> w =\n         (xa \\<leftrightarrow> c) \\<bullet> w')) \\<or>\n    (s =  s1 ;; s2  \\<longrightarrow>\n     (\\<exists>s1' s2'.\n         sa =  s1' ;; s2'  \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> s1 =\n         (xa \\<leftrightarrow> c) \\<bullet> s1') \\<and>\n     (x \\<leftrightarrow> c) \\<bullet> s2 =\n     (xa \\<leftrightarrow> c) \\<bullet> s2') \\<or>\n    (s = IF v THEN s1 ELSE s2 \\<longrightarrow>\n     (\\<exists>v' s1' s2'.\n         sa = IF seq THEN s1' ELSE s2' \\<and>\n         (x \\<leftrightarrow> c) \\<bullet> s1 =\n         (xa \\<leftrightarrow> c) \\<bullet> s1') \\<and>\n     (x \\<leftrightarrow> c) \\<bullet> s2 =\n     (xa \\<leftrightarrow> c) \\<bullet> s2' \\<and>\n     (x \\<leftrightarrow> c) \\<bullet> c =\n     (xa \\<leftrightarrow> c) \\<bullet> v')", "by (metis assms s_branch_s_branch_list.perm_simps permute_flip_cancel2)"], ["", "section \\<open>Context Syntax\\<close>"], ["", "subsection \\<open>Datatypes\\<close>"], ["", "text \\<open>Type and function/type definition contexts\\<close>"], ["", "type_synonym \\<Phi> = \"fun_def list\""], ["", "type_synonym \\<Theta> = \"type_def list\""], ["", "type_synonym \\<B> = \"bv fset\""], ["", "datatype \\<Gamma> = \n  GNil\n  | GCons \"x*b*c\" \\<Gamma>  (infixr \"#\\<^sub>\\<Gamma>\" 65)"], ["", "datatype \\<Delta> = \n  DNil  (\"[]\\<^sub>\\<Delta>\")\n  | DCons \"u*\\<tau>\" \\<Delta>  (infixr \"#\\<^sub>\\<Delta>\" 65)"], ["", "subsection \\<open>Functions and Lemmas\\<close>"], ["", "lemma \\<Gamma>_induct [case_names GNil GCons] : \"P GNil \\<Longrightarrow> (\\<And>x b c \\<Gamma>'. P \\<Gamma>' \\<Longrightarrow> P ((x,b,c) #\\<^sub>\\<Gamma> \\<Gamma>')) \\<Longrightarrow> P \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P GNil;\n     \\<And>x b c \\<Gamma>'.\n        P \\<Gamma>' \\<Longrightarrow>\n        P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n    \\<Longrightarrow> P \\<Gamma>", "proof(induct \\<Gamma> rule:\\<Gamma>.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P GNil;\n     \\<And>x b c \\<Gamma>'.\n        P \\<Gamma>' \\<Longrightarrow>\n        P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n    \\<Longrightarrow> P GNil\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P GNil;\n                 \\<And>x b c \\<Gamma>'.\n                    P \\<Gamma>' \\<Longrightarrow>\n                    P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P GNil;\n        \\<And>x b c \\<Gamma>'.\n           P \\<Gamma>' \\<Longrightarrow>\n           P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Gamma> x2)", "case GNil"], ["proof (state)\nthis:\n  P GNil\n  P ?\\<Gamma>' \\<Longrightarrow>\n  P ((?x, ?b, ?c) #\\<^sub>\\<Gamma> ?\\<Gamma>')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P GNil;\n     \\<And>x b c \\<Gamma>'.\n        P \\<Gamma>' \\<Longrightarrow>\n        P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n    \\<Longrightarrow> P GNil\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P GNil;\n                 \\<And>x b c \\<Gamma>'.\n                    P \\<Gamma>' \\<Longrightarrow>\n                    P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P GNil;\n        \\<And>x b c \\<Gamma>'.\n           P \\<Gamma>' \\<Longrightarrow>\n           P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Gamma> x2)", "then"], ["proof (chain)\npicking this:\n  P GNil\n  P ?\\<Gamma>' \\<Longrightarrow>\n  P ((?x, ?b, ?c) #\\<^sub>\\<Gamma> ?\\<Gamma>')", "show ?case"], ["proof (prove)\nusing this:\n  P GNil\n  P ?\\<Gamma>' \\<Longrightarrow>\n  P ((?x, ?b, ?c) #\\<^sub>\\<Gamma> ?\\<Gamma>')\n\ngoal (1 subgoal):\n 1. P GNil", "by auto"], ["proof (state)\nthis:\n  P GNil\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P GNil;\n                 \\<And>x b c \\<Gamma>'.\n                    P \\<Gamma>' \\<Longrightarrow>\n                    P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P GNil;\n        \\<And>x b c \\<Gamma>'.\n           P \\<Gamma>' \\<Longrightarrow>\n           P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Gamma> x2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P GNil;\n                 \\<And>x b c \\<Gamma>'.\n                    P \\<Gamma>' \\<Longrightarrow>\n                    P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P GNil;\n        \\<And>x b c \\<Gamma>'.\n           P \\<Gamma>' \\<Longrightarrow>\n           P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Gamma> x2)", "case (GCons x1 x2)"], ["proof (state)\nthis:\n  \\<lbrakk>P GNil;\n   \\<And>x b c \\<Gamma>'.\n      P \\<Gamma>' \\<Longrightarrow>\n      P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P GNil\n  P ?\\<Gamma>' \\<Longrightarrow>\n  P ((?x, ?b, ?c) #\\<^sub>\\<Gamma> ?\\<Gamma>')\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P GNil;\n                 \\<And>x b c \\<Gamma>'.\n                    P \\<Gamma>' \\<Longrightarrow>\n                    P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P GNil;\n        \\<And>x b c \\<Gamma>'.\n           P \\<Gamma>' \\<Longrightarrow>\n           P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Gamma> x2)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>P GNil;\n   \\<And>x b c \\<Gamma>'.\n      P \\<Gamma>' \\<Longrightarrow>\n      P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P GNil\n  P ?\\<Gamma>' \\<Longrightarrow>\n  P ((?x, ?b, ?c) #\\<^sub>\\<Gamma> ?\\<Gamma>')", "obtain x and b and c where \"x1=(x,b,c)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P GNil;\n   \\<And>x b c \\<Gamma>'.\n      P \\<Gamma>' \\<Longrightarrow>\n      P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P GNil\n  P ?\\<Gamma>' \\<Longrightarrow>\n  P ((?x, ?b, ?c) #\\<^sub>\\<Gamma> ?\\<Gamma>')\n\ngoal (1 subgoal):\n 1. (\\<And>x b c. x1 = (x, b, c) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prod_cases3"], ["proof (prove)\nusing this:\n  \\<lbrakk>P GNil;\n   \\<And>x b c \\<Gamma>'.\n      P \\<Gamma>' \\<Longrightarrow>\n      P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P GNil\n  P ?\\<Gamma>' \\<Longrightarrow>\n  P ((?x, ?b, ?c) #\\<^sub>\\<Gamma> ?\\<Gamma>')\n  (\\<And>a b c. ?y = (a, b, c) \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>x b c. x1 = (x, b, c) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x1 = (x, b, c)\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P GNil;\n                 \\<And>x b c \\<Gamma>'.\n                    P \\<Gamma>' \\<Longrightarrow>\n                    P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P GNil;\n        \\<And>x b c \\<Gamma>'.\n           P \\<Gamma>' \\<Longrightarrow>\n           P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Gamma> x2)", "then"], ["proof (chain)\npicking this:\n  x1 = (x, b, c)", "show ?case"], ["proof (prove)\nusing this:\n  x1 = (x, b, c)\n\ngoal (1 subgoal):\n 1. P (x1 #\\<^sub>\\<Gamma> x2)", "using GCons"], ["proof (prove)\nusing this:\n  x1 = (x, b, c)\n  \\<lbrakk>P GNil;\n   \\<And>x b c \\<Gamma>'.\n      P \\<Gamma>' \\<Longrightarrow>\n      P ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P GNil\n  P ?\\<Gamma>' \\<Longrightarrow>\n  P ((?x, ?b, ?c) #\\<^sub>\\<Gamma> ?\\<Gamma>')\n\ngoal (1 subgoal):\n 1. P (x1 #\\<^sub>\\<Gamma> x2)", "by presburger"], ["proof (state)\nthis:\n  P (x1 #\\<^sub>\\<Gamma> x2)\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation \\<Delta> ::  pt\nbegin"], ["", "primrec permute_\\<Delta>\n  where\n    DNil_eqvt:  \"p \\<bullet> DNil = DNil\"\n  | DCons_eqvt: \"p \\<bullet> (x #\\<^sub>\\<Delta> xs) = p \\<bullet> x #\\<^sub>\\<Delta> p \\<bullet> (xs::\\<Delta>)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<Delta>, pt_class)", "by standard (induct_tac [!] x, simp_all)"], ["", "end"], ["", "lemmas [eqvt] =  permute_\\<Delta>.simps"], ["", "lemma \\<Delta>_induct [case_names DNil DCons] : \"P DNil \\<Longrightarrow> (\\<And>u t \\<Delta>'. P \\<Delta>' \\<Longrightarrow> P ((u,t) #\\<^sub>\\<Delta> \\<Delta>')) \\<Longrightarrow> P \\<Delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P []\\<^sub>\\<Delta>;\n     \\<And>u t \\<Delta>'.\n        P \\<Delta>' \\<Longrightarrow>\n        P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n    \\<Longrightarrow> P \\<Delta>", "proof(induct \\<Delta> rule: \\<Delta>.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P []\\<^sub>\\<Delta>;\n     \\<And>u t \\<Delta>'.\n        P \\<Delta>' \\<Longrightarrow>\n        P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n    \\<Longrightarrow> P []\\<^sub>\\<Delta>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P []\\<^sub>\\<Delta>;\n                 \\<And>u t \\<Delta>'.\n                    P \\<Delta>' \\<Longrightarrow>\n                    P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P []\\<^sub>\\<Delta>;\n        \\<And>u t \\<Delta>'.\n           P \\<Delta>' \\<Longrightarrow>\n           P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Delta> x2)", "case DNil"], ["proof (state)\nthis:\n  P []\\<^sub>\\<Delta>\n  P ?\\<Delta>' \\<Longrightarrow> P ((?u, ?t) #\\<^sub>\\<Delta> ?\\<Delta>')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P []\\<^sub>\\<Delta>;\n     \\<And>u t \\<Delta>'.\n        P \\<Delta>' \\<Longrightarrow>\n        P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n    \\<Longrightarrow> P []\\<^sub>\\<Delta>\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P []\\<^sub>\\<Delta>;\n                 \\<And>u t \\<Delta>'.\n                    P \\<Delta>' \\<Longrightarrow>\n                    P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P []\\<^sub>\\<Delta>;\n        \\<And>u t \\<Delta>'.\n           P \\<Delta>' \\<Longrightarrow>\n           P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Delta> x2)", "then"], ["proof (chain)\npicking this:\n  P []\\<^sub>\\<Delta>\n  P ?\\<Delta>' \\<Longrightarrow> P ((?u, ?t) #\\<^sub>\\<Delta> ?\\<Delta>')", "show ?case"], ["proof (prove)\nusing this:\n  P []\\<^sub>\\<Delta>\n  P ?\\<Delta>' \\<Longrightarrow> P ((?u, ?t) #\\<^sub>\\<Delta> ?\\<Delta>')\n\ngoal (1 subgoal):\n 1. P []\\<^sub>\\<Delta>", "by auto"], ["proof (state)\nthis:\n  P []\\<^sub>\\<Delta>\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P []\\<^sub>\\<Delta>;\n                 \\<And>u t \\<Delta>'.\n                    P \\<Delta>' \\<Longrightarrow>\n                    P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P []\\<^sub>\\<Delta>;\n        \\<And>u t \\<Delta>'.\n           P \\<Delta>' \\<Longrightarrow>\n           P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Delta> x2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P []\\<^sub>\\<Delta>;\n                 \\<And>u t \\<Delta>'.\n                    P \\<Delta>' \\<Longrightarrow>\n                    P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P []\\<^sub>\\<Delta>;\n        \\<And>u t \\<Delta>'.\n           P \\<Delta>' \\<Longrightarrow>\n           P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Delta> x2)", "case (DCons x1 x2)"], ["proof (state)\nthis:\n  \\<lbrakk>P []\\<^sub>\\<Delta>;\n   \\<And>u t \\<Delta>'.\n      P \\<Delta>' \\<Longrightarrow>\n      P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P []\\<^sub>\\<Delta>\n  P ?\\<Delta>' \\<Longrightarrow> P ((?u, ?t) #\\<^sub>\\<Delta> ?\\<Delta>')\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P []\\<^sub>\\<Delta>;\n                 \\<And>u t \\<Delta>'.\n                    P \\<Delta>' \\<Longrightarrow>\n                    P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P []\\<^sub>\\<Delta>;\n        \\<And>u t \\<Delta>'.\n           P \\<Delta>' \\<Longrightarrow>\n           P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Delta> x2)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>P []\\<^sub>\\<Delta>;\n   \\<And>u t \\<Delta>'.\n      P \\<Delta>' \\<Longrightarrow>\n      P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P []\\<^sub>\\<Delta>\n  P ?\\<Delta>' \\<Longrightarrow> P ((?u, ?t) #\\<^sub>\\<Delta> ?\\<Delta>')", "obtain u and t  where \"x1=(u,t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P []\\<^sub>\\<Delta>;\n   \\<And>u t \\<Delta>'.\n      P \\<Delta>' \\<Longrightarrow>\n      P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P []\\<^sub>\\<Delta>\n  P ?\\<Delta>' \\<Longrightarrow> P ((?u, ?t) #\\<^sub>\\<Delta> ?\\<Delta>')\n\ngoal (1 subgoal):\n 1. (\\<And>u t. x1 = (u, t) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  x1 = (u, t)\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P []\\<^sub>\\<Delta>;\n                 \\<And>u t \\<Delta>'.\n                    P \\<Delta>' \\<Longrightarrow>\n                    P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P []\\<^sub>\\<Delta>;\n        \\<And>u t \\<Delta>'.\n           P \\<Delta>' \\<Longrightarrow>\n           P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 #\\<^sub>\\<Delta> x2)", "then"], ["proof (chain)\npicking this:\n  x1 = (u, t)", "show ?case"], ["proof (prove)\nusing this:\n  x1 = (u, t)\n\ngoal (1 subgoal):\n 1. P (x1 #\\<^sub>\\<Delta> x2)", "using DCons"], ["proof (prove)\nusing this:\n  x1 = (u, t)\n  \\<lbrakk>P []\\<^sub>\\<Delta>;\n   \\<And>u t \\<Delta>'.\n      P \\<Delta>' \\<Longrightarrow>\n      P ((u, t) #\\<^sub>\\<Delta> \\<Delta>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P []\\<^sub>\\<Delta>\n  P ?\\<Delta>' \\<Longrightarrow> P ((?u, ?t) #\\<^sub>\\<Delta> ?\\<Delta>')\n\ngoal (1 subgoal):\n 1. P (x1 #\\<^sub>\\<Delta> x2)", "by presburger"], ["proof (state)\nthis:\n  P (x1 #\\<^sub>\\<Delta> x2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<Phi>_induct [case_names PNil PConsNone PConsSome] : \"P [] \\<Longrightarrow> (\\<And>f x b c \\<tau> s' \\<Phi>'. P \\<Phi>' \\<Longrightarrow> P ((AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s'))) # \\<Phi>')) \\<Longrightarrow>\n                                                                  (\\<And>f bv x b c \\<tau> s' \\<Phi>'. P \\<Phi>' \\<Longrightarrow> P ((AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s'))) # \\<Phi>'))  \\<Longrightarrow> P \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P [];\n     \\<And>f x b c \\<tau> s' \\<Phi>'.\n        P \\<Phi>' \\<Longrightarrow>\n        P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n           \\<Phi>');\n     \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n        P \\<Phi>' \\<Longrightarrow>\n        P (AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n           \\<Phi>')\\<rbrakk>\n    \\<Longrightarrow> P \\<Phi>", "proof(induct \\<Phi> rule: list.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P [];\n     \\<And>f x b c \\<tau> s' \\<Phi>'.\n        P \\<Phi>' \\<Longrightarrow>\n        P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n           \\<Phi>');\n     \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n        P \\<Phi>' \\<Longrightarrow>\n        P (AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n           \\<Phi>')\\<rbrakk>\n    \\<Longrightarrow> P []\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>f x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>');\n                 \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>f x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>');\n        \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f\n               (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "case Nil"], ["proof (state)\nthis:\n  P []\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_none (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_some ?bv (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P [];\n     \\<And>f x b c \\<tau> s' \\<Phi>'.\n        P \\<Phi>' \\<Longrightarrow>\n        P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n           \\<Phi>');\n     \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n        P \\<Phi>' \\<Longrightarrow>\n        P (AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n           \\<Phi>')\\<rbrakk>\n    \\<Longrightarrow> P []\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>f x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>');\n                 \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>f x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>');\n        \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f\n               (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "then"], ["proof (chain)\npicking this:\n  P []\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_none (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_some ?bv (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')", "show ?case"], ["proof (prove)\nusing this:\n  P []\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_none (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_some ?bv (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n\ngoal (1 subgoal):\n 1. P []", "by auto"], ["proof (state)\nthis:\n  P []\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>f x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>');\n                 \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>f x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>');\n        \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f\n               (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>f x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>');\n                 \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>f x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>');\n        \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f\n               (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "case (Cons x1 x2)"], ["proof (state)\nthis:\n  \\<lbrakk>P [];\n   \\<And>f x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>');\n   \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P []\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_none (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_some ?bv (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>f x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>');\n                 \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>f x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>');\n        \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f\n               (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>P [];\n   \\<And>f x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>');\n   \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P []\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_none (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_some ?bv (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')", "obtain f and t where ft: \"x1 = (AF_fundef f t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P [];\n   \\<And>f x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>');\n   \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P []\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_none (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_some ?bv (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n\ngoal (1 subgoal):\n 1. (\\<And>f t.\n        x1 = AF_fundef f t \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson fun_def.exhaust)"], ["proof (state)\nthis:\n  x1 = AF_fundef f t\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>f x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>');\n                 \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n                    P \\<Phi>' \\<Longrightarrow>\n                    P (AF_fundef f\n                        (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n                       \\<Phi>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>f x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>');\n        \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n           P \\<Phi>' \\<Longrightarrow>\n           P (AF_fundef f\n               (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n              \\<Phi>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "then"], ["proof (chain)\npicking this:\n  x1 = AF_fundef f t", "show ?case"], ["proof (prove)\nusing this:\n  x1 = AF_fundef f t\n\ngoal (1 subgoal):\n 1. P (x1 # x2)", "proof(nominal_induct t rule:fun_typ_q.strong_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       x1 = AF_fundef f (AF_fun_typ_some x1a x2a) \\<Longrightarrow>\n       P (x1 # x2)\n 2. \\<And>x.\n       x1 = AF_fundef f (AF_fun_typ_none x) \\<Longrightarrow> P (x1 # x2)", "case (AF_fun_typ_some bv ft)"], ["proof (state)\nthis:\n  x1 = AF_fundef f (AF_fun_typ_some bv ft)\n\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       x1 = AF_fundef f (AF_fun_typ_some x1a x2a) \\<Longrightarrow>\n       P (x1 # x2)\n 2. \\<And>x.\n       x1 = AF_fundef f (AF_fun_typ_none x) \\<Longrightarrow> P (x1 # x2)", "then"], ["proof (chain)\npicking this:\n  x1 = AF_fundef f (AF_fun_typ_some bv ft)", "show ?case"], ["proof (prove)\nusing this:\n  x1 = AF_fundef f (AF_fun_typ_some bv ft)\n\ngoal (1 subgoal):\n 1. P (x1 # x2)", "using Cons ft"], ["proof (prove)\nusing this:\n  x1 = AF_fundef f (AF_fun_typ_some bv ft)\n  \\<lbrakk>P [];\n   \\<And>f x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>');\n   \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P []\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_none (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_some ?bv (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  x1 = AF_fundef f t\n\ngoal (1 subgoal):\n 1. P (x1 # x2)", "by (metis fun_typ.exhaust)"], ["proof (state)\nthis:\n  P (x1 # x2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x1 = AF_fundef f (AF_fun_typ_none x) \\<Longrightarrow> P (x1 # x2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x1 = AF_fundef f (AF_fun_typ_none x) \\<Longrightarrow> P (x1 # x2)", "case (AF_fun_typ_none ft)"], ["proof (state)\nthis:\n  x1 = AF_fundef f (AF_fun_typ_none ft)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x1 = AF_fundef f (AF_fun_typ_none x) \\<Longrightarrow> P (x1 # x2)", "then"], ["proof (chain)\npicking this:\n  x1 = AF_fundef f (AF_fun_typ_none ft)", "show ?case"], ["proof (prove)\nusing this:\n  x1 = AF_fundef f (AF_fun_typ_none ft)\n\ngoal (1 subgoal):\n 1. P (x1 # x2)", "using Cons ft"], ["proof (prove)\nusing this:\n  x1 = AF_fundef f (AF_fun_typ_none ft)\n  \\<lbrakk>P [];\n   \\<And>f x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_none (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>');\n   \\<And>f bv x b c \\<tau> s' \\<Phi>'.\n      P \\<Phi>' \\<Longrightarrow>\n      P (AF_fundef f (AF_fun_typ_some bv (AF_fun_typ x b c \\<tau> s')) #\n         \\<Phi>')\\<rbrakk>\n  \\<Longrightarrow> P x2\n  P []\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_none (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  P ?\\<Phi>' \\<Longrightarrow>\n  P (AF_fundef ?f (AF_fun_typ_some ?bv (AF_fun_typ ?x ?b ?c ?\\<tau> ?s')) #\n     ?\\<Phi>')\n  x1 = AF_fundef f t\n\ngoal (1 subgoal):\n 1. P (x1 # x2)", "by (metis fun_typ.exhaust)"], ["proof (state)\nthis:\n  P (x1 # x2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (x1 # x2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<Theta>_induct [case_names TNil AF_typedef AF_typedef_poly] : \"P [] \\<Longrightarrow> (\\<And>tid dclist \\<Theta>'. P \\<Theta>' \\<Longrightarrow> P ((AF_typedef tid dclist) # \\<Theta>')) \\<Longrightarrow>\n                                                                  (\\<And>tid bv dclist \\<Theta>'. P \\<Theta>' \\<Longrightarrow> P ((AF_typedef_poly tid bv dclist ) # \\<Theta>'))  \\<Longrightarrow> P \\<Theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P [];\n     \\<And>tid dclist \\<Theta>'.\n        P \\<Theta>' \\<Longrightarrow> P (AF_typedef tid dclist # \\<Theta>');\n     \\<And>tid bv dclist \\<Theta>'.\n        P \\<Theta>' \\<Longrightarrow>\n        P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n    \\<Longrightarrow> P \\<Theta>", "proof(induct \\<Theta> rule: list.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P [];\n     \\<And>tid dclist \\<Theta>'.\n        P \\<Theta>' \\<Longrightarrow> P (AF_typedef tid dclist # \\<Theta>');\n     \\<And>tid bv dclist \\<Theta>'.\n        P \\<Theta>' \\<Longrightarrow>\n        P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n    \\<Longrightarrow> P []\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>tid dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef tid dclist # \\<Theta>');\n                 \\<And>tid bv dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>tid dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef tid dclist # \\<Theta>');\n        \\<And>tid bv dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "case Nil"], ["proof (state)\nthis:\n  P []\n  P ?\\<Theta>' \\<Longrightarrow> P (AF_typedef ?tid ?dclist # ?\\<Theta>')\n  P ?\\<Theta>' \\<Longrightarrow>\n  P (AF_typedef_poly ?tid ?bv ?dclist # ?\\<Theta>')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P [];\n     \\<And>tid dclist \\<Theta>'.\n        P \\<Theta>' \\<Longrightarrow> P (AF_typedef tid dclist # \\<Theta>');\n     \\<And>tid bv dclist \\<Theta>'.\n        P \\<Theta>' \\<Longrightarrow>\n        P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n    \\<Longrightarrow> P []\n 2. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>tid dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef tid dclist # \\<Theta>');\n                 \\<And>tid bv dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>tid dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef tid dclist # \\<Theta>');\n        \\<And>tid bv dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "then"], ["proof (chain)\npicking this:\n  P []\n  P ?\\<Theta>' \\<Longrightarrow> P (AF_typedef ?tid ?dclist # ?\\<Theta>')\n  P ?\\<Theta>' \\<Longrightarrow>\n  P (AF_typedef_poly ?tid ?bv ?dclist # ?\\<Theta>')", "show ?case"], ["proof (prove)\nusing this:\n  P []\n  P ?\\<Theta>' \\<Longrightarrow> P (AF_typedef ?tid ?dclist # ?\\<Theta>')\n  P ?\\<Theta>' \\<Longrightarrow>\n  P (AF_typedef_poly ?tid ?bv ?dclist # ?\\<Theta>')\n\ngoal (1 subgoal):\n 1. P []", "by auto"], ["proof (state)\nthis:\n  P []\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>tid dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef tid dclist # \\<Theta>');\n                 \\<And>tid bv dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>tid dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef tid dclist # \\<Theta>');\n        \\<And>tid bv dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>tid dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef tid dclist # \\<Theta>');\n                 \\<And>tid bv dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>tid dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef tid dclist # \\<Theta>');\n        \\<And>tid bv dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "case (Cons td T)"], ["proof (state)\nthis:\n  \\<lbrakk>P [];\n   \\<And>tid dclist \\<Theta>'.\n      P \\<Theta>' \\<Longrightarrow> P (AF_typedef tid dclist # \\<Theta>');\n   \\<And>tid bv dclist \\<Theta>'.\n      P \\<Theta>' \\<Longrightarrow>\n      P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n  \\<Longrightarrow> P T\n  P []\n  P ?\\<Theta>' \\<Longrightarrow> P (AF_typedef ?tid ?dclist # ?\\<Theta>')\n  P ?\\<Theta>' \\<Longrightarrow>\n  P (AF_typedef_poly ?tid ?bv ?dclist # ?\\<Theta>')\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2.\n       \\<lbrakk>\\<lbrakk>P [];\n                 \\<And>tid dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef tid dclist # \\<Theta>');\n                 \\<And>tid bv dclist \\<Theta>'.\n                    P \\<Theta>' \\<Longrightarrow>\n                    P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n                \\<Longrightarrow> P x2;\n        P [];\n        \\<And>tid dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef tid dclist # \\<Theta>');\n        \\<And>tid bv dclist \\<Theta>'.\n           P \\<Theta>' \\<Longrightarrow>\n           P (AF_typedef_poly tid bv dclist # \\<Theta>')\\<rbrakk>\n       \\<Longrightarrow> P (x1 # x2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (td # T)", "by(cases td rule: type_def.exhaust, (simp add: Cons)+)"], ["proof (state)\nthis:\n  P (td # T)\n\ngoal:\nNo subgoals!", "qed"], ["", "instantiation \\<Gamma> ::  pt\nbegin"], ["", "primrec permute_\\<Gamma>\n  where\n    GNil_eqvt:  \"p \\<bullet> GNil = GNil\"\n  | GCons_eqvt: \"p \\<bullet> (x #\\<^sub>\\<Gamma> xs) = p \\<bullet> x #\\<^sub>\\<Gamma> p \\<bullet> (xs::\\<Gamma>)\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<Gamma>, pt_class)", "by standard (induct_tac [!] x, simp_all)"], ["", "end"], ["", "lemmas [eqvt] =  permute_\\<Gamma>.simps"], ["", "lemma G_cons_eqvt[simp]:\n  fixes \\<Gamma>::\\<Gamma>\n  shows \"p \\<bullet> ((x,b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = ((p \\<bullet> x,  p \\<bullet> b , p \\<bullet> c) #\\<^sub>\\<Gamma> (p \\<bullet> \\<Gamma> ))\" (is \"?A = ?B\" )"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>) =\n    (p \\<bullet> x, p \\<bullet> b, p \\<bullet> c) #\\<^sub>\\<Gamma>\n    p \\<bullet> \\<Gamma>", "using Cons_eqvt triple_eqvt  supp_b_empty"], ["proof (prove)\nusing this:\n  ?p \\<bullet> (?x # ?xs) = ?p \\<bullet> ?x # ?p \\<bullet> ?xs\n  ?p \\<bullet> (?x, ?b, ?c) =\n  (?p \\<bullet> ?x, ?p \\<bullet> ?b, ?p \\<bullet> ?c)\n  atom ?x \\<notin> supp ?b\n\ngoal (1 subgoal):\n 1. p \\<bullet> ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>) =\n    (p \\<bullet> x, p \\<bullet> b, p \\<bullet> c) #\\<^sub>\\<Gamma>\n    p \\<bullet> \\<Gamma>", "by simp"], ["", "lemma G_cons_flip[simp]:\n  fixes  x::x and \\<Gamma>::\\<Gamma>\n  shows  \"(x\\<leftrightarrow>x') \\<bullet> ((x'',b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = (((x\\<leftrightarrow>x') \\<bullet> x'',  b , (x\\<leftrightarrow>x') \\<bullet> c) #\\<^sub>\\<Gamma> ((x\\<leftrightarrow>x') \\<bullet> \\<Gamma> ))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> x') \\<bullet> ((x'', b, c) #\\<^sub>\\<Gamma>\n  \\<Gamma>) =\n    ((x \\<leftrightarrow> x') \\<bullet> x'', b,\n     (x \\<leftrightarrow> x') \\<bullet> c) #\\<^sub>\\<Gamma>\n    (x \\<leftrightarrow> x') \\<bullet> \\<Gamma>", "using Cons_eqvt triple_eqvt  supp_b_empty"], ["proof (prove)\nusing this:\n  ?p \\<bullet> (?x # ?xs) = ?p \\<bullet> ?x # ?p \\<bullet> ?xs\n  ?p \\<bullet> (?x, ?b, ?c) =\n  (?p \\<bullet> ?x, ?p \\<bullet> ?b, ?p \\<bullet> ?c)\n  atom ?x \\<notin> supp ?b\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> x') \\<bullet> ((x'', b, c) #\\<^sub>\\<Gamma>\n  \\<Gamma>) =\n    ((x \\<leftrightarrow> x') \\<bullet> x'', b,\n     (x \\<leftrightarrow> x') \\<bullet> c) #\\<^sub>\\<Gamma>\n    (x \\<leftrightarrow> x') \\<bullet> \\<Gamma>", "by auto"], ["", "lemma G_cons_flip_fresh[simp]:\n  fixes  x::x and \\<Gamma>::\\<Gamma> \n  assumes  \"atom x \\<sharp> (c,\\<Gamma>)\" and \"atom x' \\<sharp> (c,\\<Gamma>)\" \n  shows  \"(x\\<leftrightarrow>x') \\<bullet> ((x',b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = ((x,  b , c) #\\<^sub>\\<Gamma> \\<Gamma> )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> x') \\<bullet> ((x', b, c) #\\<^sub>\\<Gamma>\n  \\<Gamma>) =\n    (x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>", "using G_cons_flip flip_fresh_fresh assms"], ["proof (prove)\nusing this:\n  (?x \\<leftrightarrow> ?x') \\<bullet> ((?x'', ?b, ?c) #\\<^sub>\\<Gamma>\n  ?\\<Gamma>) =\n  ((?x \\<leftrightarrow> ?x') \\<bullet> ?x'', ?b,\n   (?x \\<leftrightarrow> ?x') \\<bullet> ?c) #\\<^sub>\\<Gamma>\n  (?x \\<leftrightarrow> ?x') \\<bullet> ?\\<Gamma>\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  atom x \\<sharp> (c, \\<Gamma>)\n  atom x' \\<sharp> (c, \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> x') \\<bullet> ((x', b, c) #\\<^sub>\\<Gamma>\n  \\<Gamma>) =\n    (x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>", "by force"], ["", "lemma G_cons_flip_fresh2[simp]:\n  fixes  x::x and \\<Gamma>::\\<Gamma> \n  assumes  \"atom x \\<sharp> (c,\\<Gamma>)\" and \"atom x' \\<sharp> (c,\\<Gamma>)\" \n  shows  \"(x\\<leftrightarrow>x') \\<bullet> ((x,b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = ((x',  b , c) #\\<^sub>\\<Gamma> \\<Gamma> )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> x') \\<bullet> ((x, b, c) #\\<^sub>\\<Gamma>\n  \\<Gamma>) =\n    (x', b, c) #\\<^sub>\\<Gamma> \\<Gamma>", "using G_cons_flip flip_fresh_fresh assms"], ["proof (prove)\nusing this:\n  (?x \\<leftrightarrow> ?x') \\<bullet> ((?x'', ?b, ?c) #\\<^sub>\\<Gamma>\n  ?\\<Gamma>) =\n  ((?x \\<leftrightarrow> ?x') \\<bullet> ?x'', ?b,\n   (?x \\<leftrightarrow> ?x') \\<bullet> ?c) #\\<^sub>\\<Gamma>\n  (?x \\<leftrightarrow> ?x') \\<bullet> ?\\<Gamma>\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  atom x \\<sharp> (c, \\<Gamma>)\n  atom x' \\<sharp> (c, \\<Gamma>)\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> x') \\<bullet> ((x, b, c) #\\<^sub>\\<Gamma>\n  \\<Gamma>) =\n    (x', b, c) #\\<^sub>\\<Gamma> \\<Gamma>", "by force"], ["", "lemma G_cons_flip_fresh3[simp]:\n  fixes  x::x and \\<Gamma>::\\<Gamma> \n  assumes  \"atom x \\<sharp> \\<Gamma>\" and \"atom x' \\<sharp> \\<Gamma>\" \n  shows  \"(x\\<leftrightarrow>x') \\<bullet> ((x',b,c) #\\<^sub>\\<Gamma> \\<Gamma>) = ((x,  b , (x\\<leftrightarrow>x') \\<bullet> c) #\\<^sub>\\<Gamma> \\<Gamma> )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> x') \\<bullet> ((x', b, c) #\\<^sub>\\<Gamma>\n  \\<Gamma>) =\n    (x, b, (x \\<leftrightarrow> x') \\<bullet> c) #\\<^sub>\\<Gamma> \\<Gamma>", "using G_cons_flip flip_fresh_fresh assms"], ["proof (prove)\nusing this:\n  (?x \\<leftrightarrow> ?x') \\<bullet> ((?x'', ?b, ?c) #\\<^sub>\\<Gamma>\n  ?\\<Gamma>) =\n  ((?x \\<leftrightarrow> ?x') \\<bullet> ?x'', ?b,\n   (?x \\<leftrightarrow> ?x') \\<bullet> ?c) #\\<^sub>\\<Gamma>\n  (?x \\<leftrightarrow> ?x') \\<bullet> ?\\<Gamma>\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  atom x \\<sharp> \\<Gamma>\n  atom x' \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. (x \\<leftrightarrow> x') \\<bullet> ((x', b, c) #\\<^sub>\\<Gamma>\n  \\<Gamma>) =\n    (x, b, (x \\<leftrightarrow> x') \\<bullet> c) #\\<^sub>\\<Gamma> \\<Gamma>", "by force"], ["", "lemma neq_GNil_conv: \"(xs \\<noteq> GNil) = (\\<exists>y ys. xs = y #\\<^sub>\\<Gamma> ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs \\<noteq> GNil) = (\\<exists>y ys. xs = y #\\<^sub>\\<Gamma> ys)", "by (induct xs) auto"], ["", "nominal_function toList :: \"\\<Gamma> \\<Rightarrow> (x*b*c) list\" where\n  \"toList GNil = []\"\n| \"toList (GCons xbc G) = xbc#(toList G)\""], ["proof (prove)\ngoal (6 subgoals):\n 1. eqvt toList_graph_aux\n 2. \\<And>x y. toList_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>x = GNil \\<Longrightarrow> P;\n        \\<And>xbc G. x = xbc #\\<^sub>\\<Gamma> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. GNil = GNil \\<Longrightarrow> [] = []\n 5. \\<And>xbc G.\n       \\<lbrakk>eqvt_at toList_sumC G; True;\n        GNil = xbc #\\<^sub>\\<Gamma> G\\<rbrakk>\n       \\<Longrightarrow> [] = xbc # toList_sumC G\n 6. \\<And>xbc G xbca Ga.\n       \\<lbrakk>eqvt_at toList_sumC G; eqvt_at toList_sumC Ga; True; True;\n        xbc #\\<^sub>\\<Gamma> G = xbca #\\<^sub>\\<Gamma> Ga\\<rbrakk>\n       \\<Longrightarrow> xbc # toList_sumC G = xbca # toList_sumC Ga", "apply (auto, simp add: eqvt_def toList_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>x = GNil \\<Longrightarrow> P;\n        \\<And>a aa b G.\n           x = (a, aa, b) #\\<^sub>\\<Gamma> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "using neq_GNil_conv surj_pair"], ["proof (prove)\nusing this:\n  (?xs \\<noteq> GNil) = (\\<exists>y ys. ?xs = y #\\<^sub>\\<Gamma> ys)\n  \\<exists>x y. ?p = (x, y)\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>x = GNil \\<Longrightarrow> P;\n        \\<And>a aa b G.\n           x = (a, aa, b) #\\<^sub>\\<Gamma> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "by metis"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All toList_dom", "by lexicographic_order"], ["", "nominal_function toSet :: \"\\<Gamma> \\<Rightarrow> (x*b*c) set\" where\n  \"toSet GNil = {}\"\n| \"toSet (GCons xbc G) = {xbc} \\<union> (toSet G)\""], ["proof (prove)\ngoal (6 subgoals):\n 1. eqvt toSet_graph_aux\n 2. \\<And>x y. toSet_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>x = GNil \\<Longrightarrow> P;\n        \\<And>xbc G. x = xbc #\\<^sub>\\<Gamma> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. GNil = GNil \\<Longrightarrow> {} = {}\n 5. \\<And>xbc G.\n       \\<lbrakk>eqvt_at toSet_sumC G; True;\n        GNil = xbc #\\<^sub>\\<Gamma> G\\<rbrakk>\n       \\<Longrightarrow> {} = {xbc} \\<union> toSet_sumC G\n 6. \\<And>xbc G xbca Ga.\n       \\<lbrakk>eqvt_at toSet_sumC G; eqvt_at toSet_sumC Ga; True; True;\n        xbc #\\<^sub>\\<Gamma> G = xbca #\\<^sub>\\<Gamma> Ga\\<rbrakk>\n       \\<Longrightarrow> {xbc} \\<union> toSet_sumC G =\n                         {xbca} \\<union> toSet_sumC Ga", "apply (auto,simp add: eqvt_def toSet_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>x = GNil \\<Longrightarrow> P;\n        \\<And>a aa b G.\n           x = (a, aa, b) #\\<^sub>\\<Gamma> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "using neq_GNil_conv surj_pair"], ["proof (prove)\nusing this:\n  (?xs \\<noteq> GNil) = (\\<exists>y ys. ?xs = y #\\<^sub>\\<Gamma> ys)\n  \\<exists>x y. ?p = (x, y)\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>x = GNil \\<Longrightarrow> P;\n        \\<And>a aa b G.\n           x = (a, aa, b) #\\<^sub>\\<Gamma> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "by metis"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All toSet_dom", "by lexicographic_order"], ["", "nominal_function append_g :: \"\\<Gamma> \\<Rightarrow> \\<Gamma> \\<Rightarrow> \\<Gamma>\" (infixr \"@\" 65) where\n  \"append_g GNil g = g\"\n| \"append_g (xbc #\\<^sub>\\<Gamma> g1) g2 = (xbc #\\<^sub>\\<Gamma> (g1@g2))\""], ["proof (prove)\ngoal (6 subgoals):\n 1. eqvt append_g_graph_aux\n 2. \\<And>x y. append_g_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>g. x = (GNil, g) \\<Longrightarrow> P;\n        \\<And>xbc g1 g2.\n           x = (xbc #\\<^sub>\\<Gamma> g1, g2) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>g ga. (GNil, g) = (GNil, ga) \\<Longrightarrow> g = ga\n 5. \\<And>g xbc g1 g2.\n       \\<lbrakk>eqvt_at append_g_sumC (g1, g2); True;\n        (GNil, g) = (xbc #\\<^sub>\\<Gamma> g1, g2)\\<rbrakk>\n       \\<Longrightarrow> g = xbc #\\<^sub>\\<Gamma> append_g_sumC (g1, g2)\n 6. \\<And>xbc g1 g2 xbca g1a g2a.\n       \\<lbrakk>eqvt_at append_g_sumC (g1, g2);\n        eqvt_at append_g_sumC (g1a, g2a); True; True;\n        (xbc #\\<^sub>\\<Gamma> g1, g2) =\n        (xbca #\\<^sub>\\<Gamma> g1a, g2a)\\<rbrakk>\n       \\<Longrightarrow> xbc #\\<^sub>\\<Gamma> append_g_sumC (g1, g2) =\n                         xbca #\\<^sub>\\<Gamma> append_g_sumC (g1a, g2a)", "apply (auto,simp add: eqvt_def append_g_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a.\n       \\<lbrakk>a = GNil \\<Longrightarrow> P;\n        \\<And>aa ab b g1.\n           a = (aa, ab, b) #\\<^sub>\\<Gamma> g1 \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "using neq_GNil_conv surj_pair"], ["proof (prove)\nusing this:\n  (?xs \\<noteq> GNil) = (\\<exists>y ys. ?xs = y #\\<^sub>\\<Gamma> ys)\n  \\<exists>x y. ?p = (x, y)\n\ngoal (1 subgoal):\n 1. \\<And>P a.\n       \\<lbrakk>a = GNil \\<Longrightarrow> P;\n        \\<And>aa ab b g1.\n           a = (aa, ab, b) #\\<^sub>\\<Gamma> g1 \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "by metis"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All append_g_dom", "by lexicographic_order"], ["", "nominal_function dom  ::  \"\\<Gamma> \\<Rightarrow> x set\"  where\n  \"dom \\<Gamma> = (fst` (toSet \\<Gamma>))\""], ["proof (prove)\ngoal (4 subgoals):\n 1. eqvt dom_graph_aux\n 2. \\<And>x y. dom_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       (\\<And>\\<Gamma>. x = \\<Gamma> \\<Longrightarrow> P) \\<Longrightarrow>\n       P\n 4. \\<And>\\<Gamma> \\<Gamma>'.\n       \\<Gamma> = \\<Gamma>' \\<Longrightarrow>\n       fst ` toSet \\<Gamma> = fst ` toSet \\<Gamma>'", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt dom_graph_aux", "unfolding  eqvt_def dom_graph_aux_def lfp_eqvt toSet.eqvt"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p.\n       lfp (p \\<bullet> (\\<lambda>p x1 x2.\n                            \\<exists>dom_aux \\<Gamma>.\n                               x1 = \\<Gamma> \\<and>\n                               x2 = fst ` toSet \\<Gamma>)) =\n       lfp (\\<lambda>p x1 x2.\n               \\<exists>dom_aux \\<Gamma>.\n                  x1 = \\<Gamma> \\<and> x2 = fst ` toSet \\<Gamma>)", "by simp"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All dom_dom", "by lexicographic_order"], ["", "text \\<open> Use of this is sometimes mixed in with use of freshness and support for the context however it makes it clear\nthat for immutable variables, the context is `self-supporting'\\<close>"], ["", "nominal_function atom_dom  ::  \"\\<Gamma> \\<Rightarrow> atom set\"  where\n  \"atom_dom \\<Gamma>  = atom`(dom  \\<Gamma>)\""], ["proof (prove)\ngoal (4 subgoals):\n 1. eqvt atom_dom_graph_aux\n 2. \\<And>x y. atom_dom_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       (\\<And>\\<Gamma>. x = \\<Gamma> \\<Longrightarrow> P) \\<Longrightarrow>\n       P\n 4. \\<And>\\<Gamma> \\<Gamma>'.\n       \\<Gamma> = \\<Gamma>' \\<Longrightarrow>\n       atom ` Syntax.dom \\<Gamma> = atom ` Syntax.dom \\<Gamma>'", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt atom_dom_graph_aux", "unfolding  eqvt_def atom_dom_graph_aux_def lfp_eqvt toSet.eqvt"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p.\n       lfp (p \\<bullet> (\\<lambda>p x1 x2.\n                            \\<exists>atom_dom_aux \\<Gamma>.\n                               x1 = \\<Gamma> \\<and>\n                               x2 = atom ` Syntax.dom \\<Gamma>)) =\n       lfp (\\<lambda>p x1 x2.\n               \\<exists>atom_dom_aux \\<Gamma>.\n                  x1 = \\<Gamma> \\<and> x2 = atom ` Syntax.dom \\<Gamma>)", "by simp"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All atom_dom_dom", "by lexicographic_order"], ["", "subsection \\<open>Immutable Variable Context Lemmas\\<close>"], ["", "lemma append_GNil[simp]:\n  \"GNil @ G = G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. GNil @ G = G", "by simp"], ["", "lemma append_g_toSetU [simp]: \"toSet (G1@G2) = toSet G1 \\<union> toSet G2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. toSet (G1 @ G2) = toSet G1 \\<union> toSet G2", "by(induct G1, auto+)"], ["", "lemma supp_GNil: \n  shows \"supp GNil = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp GNil = {}", "by (simp add: supp_def)"], ["", "lemma supp_GCons: \n  fixes xs::\\<Gamma>\n  shows \"supp (x #\\<^sub>\\<Gamma> xs) = supp x \\<union> supp xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (x #\\<^sub>\\<Gamma> xs) = supp x \\<union> supp xs", "by (simp add: supp_def Collect_imp_eq Collect_neg_eq)"], ["", "lemma atom_dom_eq[simp]: \n  fixes G::\\<Gamma>\n  shows  \"atom_dom ((x, b, c) #\\<^sub>\\<Gamma> G) = atom_dom ((x, b, c') #\\<^sub>\\<Gamma> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom_dom ((x, b, c) #\\<^sub>\\<Gamma> G) =\n    atom_dom ((x, b, c') #\\<^sub>\\<Gamma> G)", "using atom_dom.simps toSet.simps"], ["proof (prove)\nusing this:\n  atom_dom ?\\<Gamma> = atom ` Syntax.dom ?\\<Gamma>\n  toSet GNil = {}\n  toSet (?xbc #\\<^sub>\\<Gamma> ?G) = {?xbc} \\<union> toSet ?G\n\ngoal (1 subgoal):\n 1. atom_dom ((x, b, c) #\\<^sub>\\<Gamma> G) =\n    atom_dom ((x, b, c') #\\<^sub>\\<Gamma> G)", "by simp"], ["", "lemma dom_append[simp]:\n  \"atom_dom (\\<Gamma>@\\<Gamma>') = atom_dom \\<Gamma> \\<union> atom_dom \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom_dom (\\<Gamma> @ \\<Gamma>') =\n    atom_dom \\<Gamma> \\<union> atom_dom \\<Gamma>'", "using image_Un append_g_toSetU atom_dom.simps dom.simps"], ["proof (prove)\nusing this:\n  ?f ` (?A \\<union> ?B) = ?f ` ?A \\<union> ?f ` ?B\n  toSet (?G1.0 @ ?G2.0) = toSet ?G1.0 \\<union> toSet ?G2.0\n  atom_dom ?\\<Gamma> = atom ` Syntax.dom ?\\<Gamma>\n  Syntax.dom ?\\<Gamma> = fst ` toSet ?\\<Gamma>\n\ngoal (1 subgoal):\n 1. atom_dom (\\<Gamma> @ \\<Gamma>') =\n    atom_dom \\<Gamma> \\<union> atom_dom \\<Gamma>'", "by metis"], ["", "lemma dom_cons[simp]:\n  \"atom_dom ((x,b,c) #\\<^sub>\\<Gamma> G) = { atom x } \\<union> atom_dom G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom_dom ((x, b, c) #\\<^sub>\\<Gamma> G) = {atom x} \\<union> atom_dom G", "using image_Un append_g_toSetU atom_dom.simps"], ["proof (prove)\nusing this:\n  ?f ` (?A \\<union> ?B) = ?f ` ?A \\<union> ?f ` ?B\n  toSet (?G1.0 @ ?G2.0) = toSet ?G1.0 \\<union> toSet ?G2.0\n  atom_dom ?\\<Gamma> = atom ` Syntax.dom ?\\<Gamma>\n\ngoal (1 subgoal):\n 1. atom_dom ((x, b, c) #\\<^sub>\\<Gamma> G) = {atom x} \\<union> atom_dom G", "by auto"], ["", "lemma fresh_GNil[ms_fresh]: \n  shows \"a \\<sharp> GNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> GNil", "by (simp add: fresh_def supp_GNil)"], ["", "lemma fresh_GCons[ms_fresh]: \n  fixes xs::\\<Gamma>\n  shows \"a \\<sharp> (x #\\<^sub>\\<Gamma> xs) \\<longleftrightarrow> a \\<sharp> x \\<and> a \\<sharp> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> x #\\<^sub>\\<Gamma> xs = (a \\<sharp> x \\<and> a \\<sharp> xs)", "by (simp add: fresh_def supp_GCons)"], ["", "lemma dom_supp_g[simp]:\n  \"atom_dom G \\<subseteq> supp G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom_dom G \\<subseteq> supp G", "apply(induct G rule: \\<Gamma>_induct,simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x b c \\<Gamma>'.\n       atom_dom \\<Gamma>' \\<subseteq> supp \\<Gamma>' \\<Longrightarrow>\n       atom_dom ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\n       \\<subseteq> supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')", "using supp_at_base supp_Pair atom_dom.simps supp_GCons"], ["proof (prove)\nusing this:\n  supp ?a = {atom ?a}\n  supp (?x, ?y) = supp ?x \\<union> supp ?y\n  atom_dom ?\\<Gamma> = atom ` Syntax.dom ?\\<Gamma>\n  supp (?x #\\<^sub>\\<Gamma> ?xs) = supp ?x \\<union> supp ?xs\n\ngoal (1 subgoal):\n 1. \\<And>x b c \\<Gamma>'.\n       atom_dom \\<Gamma>' \\<subseteq> supp \\<Gamma>' \\<Longrightarrow>\n       atom_dom ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')\n       \\<subseteq> supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>')", "by fastforce"], ["", "lemma fresh_append_g[ms_fresh]:\n  fixes xs::\\<Gamma>\n  shows \"a \\<sharp> (xs @ ys) \\<longleftrightarrow> a \\<sharp> xs \\<and> a \\<sharp> ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> xs @ ys = (a \\<sharp> xs \\<and> a \\<sharp> ys)", "by (induct xs) (simp_all add: fresh_GNil fresh_GCons)"], ["", "lemma append_g_assoc:\n  fixes xs::\\<Gamma> \n  shows  \"(xs @ ys) @ zs = xs @ (ys @ zs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs @ ys) @ zs = xs @ ys @ zs", "by (induct xs) simp_all"], ["", "lemma append_g_inside:\n  fixes xs::\\<Gamma> \n  shows \"xs @ (x #\\<^sub>\\<Gamma> ys) = (xs @ (x #\\<^sub>\\<Gamma> GNil)) @ ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs @ x #\\<^sub>\\<Gamma> ys = (xs @ x #\\<^sub>\\<Gamma> GNil) @ ys", "by(induct xs,auto+)"], ["", "lemma finite_\\<Gamma>:\n  \"finite (toSet \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (toSet \\<Gamma>)", "by(induct \\<Gamma> rule: \\<Gamma>_induct,auto)"], ["", "lemma supp_\\<Gamma>:\n  \"supp \\<Gamma> = supp (toSet \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp \\<Gamma> = supp (toSet \\<Gamma>)", "proof(induct \\<Gamma> rule: \\<Gamma>_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. supp GNil = supp (toSet GNil)\n 2. \\<And>x b c \\<Gamma>'.\n       supp \\<Gamma>' = supp (toSet \\<Gamma>') \\<Longrightarrow>\n       supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>') =\n       supp (toSet ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>'))", "case GNil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. supp GNil = supp (toSet GNil)\n 2. \\<And>x b c \\<Gamma>'.\n       supp \\<Gamma>' = supp (toSet \\<Gamma>') \\<Longrightarrow>\n       supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>') =\n       supp (toSet ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>'))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. supp GNil = supp (toSet GNil)", "using supp_GNil toSet.simps"], ["proof (prove)\nusing this:\n  supp GNil = {}\n  toSet GNil = {}\n  toSet (?xbc #\\<^sub>\\<Gamma> ?G) = {?xbc} \\<union> toSet ?G\n\ngoal (1 subgoal):\n 1. supp GNil = supp (toSet GNil)", "by (simp add: supp_set_empty)"], ["proof (state)\nthis:\n  supp GNil = supp (toSet GNil)\n\ngoal (1 subgoal):\n 1. \\<And>x b c \\<Gamma>'.\n       supp \\<Gamma>' = supp (toSet \\<Gamma>') \\<Longrightarrow>\n       supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>') =\n       supp (toSet ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>'))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x b c \\<Gamma>'.\n       supp \\<Gamma>' = supp (toSet \\<Gamma>') \\<Longrightarrow>\n       supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>') =\n       supp (toSet ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>'))", "case (GCons x b c \\<Gamma>')"], ["proof (state)\nthis:\n  supp \\<Gamma>' = supp (toSet \\<Gamma>')\n\ngoal (1 subgoal):\n 1. \\<And>x b c \\<Gamma>'.\n       supp \\<Gamma>' = supp (toSet \\<Gamma>') \\<Longrightarrow>\n       supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>') =\n       supp (toSet ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>'))", "then"], ["proof (chain)\npicking this:\n  supp \\<Gamma>' = supp (toSet \\<Gamma>')", "show ?case"], ["proof (prove)\nusing this:\n  supp \\<Gamma>' = supp (toSet \\<Gamma>')\n\ngoal (1 subgoal):\n 1. supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>') =\n    supp (toSet ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>'))", "using  supp_GCons toSet.simps finite_\\<Gamma> supp_of_finite_union"], ["proof (prove)\nusing this:\n  supp \\<Gamma>' = supp (toSet \\<Gamma>')\n  supp (?x #\\<^sub>\\<Gamma> ?xs) = supp ?x \\<union> supp ?xs\n  toSet GNil = {}\n  toSet (?xbc #\\<^sub>\\<Gamma> ?G) = {?xbc} \\<union> toSet ?G\n  finite (toSet ?\\<Gamma>)\n  \\<lbrakk>finite ?S; finite ?T\\<rbrakk>\n  \\<Longrightarrow> supp (?S \\<union> ?T) = supp ?S \\<union> supp ?T\n\ngoal (1 subgoal):\n 1. supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>') =\n    supp (toSet ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>'))", "using supp_of_finite_insert"], ["proof (prove)\nusing this:\n  supp \\<Gamma>' = supp (toSet \\<Gamma>')\n  supp (?x #\\<^sub>\\<Gamma> ?xs) = supp ?x \\<union> supp ?xs\n  toSet GNil = {}\n  toSet (?xbc #\\<^sub>\\<Gamma> ?G) = {?xbc} \\<union> toSet ?G\n  finite (toSet ?\\<Gamma>)\n  \\<lbrakk>finite ?S; finite ?T\\<rbrakk>\n  \\<Longrightarrow> supp (?S \\<union> ?T) = supp ?S \\<union> supp ?T\n  finite ?S \\<Longrightarrow> supp (insert ?x ?S) = supp ?x \\<union> supp ?S\n\ngoal (1 subgoal):\n 1. supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>') =\n    supp (toSet ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>'))", "by fastforce"], ["proof (state)\nthis:\n  supp ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>') =\n  supp (toSet ((x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>'))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supp_of_subset:\n  fixes G::\"('a::fs set)\"\n  assumes \"finite G\" and \"finite G'\" and \"G \\<subseteq> G'\" \n  shows \"supp G \\<subseteq> supp G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp G \\<subseteq> supp G'", "using supp_of_finite_sets assms"], ["proof (prove)\nusing this:\n  finite ?S \\<Longrightarrow> supp ?S = \\<Union> (supp ` ?S)\n  finite G\n  finite G'\n  G \\<subseteq> G'\n\ngoal (1 subgoal):\n 1. supp G \\<subseteq> supp G'", "by (metis subset_Un_eq supp_of_finite_union)"], ["", "lemma supp_weakening:\n  assumes \"toSet G \\<subseteq> toSet G'\"\n  shows \"supp G \\<subseteq> supp G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp G \\<subseteq> supp G'", "using supp_\\<Gamma> finite_\\<Gamma>"], ["proof (prove)\nusing this:\n  supp ?\\<Gamma> = supp (toSet ?\\<Gamma>)\n  finite (toSet ?\\<Gamma>)\n\ngoal (1 subgoal):\n 1. supp G \\<subseteq> supp G'", "by (simp add: supp_of_subset assms)"], ["", "lemma fresh_weakening[ms_fresh]:\n  assumes \"toSet G \\<subseteq> toSet G'\" and \"x \\<sharp> G'\" \n  shows \"x \\<sharp> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> G", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<sharp> G \\<Longrightarrow> False", "assume \"\\<not> x \\<sharp> G\""], ["proof (state)\nthis:\n  \\<not> x \\<sharp> G\n\ngoal (1 subgoal):\n 1. \\<not> x \\<sharp> G \\<Longrightarrow> False", "hence \"x \\<in> supp G\""], ["proof (prove)\nusing this:\n  \\<not> x \\<sharp> G\n\ngoal (1 subgoal):\n 1. x \\<in> supp G", "using fresh_def"], ["proof (prove)\nusing this:\n  \\<not> x \\<sharp> G\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. x \\<in> supp G", "by auto"], ["proof (state)\nthis:\n  x \\<in> supp G\n\ngoal (1 subgoal):\n 1. \\<not> x \\<sharp> G \\<Longrightarrow> False", "hence \"x \\<in> supp G'\""], ["proof (prove)\nusing this:\n  x \\<in> supp G\n\ngoal (1 subgoal):\n 1. x \\<in> supp G'", "using supp_weakening assms"], ["proof (prove)\nusing this:\n  x \\<in> supp G\n  toSet ?G \\<subseteq> toSet ?G' \\<Longrightarrow>\n  supp ?G \\<subseteq> supp ?G'\n  toSet G \\<subseteq> toSet G'\n  x \\<sharp> G'\n\ngoal (1 subgoal):\n 1. x \\<in> supp G'", "by auto"], ["proof (state)\nthis:\n  x \\<in> supp G'\n\ngoal (1 subgoal):\n 1. \\<not> x \\<sharp> G \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  x \\<in> supp G'\n\ngoal (1 subgoal):\n 1. False", "using fresh_def assms"], ["proof (prove)\nusing this:\n  x \\<in> supp G'\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  toSet G \\<subseteq> toSet G'\n  x \\<sharp> G'\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "instance \\<Gamma> :: fs"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<Gamma>, fs_class)", "by (standard, induct_tac x, simp_all add: supp_GNil supp_GCons  finite_supp)"], ["", "lemma fresh_gamma_elem:\n  fixes \\<Gamma>::\\<Gamma>\n  assumes \"a \\<sharp> \\<Gamma>\"\n    and \"e \\<in> toSet \\<Gamma>\"\n  shows \"a \\<sharp> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> e", "using assms"], ["proof (prove)\nusing this:\n  a \\<sharp> \\<Gamma>\n  e \\<in> toSet \\<Gamma>\n\ngoal (1 subgoal):\n 1. a \\<sharp> e", "by(induct \\<Gamma>,auto simp add: fresh_GCons)"], ["", "lemma fresh_gamma_append:\n  fixes xs::\\<Gamma>\n  shows \"a \\<sharp> (xs @ ys) \\<longleftrightarrow> a \\<sharp> xs \\<and> a \\<sharp> ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> xs @ ys = (a \\<sharp> xs \\<and> a \\<sharp> ys)", "by (induct xs, simp_all add: fresh_GNil fresh_GCons)"], ["", "lemma supp_triple[simp]:\n  shows \"supp (x, y, z) = supp x \\<union> supp y \\<union> supp z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (x, y, z) = supp x \\<union> supp y \\<union> supp z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. supp (x, y, z) = supp x \\<union> supp y \\<union> supp z", "have \"supp (x,y,z) = supp (x,(y,z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (x, y, z) = supp (x, y, z)", "by auto"], ["proof (state)\nthis:\n  supp (x, y, z) = supp (x, y, z)\n\ngoal (1 subgoal):\n 1. supp (x, y, z) = supp x \\<union> supp y \\<union> supp z", "hence \"supp (x,y,z) = supp x \\<union> (supp y  \\<union> supp z)\""], ["proof (prove)\nusing this:\n  supp (x, y, z) = supp (x, y, z)\n\ngoal (1 subgoal):\n 1. supp (x, y, z) = supp x \\<union> (supp y \\<union> supp z)", "using supp_Pair"], ["proof (prove)\nusing this:\n  supp (x, y, z) = supp (x, y, z)\n  supp (?x, ?y) = supp ?x \\<union> supp ?y\n\ngoal (1 subgoal):\n 1. supp (x, y, z) = supp x \\<union> (supp y \\<union> supp z)", "by metis"], ["proof (state)\nthis:\n  supp (x, y, z) = supp x \\<union> (supp y \\<union> supp z)\n\ngoal (1 subgoal):\n 1. supp (x, y, z) = supp x \\<union> supp y \\<union> supp z", "thus ?thesis"], ["proof (prove)\nusing this:\n  supp (x, y, z) = supp x \\<union> (supp y \\<union> supp z)\n\ngoal (1 subgoal):\n 1. supp (x, y, z) = supp x \\<union> supp y \\<union> supp z", "by auto"], ["proof (state)\nthis:\n  supp (x, y, z) = supp x \\<union> supp y \\<union> supp z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma supp_append_g:\n  fixes xs::\\<Gamma>\n  shows \"supp (xs @ ys) = supp xs \\<union> supp ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (xs @ ys) = supp xs \\<union> supp ys", "by(induct xs,auto simp add: supp_GNil supp_GCons )"], ["", "lemma fresh_in_g[simp]:\n  fixes \\<Gamma>::\\<Gamma> and x'::x\n  shows \"atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> = (atom x' \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union> supp c0 \\<union> supp \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "have  \"atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> = (atom x' \\<notin> supp (\\<Gamma>' @((x,b0,c0) #\\<^sub>\\<Gamma> \\<Gamma>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp (\\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>))", "using fresh_def"], ["proof (prove)\nusing this:\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp (\\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>))", "by auto"], ["proof (state)\nthis:\n  atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n  (atom x'\n   \\<notin> supp (\\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>))\n\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "also"], ["proof (state)\nthis:\n  atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n  (atom x'\n   \\<notin> supp (\\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>))\n\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "have \"... = (atom x' \\<notin> supp \\<Gamma>' \\<union> supp ((x,b0,c0) #\\<^sub>\\<Gamma> \\<Gamma>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (atom x'\n     \\<notin> supp (\\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>)) =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union>\n              supp ((x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>))", "using supp_append_g"], ["proof (prove)\nusing this:\n  supp (?xs @ ?ys) = supp ?xs \\<union> supp ?ys\n\ngoal (1 subgoal):\n 1. (atom x'\n     \\<notin> supp (\\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>)) =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union>\n              supp ((x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>))", "by fast"], ["proof (state)\nthis:\n  (atom x'\n   \\<notin> supp (\\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>)) =\n  (atom x'\n   \\<notin> supp \\<Gamma>' \\<union>\n            supp ((x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>))\n\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "also"], ["proof (state)\nthis:\n  (atom x'\n   \\<notin> supp (\\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>)) =\n  (atom x'\n   \\<notin> supp \\<Gamma>' \\<union>\n            supp ((x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>))\n\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "have \"... = (atom x' \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union> supp c0 \\<union> supp \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (atom x'\n     \\<notin> supp \\<Gamma>' \\<union>\n              supp ((x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>)) =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "using supp_GCons supp_append_g supp_triple"], ["proof (prove)\nusing this:\n  supp (?x #\\<^sub>\\<Gamma> ?xs) = supp ?x \\<union> supp ?xs\n  supp (?xs @ ?ys) = supp ?xs \\<union> supp ?ys\n  supp (?x, ?y, ?z) = supp ?x \\<union> supp ?y \\<union> supp ?z\n\ngoal (1 subgoal):\n 1. (atom x'\n     \\<notin> supp \\<Gamma>' \\<union>\n              supp ((x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>)) =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "by auto"], ["proof (state)\nthis:\n  (atom x'\n   \\<notin> supp \\<Gamma>' \\<union>\n            supp ((x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma>)) =\n  (atom x'\n   \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n            supp c0 \\<union>\n            supp \\<Gamma>)\n\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "finally"], ["proof (chain)\npicking this:\n  atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n  (atom x'\n   \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n            supp c0 \\<union>\n            supp \\<Gamma>)", "show ?thesis"], ["proof (prove)\nusing this:\n  atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n  (atom x'\n   \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n            supp c0 \\<union>\n            supp \\<Gamma>)\n\ngoal (1 subgoal):\n 1. atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n    (atom x'\n     \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n              supp c0 \\<union>\n              supp \\<Gamma>)", "by fast"], ["proof (state)\nthis:\n  atom x' \\<sharp> \\<Gamma>' @ (x, b0, c0) #\\<^sub>\\<Gamma> \\<Gamma> =\n  (atom x'\n   \\<notin> supp \\<Gamma>' \\<union> supp x \\<union> supp b0 \\<union>\n            supp c0 \\<union>\n            supp \\<Gamma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fresh_suffix[ms_fresh]:\n  fixes \\<Gamma>::\\<Gamma>\n  assumes \"atom x \\<sharp> \\<Gamma>'@\\<Gamma>\"\n  shows \"atom x \\<sharp> \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<Gamma>' @ \\<Gamma>\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<Gamma>", "by(induct  \\<Gamma>' rule: \\<Gamma>_induct, auto simp add: append_g.simps fresh_GCons)"], ["", "lemma not_GCons_self [simp]:\n  fixes xs::\\<Gamma>\n  shows \"xs \\<noteq> x #\\<^sub>\\<Gamma> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<noteq> x #\\<^sub>\\<Gamma> xs", "by (induct xs) auto"], ["", "lemma not_GCons_self2 [simp]: \n  fixes xs::\\<Gamma>\n  shows \"x #\\<^sub>\\<Gamma> xs \\<noteq> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x #\\<^sub>\\<Gamma> xs \\<noteq> xs", "by (rule not_GCons_self [symmetric])"], ["", "lemma fresh_restrict:\n  fixes y::x and \\<Gamma>::\\<Gamma>\n  assumes  \"atom y \\<sharp>  (\\<Gamma>' @ (x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>)\"\n  shows \"atom y \\<sharp> (\\<Gamma>'@\\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom y \\<sharp> \\<Gamma>' @ \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  atom y \\<sharp> \\<Gamma>' @ (x, b, c) #\\<^sub>\\<Gamma> \\<Gamma>\n\ngoal (1 subgoal):\n 1. atom y \\<sharp> \\<Gamma>' @ \\<Gamma>", "by(induct \\<Gamma>' rule: \\<Gamma>_induct, auto simp add:fresh_GCons fresh_GNil  )"], ["", "lemma fresh_dom_free:\n  assumes \"atom x \\<sharp> \\<Gamma>\" \n  shows \"(x,b,c) \\<notin> toSet \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet \\<Gamma>", "proof(induct \\<Gamma> rule: \\<Gamma>_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. atom x \\<sharp> GNil \\<Longrightarrow> (x, b, c) \\<notin> toSet GNil\n 2. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x \\<sharp> (xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "case GNil"], ["proof (state)\nthis:\n  atom x \\<sharp> GNil\n\ngoal (2 subgoals):\n 1. atom x \\<sharp> GNil \\<Longrightarrow> (x, b, c) \\<notin> toSet GNil\n 2. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x \\<sharp> (xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "then"], ["proof (chain)\npicking this:\n  atom x \\<sharp> GNil", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<sharp> GNil\n\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet GNil", "by auto"], ["proof (state)\nthis:\n  (x, b, c) \\<notin> toSet GNil\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x \\<sharp> (xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x \\<sharp> (xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "case (GCons x' b' c' \\<Gamma>')"], ["proof (state)\nthis:\n  atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<sharp> (x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x \\<sharp> (xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "hence \"x\\<noteq>x'\""], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<sharp> (x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>'\n\ngoal (1 subgoal):\n 1. x \\<noteq> x'", "using fresh_def fresh_GCons fresh_Pair supp_at_base"], ["proof (prove)\nusing this:\n  atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<sharp> (x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>'\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  ?a \\<sharp> ?x #\\<^sub>\\<Gamma> ?xs =\n  (?a \\<sharp> ?x \\<and> ?a \\<sharp> ?xs)\n  ?a \\<sharp> (?x, ?y) = (?a \\<sharp> ?x \\<and> ?a \\<sharp> ?y)\n  supp ?a = {atom ?a}\n\ngoal (1 subgoal):\n 1. x \\<noteq> x'", "by blast"], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x \\<sharp> (xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "moreover"], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x \\<sharp> (xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "have \"atom x \\<sharp> \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<Gamma>'", "using fresh_GCons GCons"], ["proof (prove)\nusing this:\n  ?a \\<sharp> ?x #\\<^sub>\\<Gamma> ?xs =\n  (?a \\<sharp> ?x \\<and> ?a \\<sharp> ?xs)\n  atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<sharp> (x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>'\n\ngoal (1 subgoal):\n 1. atom x \\<sharp> \\<Gamma>'", "by auto"], ["proof (state)\nthis:\n  atom x \\<sharp> \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x \\<sharp> (xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>'\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "ultimately"], ["proof (chain)\npicking this:\n  x \\<noteq> x'\n  atom x \\<sharp> \\<Gamma>'", "show ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n  atom x \\<sharp> \\<Gamma>'\n\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')", "using toSet.simps GCons"], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n  atom x \\<sharp> \\<Gamma>'\n  toSet GNil = {}\n  toSet (?xbc #\\<^sub>\\<Gamma> ?G) = {?xbc} \\<union> toSet ?G\n  atom x \\<sharp> \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<sharp> (x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>'\n\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')", "by auto"], ["proof (state)\nthis:\n  (x, b, c) \\<notin> toSet ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<Gamma>_set_intros: \"x \\<in> toSet ( x #\\<^sub>\\<Gamma> xs)\" and \"y \\<in> toSet xs \\<Longrightarrow> y \\<in> toSet (x #\\<^sub>\\<Gamma> xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> toSet (x #\\<^sub>\\<Gamma> xs) &&&\n    (y \\<in> toSet xs \\<Longrightarrow>\n     y \\<in> toSet (x #\\<^sub>\\<Gamma> xs))", "by simp+"], ["", "lemma fresh_dom_free2:\n  assumes \"atom x \\<notin> atom_dom \\<Gamma>\" \n  shows \"(x,b,c) \\<notin> toSet \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet \\<Gamma>", "using assms"], ["proof (prove)\nusing this:\n  atom x \\<notin> atom_dom \\<Gamma>\n\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet \\<Gamma>", "proof(induct \\<Gamma> rule: \\<Gamma>_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. atom x \\<notin> atom_dom GNil \\<Longrightarrow>\n    (x, b, c) \\<notin> toSet GNil\n 2. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x\n        \\<notin> atom_dom ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "case GNil"], ["proof (state)\nthis:\n  atom x \\<notin> atom_dom GNil\n\ngoal (2 subgoals):\n 1. atom x \\<notin> atom_dom GNil \\<Longrightarrow>\n    (x, b, c) \\<notin> toSet GNil\n 2. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x\n        \\<notin> atom_dom ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "then"], ["proof (chain)\npicking this:\n  atom x \\<notin> atom_dom GNil", "show ?case"], ["proof (prove)\nusing this:\n  atom x \\<notin> atom_dom GNil\n\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet GNil", "by auto"], ["proof (state)\nthis:\n  (x, b, c) \\<notin> toSet GNil\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x\n        \\<notin> atom_dom ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x\n        \\<notin> atom_dom ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "case (GCons x' b' c' \\<Gamma>')"], ["proof (state)\nthis:\n  atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<notin> atom_dom ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x\n        \\<notin> atom_dom ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "hence \"x\\<noteq>x'\""], ["proof (prove)\nusing this:\n  atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<notin> atom_dom ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')\n\ngoal (1 subgoal):\n 1. x \\<noteq> x'", "using fresh_def fresh_GCons fresh_Pair supp_at_base"], ["proof (prove)\nusing this:\n  atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<notin> atom_dom ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')\n  ?a \\<sharp> ?x \\<equiv> ?a \\<notin> supp ?x\n  ?a \\<sharp> ?x #\\<^sub>\\<Gamma> ?xs =\n  (?a \\<sharp> ?x \\<and> ?a \\<sharp> ?xs)\n  ?a \\<sharp> (?x, ?y) = (?a \\<sharp> ?x \\<and> ?a \\<sharp> ?y)\n  supp ?a = {atom ?a}\n\ngoal (1 subgoal):\n 1. x \\<noteq> x'", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x\n        \\<notin> atom_dom ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "moreover"], ["proof (state)\nthis:\n  x \\<noteq> x'\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x\n        \\<notin> atom_dom ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "have \"atom x \\<notin> atom_dom \\<Gamma>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom x \\<notin> atom_dom \\<Gamma>'", "using fresh_GCons GCons"], ["proof (prove)\nusing this:\n  ?a \\<sharp> ?x #\\<^sub>\\<Gamma> ?xs =\n  (?a \\<sharp> ?x \\<and> ?a \\<sharp> ?xs)\n  atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<notin> atom_dom ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')\n\ngoal (1 subgoal):\n 1. atom x \\<notin> atom_dom \\<Gamma>'", "by auto"], ["proof (state)\nthis:\n  atom x \\<notin> atom_dom \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<And>xa ba ca \\<Gamma>'.\n       \\<lbrakk>atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n                (x, b, c) \\<notin> toSet \\<Gamma>';\n        atom x\n        \\<notin> atom_dom ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')\\<rbrakk>\n       \\<Longrightarrow> (x, b, c)\n                         \\<notin> toSet\n                                   ((xa, ba, ca) #\\<^sub>\\<Gamma> \\<Gamma>')", "ultimately"], ["proof (chain)\npicking this:\n  x \\<noteq> x'\n  atom x \\<notin> atom_dom \\<Gamma>'", "show ?case"], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n  atom x \\<notin> atom_dom \\<Gamma>'\n\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')", "using toSet.simps GCons"], ["proof (prove)\nusing this:\n  x \\<noteq> x'\n  atom x \\<notin> atom_dom \\<Gamma>'\n  toSet GNil = {}\n  toSet (?xbc #\\<^sub>\\<Gamma> ?G) = {?xbc} \\<union> toSet ?G\n  atom x \\<notin> atom_dom \\<Gamma>' \\<Longrightarrow>\n  (x, b, c) \\<notin> toSet \\<Gamma>'\n  atom x \\<notin> atom_dom ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')\n\ngoal (1 subgoal):\n 1. (x, b, c) \\<notin> toSet ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')", "by auto"], ["proof (state)\nthis:\n  (x, b, c) \\<notin> toSet ((x', b', c') #\\<^sub>\\<Gamma> \\<Gamma>')\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Mutable Variable Context Lemmas\\<close>"], ["", "lemma supp_DNil: \n  shows \"supp DNil = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp []\\<^sub>\\<Delta> = {}", "by (simp add: supp_def)"], ["", "lemma supp_DCons: \n  fixes xs::\\<Delta>\n  shows \"supp (x #\\<^sub>\\<Delta> xs) = supp x \\<union> supp xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (x #\\<^sub>\\<Delta> xs) = supp x \\<union> supp xs", "by (simp add: supp_def Collect_imp_eq Collect_neg_eq)"], ["", "lemma fresh_DNil[ms_fresh]:\n  shows \"a \\<sharp> DNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> []\\<^sub>\\<Delta>", "by (simp add: fresh_def supp_DNil)"], ["", "lemma fresh_DCons[ms_fresh]: \n  fixes xs::\\<Delta>\n  shows \"a \\<sharp> (x #\\<^sub>\\<Delta> xs) \\<longleftrightarrow> a \\<sharp> x \\<and> a \\<sharp> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> x #\\<^sub>\\<Delta> xs = (a \\<sharp> x \\<and> a \\<sharp> xs)", "by (simp add: fresh_def supp_DCons)"], ["", "instance \\<Delta> :: fs"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(\\<Delta>, fs_class)", "by (standard, induct_tac x, simp_all add: supp_DNil supp_DCons  finite_supp)"], ["", "subsection \\<open>Lookup Functions\\<close>"], ["", "nominal_function lookup :: \"\\<Gamma> \\<Rightarrow> x \\<Rightarrow> (b*c) option\" where\n  \"lookup GNil x = None\"\n| \"lookup ((x,b,c)#\\<^sub>\\<Gamma>G) y = (if x=y then Some (b,c) else lookup G y)\""], ["proof (prove)\ngoal (6 subgoals):\n 1. eqvt lookup_graph_aux\n 2. \\<And>x y. lookup_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>xa. x = (GNil, xa) \\<Longrightarrow> P;\n        \\<And>xa b c G y.\n           x = ((xa, b, c) #\\<^sub>\\<Gamma> G, y) \\<Longrightarrow>\n           P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x xa. (GNil, x) = (GNil, xa) \\<Longrightarrow> None = None\n 5. \\<And>x xa b c G y.\n       \\<lbrakk>xa \\<noteq> y \\<Longrightarrow> eqvt_at lookup_sumC (G, y);\n        xa \\<noteq> y \\<Longrightarrow> True;\n        (GNil, x) = ((xa, b, c) #\\<^sub>\\<Gamma> G, y)\\<rbrakk>\n       \\<Longrightarrow> None =\n                         (if xa = y then Some (b, c)\n                          else lookup_sumC (G, y))\n 6. \\<And>x b c G y xa ba ca Ga ya.\n       \\<lbrakk>x \\<noteq> y \\<Longrightarrow> eqvt_at lookup_sumC (G, y);\n        xa \\<noteq> ya \\<Longrightarrow> eqvt_at lookup_sumC (Ga, ya);\n        x \\<noteq> y \\<Longrightarrow> True;\n        xa \\<noteq> ya \\<Longrightarrow> True;\n        ((x, b, c) #\\<^sub>\\<Gamma> G, y) =\n        ((xa, ba, ca) #\\<^sub>\\<Gamma> Ga, ya)\\<rbrakk>\n       \\<Longrightarrow> (if x = y then Some (b, c)\n                          else lookup_sumC (G, y)) =\n                         (if xa = ya then Some (ba, ca)\n                          else lookup_sumC (Ga, ya))", "by (auto,simp add: eqvt_def lookup_graph_aux_def, metis neq_GNil_conv surj_pair)"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All lookup_dom", "by lexicographic_order"], ["", "nominal_function replace_in_g :: \"\\<Gamma> \\<Rightarrow> x \\<Rightarrow> c \\<Rightarrow> \\<Gamma>\"  (\"_[_\\<longmapsto>_]\" [1000,0,0] 200) where\n  \"replace_in_g GNil _ _ = GNil\"\n| \"replace_in_g ((x,b,c)#\\<^sub>\\<Gamma>G) x' c' = (if x=x' then ((x,b,c')#\\<^sub>\\<Gamma>G) else (x,b,c)#\\<^sub>\\<Gamma>(replace_in_g G x' c'))\""], ["proof (prove)\ngoal (6 subgoals):\n 1. eqvt replace_in_g_graph_aux\n 2. \\<And>x y. replace_in_g_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>uu_ uv_. x = (GNil, uu_, uv_) \\<Longrightarrow> P;\n        \\<And>xa b c G x' c'.\n           x = ((xa, b, c) #\\<^sub>\\<Gamma> G, x', c') \\<Longrightarrow>\n           P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>uu_ uv_ uua_ uva_.\n       (GNil, uu_, uv_) = (GNil, uua_, uva_) \\<Longrightarrow> GNil = GNil\n 5. \\<And>uu_ uv_ x b c G x' c'.\n       \\<lbrakk>x \\<noteq> x' \\<Longrightarrow>\n                eqvt_at replace_in_g_sumC (G, x', c');\n        x \\<noteq> x' \\<Longrightarrow> True;\n        (GNil, uu_, uv_) = ((x, b, c) #\\<^sub>\\<Gamma> G, x', c')\\<rbrakk>\n       \\<Longrightarrow> GNil =\n                         (if x = x' then (x, b, c') #\\<^sub>\\<Gamma> G\n                          else (x, b, c) #\\<^sub>\\<Gamma>\n                               replace_in_g_sumC (G, x', c'))\n 6. \\<And>x b c G x' c' xa ba ca Ga x'a c'a.\n       \\<lbrakk>x \\<noteq> x' \\<Longrightarrow>\n                eqvt_at replace_in_g_sumC (G, x', c');\n        xa \\<noteq> x'a \\<Longrightarrow>\n        eqvt_at replace_in_g_sumC (Ga, x'a, c'a);\n        x \\<noteq> x' \\<Longrightarrow> True;\n        xa \\<noteq> x'a \\<Longrightarrow> True;\n        ((x, b, c) #\\<^sub>\\<Gamma> G, x', c') =\n        ((xa, ba, ca) #\\<^sub>\\<Gamma> Ga, x'a, c'a)\\<rbrakk>\n       \\<Longrightarrow> (if x = x' then (x, b, c') #\\<^sub>\\<Gamma> G\n                          else (x, b, c) #\\<^sub>\\<Gamma>\n                               replace_in_g_sumC (G, x', c')) =\n                         (if xa = x'a then (xa, ba, c'a) #\\<^sub>\\<Gamma> Ga\n                          else (xa, ba, ca) #\\<^sub>\\<Gamma>\n                               replace_in_g_sumC (Ga, x'a, c'a))", "apply(auto,simp add: eqvt_def replace_in_g_graph_aux_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a.\n       \\<lbrakk>a = GNil \\<Longrightarrow> P;\n        \\<And>x b c G.\n           a = (x, b, c) #\\<^sub>\\<Gamma> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "using surj_pair \\<Gamma>.exhaust"], ["proof (prove)\nusing this:\n  \\<exists>x y. ?p = (x, y)\n  \\<lbrakk>?y = GNil \\<Longrightarrow> ?P;\n   \\<And>x21 x22.\n      ?y = x21 #\\<^sub>\\<Gamma> x22 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. \\<And>P a.\n       \\<lbrakk>a = GNil \\<Longrightarrow> P;\n        \\<And>x b c G.\n           a = (x, b, c) #\\<^sub>\\<Gamma> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "by metis"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All replace_in_g_dom", "by lexicographic_order"], ["", "text \\<open> Functions for looking up data-constructors in the Pi context \\<close>"], ["", "nominal_function lookup_fun :: \"\\<Phi> \\<Rightarrow> f  \\<Rightarrow> fun_def option\" where\n  \"lookup_fun [] g = None\"\n|  \"lookup_fun ((AF_fundef f ft)#\\<Pi>) g = (if (f=g) then Some (AF_fundef f ft) else lookup_fun \\<Pi> g)\""], ["proof (prove)\ngoal (6 subgoals):\n 1. eqvt lookup_fun_graph_aux\n 2. \\<And>x y. lookup_fun_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>g. x = ([], g) \\<Longrightarrow> P;\n        \\<And>f ft \\<Pi> g.\n           x = (AF_fundef f ft # \\<Pi>, g) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>g ga. ([], g) = ([], ga) \\<Longrightarrow> None = None\n 5. \\<And>g f ft \\<Pi> ga.\n       \\<lbrakk>f \\<noteq> ga \\<Longrightarrow>\n                eqvt_at lookup_fun_sumC (\\<Pi>, ga);\n        f \\<noteq> ga \\<Longrightarrow> True;\n        ([], g) = (AF_fundef f ft # \\<Pi>, ga)\\<rbrakk>\n       \\<Longrightarrow> None =\n                         (if f = ga then Some (AF_fundef f ft)\n                          else lookup_fun_sumC (\\<Pi>, ga))\n 6. \\<And>f ft \\<Pi> g fa fta \\<Pi>' ga.\n       \\<lbrakk>f \\<noteq> g \\<Longrightarrow>\n                eqvt_at lookup_fun_sumC (\\<Pi>, g);\n        fa \\<noteq> ga \\<Longrightarrow>\n        eqvt_at lookup_fun_sumC (\\<Pi>', ga);\n        f \\<noteq> g \\<Longrightarrow> True;\n        fa \\<noteq> ga \\<Longrightarrow> True;\n        (AF_fundef f ft # \\<Pi>, g) =\n        (AF_fundef fa fta # \\<Pi>', ga)\\<rbrakk>\n       \\<Longrightarrow> (if f = g then Some (AF_fundef f ft)\n                          else lookup_fun_sumC (\\<Pi>, g)) =\n                         (if fa = ga then Some (AF_fundef fa fta)\n                          else lookup_fun_sumC (\\<Pi>', ga))", "apply(auto,simp add: eqvt_def lookup_fun_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a.\n       \\<lbrakk>a = [] \\<Longrightarrow> P;\n        \\<And>f ft \\<Pi>.\n           a = AF_fundef f ft # \\<Pi> \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "by (metis fun_def.exhaust neq_Nil_conv)"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All lookup_fun_dom", "by lexicographic_order"], ["", "nominal_function lookup_td :: \"\\<Theta> \\<Rightarrow> string  \\<Rightarrow> type_def option\" where\n  \"lookup_td [] g = None\"\n|  \"lookup_td ((AF_typedef s lst ) # (\\<Theta>::\\<Theta>)) g = (if (s = g) then Some (AF_typedef s lst ) else lookup_td \\<Theta> g)\"\n|  \"lookup_td ((AF_typedef_poly s bv lst ) # (\\<Theta>::\\<Theta>)) g = (if (s = g) then Some (AF_typedef_poly s bv lst ) else lookup_td \\<Theta> g)\""], ["proof (prove)\ngoal (9 subgoals):\n 1. eqvt lookup_td_graph_aux\n 2. \\<And>x y. lookup_td_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>g. x = ([], g) \\<Longrightarrow> P;\n        \\<And>s lst \\<Theta> g.\n           x = (AF_typedef s lst # \\<Theta>, g) \\<Longrightarrow> P;\n        \\<And>s bv lst \\<Theta> g.\n           x = (AF_typedef_poly s bv lst # \\<Theta>, g) \\<Longrightarrow>\n           P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>g ga. ([], g) = ([], ga) \\<Longrightarrow> None = None\n 5. \\<And>g s lst \\<Theta> ga.\n       \\<lbrakk>s \\<noteq> ga \\<Longrightarrow>\n                eqvt_at lookup_td_sumC (\\<Theta>, ga);\n        s \\<noteq> ga \\<Longrightarrow> True;\n        ([], g) = (AF_typedef s lst # \\<Theta>, ga)\\<rbrakk>\n       \\<Longrightarrow> None =\n                         (if s = ga then Some (AF_typedef s lst)\n                          else lookup_td_sumC (\\<Theta>, ga))\n 6. \\<And>g s bv lst \\<Theta> ga.\n       \\<lbrakk>s \\<noteq> ga \\<Longrightarrow>\n                eqvt_at lookup_td_sumC (\\<Theta>, ga);\n        s \\<noteq> ga \\<Longrightarrow> True;\n        ([], g) = (AF_typedef_poly s bv lst # \\<Theta>, ga)\\<rbrakk>\n       \\<Longrightarrow> None =\n                         (if s = ga then Some (AF_typedef_poly s bv lst)\n                          else lookup_td_sumC (\\<Theta>, ga))\n 7. \\<And>s lst \\<Theta> g sa lsta \\<Theta>' ga.\n       \\<lbrakk>s \\<noteq> g \\<Longrightarrow>\n                eqvt_at lookup_td_sumC (\\<Theta>, g);\n        sa \\<noteq> ga \\<Longrightarrow>\n        eqvt_at lookup_td_sumC (\\<Theta>', ga);\n        s \\<noteq> g \\<Longrightarrow> True;\n        sa \\<noteq> ga \\<Longrightarrow> True;\n        (AF_typedef s lst # \\<Theta>, g) =\n        (AF_typedef sa lsta # \\<Theta>', ga)\\<rbrakk>\n       \\<Longrightarrow> (if s = g then Some (AF_typedef s lst)\n                          else lookup_td_sumC (\\<Theta>, g)) =\n                         (if sa = ga then Some (AF_typedef sa lsta)\n                          else lookup_td_sumC (\\<Theta>', ga))\n 8. \\<And>s lst \\<Theta> g sa bv lsta \\<Theta>' ga.\n       \\<lbrakk>s \\<noteq> g \\<Longrightarrow>\n                eqvt_at lookup_td_sumC (\\<Theta>, g);\n        sa \\<noteq> ga \\<Longrightarrow>\n        eqvt_at lookup_td_sumC (\\<Theta>', ga);\n        s \\<noteq> g \\<Longrightarrow> True;\n        sa \\<noteq> ga \\<Longrightarrow> True;\n        (AF_typedef s lst # \\<Theta>, g) =\n        (AF_typedef_poly sa bv lsta # \\<Theta>', ga)\\<rbrakk>\n       \\<Longrightarrow> (if s = g then Some (AF_typedef s lst)\n                          else lookup_td_sumC (\\<Theta>, g)) =\n                         (if sa = ga then Some (AF_typedef_poly sa bv lsta)\n                          else lookup_td_sumC (\\<Theta>', ga))\n 9. \\<And>s bv lst \\<Theta> g sa bva lsta \\<Theta>' ga.\n       \\<lbrakk>s \\<noteq> g \\<Longrightarrow>\n                eqvt_at lookup_td_sumC (\\<Theta>, g);\n        sa \\<noteq> ga \\<Longrightarrow>\n        eqvt_at lookup_td_sumC (\\<Theta>', ga);\n        s \\<noteq> g \\<Longrightarrow> True;\n        sa \\<noteq> ga \\<Longrightarrow> True;\n        (AF_typedef_poly s bv lst # \\<Theta>, g) =\n        (AF_typedef_poly sa bva lsta # \\<Theta>', ga)\\<rbrakk>\n       \\<Longrightarrow> (if s = g then Some (AF_typedef_poly s bv lst)\n                          else lookup_td_sumC (\\<Theta>, g)) =\n                         (if sa = ga then Some (AF_typedef_poly sa bva lsta)\n                          else lookup_td_sumC (\\<Theta>', ga))", "apply(auto,simp add: eqvt_def lookup_td_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P a.\n       \\<lbrakk>a = [] \\<Longrightarrow> P;\n        \\<And>s lst \\<Theta>.\n           a = AF_typedef s lst # \\<Theta> \\<Longrightarrow> P;\n        \\<And>s bv lst \\<Theta>.\n           a = AF_typedef_poly s bv lst # \\<Theta> \\<Longrightarrow>\n           P\\<rbrakk>\n       \\<Longrightarrow> P", "by (metis type_def.exhaust neq_Nil_conv)"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All lookup_td_dom", "by lexicographic_order"], ["", "nominal_function name_of_type  ::\"type_def \\<Rightarrow> f \"  where\n  \"name_of_type (AF_typedef f _ ) = f\"\n| \"name_of_type (AF_typedef_poly f _ _) = f\""], ["proof (prove)\ngoal (6 subgoals):\n 1. eqvt name_of_type_graph_aux\n 2. \\<And>x y. name_of_type_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>f uu_. x = AF_typedef f uu_ \\<Longrightarrow> P;\n        \\<And>f uv_ uw_.\n           x = AF_typedef_poly f uv_ uw_ \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>f uu_ fa uua_.\n       AF_typedef f uu_ = AF_typedef fa uua_ \\<Longrightarrow> f = fa\n 5. \\<And>f uu_ fa uv_ uw_.\n       AF_typedef f uu_ = AF_typedef_poly fa uv_ uw_ \\<Longrightarrow>\n       f = fa\n 6. \\<And>f uv_ uw_ fa uva_ uwa_.\n       AF_typedef_poly f uv_ uw_ =\n       AF_typedef_poly fa uva_ uwa_ \\<Longrightarrow>\n       f = fa", "apply(auto,simp add: eqvt_def name_of_type_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>f uu_. x = AF_typedef f uu_ \\<Longrightarrow> P;\n        \\<And>f uv_ uw_.\n           x = AF_typedef_poly f uv_ uw_ \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "using type_def.exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x11 x12. ?y = AF_typedef x11 x12 \\<Longrightarrow> ?P;\n   \\<And>x21 x22 x23.\n      ?y = AF_typedef_poly x21 x22 x23 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>f uu_. x = AF_typedef f uu_ \\<Longrightarrow> P;\n        \\<And>f uv_ uw_.\n           x = AF_typedef_poly f uv_ uw_ \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "by blast"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All name_of_type_dom", "by lexicographic_order"], ["", "nominal_function name_of_fun  ::\"fun_def \\<Rightarrow> f \"  where\n  \"name_of_fun  (AF_fundef f ft) = f\""], ["proof (prove)\ngoal (4 subgoals):\n 1. eqvt name_of_fun_graph_aux\n 2. \\<And>x y. name_of_fun_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       (\\<And>f ft.\n           x = AF_fundef f ft \\<Longrightarrow> P) \\<Longrightarrow>\n       P\n 4. \\<And>f ft fa fta.\n       AF_fundef f ft = AF_fundef fa fta \\<Longrightarrow> f = fa", "apply(auto,simp add: eqvt_def name_of_fun_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       (\\<And>f ft.\n           x = AF_fundef f ft \\<Longrightarrow> P) \\<Longrightarrow>\n       P", "using fun_def.exhaust"], ["proof (prove)\nusing this:\n  (\\<And>x1 x2. ?y = AF_fundef x1 x2 \\<Longrightarrow> ?P) \\<Longrightarrow>\n  ?P\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       (\\<And>f ft.\n           x = AF_fundef f ft \\<Longrightarrow> P) \\<Longrightarrow>\n       P", "by blast"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All name_of_fun_dom", "by lexicographic_order"], ["", "nominal_function remove2 :: \"'a::pt \\<Rightarrow> 'a list \\<Rightarrow> 'a list\" where\n  \"remove2 x [] = []\" |\n  \"remove2 x (y # xs) = (if x = y then xs else y # remove2 x xs)\""], ["proof (prove)\ngoal (6 subgoals):\n 1. eqvt remove2_graph_aux\n 2. \\<And>x y. remove2_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>xa. x = (xa, []) \\<Longrightarrow> P;\n        \\<And>xa y xs. x = (xa, y # xs) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x xa. (x, []) = (xa, []) \\<Longrightarrow> [] = []\n 5. \\<And>x xa y xs.\n       \\<lbrakk>xa \\<noteq> y \\<Longrightarrow>\n                eqvt_at remove2_sumC (xa, xs);\n        xa \\<noteq> y \\<Longrightarrow> True;\n        (x, []) = (xa, y # xs)\\<rbrakk>\n       \\<Longrightarrow> [] =\n                         (if xa = y then xs else y # remove2_sumC (xa, xs))\n 6. \\<And>x y xs xa ya xsa.\n       \\<lbrakk>x \\<noteq> y \\<Longrightarrow> eqvt_at remove2_sumC (x, xs);\n        xa \\<noteq> ya \\<Longrightarrow> eqvt_at remove2_sumC (xa, xsa);\n        x \\<noteq> y \\<Longrightarrow> True;\n        xa \\<noteq> ya \\<Longrightarrow> True;\n        (x, y # xs) = (xa, ya # xsa)\\<rbrakk>\n       \\<Longrightarrow> (if x = y then xs else y # remove2_sumC (x, xs)) =\n                         (if xa = ya then xsa\n                          else ya # remove2_sumC (xa, xsa))", "by (simp add: eqvt_def remove2_graph_aux_def,auto+,meson list.exhaust)"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All remove2_dom", "by lexicographic_order"], ["", "nominal_function base_for_lit :: \"l \\<Rightarrow> b\" where\n  \"base_for_lit (L_true) = B_bool \"\n| \"base_for_lit (L_false) = B_bool \"\n| \"base_for_lit (L_num n) = B_int \"\n| \"base_for_lit (L_unit) = B_unit \" \n| \"base_for_lit (L_bitvec v) = B_bitvec\""], ["proof (prove)\ngoal (18 subgoals):\n 1. eqvt base_for_lit_graph_aux\n 2. \\<And>x y. base_for_lit_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>x = L_true \\<Longrightarrow> P;\n        x = L_false \\<Longrightarrow> P;\n        \\<And>n. x = L_num n \\<Longrightarrow> P;\n        x = L_unit \\<Longrightarrow> P;\n        \\<And>v. x = L_bitvec v \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. L_true = L_true \\<Longrightarrow> B_bool = B_bool\n 5. L_true = L_false \\<Longrightarrow> B_bool = B_bool\n 6. \\<And>n. L_true = L_num n \\<Longrightarrow> B_bool = B_int\n 7. L_true = L_unit \\<Longrightarrow> B_bool = B_unit\n 8. \\<And>v. L_true = L_bitvec v \\<Longrightarrow> B_bool = B_bitvec\n 9. L_false = L_false \\<Longrightarrow> B_bool = B_bool\n 10. \\<And>n. L_false = L_num n \\<Longrightarrow> B_bool = B_int\nA total of 18 subgoals...", "apply (auto simp: eqvt_def base_for_lit_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>x = L_true \\<Longrightarrow> P;\n        x = L_false \\<Longrightarrow> P;\n        \\<And>n. x = L_num n \\<Longrightarrow> P;\n        x = L_unit \\<Longrightarrow> P;\n        \\<And>v. x = L_bitvec v \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "using l.strong_exhaust"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>x1. ?y = L_num x1 \\<Longrightarrow> ?P;\n   ?y = L_true \\<Longrightarrow> ?P; ?y = L_false \\<Longrightarrow> ?P;\n   ?y = L_unit \\<Longrightarrow> ?P;\n   \\<And>x5. ?y = L_bitvec x5 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>x = L_true \\<Longrightarrow> P;\n        x = L_false \\<Longrightarrow> P;\n        \\<And>n. x = L_num n \\<Longrightarrow> P;\n        x = L_unit \\<Longrightarrow> P;\n        \\<And>v. x = L_bitvec v \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "by blast"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All base_for_lit_dom", "by lexicographic_order"], ["", "lemma neq_DNil_conv: \"(xs \\<noteq> DNil) = (\\<exists>y ys. xs = y #\\<^sub>\\<Delta> ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (xs \\<noteq> []\\<^sub>\\<Delta>) =\n    (\\<exists>y ys. xs = y #\\<^sub>\\<Delta> ys)", "by (induct xs) auto"], ["", "nominal_function setD :: \"\\<Delta> \\<Rightarrow> (u*\\<tau>) set\" where\n  \"setD DNil = {}\"\n| \"setD (DCons xbc G) = {xbc} \\<union> (setD G)\""], ["proof (prove)\ngoal (6 subgoals):\n 1. eqvt setD_graph_aux\n 2. \\<And>x y. setD_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>x = []\\<^sub>\\<Delta> \\<Longrightarrow> P;\n        \\<And>xbc G. x = xbc #\\<^sub>\\<Delta> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. []\\<^sub>\\<Delta> = []\\<^sub>\\<Delta> \\<Longrightarrow> {} = {}\n 5. \\<And>xbc G.\n       \\<lbrakk>eqvt_at setD_sumC G; True;\n        []\\<^sub>\\<Delta> = xbc #\\<^sub>\\<Delta> G\\<rbrakk>\n       \\<Longrightarrow> {} = {xbc} \\<union> setD_sumC G\n 6. \\<And>xbc G xbca Ga.\n       \\<lbrakk>eqvt_at setD_sumC G; eqvt_at setD_sumC Ga; True; True;\n        xbc #\\<^sub>\\<Delta> G = xbca #\\<^sub>\\<Delta> Ga\\<rbrakk>\n       \\<Longrightarrow> {xbc} \\<union> setD_sumC G =\n                         {xbca} \\<union> setD_sumC Ga", "apply (auto,simp add: eqvt_def setD_graph_aux_def )"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>x = []\\<^sub>\\<Delta> \\<Longrightarrow> P;\n        \\<And>a b G.\n           x = (a, b) #\\<^sub>\\<Delta> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "using neq_DNil_conv surj_pair"], ["proof (prove)\nusing this:\n  (?xs \\<noteq> []\\<^sub>\\<Delta>) =\n  (\\<exists>y ys. ?xs = y #\\<^sub>\\<Delta> ys)\n  \\<exists>x y. ?p = (x, y)\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<lbrakk>x = []\\<^sub>\\<Delta> \\<Longrightarrow> P;\n        \\<And>a b G.\n           x = (a, b) #\\<^sub>\\<Delta> G \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "by metis"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All setD_dom", "by lexicographic_order"], ["", "lemma eqvt_triple:\n  fixes y::\"'a::at\" and ya::\"'a::at\" and xa::\"'c::at\" and va::\"'d::fs\" and s::s and sa::s and f::\"s*'c*'d \\<Rightarrow> s\"\n  assumes \"atom y \\<sharp> (xa, va)\" and \"atom ya \\<sharp> (xa, va)\" and \n    \"\\<forall>c. atom c \\<sharp> (s, sa) \\<longrightarrow> atom c \\<sharp> (y, ya, s, sa) \\<longrightarrow> (y \\<leftrightarrow> c) \\<bullet> s = (ya \\<leftrightarrow> c) \\<bullet> sa\"\n    and \"eqvt_at f (s,xa,va)\" and \"eqvt_at f (sa,xa,va)\" and\n    \"atom c \\<sharp> (s, va, xa, sa)\" and \"atom c \\<sharp> (y, ya, f (s, xa, va), f (sa, xa, va))\"\n  shows \"(y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =  (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "have \" (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) = f ( (y \\<leftrightarrow> c) \\<bullet> (s,xa,va))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    f ((y \\<leftrightarrow> c) \\<bullet> (s, xa, va))", "using assms eqvt_at_def"], ["proof (prove)\nusing this:\n  atom y \\<sharp> (xa, va)\n  atom ya \\<sharp> (xa, va)\n  \\<forall>c.\n     atom c \\<sharp> (s, sa) \\<longrightarrow>\n     atom c \\<sharp> (y, ya, s, sa) \\<longrightarrow>\n     (y \\<leftrightarrow> c) \\<bullet> s =\n     (ya \\<leftrightarrow> c) \\<bullet> sa\n  eqvt_at f (s, xa, va)\n  eqvt_at f (sa, xa, va)\n  atom c \\<sharp> (s, va, xa, sa)\n  atom c \\<sharp> (y, ya, f (s, xa, va), f (sa, xa, va))\n  eqvt_at ?f ?x \\<equiv> \\<forall>p. p \\<bullet> ?f ?x = ?f (p \\<bullet> ?x)\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    f ((y \\<leftrightarrow> c) \\<bullet> (s, xa, va))", "by metis"], ["proof (state)\nthis:\n  (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n  f ((y \\<leftrightarrow> c) \\<bullet> (s, xa, va))\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "also"], ["proof (state)\nthis:\n  (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n  f ((y \\<leftrightarrow> c) \\<bullet> (s, xa, va))\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "have \"... = f ( (y \\<leftrightarrow> c) \\<bullet> s, (y \\<leftrightarrow> c) \\<bullet> xa ,(y \\<leftrightarrow> c) \\<bullet> va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ((y \\<leftrightarrow> c) \\<bullet> (s, xa, va)) =\n    f ((y \\<leftrightarrow> c) \\<bullet> s,\n       (y \\<leftrightarrow> c) \\<bullet> xa,\n       (y \\<leftrightarrow> c) \\<bullet> va)", "by auto"], ["proof (state)\nthis:\n  f ((y \\<leftrightarrow> c) \\<bullet> (s, xa, va)) =\n  f ((y \\<leftrightarrow> c) \\<bullet> s,\n     (y \\<leftrightarrow> c) \\<bullet> xa,\n     (y \\<leftrightarrow> c) \\<bullet> va)\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "also"], ["proof (state)\nthis:\n  f ((y \\<leftrightarrow> c) \\<bullet> (s, xa, va)) =\n  f ((y \\<leftrightarrow> c) \\<bullet> s,\n     (y \\<leftrightarrow> c) \\<bullet> xa,\n     (y \\<leftrightarrow> c) \\<bullet> va)\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "have \"... = f ( (ya \\<leftrightarrow> c) \\<bullet> sa, (ya \\<leftrightarrow> c) \\<bullet> xa ,(ya \\<leftrightarrow> c) \\<bullet> va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ((y \\<leftrightarrow> c) \\<bullet> s,\n       (y \\<leftrightarrow> c) \\<bullet> xa,\n       (y \\<leftrightarrow> c) \\<bullet> va) =\n    f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n       (ya \\<leftrightarrow> c) \\<bullet> xa,\n       (ya \\<leftrightarrow> c) \\<bullet> va)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f ((y \\<leftrightarrow> c) \\<bullet> s,\n       (y \\<leftrightarrow> c) \\<bullet> xa,\n       (y \\<leftrightarrow> c) \\<bullet> va) =\n    f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n       (ya \\<leftrightarrow> c) \\<bullet> xa,\n       (ya \\<leftrightarrow> c) \\<bullet> va)", "have \" (y \\<leftrightarrow> c) \\<bullet> s = (ya \\<leftrightarrow> c) \\<bullet> sa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> s =\n    (ya \\<leftrightarrow> c) \\<bullet> sa", "using assms Abs1_eq_iff_all"], ["proof (prove)\nusing this:\n  atom y \\<sharp> (xa, va)\n  atom ya \\<sharp> (xa, va)\n  \\<forall>c.\n     atom c \\<sharp> (s, sa) \\<longrightarrow>\n     atom c \\<sharp> (y, ya, s, sa) \\<longrightarrow>\n     (y \\<leftrightarrow> c) \\<bullet> s =\n     (ya \\<leftrightarrow> c) \\<bullet> sa\n  eqvt_at f (s, xa, va)\n  eqvt_at f (sa, xa, va)\n  atom c \\<sharp> (s, va, xa, sa)\n  atom c \\<sharp> (y, ya, f (s, xa, va), f (sa, xa, va))\n  ([{atom ?a}]set. ?x = [{atom ?b}]set. ?y) =\n  (\\<forall>c.\n      atom c \\<sharp> ?z \\<longrightarrow>\n      atom c \\<sharp> (?a, ?b, ?x, ?y) \\<longrightarrow>\n      (?a \\<leftrightarrow> c) \\<bullet> ?x =\n      (?b \\<leftrightarrow> c) \\<bullet> ?y)\n  ([{atom ?a}]res. ?x = [{atom ?b}]res. ?y) =\n  (\\<forall>c.\n      atom c \\<sharp> ?z \\<longrightarrow>\n      atom c \\<sharp> (?a, ?b, ?x, ?y) \\<longrightarrow>\n      (?a \\<leftrightarrow> c) \\<bullet> ?x =\n      (?b \\<leftrightarrow> c) \\<bullet> ?y)\n  ([[atom ?a]]lst. ?x = [[atom ?b]]lst. ?y) =\n  (\\<forall>c.\n      atom c \\<sharp> ?z \\<longrightarrow>\n      atom c \\<sharp> (?a, ?b, ?x, ?y) \\<longrightarrow>\n      (?a \\<leftrightarrow> c) \\<bullet> ?x =\n      (?b \\<leftrightarrow> c) \\<bullet> ?y)\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> s =\n    (ya \\<leftrightarrow> c) \\<bullet> sa", "by auto"], ["proof (state)\nthis:\n  (y \\<leftrightarrow> c) \\<bullet> s =\n  (ya \\<leftrightarrow> c) \\<bullet> sa\n\ngoal (1 subgoal):\n 1. f ((y \\<leftrightarrow> c) \\<bullet> s,\n       (y \\<leftrightarrow> c) \\<bullet> xa,\n       (y \\<leftrightarrow> c) \\<bullet> va) =\n    f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n       (ya \\<leftrightarrow> c) \\<bullet> xa,\n       (ya \\<leftrightarrow> c) \\<bullet> va)", "moreover"], ["proof (state)\nthis:\n  (y \\<leftrightarrow> c) \\<bullet> s =\n  (ya \\<leftrightarrow> c) \\<bullet> sa\n\ngoal (1 subgoal):\n 1. f ((y \\<leftrightarrow> c) \\<bullet> s,\n       (y \\<leftrightarrow> c) \\<bullet> xa,\n       (y \\<leftrightarrow> c) \\<bullet> va) =\n    f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n       (ya \\<leftrightarrow> c) \\<bullet> xa,\n       (ya \\<leftrightarrow> c) \\<bullet> va)", "have  \"((y \\<leftrightarrow> c) \\<bullet> xa) =  ((ya \\<leftrightarrow> c) \\<bullet> xa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> xa =\n    (ya \\<leftrightarrow> c) \\<bullet> xa", "using assms flip_fresh_fresh fresh_prodN"], ["proof (prove)\nusing this:\n  atom y \\<sharp> (xa, va)\n  atom ya \\<sharp> (xa, va)\n  \\<forall>c.\n     atom c \\<sharp> (s, sa) \\<longrightarrow>\n     atom c \\<sharp> (y, ya, s, sa) \\<longrightarrow>\n     (y \\<leftrightarrow> c) \\<bullet> s =\n     (ya \\<leftrightarrow> c) \\<bullet> sa\n  eqvt_at f (s, xa, va)\n  eqvt_at f (sa, xa, va)\n  atom c \\<sharp> (s, va, xa, sa)\n  atom c \\<sharp> (y, ya, f (s, xa, va), f (sa, xa, va))\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  ?a \\<sharp> (?x, ?y) = (?a \\<sharp> ?x \\<and> ?a \\<sharp> ?y)\n  ?x \\<sharp> (?a, ?b, ?c) =\n  (?x \\<sharp> ?a \\<and> ?x \\<sharp> ?b \\<and> ?x \\<sharp> ?c)\n  ?x \\<sharp> (?a, ?b, ?c, ?d) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and> ?x \\<sharp> ?c \\<and> ?x \\<sharp> ?d)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and> ?x \\<sharp> ?d \\<and> ?x \\<sharp> ?e)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and> ?x \\<sharp> ?e \\<and> ?x \\<sharp> ?f)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and> ?x \\<sharp> ?f \\<and> ?x \\<sharp> ?g)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and>\n   ?x \\<sharp> ?f \\<and> ?x \\<sharp> ?g \\<and> ?x \\<sharp> ?h)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and>\n   ?x \\<sharp> ?f \\<and>\n   ?x \\<sharp> ?g \\<and> ?x \\<sharp> ?h \\<and> ?x \\<sharp> ?i)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and>\n   ?x \\<sharp> ?f \\<and>\n   ?x \\<sharp> ?g \\<and>\n   ?x \\<sharp> ?h \\<and> ?x \\<sharp> ?i \\<and> ?x \\<sharp> ?j)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and>\n   ?x \\<sharp> ?f \\<and>\n   ?x \\<sharp> ?g \\<and>\n   ?x \\<sharp> ?h \\<and>\n   ?x \\<sharp> ?i \\<and>\n   ?x \\<sharp> ?j \\<and> ?x \\<sharp> ?k \\<and> ?x \\<sharp> ?l)\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> xa =\n    (ya \\<leftrightarrow> c) \\<bullet> xa", "by metis"], ["proof (state)\nthis:\n  (y \\<leftrightarrow> c) \\<bullet> xa =\n  (ya \\<leftrightarrow> c) \\<bullet> xa\n\ngoal (1 subgoal):\n 1. f ((y \\<leftrightarrow> c) \\<bullet> s,\n       (y \\<leftrightarrow> c) \\<bullet> xa,\n       (y \\<leftrightarrow> c) \\<bullet> va) =\n    f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n       (ya \\<leftrightarrow> c) \\<bullet> xa,\n       (ya \\<leftrightarrow> c) \\<bullet> va)", "moreover"], ["proof (state)\nthis:\n  (y \\<leftrightarrow> c) \\<bullet> xa =\n  (ya \\<leftrightarrow> c) \\<bullet> xa\n\ngoal (1 subgoal):\n 1. f ((y \\<leftrightarrow> c) \\<bullet> s,\n       (y \\<leftrightarrow> c) \\<bullet> xa,\n       (y \\<leftrightarrow> c) \\<bullet> va) =\n    f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n       (ya \\<leftrightarrow> c) \\<bullet> xa,\n       (ya \\<leftrightarrow> c) \\<bullet> va)", "have  \"((y \\<leftrightarrow> c) \\<bullet> va) =  ((ya \\<leftrightarrow> c) \\<bullet> va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> va =\n    (ya \\<leftrightarrow> c) \\<bullet> va", "using assms flip_fresh_fresh fresh_prodN"], ["proof (prove)\nusing this:\n  atom y \\<sharp> (xa, va)\n  atom ya \\<sharp> (xa, va)\n  \\<forall>c.\n     atom c \\<sharp> (s, sa) \\<longrightarrow>\n     atom c \\<sharp> (y, ya, s, sa) \\<longrightarrow>\n     (y \\<leftrightarrow> c) \\<bullet> s =\n     (ya \\<leftrightarrow> c) \\<bullet> sa\n  eqvt_at f (s, xa, va)\n  eqvt_at f (sa, xa, va)\n  atom c \\<sharp> (s, va, xa, sa)\n  atom c \\<sharp> (y, ya, f (s, xa, va), f (sa, xa, va))\n  \\<lbrakk>atom ?a \\<sharp> ?x; atom ?b \\<sharp> ?x\\<rbrakk>\n  \\<Longrightarrow> (?a \\<leftrightarrow> ?b) \\<bullet> ?x = ?x\n  ?a \\<sharp> (?x, ?y) = (?a \\<sharp> ?x \\<and> ?a \\<sharp> ?y)\n  ?x \\<sharp> (?a, ?b, ?c) =\n  (?x \\<sharp> ?a \\<and> ?x \\<sharp> ?b \\<and> ?x \\<sharp> ?c)\n  ?x \\<sharp> (?a, ?b, ?c, ?d) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and> ?x \\<sharp> ?c \\<and> ?x \\<sharp> ?d)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and> ?x \\<sharp> ?d \\<and> ?x \\<sharp> ?e)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and> ?x \\<sharp> ?e \\<and> ?x \\<sharp> ?f)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and> ?x \\<sharp> ?f \\<and> ?x \\<sharp> ?g)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and>\n   ?x \\<sharp> ?f \\<and> ?x \\<sharp> ?g \\<and> ?x \\<sharp> ?h)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and>\n   ?x \\<sharp> ?f \\<and>\n   ?x \\<sharp> ?g \\<and> ?x \\<sharp> ?h \\<and> ?x \\<sharp> ?i)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and>\n   ?x \\<sharp> ?f \\<and>\n   ?x \\<sharp> ?g \\<and>\n   ?x \\<sharp> ?h \\<and> ?x \\<sharp> ?i \\<and> ?x \\<sharp> ?j)\n  ?x \\<sharp> (?a, ?b, ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l) =\n  (?x \\<sharp> ?a \\<and>\n   ?x \\<sharp> ?b \\<and>\n   ?x \\<sharp> ?c \\<and>\n   ?x \\<sharp> ?d \\<and>\n   ?x \\<sharp> ?e \\<and>\n   ?x \\<sharp> ?f \\<and>\n   ?x \\<sharp> ?g \\<and>\n   ?x \\<sharp> ?h \\<and>\n   ?x \\<sharp> ?i \\<and>\n   ?x \\<sharp> ?j \\<and> ?x \\<sharp> ?k \\<and> ?x \\<sharp> ?l)\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> va =\n    (ya \\<leftrightarrow> c) \\<bullet> va", "by metis"], ["proof (state)\nthis:\n  (y \\<leftrightarrow> c) \\<bullet> va =\n  (ya \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. f ((y \\<leftrightarrow> c) \\<bullet> s,\n       (y \\<leftrightarrow> c) \\<bullet> xa,\n       (y \\<leftrightarrow> c) \\<bullet> va) =\n    f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n       (ya \\<leftrightarrow> c) \\<bullet> xa,\n       (ya \\<leftrightarrow> c) \\<bullet> va)", "ultimately"], ["proof (chain)\npicking this:\n  (y \\<leftrightarrow> c) \\<bullet> s =\n  (ya \\<leftrightarrow> c) \\<bullet> sa\n  (y \\<leftrightarrow> c) \\<bullet> xa =\n  (ya \\<leftrightarrow> c) \\<bullet> xa\n  (y \\<leftrightarrow> c) \\<bullet> va =\n  (ya \\<leftrightarrow> c) \\<bullet> va", "show ?thesis"], ["proof (prove)\nusing this:\n  (y \\<leftrightarrow> c) \\<bullet> s =\n  (ya \\<leftrightarrow> c) \\<bullet> sa\n  (y \\<leftrightarrow> c) \\<bullet> xa =\n  (ya \\<leftrightarrow> c) \\<bullet> xa\n  (y \\<leftrightarrow> c) \\<bullet> va =\n  (ya \\<leftrightarrow> c) \\<bullet> va\n\ngoal (1 subgoal):\n 1. f ((y \\<leftrightarrow> c) \\<bullet> s,\n       (y \\<leftrightarrow> c) \\<bullet> xa,\n       (y \\<leftrightarrow> c) \\<bullet> va) =\n    f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n       (ya \\<leftrightarrow> c) \\<bullet> xa,\n       (ya \\<leftrightarrow> c) \\<bullet> va)", "by auto"], ["proof (state)\nthis:\n  f ((y \\<leftrightarrow> c) \\<bullet> s,\n     (y \\<leftrightarrow> c) \\<bullet> xa,\n     (y \\<leftrightarrow> c) \\<bullet> va) =\n  f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n     (ya \\<leftrightarrow> c) \\<bullet> xa,\n     (ya \\<leftrightarrow> c) \\<bullet> va)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ((y \\<leftrightarrow> c) \\<bullet> s,\n     (y \\<leftrightarrow> c) \\<bullet> xa,\n     (y \\<leftrightarrow> c) \\<bullet> va) =\n  f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n     (ya \\<leftrightarrow> c) \\<bullet> xa,\n     (ya \\<leftrightarrow> c) \\<bullet> va)\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "also"], ["proof (state)\nthis:\n  f ((y \\<leftrightarrow> c) \\<bullet> s,\n     (y \\<leftrightarrow> c) \\<bullet> xa,\n     (y \\<leftrightarrow> c) \\<bullet> va) =\n  f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n     (ya \\<leftrightarrow> c) \\<bullet> xa,\n     (ya \\<leftrightarrow> c) \\<bullet> va)\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "have \"... =  f ( (ya \\<leftrightarrow> c) \\<bullet> (sa,xa,va))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n       (ya \\<leftrightarrow> c) \\<bullet> xa,\n       (ya \\<leftrightarrow> c) \\<bullet> va) =\n    f ((ya \\<leftrightarrow> c) \\<bullet> (sa, xa, va))", "by auto"], ["proof (state)\nthis:\n  f ((ya \\<leftrightarrow> c) \\<bullet> sa,\n     (ya \\<leftrightarrow> c) \\<bullet> xa,\n     (ya \\<leftrightarrow> c) \\<bullet> va) =\n  f ((ya \\<leftrightarrow> c) \\<bullet> (sa, xa, va))\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "finally"], ["proof (chain)\npicking this:\n  (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n  f ((ya \\<leftrightarrow> c) \\<bullet> (sa, xa, va))", "show ?thesis"], ["proof (prove)\nusing this:\n  (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n  f ((ya \\<leftrightarrow> c) \\<bullet> (sa, xa, va))\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "using assms eqvt_at_def"], ["proof (prove)\nusing this:\n  (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n  f ((ya \\<leftrightarrow> c) \\<bullet> (sa, xa, va))\n  atom y \\<sharp> (xa, va)\n  atom ya \\<sharp> (xa, va)\n  \\<forall>c.\n     atom c \\<sharp> (s, sa) \\<longrightarrow>\n     atom c \\<sharp> (y, ya, s, sa) \\<longrightarrow>\n     (y \\<leftrightarrow> c) \\<bullet> s =\n     (ya \\<leftrightarrow> c) \\<bullet> sa\n  eqvt_at f (s, xa, va)\n  eqvt_at f (sa, xa, va)\n  atom c \\<sharp> (s, va, xa, sa)\n  atom c \\<sharp> (y, ya, f (s, xa, va), f (sa, xa, va))\n  eqvt_at ?f ?x \\<equiv> \\<forall>p. p \\<bullet> ?f ?x = ?f (p \\<bullet> ?x)\n\ngoal (1 subgoal):\n 1. (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n    (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)", "by metis"], ["proof (state)\nthis:\n  (y \\<leftrightarrow> c) \\<bullet> f (s, xa, va) =\n  (ya \\<leftrightarrow> c) \\<bullet> f (sa, xa, va)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Functions for bit list/vectors\\<close>"], ["", "inductive split :: \"int \\<Rightarrow> bit list \\<Rightarrow> bit list * bit list \\<Rightarrow> bool\" where\n  \"split 0 xs ([], xs)\"\n| \"split m xs (ys,zs) \\<Longrightarrow> split (m+1) (x#xs) ((x # ys), zs)\""], ["", "equivariance split"], ["", "nominal_inductive split"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma split_concat:\n  assumes \"split n v (v1,v2)\"\n  shows \"v = append v1 v2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = v1 @ v2", "using assms"], ["proof (prove)\nusing this:\n  split n v (v1, v2)\n\ngoal (1 subgoal):\n 1. v = v1 @ v2", "proof(induct \"(v1,v2)\" arbitrary: v1 v2 rule: split.inducts)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs. xs = [] @ xs\n 2. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); xs = ys @ zs\\<rbrakk>\n       \\<Longrightarrow> x # xs = (x # ys) @ zs", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>xs. xs = [] @ xs\n 2. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); xs = ys @ zs\\<rbrakk>\n       \\<Longrightarrow> x # xs = (x # ys) @ zs", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs_ = [] @ xs_", "by auto"], ["proof (state)\nthis:\n  xs_ = [] @ xs_\n\ngoal (1 subgoal):\n 1. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); xs = ys @ zs\\<rbrakk>\n       \\<Longrightarrow> x # xs = (x # ys) @ zs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); xs = ys @ zs\\<rbrakk>\n       \\<Longrightarrow> x # xs = (x # ys) @ zs", "case (2 m xs ys zs x)"], ["proof (state)\nthis:\n  split m xs (ys, zs)\n  xs = ys @ zs\n\ngoal (1 subgoal):\n 1. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); xs = ys @ zs\\<rbrakk>\n       \\<Longrightarrow> x # xs = (x # ys) @ zs", "then"], ["proof (chain)\npicking this:\n  split m xs (ys, zs)\n  xs = ys @ zs", "show ?case"], ["proof (prove)\nusing this:\n  split m xs (ys, zs)\n  xs = ys @ zs\n\ngoal (1 subgoal):\n 1. x # xs = (x # ys) @ zs", "by auto"], ["proof (state)\nthis:\n  x # xs = (x # ys) @ zs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma split_n:\n  assumes \"split n v (v1,v2)\"\n  shows \"0 \\<le> n \\<and> n \\<le> int (length v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> n \\<and> n \\<le> int (length v)", "using assms"], ["proof (prove)\nusing this:\n  split n v (v1, v2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> n \\<and> n \\<le> int (length v)", "proof(induct rule: split.inducts)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs. 0 \\<le> 0 \\<and> 0 \\<le> int (length xs)\n 2. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs);\n        0 \\<le> m \\<and> m \\<le> int (length xs)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> m + 1 \\<and>\n                         m + 1 \\<le> int (length (x # xs))", "case (1 xs)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>xs. 0 \\<le> 0 \\<and> 0 \\<le> int (length xs)\n 2. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs);\n        0 \\<le> m \\<and> m \\<le> int (length xs)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> m + 1 \\<and>\n                         m + 1 \\<le> int (length (x # xs))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 0 \\<and> 0 \\<le> int (length xs)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> 0 \\<and> 0 \\<le> int (length xs)\n\ngoal (1 subgoal):\n 1. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs);\n        0 \\<le> m \\<and> m \\<le> int (length xs)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> m + 1 \\<and>\n                         m + 1 \\<le> int (length (x # xs))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs);\n        0 \\<le> m \\<and> m \\<le> int (length xs)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> m + 1 \\<and>\n                         m + 1 \\<le> int (length (x # xs))", "case (2 m xs ys zs x)"], ["proof (state)\nthis:\n  split m xs (ys, zs)\n  0 \\<le> m \\<and> m \\<le> int (length xs)\n\ngoal (1 subgoal):\n 1. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs);\n        0 \\<le> m \\<and> m \\<le> int (length xs)\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> m + 1 \\<and>\n                         m + 1 \\<le> int (length (x # xs))", "then"], ["proof (chain)\npicking this:\n  split m xs (ys, zs)\n  0 \\<le> m \\<and> m \\<le> int (length xs)", "show ?case"], ["proof (prove)\nusing this:\n  split m xs (ys, zs)\n  0 \\<le> m \\<and> m \\<le> int (length xs)\n\ngoal (1 subgoal):\n 1. 0 \\<le> m + 1 \\<and> m + 1 \\<le> int (length (x # xs))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> m + 1 \\<and> m + 1 \\<le> int (length (x # xs))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma split_length:\n  assumes \"split n v (v1,v2)\"\n  shows \"n = int (length v1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = int (length v1)", "using assms"], ["proof (prove)\nusing this:\n  split n v (v1, v2)\n\ngoal (1 subgoal):\n 1. n = int (length v1)", "proof(induct  \"(v1,v2)\" arbitrary: v1 v2 rule: split.inducts)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs. 0 = int (length [])\n 2. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); m = int (length ys)\\<rbrakk>\n       \\<Longrightarrow> m + 1 = int (length (x # ys))", "case (1 xs)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>xs. 0 = int (length [])\n 2. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); m = int (length ys)\\<rbrakk>\n       \\<Longrightarrow> m + 1 = int (length (x # ys))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = int (length [])", "by auto"], ["proof (state)\nthis:\n  0 = int (length [])\n\ngoal (1 subgoal):\n 1. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); m = int (length ys)\\<rbrakk>\n       \\<Longrightarrow> m + 1 = int (length (x # ys))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); m = int (length ys)\\<rbrakk>\n       \\<Longrightarrow> m + 1 = int (length (x # ys))", "case (2 m xs ys zs x)"], ["proof (state)\nthis:\n  split m xs (ys, zs)\n  m = int (length ys)\n\ngoal (1 subgoal):\n 1. \\<And>m xs ys zs x.\n       \\<lbrakk>split m xs (ys, zs); m = int (length ys)\\<rbrakk>\n       \\<Longrightarrow> m + 1 = int (length (x # ys))", "then"], ["proof (chain)\npicking this:\n  split m xs (ys, zs)\n  m = int (length ys)", "show ?case"], ["proof (prove)\nusing this:\n  split m xs (ys, zs)\n  m = int (length ys)\n\ngoal (1 subgoal):\n 1. m + 1 = int (length (x # ys))", "by auto"], ["proof (state)\nthis:\n  m + 1 = int (length (x # ys))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma obtain_split:\n  assumes \"0 \\<le> n\" and \"n \\<le> int (length bv)\" \n  shows \"\\<exists> bv1 bv2. split n bv (bv1 , bv2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>bv1 bv2. split n bv (bv1, bv2)", "using assms"], ["proof (prove)\nusing this:\n  0 \\<le> n\n  n \\<le> int (length bv)\n\ngoal (1 subgoal):\n 1. \\<exists>bv1 bv2. split n bv (bv1, bv2)", "proof(induct bv arbitrary: n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>0 \\<le> n; n \\<le> int (length [])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bv1 bv2. split n [] (bv1, bv2)\n 2. \\<And>a bv n.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>0 \\<le> n; n \\<le> int (length bv)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bv1 bv2.\n  split n bv (bv1, bv2);\n        0 \\<le> n; n \\<le> int (length (a # bv))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bv1 bv2. split n (a # bv) (bv1, bv2)", "case Nil"], ["proof (state)\nthis:\n  0 \\<le> n\n  n \\<le> int (length [])\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>0 \\<le> n; n \\<le> int (length [])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bv1 bv2. split n [] (bv1, bv2)\n 2. \\<And>a bv n.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>0 \\<le> n; n \\<le> int (length bv)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bv1 bv2.\n  split n bv (bv1, bv2);\n        0 \\<le> n; n \\<le> int (length (a # bv))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bv1 bv2. split n (a # bv) (bv1, bv2)", "then"], ["proof (chain)\npicking this:\n  0 \\<le> n\n  n \\<le> int (length [])", "show ?case"], ["proof (prove)\nusing this:\n  0 \\<le> n\n  n \\<le> int (length [])\n\ngoal (1 subgoal):\n 1. \\<exists>bv1 bv2. split n [] (bv1, bv2)", "using split.intros"], ["proof (prove)\nusing this:\n  0 \\<le> n\n  n \\<le> int (length [])\n  split 0 ?xs ([], ?xs)\n  split ?m ?xs (?ys, ?zs) \\<Longrightarrow>\n  split (?m + 1) (?x # ?xs) (?x # ?ys, ?zs)\n\ngoal (1 subgoal):\n 1. \\<exists>bv1 bv2. split n [] (bv1, bv2)", "by auto"], ["proof (state)\nthis:\n  \\<exists>bv1 bv2. split n [] (bv1, bv2)\n\ngoal (1 subgoal):\n 1. \\<And>a bv n.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>0 \\<le> n; n \\<le> int (length bv)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bv1 bv2.\n  split n bv (bv1, bv2);\n        0 \\<le> n; n \\<le> int (length (a # bv))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bv1 bv2. split n (a # bv) (bv1, bv2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a bv n.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>0 \\<le> n; n \\<le> int (length bv)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bv1 bv2.\n  split n bv (bv1, bv2);\n        0 \\<le> n; n \\<le> int (length (a # bv))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bv1 bv2. split n (a # bv) (bv1, bv2)", "case (Cons b bv)"], ["proof (state)\nthis:\n  \\<lbrakk>0 \\<le> ?n; ?n \\<le> int (length bv)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bv1 bv2. split ?n bv (bv1, bv2)\n  0 \\<le> n\n  n \\<le> int (length (b # bv))\n\ngoal (1 subgoal):\n 1. \\<And>a bv n.\n       \\<lbrakk>\\<And>n.\n                   \\<lbrakk>0 \\<le> n; n \\<le> int (length bv)\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>bv1 bv2.\n  split n bv (bv1, bv2);\n        0 \\<le> n; n \\<le> int (length (a # bv))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>bv1 bv2. split n (a # bv) (bv1, bv2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "proof(cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "using split.intros"], ["proof (prove)\nusing this:\n  n = 0\n  split 0 ?xs ([], ?xs)\n  split ?m ?xs (?ys, ?zs) \\<Longrightarrow>\n  split (?m + 1) (?x # ?xs) (?x # ?ys, ?zs)\n\ngoal (1 subgoal):\n 1. \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "by auto"], ["proof (state)\nthis:\n  \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "obtain m where m:\"n=m+1\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>m. n = m + 1 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using Cons"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  \\<lbrakk>0 \\<le> ?n; ?n \\<le> int (length bv)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bv1 bv2. split ?n bv (bv1, bv2)\n  0 \\<le> n\n  n \\<le> int (length (b # bv))\n\ngoal (1 subgoal):\n 1. (\\<And>m. n = m + 1 \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis add.commute add_minus_cancel)"], ["proof (state)\nthis:\n  n = m + 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "moreover"], ["proof (state)\nthis:\n  n = m + 1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "have \"0 \\<le> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> m", "using False m Cons"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  n = m + 1\n  \\<lbrakk>0 \\<le> ?n; ?n \\<le> int (length bv)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bv1 bv2. split ?n bv (bv1, bv2)\n  0 \\<le> n\n  n \\<le> int (length (b # bv))\n\ngoal (1 subgoal):\n 1. 0 \\<le> m", "by linarith"], ["proof (state)\nthis:\n  0 \\<le> m\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "then"], ["proof (chain)\npicking this:\n  0 \\<le> m", "obtain bv1 and bv2 where \"split m bv (bv1 , bv2)\""], ["proof (prove)\nusing this:\n  0 \\<le> m\n\ngoal (1 subgoal):\n 1. (\\<And>bv1 bv2.\n        split m bv (bv1, bv2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Cons m"], ["proof (prove)\nusing this:\n  0 \\<le> m\n  \\<lbrakk>0 \\<le> ?n; ?n \\<le> int (length bv)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>bv1 bv2. split ?n bv (bv1, bv2)\n  0 \\<le> n\n  n \\<le> int (length (b # bv))\n  n = m + 1\n\ngoal (1 subgoal):\n 1. (\\<And>bv1 bv2.\n        split m bv (bv1, bv2) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  split m bv (bv1, bv2)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "hence \"split n (b # bv) ((b#bv1), bv2)\""], ["proof (prove)\nusing this:\n  split m bv (bv1, bv2)\n\ngoal (1 subgoal):\n 1. split n (b # bv) (b # bv1, bv2)", "using m split.intros"], ["proof (prove)\nusing this:\n  split m bv (bv1, bv2)\n  n = m + 1\n  split 0 ?xs ([], ?xs)\n  split ?m ?xs (?ys, ?zs) \\<Longrightarrow>\n  split (?m + 1) (?x # ?xs) (?x # ?ys, ?zs)\n\ngoal (1 subgoal):\n 1. split n (b # bv) (b # bv1, bv2)", "by auto"], ["proof (state)\nthis:\n  split n (b # bv) (b # bv1, bv2)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "then"], ["proof (chain)\npicking this:\n  split n (b # bv) (b # bv1, bv2)", "show ?thesis"], ["proof (prove)\nusing this:\n  split n (b # bv) (b # bv1, bv2)\n\ngoal (1 subgoal):\n 1. \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)", "by auto"], ["proof (state)\nthis:\n  \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>bv1 bv2. split n (b # bv) (bv1, bv2)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}