{"file_name": "/home/qj213/afp-2021-10-22/thys/Inductive_Confidentiality/GeneralAttacker/ConfidentialityGA.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Inductive_Confidentiality", "problem_names": ["lemma parts_initState: \"parts(initState C) = initState C\"", "lemma analz_initState: \"analz(initState C) = initState C\"", "lemma staticSecret_in_initState [simp]:\n\"staticSecret A \\<subseteq> initState A\"", "lemma staticSecretA_notin_initStateB:\n\"m \\<in> staticSecret A \\<Longrightarrow> m \\<in> initState B = (A=B)\"", "lemma staticSecretA_notin_parts_initStateB:\n\"m \\<in> staticSecret A \\<Longrightarrow> m \\<in> parts(initState B) = (A=B)\"", "lemma staticSecretA_notin_analz_initStateB:\n\"m \\<in> staticSecret A \\<Longrightarrow> m \\<in> analz(initState B) = (A=B)\"", "lemma staticSecret_synth_eq: \n\"m \\<in> staticSecret A \\<Longrightarrow> (m \\<in> synth H) = (m \\<in> H)\"", "lemma nonce_notin_analz_initState:\n  \"Nonce N \\<notin> analz(initState A)\"", "lemma staticSecret_parts_agent:\n \"\\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A\\<rbrakk> \\<Longrightarrow>  \n   A=C \\<or> \n  (\\<exists>D E X. Says D E X \\<in> set evs \\<and> m \\<in> parts{X}) \\<or>\n  (\\<exists>Y. Notes C Y \\<in> set evs \\<and> m \\<in> parts{Y})\"", "lemma staticSecret_analz_agent:\n \"\\<lbrakk>m \\<in> analz (knows C evs); m \\<in> staticSecret A\\<rbrakk> \\<Longrightarrow>  \n   A=C \\<or> \n  (\\<exists>D E X. Says D E X \\<in> set evs \\<and> m \\<in> parts{X}) \\<or>\n  (\\<exists>Y. Notes C Y \\<in> set evs \\<and> m \\<in> parts{Y})\"", "lemma secret_parts_agent:\n \"m \\<in> parts (knows C evs)  \\<Longrightarrow> m \\<in> initState C \\<or>\n (\\<exists>A B X. Says A B X \\<in> set evs \\<and> m \\<in> parts{X}) \\<or>\n (\\<exists>Y. Notes C Y \\<in> set evs \\<and> m \\<in> parts{Y})\"", "lemma NS_staticSecret_parts_agent_weak:\n \"\\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A; \n   evs \\<in> ns_public\\<rbrakk> \\<Longrightarrow>\n  A=C \\<or> (\\<exists>D E X. Says D E X \\<in> set evs \\<and> m \\<in> parts{X})\"", "lemma NS_staticSecret_parts_agent_parts:\n\"\\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A; A\\<noteq>C; evs \\<in> ns_public\\<rbrakk> \\<Longrightarrow>\n  m \\<in> parts(knows D evs)\"", "lemma NS_staticSecret_parts_agent:\n \"\\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A; \n   C\\<noteq>A; evs \\<in> ns_public\\<rbrakk>\n \\<Longrightarrow> \\<exists> B X. Says A B X \\<in> set evs \\<and> m \\<in> parts {X}\"", "lemma NS_agent_see_staticSecret:\n \"\\<lbrakk>m \\<in> staticSecret A; C\\<noteq>A; evs \\<in> ns_public\\<rbrakk>\n \\<Longrightarrow> m \\<in> parts (knows C evs) = (\\<exists> B X. Says A B X \\<in> set evs \\<and> m \\<in> parts {X})\"", "lemma analz_insert_analz: \"\n\\<lbrakk> c \\<notin> parts{Z}; \\<forall>K. Key K \\<notin> parts{Z}; c \\<in> analz(insert Z H)\\<rbrakk> \\<Longrightarrow> c \\<in> analz H\"", "lemma Agent_not_see_NA:\n     \"\\<lbrakk> Key (priEK B) \\<notin> analz(knows C evs); \n        Key (priEK A) \\<notin> analz(knows C evs);\n        \\<forall>S R Y. Says S R Y \\<in> set evs \\<longrightarrow> \n         Y = Crypt (pubEK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n         Y = Crypt (pubEK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n         Nonce NA \\<notin> parts{Y} \\<and> (\\<forall>K. Key K \\<notin> parts{Y});\n        C\\<noteq>A; C\\<noteq>B;  evs \\<in> ns_public\\<rbrakk>                     \n       \\<Longrightarrow> Nonce NA \\<notin> analz (knows C evs)\""], "translations": [["", "lemma parts_initState: \"parts(initState C) = initState C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. parts (initState C) = initState C", "by (cases C, simp)"], ["", "lemma analz_initState: \"analz(initState C) = initState C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. analz (initState C) = initState C", "by (cases C, force dest: analz_into_parts)"], ["", "text\\<open>Generalising over all initial secrets the existing treatment, which is limited to private encryption keys\\<close>"], ["", "definition staticSecret :: \"agent \\<Rightarrow> msg set\" where\n [simp]: \"staticSecret A == {Key (priEK A), Key (priSK A), Key (shrK A)}\""], ["", "text\\<open>More subsidiary lemmas combining initial secrets and knowledge of generic agent\\<close>"], ["", "lemma staticSecret_in_initState [simp]:\n\"staticSecret A \\<subseteq> initState A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. staticSecret A \\<subseteq> initState A", "by (cases A, simp)"], ["", "thm parts_insert"], ["", "lemma staticSecretA_notin_initStateB:\n\"m \\<in> staticSecret A \\<Longrightarrow> m \\<in> initState B = (A=B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> staticSecret A \\<Longrightarrow> (m \\<in> initState B) = (A = B)", "by (cases B, auto)"], ["", "lemma staticSecretA_notin_parts_initStateB:\n\"m \\<in> staticSecret A \\<Longrightarrow> m \\<in> parts(initState B) = (A=B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> staticSecret A \\<Longrightarrow>\n    (m \\<in> parts (initState B)) = (A = B)", "by (cases B, auto)"], ["", "lemma staticSecretA_notin_analz_initStateB:\n\"m \\<in> staticSecret A \\<Longrightarrow> m \\<in> analz(initState B) = (A=B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> staticSecret A \\<Longrightarrow>\n    (m \\<in> analz (initState B)) = (A = B)", "by (cases B, force dest: analz_into_parts)"], ["", "lemma staticSecret_synth_eq: \n\"m \\<in> staticSecret A \\<Longrightarrow> (m \\<in> synth H) = (m \\<in> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> staticSecret A \\<Longrightarrow> (m \\<in> synth H) = (m \\<in> H)", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare staticSecret_def [simp del]"], ["", "lemma nonce_notin_analz_initState:\n  \"Nonce N \\<notin> analz(initState A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Nonce N \\<notin> analz (initState A)", "by(cases A, auto dest: analz_into_parts)"], ["", "subsection\\<open>Protocol independent study\\<close>"], ["", "lemma staticSecret_parts_agent:\n \"\\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A\\<rbrakk> \\<Longrightarrow>  \n   A=C \\<or> \n  (\\<exists>D E X. Says D E X \\<in> set evs \\<and> m \\<in> parts{X}) \\<or>\n  (\\<exists>Y. Notes C Y \\<in> set evs \\<and> m \\<in> parts{Y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A\\<rbrakk>\n    \\<Longrightarrow> A = C \\<or>\n                      (\\<exists>D E X.\n                          Says D E X \\<in> set evs \\<and>\n                          m \\<in> parts {X}) \\<or>\n                      (\\<exists>Y.\n                          Notes C Y \\<in> set evs \\<and> m \\<in> parts {Y})", "apply (erule rev_mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> staticSecret A \\<Longrightarrow>\n    m \\<in> parts (knows C evs) \\<longrightarrow>\n    A = C \\<or>\n    (\\<exists>D E X.\n        Says D E X \\<in> set evs \\<and> m \\<in> parts {X}) \\<or>\n    (\\<exists>Y. Notes C Y \\<in> set evs \\<and> m \\<in> parts {Y})", "apply (induct_tac evs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. m \\<in> staticSecret A \\<Longrightarrow>\n    m \\<in> parts (knows C []) \\<longrightarrow>\n    A = C \\<or>\n    (\\<exists>D E X. Says D E X \\<in> set [] \\<and> m \\<in> parts {X}) \\<or>\n    (\\<exists>Y. Notes C Y \\<in> set [] \\<and> m \\<in> parts {Y})\n 2. \\<And>a list.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C (a # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (a # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (a # list) \\<and>\n                             m \\<in> parts {Y})", "txt\\<open>@{subgoals [display,indent =1]}\\<close>"], ["proof (prove)\ngoal (2 subgoals):\n 1. m \\<in> staticSecret A \\<Longrightarrow>\n    m \\<in> parts (knows C []) \\<longrightarrow>\n    A = C \\<or>\n    (\\<exists>D E X. Says D E X \\<in> set [] \\<and> m \\<in> parts {X}) \\<or>\n    (\\<exists>Y. Notes C Y \\<in> set [] \\<and> m \\<in> parts {Y})\n 2. \\<And>a list.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C (a # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (a # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (a # list) \\<and>\n                             m \\<in> parts {Y})", "apply (simp add: staticSecretA_notin_parts_initStateB)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C (a # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (a # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (a # list) \\<and>\n                             m \\<in> parts {Y})", "apply (induct_tac a)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list x1 x2 x3.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says x1 x2 x3 #\n                                     list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Says x1 x2 x3 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y\n                             \\<in> set (Says x1 x2 x3 # list) \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Notes x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})", "(*Says*)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list x1 x2 x3.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says x1 x2 x3 #\n                                     list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Says x1 x2 x3 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y\n                             \\<in> set (Says x1 x2 x3 # list) \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Notes x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})", "apply (rule impI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list x1 x2 x3.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y. Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<in> parts (knows C (Says x1 x2 x3 # list))\\<rbrakk>\n       \\<Longrightarrow> A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Says x1 x2 x3 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y\n                             \\<in> set (Says x1 x2 x3 # list) \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Notes x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>list x1 x2 x3.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y. Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<in> parts (insert x3 (knows C list))\\<rbrakk>\n       \\<Longrightarrow> A = C \\<or>\n                         (\\<exists>D E X.\n                             (D = x1 \\<and> E = x2 \\<and> X = x3 \\<or>\n                              Says D E X \\<in> set list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set list \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Notes x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})", "apply (drule parts_insert [THEN equalityD1, THEN subsetD])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>list x1 x2 x3.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y. Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<in> parts {x3} \\<union> parts (knows C list)\\<rbrakk>\n       \\<Longrightarrow> A = C \\<or>\n                         (\\<exists>D E X.\n                             (D = x1 \\<and> E = x2 \\<and> X = x3 \\<or>\n                              Says D E X \\<in> set list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set list \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Notes x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Notes x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})", "(*Gets*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Gets x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Notes x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Notes x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})", "(*Notes*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Notes x1 x2 # list)) \\<longrightarrow>\n                         A = C \\<or>\n                         (\\<exists>D E X.\n                             Says D E X\n                             \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n                             m \\<in> parts {Y})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y.\n            Notes C Y \\<in> set list \\<and> m \\<in> parts {Y})\\<rbrakk>\n       \\<Longrightarrow> C = x1 \\<longrightarrow>\n                         m \\<in> parts\n                                  (insert x2\n                                    (knows x1 list)) \\<longrightarrow>\n                         A = x1 \\<or>\n                         (\\<exists>D E X.\n                             Says D E X \\<in> set list \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             (Y = x2 \\<or> Notes x1 Y \\<in> set list) \\<and>\n                             m \\<in> parts {Y})", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y. Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<in> parts (insert x2 (knows C list)); A \\<noteq> C;\n        \\<nexists>Y.\n           (Y = x2 \\<or> Notes C Y \\<in> set list) \\<and>\n           m \\<in> parts {Y}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D E X.\n                            Says D E X \\<in> set list \\<and>\n                            m \\<in> parts {X}", "txt\\<open>@{subgoals [display,indent =1]}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y. Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<in> parts (insert x2 (knows C list)); A \\<noteq> C;\n        \\<nexists>Y.\n           (Y = x2 \\<or> Notes C Y \\<in> set list) \\<and>\n           m \\<in> parts {Y}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D E X.\n                            Says D E X \\<in> set list \\<and>\n                            m \\<in> parts {X}", "apply (drule parts_insert [THEN equalityD1, THEN subsetD])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list x1 x2.\n       \\<lbrakk>m \\<in> staticSecret A;\n        m \\<in> parts (knows C list) \\<longrightarrow>\n        A = C \\<or>\n        (\\<exists>D E X.\n            Says D E X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n        (\\<exists>Y. Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        A \\<noteq> C;\n        \\<nexists>Y.\n           (Y = x2 \\<or> Notes C Y \\<in> set list) \\<and> m \\<in> parts {Y};\n        m \\<in> parts {x2} \\<union> parts (knows C list)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>D E X.\n                            Says D E X \\<in> set list \\<and>\n                            m \\<in> parts {X}", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma staticSecret_analz_agent:\n \"\\<lbrakk>m \\<in> analz (knows C evs); m \\<in> staticSecret A\\<rbrakk> \\<Longrightarrow>  \n   A=C \\<or> \n  (\\<exists>D E X. Says D E X \\<in> set evs \\<and> m \\<in> parts{X}) \\<or>\n  (\\<exists>Y. Notes C Y \\<in> set evs \\<and> m \\<in> parts{Y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<in> analz (knows C evs); m \\<in> staticSecret A\\<rbrakk>\n    \\<Longrightarrow> A = C \\<or>\n                      (\\<exists>D E X.\n                          Says D E X \\<in> set evs \\<and>\n                          m \\<in> parts {X}) \\<or>\n                      (\\<exists>Y.\n                          Notes C Y \\<in> set evs \\<and> m \\<in> parts {Y})", "by (drule analz_into_parts [THEN staticSecret_parts_agent])"], ["", "lemma secret_parts_agent:\n \"m \\<in> parts (knows C evs)  \\<Longrightarrow> m \\<in> initState C \\<or>\n (\\<exists>A B X. Says A B X \\<in> set evs \\<and> m \\<in> parts{X}) \\<or>\n (\\<exists>Y. Notes C Y \\<in> set evs \\<and> m \\<in> parts{Y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> parts (knows C evs) \\<Longrightarrow>\n    m \\<in> initState C \\<or>\n    (\\<exists>A B X.\n        Says A B X \\<in> set evs \\<and> m \\<in> parts {X}) \\<or>\n    (\\<exists>Y. Notes C Y \\<in> set evs \\<and> m \\<in> parts {Y})", "apply (erule rev_mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<in> parts (knows C evs) \\<longrightarrow>\n    m \\<in> initState C \\<or>\n    (\\<exists>A B X.\n        Says A B X \\<in> set evs \\<and> m \\<in> parts {X}) \\<or>\n    (\\<exists>Y. Notes C Y \\<in> set evs \\<and> m \\<in> parts {Y})", "apply (induct_tac \"evs\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. m \\<in> parts (knows C []) \\<longrightarrow>\n    m \\<in> initState C \\<or>\n    (\\<exists>A B X. Says A B X \\<in> set [] \\<and> m \\<in> parts {X}) \\<or>\n    (\\<exists>Y. Notes C Y \\<in> set [] \\<and> m \\<in> parts {Y})\n 2. \\<And>a list.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (a # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (a # list) \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y. Notes C Y \\<in> set (a # list) \\<and> m \\<in> parts {Y})", "apply (simp add: parts_initState)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (a # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (a # list) \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y. Notes C Y \\<in> set (a # list) \\<and> m \\<in> parts {Y})", "apply (induct_tac \"a\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list x1 x2 x3.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Says x1 x2 x3 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Says x1 x2 x3 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Says x1 x2 x3 # list) \\<and>\n           m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Gets x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Gets x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Gets x1 x2 # list) \\<and> m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Notes x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {Y})", "(*Says*)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list x1 x2 x3.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Says x1 x2 x3 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Says x1 x2 x3 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Says x1 x2 x3 # list) \\<and>\n           m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Gets x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Gets x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Gets x1 x2 # list) \\<and> m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Notes x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {Y})", "apply (rule impI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a list x1 x2 x3.\n       \\<lbrakk>m \\<in> parts (knows C list) \\<longrightarrow>\n                m \\<in> initState C \\<or>\n                (\\<exists>A B X.\n                    Says A B X \\<in> set list \\<and>\n                    m \\<in> parts {X}) \\<or>\n                (\\<exists>Y.\n                    Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<in> parts (knows C (Says x1 x2 x3 # list))\\<rbrakk>\n       \\<Longrightarrow> m \\<in> initState C \\<or>\n                         (\\<exists>A B X.\n                             Says A B X\n                             \\<in> set (Says x1 x2 x3 # list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y\n                             \\<in> set (Says x1 x2 x3 # list) \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Gets x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Gets x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Gets x1 x2 # list) \\<and> m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Notes x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {Y})", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>list x1 x2 x3.\n       \\<lbrakk>m \\<in> parts (knows C list) \\<longrightarrow>\n                m \\<in> initState C \\<or>\n                (\\<exists>A B X.\n                    Says A B X \\<in> set list \\<and>\n                    m \\<in> parts {X}) \\<or>\n                (\\<exists>Y.\n                    Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<in> parts (insert x3 (knows C list))\\<rbrakk>\n       \\<Longrightarrow> m \\<in> initState C \\<or>\n                         (\\<exists>A B X.\n                             (A = x1 \\<and> B = x2 \\<and> X = x3 \\<or>\n                              Says A B X \\<in> set list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set list \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Gets x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Gets x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Gets x1 x2 # list) \\<and> m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Notes x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {Y})", "apply (drule parts_insert [THEN equalityD1, THEN subsetD])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>list x1 x2 x3.\n       \\<lbrakk>m \\<in> parts (knows C list) \\<longrightarrow>\n                m \\<in> initState C \\<or>\n                (\\<exists>A B X.\n                    Says A B X \\<in> set list \\<and>\n                    m \\<in> parts {X}) \\<or>\n                (\\<exists>Y.\n                    Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<in> parts {x3} \\<union> parts (knows C list)\\<rbrakk>\n       \\<Longrightarrow> m \\<in> initState C \\<or>\n                         (\\<exists>A B X.\n                             (A = x1 \\<and> B = x2 \\<and> X = x3 \\<or>\n                              Says A B X \\<in> set list) \\<and>\n                             m \\<in> parts {X}) \\<or>\n                         (\\<exists>Y.\n                             Notes C Y \\<in> set list \\<and>\n                             m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Gets x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Gets x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Gets x1 x2 # list) \\<and> m \\<in> parts {Y})\n 3. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Notes x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {Y})", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Gets x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Gets x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Gets x1 x2 # list) \\<and> m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Notes x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {Y})", "(*Gets*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Gets x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Gets x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Gets x1 x2 # list) \\<and> m \\<in> parts {Y})\n 2. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Notes x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {Y})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Notes x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {Y})", "(*Notes*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       m \\<in> parts (knows C (Notes x1 x2 # list)) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set (Notes x1 x2 # list) \\<and>\n           m \\<in> parts {Y})", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list x1 x2.\n       m \\<in> parts (knows C list) \\<longrightarrow>\n       m \\<in> initState C \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           Notes C Y \\<in> set list \\<and>\n           m \\<in> parts {Y}) \\<Longrightarrow>\n       C = x1 \\<longrightarrow>\n       m \\<in> parts (insert x2 (knows x1 list)) \\<longrightarrow>\n       m \\<in> initState x1 \\<or>\n       (\\<exists>A B X.\n           Says A B X \\<in> set list \\<and> m \\<in> parts {X}) \\<or>\n       (\\<exists>Y.\n           (Y = x2 \\<or> Notes x1 Y \\<in> set list) \\<and>\n           m \\<in> parts {Y})", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list x1 x2.\n       \\<lbrakk>m \\<in> parts (knows C list) \\<longrightarrow>\n                m \\<in> initState C \\<or>\n                (\\<exists>A B X.\n                    Says A B X \\<in> set list \\<and>\n                    m \\<in> parts {X}) \\<or>\n                (\\<exists>Y.\n                    Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<in> parts (insert x2 (knows C list)); m \\<notin> initState C;\n        \\<nexists>Y.\n           (Y = x2 \\<or> Notes C Y \\<in> set list) \\<and>\n           m \\<in> parts {Y}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A B X.\n                            Says A B X \\<in> set list \\<and>\n                            m \\<in> parts {X}", "apply (drule parts_insert [THEN equalityD1, THEN subsetD])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>list x1 x2.\n       \\<lbrakk>m \\<in> parts (knows C list) \\<longrightarrow>\n                m \\<in> initState C \\<or>\n                (\\<exists>A B X.\n                    Says A B X \\<in> set list \\<and>\n                    m \\<in> parts {X}) \\<or>\n                (\\<exists>Y.\n                    Notes C Y \\<in> set list \\<and> m \\<in> parts {Y});\n        m \\<notin> initState C;\n        \\<nexists>Y.\n           (Y = x2 \\<or> Notes C Y \\<in> set list) \\<and> m \\<in> parts {Y};\n        m \\<in> parts {x2} \\<union> parts (knows C list)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A B X.\n                            Says A B X \\<in> set list \\<and>\n                            m \\<in> parts {X}", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection\\<open>Protocol dependent study\\<close>"], ["", "(*NS_no_Notes moved up in NS_Public_Bad_GA.thy so that it's visible to a sibling theory of this one's\n\nAs with DolevYao, studying a guarantee similar to\nNS_no_Says_staticSecret makes the specialisation proof strategy collapse, because it elicits the same assumptions of the theorem that should be specified.\n*)"], ["", "lemma NS_staticSecret_parts_agent_weak:\n \"\\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A; \n   evs \\<in> ns_public\\<rbrakk> \\<Longrightarrow>\n  A=C \\<or> (\\<exists>D E X. Says D E X \\<in> set evs \\<and> m \\<in> parts{X})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A;\n     evs \\<in> ns_public\\<rbrakk>\n    \\<Longrightarrow> A = C \\<or>\n                      (\\<exists>D E X.\n                          Says D E X \\<in> set evs \\<and> m \\<in> parts {X})", "apply (blast dest: NS_no_Notes staticSecret_parts_agent)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text\\<open>Can't prove the homologous theorem of NS\\_Says\\_Spy\\_staticSecret, hence the specialisation proof strategy cannot be applied\\<close>"], ["", "(*Simple though illustrative corollary*)\n(*note use of Says_imp_knows, an enforcement of the threat model*)"], ["", "lemma NS_staticSecret_parts_agent_parts:\n\"\\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A; A\\<noteq>C; evs \\<in> ns_public\\<rbrakk> \\<Longrightarrow>\n  m \\<in> parts(knows D evs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A;\n     A \\<noteq> C; evs \\<in> ns_public\\<rbrakk>\n    \\<Longrightarrow> m \\<in> parts (knows D evs)", "apply (blast dest: NS_staticSecret_parts_agent_weak Says_imp_knows [THEN parts.Inj] parts_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "(*Alternative proof\napply (blast dest: staticSecret_parts_agent NS_no_Notes Says_imp_knows [THEN parts.Inj] parts_trans)*)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text\\<open>\nThe previous theorems show that in general any agent could send anybody's initial secret, namely the threat model does not impose anything against it. However, the actual protocol specification will, where agents either follow the protocol or build messages out of their traffic analysis - this is actually the same in DY\n\nTherefore, we are only left with the direct proof strategy.\n\\<close>"], ["", "lemma NS_staticSecret_parts_agent:\n \"\\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A; \n   C\\<noteq>A; evs \\<in> ns_public\\<rbrakk>\n \\<Longrightarrow> \\<exists> B X. Says A B X \\<in> set evs \\<and> m \\<in> parts {X}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<in> parts (knows C evs); m \\<in> staticSecret A;\n     C \\<noteq> A; evs \\<in> ns_public\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B X.\n                         Says A B X \\<in> set evs \\<and> m \\<in> parts {X}", "apply (erule rev_mp, erule ns_public.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A\\<rbrakk>\n    \\<Longrightarrow> m \\<in> parts (knows C []) \\<longrightarrow>\n                      (\\<exists>B X.\n                          Says A B X \\<in> set [] \\<and> m \\<in> parts {X})\n 2. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf))\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B X # evsf)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa\n                             \\<in> set (Says Aa B X # evsf) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 4. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 6. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "(*Nil*)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A\\<rbrakk>\n    \\<Longrightarrow> m \\<in> parts (knows C []) \\<longrightarrow>\n                      (\\<exists>B X.\n                          Says A B X \\<in> set [] \\<and> m \\<in> parts {X})\n 2. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf))\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B X # evsf)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa\n                             \\<in> set (Says Aa B X # evsf) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 4. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 6. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply (simp add: staticSecretA_notin_parts_initStateB)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf))\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B X # evsf)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa\n                             \\<in> set (Says Aa B X # evsf) \\<and>\n                             m \\<in> parts {Xa})\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "(*Fake*)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf))\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B X # evsf)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa\n                             \\<in> set (Says Aa B X # evsf) \\<and>\n                             m \\<in> parts {Xa})\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf))\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (insert X\n                                    (knows C evsf)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                              Says A Ba Xa \\<in> set evsf) \\<and>\n                             m \\<in> parts {Xa})\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply clarify"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts (insert X (knows C evsf))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply (drule parts_insert [THEN equalityD1, THEN subsetD])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "(*shot1*)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply (case_tac \"Aa=A\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf); Aa = A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 2. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf);\n        Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 3. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 4. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 6. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply clarify"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows A evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = A \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 2. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf);\n        Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 3. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 4. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 6. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "txt\\<open>@{subgoals [display,indent=1,goals_limit=2]}\\<close>"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows A evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = A \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 2. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf);\n        Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 3. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 4. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 6. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf);\n        Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "(*Aa\\<noteq>A*)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts {X} \\<union> parts (knows C evsf);\n        Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Ba Xa.\n                            (A = Aa \\<and> Ba = B \\<and> Xa = X \\<or>\n                             Says A Ba Xa \\<in> set evsf) \\<and>\n                            m \\<in> parts {Xa}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        m \\<in> parts (knows C evsf) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsf \\<and> m \\<in> parts {X});\n        X \\<in> synth (analz (knows Aa evsf));\n        m \\<in> parts {X} \\<or> m \\<in> parts (knows C evsf);\n        Aa \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B X.\n                            Says A B X \\<in> set evsf \\<and>\n                            m \\<in> parts {X}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply clarify"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        X \\<in> synth (analz (knows Aa evsf)); Aa \\<noteq> A;\n        m \\<notin> parts (knows C evsf); m \\<in> parts {X}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B X.\n                            Says A B X \\<in> set evsf \\<and>\n                            m \\<in> parts {X}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "(*applies induction hypothesis!*)(*shot2*)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        X \\<in> synth (analz (knows Aa evsf)); Aa \\<noteq> A;\n        m \\<notin> parts (knows C evsf); m \\<in> parts {X}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B X.\n                            Says A B X \\<in> set evsf \\<and>\n                            m \\<in> parts {X}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "txt\\<open>@{subgoals [display,indent=1,goals_limit=1]}\\<close>"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        X \\<in> synth (analz (knows Aa evsf)); Aa \\<noteq> A;\n        m \\<notin> parts (knows C evsf); m \\<in> parts {X}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B X.\n                            Says A B X \\<in> set evsf \\<and>\n                            m \\<in> parts {X}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply (drule Fake_parts_sing [THEN subsetD], simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        Aa \\<noteq> A; m \\<notin> parts (knows C evsf); m \\<in> parts {X};\n        m \\<in> synth (analz (knows Aa evsf)) \\<union>\n                parts (knows Aa evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B X.\n                            Says A B X \\<in> set evsf \\<and>\n                            m \\<in> parts {X}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "(*shot3*)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        Aa \\<noteq> A; m \\<notin> parts (knows C evsf); m \\<in> parts {X};\n        m \\<in> synth (analz (knows Aa evsf)) \\<union>\n                parts (knows Aa evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B X.\n                            Says A B X \\<in> set evsf \\<and>\n                            m \\<in> parts {X}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply (simp add: staticSecret_synth_eq)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        Aa \\<noteq> A; m \\<notin> parts (knows C evsf); m \\<in> parts {X};\n        m \\<in> parts (knows Aa evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B X.\n                            Says A B X \\<in> set evsf \\<and>\n                            m \\<in> parts {X}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "txt\\<open>@{subgoals [display,indent=1,goals_limit=1]}\\<close>"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsf \\<in> ns_public;\n        Aa \\<noteq> A; m \\<notin> parts (knows C evsf); m \\<in> parts {X};\n        m \\<in> parts (knows Aa evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>B X.\n                            Says A B X \\<in> set evsf \\<and>\n                            m \\<in> parts {X}\n 2. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 3. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 5. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply (blast dest: NS_staticSecret_parts_agent_parts)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 2. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 3. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "(*rest!*)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>evsr Aa B X.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evsr \\<in> ns_public;\n        m \\<in> parts (knows C evsr) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evsr \\<and> m \\<in> parts {X});\n        Says Aa B X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Gets B X # evsr)) \\<longrightarrow>\n                         (\\<exists>Ba Xa.\n                             Says A Ba Xa \\<in> set (Gets B X # evsr) \\<and>\n                             m \\<in> parts {Xa})\n 2. \\<And>evs1 NA Aa B.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs1 \\<in> ns_public;\n        m \\<in> parts (knows C evs1) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs1 \\<and> m \\<in> parts {X});\n        Nonce NA \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B\n(Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n                                     evs1)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>) #\n  evs1) \\<and>\n                             m \\<in> parts {X})\n 3. \\<And>evs2 NB B NA Aa.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs2 \\<in> ns_public;\n        m \\<in> parts (knows C evs2) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs2 \\<and> m \\<in> parts {X});\n        Nonce NB \\<notin> used evs2;\n        Gets B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says B Aa\n(Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n                                     evs2)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says B Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>) #\n  evs2) \\<and>\n                             m \\<in> parts {X})\n 4. \\<And>evs3 Aa B NA NB.\n       \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A; evs3 \\<in> ns_public;\n        m \\<in> parts (knows C evs3) \\<longrightarrow>\n        (\\<exists>B X. Says A B X \\<in> set evs3 \\<and> m \\<in> parts {X});\n        Says Aa B (Crypt (pubK B) \\<lbrace>Nonce NA, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NA, Nonce NB\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> m \\<in> parts\n                                  (knows C\n                                    (Says Aa B (Crypt (pubK B) (Nonce NB)) #\n                                     evs3)) \\<longrightarrow>\n                         (\\<exists>Ba X.\n                             Says A Ba X\n                             \\<in> set (Says Aa B\n   (Crypt (pubK B) (Nonce NB)) #\n  evs3) \\<and>\n                             m \\<in> parts {X})", "apply (force simp add: staticSecret_def)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma NS_agent_see_staticSecret:\n \"\\<lbrakk>m \\<in> staticSecret A; C\\<noteq>A; evs \\<in> ns_public\\<rbrakk>\n \\<Longrightarrow> m \\<in> parts (knows C evs) = (\\<exists> B X. Says A B X \\<in> set evs \\<and> m \\<in> parts {X})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<in> staticSecret A; C \\<noteq> A;\n     evs \\<in> ns_public\\<rbrakk>\n    \\<Longrightarrow> (m \\<in> parts (knows C evs)) =\n                      (\\<exists>B X.\n                          Says A B X \\<in> set evs \\<and> m \\<in> parts {X})", "apply (force dest: NS_staticSecret_parts_agent Says_imp_knows [THEN parts.Inj] intro: parts_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare analz.Decrypt [rule del]"], ["", "lemma analz_insert_analz: \"\n\\<lbrakk> c \\<notin> parts{Z}; \\<forall>K. Key K \\<notin> parts{Z}; c \\<in> analz(insert Z H)\\<rbrakk> \\<Longrightarrow> c \\<in> analz H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<notin> parts {Z}; \\<forall>K. Key K \\<notin> parts {Z};\n     c \\<in> analz (insert Z H)\\<rbrakk>\n    \\<Longrightarrow> c \\<in> analz H", "apply (erule rev_mp, erule rev_mp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> analz (insert Z H) \\<Longrightarrow>\n    (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n    c \\<notin> parts {Z} \\<longrightarrow> c \\<in> analz H", "apply (erule analz.induct)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>X.\n       X \\<in> insert Z H \\<Longrightarrow>\n       (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n       X \\<notin> parts {Z} \\<longrightarrow> X \\<in> analz H\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         X \\<notin> parts {Z} \\<longrightarrow>\n                         X \\<in> analz H\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         Y \\<notin> parts {Z} \\<longrightarrow>\n                         Y \\<in> analz H\n 4. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        Crypt K X \\<notin> parts {Z} \\<longrightarrow>\n        Crypt K X \\<in> analz H;\n        Key (invKey K) \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        Key (invKey K) \\<notin> parts {Z} \\<longrightarrow>\n        Key (invKey K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         X \\<notin> parts {Z} \\<longrightarrow>\n                         X \\<in> analz H", "prefer 4"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        Crypt K X \\<notin> parts {Z} \\<longrightarrow>\n        Crypt K X \\<in> analz H;\n        Key (invKey K) \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        Key (invKey K) \\<notin> parts {Z} \\<longrightarrow>\n        Key (invKey K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         X \\<notin> parts {Z} \\<longrightarrow>\n                         X \\<in> analz H\n 2. \\<And>X.\n       X \\<in> insert Z H \\<Longrightarrow>\n       (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n       X \\<notin> parts {Z} \\<longrightarrow> X \\<in> analz H\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         X \\<notin> parts {Z} \\<longrightarrow>\n                         X \\<in> analz H\n 4. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         Y \\<notin> parts {Z} \\<longrightarrow>\n                         Y \\<in> analz H", "apply clarify"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert Z H);\n        Key (invKey K) \\<in> analz (insert Z H);\n        \\<forall>K. Key K \\<notin> parts {Z}; X \\<notin> parts {Z};\n        Crypt K X \\<notin> parts {Z} \\<longrightarrow>\n        Crypt K X \\<in> analz H;\n        Key (invKey K) \\<notin> parts {Z} \\<longrightarrow>\n        Key (invKey K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>X.\n       X \\<in> insert Z H \\<Longrightarrow>\n       (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n       X \\<notin> parts {Z} \\<longrightarrow> X \\<in> analz H\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         X \\<notin> parts {Z} \\<longrightarrow>\n                         X \\<in> analz H\n 4. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         Y \\<notin> parts {Z} \\<longrightarrow>\n                         Y \\<in> analz H", "txt\\<open>@{subgoals [display,indent=1,goals_limit=1]}\\<close>"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>K X.\n       \\<lbrakk>Crypt K X \\<in> analz (insert Z H);\n        Key (invKey K) \\<in> analz (insert Z H);\n        \\<forall>K. Key K \\<notin> parts {Z}; X \\<notin> parts {Z};\n        Crypt K X \\<notin> parts {Z} \\<longrightarrow>\n        Crypt K X \\<in> analz H;\n        Key (invKey K) \\<notin> parts {Z} \\<longrightarrow>\n        Key (invKey K) \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> X \\<in> analz H\n 2. \\<And>X.\n       X \\<in> insert Z H \\<Longrightarrow>\n       (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n       X \\<notin> parts {Z} \\<longrightarrow> X \\<in> analz H\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         X \\<notin> parts {Z} \\<longrightarrow>\n                         X \\<in> analz H\n 4. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         Y \\<notin> parts {Z} \\<longrightarrow>\n                         Y \\<in> analz H", "apply (blast dest: parts.Body analz.Decrypt)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>X.\n       X \\<in> insert Z H \\<Longrightarrow>\n       (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n       X \\<notin> parts {Z} \\<longrightarrow> X \\<in> analz H\n 2. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         X \\<notin> parts {Z} \\<longrightarrow>\n                         X \\<in> analz H\n 3. \\<And>X Y.\n       \\<lbrakk>\\<lbrace>X, Y\\<rbrace> \\<in> analz (insert Z H);\n        (\\<forall>K. Key K \\<notin> parts {Z}) \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<notin> parts {Z} \\<longrightarrow>\n        \\<lbrace>X, Y\\<rbrace> \\<in> analz H\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>K.\n                             Key K \\<notin> parts {Z}) \\<longrightarrow>\n                         Y \\<notin> parts {Z} \\<longrightarrow>\n                         Y \\<in> analz H", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Agent_not_see_NA:\n     \"\\<lbrakk> Key (priEK B) \\<notin> analz(knows C evs); \n        Key (priEK A) \\<notin> analz(knows C evs);\n        \\<forall>S R Y. Says S R Y \\<in> set evs \\<longrightarrow> \n         Y = Crypt (pubEK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n         Y = Crypt (pubEK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n         Nonce NA \\<notin> parts{Y} \\<and> (\\<forall>K. Key K \\<notin> parts{Y});\n        C\\<noteq>A; C\\<noteq>B;  evs \\<in> ns_public\\<rbrakk>                     \n       \\<Longrightarrow> Nonce NA \\<notin> analz (knows C evs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Key (priEK B) \\<notin> analz (knows C evs);\n     Key (priEK A) \\<notin> analz (knows C evs);\n     \\<forall>S R Y.\n        Says S R Y \\<in> set evs \\<longrightarrow>\n        Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n        Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n        Nonce NA \\<notin> parts {Y} \\<and>\n        (\\<forall>K. Key K \\<notin> parts {Y});\n     C \\<noteq> A; C \\<noteq> B; evs \\<in> ns_public\\<rbrakk>\n    \\<Longrightarrow> Nonce NA \\<notin> analz (knows C evs)", "apply (erule rev_mp, erule rev_mp, erule rev_mp, erule ns_public.induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<lbrakk>C \\<noteq> A; C \\<noteq> B\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>S R Y.\n                          Says S R Y \\<in> set [] \\<longrightarrow>\n                          Y =\n                          Crypt (pubK B)\n                           \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                          Y =\n                          Crypt (pubK A)\n                           \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                          Nonce NA \\<notin> parts {Y} \\<and>\n                          (\\<forall>K.\n                              Key K \\<notin> parts {Y})) \\<longrightarrow>\n                      Key (priEK A)\n                      \\<notin> analz (knows C []) \\<longrightarrow>\n                      Key (priEK B)\n                      \\<notin> analz (knows C []) \\<longrightarrow>\n                      Nonce NA \\<notin> analz (knows C [])\n 2. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba X #\n  evsf) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba X #\nevsf)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba X #\nevsf)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Says Aa Ba X # evsf))\n 3. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 4. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 5. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 6. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "apply (simp add: nonce_notin_analz_initState)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf))\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba X #\n  evsf) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba X #\nevsf)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba X #\nevsf)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Says Aa Ba X # evsf))\n 2. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 3. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 4. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 5. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "apply clarify"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           Says S R Y \\<in> set (Says Aa Ba X # evsf) \\<longrightarrow>\n           Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n           Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n           Nonce NA \\<notin> parts {Y} \\<and>\n           (\\<forall>K. Key K \\<notin> parts {Y});\n        Key (priEK A) \\<notin> analz (knows C (Says Aa Ba X # evsf));\n        Key (priEK B) \\<notin> analz (knows C (Says Aa Ba X # evsf));\n        Nonce NA \\<in> analz (knows C (Says Aa Ba X # evsf))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 3. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 4. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 5. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {X})) \\<and>\n           (Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y}));\n        Key (priEK A) \\<notin> analz (insert X (knows C evsf));\n        Key (priEK B) \\<notin> analz (insert X (knows C evsf));\n        Nonce NA \\<in> analz (insert X (knows C evsf))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 3. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 4. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 5. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "(*fixing confidentiality of both private keys*)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {X})) \\<and>\n           (Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y}));\n        Key (priEK A) \\<notin> analz (insert X (knows C evsf));\n        Key (priEK B) \\<notin> analz (insert X (knows C evsf));\n        Nonce NA \\<in> analz (insert X (knows C evsf))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 3. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 4. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 5. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "apply (drule subset_insertI [THEN analz_mono, THEN contra_subsetD])+"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {X})) \\<and>\n           (Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y}));\n        Nonce NA \\<in> analz (insert X (knows C evsf));\n        Key (priEK A) \\<notin> analz (knows C evsf);\n        Key (priEK B) \\<notin> analz (knows C evsf)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 3. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 4. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 5. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "txt\\<open>@{subgoals [display,indent=1,goals_limit=1]}\\<close>"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {X})) \\<and>\n           (Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y}));\n        Nonce NA \\<in> analz (insert X (knows C evsf));\n        Key (priEK A) \\<notin> analz (knows C evsf);\n        Key (priEK B) \\<notin> analz (knows C evsf)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 3. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 4. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 5. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "apply (subgoal_tac \"\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and> (\\<forall>K. Key K \\<notin> parts {X}))\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {X})) \\<and>\n           (Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y}));\n        Nonce NA \\<in> analz (insert X (knows C evsf));\n        Key (priEK A) \\<notin> analz (knows C evsf);\n        Key (priEK B) \\<notin> analz (knows C evsf);\n        \\<forall>S R Y.\n           S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n           X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n           X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n           Nonce NA \\<notin> parts {X} \\<and>\n           (\\<forall>K. Key K \\<notin> parts {X})\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {X})) \\<and>\n           (Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y}));\n        Nonce NA \\<in> analz (insert X (knows C evsf));\n        Key (priEK A) \\<notin> analz (knows C evsf);\n        Key (priEK B) \\<notin> analz (knows C evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S R Y.\n                            S = Aa \\<and>\n                            R = Ba \\<and> Y = X \\<longrightarrow>\n                            X =\n                            Crypt (pubK B)\n                             \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                            X =\n                            Crypt (pubK A)\n                             \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                            Nonce NA \\<notin> parts {X} \\<and>\n                            (\\<forall>K. Key K \\<notin> parts {X})\n 3. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 4. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 5. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 6. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "prefer 2"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {X})) \\<and>\n           (Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y}));\n        Nonce NA \\<in> analz (insert X (knows C evsf));\n        Key (priEK A) \\<notin> analz (knows C evsf);\n        Key (priEK B) \\<notin> analz (knows C evsf)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S R Y.\n                            S = Aa \\<and>\n                            R = Ba \\<and> Y = X \\<longrightarrow>\n                            X =\n                            Crypt (pubK B)\n                             \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                            X =\n                            Crypt (pubK A)\n                             \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                            Nonce NA \\<notin> parts {X} \\<and>\n                            (\\<forall>K. Key K \\<notin> parts {X})\n 2. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {X})) \\<and>\n           (Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y}));\n        Nonce NA \\<in> analz (insert X (knows C evsf));\n        Key (priEK A) \\<notin> analz (knows C evsf);\n        Key (priEK B) \\<notin> analz (knows C evsf);\n        \\<forall>S R Y.\n           S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n           X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n           X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n           Nonce NA \\<notin> parts {X} \\<and>\n           (\\<forall>K. Key K \\<notin> parts {X})\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 4. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 5. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 6. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Key (priEK A) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsf) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           (S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n            X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {X} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {X})) \\<and>\n           (Says S R Y \\<in> set evsf \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y}));\n        Nonce NA \\<in> analz (insert X (knows C evsf));\n        Key (priEK A) \\<notin> analz (knows C evsf);\n        Key (priEK B) \\<notin> analz (knows C evsf);\n        \\<forall>S R Y.\n           S = Aa \\<and> R = Ba \\<and> Y = X \\<longrightarrow>\n           X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n           X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n           Nonce NA \\<notin> parts {X} \\<and>\n           (\\<forall>K. Key K \\<notin> parts {X})\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 3. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 4. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 5. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           Says S R Y \\<in> set evsf \\<longrightarrow>\n           Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n           Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n           Nonce NA \\<notin> parts {Y} \\<and>\n           (\\<forall>K. Key K \\<notin> parts {Y});\n        Nonce NA \\<in> analz (insert X (knows C evsf));\n        Key (priEK A) \\<notin> analz (knows C evsf);\n        Key (priEK B) \\<notin> analz (knows C evsf);\n        X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n        X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n        Nonce NA \\<notin> parts {X} \\<and>\n        (\\<forall>K. Key K \\<notin> parts {X})\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 3. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 4. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 5. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "txt\\<open>@{subgoals [display,indent=1,goals_limit=1]}\\<close>"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>evsf X Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsf \\<in> ns_public;\n        Nonce NA \\<notin> analz (knows C evsf);\n        X \\<in> synth (analz (knows Aa evsf));\n        \\<forall>S R Y.\n           Says S R Y \\<in> set evsf \\<longrightarrow>\n           Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n           Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n           Nonce NA \\<notin> parts {Y} \\<and>\n           (\\<forall>K. Key K \\<notin> parts {Y});\n        Nonce NA \\<in> analz (insert X (knows C evsf));\n        Key (priEK A) \\<notin> analz (knows C evsf);\n        Key (priEK B) \\<notin> analz (knows C evsf);\n        X = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n        X = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n        Nonce NA \\<notin> parts {X} \\<and>\n        (\\<forall>K. Key K \\<notin> parts {X})\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 3. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 4. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 5. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "apply (force dest!: analz_insert_analz)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 2. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 3. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 4. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "(*Alternative proof\napply (erule disjE) apply simp \napply (erule disjE) apply simp \napply (blast dest: analz_insert_analz)\n*)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>evsr Aa Ba X.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evsr \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evsr \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evsr) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evsr);\n        Says Aa Ba X \\<in> set evsr\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Gets Ba X # evsr) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Gets Ba X # evsr)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz (knows C (Gets Ba X # evsr))\n 2. \\<And>evs1 NAa Aa Ba.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs1 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs1 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs1) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs1);\n        Nonce NAa \\<notin> used evs1\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\n  evs1) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>) #\nevs1))\n 3. \\<And>evs2 NBa Ba NAa Aa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs2 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs2 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs2) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs2);\n        Nonce NBa \\<notin> used evs2;\n        Gets Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs2\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Ba Aa\n   (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\n  evs2) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Ba Aa\n (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>) #\nevs2))\n 4. \\<And>evs3 Aa Ba NAa NBa.\n       \\<lbrakk>C \\<noteq> A; C \\<noteq> B; evs3 \\<in> ns_public;\n        (\\<forall>S R Y.\n            Says S R Y \\<in> set evs3 \\<longrightarrow>\n            Y = Crypt (pubK B) \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n            Y = Crypt (pubK A) \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n            Nonce NA \\<notin> parts {Y} \\<and>\n            (\\<forall>K. Key K \\<notin> parts {Y})) \\<longrightarrow>\n        Key (priEK A) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Key (priEK B) \\<notin> analz (knows C evs3) \\<longrightarrow>\n        Nonce NA \\<notin> analz (knows C evs3);\n        Says Aa Ba (Crypt (pubK Ba) \\<lbrace>Nonce NAa, Agent Aa\\<rbrace>)\n        \\<in> set evs3;\n        Gets Aa (Crypt (pubK Aa) \\<lbrace>Nonce NAa, Nonce NBa\\<rbrace>)\n        \\<in> set evs3\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>S R Y.\n                             Says S R Y\n                             \\<in> set (Says Aa Ba\n   (Crypt (pubK Ba) (Nonce NBa)) #\n  evs3) \\<longrightarrow>\n                             Y =\n                             Crypt (pubK B)\n                              \\<lbrace>Nonce NA, Agent A\\<rbrace> \\<or>\n                             Y =\n                             Crypt (pubK A)\n                              \\<lbrace>Nonce NA, Nonce NB\\<rbrace> \\<or>\n                             Nonce NA \\<notin> parts {Y} \\<and>\n                             (\\<forall>K.\n                                 Key K\n                                 \\<notin> parts {Y})) \\<longrightarrow>\n                         Key (priEK A)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Key (priEK B)\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3)) \\<longrightarrow>\n                         Nonce NA\n                         \\<notin> analz\n                                   (knows C\n                                     (Says Aa Ba\n (Crypt (pubK Ba) (Nonce NBa)) #\nevs3))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}