{"file_name": "/home/qj213/afp-2021-10-22/thys/Nullstellensatz/Lex_Order_PP.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Nullstellensatz", "problem_names": ["lemma lex_pm_keys_leE:\n  assumes \"lex_pm s t\" and \"x \\<in> keys (s::'x::linorder \\<Rightarrow>\\<^sub>0 'a::add_linorder_min)\"\n  obtains y where \"y \\<in> keys t\" and \"y \\<le> x\"", "lemma lex_pm_except_max:\n  assumes \"lex_pm s t\" and \"keys s \\<union> keys t \\<subseteq> {..x}\"\n  shows \"lex_pm (except s {x}) (except t {x})\"", "lemma lex_pm_strict_plus_left:\n  assumes \"lex_pm_strict s t\" and \"\\<And>x y. x \\<in> keys t \\<Longrightarrow> y \\<in> keys u \\<Longrightarrow> x < y\"\n  shows \"lex_pm_strict (u + s) (t::_ \\<Rightarrow>\\<^sub>0 'a::add_linorder_min)\""], "translations": [["", "lemma lex_pm_keys_leE:\n  assumes \"lex_pm s t\" and \"x \\<in> keys (s::'x::linorder \\<Rightarrow>\\<^sub>0 'a::add_linorder_min)\"\n  obtains y where \"y \\<in> keys t\" and \"y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1)"], ["proof (prove)\nusing this:\n  lex_pm s t\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding lex_pm_alt"], ["proof (prove)\nusing this:\n  s = t \\<or>\n  (\\<exists>x.\n      lookup s x < lookup t x \\<and>\n      (\\<forall>y<x. lookup s y = lookup t y))\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (elim disjE exE conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>y.\n                \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     s = t\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> thesis", "assume \"s = t\""], ["proof (state)\nthis:\n  s = t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>y.\n                \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n                \\<Longrightarrow> thesis;\n     s = t\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<And>xa.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ?y \\<in> keys t\n 2. ?y \\<le> x", "from assms(2)"], ["proof (chain)\npicking this:\n  x \\<in> keys s", "show \"x \\<in> keys t\""], ["proof (prove)\nusing this:\n  x \\<in> keys s\n\ngoal (1 subgoal):\n 1. x \\<in> keys t", "by (simp only: \\<open>s = t\\<close>)"], ["proof (state)\nthis:\n  x \\<in> keys t\n\ngoal (1 subgoal):\n 1. x \\<le> x", "qed (fact order.refl)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> thesis", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> thesis", "assume 1: \"lookup s y < lookup t y\" and 2: \"\\<forall>y'<y. lookup s y' = lookup t y'\""], ["proof (state)\nthis:\n  lookup s y < lookup t y\n  \\<forall>y'<y. lookup s y' = lookup t y'\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>y \\<in> keys t; y \\<le> x\\<rbrakk>\n                   \\<Longrightarrow> thesis;\n        lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "proof (cases \"y \\<le> x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<le> x \\<Longrightarrow> thesis\n 2. \\<not> y \\<le> x \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  y \\<le> x\n\ngoal (2 subgoals):\n 1. y \\<le> x \\<Longrightarrow> thesis\n 2. \\<not> y \\<le> x \\<Longrightarrow> thesis", "from zero_min 1"], ["proof (chain)\npicking this:\n  (0::?'a) \\<le> ?x\n  lookup s y < lookup t y", "have \"0 < lookup t y\""], ["proof (prove)\nusing this:\n  (0::?'a) \\<le> ?x\n  lookup s y < lookup t y\n\ngoal (1 subgoal):\n 1. (0::'a) < lookup t y", "by (rule le_less_trans)"], ["proof (state)\nthis:\n  (0::'a) < lookup t y\n\ngoal (2 subgoals):\n 1. y \\<le> x \\<Longrightarrow> thesis\n 2. \\<not> y \\<le> x \\<Longrightarrow> thesis", "hence \"y \\<in> keys t\""], ["proof (prove)\nusing this:\n  (0::'a) < lookup t y\n\ngoal (1 subgoal):\n 1. y \\<in> keys t", "by (simp add: dual_order.strict_implies_not_eq in_keys_iff)"], ["proof (state)\nthis:\n  y \\<in> keys t\n\ngoal (2 subgoals):\n 1. y \\<le> x \\<Longrightarrow> thesis\n 2. \\<not> y \\<le> x \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> keys t\n\ngoal (1 subgoal):\n 1. thesis", "using True"], ["proof (prove)\nusing this:\n  y \\<in> keys t\n  y \\<le> x\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<not> y \\<le> x \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> y \\<le> x \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  \\<not> y \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> y \\<le> x \\<Longrightarrow> thesis", "hence \"x < y\""], ["proof (prove)\nusing this:\n  \\<not> y \\<le> x\n\ngoal (1 subgoal):\n 1. x < y", "by simp"], ["proof (state)\nthis:\n  x < y\n\ngoal (1 subgoal):\n 1. \\<not> y \\<le> x \\<Longrightarrow> thesis", "with 2"], ["proof (chain)\npicking this:\n  \\<forall>y'<y. lookup s y' = lookup t y'\n  x < y", "have \"lookup s x = lookup t x\""], ["proof (prove)\nusing this:\n  \\<forall>y'<y. lookup s y' = lookup t y'\n  x < y\n\ngoal (1 subgoal):\n 1. lookup s x = lookup t x", "by simp"], ["proof (state)\nthis:\n  lookup s x = lookup t x\n\ngoal (1 subgoal):\n 1. \\<not> y \\<le> x \\<Longrightarrow> thesis", "with assms(2)"], ["proof (chain)\npicking this:\n  x \\<in> keys s\n  lookup s x = lookup t x", "have \"x \\<in> keys t\""], ["proof (prove)\nusing this:\n  x \\<in> keys s\n  lookup s x = lookup t x\n\ngoal (1 subgoal):\n 1. x \\<in> keys t", "by (simp only: in_keys_iff not_False_eq_True)"], ["proof (state)\nthis:\n  x \\<in> keys t\n\ngoal (1 subgoal):\n 1. \\<not> y \\<le> x \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> keys t\n\ngoal (1 subgoal):\n 1. thesis", "using order.refl"], ["proof (prove)\nusing this:\n  x \\<in> keys t\n  ?a \\<le> ?a\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lex_pm_except_max:\n  assumes \"lex_pm s t\" and \"keys s \\<union> keys t \\<subseteq> {..x}\"\n  shows \"lex_pm (except s {x}) (except t {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lex_pm (except s {x}) (except t {x})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lex_pm (except s {x}) (except t {x})", "from assms(1)"], ["proof (chain)\npicking this:\n  lex_pm s t", "have \"s = t \\<or> (\\<exists>x. lookup s x < lookup t x \\<and> (\\<forall>y<x. lookup s y = lookup t y))\""], ["proof (prove)\nusing this:\n  lex_pm s t\n\ngoal (1 subgoal):\n 1. s = t \\<or>\n    (\\<exists>x.\n        lookup s x < lookup t x \\<and>\n        (\\<forall>y<x. lookup s y = lookup t y))", "by (simp only: lex_pm_alt)"], ["proof (state)\nthis:\n  s = t \\<or>\n  (\\<exists>x.\n      lookup s x < lookup t x \\<and>\n      (\\<forall>y<x. lookup s y = lookup t y))\n\ngoal (1 subgoal):\n 1. lex_pm (except s {x}) (except t {x})", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = t \\<or>\n  (\\<exists>x.\n      lookup s x < lookup t x \\<and>\n      (\\<forall>y<x. lookup s y = lookup t y))\n\ngoal (1 subgoal):\n 1. lex_pm (except s {x}) (except t {x})", "proof (elim disjE exE conjE)"], ["proof (state)\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow> lex_pm (except s {x}) (except t {x})\n 2. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "assume \"s = t\""], ["proof (state)\nthis:\n  s = t\n\ngoal (2 subgoals):\n 1. s = t \\<Longrightarrow> lex_pm (except s {x}) (except t {x})\n 2. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "thus ?thesis"], ["proof (prove)\nusing this:\n  s = t\n\ngoal (1 subgoal):\n 1. lex_pm (except s {x}) (except t {x})", "by (simp only: lex_pm_refl)"], ["proof (state)\nthis:\n  lex_pm (except s {x}) (except t {x})\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "assume \"\\<forall>z<y. lookup s z = lookup t z\""], ["proof (state)\nthis:\n  \\<forall>z<y. lookup s z = lookup t z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "hence eq: \"lookup s z = lookup t z\" if \"z < y\" for z"], ["proof (prove)\nusing this:\n  \\<forall>z<y. lookup s z = lookup t z\n\ngoal (1 subgoal):\n 1. lookup s z = lookup t z", "using that"], ["proof (prove)\nusing this:\n  \\<forall>z<y. lookup s z = lookup t z\n  z < y\n\ngoal (1 subgoal):\n 1. lookup s z = lookup t z", "by simp"], ["proof (state)\nthis:\n  ?z < y \\<Longrightarrow> lookup s ?z = lookup t ?z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "assume *: \"lookup s y < lookup t y\""], ["proof (state)\nthis:\n  lookup s y < lookup t y\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "hence \"y \\<in> keys s \\<union> keys t\""], ["proof (prove)\nusing this:\n  lookup s y < lookup t y\n\ngoal (1 subgoal):\n 1. y \\<in> keys s \\<union> keys t", "by (auto simp flip: lookup_not_eq_zero_eq_in_keys)"], ["proof (state)\nthis:\n  y \\<in> keys s \\<union> keys t\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "with assms(2)"], ["proof (chain)\npicking this:\n  keys s \\<union> keys t \\<subseteq> {..x}\n  y \\<in> keys s \\<union> keys t", "have \"y \\<in> {..x}\""], ["proof (prove)\nusing this:\n  keys s \\<union> keys t \\<subseteq> {..x}\n  y \\<in> keys s \\<union> keys t\n\ngoal (1 subgoal):\n 1. y \\<in> {..x}", ".."], ["proof (state)\nthis:\n  y \\<in> {..x}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "hence \"y = x \\<or> y < x\""], ["proof (prove)\nusing this:\n  y \\<in> {..x}\n\ngoal (1 subgoal):\n 1. y = x \\<or> y < x", "by auto"], ["proof (state)\nthis:\n  y = x \\<or> y < x\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>lookup s xa < lookup t xa;\n        \\<forall>y<xa. lookup s y = lookup t y\\<rbrakk>\n       \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "thus ?thesis"], ["proof (prove)\nusing this:\n  y = x \\<or> y < x\n\ngoal (1 subgoal):\n 1. lex_pm (except s {x}) (except t {x})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. y = x \\<Longrightarrow> lex_pm (except s {x}) (except t {x})\n 2. y < x \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "assume y: \"y = x\""], ["proof (state)\nthis:\n  y = x\n\ngoal (2 subgoals):\n 1. y = x \\<Longrightarrow> lex_pm (except s {x}) (except t {x})\n 2. y < x \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "have \"except s {x} = except t {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. except s {x} = except t {x}", "proof (rule poly_mapping_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. lookup (except s {x}) k = lookup (except t {x}) k", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. lookup (except s {x}) k = lookup (except t {x}) k", "show \"lookup (except s {x}) z = lookup (except t {x}) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup (except s {x}) z = lookup (except t {x}) z", "proof (rule linorder_cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?x < ?y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z\n 2. ?x = ?y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z\n 3. ?y < ?x \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "assume \"z < y\""], ["proof (state)\nthis:\n  z < y\n\ngoal (3 subgoals):\n 1. ?x < ?y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z\n 2. ?x = ?y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z\n 3. ?y < ?x \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "thus ?thesis"], ["proof (prove)\nusing this:\n  z < y\n\ngoal (1 subgoal):\n 1. lookup (except s {x}) z = lookup (except t {x}) z", "by (simp add: lookup_except eq)"], ["proof (state)\nthis:\n  lookup (except s {x}) z = lookup (except t {x}) z\n\ngoal (2 subgoals):\n 1. z = y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z\n 2. y < z \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. z = y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z\n 2. y < z \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "assume \"y < z\""], ["proof (state)\nthis:\n  y < z\n\ngoal (2 subgoals):\n 1. z = y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z\n 2. y < z \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "hence \"z \\<notin> {..x}\""], ["proof (prove)\nusing this:\n  y < z\n\ngoal (1 subgoal):\n 1. z \\<notin> {..x}", "by (simp add: y)"], ["proof (state)\nthis:\n  z \\<notin> {..x}\n\ngoal (2 subgoals):\n 1. z = y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z\n 2. y < z \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "with assms(2)"], ["proof (chain)\npicking this:\n  keys s \\<union> keys t \\<subseteq> {..x}\n  z \\<notin> {..x}", "have \"z \\<notin> keys s\" and \"z \\<notin> keys t\""], ["proof (prove)\nusing this:\n  keys s \\<union> keys t \\<subseteq> {..x}\n  z \\<notin> {..x}\n\ngoal (1 subgoal):\n 1. z \\<notin> keys s &&& z \\<notin> keys t", "by blast+"], ["proof (state)\nthis:\n  z \\<notin> keys s\n  z \\<notin> keys t\n\ngoal (2 subgoals):\n 1. z = y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z\n 2. y < z \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "with \\<open>y < z\\<close>"], ["proof (chain)\npicking this:\n  y < z\n  z \\<notin> keys s\n  z \\<notin> keys t", "show ?thesis"], ["proof (prove)\nusing this:\n  y < z\n  z \\<notin> keys s\n  z \\<notin> keys t\n\ngoal (1 subgoal):\n 1. lookup (except s {x}) z = lookup (except t {x}) z", "by (simp add: y lookup_except in_keys_iff)"], ["proof (state)\nthis:\n  lookup (except s {x}) z = lookup (except t {x}) z\n\ngoal (1 subgoal):\n 1. z = y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z = y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "assume \"z = y\""], ["proof (state)\nthis:\n  z = y\n\ngoal (1 subgoal):\n 1. z = y \\<Longrightarrow>\n    lookup (except s {x}) z = lookup (except t {x}) z", "thus ?thesis"], ["proof (prove)\nusing this:\n  z = y\n\ngoal (1 subgoal):\n 1. lookup (except s {x}) z = lookup (except t {x}) z", "by (simp add: y lookup_except)"], ["proof (state)\nthis:\n  lookup (except s {x}) z = lookup (except t {x}) z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lookup (except s {x}) z = lookup (except t {x}) z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  except s {x} = except t {x}\n\ngoal (2 subgoals):\n 1. y = x \\<Longrightarrow> lex_pm (except s {x}) (except t {x})\n 2. y < x \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "thus ?thesis"], ["proof (prove)\nusing this:\n  except s {x} = except t {x}\n\ngoal (1 subgoal):\n 1. lex_pm (except s {x}) (except t {x})", "by (simp only: lex_pm_refl)"], ["proof (state)\nthis:\n  lex_pm (except s {x}) (except t {x})\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "assume \"y < x\""], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow> lex_pm (except s {x}) (except t {x})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lex_pm (except s {x}) (except t {x})", "unfolding lex_pm_alt"], ["proof (prove)\ngoal (1 subgoal):\n 1. except s {x} = except t {x} \\<or>\n    (\\<exists>xa.\n        lookup (except s {x}) xa < lookup (except t {x}) xa \\<and>\n        (\\<forall>y<xa. lookup (except s {x}) y = lookup (except t {x}) y))", "proof (intro disjI2 exI conjI allI impI)"], ["proof (state)\ngoal (2 subgoals):\n 1. lookup (except s {x}) ?x1 < lookup (except t {x}) ?x1\n 2. \\<And>y.\n       y < ?x1 \\<Longrightarrow>\n       lookup (except s {x}) y = lookup (except t {x}) y", "from \\<open>y < x\\<close> *"], ["proof (chain)\npicking this:\n  y < x\n  lookup s y < lookup t y", "show \"lookup (except s {x}) y < lookup (except t {x}) y\""], ["proof (prove)\nusing this:\n  y < x\n  lookup s y < lookup t y\n\ngoal (1 subgoal):\n 1. lookup (except s {x}) y < lookup (except t {x}) y", "by (simp add: lookup_except)"], ["proof (state)\nthis:\n  lookup (except s {x}) y < lookup (except t {x}) y\n\ngoal (1 subgoal):\n 1. \\<And>ya.\n       ya < y \\<Longrightarrow>\n       lookup (except s {x}) ya = lookup (except t {x}) ya", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ya.\n       ya < y \\<Longrightarrow>\n       lookup (except s {x}) ya = lookup (except t {x}) ya", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ya.\n       ya < y \\<Longrightarrow>\n       lookup (except s {x}) ya = lookup (except t {x}) ya", "assume \"z < y\""], ["proof (state)\nthis:\n  z < y\n\ngoal (1 subgoal):\n 1. \\<And>ya.\n       ya < y \\<Longrightarrow>\n       lookup (except s {x}) ya = lookup (except t {x}) ya", "hence \"z < x\""], ["proof (prove)\nusing this:\n  z < y\n\ngoal (1 subgoal):\n 1. z < x", "using \\<open>y < x\\<close>"], ["proof (prove)\nusing this:\n  z < y\n  y < x\n\ngoal (1 subgoal):\n 1. z < x", "by (rule less_trans)"], ["proof (state)\nthis:\n  z < x\n\ngoal (1 subgoal):\n 1. \\<And>ya.\n       ya < y \\<Longrightarrow>\n       lookup (except s {x}) ya = lookup (except t {x}) ya", "with \\<open>z < y\\<close>"], ["proof (chain)\npicking this:\n  z < y\n  z < x", "show \"lookup (except s {x}) z = lookup (except t {x}) z\""], ["proof (prove)\nusing this:\n  z < y\n  z < x\n\ngoal (1 subgoal):\n 1. lookup (except s {x}) z = lookup (except t {x}) z", "by (simp add: lookup_except eq)"], ["proof (state)\nthis:\n  lookup (except s {x}) z = lookup (except t {x}) z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lex_pm (except s {x}) (except t {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lex_pm (except s {x}) (except t {x})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lex_pm (except s {x}) (except t {x})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lex_pm_strict_plus_left:\n  assumes \"lex_pm_strict s t\" and \"\\<And>x y. x \\<in> keys t \\<Longrightarrow> y \\<in> keys u \\<Longrightarrow> x < y\"\n  shows \"lex_pm_strict (u + s) (t::_ \\<Rightarrow>\\<^sub>0 'a::add_linorder_min)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lex_pm_strict (u + s) t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lex_pm_strict (u + s) t", "from assms(1)"], ["proof (chain)\npicking this:\n  lex_pm_strict s t", "obtain x where 1: \"lookup s x < lookup t x\" and 2: \"\\<And>y. y < x \\<Longrightarrow> lookup s y = lookup t y\""], ["proof (prove)\nusing this:\n  lex_pm_strict s t\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>lookup s x < lookup t x;\n         \\<And>y. y < x \\<Longrightarrow> lookup s y = lookup t y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: lex_pm_strict_def less_poly_mapping_def less_fun_def)"], ["proof (state)\nthis:\n  lookup s x < lookup t x\n  ?y < x \\<Longrightarrow> lookup s ?y = lookup t ?y\n\ngoal (1 subgoal):\n 1. lex_pm_strict (u + s) t", "from 1"], ["proof (chain)\npicking this:\n  lookup s x < lookup t x", "have \"x \\<in> keys t\""], ["proof (prove)\nusing this:\n  lookup s x < lookup t x\n\ngoal (1 subgoal):\n 1. x \\<in> keys t", "by (auto simp flip: lookup_not_eq_zero_eq_in_keys)"], ["proof (state)\nthis:\n  x \\<in> keys t\n\ngoal (1 subgoal):\n 1. lex_pm_strict (u + s) t", "have lookup_u: \"lookup u z = 0\" if \"z \\<le> x\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup u z = (0::'a)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. lookup u z \\<noteq> (0::'a) \\<Longrightarrow> False", "assume \"lookup u z \\<noteq> 0\""], ["proof (state)\nthis:\n  lookup u z \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. lookup u z \\<noteq> (0::'a) \\<Longrightarrow> False", "hence \"z \\<in> keys u\""], ["proof (prove)\nusing this:\n  lookup u z \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. z \\<in> keys u", "by (simp add: in_keys_iff)"], ["proof (state)\nthis:\n  z \\<in> keys u\n\ngoal (1 subgoal):\n 1. lookup u z \\<noteq> (0::'a) \\<Longrightarrow> False", "with \\<open>x \\<in> keys t\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> keys t\n  z \\<in> keys u", "have \"x < z\""], ["proof (prove)\nusing this:\n  x \\<in> keys t\n  z \\<in> keys u\n\ngoal (1 subgoal):\n 1. x < z", "by (rule assms(2))"], ["proof (state)\nthis:\n  x < z\n\ngoal (1 subgoal):\n 1. lookup u z \\<noteq> (0::'a) \\<Longrightarrow> False", "with that"], ["proof (chain)\npicking this:\n  z \\<le> x\n  x < z", "show False"], ["proof (prove)\nusing this:\n  z \\<le> x\n  x < z\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?z \\<le> x \\<Longrightarrow> lookup u ?z = (0::'a)\n\ngoal (1 subgoal):\n 1. lex_pm_strict (u + s) t", "from 1"], ["proof (chain)\npicking this:\n  lookup s x < lookup t x", "have \"lookup (u + s) x < lookup t x\""], ["proof (prove)\nusing this:\n  lookup s x < lookup t x\n\ngoal (1 subgoal):\n 1. lookup (u + s) x < lookup t x", "by (simp add: lookup_add lookup_u)"], ["proof (state)\nthis:\n  lookup (u + s) x < lookup t x\n\ngoal (1 subgoal):\n 1. lex_pm_strict (u + s) t", "moreover"], ["proof (state)\nthis:\n  lookup (u + s) x < lookup t x\n\ngoal (1 subgoal):\n 1. lex_pm_strict (u + s) t", "have \"lookup (u + s) y = lookup t y\" if \"y < x\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup (u + s) y = lookup t y", "using that"], ["proof (prove)\nusing this:\n  y < x\n\ngoal (1 subgoal):\n 1. lookup (u + s) y = lookup t y", "by (simp add: lookup_add 2 lookup_u)"], ["proof (state)\nthis:\n  ?y < x \\<Longrightarrow> lookup (u + s) ?y = lookup t ?y\n\ngoal (1 subgoal):\n 1. lex_pm_strict (u + s) t", "ultimately"], ["proof (chain)\npicking this:\n  lookup (u + s) x < lookup t x\n  ?y < x \\<Longrightarrow> lookup (u + s) ?y = lookup t ?y", "show ?thesis"], ["proof (prove)\nusing this:\n  lookup (u + s) x < lookup t x\n  ?y < x \\<Longrightarrow> lookup (u + s) ?y = lookup t ?y\n\ngoal (1 subgoal):\n 1. lex_pm_strict (u + s) t", "by (auto simp: lex_pm_strict_def less_poly_mapping_def less_fun_def)"], ["proof (state)\nthis:\n  lex_pm_strict (u + s) t\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* theory *)"]]}