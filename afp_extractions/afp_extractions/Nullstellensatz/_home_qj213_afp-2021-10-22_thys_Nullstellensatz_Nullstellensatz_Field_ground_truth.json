{"file_name": "/home/qj213/afp-2021-10-22/thys/Nullstellensatz/Nullstellensatz_Field.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Nullstellensatz", "problem_names": ["lemmas radical_idealI_internalized = radical_idealI[unoverload_type 'x]", "lemma radical_idealI:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\" and \"f \\<in> P[X]\" and \"x \\<notin> X\"\n    and \"\\<V> (insert (1 - punit.monom_mult 1 (Poly_Mapping.single x 1) f) F) = {}\"\n  shows \"(f::('x \\<Rightarrow>\\<^sub>0 nat) \\<Rightarrow>\\<^sub>0 'a::alg_closed_field) \\<in> \\<surd>ideal F\"", "theorem Nullstellensatz:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\"\n    and \"(f::_ \\<Rightarrow>\\<^sub>0 _::alg_closed_field) \\<in> \\<I> (\\<V> F)\"\n  shows \"f \\<in> \\<surd>ideal F\"", "theorem strong_Nullstellensatz:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\"\n  shows \"\\<I> (\\<V> F) = \\<surd>ideal (F::(_ \\<Rightarrow>\\<^sub>0 _::alg_closed_field) set)\"", "theorem weak_Nullstellensatz:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\" and \"\\<V> F = ({}::(_ \\<Rightarrow> _::alg_closed_field) set)\"\n  shows \"ideal F = UNIV\"", "lemma radical_ideal_iff:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\" and \"f \\<in> P[X]\" and \"x \\<notin> X\"\n  shows \"(f::_ \\<Rightarrow>\\<^sub>0 _::alg_closed_field) \\<in> \\<surd>ideal F \\<longleftrightarrow>\n            1 \\<in> ideal (insert (1 - punit.monom_mult 1 (Poly_Mapping.single x 1) f) F)\"", "lemma generates_max_idealI:\n  assumes \"ideal F \\<noteq> UNIV\" and \"\\<And>F'. F' \\<subseteq> P[X] \\<Longrightarrow> ideal F \\<subset> ideal F' \\<Longrightarrow> ideal F' = UNIV\"\n  shows \"generates_max_ideal X F\"", "lemma generates_max_idealI_alt:\n  assumes \"ideal F \\<noteq> UNIV\" and \"\\<And>p. p \\<in> P[X] \\<Longrightarrow> p \\<notin> ideal F \\<Longrightarrow> 1 \\<in> ideal (insert p F)\"\n  shows \"generates_max_ideal X F\"", "lemma generates_max_idealD:\n  assumes \"generates_max_ideal X F\"\n  shows \"ideal F \\<noteq> UNIV\" and \"F' \\<subseteq> P[X] \\<Longrightarrow> ideal F \\<subset> ideal F' \\<Longrightarrow> ideal F' = UNIV\"", "lemma generates_max_ideal_cases:\n  assumes \"generates_max_ideal X F\" and \"F' \\<subseteq> P[X]\" and \"ideal F \\<subseteq> ideal F'\"\n  obtains \"ideal F = ideal F'\" | \"ideal F' = UNIV\"", "lemma max_ideal_UNIV_radical:\n  assumes \"generates_max_ideal UNIV F\"\n  shows \"\\<surd>ideal F = ideal F\"", "lemma max_ideal_shape_aux:\n  \"(\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial (a x) 0) ` X \\<subseteq> P[X]\"", "lemma max_ideal_shapeI:\n  \"generates_max_ideal X ((\\<lambda>x. monomial (1::'a::field) (Poly_Mapping.single x 1) - monomial (a x) 0) ` X)\"\n    (is \"generates_max_ideal X ?F\")", "lemma max_ideal_shapeD_finite:\n  assumes \"generates_max_ideal UNIV (F::(('x::finite \\<Rightarrow>\\<^sub>0 nat) \\<Rightarrow>\\<^sub>0 'a::alg_closed_field) set)\"\n  obtains a where \"ideal F = ideal (range (\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial (a x) 0))\"", "lemmas max_ideal_shapeD_internalized = max_ideal_shapeD_finite[unoverload_type 'x]", "lemma max_ideal_shapeD:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\"\n    and \"generates_max_ideal X (F::(('x \\<Rightarrow>\\<^sub>0 nat) \\<Rightarrow>\\<^sub>0 'a::alg_closed_field) set)\"\n  obtains a where \"ideal F = ideal ((\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial (a x) 0) ` X)\"", "theorem Nullstellensatz_field:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\" and \"generates_max_ideal X (F::(_ \\<Rightarrow>\\<^sub>0 _::alg_closed_field) set)\"\n    and \"x \\<in> X\"\n  shows \"{0} \\<subset> ideal F \\<inter> P[{x}]\""], "translations": [["", "lemmas radical_idealI_internalized = radical_idealI[unoverload_type 'x]"], ["", "lemma radical_idealI:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\" and \"f \\<in> P[X]\" and \"x \\<notin> X\"\n    and \"\\<V> (insert (1 - punit.monom_mult 1 (Poly_Mapping.single x 1) f) F) = {}\"\n  shows \"(f::('x \\<Rightarrow>\\<^sub>0 nat) \\<Rightarrow>\\<^sub>0 'a::alg_closed_field) \\<in> \\<surd>ideal F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "define Y where \"Y = insert x X\""], ["proof (state)\nthis:\n  Y = insert x X\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from assms(1)"], ["proof (chain)\npicking this:\n  finite X", "have fin_Y: \"finite Y\""], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. finite Y", "by (simp add: Y_def)"], ["proof (state)\nthis:\n  finite Y\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"X \\<subseteq> Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<subseteq> Y", "by (auto simp: Y_def)"], ["proof (state)\nthis:\n  X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "hence \"P[X] \\<subseteq> P[Y]\""], ["proof (prove)\nusing this:\n  X \\<subseteq> Y\n\ngoal (1 subgoal):\n 1. P[X] \\<subseteq> P[Y]", "by (rule Polys_mono)"], ["proof (state)\nthis:\n  P[X] \\<subseteq> P[Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "with assms(2, 3)"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[X]\n  f \\<in> P[X]\n  P[X] \\<subseteq> P[Y]", "have F_sub: \"F \\<subseteq> P[Y]\" and \"f \\<in> P[Y]\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[X]\n  f \\<in> P[X]\n  P[X] \\<subseteq> P[Y]\n\ngoal (1 subgoal):\n 1. F \\<subseteq> P[Y] &&& f \\<in> P[Y]", "by auto"], ["proof (state)\nthis:\n  F \\<subseteq> P[Y]\n  f \\<in> P[Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "{"], ["proof (state)\nthis:\n  F \\<subseteq> P[Y]\n  f \\<in> P[Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "text \\<open>We define the type @{typ 'y} to be isomorphic to @{term Y}.\\<close>"], ["proof (state)\nthis:\n  F \\<subseteq> P[Y]\n  f \\<in> P[Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "assume \"\\<exists>(Rep :: 'y \\<Rightarrow> 'x) Abs. type_definition Rep Abs Y\""], ["proof (state)\nthis:\n  \\<exists>Rep Abs. type_definition Rep Abs Y\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "then"], ["proof (chain)\npicking this:\n  \\<exists>Rep Abs. type_definition Rep Abs Y", "obtain rep :: \"'y \\<Rightarrow> 'x\" and abs :: \"'x \\<Rightarrow> 'y\" where t: \"type_definition rep abs Y\""], ["proof (prove)\nusing this:\n  \\<exists>Rep Abs. type_definition Rep Abs Y\n\ngoal (1 subgoal):\n 1. (\\<And>rep abs.\n        type_definition rep abs Y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  type_definition rep abs Y\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "then"], ["proof (chain)\npicking this:\n  type_definition rep abs Y", "interpret y: type_definition rep abs Y"], ["proof (prove)\nusing this:\n  type_definition rep abs Y\n\ngoal (1 subgoal):\n 1. type_definition rep abs Y", "."], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from well_ordering"], ["proof (chain)\npicking this:\n  \\<exists>r. Well_order r \\<and> Field r = UNIV", "obtain le_y'::\"('y \\<times> 'y) set\" where fld: \"Field le_y' = UNIV\"\n      and wo: \"Well_order le_y'\""], ["proof (prove)\nusing this:\n  \\<exists>r. Well_order r \\<and> Field r = UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>le_y'.\n        \\<lbrakk>Field le_y' = UNIV; Well_order le_y'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by meson"], ["proof (state)\nthis:\n  Field le_y' = UNIV\n  Well_order le_y'\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "define le_y where \"le_y = (\\<lambda>a b::'y. (a, b) \\<in> le_y')\""], ["proof (state)\nthis:\n  le_y = (\\<lambda>a b. (a, b) \\<in> le_y')\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from \\<open>f \\<in> P[Y]\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> P[Y]", "have 0: \"map_indets rep (map_indets abs f) = f\""], ["proof (prove)\nusing this:\n  f \\<in> P[Y]\n\ngoal (1 subgoal):\n 1. map_indets rep (map_indets abs f) = f", "unfolding map_indets_map_indets"], ["proof (prove)\nusing this:\n  f \\<in> P[Y]\n\ngoal (1 subgoal):\n 1. map_indets (rep \\<circ> abs) f = f", "by (intro map_indets_id) (auto intro!: y.Abs_inverse dest: PolysD)"], ["proof (state)\nthis:\n  map_indets rep (map_indets abs f) = f\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have 1: \"map_indets (rep \\<circ> abs) ` F = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_indets (rep \\<circ> abs) ` F = F", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. map_indets (rep \\<circ> abs) ` F \\<subseteq> F\n 2. F \\<subseteq> map_indets (rep \\<circ> abs) ` F", "from F_sub"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[Y]", "show \"map_indets (rep \\<circ> abs) ` F \\<subseteq> F\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[Y]\n\ngoal (1 subgoal):\n 1. map_indets (rep \\<circ> abs) ` F \\<subseteq> F", "by (smt PolysD(2) comp_apply image_subset_iff map_indets_id subsetD y.Abs_inverse)"], ["proof (state)\nthis:\n  map_indets (rep \\<circ> abs) ` F \\<subseteq> F\n\ngoal (1 subgoal):\n 1. F \\<subseteq> map_indets (rep \\<circ> abs) ` F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<subseteq> map_indets (rep \\<circ> abs) ` F", "from F_sub"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[Y]", "show \"F \\<subseteq> map_indets (rep \\<circ> abs) ` F\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[Y]\n\ngoal (1 subgoal):\n 1. F \\<subseteq> map_indets (rep \\<circ> abs) ` F", "by (smt PolysD(2) comp_apply image_eqI map_indets_id subsetD subsetI y.Abs_inverse)"], ["proof (state)\nthis:\n  F \\<subseteq> map_indets (rep \\<circ> abs) ` F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  map_indets (rep \\<circ> abs) ` F = F\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have 2: \"inj rep\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj rep", "by (meson inj_onI y.Rep_inject)"], ["proof (state)\nthis:\n  inj rep\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "hence 3: \"inj (map_indets rep)\""], ["proof (prove)\nusing this:\n  inj rep\n\ngoal (1 subgoal):\n 1. inj (map_indets rep)", "by (rule map_indets_injI)"], ["proof (state)\nthis:\n  inj (map_indets rep)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from fin_Y"], ["proof (chain)\npicking this:\n  finite Y", "have 4: \"finite (abs ` Y)\""], ["proof (prove)\nusing this:\n  finite Y\n\ngoal (1 subgoal):\n 1. finite (abs ` Y)", "by (rule finite_imageI)"], ["proof (state)\nthis:\n  finite (abs ` Y)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from wo"], ["proof (chain)\npicking this:\n  Well_order le_y'", "have le_y_refl: \"le_y x x\" for x"], ["proof (prove)\nusing this:\n  Well_order le_y'\n\ngoal (1 subgoal):\n 1. le_y x x", "by (simp add: le_y_def well_order_on_def linear_order_on_def partial_order_on_def\n                    preorder_on_def refl_on_def fld)"], ["proof (state)\nthis:\n  le_y ?x3 ?x3\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have le_y_total: \"le_y x y \\<or> le_y y x\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. le_y x y \\<or> le_y y x", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> le_y x y \\<or> le_y y x\n 2. x \\<noteq> y \\<Longrightarrow> le_y x y \\<or> le_y y x", "case True"], ["proof (state)\nthis:\n  x = y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow> le_y x y \\<or> le_y y x\n 2. x \\<noteq> y \\<Longrightarrow> le_y x y \\<or> le_y y x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = y\n\ngoal (1 subgoal):\n 1. le_y x y \\<or> le_y y x", "by (simp add: le_y_refl)"], ["proof (state)\nthis:\n  le_y x y \\<or> le_y y x\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> le_y x y \\<or> le_y y x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> le_y x y \\<or> le_y y x", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow> le_y x y \\<or> le_y y x", "with wo"], ["proof (chain)\npicking this:\n  Well_order le_y'\n  x \\<noteq> y", "show ?thesis"], ["proof (prove)\nusing this:\n  Well_order le_y'\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. le_y x y \\<or> le_y y x", "by (simp add: le_y_def well_order_on_def linear_order_on_def total_on_def\n                      Relation.total_on_def fld)"], ["proof (state)\nthis:\n  le_y x y \\<or> le_y y x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  le_y ?x3 ?y3 \\<or> le_y ?y3 ?x3\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from 4 finite_imp_inj_to_nat_seg y.Abs_image"], ["proof (chain)\npicking this:\n  finite (abs ` Y)\n  finite ?A \\<Longrightarrow>\n  \\<exists>f n. f ` ?A = {i. i < n} \\<and> inj_on f ?A\n  abs ` Y = UNIV", "have \"class.countable TYPE('y)\""], ["proof (prove)\nusing this:\n  finite (abs ` Y)\n  finite ?A \\<Longrightarrow>\n  \\<exists>f n. f ` ?A = {i. i < n} \\<and> inj_on f ?A\n  abs ` Y = UNIV\n\ngoal (1 subgoal):\n 1. class.countable TYPE('y)", "by unfold_locales fastforce"], ["proof (state)\nthis:\n  class.countable TYPE('y)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  class.countable TYPE('y)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"class.linorder le_y (strict le_y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.linorder le_y (strict le_y)", "apply standard"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y. strict le_y x y = strict le_y x y\n 2. \\<And>x. le_y x x\n 3. \\<And>x y z.\n       \\<lbrakk>le_y x y; le_y y z\\<rbrakk> \\<Longrightarrow> le_y x z\n 4. \\<And>x y. \\<lbrakk>le_y x y; le_y y x\\<rbrakk> \\<Longrightarrow> x = y\n 5. \\<And>x y. le_y x y \\<or> le_y y x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. strict le_y x_ y_ = strict le_y x_ y_", "by (fact refl)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x. le_y x x\n 2. \\<And>x y z.\n       \\<lbrakk>le_y x y; le_y y z\\<rbrakk> \\<Longrightarrow> le_y x z\n 3. \\<And>x y. \\<lbrakk>le_y x y; le_y y x\\<rbrakk> \\<Longrightarrow> x = y\n 4. \\<And>x y. le_y x y \\<or> le_y y x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. le_y x_ x_", "by (fact le_y_refl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>le_y x y; le_y y z\\<rbrakk> \\<Longrightarrow> le_y x z\n 2. \\<And>x y. \\<lbrakk>le_y x y; le_y y x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. le_y x y \\<or> le_y y x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le_y x_ y_; le_y y_ z_\\<rbrakk> \\<Longrightarrow> le_y x_ z_", "using wo"], ["proof (prove)\nusing this:\n  Well_order le_y'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>le_y x_ y_; le_y y_ z_\\<rbrakk> \\<Longrightarrow> le_y x_ z_", "by (auto simp: le_y_def well_order_on_def linear_order_on_def partial_order_on_def\n                      preorder_on_def fld dest: transD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y. \\<lbrakk>le_y x y; le_y y x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. le_y x y \\<or> le_y y x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>le_y x_ y_; le_y y_ x_\\<rbrakk> \\<Longrightarrow> x_ = y_", "using wo"], ["proof (prove)\nusing this:\n  Well_order le_y'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>le_y x_ y_; le_y y_ x_\\<rbrakk> \\<Longrightarrow> x_ = y_", "by (simp add: le_y_def well_order_on_def linear_order_on_def partial_order_on_def\n                      preorder_on_def antisym_def fld)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. le_y x y \\<or> le_y y x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. le_y x_ y_ \\<or> le_y y_ x_", "by (fact le_y_total)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  class.linorder le_y (strict le_y)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  class.linorder le_y (strict le_y)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from assms(1)"], ["proof (chain)\npicking this:\n  finite X", "have \"finite (abs ` X)\""], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. finite (abs ` X)", "by (rule finite_imageI)"], ["proof (state)\nthis:\n  finite (abs ` X)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  finite (abs ` X)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"map_indets abs ` F \\<subseteq> P[abs ` X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_indets abs ` F \\<subseteq> P[abs ` X]", "proof (rule subset_trans)"], ["proof (state)\ngoal (2 subgoals):\n 1. map_indets abs ` F \\<subseteq> ?B\n 2. ?B \\<subseteq> P[abs ` X]", "from assms(2)"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[X]", "show \"map_indets abs ` F \\<subseteq> map_indets abs ` P[X]\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. map_indets abs ` F \\<subseteq> map_indets abs ` P[X]", "by (rule image_mono)"], ["proof (state)\nthis:\n  map_indets abs ` F \\<subseteq> map_indets abs ` P[X]\n\ngoal (1 subgoal):\n 1. map_indets abs ` P[X] \\<subseteq> P[abs ` X]", "qed (simp only: image_map_indets_Polys)"], ["proof (state)\nthis:\n  map_indets abs ` F \\<subseteq> P[abs ` X]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  map_indets abs ` F \\<subseteq> P[abs ` X]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"map_indets abs f \\<in> P[abs ` X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_indets abs f \\<in> P[abs ` X]", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. map_indets abs f \\<in> ?A\n 2. ?A \\<subseteq> P[abs ` X]", "from assms(3)"], ["proof (chain)\npicking this:\n  f \\<in> P[X]", "show \"map_indets abs f \\<in> map_indets abs ` P[X]\""], ["proof (prove)\nusing this:\n  f \\<in> P[X]\n\ngoal (1 subgoal):\n 1. map_indets abs f \\<in> map_indets abs ` P[X]", "by (rule imageI)"], ["proof (state)\nthis:\n  map_indets abs f \\<in> map_indets abs ` P[X]\n\ngoal (1 subgoal):\n 1. map_indets abs ` P[X] \\<subseteq> P[abs ` X]", "qed (simp only: image_map_indets_Polys)"], ["proof (state)\nthis:\n  map_indets abs f \\<in> P[abs ` X]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  map_indets abs f \\<in> P[abs ` X]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from assms(4) y.Abs_inject"], ["proof (chain)\npicking this:\n  x \\<notin> X\n  \\<lbrakk>?x \\<in> Y; ?y \\<in> Y\\<rbrakk>\n  \\<Longrightarrow> (abs ?x = abs ?y) = (?x = ?y)", "have \"abs x \\<notin> abs ` X\""], ["proof (prove)\nusing this:\n  x \\<notin> X\n  \\<lbrakk>?x \\<in> Y; ?y \\<in> Y\\<rbrakk>\n  \\<Longrightarrow> (abs ?x = abs ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. abs x \\<notin> abs ` X", "unfolding Y_def"], ["proof (prove)\nusing this:\n  x \\<notin> X\n  \\<lbrakk>?x \\<in> insert x X; ?y \\<in> insert x X\\<rbrakk>\n  \\<Longrightarrow> (abs ?x = abs ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. abs x \\<notin> abs ` X", "by blast"], ["proof (state)\nthis:\n  abs x \\<notin> abs ` X\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  abs x \\<notin> abs ` X\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"\\<V> (insert (1 - punit.monom_mult 1 (Poly_Mapping.single (abs x) (Suc 0))\n                                    (map_indets abs f)) (map_indets abs ` F)) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<V>\n     (insert\n       (1 -\n        punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n         (map_indets abs f))\n       (map_indets abs ` F)) =\n    {}", "proof (intro set_eqI iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F)) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F))", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F)) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F))", "assume \"a \\<in> \\<V> (insert (1 - punit.monom_mult 1 (Poly_Mapping.single (abs x) (Suc 0))\n                                    (map_indets abs f)) (map_indets abs ` F))\""], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           (insert\n             (1 -\n              punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n               (map_indets abs f))\n             (map_indets abs ` F))\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F)) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F))", "also"], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           (insert\n             (1 -\n              punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n               (map_indets abs f))\n             (map_indets abs ` F))\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F)) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F))", "have \"\\<dots> = (\\<lambda>b. b \\<circ> abs) -` \\<V> (insert (1 - punit.monom_mult 1 (Poly_Mapping.single x 1) f) F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<V>\n     (insert\n       (1 -\n        punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n         (map_indets abs f))\n       (map_indets abs ` F)) =\n    (\\<lambda>b. b \\<circ> abs) -`\n    \\<V> (insert (1 - punit.monom_mult (1::'a) (monomial 1 x) f) F)", "by (simp add: map_indets_minus map_indets_times map_indets_monomial\n                flip: variety_of_map_indets times_monomial_left)"], ["proof (state)\nthis:\n  \\<V>\n   (insert\n     (1 -\n      punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n       (map_indets abs f))\n     (map_indets abs ` F)) =\n  (\\<lambda>b. b \\<circ> abs) -`\n  \\<V> (insert (1 - punit.monom_mult (1::'a) (monomial 1 x) f) F)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F)) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F))", "finally"], ["proof (chain)\npicking this:\n  a \\<in> (\\<lambda>b. b \\<circ> abs) -`\n          \\<V> (insert (1 - punit.monom_mult (1::'a) (monomial 1 x) f) F)", "show \"a \\<in> {}\""], ["proof (prove)\nusing this:\n  a \\<in> (\\<lambda>b. b \\<circ> abs) -`\n          \\<V> (insert (1 - punit.monom_mult (1::'a) (monomial 1 x) f) F)\n\ngoal (1 subgoal):\n 1. a \\<in> {}", "by (simp only: assms(5) vimage_empty)"], ["proof (state)\nthis:\n  a \\<in> {}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert\n                   (1 -\n                    punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n                     (map_indets abs f))\n                   (map_indets abs ` F))", "qed simp"], ["proof (state)\nthis:\n  \\<V>\n   (insert\n     (1 -\n      punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n       (map_indets abs f))\n     (map_indets abs ` F)) =\n  {}\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "ultimately"], ["proof (chain)\npicking this:\n  class.countable TYPE('y)\n  class.linorder le_y (strict le_y)\n  finite (abs ` X)\n  map_indets abs ` F \\<subseteq> P[abs ` X]\n  map_indets abs f \\<in> P[abs ` X]\n  abs x \\<notin> abs ` X\n  \\<V>\n   (insert\n     (1 -\n      punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n       (map_indets abs f))\n     (map_indets abs ` F)) =\n  {}", "have \"map_indets abs f \\<in> \\<surd>ideal (map_indets abs ` F)\""], ["proof (prove)\nusing this:\n  class.countable TYPE('y)\n  class.linorder le_y (strict le_y)\n  finite (abs ` X)\n  map_indets abs ` F \\<subseteq> P[abs ` X]\n  map_indets abs f \\<in> P[abs ` X]\n  abs x \\<notin> abs ` X\n  \\<V>\n   (insert\n     (1 -\n      punit.monom_mult (1::'a) (monomial (Suc 0) (abs x))\n       (map_indets abs f))\n     (map_indets abs ` F)) =\n  {}\n\ngoal (1 subgoal):\n 1. map_indets abs f \\<in> \\<surd>ideal (map_indets abs ` F)", "by (rule radical_idealI_internalized[where 'x='y, untransferred, simplified])"], ["proof (state)\nthis:\n  map_indets abs f \\<in> \\<surd>ideal (map_indets abs ` F)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "hence \"map_indets rep (map_indets abs f) \\<in> map_indets rep ` \\<surd>ideal (map_indets abs ` F)\""], ["proof (prove)\nusing this:\n  map_indets abs f \\<in> \\<surd>ideal (map_indets abs ` F)\n\ngoal (1 subgoal):\n 1. map_indets rep (map_indets abs f)\n    \\<in> map_indets rep ` \\<surd>ideal (map_indets abs ` F)", "by (rule imageI)"], ["proof (state)\nthis:\n  map_indets rep (map_indets abs f)\n  \\<in> map_indets rep ` \\<surd>ideal (map_indets abs ` F)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "also"], ["proof (state)\nthis:\n  map_indets rep (map_indets abs f)\n  \\<in> map_indets rep ` \\<surd>ideal (map_indets abs ` F)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from 2"], ["proof (chain)\npicking this:\n  inj rep", "have \"\\<dots> = \\<surd>(ideal F \\<inter> P[Y]) \\<inter> P[Y]\""], ["proof (prove)\nusing this:\n  inj rep\n\ngoal (1 subgoal):\n 1. map_indets rep ` \\<surd>ideal (map_indets abs ` F) =\n    \\<surd>(ideal F \\<inter> P[Y]) \\<inter> P[Y]", "by (simp add: image_map_indets_ideal image_map_indets_radical image_image map_indets_map_indets\n                    1 y.Rep_range)"], ["proof (state)\nthis:\n  map_indets rep ` \\<surd>ideal (map_indets abs ` F) =\n  \\<surd>(ideal F \\<inter> P[Y]) \\<inter> P[Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "also"], ["proof (state)\nthis:\n  map_indets rep ` \\<surd>ideal (map_indets abs ` F) =\n  \\<surd>(ideal F \\<inter> P[Y]) \\<inter> P[Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"\\<dots> \\<subseteq> \\<surd>ideal F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<surd>(ideal F \\<inter> P[Y]) \\<inter> P[Y] \\<subseteq> \\<surd>ideal F", "using radical_mono"], ["proof (prove)\nusing this:\n  ?F \\<subseteq> ?G \\<Longrightarrow> \\<surd>?F \\<subseteq> \\<surd>?G\n\ngoal (1 subgoal):\n 1. \\<surd>(ideal F \\<inter> P[Y]) \\<inter> P[Y] \\<subseteq> \\<surd>ideal F", "by blast"], ["proof (state)\nthis:\n  \\<surd>(ideal F \\<inter> P[Y]) \\<inter> P[Y] \\<subseteq> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "finally"], ["proof (chain)\npicking this:\n  map_indets rep (map_indets abs f) \\<in> \\<surd>ideal F", "have ?thesis"], ["proof (prove)\nusing this:\n  map_indets rep (map_indets abs f) \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "by (simp only: 0)"], ["proof (state)\nthis:\n  f \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "}"], ["proof (state)\nthis:\n  \\<exists>Rep Abs. type_definition Rep Abs Y \\<Longrightarrow>\n  f \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "note rl = this[cancel_type_definition]"], ["proof (state)\nthis:\n  Y \\<noteq> {} \\<Longrightarrow> f \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"Y \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y \\<noteq> {}", "by (simp add: Y_def)"], ["proof (state)\nthis:\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "thus ?thesis"], ["proof (prove)\nusing this:\n  Y \\<noteq> {}\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "by (rule rl)"], ["proof (state)\nthis:\n  f \\<in> \\<surd>ideal F\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary radical_idealI_extend_indets:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\"\n    and \"\\<V> (insert (1 - punit.monom_mult 1 (Poly_Mapping.single None 1) (extend_indets f))\n                            (extend_indets ` F)) = {}\"\n  shows \"(f::_ \\<Rightarrow>\\<^sub>0 _::alg_closed_field) \\<in> \\<surd>ideal F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "define Y where \"Y = X \\<union> indets f\""], ["proof (state)\nthis:\n  Y = X \\<union> indets f\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from assms(1)"], ["proof (chain)\npicking this:\n  finite X", "have fin_Y: \"finite Y\""], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. finite Y", "by (simp add: Y_def finite_indets)"], ["proof (state)\nthis:\n  finite Y\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"P[X] \\<subseteq> P[Y]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P[X] \\<subseteq> P[Y]", "by (rule Polys_mono) (simp add: Y_def)"], ["proof (state)\nthis:\n  P[X] \\<subseteq> P[Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "with assms(2)"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[X]\n  P[X] \\<subseteq> P[Y]", "have F_sub: \"F \\<subseteq> P[Y]\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[X]\n  P[X] \\<subseteq> P[Y]\n\ngoal (1 subgoal):\n 1. F \\<subseteq> P[Y]", "by (rule subset_trans)"], ["proof (state)\nthis:\n  F \\<subseteq> P[Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have f_in: \"f \\<in> P[Y]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> P[Y]", "by (simp add: Y_def Polys_alt)"], ["proof (state)\nthis:\n  f \\<in> P[Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "let ?F = \"extend_indets ` F\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "let ?f = \"extend_indets f\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "let ?X = \"Some ` Y\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from fin_Y"], ["proof (chain)\npicking this:\n  finite Y", "have \"finite ?X\""], ["proof (prove)\nusing this:\n  finite Y\n\ngoal (1 subgoal):\n 1. finite (Some ` Y)", "by (rule finite_imageI)"], ["proof (state)\nthis:\n  finite (Some ` Y)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  finite (Some ` Y)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from F_sub"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[Y]", "have \"?F \\<subseteq> P[?X]\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[Y]\n\ngoal (1 subgoal):\n 1. extend_indets ` F \\<subseteq> P[Some ` Y]", "by (auto simp: indets_extend_indets intro!: PolysI_alt imageI dest!: PolysD(2) subsetD[of F])"], ["proof (state)\nthis:\n  extend_indets ` F \\<subseteq> P[Some ` Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  extend_indets ` F \\<subseteq> P[Some ` Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "from f_in"], ["proof (chain)\npicking this:\n  f \\<in> P[Y]", "have \"?f \\<in> P[?X]\""], ["proof (prove)\nusing this:\n  f \\<in> P[Y]\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> P[Some ` Y]", "by (auto simp: indets_extend_indets intro!: PolysI_alt imageI dest!: PolysD(2))"], ["proof (state)\nthis:\n  extend_indets f \\<in> P[Some ` Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  extend_indets f \\<in> P[Some ` Y]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"None \\<notin> ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. None \\<notin> Some ` Y", "by simp"], ["proof (state)\nthis:\n  None \\<notin> Some ` Y\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "ultimately"], ["proof (chain)\npicking this:\n  finite (Some ` Y)\n  extend_indets ` F \\<subseteq> P[Some ` Y]\n  extend_indets f \\<in> P[Some ` Y]\n  None \\<notin> Some ` Y", "have \"?f \\<in> \\<surd>ideal ?F\""], ["proof (prove)\nusing this:\n  finite (Some ` Y)\n  extend_indets ` F \\<subseteq> P[Some ` Y]\n  extend_indets f \\<in> P[Some ` Y]\n  None \\<notin> Some ` Y\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)", "using assms(3)"], ["proof (prove)\nusing this:\n  finite (Some ` Y)\n  extend_indets ` F \\<subseteq> P[Some ` Y]\n  extend_indets f \\<in> P[Some ` Y]\n  None \\<notin> Some ` Y\n  \\<V>\n   (insert\n     (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n     (extend_indets ` F)) =\n  {}\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)", "by (rule radical_idealI)"], ["proof (state)\nthis:\n  extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "also"], ["proof (state)\nthis:\n  extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "have \"?f \\<in> \\<surd>ideal ?F \\<longleftrightarrow> f \\<in> \\<surd>ideal F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)) =\n    (f \\<in> \\<surd>ideal F)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F\n 2. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)", "assume \"f \\<in> \\<surd>ideal F\""], ["proof (state)\nthis:\n  f \\<in> \\<surd>ideal F\n\ngoal (2 subgoals):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F\n 2. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)", "then"], ["proof (chain)\npicking this:\n  f \\<in> \\<surd>ideal F", "obtain m where \"f ^ m \\<in> ideal F\""], ["proof (prove)\nusing this:\n  f \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        f ^ m \\<in> ideal F \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule radicalE)"], ["proof (state)\nthis:\n  f ^ m \\<in> ideal F\n\ngoal (2 subgoals):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F\n 2. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)", "hence \"extend_indets (f ^ m) \\<in> extend_indets ` ideal F\""], ["proof (prove)\nusing this:\n  f ^ m \\<in> ideal F\n\ngoal (1 subgoal):\n 1. extend_indets (f ^ m) \\<in> extend_indets ` ideal F", "by (rule imageI)"], ["proof (state)\nthis:\n  extend_indets (f ^ m) \\<in> extend_indets ` ideal F\n\ngoal (2 subgoals):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F\n 2. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)", "with extend_indets_ideal_subset"], ["proof (chain)\npicking this:\n  extend_indets ` ideal ?F \\<subseteq> ideal (extend_indets ` ?F)\n  extend_indets (f ^ m) \\<in> extend_indets ` ideal F", "have \"?f ^ m \\<in> ideal ?F\""], ["proof (prove)\nusing this:\n  extend_indets ` ideal ?F \\<subseteq> ideal (extend_indets ` ?F)\n  extend_indets (f ^ m) \\<in> extend_indets ` ideal F\n\ngoal (1 subgoal):\n 1. extend_indets f ^ m \\<in> ideal (extend_indets ` F)", "unfolding extend_indets_power"], ["proof (prove)\nusing this:\n  extend_indets ` ideal ?F \\<subseteq> ideal (extend_indets ` ?F)\n  extend_indets f ^ m \\<in> extend_indets ` ideal F\n\ngoal (1 subgoal):\n 1. extend_indets f ^ m \\<in> ideal (extend_indets ` F)", ".."], ["proof (state)\nthis:\n  extend_indets f ^ m \\<in> ideal (extend_indets ` F)\n\ngoal (2 subgoals):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F\n 2. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)", "thus \"?f \\<in> \\<surd>ideal ?F\""], ["proof (prove)\nusing this:\n  extend_indets f ^ m \\<in> ideal (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)", "by (rule radicalI)"], ["proof (state)\nthis:\n  extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "assume \"?f \\<in> \\<surd>ideal ?F\""], ["proof (state)\nthis:\n  extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "then"], ["proof (chain)\npicking this:\n  extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)", "obtain m where \"?f ^ m \\<in> ideal ?F\""], ["proof (prove)\nusing this:\n  extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        extend_indets f ^ m\n        \\<in> ideal (extend_indets ` F) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule radicalE)"], ["proof (state)\nthis:\n  extend_indets f ^ m \\<in> ideal (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  extend_indets f ^ m \\<in> ideal (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "have \"?f ^ m \\<in> P[- {None}]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extend_indets f ^ m \\<in> P[- {None}]", "by (rule Polys_closed_power) (auto intro!: PolysI_alt simp: indets_extend_indets)"], ["proof (state)\nthis:\n  extend_indets f ^ m \\<in> P[- {None}]\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "ultimately"], ["proof (chain)\npicking this:\n  extend_indets f ^ m \\<in> ideal (extend_indets ` F)\n  extend_indets f ^ m \\<in> P[- {None}]", "have \"extend_indets (f ^ m) \\<in> extend_indets ` ideal F\""], ["proof (prove)\nusing this:\n  extend_indets f ^ m \\<in> ideal (extend_indets ` F)\n  extend_indets f ^ m \\<in> P[- {None}]\n\ngoal (1 subgoal):\n 1. extend_indets (f ^ m) \\<in> extend_indets ` ideal F", "by (simp add: extend_indets_ideal extend_indets_power)"], ["proof (state)\nthis:\n  extend_indets (f ^ m) \\<in> extend_indets ` ideal F\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "hence \"f ^ m \\<in> ideal F\""], ["proof (prove)\nusing this:\n  extend_indets (f ^ m) \\<in> extend_indets ` ideal F\n\ngoal (1 subgoal):\n 1. f ^ m \\<in> ideal F", "by (simp only: inj_image_mem_iff[OF inj_extend_indets])"], ["proof (state)\nthis:\n  f ^ m \\<in> ideal F\n\ngoal (1 subgoal):\n 1. extend_indets f \\<in> \\<surd>ideal (extend_indets ` F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "thus \"f \\<in> \\<surd>ideal F\""], ["proof (prove)\nusing this:\n  f ^ m \\<in> ideal F\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "by (rule radicalI)"], ["proof (state)\nthis:\n  f \\<in> \\<surd>ideal F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (extend_indets f \\<in> \\<surd>ideal (extend_indets ` F)) =\n  (f \\<in> \\<surd>ideal F)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "finally"], ["proof (chain)\npicking this:\n  f \\<in> \\<surd>ideal F", "show ?thesis"], ["proof (prove)\nusing this:\n  f \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "."], ["proof (state)\nthis:\n  f \\<in> \\<surd>ideal F\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Nullstellensatz:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\"\n    and \"(f::_ \\<Rightarrow>\\<^sub>0 _::alg_closed_field) \\<in> \\<I> (\\<V> F)\"\n  shows \"f \\<in> \\<surd>ideal F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "using assms(1, 2)"], ["proof (prove)\nusing this:\n  finite X\n  F \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "proof (rule radical_idealI_extend_indets)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<V>\n     (insert\n       (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n       (extend_indets ` F)) =\n    {}", "let ?f = \"punit.monom_mult 1 (monomial 1 None) (extend_indets f)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<V>\n     (insert\n       (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n       (extend_indets ` F)) =\n    {}", "show \"\\<V> (insert (1 - ?f) (extend_indets ` F)) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<V>\n     (insert\n       (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n       (extend_indets ` F)) =\n    {}", "proof (intro subset_antisym subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "assume \"a \\<in> \\<V> (insert (1 - ?f) (extend_indets ` F))\""], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           (insert\n             (1 -\n              punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n             (extend_indets ` F))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "moreover"], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           (insert\n             (1 -\n              punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n             (extend_indets ` F))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "have \"1 - ?f \\<in> insert (1 - ?f) (extend_indets ` F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f)\n    \\<in> insert\n           (1 -\n            punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n           (extend_indets ` F)", "by simp"], ["proof (state)\nthis:\n  1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f)\n  \\<in> insert\n         (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n         (extend_indets ` F)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "ultimately"], ["proof (chain)\npicking this:\n  a \\<in> \\<V>\n           (insert\n             (1 -\n              punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n             (extend_indets ` F))\n  1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f)\n  \\<in> insert\n         (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n         (extend_indets ` F)", "have \"poly_eval a (1 - ?f) = 0\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V>\n           (insert\n             (1 -\n              punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n             (extend_indets ` F))\n  1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f)\n  \\<in> insert\n         (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n         (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. poly_eval a\n     (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f)) =\n    (0::'b)", "by (rule variety_ofD)"], ["proof (state)\nthis:\n  poly_eval a\n   (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f)) =\n  (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "hence \"poly_eval a (extend_indets f) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly_eval a\n   (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f)) =\n  (0::'b)\n\ngoal (1 subgoal):\n 1. poly_eval a (extend_indets f) \\<noteq> (0::'b)", "by (auto simp: poly_eval_minus poly_eval_times simp flip: times_monomial_left)"], ["proof (state)\nthis:\n  poly_eval a (extend_indets f) \\<noteq> (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "hence \"poly_eval (a \\<circ> Some) f \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly_eval a (extend_indets f) \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. poly_eval (a \\<circ> Some) f \\<noteq> (0::'b)", "by (simp add: poly_eval_extend_indets)"], ["proof (state)\nthis:\n  poly_eval (a \\<circ> Some) f \\<noteq> (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "have \"a \\<circ> Some \\<in> \\<V> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<circ> Some \\<in> \\<V> F", "proof (rule variety_ofI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> F \\<Longrightarrow> poly_eval (a \\<circ> Some) f = (0::'b)", "fix f'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> F \\<Longrightarrow> poly_eval (a \\<circ> Some) f = (0::'b)", "assume \"f' \\<in> F\""], ["proof (state)\nthis:\n  f' \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> F \\<Longrightarrow> poly_eval (a \\<circ> Some) f = (0::'b)", "hence \"extend_indets f' \\<in> insert (1 - ?f) (extend_indets ` F)\""], ["proof (prove)\nusing this:\n  f' \\<in> F\n\ngoal (1 subgoal):\n 1. extend_indets f'\n    \\<in> insert\n           (1 -\n            punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n           (extend_indets ` F)", "by simp"], ["proof (state)\nthis:\n  extend_indets f'\n  \\<in> insert\n         (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n         (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> F \\<Longrightarrow> poly_eval (a \\<circ> Some) f = (0::'b)", "with \\<open>a \\<in> _\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> \\<V>\n           (insert\n             (1 -\n              punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n             (extend_indets ` F))\n  extend_indets f'\n  \\<in> insert\n         (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n         (extend_indets ` F)", "have \"poly_eval a (extend_indets f') = 0\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V>\n           (insert\n             (1 -\n              punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n             (extend_indets ` F))\n  extend_indets f'\n  \\<in> insert\n         (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n         (extend_indets ` F)\n\ngoal (1 subgoal):\n 1. poly_eval a (extend_indets f') = (0::'b)", "by (rule variety_ofD)"], ["proof (state)\nthis:\n  poly_eval a (extend_indets f') = (0::'b)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> F \\<Longrightarrow> poly_eval (a \\<circ> Some) f = (0::'b)", "thus \"poly_eval (a \\<circ> Some) f' = 0\""], ["proof (prove)\nusing this:\n  poly_eval a (extend_indets f') = (0::'b)\n\ngoal (1 subgoal):\n 1. poly_eval (a \\<circ> Some) f' = (0::'b)", "by (simp only: poly_eval_extend_indets)"], ["proof (state)\nthis:\n  poly_eval (a \\<circ> Some) f' = (0::'b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<circ> Some \\<in> \\<V> F\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "with assms(3)"], ["proof (chain)\npicking this:\n  f \\<in> \\<I> (\\<V> F)\n  a \\<circ> Some \\<in> \\<V> F", "have \"poly_eval (a \\<circ> Some) f = 0\""], ["proof (prove)\nusing this:\n  f \\<in> \\<I> (\\<V> F)\n  a \\<circ> Some \\<in> \\<V> F\n\ngoal (1 subgoal):\n 1. poly_eval (a \\<circ> Some) f = (0::'b)", "by (rule ideal_ofD)"], ["proof (state)\nthis:\n  poly_eval (a \\<circ> Some) f = (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F)) \\<Longrightarrow>\n       x \\<in> {}\n 2. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "with \\<open>poly_eval (a \\<circ> Some) f \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  poly_eval (a \\<circ> Some) f \\<noteq> (0::'b)\n  poly_eval (a \\<circ> Some) f = (0::'b)", "show \"a \\<in> {}\""], ["proof (prove)\nusing this:\n  poly_eval (a \\<circ> Some) f \\<noteq> (0::'b)\n  poly_eval (a \\<circ> Some) f = (0::'b)\n\ngoal (1 subgoal):\n 1. a \\<in> {}", ".."], ["proof (state)\nthis:\n  a \\<in> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {} \\<Longrightarrow>\n       x \\<in> \\<V>\n                (insert\n                  (1 -\n                   punit.monom_mult (1::'b) (monomial 1 None)\n                    (extend_indets f))\n                  (extend_indets ` F))", "qed simp"], ["proof (state)\nthis:\n  \\<V>\n   (insert\n     (1 - punit.monom_mult (1::'b) (monomial 1 None) (extend_indets f))\n     (extend_indets ` F)) =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem strong_Nullstellensatz:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\"\n  shows \"\\<I> (\\<V> F) = \\<surd>ideal (F::(_ \\<Rightarrow>\\<^sub>0 _::alg_closed_field) set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<I> (\\<V> F) = \\<surd>ideal F", "proof (intro subset_antisym subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> \\<I> (\\<V> F) \\<Longrightarrow> x \\<in> \\<surd>ideal F\n 2. \\<And>x. x \\<in> \\<surd>ideal F \\<Longrightarrow> x \\<in> \\<I> (\\<V> F)", "fix f"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> \\<I> (\\<V> F) \\<Longrightarrow> x \\<in> \\<surd>ideal F\n 2. \\<And>x. x \\<in> \\<surd>ideal F \\<Longrightarrow> x \\<in> \\<I> (\\<V> F)", "assume \"f \\<in> \\<I> (\\<V> F)\""], ["proof (state)\nthis:\n  f \\<in> \\<I> (\\<V> F)\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> \\<I> (\\<V> F) \\<Longrightarrow> x \\<in> \\<surd>ideal F\n 2. \\<And>x. x \\<in> \\<surd>ideal F \\<Longrightarrow> x \\<in> \\<I> (\\<V> F)", "with assms"], ["proof (chain)\npicking this:\n  finite X\n  F \\<subseteq> P[X]\n  f \\<in> \\<I> (\\<V> F)", "show \"f \\<in> \\<surd>ideal F\""], ["proof (prove)\nusing this:\n  finite X\n  F \\<subseteq> P[X]\n  f \\<in> \\<I> (\\<V> F)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "by (rule Nullstellensatz)"], ["proof (state)\nthis:\n  f \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<surd>ideal F \\<Longrightarrow> x \\<in> \\<I> (\\<V> F)", "qed (metis ideal_ofI variety_ofD variety_of_radical_ideal)"], ["", "theorem weak_Nullstellensatz:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\" and \"\\<V> F = ({}::(_ \\<Rightarrow> _::alg_closed_field) set)\"\n  shows \"ideal F = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal F = UNIV", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal F = UNIV", "from assms(1, 2)"], ["proof (chain)\npicking this:\n  finite X\n  F \\<subseteq> P[X]", "have \"\\<I> (\\<V> F) = \\<surd>ideal F\""], ["proof (prove)\nusing this:\n  finite X\n  F \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. \\<I> (\\<V> F) = \\<surd>ideal F", "by (rule strong_Nullstellensatz)"], ["proof (state)\nthis:\n  \\<I> (\\<V> F) = \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. ideal F = UNIV", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<I> (\\<V> F) = \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. ideal F = UNIV", "by (simp add: assms(3) flip: radical_ideal_eq_UNIV_iff)"], ["proof (state)\nthis:\n  ideal F = UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma radical_ideal_iff:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\" and \"f \\<in> P[X]\" and \"x \\<notin> X\"\n  shows \"(f::_ \\<Rightarrow>\\<^sub>0 _::alg_closed_field) \\<in> \\<surd>ideal F \\<longleftrightarrow>\n            1 \\<in> ideal (insert (1 - punit.monom_mult 1 (Poly_Mapping.single x 1) f) F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> \\<surd>ideal F) =\n    (1 \\<in> ideal\n              (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<in> \\<surd>ideal F) =\n    (1 \\<in> ideal\n              (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))", "let ?f = \"punit.monom_mult 1 (Poly_Mapping.single x 1) f\""], ["proof (state)\ngoal (1 subgoal):\n 1. (f \\<in> \\<surd>ideal F) =\n    (1 \\<in> ideal\n              (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> \\<surd>ideal F) =\n    (1 \\<in> ideal\n              (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n 2. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "assume \"f \\<in> \\<surd>ideal F\""], ["proof (state)\nthis:\n  f \\<in> \\<surd>ideal F\n\ngoal (2 subgoals):\n 1. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n 2. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "then"], ["proof (chain)\npicking this:\n  f \\<in> \\<surd>ideal F", "obtain m where \"f ^ m \\<in> ideal F\""], ["proof (prove)\nusing this:\n  f \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        f ^ m \\<in> ideal F \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule radicalE)"], ["proof (state)\nthis:\n  f ^ m \\<in> ideal F\n\ngoal (2 subgoals):\n 1. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n 2. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "from assms(1)"], ["proof (chain)\npicking this:\n  finite X", "have \"finite (insert x X)\""], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. finite (insert x X)", "by simp"], ["proof (state)\nthis:\n  finite (insert x X)\n\ngoal (2 subgoals):\n 1. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n 2. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  finite (insert x X)\n\ngoal (2 subgoals):\n 1. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n 2. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "have \"insert (1 - ?f) F \\<subseteq> P[insert x X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F\n    \\<subseteq> P[insert x X]", "unfolding insert_subset"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - punit.monom_mult (1::'b) (monomial 1 x) f \\<in> P[insert x X] \\<and>\n    F \\<subseteq> P[insert x X]", "proof (intro conjI Polys_closed_minus one_in_Polys Polys_closed_monom_mult PPs_closed_single)"], ["proof (state)\ngoal (3 subgoals):\n 1. x \\<in> insert x X\n 2. f \\<in> P[insert x X]\n 3. F \\<subseteq> P[insert x X]", "have \"P[X] \\<subseteq> P[insert x X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P[X] \\<subseteq> P[insert x X]", "by (rule Polys_mono) blast"], ["proof (state)\nthis:\n  P[X] \\<subseteq> P[insert x X]\n\ngoal (3 subgoals):\n 1. x \\<in> insert x X\n 2. f \\<in> P[insert x X]\n 3. F \\<subseteq> P[insert x X]", "with assms(2, 3)"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[X]\n  f \\<in> P[X]\n  P[X] \\<subseteq> P[insert x X]", "show \"f \\<in> P[insert x X]\" and \"F \\<subseteq> P[insert x X]\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[X]\n  f \\<in> P[X]\n  P[X] \\<subseteq> P[insert x X]\n\ngoal (1 subgoal):\n 1. f \\<in> P[insert x X] &&& F \\<subseteq> P[insert x X]", "by blast+"], ["proof (state)\nthis:\n  f \\<in> P[insert x X]\n  F \\<subseteq> P[insert x X]\n\ngoal (1 subgoal):\n 1. x \\<in> insert x X", "qed simp"], ["proof (state)\nthis:\n  insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F\n  \\<subseteq> P[insert x X]\n\ngoal (2 subgoals):\n 1. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n 2. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "moreover"], ["proof (state)\nthis:\n  insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F\n  \\<subseteq> P[insert x X]\n\ngoal (2 subgoals):\n 1. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n 2. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "have \"\\<V> (insert (1 - ?f) F) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = {}", "proof (intro subset_antisym subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "assume \"a \\<in> \\<V> (insert (1 - ?f) F)\""], ["proof (state)\nthis:\n  a \\<in> \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "moreover"], ["proof (state)\nthis:\n  a \\<in> \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "have \"1 - ?f \\<in> insert (1 - ?f) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - punit.monom_mult (1::'b) (monomial 1 x) f\n    \\<in> insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F", "by simp"], ["proof (state)\nthis:\n  1 - punit.monom_mult (1::'b) (monomial 1 x) f\n  \\<in> insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "ultimately"], ["proof (chain)\npicking this:\n  a \\<in> \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n  1 - punit.monom_mult (1::'b) (monomial 1 x) f\n  \\<in> insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F", "have \"poly_eval a (1 - ?f) = 0\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n  1 - punit.monom_mult (1::'b) (monomial 1 x) f\n  \\<in> insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F\n\ngoal (1 subgoal):\n 1. poly_eval a (1 - punit.monom_mult (1::'b) (monomial 1 x) f) = (0::'b)", "by (rule variety_ofD)"], ["proof (state)\nthis:\n  poly_eval a (1 - punit.monom_mult (1::'b) (monomial 1 x) f) = (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "hence \"poly_eval a (f ^ m) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly_eval a (1 - punit.monom_mult (1::'b) (monomial 1 x) f) = (0::'b)\n\ngoal (1 subgoal):\n 1. poly_eval a (f ^ m) \\<noteq> (0::'b)", "by (auto simp: poly_eval_minus poly_eval_times poly_eval_power simp flip: times_monomial_left)"], ["proof (state)\nthis:\n  poly_eval a (f ^ m) \\<noteq> (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "from \\<open>a \\<in> _\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "have \"a \\<in> \\<V> (ideal (insert (1 - ?f) F))\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (1 subgoal):\n 1. a \\<in> \\<V>\n             (ideal\n               (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))", "by (simp only: variety_of_ideal)"], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           (ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "moreover"], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           (ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "from \\<open>f ^ m \\<in> ideal F\\<close> ideal.span_mono"], ["proof (chain)\npicking this:\n  f ^ m \\<in> ideal F\n  ?A \\<subseteq> ?B \\<Longrightarrow> ideal ?A \\<subseteq> ideal ?B", "have \"f ^ m \\<in> ideal (insert (1 - ?f) F)\""], ["proof (prove)\nusing this:\n  f ^ m \\<in> ideal F\n  ?A \\<subseteq> ?B \\<Longrightarrow> ideal ?A \\<subseteq> ideal ?B\n\ngoal (1 subgoal):\n 1. f ^ m\n    \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "by (rule rev_subsetD) blast"], ["proof (state)\nthis:\n  f ^ m\n  \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "ultimately"], ["proof (chain)\npicking this:\n  a \\<in> \\<V>\n           (ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))\n  f ^ m\n  \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "have \"poly_eval a (f ^ m) = 0\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V>\n           (ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))\n  f ^ m\n  \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (1 subgoal):\n 1. poly_eval a (f ^ m) = (0::'b)", "by (rule variety_ofD)"], ["proof (state)\nthis:\n  poly_eval a (f ^ m) = (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "with \\<open>poly_eval a (f ^ m) \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  poly_eval a (f ^ m) \\<noteq> (0::'b)\n  poly_eval a (f ^ m) = (0::'b)", "show \"a \\<in> {}\""], ["proof (prove)\nusing this:\n  poly_eval a (f ^ m) \\<noteq> (0::'b)\n  poly_eval a (f ^ m) = (0::'b)\n\ngoal (1 subgoal):\n 1. a \\<in> {}", ".."], ["proof (state)\nthis:\n  a \\<in> {}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "qed simp"], ["proof (state)\nthis:\n  \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = {}\n\ngoal (2 subgoals):\n 1. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n 2. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "ultimately"], ["proof (chain)\npicking this:\n  finite (insert x X)\n  insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F\n  \\<subseteq> P[insert x X]\n  \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = {}", "have \"ideal (insert (1 - ?f) F) = UNIV\""], ["proof (prove)\nusing this:\n  finite (insert x X)\n  insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F\n  \\<subseteq> P[insert x X]\n  \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = {}\n\ngoal (1 subgoal):\n 1. ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = UNIV", "by (rule weak_Nullstellensatz)"], ["proof (state)\nthis:\n  ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = UNIV\n\ngoal (2 subgoals):\n 1. f \\<in> \\<surd>ideal F \\<Longrightarrow>\n    1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n 2. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "thus \"1 \\<in> ideal (insert (1 - ?f) F)\""], ["proof (prove)\nusing this:\n  ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = UNIV\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "by simp"], ["proof (state)\nthis:\n  1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "assume \"1 \\<in> ideal (insert (1 - ?f) F)\""], ["proof (state)\nthis:\n  1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "have \"\\<V> (insert (1 - ?f) F) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = {}", "proof (intro subset_antisym subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "assume \"a \\<in> \\<V> (insert (1 - ?f) F)\""], ["proof (state)\nthis:\n  a \\<in> \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "hence \"a \\<in> \\<V> (ideal (insert (1 - ?f) F))\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (1 subgoal):\n 1. a \\<in> \\<V>\n             (ideal\n               (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))", "by (simp only: variety_of_ideal)"], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           (ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "hence \"poly_eval a 1 = 0\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V>\n           (ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))\n\ngoal (1 subgoal):\n 1. poly_eval a 1 = (0::'b)", "using \\<open>1 \\<in> _\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> \\<V>\n           (ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))\n  1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)\n\ngoal (1 subgoal):\n 1. poly_eval a 1 = (0::'b)", "by (rule variety_ofD)"], ["proof (state)\nthis:\n  poly_eval a 1 = (0::'b)\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n                   F) \\<Longrightarrow>\n       xa \\<in> {}\n 2. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "thus \"a \\<in> {}\""], ["proof (prove)\nusing this:\n  poly_eval a 1 = (0::'b)\n\ngoal (1 subgoal):\n 1. a \\<in> {}", "by simp"], ["proof (state)\nthis:\n  a \\<in> {}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {} \\<Longrightarrow>\n       xa \\<in> \\<V>\n                 (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F)", "qed simp"], ["proof (state)\nthis:\n  \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = {}\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal\n             (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f)\n               F) \\<Longrightarrow>\n    f \\<in> \\<surd>ideal F", "with assms"], ["proof (chain)\npicking this:\n  finite X\n  F \\<subseteq> P[X]\n  f \\<in> P[X]\n  x \\<notin> X\n  \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = {}", "show \"f \\<in> \\<surd>ideal F\""], ["proof (prove)\nusing this:\n  finite X\n  F \\<subseteq> P[X]\n  f \\<in> P[X]\n  x \\<notin> X\n  \\<V> (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F) = {}\n\ngoal (1 subgoal):\n 1. f \\<in> \\<surd>ideal F", "by (rule radical_idealI)"], ["proof (state)\nthis:\n  f \\<in> \\<surd>ideal F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (f \\<in> \\<surd>ideal F) =\n  (1 \\<in> ideal (insert (1 - punit.monom_mult (1::'b) (monomial 1 x) f) F))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Field-Theoretic Version of the Nullstellensatz\\<close>"], ["", "text \\<open>Due to the possibility of infinite indeterminate-types, we have to explicitly add the set of\n  indeterminates under consideration to the definition of maximal ideals.\\<close>"], ["", "definition generates_max_ideal :: \"'x set \\<Rightarrow> (('x \\<Rightarrow>\\<^sub>0 nat) \\<Rightarrow>\\<^sub>0 'a::comm_ring_1) set \\<Rightarrow> bool\"\n  where \"generates_max_ideal X F \\<longleftrightarrow> (ideal F \\<noteq> UNIV \\<and>\n                                      (\\<forall>F'. F' \\<subseteq> P[X] \\<longrightarrow> ideal F \\<subset> ideal F' \\<longrightarrow> ideal F' = UNIV))\""], ["", "lemma generates_max_idealI:\n  assumes \"ideal F \\<noteq> UNIV\" and \"\\<And>F'. F' \\<subseteq> P[X] \\<Longrightarrow> ideal F \\<subset> ideal F' \\<Longrightarrow> ideal F' = UNIV\"\n  shows \"generates_max_ideal X F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generates_max_ideal X F", "using assms"], ["proof (prove)\nusing this:\n  ideal F \\<noteq> UNIV\n  \\<lbrakk>?F' \\<subseteq> P[X]; ideal F \\<subset> ideal ?F'\\<rbrakk>\n  \\<Longrightarrow> ideal ?F' = UNIV\n\ngoal (1 subgoal):\n 1. generates_max_ideal X F", "by (simp add: generates_max_ideal_def)"], ["", "lemma generates_max_idealI_alt:\n  assumes \"ideal F \\<noteq> UNIV\" and \"\\<And>p. p \\<in> P[X] \\<Longrightarrow> p \\<notin> ideal F \\<Longrightarrow> 1 \\<in> ideal (insert p F)\"\n  shows \"generates_max_ideal X F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generates_max_ideal X F", "using assms(1)"], ["proof (prove)\nusing this:\n  ideal F \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. generates_max_ideal X F", "proof (rule generates_max_idealI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "fix F'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "assume \"F' \\<subseteq> P[X]\" and sub: \"ideal F \\<subset> ideal F'\""], ["proof (state)\nthis:\n  F' \\<subseteq> P[X]\n  ideal F \\<subset> ideal F'\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "from this(2) ideal.span_subset_spanI"], ["proof (chain)\npicking this:\n  ideal F \\<subset> ideal F'\n  ?A \\<subseteq> ideal ?B \\<Longrightarrow> ideal ?A \\<subseteq> ideal ?B", "have \"\\<not> F' \\<subseteq> ideal F\""], ["proof (prove)\nusing this:\n  ideal F \\<subset> ideal F'\n  ?A \\<subseteq> ideal ?B \\<Longrightarrow> ideal ?A \\<subseteq> ideal ?B\n\ngoal (1 subgoal):\n 1. \\<not> F' \\<subseteq> ideal F", "by blast"], ["proof (state)\nthis:\n  \\<not> F' \\<subseteq> ideal F\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "then"], ["proof (chain)\npicking this:\n  \\<not> F' \\<subseteq> ideal F", "obtain p where \"p \\<in> F'\" and \"p \\<notin> ideal F\""], ["proof (prove)\nusing this:\n  \\<not> F' \\<subseteq> ideal F\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>p \\<in> F'; p \\<notin> ideal F\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p \\<in> F'\n  p \\<notin> ideal F\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "from this(1) \\<open>F' \\<subseteq> P[X]\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> F'\n  F' \\<subseteq> P[X]", "have \"p \\<in> P[X]\""], ["proof (prove)\nusing this:\n  p \\<in> F'\n  F' \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. p \\<in> P[X]", ".."], ["proof (state)\nthis:\n  p \\<in> P[X]\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "hence \"1 \\<in> ideal (insert p F)\""], ["proof (prove)\nusing this:\n  p \\<in> P[X]\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal (insert p F)", "using \\<open>p \\<notin> _\\<close>"], ["proof (prove)\nusing this:\n  p \\<in> P[X]\n  p \\<notin> ideal F\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal (insert p F)", "by (rule assms(2))"], ["proof (state)\nthis:\n  1 \\<in> ideal (insert p F)\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "also"], ["proof (state)\nthis:\n  1 \\<in> ideal (insert p F)\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "have \"\\<dots> \\<subseteq> ideal (F' \\<union> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (insert p F) \\<subseteq> ideal (F' \\<union> F)", "by (rule ideal.span_mono) (simp add: \\<open>p \\<in> F'\\<close>)"], ["proof (state)\nthis:\n  ideal (insert p F) \\<subseteq> ideal (F' \\<union> F)\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "also"], ["proof (state)\nthis:\n  ideal (insert p F) \\<subseteq> ideal (F' \\<union> F)\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "have \"\\<dots> = ideal (ideal F' \\<union> ideal F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal (F' \\<union> F) = ideal (ideal F' \\<union> ideal F)", "by (simp add: ideal.span_Un ideal.span_span)"], ["proof (state)\nthis:\n  ideal (F' \\<union> F) = ideal (ideal F' \\<union> ideal F)\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "also"], ["proof (state)\nthis:\n  ideal (F' \\<union> F) = ideal (ideal F' \\<union> ideal F)\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "from sub"], ["proof (chain)\npicking this:\n  ideal F \\<subset> ideal F'", "have \"ideal F' \\<union> ideal F = ideal F'\""], ["proof (prove)\nusing this:\n  ideal F \\<subset> ideal F'\n\ngoal (1 subgoal):\n 1. ideal F' \\<union> ideal F = ideal F'", "by blast"], ["proof (state)\nthis:\n  ideal F' \\<union> ideal F = ideal F'\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "finally"], ["proof (chain)\npicking this:\n  1 \\<in> ideal (ideal F')", "show \"ideal F' = UNIV\""], ["proof (prove)\nusing this:\n  1 \\<in> ideal (ideal F')\n\ngoal (1 subgoal):\n 1. ideal F' = UNIV", "by (simp only: ideal_eq_UNIV_iff_contains_one ideal.span_span)"], ["proof (state)\nthis:\n  ideal F' = UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma generates_max_idealD:\n  assumes \"generates_max_ideal X F\"\n  shows \"ideal F \\<noteq> UNIV\" and \"F' \\<subseteq> P[X] \\<Longrightarrow> ideal F \\<subset> ideal F' \\<Longrightarrow> ideal F' = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal F \\<noteq> UNIV &&&\n    (\\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n     \\<Longrightarrow> ideal F' = UNIV)", "using assms"], ["proof (prove)\nusing this:\n  generates_max_ideal X F\n\ngoal (1 subgoal):\n 1. ideal F \\<noteq> UNIV &&&\n    (\\<lbrakk>F' \\<subseteq> P[X]; ideal F \\<subset> ideal F'\\<rbrakk>\n     \\<Longrightarrow> ideal F' = UNIV)", "by (simp_all add: generates_max_ideal_def)"], ["", "lemma generates_max_ideal_cases:\n  assumes \"generates_max_ideal X F\" and \"F' \\<subseteq> P[X]\" and \"ideal F \\<subseteq> ideal F'\"\n  obtains \"ideal F = ideal F'\" | \"ideal F' = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ideal F = ideal F' \\<Longrightarrow> thesis;\n     ideal F' = UNIV \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  generates_max_ideal X F\n  F' \\<subseteq> P[X]\n  ideal F \\<subseteq> ideal F'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ideal F = ideal F' \\<Longrightarrow> thesis;\n     ideal F' = UNIV \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (auto simp: generates_max_ideal_def)"], ["", "lemma max_ideal_UNIV_radical:\n  assumes \"generates_max_ideal UNIV F\"\n  shows \"\\<surd>ideal F = ideal F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<surd>ideal F = ideal F", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "assume \"\\<surd>ideal F \\<noteq> ideal F\""], ["proof (state)\nthis:\n  \\<surd>ideal F \\<noteq> ideal F\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "with radical_superset"], ["proof (chain)\npicking this:\n  ?F \\<subseteq> \\<surd>?F\n  \\<surd>ideal F \\<noteq> ideal F", "have \"ideal F \\<subset> \\<surd>ideal F\""], ["proof (prove)\nusing this:\n  ?F \\<subseteq> \\<surd>?F\n  \\<surd>ideal F \\<noteq> ideal F\n\ngoal (1 subgoal):\n 1. ideal F \\<subset> \\<surd>ideal F", "by blast"], ["proof (state)\nthis:\n  ideal F \\<subset> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  ideal F \\<subset> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "have \"\\<dots> = ideal (\\<surd>ideal F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<surd>ideal F = ideal (\\<surd>ideal F)", "by simp"], ["proof (state)\nthis:\n  \\<surd>ideal F = ideal (\\<surd>ideal F)\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  ideal F \\<subset> ideal (\\<surd>ideal F)", "have \"ideal F \\<subset> ideal (\\<surd>ideal F)\""], ["proof (prove)\nusing this:\n  ideal F \\<subset> ideal (\\<surd>ideal F)\n\ngoal (1 subgoal):\n 1. ideal F \\<subset> ideal (\\<surd>ideal F)", "."], ["proof (state)\nthis:\n  ideal F \\<subset> ideal (\\<surd>ideal F)\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "with assms _"], ["proof (chain)\npicking this:\n  generates_max_ideal UNIV F\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ideal F \\<subset> ideal (\\<surd>ideal F)", "have \"ideal (\\<surd>ideal F) = UNIV\""], ["proof (prove)\nusing this:\n  generates_max_ideal UNIV F\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ideal F \\<subset> ideal (\\<surd>ideal F)\n\ngoal (1 subgoal):\n 1. ideal (\\<surd>ideal F) = UNIV", "by (rule generates_max_idealD) simp"], ["proof (state)\nthis:\n  ideal (\\<surd>ideal F) = UNIV\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "hence \"\\<surd>ideal F = UNIV\""], ["proof (prove)\nusing this:\n  ideal (\\<surd>ideal F) = UNIV\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F = UNIV", "by simp"], ["proof (state)\nthis:\n  \\<surd>ideal F = UNIV\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "hence \"1 \\<in> \\<surd>ideal F\""], ["proof (prove)\nusing this:\n  \\<surd>ideal F = UNIV\n\ngoal (1 subgoal):\n 1. 1 \\<in> \\<surd>ideal F", "by simp"], ["proof (state)\nthis:\n  1 \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "hence \"1 \\<in> ideal F\""], ["proof (prove)\nusing this:\n  1 \\<in> \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal F", "by (auto elim: radicalE)"], ["proof (state)\nthis:\n  1 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "hence \"ideal F = UNIV\""], ["proof (prove)\nusing this:\n  1 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. ideal F = UNIV", "by (simp only: ideal_eq_UNIV_iff_contains_one)"], ["proof (state)\nthis:\n  ideal F = UNIV\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  ideal F = UNIV\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "from assms"], ["proof (chain)\npicking this:\n  generates_max_ideal UNIV F", "have \"ideal F \\<noteq> UNIV\""], ["proof (prove)\nusing this:\n  generates_max_ideal UNIV F\n\ngoal (1 subgoal):\n 1. ideal F \\<noteq> UNIV", "by (rule generates_max_idealD)"], ["proof (state)\nthis:\n  ideal F \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F \\<noteq> ideal F \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  ideal F = UNIV\n  ideal F \\<noteq> UNIV", "show False"], ["proof (prove)\nusing this:\n  ideal F = UNIV\n  ideal F \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma max_ideal_shape_aux:\n  \"(\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial (a x) 0) ` X \\<subseteq> P[X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. monomial (1::'b) (monomial 1 x) - monomial (a x) 0) ` X\n    \\<subseteq> P[X]", "by (auto intro!: Polys_closed_minus Polys_closed_monomial PPs_closed_single zero_in_PPs)"], ["", "lemma max_ideal_shapeI:\n  \"generates_max_ideal X ((\\<lambda>x. monomial (1::'a::field) (Poly_Mapping.single x 1) - monomial (a x) 0) ` X)\"\n    (is \"generates_max_ideal X ?F\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. generates_max_ideal X\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ` X)", "proof (rule generates_max_idealI_alt)"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) \\<noteq>\n    UNIV\n 2. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "(* Proof modeled after https://math.stackexchange.com/a/1028331. *)"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) \\<noteq>\n    UNIV\n 2. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "show \"ideal ?F \\<noteq> UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) \\<noteq>\n    UNIV", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) =\n    UNIV \\<Longrightarrow>\n    False", "assume \"ideal ?F = UNIV\""], ["proof (state)\nthis:\n  ideal\n   ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ` X) =\n  UNIV\n\ngoal (1 subgoal):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) =\n    UNIV \\<Longrightarrow>\n    False", "hence \"\\<V> (ideal ?F) = \\<V> UNIV\""], ["proof (prove)\nusing this:\n  ideal\n   ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ` X) =\n  UNIV\n\ngoal (1 subgoal):\n 1. \\<V>\n     (ideal\n       ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n        X)) =\n    \\<V> UNIV", "by (rule arg_cong)"], ["proof (state)\nthis:\n  \\<V>\n   (ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X)) =\n  \\<V> UNIV\n\ngoal (1 subgoal):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) =\n    UNIV \\<Longrightarrow>\n    False", "hence \"\\<V> ?F = {}\""], ["proof (prove)\nusing this:\n  \\<V>\n   (ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X)) =\n  \\<V> UNIV\n\ngoal (1 subgoal):\n 1. \\<V>\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) =\n    {}", "by simp"], ["proof (state)\nthis:\n  \\<V>\n   ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ` X) =\n  {}\n\ngoal (1 subgoal):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) =\n    UNIV \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<V>\n   ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ` X) =\n  {}\n\ngoal (1 subgoal):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) =\n    UNIV \\<Longrightarrow>\n    False", "have \"a \\<in> \\<V> ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> \\<V>\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X)", "by (rule variety_ofI) (auto simp: poly_eval_minus poly_eval_monomial)"], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X)\n\ngoal (1 subgoal):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n      X) =\n    UNIV \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<V>\n   ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ` X) =\n  {}\n  a \\<in> \\<V>\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X)", "show False"], ["proof (prove)\nusing this:\n  \\<V>\n   ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ` X) =\n  {}\n  a \\<in> \\<V>\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal\n   ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n    X) \\<noteq>\n  UNIV\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "assume \"p \\<in> P[X]\" and \"p \\<notin> ideal ?F\""], ["proof (state)\nthis:\n  p \\<in> P[X]\n  p \\<notin> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "have \"p \\<in> ideal (insert p ?F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> ideal\n             (insert p\n               ((\\<lambda>x.\n                    monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                X))", "by (rule ideal.span_base) simp"], ["proof (state)\nthis:\n  p \\<in> ideal\n           (insert p\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "let ?f = \"\\<lambda>x. monomial (1::'a) (Poly_Mapping.single x 1) - monomial (a x) 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "let ?g = \"\\<lambda>x. monomial (1::'a) (Poly_Mapping.single x 1) + monomial (a x) 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "define q where \"q = poly_subst ?g p\""], ["proof (state)\nthis:\n  q =\n  poly_subst\n   (\\<lambda>x. monomial (1::'a) (monomial 1 x) + monomial (a x) 0) p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "have \"p = poly_subst ?f q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p =\n    poly_subst\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) q", "unfolding q_def poly_subst_poly_subst"], ["proof (prove)\ngoal (1 subgoal):\n 1. p =\n    poly_subst\n     (\\<lambda>x.\n         poly_subst\n          (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n          (monomial (1::'a) (monomial 1 x) + monomial (a x) 0))\n     p", "by (rule sym, rule poly_subst_id)\n        (simp add: poly_subst_plus poly_subst_monomial subst_pp_single flip: times_monomial_left)"], ["proof (state)\nthis:\n  p =\n  poly_subst\n   (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) q\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "also"], ["proof (state)\nthis:\n  p =\n  poly_subst\n   (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) q\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "have \"\\<dots> = (\\<Sum>t\\<in>keys q. punit.monom_mult (lookup q t) 0 (subst_pp ?f t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly_subst\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) q =\n    (\\<Sum>t\\<in>keys q.\n       punit.monom_mult (lookup q t) 0\n        (subst_pp\n          (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n          t))", "by (fact poly_subst_def)"], ["proof (state)\nthis:\n  poly_subst\n   (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) q =\n  (\\<Sum>t\\<in>keys q.\n     punit.monom_mult (lookup q t) 0\n      (subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "also"], ["proof (state)\nthis:\n  poly_subst\n   (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) q =\n  (\\<Sum>t\\<in>keys q.\n     punit.monom_mult (lookup q t) 0\n      (subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "have \"\\<dots> = punit.monom_mult (lookup q 0) 0 (subst_pp ?f 0) +\n                  (\\<Sum>t\\<in>keys q - {0}. monomial (lookup q t) 0 * subst_pp ?f t)\"\n      (is \"_ = _ + ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>t\\<in>keys q.\n       punit.monom_mult (lookup q t) 0\n        (subst_pp\n          (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n          t)) =\n    punit.monom_mult (lookup q 0) 0\n     (subst_pp\n       (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) 0) +\n    (\\<Sum>t\\<in>keys q - {0}.\n       monomial (lookup q t) 0 *\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)", "by (cases \"0 \\<in> keys q\") (simp_all add: sum.remove in_keys_iff flip: times_monomial_left)"], ["proof (state)\nthis:\n  (\\<Sum>t\\<in>keys q.\n     punit.monom_mult (lookup q t) 0\n      (subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n        t)) =\n  punit.monom_mult (lookup q 0) 0\n   (subst_pp\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) 0) +\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "also"], ["proof (state)\nthis:\n  (\\<Sum>t\\<in>keys q.\n     punit.monom_mult (lookup q t) 0\n      (subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n        t)) =\n  punit.monom_mult (lookup q 0) 0\n   (subst_pp\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) 0) +\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "have \"\\<dots> = monomial (lookup q 0) 0 + ?r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. punit.monom_mult (lookup q 0) 0\n     (subst_pp\n       (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) 0) +\n    (\\<Sum>t\\<in>keys q - {0}.\n       monomial (lookup q t) 0 *\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n        t) =\n    monomial (lookup q 0) 0 +\n    (\\<Sum>t\\<in>keys q - {0}.\n       monomial (lookup q t) 0 *\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)", "by (simp flip: times_monomial_left)"], ["proof (state)\nthis:\n  punit.monom_mult (lookup q 0) 0\n   (subst_pp\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) 0) +\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t) =\n  monomial (lookup q 0) 0 +\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "finally"], ["proof (chain)\npicking this:\n  p =\n  monomial (lookup q 0) 0 +\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)", "have eq: \"p - ?r = monomial (lookup q 0) 0\""], ["proof (prove)\nusing this:\n  p =\n  monomial (lookup q 0) 0 +\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n\ngoal (1 subgoal):\n 1. p -\n    (\\<Sum>t\\<in>keys q - {0}.\n       monomial (lookup q t) 0 *\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n        t) =\n    monomial (lookup q 0) 0", "by simp"], ["proof (state)\nthis:\n  p -\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t) =\n  monomial (lookup q 0) 0\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "have \"?r \\<in> ideal ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>t\\<in>keys q - {0}.\n       monomial (lookup q t) 0 *\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n    \\<in> ideal\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X)", "proof (intro ideal.span_sum ideal.span_scale)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "assume \"t \\<in> keys q - {0}\""], ["proof (state)\nthis:\n  t \\<in> keys q - {0}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "hence \"t \\<in> keys q\" and \"keys t \\<noteq> {}\""], ["proof (prove)\nusing this:\n  t \\<in> keys q - {0}\n\ngoal (1 subgoal):\n 1. t \\<in> keys q &&& keys t \\<noteq> {}", "by simp_all"], ["proof (state)\nthis:\n  t \\<in> keys q\n  keys t \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "from this(2)"], ["proof (chain)\npicking this:\n  keys t \\<noteq> {}", "obtain x where \"x \\<in> keys t\""], ["proof (prove)\nusing this:\n  keys t \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> keys t \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> keys t\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "hence \"x \\<in> indets q\""], ["proof (prove)\nusing this:\n  x \\<in> keys t\n\ngoal (1 subgoal):\n 1. x \\<in> indets q", "using \\<open>t \\<in> keys q\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> keys t\n  t \\<in> keys q\n\ngoal (1 subgoal):\n 1. x \\<in> indets q", "by (rule in_indetsI)"], ["proof (state)\nthis:\n  x \\<in> indets q\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "then"], ["proof (chain)\npicking this:\n  x \\<in> indets q", "obtain y where \"y \\<in> indets p\" and \"x \\<in> indets (?g y)\""], ["proof (prove)\nusing this:\n  x \\<in> indets q\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> indets p;\n         x \\<in> indets\n                  (monomial (1::'a) (monomial 1 y) +\n                   monomial (a y) 0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding q_def"], ["proof (prove)\nusing this:\n  x \\<in> indets\n           (poly_subst\n             (\\<lambda>x.\n                 monomial (1::'a) (monomial 1 x) + monomial (a x) 0)\n             p)\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> indets p;\n         x \\<in> indets\n                  (monomial (1::'a) (monomial 1 y) +\n                   monomial (a y) 0)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule in_indets_poly_substE)"], ["proof (state)\nthis:\n  y \\<in> indets p\n  x \\<in> indets (monomial (1::'a) (monomial 1 y) + monomial (a y) 0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "from this(2) indets_plus_subset"], ["proof (chain)\npicking this:\n  x \\<in> indets (monomial (1::'a) (monomial 1 y) + monomial (a y) 0)\n  indets (?p + ?q) \\<subseteq> indets ?p \\<union> indets ?q", "have \"x \\<in> indets (monomial (1::'a) (Poly_Mapping.single y 1)) \\<union>\n                                                indets (monomial (a y) 0)\""], ["proof (prove)\nusing this:\n  x \\<in> indets (monomial (1::'a) (monomial 1 y) + monomial (a y) 0)\n  indets (?p + ?q) \\<subseteq> indets ?p \\<union> indets ?q\n\ngoal (1 subgoal):\n 1. x \\<in> indets (monomial (1::'a) (monomial 1 y)) \\<union>\n            indets (monomial (a y) 0)", ".."], ["proof (state)\nthis:\n  x \\<in> indets (monomial (1::'a) (monomial 1 y)) \\<union>\n          indets (monomial (a y) 0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "with \\<open>y \\<in> indets p\\<close>"], ["proof (chain)\npicking this:\n  y \\<in> indets p\n  x \\<in> indets (monomial (1::'a) (monomial 1 y)) \\<union>\n          indets (monomial (a y) 0)", "have \"x \\<in> indets p\""], ["proof (prove)\nusing this:\n  y \\<in> indets p\n  x \\<in> indets (monomial (1::'a) (monomial 1 y)) \\<union>\n          indets (monomial (a y) 0)\n\ngoal (1 subgoal):\n 1. x \\<in> indets p", "by (simp add: indets_monomial)"], ["proof (state)\nthis:\n  x \\<in> indets p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "also"], ["proof (state)\nthis:\n  x \\<in> indets p\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "from \\<open>p \\<in> P[X]\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> P[X]", "have \"\\<dots> \\<subseteq> X\""], ["proof (prove)\nusing this:\n  p \\<in> P[X]\n\ngoal (1 subgoal):\n 1. indets p \\<subseteq> X", "by (rule PolysD)"], ["proof (state)\nthis:\n  indets p \\<subseteq> X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "finally"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"x \\<in> X\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. x \\<in> X", "."], ["proof (state)\nthis:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "from \\<open>x \\<in> keys t\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> keys t", "have \"lookup t x \\<noteq> 0\""], ["proof (prove)\nusing this:\n  x \\<in> keys t\n\ngoal (1 subgoal):\n 1. lookup t x \\<noteq> 0", "by (simp add: in_keys_iff)"], ["proof (state)\nthis:\n  lookup t x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "hence eq: \"b ^ lookup t x = b ^ Suc (lookup t x - 1)\" for b"], ["proof (prove)\nusing this:\n  lookup t x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b ^ lookup t x = b ^ Suc (lookup t x - 1)", "by simp"], ["proof (state)\nthis:\n  ?b3 ^ lookup t x = ?b3 ^ Suc (lookup t x - 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "have \"subst_pp ?f t = (\\<Prod>y\\<in>keys t. ?f y ^ lookup t y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_pp\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t =\n    (\\<Prod>y\\<in>keys t.\n       (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y)", "by (fact subst_pp_def)"], ["proof (state)\nthis:\n  subst_pp (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n   t =\n  (\\<Prod>y\\<in>keys t.\n     (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "also"], ["proof (state)\nthis:\n  subst_pp (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n   t =\n  (\\<Prod>y\\<in>keys t.\n     (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "from \\<open>x \\<in> keys t\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> keys t", "have \"\\<dots> = ((\\<Prod>y\\<in>keys t - {x}. ?f y ^ lookup t y) * ?f x ^ (lookup t x - 1)) * ?f x\""], ["proof (prove)\nusing this:\n  x \\<in> keys t\n\ngoal (1 subgoal):\n 1. (\\<Prod>y\\<in>keys t.\n       (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y) =\n    (\\<Prod>y\\<in>keys t - {x}.\n       (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y) *\n    (monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ^\n    (lookup t x - 1) *\n    (monomial (1::'a) (monomial 1 x) - monomial (a x) 0)", "by (simp add: prod.remove mult.commute eq)"], ["proof (state)\nthis:\n  (\\<Prod>y\\<in>keys t.\n     (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y) =\n  (\\<Prod>y\\<in>keys t - {x}.\n     (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y) *\n  (monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ^ (lookup t x - 1) *\n  (monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "also"], ["proof (state)\nthis:\n  (\\<Prod>y\\<in>keys t.\n     (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y) =\n  (\\<Prod>y\\<in>keys t - {x}.\n     (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y) *\n  (monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ^ (lookup t x - 1) *\n  (monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "from \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"\\<dots> \\<in> ideal ?F\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. (\\<Prod>y\\<in>keys t - {x}.\n       (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y) *\n    (monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ^\n    (lookup t x - 1) *\n    (monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n    \\<in> ideal\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X)", "by (intro ideal.span_scale ideal.span_base imageI)"], ["proof (state)\nthis:\n  (\\<Prod>y\\<in>keys t - {x}.\n     (monomial (1::'a) (monomial 1 y) - monomial (a y) 0) ^ lookup t y) *\n  (monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ^ (lookup t x - 1) *\n  (monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n  \\<in> ideal\n         ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n          X)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> keys q - {0} \\<Longrightarrow>\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) x\n       \\<in> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)", "finally"], ["proof (chain)\npicking this:\n  subst_pp (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n   t\n  \\<in> ideal\n         ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n          X)", "show \"subst_pp ?f t \\<in> ideal ?F\""], ["proof (prove)\nusing this:\n  subst_pp (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n   t\n  \\<in> ideal\n         ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n          X)\n\ngoal (1 subgoal):\n 1. subst_pp\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t\n    \\<in> ideal\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X)", "."], ["proof (state)\nthis:\n  subst_pp (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n   t\n  \\<in> ideal\n         ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n          X)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n          X)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "also"], ["proof (state)\nthis:\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n          X)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "have \"\\<dots> \\<subseteq> ideal (insert p ?F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal\n     ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ` X)\n    \\<subseteq> ideal\n                 (insert p\n                   ((\\<lambda>x.\n                        monomial (1::'a) (monomial 1 x) -\n                        monomial (a x) 0) `\n                    X))", "by (rule ideal.span_mono) blast"], ["proof (state)\nthis:\n  ideal\n   ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) ` X)\n  \\<subseteq> ideal\n               (insert p\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))", "have \"?r \\<in> ideal (insert p ?F)\""], ["proof (prove)\nusing this:\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. (\\<Sum>t\\<in>keys q - {0}.\n       monomial (lookup q t) 0 *\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n    \\<in> ideal\n           (insert p\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X))", "."], ["proof (state)\nthis:\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "with \\<open>p \\<in> ideal _\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> ideal\n           (insert p\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X))\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))", "have \"p - ?r \\<in> ideal (insert p ?F)\""], ["proof (prove)\nusing this:\n  p \\<in> ideal\n           (insert p\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X))\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. p -\n    (\\<Sum>t\\<in>keys q - {0}.\n       monomial (lookup q t) 0 *\n       subst_pp\n        (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n    \\<in> ideal\n           (insert p\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X))", "by (rule ideal.span_diff)"], ["proof (state)\nthis:\n  p -\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "hence \"monomial (lookup q 0) 0 \\<in> ideal (insert p ?F)\""], ["proof (prove)\nusing this:\n  p -\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. monomial (lookup q 0) 0\n    \\<in> ideal\n           (insert p\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X))", "by (simp only: eq)"], ["proof (state)\nthis:\n  monomial (lookup q 0) 0\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "hence \"monomial (inverse (lookup q 0)) 0 * monomial (lookup q 0) 0 \\<in> ideal (insert p ?F)\""], ["proof (prove)\nusing this:\n  monomial (lookup q 0) 0\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. monomial (inverse (lookup q 0)) 0 * monomial (lookup q 0) 0\n    \\<in> ideal\n           (insert p\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X))", "by (rule ideal.span_scale)"], ["proof (state)\nthis:\n  monomial (inverse (lookup q 0)) 0 * monomial (lookup q 0) 0\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "hence \"monomial (inverse (lookup q 0) * lookup q 0) 0 \\<in> ideal (insert p ?F)\""], ["proof (prove)\nusing this:\n  monomial (inverse (lookup q 0)) 0 * monomial (lookup q 0) 0\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. monomial (inverse (lookup q 0) * lookup q 0) 0\n    \\<in> ideal\n           (insert p\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X))", "by (simp add: times_monomial_monomial)"], ["proof (state)\nthis:\n  monomial (inverse (lookup q 0) * lookup q 0) 0\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "moreover"], ["proof (state)\nthis:\n  monomial (inverse (lookup q 0) * lookup q 0) 0\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "have \"lookup q 0 \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup q 0 \\<noteq> (0::'a)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. lookup q 0 = (0::'a) \\<Longrightarrow> False", "assume \"lookup q 0 = 0\""], ["proof (state)\nthis:\n  lookup q 0 = (0::'a)\n\ngoal (1 subgoal):\n 1. lookup q 0 = (0::'a) \\<Longrightarrow> False", "with eq \\<open>?r \\<in> ideal ?F\\<close>"], ["proof (chain)\npicking this:\n  p -\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t) =\n  monomial (lookup q 0) 0\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n          X)\n  lookup q 0 = (0::'a)", "have \"p \\<in> ideal ?F\""], ["proof (prove)\nusing this:\n  p -\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t) =\n  monomial (lookup q 0) 0\n  (\\<Sum>t\\<in>keys q - {0}.\n     monomial (lookup q t) 0 *\n     subst_pp\n      (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) t)\n  \\<in> ideal\n         ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n          X)\n  lookup q 0 = (0::'a)\n\ngoal (1 subgoal):\n 1. p \\<in> ideal\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X)", "by simp"], ["proof (state)\nthis:\n  p \\<in> ideal\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X)\n\ngoal (1 subgoal):\n 1. lookup q 0 = (0::'a) \\<Longrightarrow> False", "with \\<open>p \\<notin> ideal ?F\\<close>"], ["proof (chain)\npicking this:\n  p \\<notin> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)\n  p \\<in> ideal\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X)", "show False"], ["proof (prove)\nusing this:\n  p \\<notin> ideal\n              ((\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n               X)\n  p \\<in> ideal\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X)\n\ngoal (1 subgoal):\n 1. False", ".."], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lookup q 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>p \\<in> P[X];\n        p \\<notin> ideal\n                    ((\\<lambda>x.\n                         monomial (1::'a) (monomial 1 x) -\n                         monomial (a x) 0) `\n                     X)\\<rbrakk>\n       \\<Longrightarrow> 1 \\<in> ideal\n                                  (insert p\n                                    ((\\<lambda>x.\n   monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                                     X))", "ultimately"], ["proof (chain)\npicking this:\n  monomial (inverse (lookup q 0) * lookup q 0) 0\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n  lookup q 0 \\<noteq> (0::'a)", "show \"1 \\<in> ideal (insert p ?F)\""], ["proof (prove)\nusing this:\n  monomial (inverse (lookup q 0) * lookup q 0) 0\n  \\<in> ideal\n         (insert p\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n            X))\n  lookup q 0 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal\n             (insert p\n               ((\\<lambda>x.\n                    monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                X))", "by simp"], ["proof (state)\nthis:\n  1 \\<in> ideal\n           (insert p\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n              X))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We first prove the following lemma assuming that the type of indeterminates is finite, and then\n  transfer the result to arbitrary types of indeterminates by using the `types to sets' methodology.\n  This approach facilitates the proof considerably.\\<close>"], ["", "lemma max_ideal_shapeD_finite:\n  assumes \"generates_max_ideal UNIV (F::(('x::finite \\<Rightarrow>\\<^sub>0 nat) \\<Rightarrow>\\<^sub>0 'a::alg_closed_field) set)\"\n  obtains a where \"ideal F = ideal (range (\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial (a x) 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have fin: \"finite (UNIV::'x set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite UNIV", "by simp"], ["proof (state)\nthis:\n  finite UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"(\\<Inter>a\\<in>\\<V> F. ideal (range (\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial (a x) 0))) = \\<I> (\\<V> F)\"\n    (is \"?A = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Inter>a\\<in>\\<V> F.\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) =\n    \\<I> (\\<V> F)", "proof (intro set_eqI iffI ideal_ofI INT_I)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> (\\<Inter>a\\<in>\\<V> F.\n                            ideal\n                             (range\n                               (\\<lambda>x.\n                                   monomial (1::'a) (monomial 1 x) -\n                                   monomial (a x) 0)));\n        a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> poly_eval a x = (0::'a)\n 2. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "fix p a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> (\\<Inter>a\\<in>\\<V> F.\n                            ideal\n                             (range\n                               (\\<lambda>x.\n                                   monomial (1::'a) (monomial 1 x) -\n                                   monomial (a x) 0)));\n        a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> poly_eval a x = (0::'a)\n 2. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "assume \"p \\<in> ?A\" and \"a \\<in> \\<V> F\""], ["proof (state)\nthis:\n  p \\<in> (\\<Inter>a\\<in>\\<V> F.\n              ideal\n               (range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) - monomial (a x) 0)))\n  a \\<in> \\<V> F\n\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> (\\<Inter>a\\<in>\\<V> F.\n                            ideal\n                             (range\n                               (\\<lambda>x.\n                                   monomial (1::'a) (monomial 1 x) -\n                                   monomial (a x) 0)));\n        a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> poly_eval a x = (0::'a)\n 2. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "hence \"p \\<in> ideal (range (\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial (a x) 0))\"\n      (is \"_ \\<in> ideal ?B\")"], ["proof (prove)\nusing this:\n  p \\<in> (\\<Inter>a\\<in>\\<V> F.\n              ideal\n               (range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) - monomial (a x) 0)))\n  a \\<in> \\<V> F\n\ngoal (1 subgoal):\n 1. p \\<in> ideal\n             (range\n               (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", ".."], ["proof (state)\nthis:\n  p \\<in> ideal\n           (range\n             (\\<lambda>x.\n                 monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> (\\<Inter>a\\<in>\\<V> F.\n                            ideal\n                             (range\n                               (\\<lambda>x.\n                                   monomial (1::'a) (monomial 1 x) -\n                                   monomial (a x) 0)));\n        a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> poly_eval a x = (0::'a)\n 2. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "have \"a \\<in> \\<V> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> \\<V>\n             (range\n               (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "proof (rule variety_ofI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> range\n                (\\<lambda>x.\n                    monomial (1::'a) (monomial 1 x) -\n                    monomial (a x) 0) \\<Longrightarrow>\n       poly_eval a f = (0::'a)", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> range\n                (\\<lambda>x.\n                    monomial (1::'a) (monomial 1 x) -\n                    monomial (a x) 0) \\<Longrightarrow>\n       poly_eval a f = (0::'a)", "assume \"f \\<in> ?B\""], ["proof (state)\nthis:\n  f \\<in> range\n           (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> range\n                (\\<lambda>x.\n                    monomial (1::'a) (monomial 1 x) -\n                    monomial (a x) 0) \\<Longrightarrow>\n       poly_eval a f = (0::'a)", "then"], ["proof (chain)\npicking this:\n  f \\<in> range\n           (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)", "obtain x where \"f = monomial 1 (Poly_Mapping.single x 1) - monomial (a x) 0\""], ["proof (prove)\nusing this:\n  f \\<in> range\n           (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        f =\n        monomial (1::'a) (monomial 1 x) - monomial (a x) 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  f = monomial (1::'a) (monomial 1 x) - monomial (a x) 0\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> range\n                (\\<lambda>x.\n                    monomial (1::'a) (monomial 1 x) -\n                    monomial (a x) 0) \\<Longrightarrow>\n       poly_eval a f = (0::'a)", "thus \"poly_eval a f = 0\""], ["proof (prove)\nusing this:\n  f = monomial (1::'a) (monomial 1 x) - monomial (a x) 0\n\ngoal (1 subgoal):\n 1. poly_eval a f = (0::'a)", "by (simp add: poly_eval_minus poly_eval_monomial)"], ["proof (state)\nthis:\n  poly_eval a f = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           (range\n             (\\<lambda>x.\n                 monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> (\\<Inter>a\\<in>\\<V> F.\n                            ideal\n                             (range\n                               (\\<lambda>x.\n                                   monomial (1::'a) (monomial 1 x) -\n                                   monomial (a x) 0)));\n        a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> poly_eval a x = (0::'a)\n 2. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "hence \"a \\<in> \\<V> (ideal ?B)\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V>\n           (range\n             (\\<lambda>x.\n                 monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. a \\<in> \\<V>\n             (ideal\n               (range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) - monomial (a x) 0)))", "by (simp only: variety_of_ideal)"], ["proof (state)\nthis:\n  a \\<in> \\<V>\n           (ideal\n             (range\n               (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0)))\n\ngoal (2 subgoals):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> (\\<Inter>a\\<in>\\<V> F.\n                            ideal\n                             (range\n                               (\\<lambda>x.\n                                   monomial (1::'a) (monomial 1 x) -\n                                   monomial (a x) 0)));\n        a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> poly_eval a x = (0::'a)\n 2. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "thus \"poly_eval a p = 0\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V>\n           (ideal\n             (range\n               (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0)))\n\ngoal (1 subgoal):\n 1. poly_eval a p = (0::'a)", "using \\<open>p \\<in> ideal _\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> \\<V>\n           (ideal\n             (range\n               (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0)))\n  p \\<in> ideal\n           (range\n             (\\<lambda>x.\n                 monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. poly_eval a p = (0::'a)", "by (rule variety_ofD)"], ["proof (state)\nthis:\n  poly_eval a p = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "fix p a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "assume \"p \\<in> \\<I> (\\<V> F)\" and \"a \\<in> \\<V> F\""], ["proof (state)\nthis:\n  p \\<in> \\<I> (\\<V> F)\n  a \\<in> \\<V> F\n\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "hence eq: \"poly_eval a p = 0\""], ["proof (prove)\nusing this:\n  p \\<in> \\<I> (\\<V> F)\n  a \\<in> \\<V> F\n\ngoal (1 subgoal):\n 1. poly_eval a p = (0::'a)", "by (rule ideal_ofD)"], ["proof (state)\nthis:\n  poly_eval a p = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "have \"p \\<in> \\<surd>ideal (range (\\<lambda>x. monomial 1 (monomial 1 x) - monomial (a x) 0))\" (is \"_ \\<in> \\<surd>ideal ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> \\<surd>ideal\n                    (range\n                      (\\<lambda>x.\n                          monomial (1::'a) (monomial 1 x) -\n                          monomial (a x) 0))", "using fin max_ideal_shape_aux"], ["proof (prove)\nusing this:\n  finite UNIV\n  (\\<lambda>x. monomial (1::?'b) (monomial 1 x) - monomial (?a x) 0) ` ?X\n  \\<subseteq> P[?X]\n\ngoal (1 subgoal):\n 1. p \\<in> \\<surd>ideal\n                    (range\n                      (\\<lambda>x.\n                          monomial (1::'a) (monomial 1 x) -\n                          monomial (a x) 0))", "proof (rule Nullstellensatz)"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<in> \\<I>\n             (\\<V>\n               (range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) - monomial (a x) 0)))", "show \"p \\<in> \\<I> (\\<V> ?B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> \\<I>\n             (\\<V>\n               (range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) - monomial (a x) 0)))", "proof (rule ideal_ofI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> \\<V>\n                 (range\n                   (\\<lambda>x.\n                       monomial (1::'a) (monomial 1 x) -\n                       monomial (a x) 0)) \\<Longrightarrow>\n       poly_eval aa p = (0::'a)", "fix a0"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> \\<V>\n                 (range\n                   (\\<lambda>x.\n                       monomial (1::'a) (monomial 1 x) -\n                       monomial (a x) 0)) \\<Longrightarrow>\n       poly_eval aa p = (0::'a)", "assume \"a0 \\<in> \\<V> ?B\""], ["proof (state)\nthis:\n  a0 \\<in> \\<V>\n            (range\n              (\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> \\<V>\n                 (range\n                   (\\<lambda>x.\n                       monomial (1::'a) (monomial 1 x) -\n                       monomial (a x) 0)) \\<Longrightarrow>\n       poly_eval aa p = (0::'a)", "have \"a0 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a0 = a", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. a0 x = a x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. a0 x = a x", "have \"monomial 1 (monomial 1 x) - monomial (a x) 0 \\<in> ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monomial (1::'a) (monomial 1 x) - monomial (a x) 0\n    \\<in> range\n           (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)", "by (rule rangeI)"], ["proof (state)\nthis:\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0\n  \\<in> range\n         (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n\ngoal (1 subgoal):\n 1. \\<And>x. a0 x = a x", "with \\<open>a0 \\<in> _\\<close>"], ["proof (chain)\npicking this:\n  a0 \\<in> \\<V>\n            (range\n              (\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0\n  \\<in> range\n         (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)", "have \"poly_eval a0 (monomial 1 (monomial 1 x) - monomial (a x) 0) = 0\""], ["proof (prove)\nusing this:\n  a0 \\<in> \\<V>\n            (range\n              (\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0\n  \\<in> range\n         (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)\n\ngoal (1 subgoal):\n 1. poly_eval a0 (monomial (1::'a) (monomial 1 x) - monomial (a x) 0) =\n    (0::'a)", "by (rule variety_ofD)"], ["proof (state)\nthis:\n  poly_eval a0 (monomial (1::'a) (monomial 1 x) - monomial (a x) 0) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x. a0 x = a x", "thus \"a0 x = a x\""], ["proof (prove)\nusing this:\n  poly_eval a0 (monomial (1::'a) (monomial 1 x) - monomial (a x) 0) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. a0 x = a x", "by (simp add: poly_eval_minus poly_eval_monomial)"], ["proof (state)\nthis:\n  a0 x = a x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a0 = a\n\ngoal (1 subgoal):\n 1. \\<And>aa.\n       aa \\<in> \\<V>\n                 (range\n                   (\\<lambda>x.\n                       monomial (1::'a) (monomial 1 x) -\n                       monomial (a x) 0)) \\<Longrightarrow>\n       poly_eval aa p = (0::'a)", "thus \"poly_eval a0 p = 0\""], ["proof (prove)\nusing this:\n  a0 = a\n\ngoal (1 subgoal):\n 1. poly_eval a0 p = (0::'a)", "by (simp only: eq)"], ["proof (state)\nthis:\n  poly_eval a0 p = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> \\<I>\n           (\\<V>\n             (range\n               (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> \\<surd>ideal\n                  (range\n                    (\\<lambda>x.\n                        monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "also"], ["proof (state)\nthis:\n  p \\<in> \\<surd>ideal\n                  (range\n                    (\\<lambda>x.\n                        monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "have \"\\<dots> = ideal (range (\\<lambda>x. monomial 1 (monomial 1 x) - monomial (a x) 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<surd>ideal\n            (range\n              (\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n    ideal\n     (range\n       (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "using max_ideal_shapeI"], ["proof (prove)\nusing this:\n  generates_max_ideal ?X\n   ((\\<lambda>x. monomial (1::?'a) (monomial 1 x) - monomial (?a x) 0) ` ?X)\n\ngoal (1 subgoal):\n 1. \\<surd>ideal\n            (range\n              (\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n    ideal\n     (range\n       (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "by (rule max_ideal_UNIV_radical)"], ["proof (state)\nthis:\n  \\<surd>ideal\n          (range\n            (\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n  ideal\n   (range (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. \\<And>x a.\n       \\<lbrakk>x \\<in> \\<I> (\\<V> F); a \\<in> \\<V> F\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ideal\n                                  (range\n                                    (\\<lambda>x.\n  monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "finally"], ["proof (chain)\npicking this:\n  p \\<in> ideal\n           (range\n             (\\<lambda>x.\n                 monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "show \"p \\<in> ideal (range (\\<lambda>x. monomial 1 (monomial 1 x) - monomial (a x) 0))\""], ["proof (prove)\nusing this:\n  p \\<in> ideal\n           (range\n             (\\<lambda>x.\n                 monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. p \\<in> ideal\n             (range\n               (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "."], ["proof (state)\nthis:\n  p \\<in> ideal\n           (range\n             (\\<lambda>x.\n                 monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Inter>a\\<in>\\<V> F.\n      ideal\n       (range\n         (\\<lambda>x.\n             monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) =\n  \\<I> (\\<V> F)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  (\\<Inter>a\\<in>\\<V> F.\n      ideal\n       (range\n         (\\<lambda>x.\n             monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) =\n  \\<I> (\\<V> F)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from fin"], ["proof (chain)\npicking this:\n  finite UNIV", "have \"\\<dots> = \\<surd>ideal F\""], ["proof (prove)\nusing this:\n  finite UNIV\n\ngoal (1 subgoal):\n 1. \\<I> (\\<V> F) = \\<surd>ideal F", "by (rule strong_Nullstellensatz) simp"], ["proof (state)\nthis:\n  \\<I> (\\<V> F) = \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  \\<I> (\\<V> F) = \\<surd>ideal F\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  generates_max_ideal UNIV F", "have \"\\<dots> = ideal F\""], ["proof (prove)\nusing this:\n  generates_max_ideal UNIV F\n\ngoal (1 subgoal):\n 1. \\<surd>ideal F = ideal F", "by (rule max_ideal_UNIV_radical)"], ["proof (state)\nthis:\n  \\<surd>ideal F = ideal F\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  (\\<Inter>a\\<in>\\<V> F.\n      ideal\n       (range\n         (\\<lambda>x.\n             monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) =\n  ideal F", "have eq: \"?A = ideal F\""], ["proof (prove)\nusing this:\n  (\\<Inter>a\\<in>\\<V> F.\n      ideal\n       (range\n         (\\<lambda>x.\n             monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) =\n  ideal F\n\ngoal (1 subgoal):\n 1. (\\<Inter>a\\<in>\\<V> F.\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) =\n    ideal F", "."], ["proof (state)\nthis:\n  (\\<Inter>a\\<in>\\<V> F.\n      ideal\n       (range\n         (\\<lambda>x.\n             monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) =\n  ideal F\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  (\\<Inter>a\\<in>\\<V> F.\n      ideal\n       (range\n         (\\<lambda>x.\n             monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) =\n  ideal F\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  generates_max_ideal UNIV F", "have \"\\<dots> \\<noteq> UNIV\""], ["proof (prove)\nusing this:\n  generates_max_ideal UNIV F\n\ngoal (1 subgoal):\n 1. ideal F \\<noteq> UNIV", "by (rule generates_max_idealD)"], ["proof (state)\nthis:\n  ideal F \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  (\\<Inter>a\\<in>\\<V> F.\n      ideal\n       (range\n         (\\<lambda>x.\n             monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) \\<noteq>\n  UNIV", "obtain a where \"a \\<in> \\<V> F\"\n    and \"ideal (range (\\<lambda>x. monomial 1 (Poly_Mapping.single x (1::nat)) - monomial (a x) 0)) \\<noteq> UNIV\"\n      (is \"?B \\<noteq> _\")"], ["proof (prove)\nusing this:\n  (\\<Inter>a\\<in>\\<V> F.\n      ideal\n       (range\n         (\\<lambda>x.\n             monomial (1::'a) (monomial 1 x) - monomial (a x) 0))) \\<noteq>\n  UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> \\<V> F;\n         ideal\n          (range\n            (\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) -\n                monomial (a x) 0)) \\<noteq>\n         UNIV\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> \\<V> F\n  ideal\n   (range\n     (\\<lambda>x.\n         monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) \\<noteq>\n  UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from \\<open>a \\<in> \\<V> F\\<close>"], ["proof (chain)\npicking this:\n  a \\<in> \\<V> F", "have \"ideal F \\<subseteq> ?B\""], ["proof (prove)\nusing this:\n  a \\<in> \\<V> F\n\ngoal (1 subgoal):\n 1. ideal F\n    \\<subseteq> ideal\n                 (range\n                   (\\<lambda>x.\n                       monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "by (auto simp flip: eq)"], ["proof (state)\nthis:\n  ideal F\n  \\<subseteq> ideal\n               (range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial 1 x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "with assms max_ideal_shape_aux"], ["proof (chain)\npicking this:\n  generates_max_ideal UNIV F\n  (\\<lambda>x. monomial (1::?'b) (monomial 1 x) - monomial (?a x) 0) ` ?X\n  \\<subseteq> P[?X]\n  ideal F\n  \\<subseteq> ideal\n               (range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) - monomial (a x) 0))", "show ?thesis"], ["proof (prove)\nusing this:\n  generates_max_ideal UNIV F\n  (\\<lambda>x. monomial (1::?'b) (monomial 1 x) - monomial (?a x) 0) ` ?X\n  \\<subseteq> P[?X]\n  ideal F\n  \\<subseteq> ideal\n               (range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. thesis", "proof (rule generates_max_ideal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal F =\n    ideal\n     (range\n       (\\<lambda>x.\n           monomial (1::'a) (monomial 1 x) -\n           monomial (a x) 0)) \\<Longrightarrow>\n    thesis\n 2. ideal\n     (range\n       (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n    UNIV \\<Longrightarrow>\n    thesis", "assume \"ideal F = ?B\""], ["proof (state)\nthis:\n  ideal F =\n  ideal\n   (range (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (2 subgoals):\n 1. ideal F =\n    ideal\n     (range\n       (\\<lambda>x.\n           monomial (1::'a) (monomial 1 x) -\n           monomial (a x) 0)) \\<Longrightarrow>\n    thesis\n 2. ideal\n     (range\n       (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n    UNIV \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  ideal F =\n  ideal\n   (range (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. ideal\n     (range\n       (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n    UNIV \\<Longrightarrow>\n    thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal\n     (range\n       (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n    UNIV \\<Longrightarrow>\n    thesis", "assume \"?B = UNIV\""], ["proof (state)\nthis:\n  ideal\n   (range\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n  UNIV\n\ngoal (1 subgoal):\n 1. ideal\n     (range\n       (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n    UNIV \\<Longrightarrow>\n    thesis", "with \\<open>?B \\<noteq> UNIV\\<close>"], ["proof (chain)\npicking this:\n  ideal\n   (range\n     (\\<lambda>x.\n         monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) \\<noteq>\n  UNIV\n  ideal\n   (range\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n  UNIV", "show ?thesis"], ["proof (prove)\nusing this:\n  ideal\n   (range\n     (\\<lambda>x.\n         monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) \\<noteq>\n  UNIV\n  ideal\n   (range\n     (\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0)) =\n  UNIV\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas max_ideal_shapeD_internalized = max_ideal_shapeD_finite[unoverload_type 'x]"], ["", "lemma max_ideal_shapeD:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\"\n    and \"generates_max_ideal X (F::(('x \\<Rightarrow>\\<^sub>0 nat) \\<Rightarrow>\\<^sub>0 'a::alg_closed_field) set)\"\n  obtains a where \"ideal F = ideal ((\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial (a x) 0) ` X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         ((\\<lambda>x. monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n          X) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"X = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X = {}\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  X = {}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X = {}\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "from assms(3)"], ["proof (chain)\npicking this:\n  generates_max_ideal X F", "have \"ideal F \\<noteq> UNIV\""], ["proof (prove)\nusing this:\n  generates_max_ideal X F\n\ngoal (1 subgoal):\n 1. ideal F \\<noteq> UNIV", "by (rule generates_max_idealD)"], ["proof (state)\nthis:\n  ideal F \\<noteq> UNIV\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X = {}\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence \"1 \\<notin> ideal F\""], ["proof (prove)\nusing this:\n  ideal F \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. 1 \\<notin> ideal F", "by (simp add: ideal_eq_UNIV_iff_contains_one)"], ["proof (state)\nthis:\n  1 \\<notin> ideal F\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X = {}\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"F \\<subseteq> {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> {0}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> {0}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> {0}", "assume \"f \\<in> F\""], ["proof (state)\nthis:\n  f \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> {0}", "with assms(2)"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[X]\n  f \\<in> F", "have \"f \\<in> P[X]\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[X]\n  f \\<in> F\n\ngoal (1 subgoal):\n 1. f \\<in> P[X]", ".."], ["proof (state)\nthis:\n  f \\<in> P[X]\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> {0}", "then"], ["proof (chain)\npicking this:\n  f \\<in> P[X]", "obtain c where f: \"f = monomial c 0\""], ["proof (prove)\nusing this:\n  f \\<in> P[X]\n\ngoal (1 subgoal):\n 1. (\\<And>c. f = monomial c 0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: True Polys_empty)"], ["proof (state)\nthis:\n  f = monomial c 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> {0}", "with \\<open>f \\<in> F\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> F\n  f = monomial c 0", "have \"monomial c 0 \\<in> ideal F\""], ["proof (prove)\nusing this:\n  f \\<in> F\n  f = monomial c 0\n\ngoal (1 subgoal):\n 1. monomial c 0 \\<in> ideal F", "by (simp only: ideal.span_base)"], ["proof (state)\nthis:\n  monomial c 0 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> {0}", "hence \"monomial (inverse c) 0 * monomial c 0 \\<in> ideal F\""], ["proof (prove)\nusing this:\n  monomial c 0 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. monomial (inverse c) 0 * monomial c 0 \\<in> ideal F", "by (rule ideal.span_scale)"], ["proof (state)\nthis:\n  monomial (inverse c) 0 * monomial c 0 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> {0}", "hence \"monomial (inverse c * c) 0 \\<in> ideal F\""], ["proof (prove)\nusing this:\n  monomial (inverse c) 0 * monomial c 0 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. monomial (inverse c * c) 0 \\<in> ideal F", "by (simp add: times_monomial_monomial)"], ["proof (state)\nthis:\n  monomial (inverse c * c) 0 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> {0}", "with \\<open>1 \\<notin> ideal F\\<close> left_inverse"], ["proof (chain)\npicking this:\n  1 \\<notin> ideal F\n  ?a \\<noteq> (0::?'a) \\<Longrightarrow> inverse ?a * ?a = (1::?'a)\n  monomial (inverse c * c) 0 \\<in> ideal F", "have \"c = 0\""], ["proof (prove)\nusing this:\n  1 \\<notin> ideal F\n  ?a \\<noteq> (0::?'a) \\<Longrightarrow> inverse ?a * ?a = (1::?'a)\n  monomial (inverse c * c) 0 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. c = (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  c = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> {0}", "thus \"f \\<in> {0}\""], ["proof (prove)\nusing this:\n  c = (0::'a)\n\ngoal (1 subgoal):\n 1. f \\<in> {0}", "by (simp add: f)"], ["proof (state)\nthis:\n  f \\<in> {0}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F \\<subseteq> {0}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X = {}\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence \"ideal F = ideal ((\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial (undefined x) 0) ` X)\""], ["proof (prove)\nusing this:\n  F \\<subseteq> {0}\n\ngoal (1 subgoal):\n 1. ideal F =\n    ideal\n     ((\\<lambda>x.\n          monomial (1::'a) (monomial 1 x) - monomial (undefined x) 0) `\n      X)", "by (simp add: True)"], ["proof (state)\nthis:\n  ideal F =\n  ideal\n   ((\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial (undefined x) 0) `\n    X)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X = {}\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  ideal F =\n  ideal\n   ((\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial (undefined x) 0) `\n    X)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "{"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "text \\<open>We define the type @{typ 'y} to be isomorphic to @{term X}.\\<close>"], ["proof (state)\nthis:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume \"\\<exists>(Rep :: 'y \\<Rightarrow> 'x) Abs. type_definition Rep Abs X\""], ["proof (state)\nthis:\n  \\<exists>Rep Abs. type_definition Rep Abs X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>Rep Abs. type_definition Rep Abs X", "obtain rep :: \"'y \\<Rightarrow> 'x\" and abs :: \"'x \\<Rightarrow> 'y\" where t: \"type_definition rep abs X\""], ["proof (prove)\nusing this:\n  \\<exists>Rep Abs. type_definition Rep Abs X\n\ngoal (1 subgoal):\n 1. (\\<And>rep abs.\n        type_definition rep abs X \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  type_definition rep abs X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  type_definition rep abs X", "interpret y: type_definition rep abs X"], ["proof (prove)\nusing this:\n  type_definition rep abs X\n\ngoal (1 subgoal):\n 1. type_definition rep abs X", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have 1: \"map_indets (rep \\<circ> abs) ` A = A\" if \"A \\<subseteq> P[X]\" for A::\"(_ \\<Rightarrow>\\<^sub>0 'a) set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_indets (rep \\<circ> abs) ` A = A", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. map_indets (rep \\<circ> abs) ` A \\<subseteq> A\n 2. A \\<subseteq> map_indets (rep \\<circ> abs) ` A", "from that"], ["proof (chain)\npicking this:\n  A \\<subseteq> P[X]", "show \"map_indets (rep \\<circ> abs) ` A \\<subseteq> A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. map_indets (rep \\<circ> abs) ` A \\<subseteq> A", "by (smt PolysD(2) comp_apply image_subset_iff map_indets_id subsetD y.Abs_inverse)"], ["proof (state)\nthis:\n  map_indets (rep \\<circ> abs) ` A \\<subseteq> A\n\ngoal (1 subgoal):\n 1. A \\<subseteq> map_indets (rep \\<circ> abs) ` A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<subseteq> map_indets (rep \\<circ> abs) ` A", "from that"], ["proof (chain)\npicking this:\n  A \\<subseteq> P[X]", "show \"A \\<subseteq> map_indets (rep \\<circ> abs) ` A\""], ["proof (prove)\nusing this:\n  A \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. A \\<subseteq> map_indets (rep \\<circ> abs) ` A", "by (smt PolysD(2) comp_apply image_eqI map_indets_id subsetD subsetI y.Abs_inverse)"], ["proof (state)\nthis:\n  A \\<subseteq> map_indets (rep \\<circ> abs) ` A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?A1 \\<subseteq> P[X] \\<Longrightarrow>\n  map_indets (rep \\<circ> abs) ` ?A1 = ?A1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have 2: \"inj rep\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj rep", "by (meson inj_onI y.Rep_inject)"], ["proof (state)\nthis:\n  inj rep\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence 3: \"inj (map_indets rep)\""], ["proof (prove)\nusing this:\n  inj rep\n\ngoal (1 subgoal):\n 1. inj (map_indets rep)", "by (rule map_indets_injI)"], ["proof (state)\nthis:\n  inj (map_indets rep)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"class.finite TYPE('y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.finite TYPE('y)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. finite UNIV", "from assms(1)"], ["proof (chain)\npicking this:\n  finite X", "have \"finite (abs ` X)\""], ["proof (prove)\nusing this:\n  finite X\n\ngoal (1 subgoal):\n 1. finite (abs ` X)", "by (rule finite_imageI)"], ["proof (state)\nthis:\n  finite (abs ` X)\n\ngoal (1 subgoal):\n 1. finite UNIV", "thus \"finite (UNIV::'y set)\""], ["proof (prove)\nusing this:\n  finite (abs ` X)\n\ngoal (1 subgoal):\n 1. finite UNIV", "by (simp only: y.Abs_image)"], ["proof (state)\nthis:\n  finite UNIV\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  class.finite TYPE('y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "moreover"], ["proof (state)\nthis:\n  class.finite TYPE('y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"generates_max_ideal UNIV (map_indets abs ` F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generates_max_ideal UNIV (map_indets abs ` F)", "proof (intro generates_max_idealI notI)"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "assume \"ideal (map_indets abs ` F) = UNIV\""], ["proof (state)\nthis:\n  ideal (map_indets abs ` F) = UNIV\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "hence \"1 \\<in> ideal (map_indets abs ` F)\""], ["proof (prove)\nusing this:\n  ideal (map_indets abs ` F) = UNIV\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal (map_indets abs ` F)", "by simp"], ["proof (state)\nthis:\n  1 \\<in> ideal (map_indets abs ` F)\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "hence \"map_indets rep 1 \\<in> map_indets rep ` ideal (map_indets abs ` F)\""], ["proof (prove)\nusing this:\n  1 \\<in> ideal (map_indets abs ` F)\n\ngoal (1 subgoal):\n 1. map_indets rep 1 \\<in> map_indets rep ` ideal (map_indets abs ` F)", "by (rule imageI)"], ["proof (state)\nthis:\n  map_indets rep 1 \\<in> map_indets rep ` ideal (map_indets abs ` F)\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "also"], ["proof (state)\nthis:\n  map_indets rep 1 \\<in> map_indets rep ` ideal (map_indets abs ` F)\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "from map_indets_plus map_indets_times"], ["proof (chain)\npicking this:\n  map_indets ?f (?p + ?q) = map_indets ?f ?p + map_indets ?f ?q\n  map_indets ?f (?p * ?q) = map_indets ?f ?p * map_indets ?f ?q", "have \"\\<dots> \\<subseteq> ideal (map_indets rep ` map_indets abs ` F)\""], ["proof (prove)\nusing this:\n  map_indets ?f (?p + ?q) = map_indets ?f ?p + map_indets ?f ?q\n  map_indets ?f (?p * ?q) = map_indets ?f ?p * map_indets ?f ?q\n\ngoal (1 subgoal):\n 1. map_indets rep ` ideal (map_indets abs ` F)\n    \\<subseteq> ideal (map_indets rep ` map_indets abs ` F)", "by (rule image_ideal_subset)"], ["proof (state)\nthis:\n  map_indets rep ` ideal (map_indets abs ` F)\n  \\<subseteq> ideal (map_indets rep ` map_indets abs ` F)\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "also"], ["proof (state)\nthis:\n  map_indets rep ` ideal (map_indets abs ` F)\n  \\<subseteq> ideal (map_indets rep ` map_indets abs ` F)\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "from assms(2)"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[X]", "have \"map_indets rep ` map_indets abs ` F = F\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. map_indets rep ` map_indets abs ` F = F", "by (simp only: image_image map_indets_map_indets 1)"], ["proof (state)\nthis:\n  map_indets rep ` map_indets abs ` F = F\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "finally"], ["proof (chain)\npicking this:\n  map_indets rep 1 \\<in> ideal F", "have \"1 \\<in> ideal F\""], ["proof (prove)\nusing this:\n  map_indets rep 1 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. 1 \\<in> ideal F", "by simp"], ["proof (state)\nthis:\n  1 \\<in> ideal F\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "moreover"], ["proof (state)\nthis:\n  1 \\<in> ideal F\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "from assms(3)"], ["proof (chain)\npicking this:\n  generates_max_ideal X F", "have \"ideal F \\<noteq> UNIV\""], ["proof (prove)\nusing this:\n  generates_max_ideal X F\n\ngoal (1 subgoal):\n 1. ideal F \\<noteq> UNIV", "by (rule generates_max_idealD)"], ["proof (state)\nthis:\n  ideal F \\<noteq> UNIV\n\ngoal (2 subgoals):\n 1. ideal (map_indets abs ` F) = UNIV \\<Longrightarrow> False\n 2. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<in> ideal F\n  ideal F \\<noteq> UNIV", "show False"], ["proof (prove)\nusing this:\n  1 \\<in> ideal F\n  ideal F \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. False", "by (simp add: ideal_eq_UNIV_iff_contains_one)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "fix F'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "assume \"ideal (map_indets abs ` F) \\<subset> ideal F'\""], ["proof (state)\nthis:\n  ideal (map_indets abs ` F) \\<subset> ideal F'\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "with inj_on_subset"], ["proof (chain)\npicking this:\n  \\<lbrakk>inj_on ?f ?A; ?B \\<subseteq> ?A\\<rbrakk>\n  \\<Longrightarrow> inj_on ?f ?B\n  ideal (map_indets abs ` F) \\<subset> ideal F'", "have \"map_indets rep ` ideal (map_indets abs ` F) \\<subset> map_indets rep ` ideal F'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>inj_on ?f ?A; ?B \\<subseteq> ?A\\<rbrakk>\n  \\<Longrightarrow> inj_on ?f ?B\n  ideal (map_indets abs ` F) \\<subset> ideal F'\n\ngoal (1 subgoal):\n 1. map_indets rep ` ideal (map_indets abs ` F)\n    \\<subset> map_indets rep ` ideal F'", "by (rule inj_on_strict_subset) (fact 3, fact subset_UNIV)"], ["proof (state)\nthis:\n  map_indets rep ` ideal (map_indets abs ` F)\n  \\<subset> map_indets rep ` ideal F'\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "hence sub: \"ideal F \\<inter> P[X] \\<subset> ideal (map_indets rep ` F') \\<inter> P[X]\""], ["proof (prove)\nusing this:\n  map_indets rep ` ideal (map_indets abs ` F)\n  \\<subset> map_indets rep ` ideal F'\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[X]\n    \\<subset> ideal (map_indets rep ` F') \\<inter> P[X]", "using 2 assms(2)"], ["proof (prove)\nusing this:\n  map_indets rep ` ideal (map_indets abs ` F)\n  \\<subset> map_indets rep ` ideal F'\n  inj rep\n  F \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[X]\n    \\<subset> ideal (map_indets rep ` F') \\<inter> P[X]", "by (simp add: image_map_indets_ideal image_image map_indets_map_indets 1 y.Rep_range)"], ["proof (state)\nthis:\n  ideal F \\<inter> P[X] \\<subset> ideal (map_indets rep ` F') \\<inter> P[X]\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "have \"ideal F \\<subset> ideal (map_indets rep ` F')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal F \\<subset> ideal (map_indets rep ` F')", "proof (intro psubsetI notI ideal.span_subset_spanI subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> ideal (map_indets rep ` F')\n 2. ideal F = ideal (map_indets rep ` F') \\<Longrightarrow> False", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> ideal (map_indets rep ` F')\n 2. ideal F = ideal (map_indets rep ` F') \\<Longrightarrow> False", "assume \"p \\<in> F\""], ["proof (state)\nthis:\n  p \\<in> F\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> ideal (map_indets rep ` F')\n 2. ideal F = ideal (map_indets rep ` F') \\<Longrightarrow> False", "with assms(2) ideal.span_base sub"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[X]\n  ?a \\<in> ?S \\<Longrightarrow> ?a \\<in> ideal ?S\n  ideal F \\<inter> P[X] \\<subset> ideal (map_indets rep ` F') \\<inter> P[X]\n  p \\<in> F", "show \"p \\<in> ideal (map_indets rep ` F')\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[X]\n  ?a \\<in> ?S \\<Longrightarrow> ?a \\<in> ideal ?S\n  ideal F \\<inter> P[X] \\<subset> ideal (map_indets rep ` F') \\<inter> P[X]\n  p \\<in> F\n\ngoal (1 subgoal):\n 1. p \\<in> ideal (map_indets rep ` F')", "by blast"], ["proof (state)\nthis:\n  p \\<in> ideal (map_indets rep ` F')\n\ngoal (1 subgoal):\n 1. ideal F = ideal (map_indets rep ` F') \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal F = ideal (map_indets rep ` F') \\<Longrightarrow> False", "assume \"ideal F = ideal (map_indets rep ` F')\""], ["proof (state)\nthis:\n  ideal F = ideal (map_indets rep ` F')\n\ngoal (1 subgoal):\n 1. ideal F = ideal (map_indets rep ` F') \\<Longrightarrow> False", "with sub"], ["proof (chain)\npicking this:\n  ideal F \\<inter> P[X] \\<subset> ideal (map_indets rep ` F') \\<inter> P[X]\n  ideal F = ideal (map_indets rep ` F')", "show False"], ["proof (prove)\nusing this:\n  ideal F \\<inter> P[X] \\<subset> ideal (map_indets rep ` F') \\<inter> P[X]\n  ideal F = ideal (map_indets rep ` F')\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal F \\<subset> ideal (map_indets rep ` F')\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "with assms(3) _"], ["proof (chain)\npicking this:\n  generates_max_ideal X F\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ideal F \\<subset> ideal (map_indets rep ` F')", "have \"ideal (map_indets rep ` F') = UNIV\""], ["proof (prove)\nusing this:\n  generates_max_ideal X F\n  PROP ?psi \\<Longrightarrow> PROP ?psi\n  ideal F \\<subset> ideal (map_indets rep ` F')\n\ngoal (1 subgoal):\n 1. ideal (map_indets rep ` F') = UNIV", "proof (rule generates_max_idealD)"], ["proof (state)\ngoal (1 subgoal):\n 1. map_indets rep ` F' \\<subseteq> P[X]", "from subset_UNIV"], ["proof (chain)\npicking this:\n  ?A \\<subseteq> UNIV", "have \"map_indets rep ` F' \\<subseteq> range (map_indets rep)\""], ["proof (prove)\nusing this:\n  ?A \\<subseteq> UNIV\n\ngoal (1 subgoal):\n 1. map_indets rep ` F' \\<subseteq> range (map_indets rep)", "by (rule image_mono)"], ["proof (state)\nthis:\n  map_indets rep ` F' \\<subseteq> range (map_indets rep)\n\ngoal (1 subgoal):\n 1. map_indets rep ` F' \\<subseteq> P[X]", "also"], ["proof (state)\nthis:\n  map_indets rep ` F' \\<subseteq> range (map_indets rep)\n\ngoal (1 subgoal):\n 1. map_indets rep ` F' \\<subseteq> P[X]", "have \"\\<dots> = P[X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (map_indets rep) = P[X]", "by (simp only: range_map_indets y.Rep_range)"], ["proof (state)\nthis:\n  range (map_indets rep) = P[X]\n\ngoal (1 subgoal):\n 1. map_indets rep ` F' \\<subseteq> P[X]", "finally"], ["proof (chain)\npicking this:\n  map_indets rep ` F' \\<subseteq> P[X]", "show \"map_indets rep ` F' \\<subseteq> P[X]\""], ["proof (prove)\nusing this:\n  map_indets rep ` F' \\<subseteq> P[X]\n\ngoal (1 subgoal):\n 1. map_indets rep ` F' \\<subseteq> P[X]", "."], ["proof (state)\nthis:\n  map_indets rep ` F' \\<subseteq> P[X]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal (map_indets rep ` F') = UNIV\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "hence \"P[range rep] = ideal (map_indets rep ` F') \\<inter> P[range rep]\""], ["proof (prove)\nusing this:\n  ideal (map_indets rep ` F') = UNIV\n\ngoal (1 subgoal):\n 1. P[range rep] = ideal (map_indets rep ` F') \\<inter> P[range rep]", "by simp"], ["proof (state)\nthis:\n  P[range rep] = ideal (map_indets rep ` F') \\<inter> P[range rep]\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "also"], ["proof (state)\nthis:\n  P[range rep] = ideal (map_indets rep ` F') \\<inter> P[range rep]\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "from 2"], ["proof (chain)\npicking this:\n  inj rep", "have \"\\<dots> = map_indets rep ` ideal F'\""], ["proof (prove)\nusing this:\n  inj rep\n\ngoal (1 subgoal):\n 1. ideal (map_indets rep ` F') \\<inter> P[range rep] =\n    map_indets rep ` ideal F'", "by (simp only: image_map_indets_ideal)"], ["proof (state)\nthis:\n  ideal (map_indets rep ` F') \\<inter> P[range rep] =\n  map_indets rep ` ideal F'\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "finally"], ["proof (chain)\npicking this:\n  P[range rep] = map_indets rep ` ideal F'", "have \"map_indets rep ` ideal F' = range (map_indets rep)\""], ["proof (prove)\nusing this:\n  P[range rep] = map_indets rep ` ideal F'\n\ngoal (1 subgoal):\n 1. map_indets rep ` ideal F' = range (map_indets rep)", "by (simp only: range_map_indets)"], ["proof (state)\nthis:\n  map_indets rep ` ideal F' = range (map_indets rep)\n\ngoal (1 subgoal):\n 1. \\<And>F'.\n       \\<lbrakk>F' \\<subseteq> P[UNIV];\n        ideal (map_indets abs ` F) \\<subset> ideal F'\\<rbrakk>\n       \\<Longrightarrow> ideal F' = UNIV", "with 3"], ["proof (chain)\npicking this:\n  inj (map_indets rep)\n  map_indets rep ` ideal F' = range (map_indets rep)", "show \"ideal F' = UNIV\""], ["proof (prove)\nusing this:\n  inj (map_indets rep)\n  map_indets rep ` ideal F' = range (map_indets rep)\n\ngoal (1 subgoal):\n 1. ideal F' = UNIV", "by (metis inj_image_eq_iff)"], ["proof (state)\nthis:\n  ideal F' = UNIV\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  generates_max_ideal UNIV (map_indets abs ` F)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "ultimately"], ["proof (chain)\npicking this:\n  class.finite TYPE('y)\n  generates_max_ideal UNIV (map_indets abs ` F)", "obtain a\n      where *: \"ideal (map_indets abs ` F) =\n                 ideal (range (\\<lambda>x. monomial 1 (Poly_Mapping.single x (Suc 0)) - monomial (a x) 0))\"\n        (is \"_ = ?A\")"], ["proof (prove)\nusing this:\n  class.finite TYPE('y)\n  generates_max_ideal UNIV (map_indets abs ` F)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal (map_indets abs ` F) =\n        ideal\n         (range\n           (\\<lambda>x.\n               monomial (1::'a) (monomial (Suc 0) x) -\n               monomial (a x) 0)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule max_ideal_shapeD_internalized[where 'x='y, untransferred, simplified])"], ["proof (state)\nthis:\n  ideal (map_indets abs ` F) =\n  ideal\n   (range\n     (\\<lambda>x. monomial (1::'a) (monomial (Suc 0) x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence \"map_indets rep ` ideal (map_indets abs ` F) = map_indets rep ` ?A\""], ["proof (prove)\nusing this:\n  ideal (map_indets abs ` F) =\n  ideal\n   (range\n     (\\<lambda>x. monomial (1::'a) (monomial (Suc 0) x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. map_indets rep ` ideal (map_indets abs ` F) =\n    map_indets rep `\n    ideal\n     (range\n       (\\<lambda>x.\n           monomial (1::'a) (monomial (Suc 0) x) - monomial (a x) 0))", "by simp"], ["proof (state)\nthis:\n  map_indets rep ` ideal (map_indets abs ` F) =\n  map_indets rep `\n  ideal\n   (range\n     (\\<lambda>x. monomial (1::'a) (monomial (Suc 0) x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "with 2 assms(2)"], ["proof (chain)\npicking this:\n  inj rep\n  F \\<subseteq> P[X]\n  map_indets rep ` ideal (map_indets abs ` F) =\n  map_indets rep `\n  ideal\n   (range\n     (\\<lambda>x. monomial (1::'a) (monomial (Suc 0) x) - monomial (a x) 0))", "have \"ideal F \\<inter> P[X] =\n           ideal (range (\\<lambda>x. monomial 1 (Poly_Mapping.single (rep x) 1) - monomial (a x) 0)) \\<inter> P[X]\"\n        (is \"_ = ideal ?B \\<inter> _\")"], ["proof (prove)\nusing this:\n  inj rep\n  F \\<subseteq> P[X]\n  map_indets rep ` ideal (map_indets abs ` F) =\n  map_indets rep `\n  ideal\n   (range\n     (\\<lambda>x. monomial (1::'a) (monomial (Suc 0) x) - monomial (a x) 0))\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[X] =\n    ideal\n     (range\n       (\\<lambda>x.\n           monomial (1::'a) (monomial 1 (rep x)) -\n           monomial (a x) 0)) \\<inter>\n    P[X]", "by (simp add: image_map_indets_ideal y.Rep_range image_image map_indets_map_indets\n              map_indets_minus map_indets_monomial 1)"], ["proof (state)\nthis:\n  ideal F \\<inter> P[X] =\n  ideal\n   (range\n     (\\<lambda>x.\n         monomial (1::'a) (monomial 1 (rep x)) - monomial (a x) 0)) \\<inter>\n  P[X]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "also"], ["proof (state)\nthis:\n  ideal F \\<inter> P[X] =\n  ideal\n   (range\n     (\\<lambda>x.\n         monomial (1::'a) (monomial 1 (rep x)) - monomial (a x) 0)) \\<inter>\n  P[X]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"?B = (\\<lambda>x. monomial 1 (Poly_Mapping.single x 1) - monomial ((a \\<circ> abs) x) 0) ` X\"\n        (is \"_ = ?C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. range\n     (\\<lambda>x.\n         monomial (1::'a) (monomial 1 (rep x)) - monomial (a x) 0) =\n    (\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. range\n     (\\<lambda>x. monomial (1::'a) (monomial 1 (rep x)) - monomial (a x) 0)\n    \\<subseteq> (\\<lambda>x.\n                    monomial (1::'a) (monomial 1 x) -\n                    monomial ((a \\<circ> abs) x) 0) `\n                X\n 2. (\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X\n    \\<subseteq> range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 (rep x)) -\n                     monomial (a x) 0)", "show \"?B \\<subseteq> ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range\n     (\\<lambda>x. monomial (1::'a) (monomial 1 (rep x)) - monomial (a x) 0)\n    \\<subseteq> (\\<lambda>x.\n                    monomial (1::'a) (monomial 1 x) -\n                    monomial ((a \\<circ> abs) x) 0) `\n                X", "by (smt comp_apply image_iff image_subset_iff y.Abs_image y.Abs_inverse)"], ["proof (state)\nthis:\n  range\n   (\\<lambda>x. monomial (1::'a) (monomial 1 (rep x)) - monomial (a x) 0)\n  \\<subseteq> (\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) -\n                  monomial ((a \\<circ> abs) x) 0) `\n              X\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X\n    \\<subseteq> range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 (rep x)) -\n                     monomial (a x) 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X\n    \\<subseteq> range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 (rep x)) -\n                     monomial (a x) 0)", "from y.Rep_inverse y.Rep_range"], ["proof (chain)\npicking this:\n  abs (rep ?x) = ?x\n  range rep = X", "show \"?C \\<subseteq> ?B\""], ["proof (prove)\nusing this:\n  abs (rep ?x) = ?x\n  range rep = X\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X\n    \\<subseteq> range\n                 (\\<lambda>x.\n                     monomial (1::'a) (monomial 1 (rep x)) -\n                     monomial (a x) 0)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n  X\n  \\<subseteq> range\n               (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 (rep x)) - monomial (a x) 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range\n   (\\<lambda>x. monomial (1::'a) (monomial 1 (rep x)) - monomial (a x) 0) =\n  (\\<lambda>x.\n      monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n  X\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "finally"], ["proof (chain)\npicking this:\n  ideal F \\<inter> P[X] =\n  ideal\n   ((\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X) \\<inter>\n  P[X]", "have eq: \"ideal F \\<inter> P[X] = ideal ?C \\<inter> P[X]\""], ["proof (prove)\nusing this:\n  ideal F \\<inter> P[X] =\n  ideal\n   ((\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X) \\<inter>\n  P[X]\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[X] =\n    ideal\n     ((\\<lambda>x.\n          monomial (1::'a) (monomial 1 x) -\n          monomial ((a \\<circ> abs) x) 0) `\n      X) \\<inter>\n    P[X]", "."], ["proof (state)\nthis:\n  ideal F \\<inter> P[X] =\n  ideal\n   ((\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X) \\<inter>\n  P[X]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"ideal F = ideal ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal F =\n    ideal\n     ((\\<lambda>x.\n          monomial (1::'a) (monomial 1 x) -\n          monomial ((a \\<circ> abs) x) 0) `\n      X)", "proof (intro subset_antisym ideal.span_subset_spanI subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> ideal\n                ((\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) -\n                     monomial ((a \\<circ> abs) x) 0) `\n                 X)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> ideal\n                ((\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) -\n                     monomial ((a \\<circ> abs) x) 0) `\n                 X)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "assume \"p \\<in> F\""], ["proof (state)\nthis:\n  p \\<in> F\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> ideal\n                ((\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) -\n                     monomial ((a \\<circ> abs) x) 0) `\n                 X)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "with assms(2) ideal.span_base"], ["proof (chain)\npicking this:\n  F \\<subseteq> P[X]\n  ?a \\<in> ?S \\<Longrightarrow> ?a \\<in> ideal ?S\n  p \\<in> F", "have \"p \\<in> ideal F \\<inter> P[X]\""], ["proof (prove)\nusing this:\n  F \\<subseteq> P[X]\n  ?a \\<in> ?S \\<Longrightarrow> ?a \\<in> ideal ?S\n  p \\<in> F\n\ngoal (1 subgoal):\n 1. p \\<in> ideal F \\<inter> P[X]", "by blast"], ["proof (state)\nthis:\n  p \\<in> ideal F \\<inter> P[X]\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       x \\<in> ideal\n                ((\\<lambda>x.\n                     monomial (1::'a) (monomial 1 x) -\n                     monomial ((a \\<circ> abs) x) 0) `\n                 X)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "thus \"p \\<in> ideal ?C\""], ["proof (prove)\nusing this:\n  p \\<in> ideal F \\<inter> P[X]\n\ngoal (1 subgoal):\n 1. p \\<in> ideal\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) -\n                  monomial ((a \\<circ> abs) x) 0) `\n              X)", "by (simp add: eq)"], ["proof (state)\nthis:\n  p \\<in> ideal\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) -\n                monomial ((a \\<circ> abs) x) 0) `\n            X)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "assume \"p \\<in> ?C\""], ["proof (state)\nthis:\n  p \\<in> (\\<lambda>x.\n              monomial (1::'a) (monomial 1 x) -\n              monomial ((a \\<circ> abs) x) 0) `\n          X\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "then"], ["proof (chain)\npicking this:\n  p \\<in> (\\<lambda>x.\n              monomial (1::'a) (monomial 1 x) -\n              monomial ((a \\<circ> abs) x) 0) `\n          X", "obtain x where \"x \\<in> X\" and \"p = monomial 1 (monomial 1 x) - monomial ((a \\<circ> abs) x) 0\""], ["proof (prove)\nusing this:\n  p \\<in> (\\<lambda>x.\n              monomial (1::'a) (monomial 1 x) -\n              monomial ((a \\<circ> abs) x) 0) `\n          X\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> X;\n         p =\n         monomial (1::'a) (monomial 1 x) -\n         monomial ((a \\<circ> abs) x) 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  x \\<in> X\n  p = monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "note this(2)"], ["proof (state)\nthis:\n  p = monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "also"], ["proof (state)\nthis:\n  p = monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "from \\<open>x \\<in> X\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"\\<dots> \\<in> P[X]\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0\n    \\<in> P[X]", "by (intro Polys_closed_minus Polys_closed_monomial PPs_closed_single zero_in_PPs)"], ["proof (state)\nthis:\n  monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0\n  \\<in> P[X]\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "finally"], ["proof (chain)\npicking this:\n  p \\<in> P[X]", "have \"p \\<in> P[X]\""], ["proof (prove)\nusing this:\n  p \\<in> P[X]\n\ngoal (1 subgoal):\n 1. p \\<in> P[X]", "."], ["proof (state)\nthis:\n  p \\<in> P[X]\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "with \\<open>p \\<in> ?C\\<close>"], ["proof (chain)\npicking this:\n  p \\<in> (\\<lambda>x.\n              monomial (1::'a) (monomial 1 x) -\n              monomial ((a \\<circ> abs) x) 0) `\n          X\n  p \\<in> P[X]", "have \"p \\<in> ideal ?C \\<inter> P[X]\""], ["proof (prove)\nusing this:\n  p \\<in> (\\<lambda>x.\n              monomial (1::'a) (monomial 1 x) -\n              monomial ((a \\<circ> abs) x) 0) `\n          X\n  p \\<in> P[X]\n\ngoal (1 subgoal):\n 1. p \\<in> ideal\n             ((\\<lambda>x.\n                  monomial (1::'a) (monomial 1 x) -\n                  monomial ((a \\<circ> abs) x) 0) `\n              X) \\<inter>\n            P[X]", "by (simp add: ideal.span_base)"], ["proof (state)\nthis:\n  p \\<in> ideal\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) -\n                monomial ((a \\<circ> abs) x) 0) `\n            X) \\<inter>\n          P[X]\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "also"], ["proof (state)\nthis:\n  p \\<in> ideal\n           ((\\<lambda>x.\n                monomial (1::'a) (monomial 1 x) -\n                monomial ((a \\<circ> abs) x) 0) `\n            X) \\<inter>\n          P[X]\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "have \"\\<dots> = ideal F \\<inter> P[X]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal\n     ((\\<lambda>x.\n          monomial (1::'a) (monomial 1 x) -\n          monomial ((a \\<circ> abs) x) 0) `\n      X) \\<inter>\n    P[X] =\n    ideal F \\<inter> P[X]", "by (simp only: eq)"], ["proof (state)\nthis:\n  ideal\n   ((\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X) \\<inter>\n  P[X] =\n  ideal F \\<inter> P[X]\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x.\n                   monomial (1::'a) (monomial 1 x) -\n                   monomial ((a \\<circ> abs) x) 0) `\n               X \\<Longrightarrow>\n       x \\<in> ideal F", "finally"], ["proof (chain)\npicking this:\n  p \\<in> ideal F \\<inter> P[X]", "show \"p \\<in> ideal F\""], ["proof (prove)\nusing this:\n  p \\<in> ideal F \\<inter> P[X]\n\ngoal (1 subgoal):\n 1. p \\<in> ideal F", "by simp"], ["proof (state)\nthis:\n  p \\<in> ideal F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal F =\n  ideal\n   ((\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence ?thesis"], ["proof (prove)\nusing this:\n  ideal F =\n  ideal\n   ((\\<lambda>x.\n        monomial (1::'a) (monomial 1 x) - monomial ((a \\<circ> abs) x) 0) `\n    X)\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "}"], ["proof (state)\nthis:\n  \\<exists>Rep Abs. type_definition Rep Abs X \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "note rl = this[cancel_type_definition]"], ["proof (state)\nthis:\n  X \\<noteq> {} \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a.\n                ideal F =\n                ideal\n                 ((\\<lambda>x.\n                      monomial (1::'a) (monomial 1 x) - monomial (a x) 0) `\n                  X) \\<Longrightarrow>\n                thesis;\n     X \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> thesis", "from False"], ["proof (chain)\npicking this:\n  X \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. thesis", "by (rule rl)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Nullstellensatz_field:\n  assumes \"finite X\" and \"F \\<subseteq> P[X]\" and \"generates_max_ideal X (F::(_ \\<Rightarrow>\\<^sub>0 _::alg_closed_field) set)\"\n    and \"x \\<in> X\"\n  shows \"{0} \\<subset> ideal F \\<inter> P[{x}]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0} \\<subset> ideal F \\<inter> P[{x}]", "unfolding subset_not_subset_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. strict (\\<subseteq>) {0} (ideal F \\<inter> P[{x}])", "proof (intro conjI notI)"], ["proof (state)\ngoal (2 subgoals):\n 1. {0} \\<subseteq> ideal F \\<inter> P[{x}]\n 2. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "show \"{0} \\<subseteq> ideal F \\<inter> P[{x}]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0} \\<subseteq> ideal F \\<inter> P[{x}]", "by (auto intro: ideal.span_zero zero_in_Polys)"], ["proof (state)\nthis:\n  {0} \\<subseteq> ideal F \\<inter> P[{x}]\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "from assms(1, 2, 3)"], ["proof (chain)\npicking this:\n  finite X\n  F \\<subseteq> P[X]\n  generates_max_ideal X F", "obtain a\n    where eq: \"ideal F = ideal ((\\<lambda>x. monomial 1 (monomial 1 x) - monomial (a x) 0) ` X)\""], ["proof (prove)\nusing this:\n  finite X\n  F \\<subseteq> P[X]\n  generates_max_ideal X F\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        ideal F =\n        ideal\n         ((\\<lambda>x. monomial (1::'b) (monomial 1 x) - monomial (a x) 0) `\n          X) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule max_ideal_shapeD)"], ["proof (state)\nthis:\n  ideal F =\n  ideal\n   ((\\<lambda>x. monomial (1::'b) (monomial 1 x) - monomial (a x) 0) ` X)\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "let ?p = \"\\<lambda>x. monomial 1 (monomial 1 x) - monomial (a x) 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "from assms(4)"], ["proof (chain)\npicking this:\n  x \\<in> X", "have \"?p x \\<in> ?p ` X\""], ["proof (prove)\nusing this:\n  x \\<in> X\n\ngoal (1 subgoal):\n 1. monomial (1::'b) (monomial (1::'c) x) - monomial (a x) 0\n    \\<in> (\\<lambda>x.\n              monomial (1::'b) (monomial (1::'c) x) - monomial (a x) 0) `\n          X", "by (rule imageI)"], ["proof (state)\nthis:\n  monomial (1::'b) (monomial (1::?'c2) x) - monomial (a x) 0\n  \\<in> (\\<lambda>x.\n            monomial (1::'b) (monomial (1::?'c2) x) - monomial (a x) 0) `\n        X\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  monomial (1::'b) (monomial (1::?'c2) x) - monomial (a x) 0\n  \\<in> (\\<lambda>x.\n            monomial (1::'b) (monomial (1::?'c2) x) - monomial (a x) 0) `\n        X\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "have \"\\<dots> \\<subseteq> ideal F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. monomial (1::'b) (monomial 1 x) - monomial (a x) 0) ` X\n    \\<subseteq> ideal F", "unfolding eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. monomial (1::'b) (monomial 1 x) - monomial (a x) 0) ` X\n    \\<subseteq> ideal\n                 ((\\<lambda>x.\n                      monomial (1::'b) (monomial 1 x) - monomial (a x) 0) `\n                  X)", "by (rule ideal.span_superset)"], ["proof (state)\nthis:\n  (\\<lambda>x. monomial (1::'b) (monomial 1 x) - monomial (a x) 0) ` X\n  \\<subseteq> ideal F\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> ideal F", "have \"?p x \\<in> ideal F\""], ["proof (prove)\nusing this:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> ideal F", "."], ["proof (state)\nthis:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> ideal F\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "have \"?p x \\<in> P[{x}]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> P[{x}]", "by (auto intro!: Polys_closed_minus Polys_closed_monomial PPs_closed_single zero_in_PPs)"], ["proof (state)\nthis:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> P[{x}]\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> ideal F\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> P[{x}]", "have \"?p x \\<in> ideal F \\<inter> P[{x}]\""], ["proof (prove)\nusing this:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> ideal F\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> P[{x}]\n\ngoal (1 subgoal):\n 1. monomial (1::'b) (monomial 1 x) - monomial (a x) 0\n    \\<in> ideal F \\<inter> P[{x}]", ".."], ["proof (state)\nthis:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0\n  \\<in> ideal F \\<inter> P[{x}]\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0\n  \\<in> ideal F \\<inter> P[{x}]\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "assume \"\\<dots> \\<subseteq> {0}\""], ["proof (state)\nthis:\n  ideal F \\<inter> P[{x}] \\<subseteq> {0}\n\ngoal (1 subgoal):\n 1. ideal F \\<inter> P[{x}] \\<subseteq> {0} \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> {0}", "show False"], ["proof (prove)\nusing this:\n  monomial (1::'b) (monomial 1 x) - monomial (a x) 0 \\<in> {0}\n\ngoal (1 subgoal):\n 1. False", "by (metis diff_eq_diff_eq diff_self monomial_0D monomial_inj one_neq_zero singletonD)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* theory *)"]]}