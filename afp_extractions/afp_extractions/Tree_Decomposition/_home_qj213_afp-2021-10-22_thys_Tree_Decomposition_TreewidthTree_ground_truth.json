{"file_name": "/home/qj213/afp-2021-10-22/thys/Tree_Decomposition/TreewidthTree.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Tree_Decomposition", "problem_names": ["theorem treewidth_tree:\n  fixes G :: \"nat Graph\" (structure)\n  assumes \"Tree G\"\n  shows \"Graph.treewidth G \\<le> 1\""], "translations": [["", "theorem treewidth_tree:\n  fixes G :: \"nat Graph\" (structure)\n  assumes \"Tree G\"\n  shows \"Graph.treewidth G \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Graph.treewidth G \\<le> 1", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Graph.treewidth G \\<le> 1", "interpret Tree G"], ["proof (prove)\ngoal (1 subgoal):\n 1. Tree G", "using assms"], ["proof (prove)\nusing this:\n  Tree G\n\ngoal (1 subgoal):\n 1. Tree G", "."], ["proof (state)\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "assume \"V \\<noteq> {}\""], ["proof (state)\nthis:\n  V \\<noteq> {}\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "then"], ["proof (chain)\npicking this:\n  V \\<noteq> {}", "obtain root where root: \"root \\<in> V\""], ["proof (prove)\nusing this:\n  V \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>root. root \\<in> V \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  root \\<in> V\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "then"], ["proof (chain)\npicking this:\n  root \\<in> V", "interpret RootedTree G root"], ["proof (prove)\nusing this:\n  root \\<in> V\n\ngoal (1 subgoal):\n 1. RootedTree G root", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "define bag where \"bag v = (if v = root then {v} else {v, parent v})\" for v"], ["proof (state)\nthis:\n  bag ?v = (if ?v = root then {?v} else {?v, parent ?v})\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "have v_in_bag: \"\\<And>v. v \\<in> bag v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> bag v", "unfolding bag_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> (if v = root then {v} else {v, parent v})", "by simp"], ["proof (state)\nthis:\n  ?v \\<in> bag ?v\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "have bag_in_V: \"\\<And>v. v \\<in> V \\<Longrightarrow> bag v \\<subseteq> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> V \\<Longrightarrow> bag v \\<subseteq> V", "unfolding bag_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> V \\<Longrightarrow>\n       (if v = root then {v} else {v, parent v}) \\<subseteq> V", "using parent_in_V empty_subsetI insert_subset"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v \\<in> V; ?v \\<noteq> root\\<rbrakk>\n  \\<Longrightarrow> parent ?v \\<in> V\n  {} \\<subseteq> ?A\n  (insert ?x ?A \\<subseteq> ?B) = (?x \\<in> ?B \\<and> ?A \\<subseteq> ?B)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       v \\<in> V \\<Longrightarrow>\n       (if v = root then {v} else {v, parent v}) \\<subseteq> V", "by auto"], ["proof (state)\nthis:\n  ?v \\<in> V \\<Longrightarrow> bag ?v \\<subseteq> V\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "have \"TreeDecomposition G G bag\""], ["proof (prove)\ngoal (1 subgoal):\n 1. TreeDecomposition G G bag", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<Union> {bag t |t. t \\<in> V} = V\n 2. \\<And>v w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\n 3. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "show \"\\<Union>{bag t | t. t \\<in> V} = V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {bag t |t. t \\<in> V} = V", "using bag_in_V v_in_bag"], ["proof (prove)\nusing this:\n  ?v \\<in> V \\<Longrightarrow> bag ?v \\<subseteq> V\n  ?v \\<in> bag ?v\n\ngoal (1 subgoal):\n 1. \\<Union> {bag t |t. t \\<in> V} = V", "by blast"], ["proof (state)\nthis:\n  \\<Union> {bag t |t. t \\<in> V} = V\n\ngoal (2 subgoals):\n 1. \\<And>v w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\n 2. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\n 2. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "fix v w"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>v w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\n 2. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "assume \"v\\<rightarrow>w\""], ["proof (state)\nthis:\n  v \\<rightarrow> w\n\ngoal (2 subgoals):\n 1. \\<And>v w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\n 2. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "moreover"], ["proof (state)\nthis:\n  v \\<rightarrow> w\n\ngoal (2 subgoals):\n 1. \\<And>v w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\n 2. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "have \"\\<And>v' w'. \\<lbrakk> v'\\<rightarrow>w'; v' \\<noteq> root \\<rbrakk> \\<Longrightarrow> w' \\<in> bag v' \\<or> v' \\<in> bag w'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v' w'.\n       \\<lbrakk>v' \\<rightarrow> w'; v' \\<noteq> root\\<rbrakk>\n       \\<Longrightarrow> w' \\<in> bag v' \\<or> v' \\<in> bag w'", "unfolding bag_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v' w'.\n       \\<lbrakk>v' \\<rightarrow> w'; v' \\<noteq> root\\<rbrakk>\n       \\<Longrightarrow> w' \\<in> (if v' = root then {v'}\n                                   else {v', parent v'}) \\<or>\n                         v' \\<in> (if w' = root then {w'}\n                                   else {w', parent w'})", "by (metis insertI2 parent_edge_cases parent_edge_root singletonI)"], ["proof (state)\nthis:\n  \\<lbrakk>?v' \\<rightarrow> ?w'; ?v' \\<noteq> root\\<rbrakk>\n  \\<Longrightarrow> ?w' \\<in> bag ?v' \\<or> ?v' \\<in> bag ?w'\n\ngoal (2 subgoals):\n 1. \\<And>v w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\n 2. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "ultimately"], ["proof (chain)\npicking this:\n  v \\<rightarrow> w\n  \\<lbrakk>?v' \\<rightarrow> ?w'; ?v' \\<noteq> root\\<rbrakk>\n  \\<Longrightarrow> ?w' \\<in> bag ?v' \\<or> ?v' \\<in> bag ?w'", "have \"v \\<in> bag w \\<or> w \\<in> bag v\""], ["proof (prove)\nusing this:\n  v \\<rightarrow> w\n  \\<lbrakk>?v' \\<rightarrow> ?w'; ?v' \\<noteq> root\\<rbrakk>\n  \\<Longrightarrow> ?w' \\<in> bag ?v' \\<or> ?v' \\<in> bag ?w'\n\ngoal (1 subgoal):\n 1. v \\<in> bag w \\<or> w \\<in> bag v", "using no_loops undirected"], ["proof (prove)\nusing this:\n  v \\<rightarrow> w\n  \\<lbrakk>?v' \\<rightarrow> ?w'; ?v' \\<noteq> root\\<rbrakk>\n  \\<Longrightarrow> ?w' \\<in> bag ?v' \\<or> ?v' \\<in> bag ?w'\n  (?v, ?v) \\<notin> E\n  ?v \\<rightarrow> ?w = ?w \\<rightarrow> ?v\n\ngoal (1 subgoal):\n 1. v \\<in> bag w \\<or> w \\<in> bag v", "by blast"], ["proof (state)\nthis:\n  v \\<in> bag w \\<or> w \\<in> bag v\n\ngoal (2 subgoals):\n 1. \\<And>v w.\n       v \\<rightarrow> w \\<Longrightarrow>\n       \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\n 2. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "thus \"\\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\""], ["proof (prove)\nusing this:\n  v \\<in> bag w \\<or> w \\<in> bag v\n\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t", "using \\<open>v\\<rightarrow>w\\<close> edges_are_in_V v_in_bag"], ["proof (prove)\nusing this:\n  v \\<in> bag w \\<or> w \\<in> bag v\n  v \\<rightarrow> w\n  ?v \\<rightarrow> ?w \\<Longrightarrow> ?v \\<in> V\n  ?v \\<rightarrow> ?w \\<Longrightarrow> ?w \\<in> V\n  ?v \\<in> bag ?v\n\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t", "by blast"], ["proof (state)\nthis:\n  \\<exists>t\\<in>V. v \\<in> bag t \\<and> w \\<in> bag t\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "fix s u t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "assume s: \"s \\<in> V\" and u: \"u \\<in> V\" and t: \"t \\<in> set (s\\<leadsto>u)\""], ["proof (state)\nthis:\n  s \\<in> V\n  u \\<in> V\n  t \\<in> set (s \\<leadsto> u)\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "have \"t \\<in> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> V", "using t"], ["proof (prove)\nusing this:\n  t \\<in> set (s \\<leadsto> u)\n\ngoal (1 subgoal):\n 1. t \\<in> V", "by (meson s subsetCE u unique_connecting_path_properties(1) walk_in_V)"], ["proof (state)\nthis:\n  t \\<in> V\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "hence \"s = u \\<Longrightarrow> t = s\""], ["proof (prove)\nusing this:\n  t \\<in> V\n\ngoal (1 subgoal):\n 1. s = u \\<Longrightarrow> t = s", "using left_tree_initial' s t"], ["proof (prove)\nusing this:\n  t \\<in> V\n  \\<lbrakk>?s \\<in> V; ?t \\<in> V; ?s \\<noteq> ?t\\<rbrakk>\n  \\<Longrightarrow> ?t \\<notin> left_tree ?s ?t\n  s \\<in> V\n  t \\<in> set (s \\<leadsto> u)\n\ngoal (1 subgoal):\n 1. s = u \\<Longrightarrow> t = s", "by blast"], ["proof (state)\nthis:\n  s = u \\<Longrightarrow> t = s\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "moreover"], ["proof (state)\nthis:\n  s = u \\<Longrightarrow> t = s\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "have \"s\\<rightarrow>u \\<Longrightarrow> t = s \\<or> t = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<rightarrow> u \\<Longrightarrow> t = s \\<or> t = u", "using s t u \\<open>t \\<in> V\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> V\n  t \\<in> set (s \\<leadsto> u)\n  u \\<in> V\n  t \\<in> V\n\ngoal (1 subgoal):\n 1. s \\<rightarrow> u \\<Longrightarrow> t = s \\<or> t = u", "by (metis insertE left_treeI left_tree_initial' list.exhaust_sel list.simps(15)\n            undirected unique_connecting_path_properties(2,3) unique_connecting_path_set(2)\n            unique_connecting_path_tl)"], ["proof (state)\nthis:\n  s \\<rightarrow> u \\<Longrightarrow> t = s \\<or> t = u\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "moreover"], ["proof (state)\nthis:\n  s \\<rightarrow> u \\<Longrightarrow> t = s \\<or> t = u\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "{"], ["proof (state)\nthis:\n  s \\<rightarrow> u \\<Longrightarrow> t = s \\<or> t = u\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "assume *: \"s \\<noteq> u\" \"\\<not>s\\<rightarrow>u\""], ["proof (state)\nthis:\n  s \\<noteq> u\n  (s, u) \\<notin> E\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "have \"s = root \\<Longrightarrow> bag s \\<inter> bag u = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = root \\<Longrightarrow> bag s \\<inter> bag u = {}", "unfolding bag_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. s = root \\<Longrightarrow>\n    (if s = root then {s} else {s, parent s}) \\<inter>\n    (if u = root then {u} else {u, parent u}) =\n    {}", "using *(1,2) parent_edge u undirected"], ["proof (prove)\nusing this:\n  s \\<noteq> u\n  (s, u) \\<notin> E\n  \\<lbrakk>?v \\<in> V; ?v \\<noteq> root\\<rbrakk>\n  \\<Longrightarrow> ?v \\<rightarrow> parent ?v\n  u \\<in> V\n  ?v \\<rightarrow> ?w = ?w \\<rightarrow> ?v\n\ngoal (1 subgoal):\n 1. s = root \\<Longrightarrow>\n    (if s = root then {s} else {s, parent s}) \\<inter>\n    (if u = root then {u} else {u, parent u}) =\n    {}", "by fastforce"], ["proof (state)\nthis:\n  s = root \\<Longrightarrow> bag s \\<inter> bag u = {}\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "moreover"], ["proof (state)\nthis:\n  s = root \\<Longrightarrow> bag s \\<inter> bag u = {}\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "have \"u = root \\<Longrightarrow> bag s \\<inter> bag u = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = root \\<Longrightarrow> bag s \\<inter> bag u = {}", "unfolding bag_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. u = root \\<Longrightarrow>\n    (if s = root then {s} else {s, parent s}) \\<inter>\n    (if u = root then {u} else {u, parent u}) =\n    {}", "using *(1,2) parent_edge s"], ["proof (prove)\nusing this:\n  s \\<noteq> u\n  (s, u) \\<notin> E\n  \\<lbrakk>?v \\<in> V; ?v \\<noteq> root\\<rbrakk>\n  \\<Longrightarrow> ?v \\<rightarrow> parent ?v\n  s \\<in> V\n\ngoal (1 subgoal):\n 1. u = root \\<Longrightarrow>\n    (if s = root then {s} else {s, parent s}) \\<inter>\n    (if u = root then {u} else {u, parent u}) =\n    {}", "by fastforce"], ["proof (state)\nthis:\n  u = root \\<Longrightarrow> bag s \\<inter> bag u = {}\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "moreover"], ["proof (state)\nthis:\n  u = root \\<Longrightarrow> bag s \\<inter> bag u = {}\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "have \"\\<lbrakk> s \\<noteq> root; u \\<noteq> root; parent s \\<noteq> parent u \\<rbrakk> \\<Longrightarrow> bag s \\<inter> bag u = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<noteq> root; u \\<noteq> root;\n     parent s \\<noteq> parent u\\<rbrakk>\n    \\<Longrightarrow> bag s \\<inter> bag u = {}", "unfolding bag_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<noteq> root; u \\<noteq> root;\n     parent s \\<noteq> parent u\\<rbrakk>\n    \\<Longrightarrow> (if s = root then {s} else {s, parent s}) \\<inter>\n                      (if u = root then {u} else {u, parent u}) =\n                      {}", "using *(2) parent_edge s u undirected"], ["proof (prove)\nusing this:\n  (s, u) \\<notin> E\n  \\<lbrakk>?v \\<in> V; ?v \\<noteq> root\\<rbrakk>\n  \\<Longrightarrow> ?v \\<rightarrow> parent ?v\n  s \\<in> V\n  u \\<in> V\n  ?v \\<rightarrow> ?w = ?w \\<rightarrow> ?v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<noteq> root; u \\<noteq> root;\n     parent s \\<noteq> parent u\\<rbrakk>\n    \\<Longrightarrow> (if s = root then {s} else {s, parent s}) \\<inter>\n                      (if u = root then {u} else {u, parent u}) =\n                      {}", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<noteq> root; u \\<noteq> root;\n   parent s \\<noteq> parent u\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u = {}\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<noteq> root; u \\<noteq> root;\n   parent s \\<noteq> parent u\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u = {}\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "{"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<noteq> root; u \\<noteq> root;\n   parent s \\<noteq> parent u\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u = {}\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "assume **: \"s \\<noteq> root\" \"u \\<noteq> root\" \"parent s = parent u\" \"t \\<noteq> s\" \"t \\<noteq> u\""], ["proof (state)\nthis:\n  s \\<noteq> root\n  u \\<noteq> root\n  parent s = parent u\n  t \\<noteq> s\n  t \\<noteq> u\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "have \"bag s \\<inter> bag u = { parent s }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bag s \\<inter> bag u = {parent s}", "unfolding bag_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if s = root then {s} else {s, parent s}) \\<inter>\n    (if u = root then {u} else {u, parent u}) =\n    {parent s}", "using *(1) **(1-3)\n            Int_insert_left inf.orderE insertE insert_absorb subset_insertI"], ["proof (prove)\nusing this:\n  s \\<noteq> u\n  s \\<noteq> root\n  u \\<noteq> root\n  parent s = parent u\n  insert ?a ?B \\<inter> ?C =\n  (if ?a \\<in> ?C then insert ?a (?B \\<inter> ?C) else ?B \\<inter> ?C)\n  \\<lbrakk>?a \\<le> ?b; ?a = inf ?a ?b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  \\<lbrakk>?a \\<in> insert ?b ?A; ?a = ?b \\<Longrightarrow> ?P;\n   ?a \\<in> ?A \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  ?a \\<in> ?A \\<Longrightarrow> insert ?a ?A = ?A\n  ?B \\<subseteq> insert ?a ?B\n\ngoal (1 subgoal):\n 1. (if s = root then {s} else {s, parent s}) \\<inter>\n    (if u = root then {u} else {u, parent u}) =\n    {parent s}", "by auto"], ["proof (state)\nthis:\n  bag s \\<inter> bag u = {parent s}\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "moreover"], ["proof (state)\nthis:\n  bag s \\<inter> bag u = {parent s}\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "have \"t = parent s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = parent s", "using sibling_path[OF s **(1) u **(2) *(1) **(3)] t **(4,5)"], ["proof (prove)\nusing this:\n  s \\<leadsto> u = [s, parent s, u]\n  t \\<in> set (s \\<leadsto> u)\n  t \\<noteq> s\n  t \\<noteq> u\n\ngoal (1 subgoal):\n 1. t = parent s", "by auto"], ["proof (state)\nthis:\n  t = parent s\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "ultimately"], ["proof (chain)\npicking this:\n  bag s \\<inter> bag u = {parent s}\n  t = parent s", "have \"bag s \\<inter> bag u \\<subseteq> bag t\""], ["proof (prove)\nusing this:\n  bag s \\<inter> bag u = {parent s}\n  t = parent s\n\ngoal (1 subgoal):\n 1. bag s \\<inter> bag u \\<subseteq> bag t", "by (simp add: v_in_bag)"], ["proof (state)\nthis:\n  bag s \\<inter> bag u \\<subseteq> bag t\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "}"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<noteq> root; u \\<noteq> root; parent s = parent u;\n   t \\<noteq> s; t \\<noteq> u\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "ultimately"], ["proof (chain)\npicking this:\n  s = root \\<Longrightarrow> bag s \\<inter> bag u = {}\n  u = root \\<Longrightarrow> bag s \\<inter> bag u = {}\n  \\<lbrakk>s \\<noteq> root; u \\<noteq> root;\n   parent s \\<noteq> parent u\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u = {}\n  \\<lbrakk>s \\<noteq> root; u \\<noteq> root; parent s = parent u;\n   t \\<noteq> s; t \\<noteq> u\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "have \"bag s \\<inter> bag u \\<subseteq> bag t\""], ["proof (prove)\nusing this:\n  s = root \\<Longrightarrow> bag s \\<inter> bag u = {}\n  u = root \\<Longrightarrow> bag s \\<inter> bag u = {}\n  \\<lbrakk>s \\<noteq> root; u \\<noteq> root;\n   parent s \\<noteq> parent u\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u = {}\n  \\<lbrakk>s \\<noteq> root; u \\<noteq> root; parent s = parent u;\n   t \\<noteq> s; t \\<noteq> u\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t\n\ngoal (1 subgoal):\n 1. bag s \\<inter> bag u \\<subseteq> bag t", "by blast"], ["proof (state)\nthis:\n  bag s \\<inter> bag u \\<subseteq> bag t\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "}"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<noteq> u; (s, u) \\<notin> E\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t\n\ngoal (1 subgoal):\n 1. \\<And>s u t.\n       \\<lbrakk>s \\<in> V; u \\<in> V; t \\<in> set (s \\<leadsto> u)\\<rbrakk>\n       \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "ultimately"], ["proof (chain)\npicking this:\n  s = u \\<Longrightarrow> t = s\n  s \\<rightarrow> u \\<Longrightarrow> t = s \\<or> t = u\n  \\<lbrakk>s \\<noteq> u; (s, u) \\<notin> E\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t", "show \"bag s \\<inter> bag u \\<subseteq> bag t\""], ["proof (prove)\nusing this:\n  s = u \\<Longrightarrow> t = s\n  s \\<rightarrow> u \\<Longrightarrow> t = s \\<or> t = u\n  \\<lbrakk>s \\<noteq> u; (s, u) \\<notin> E\\<rbrakk>\n  \\<Longrightarrow> bag s \\<inter> bag u \\<subseteq> bag t\n\ngoal (1 subgoal):\n 1. bag s \\<inter> bag u \\<subseteq> bag t", "by blast"], ["proof (state)\nthis:\n  bag s \\<inter> bag u \\<subseteq> bag t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  TreeDecomposition G G bag\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "then"], ["proof (chain)\npicking this:\n  TreeDecomposition G G bag", "interpret TreeDecomposition G G bag"], ["proof (prove)\nusing this:\n  TreeDecomposition G G bag\n\ngoal (1 subgoal):\n 1. TreeDecomposition G G bag", "."], ["proof (state)\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "have \"card { v, parent v } \\<le> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {v, parent v} \\<le> 2", "by (metis card.insert card.empty finite.emptyI finite_insert insert_absorb insert_not_empty\n            lessI less_or_eq_imp_le numerals(2))"], ["proof (state)\nthis:\n  card {v, parent v} \\<le> 2\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "hence \"card (bag v) \\<le> 2\""], ["proof (prove)\nusing this:\n  card {v, parent v} \\<le> 2\n\ngoal (1 subgoal):\n 1. card (bag v) \\<le> 2", "unfolding bag_def"], ["proof (prove)\nusing this:\n  card {v, parent v} \\<le> 2\n\ngoal (1 subgoal):\n 1. card (if v = root then {v} else {v, parent v}) \\<le> 2", "by simp"], ["proof (state)\nthis:\n  card (bag v) \\<le> 2\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "}"], ["proof (state)\nthis:\n  card (bag ?v2) \\<le> 2\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "hence \"max_bag_card \\<le> 2\""], ["proof (prove)\nusing this:\n  card (bag ?v2) \\<le> 2\n\ngoal (1 subgoal):\n 1. max_bag_card \\<le> 2", "using \\<open>V \\<noteq> {}\\<close> max_bag_card_in_bag_cards"], ["proof (prove)\nusing this:\n  card (bag ?v2) \\<le> 2\n  V \\<noteq> {}\n  V \\<noteq> {} \\<Longrightarrow> max_bag_card \\<in> bag_cards\n\ngoal (1 subgoal):\n 1. max_bag_card \\<le> 2", "by auto"], ["proof (state)\nthis:\n  max_bag_card \\<le> 2\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "hence \"width \\<le> 1\""], ["proof (prove)\nusing this:\n  max_bag_card \\<le> 2\n\ngoal (1 subgoal):\n 1. width \\<le> 1", "unfolding width_def"], ["proof (prove)\nusing this:\n  max_bag_card \\<le> 2\n\ngoal (1 subgoal):\n 1. (if V = {} then 0 else max_bag_card - 1) \\<le> 1", "by (simp add: \\<open>V \\<noteq> {}\\<close>)"], ["proof (state)\nthis:\n  width \\<le> 1\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "hence \"\\<exists>bag. TreeDecomposition G G bag \\<and> TreeDecomposition.width G bag \\<le> 1\""], ["proof (prove)\nusing this:\n  width \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<exists>bag.\n       TreeDecomposition G G bag \\<and>\n       TreeDecomposition.width G bag \\<le> 1", "using TreeDecomposition_axioms"], ["proof (prove)\nusing this:\n  width \\<le> 1\n  TreeDecomposition G G bag\n\ngoal (1 subgoal):\n 1. \\<exists>bag.\n       TreeDecomposition G G bag \\<and>\n       TreeDecomposition.width G bag \\<le> 1", "by blast"], ["proof (state)\nthis:\n  \\<exists>bag.\n     TreeDecomposition G G bag \\<and> TreeDecomposition.width G bag \\<le> 1\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "}"], ["proof (state)\nthis:\n  V \\<noteq> {} \\<Longrightarrow>\n  \\<exists>bag.\n     TreeDecomposition G G bag \\<and> TreeDecomposition.width G bag \\<le> 1\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  V \\<noteq> {} \\<Longrightarrow>\n  \\<exists>bag.\n     TreeDecomposition G G bag \\<and> TreeDecomposition.width G bag \\<le> 1\n\ngoal (1 subgoal):\n 1. treewidth \\<le> 1", "by (metis TreeDecomposition.width_V_empty le_0_eq linear\n    treewidth_cards_treewidth treewidth_upper_bound_ex)"], ["proof (state)\nthis:\n  treewidth \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If the tree is non-trivial, that is, if it contains more than one vertex, then its\n  treewidth is exactly 1.\\<close>"], ["", "corollary treewidth_tree_exact:\n  fixes G :: \"nat Graph\" (structure)\n  assumes \"Tree G\" \"card V\\<^bsub>G\\<^esub> > 1\"\n  shows \"Graph.treewidth G = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Graph.treewidth G = 1", "using assms Graph.treewidth_lower_bound_1 Tree.tree_has_edge Tree_def treewidth_tree"], ["proof (prove)\nusing this:\n  Tree G\n  1 < card V\n  \\<lbrakk>Graph ?G; ?v \\<rightarrow>\\<^bsub>?G\\<^esub> ?w\\<rbrakk>\n  \\<Longrightarrow> 1 \\<le> Graph.treewidth ?G\n  \\<lbrakk>Tree ?G; 1 < card V\\<^bsub>?G\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>v w. v \\<rightarrow>\\<^bsub>?G\\<^esub> w\n  Tree ?G \\<equiv> Graph ?G \\<and> Tree_axioms ?G\n  Tree ?G \\<Longrightarrow> Graph.treewidth ?G \\<le> 1\n\ngoal (1 subgoal):\n 1. Graph.treewidth G = 1", "by fastforce"], ["", "end"]]}