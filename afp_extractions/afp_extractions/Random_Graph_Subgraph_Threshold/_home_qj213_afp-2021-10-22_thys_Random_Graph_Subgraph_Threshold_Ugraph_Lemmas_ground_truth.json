{"file_name": "/home/qj213/afp-2021-10-22/thys/Random_Graph_Subgraph_Threshold/Ugraph_Lemmas.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Random_Graph_Subgraph_Threshold", "problem_names": ["lemma complete_wellformed: \"uwellformed (complete V)\"", "lemma all_edges_finite: \"finite V \\<Longrightarrow> finite (all_edges V)\"", "lemma all_edges_disjoint: \"S \\<inter> T = {} \\<Longrightarrow> all_edges S \\<inter> all_edges T = {}\"", "lemma (in edge_space) wellformed_and_finite:\n  assumes \"E \\<in> Pow S_edges\"\n  shows \"finite_graph (edge_ugraph E)\" \"uwellformed (edge_ugraph E)\"", "lemma (in edge_space) cylinder_empty_prob:\n  \"A \\<subseteq> S_edges \\<Longrightarrow> prob (cylinder S_edges A {}) = p ^ (card A)\"", "lemma subgraph_refl: \"subgraph G G\"", "lemma subgraph_trans: \"subgraph G'' G' \\<Longrightarrow> subgraph G' G \\<Longrightarrow> subgraph G'' G\"", "lemma subgraph_antisym: \"subgraph G G' \\<Longrightarrow> subgraph G' G \\<Longrightarrow> G = G'\"", "lemma subgraph_complete:\n  assumes \"uwellformed G\"\n  shows \"subgraph G (complete (uverts G))\"", "lemma subgraph_finite: \"\\<lbrakk> finite_graph G; subgraph G' G \\<rbrakk> \\<Longrightarrow> finite_graph G'\"", "lemma subgraphs_finite:\n  assumes \"finite_graph G\"\n  shows \"finite (subgraphs G)\"", "lemma induced_is_subgraph:\n  \"V \\<subseteq> uverts G \\<Longrightarrow> subgraph (induced_subgraph V G) G\"\n  \"V \\<subseteq> uverts G \\<Longrightarrow> subgraph (induced_subgraph V G) (complete V)\"", "lemma induced_wellformed: \"uwellformed G \\<Longrightarrow> V \\<subseteq> uverts G \\<Longrightarrow> uwellformed (induced_subgraph V G)\"", "lemma subgraph_union_induced:\n  assumes \"uverts H\\<^sub>1 \\<subseteq> S\" and \"uverts H\\<^sub>2 \\<subseteq> T\"\n  assumes \"uwellformed H\\<^sub>1\" and \"uwellformed H\\<^sub>2\"\n  shows \"subgraph H\\<^sub>1 (induced_subgraph S G) \\<and> subgraph H\\<^sub>2 (induced_subgraph T G) \\<longleftrightarrow>\n         subgraph (uverts H\\<^sub>1 \\<union> uverts H\\<^sub>2, uedges H\\<^sub>1 \\<union> uedges H\\<^sub>2) (induced_subgraph (S \\<union> T) G)\"", "lemma (in edge_space) induced_subgraph_prob:\n  assumes \"uverts H \\<subseteq> V\" and \"uwellformed H\" and \"V \\<subseteq> S_verts\"\n  shows \"prob {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} = p ^ card (uedges H)\" (is \"prob ?A = _\")", "lemma map_ugraph_id: \"map_ugraph id = id\"", "lemma map_ugraph_trans: \"map_ugraph (g \\<circ> f) = (map_ugraph g) \\<circ> (map_ugraph f)\"", "lemma map_ugraph_wellformed:\n  assumes \"uwellformed G\" and \"inj_on f (uverts G)\"\n  shows \"uwellformed (map_ugraph f G)\"", "lemma map_ugraph_finite: \"finite_graph G \\<Longrightarrow> finite_graph (map_ugraph f G)\"", "lemma map_ugraph_preserves_sub:\n  assumes \"subgraph G\\<^sub>1 G\\<^sub>2\"\n  shows \"subgraph (map_ugraph f G\\<^sub>1) (map_ugraph f G\\<^sub>2)\"", "lemma isomorphic_refl: \"uwellformed G \\<Longrightarrow> G \\<simeq> G\"", "lemma isomorphic_trans:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\" and \"G\\<^sub>2 \\<simeq> G\\<^sub>3\"\n  shows \"G\\<^sub>1 \\<simeq> G\\<^sub>3\"", "lemma isomorphic_sym:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\"\n  shows \"G\\<^sub>2 \\<simeq> G\\<^sub>1\"", "lemma isomorphic_cards:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\"\n  shows\n    \"card (uverts G\\<^sub>1) = card (uverts G\\<^sub>2)\" (is \"?V\")\n    \"card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)\" (is \"?E\")", "lemma subgraph_is_subgraph_isomorphic: \"\\<lbrakk> uwellformed G'; uwellformed G; subgraph G' G \\<rbrakk> \\<Longrightarrow> G' \\<sqsubseteq> G\"", "lemma isomorphic_is_subgraph_isomorphic: \"G\\<^sub>1 \\<simeq> G\\<^sub>2 \\<Longrightarrow> G\\<^sub>1 \\<sqsubseteq> G\\<^sub>2\"", "lemma subgraph_isomorphic_refl: \"uwellformed G \\<Longrightarrow> G \\<sqsubseteq> G\"", "lemma subgraph_isomorphic_pre_iso_closed:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\" and \"G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\"\n  shows \"G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3\"", "lemma subgraph_isomorphic_pre_subgraph_closed:\n  assumes \"uwellformed G\\<^sub>1\" and \"subgraph G\\<^sub>1 G\\<^sub>2\" and \"G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\"\n  shows \"G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3\"", "lemmas subgraph_isomorphic_pre_closed = subgraph_isomorphic_pre_subgraph_closed subgraph_isomorphic_pre_iso_closed", "lemma subgraph_isomorphic_trans[trans]:\n  assumes \"G\\<^sub>1 \\<sqsubseteq> G\\<^sub>2\" and \"G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\"\n  shows \"G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3\"", "lemma subgraph_isomorphic_post_iso_closed: \"\\<lbrakk> H \\<sqsubseteq> G; G \\<simeq> G' \\<rbrakk> \\<Longrightarrow> H \\<sqsubseteq> G'\"", "lemmas subgraph_isomorphic_post_closed = subgraph_isomorphic_post_iso_closed", "lemmas subgraph_isomorphic_closed = subgraph_isomorphic_pre_closed subgraph_isomorphic_post_closed", "lemma subgraph_has_max_density:\n  assumes \"finite_graph G\" and \"nonempty_graph G\" and \"uwellformed G\"\n  shows \"\\<exists>G'. density G' = max_density G \\<and> subgraph G' G \\<and> nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'\"", "lemma max_density_is_max:\n  assumes \"finite_graph G\" and \"finite_graph G'\" and \"nonempty_graph G'\" and \"uwellformed G'\" and \"subgraph G' G\"\n  shows \"density G' \\<le> max_density G\"", "lemma max_density_gr_zero:\n  assumes \"finite_graph G\" and \"nonempty_graph G\" and \"uwellformed G\"\n  shows \"0 < max_density G\"", "lemma isomorphic_density:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\"\n  shows \"density G\\<^sub>1 = density G\\<^sub>2\"", "lemma isomorphic_max_density:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\" and \"nonempty_graph G\\<^sub>1\" and \"nonempty_graph G\\<^sub>2\" and \"finite_graph G\\<^sub>1\" and \"finite_graph G\\<^sub>2\"\n  shows \"max_density G\\<^sub>1 = max_density G\\<^sub>2\"", "lemma ex_fixed_selector:\n  assumes \"uwellformed H\" and \"finite_graph H\"\n  obtains f where \"is_fixed_selector H f\"", "lemma fixed_selector_induced_subgraph:\n  assumes \"is_fixed_selector H f\" and \"card (uverts H) = card V\" and \"finite V\"\n  assumes sub: \"subgraph (f V) (induced_subgraph V G)\" and V: \"V \\<subseteq> uverts G\" and G: \"uwellformed G\"\n  shows \"H \\<sqsubseteq> G\""], "translations": [["", "lemma complete_wellformed: \"uwellformed (complete V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed (Ugraph_Lemmas.complete V)", "unfolding complete_def uwellformed_def all_edges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>uedges\n                    (V, mk_uedge `\n                        {uv \\<in> V \\<times> V. fst uv \\<noteq> snd uv}).\n       card e = 2 \\<and>\n       (\\<forall>u\\<in>e.\n           u \\<in> uverts\n                    (V, mk_uedge `\n                        {uv \\<in> V \\<times> V. fst uv \\<noteq> snd uv}))", "by simp"], ["", "text\\<open>If the set of vertices is finite, the set of edges in the complete graph is finite.\\<close>"], ["", "lemma all_edges_finite: \"finite V \\<Longrightarrow> finite (all_edges V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow> finite (all_edges V)", "unfolding all_edges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow>\n    finite (mk_uedge ` {uv \\<in> V \\<times> V. fst uv \\<noteq> snd uv})", "by simp"], ["", "corollary complete_finite_edges: \"finite V \\<Longrightarrow> finite (uedges (complete V))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow> finite (uedges (Ugraph_Lemmas.complete V))", "unfolding complete_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow> finite (uedges (V, all_edges V))", "using all_edges_finite"], ["proof (prove)\nusing this:\n  finite ?V \\<Longrightarrow> finite (all_edges ?V)\n\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow> finite (uedges (V, all_edges V))", "by simp"], ["", "text\\<open>The sets of possible edges of disjoint sets of vertices are disjoint.\\<close>"], ["", "lemma all_edges_disjoint: \"S \\<inter> T = {} \\<Longrightarrow> all_edges S \\<inter> all_edges T = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<inter> T = {} \\<Longrightarrow>\n    all_edges S \\<inter> all_edges T = {}", "unfolding all_edges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<inter> T = {} \\<Longrightarrow>\n    mk_uedge ` {uv \\<in> S \\<times> S. fst uv \\<noteq> snd uv} \\<inter>\n    mk_uedge ` {uv \\<in> T \\<times> T. fst uv \\<noteq> snd uv} =\n    {}", "by force"], ["", "text\\<open>A graph is called `finite' if its set of edges and its set of vertices are finite.\\<close>"], ["", "definition \"finite_graph G \\<equiv> finite (uverts G) \\<and> finite (uedges G)\""], ["", "text\\<open>The complete graph is finite.\\<close>"], ["", "corollary complete_finite: \"finite V \\<Longrightarrow> finite_graph (complete V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow> finite_graph (Ugraph_Lemmas.complete V)", "using complete_finite_edges"], ["proof (prove)\nusing this:\n  finite ?V \\<Longrightarrow> finite (uedges (Ugraph_Lemmas.complete ?V))\n\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow> finite_graph (Ugraph_Lemmas.complete V)", "unfolding finite_graph_def complete_def"], ["proof (prove)\nusing this:\n  finite ?V \\<Longrightarrow> finite (uedges (?V, all_edges ?V))\n\ngoal (1 subgoal):\n 1. finite V \\<Longrightarrow>\n    finite (uverts (V, all_edges V)) \\<and> finite (uedges (V, all_edges V))", "by simp"], ["", "text\\<open>A graph is called `nonempty' if it contains at least one vertex and at least one edge.\\<close>"], ["", "definition \"nonempty_graph G \\<equiv> uverts G \\<noteq> {} \\<and> uedges G \\<noteq> {}\""], ["", "text\\<open>A random graph is both wellformed and finite.\\<close>"], ["", "lemma (in edge_space) wellformed_and_finite:\n  assumes \"E \\<in> Pow S_edges\"\n  shows \"finite_graph (edge_ugraph E)\" \"uwellformed (edge_ugraph E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_graph (edge_ugraph E) &&& uwellformed (edge_ugraph E)", "unfolding finite_graph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (uverts (edge_ugraph E)) \\<and>\n    finite (uedges (edge_ugraph E)) &&&\n    uwellformed (edge_ugraph E)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (uverts (edge_ugraph E))\n 2. finite (uedges (edge_ugraph E))\n 3. uwellformed (edge_ugraph E)", "show \"finite (uverts (edge_ugraph E))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (uverts (edge_ugraph E))", "unfolding edge_ugraph_def S_verts_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (uverts ({1..n}, E \\<inter> S_edges))", "by simp"], ["proof (state)\nthis:\n  finite (uverts (edge_ugraph E))\n\ngoal (2 subgoals):\n 1. finite (uedges (edge_ugraph E))\n 2. uwellformed (edge_ugraph E)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (uedges (edge_ugraph E))\n 2. uwellformed (edge_ugraph E)", "show \"finite (uedges (edge_ugraph E))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (uedges (edge_ugraph E))", "using assms"], ["proof (prove)\nusing this:\n  E \\<in> Pow S_edges\n\ngoal (1 subgoal):\n 1. finite (uedges (edge_ugraph E))", "unfolding edge_ugraph_def S_edges_def"], ["proof (prove)\nusing this:\n  E \\<in> Pow (all_edges S_verts)\n\ngoal (1 subgoal):\n 1. finite (uedges (S_verts, E \\<inter> all_edges S_verts))", "by (auto intro: all_edges_finite)"], ["proof (state)\nthis:\n  finite (uedges (edge_ugraph E))\n\ngoal (1 subgoal):\n 1. uwellformed (edge_ugraph E)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. uwellformed (edge_ugraph E)", "show \"uwellformed (edge_ugraph E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed (edge_ugraph E)", "using complete_wellformed"], ["proof (prove)\nusing this:\n  uwellformed (Ugraph_Lemmas.complete ?V)\n\ngoal (1 subgoal):\n 1. uwellformed (edge_ugraph E)", "unfolding edge_ugraph_def S_edges_def complete_def uwellformed_def"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>uedges (?V, all_edges ?V).\n     card e = 2 \\<and> (\\<forall>u\\<in>e. u \\<in> uverts (?V, all_edges ?V))\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>uedges (S_verts, E \\<inter> all_edges S_verts).\n       card e = 2 \\<and>\n       (\\<forall>u\\<in>e.\n           u \\<in> uverts (S_verts, E \\<inter> all_edges S_verts))", "by force"], ["proof (state)\nthis:\n  uwellformed (edge_ugraph E)\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The probability for a random graph to have $e$ edges is $p ^ e$.\\<close>"], ["", "lemma (in edge_space) cylinder_empty_prob:\n  \"A \\<subseteq> S_edges \\<Longrightarrow> prob (cylinder S_edges A {}) = p ^ (card A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> S_edges \\<Longrightarrow>\n    prob (cylinder S_edges A {}) = p ^ card A", "using cylinder_prob"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> S_edges; ?B \\<subseteq> S_edges;\n   ?A \\<inter> ?B = {}\\<rbrakk>\n  \\<Longrightarrow> prob (cylinder S_edges ?A ?B) =\n                    p ^ card ?A * (1 - p) ^ card ?B\n\ngoal (1 subgoal):\n 1. A \\<subseteq> S_edges \\<Longrightarrow>\n    prob (cylinder S_edges A {}) = p ^ card A", "by auto"], ["", "subsection\\<open>Subgraphs\\<close>"], ["", "definition subgraph :: \"ugraph \\<Rightarrow> ugraph \\<Rightarrow> bool\" where\n\"subgraph G' G \\<equiv> uverts G' \\<subseteq> uverts G \\<and> uedges G' \\<subseteq> uedges G\""], ["", "lemma subgraph_refl: \"subgraph G G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgraph G G", "unfolding subgraph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. uverts G \\<subseteq> uverts G \\<and> uedges G \\<subseteq> uedges G", "by simp"], ["", "lemma subgraph_trans: \"subgraph G'' G' \\<Longrightarrow> subgraph G' G \\<Longrightarrow> subgraph G'' G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>subgraph G'' G'; subgraph G' G\\<rbrakk>\n    \\<Longrightarrow> subgraph G'' G", "unfolding subgraph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>uverts G'' \\<subseteq> uverts G' \\<and>\n             uedges G'' \\<subseteq> uedges G';\n     uverts G' \\<subseteq> uverts G \\<and>\n     uedges G' \\<subseteq> uedges G\\<rbrakk>\n    \\<Longrightarrow> uverts G'' \\<subseteq> uverts G \\<and>\n                      uedges G'' \\<subseteq> uedges G", "by auto"], ["", "lemma subgraph_antisym: \"subgraph G G' \\<Longrightarrow> subgraph G' G \\<Longrightarrow> G = G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>subgraph G G'; subgraph G' G\\<rbrakk> \\<Longrightarrow> G = G'", "unfolding subgraph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>uverts G \\<subseteq> uverts G' \\<and>\n             uedges G \\<subseteq> uedges G';\n     uverts G' \\<subseteq> uverts G \\<and>\n     uedges G' \\<subseteq> uedges G\\<rbrakk>\n    \\<Longrightarrow> G = G'", "by (auto simp add: Product_Type.prod_eqI)"], ["", "lemma subgraph_complete:\n  assumes \"uwellformed G\"\n  shows \"subgraph G (complete (uverts G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "fix e"], ["proof (state)\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "assume \"e \\<in> uedges G\""], ["proof (state)\nthis:\n  e \\<in> uedges G\n\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "with assms"], ["proof (chain)\npicking this:\n  uwellformed G\n  e \\<in> uedges G", "have \"card e = 2\" and u: \"\\<And>u. u \\<in> e \\<Longrightarrow> u \\<in> uverts G\""], ["proof (prove)\nusing this:\n  uwellformed G\n  e \\<in> uedges G\n\ngoal (1 subgoal):\n 1. card e = 2 &&& (\\<And>u. u \\<in> e \\<Longrightarrow> u \\<in> uverts G)", "unfolding uwellformed_def"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>uedges G.\n     card e = 2 \\<and> (\\<forall>u\\<in>e. u \\<in> uverts G)\n  e \\<in> uedges G\n\ngoal (1 subgoal):\n 1. card e = 2 &&& (\\<And>u. u \\<in> e \\<Longrightarrow> u \\<in> uverts G)", "by auto"], ["proof (state)\nthis:\n  card e = 2\n  ?u \\<in> e \\<Longrightarrow> ?u \\<in> uverts G\n\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "moreover"], ["proof (state)\nthis:\n  card e = 2\n  ?u \\<in> e \\<Longrightarrow> ?u \\<in> uverts G\n\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "then"], ["proof (chain)\npicking this:\n  card e = 2\n  ?u \\<in> e \\<Longrightarrow> ?u \\<in> uverts G", "obtain u v where \"e = {u, v}\" \"u \\<noteq> v\""], ["proof (prove)\nusing this:\n  card e = 2\n  ?u \\<in> e \\<Longrightarrow> ?u \\<in> uverts G\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>e = {u, v}; u \\<noteq> v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis card_2_elements)"], ["proof (state)\nthis:\n  e = {u, v}\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "ultimately"], ["proof (chain)\npicking this:\n  card e = 2\n  ?u \\<in> e \\<Longrightarrow> ?u \\<in> uverts G\n  e = {u, v}\n  u \\<noteq> v", "have \"e = mk_uedge (u, v)\" \"u \\<in> uverts G\" \"v \\<in> uverts G\""], ["proof (prove)\nusing this:\n  card e = 2\n  ?u \\<in> e \\<Longrightarrow> ?u \\<in> uverts G\n  e = {u, v}\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. e = mk_uedge (u, v) &&& u \\<in> uverts G &&& v \\<in> uverts G", "by auto"], ["proof (state)\nthis:\n  e = mk_uedge (u, v)\n  u \\<in> uverts G\n  v \\<in> uverts G\n\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "hence \"e \\<in> all_edges (uverts G)\""], ["proof (prove)\nusing this:\n  e = mk_uedge (u, v)\n  u \\<in> uverts G\n  v \\<in> uverts G\n\ngoal (1 subgoal):\n 1. e \\<in> all_edges (uverts G)", "unfolding all_edges_def"], ["proof (prove)\nusing this:\n  e = mk_uedge (u, v)\n  u \\<in> uverts G\n  v \\<in> uverts G\n\ngoal (1 subgoal):\n 1. e \\<in> mk_uedge `\n            {uv \\<in> uverts G \\<times> uverts G. fst uv \\<noteq> snd uv}", "using \\<open>u \\<noteq> v\\<close>"], ["proof (prove)\nusing this:\n  e = mk_uedge (u, v)\n  u \\<in> uverts G\n  v \\<in> uverts G\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. e \\<in> mk_uedge `\n            {uv \\<in> uverts G \\<times> uverts G. fst uv \\<noteq> snd uv}", "by fastforce"], ["proof (state)\nthis:\n  e \\<in> all_edges (uverts G)\n\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "}"], ["proof (state)\nthis:\n  ?e2 \\<in> uedges G \\<Longrightarrow> ?e2 \\<in> all_edges (uverts G)\n\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?e2 \\<in> uedges G \\<Longrightarrow> ?e2 \\<in> all_edges (uverts G)\n\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "unfolding complete_def subgraph_def"], ["proof (prove)\nusing this:\n  ?e2 \\<in> uedges G \\<Longrightarrow> ?e2 \\<in> all_edges (uverts G)\n\ngoal (1 subgoal):\n 1. uverts G \\<subseteq> uverts (uverts G, all_edges (uverts G)) \\<and>\n    uedges G \\<subseteq> uedges (uverts G, all_edges (uverts G))", "by auto"], ["proof (state)\nthis:\n  subgraph G (Ugraph_Lemmas.complete (uverts G))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary wellformed_all_edges: \"uwellformed G \\<Longrightarrow> uedges G \\<subseteq> all_edges (uverts G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G \\<Longrightarrow>\n    uedges G \\<subseteq> all_edges (uverts G)", "using subgraph_complete subgraph_def complete_def"], ["proof (prove)\nusing this:\n  uwellformed ?G \\<Longrightarrow>\n  subgraph ?G (Ugraph_Lemmas.complete (uverts ?G))\n  subgraph ?G' ?G \\<equiv>\n  uverts ?G' \\<subseteq> uverts ?G \\<and> uedges ?G' \\<subseteq> uedges ?G\n  Ugraph_Lemmas.complete ?V = (?V, all_edges ?V)\n\ngoal (1 subgoal):\n 1. uwellformed G \\<Longrightarrow>\n    uedges G \\<subseteq> all_edges (uverts G)", "by simp"], ["", "lemma subgraph_finite: \"\\<lbrakk> finite_graph G; subgraph G' G \\<rbrakk> \\<Longrightarrow> finite_graph G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite_graph G; subgraph G' G\\<rbrakk>\n    \\<Longrightarrow> finite_graph G'", "unfolding finite_graph_def subgraph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (uverts G) \\<and> finite (uedges G);\n     uverts G' \\<subseteq> uverts G \\<and>\n     uedges G' \\<subseteq> uedges G\\<rbrakk>\n    \\<Longrightarrow> finite (uverts G') \\<and> finite (uedges G')", "by (metis rev_finite_subset)"], ["", "corollary wellformed_finite:\n  assumes \"finite (uverts G)\" and \"uwellformed G\"\n  shows \"finite_graph G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_graph G", "proof (rule subgraph_finite[where G = \"complete (uverts G)\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. finite_graph (Ugraph_Lemmas.complete (uverts G))\n 2. subgraph G (Ugraph_Lemmas.complete (uverts G))", "show \"subgraph G (complete (uverts G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "using assms"], ["proof (prove)\nusing this:\n  finite (uverts G)\n  uwellformed G\n\ngoal (1 subgoal):\n 1. subgraph G (Ugraph_Lemmas.complete (uverts G))", "by (simp add: subgraph_complete)"], ["proof (state)\nthis:\n  subgraph G (Ugraph_Lemmas.complete (uverts G))\n\ngoal (1 subgoal):\n 1. finite_graph (Ugraph_Lemmas.complete (uverts G))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_graph (Ugraph_Lemmas.complete (uverts G))", "have \"finite (uedges (complete (uverts G)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (uedges (Ugraph_Lemmas.complete (uverts G)))", "using complete_finite_edges[OF assms(1)]"], ["proof (prove)\nusing this:\n  finite (uedges (Ugraph_Lemmas.complete (uverts G)))\n\ngoal (1 subgoal):\n 1. finite (uedges (Ugraph_Lemmas.complete (uverts G)))", "."], ["proof (state)\nthis:\n  finite (uedges (Ugraph_Lemmas.complete (uverts G)))\n\ngoal (1 subgoal):\n 1. finite_graph (Ugraph_Lemmas.complete (uverts G))", "thus \"finite_graph (complete (uverts G))\""], ["proof (prove)\nusing this:\n  finite (uedges (Ugraph_Lemmas.complete (uverts G)))\n\ngoal (1 subgoal):\n 1. finite_graph (Ugraph_Lemmas.complete (uverts G))", "unfolding finite_graph_def complete_def"], ["proof (prove)\nusing this:\n  finite (uedges (uverts G, all_edges (uverts G)))\n\ngoal (1 subgoal):\n 1. finite (uverts (uverts G, all_edges (uverts G))) \\<and>\n    finite (uedges (uverts G, all_edges (uverts G)))", "using assms(1)"], ["proof (prove)\nusing this:\n  finite (uedges (uverts G, all_edges (uverts G)))\n  finite (uverts G)\n\ngoal (1 subgoal):\n 1. finite (uverts (uverts G, all_edges (uverts G))) \\<and>\n    finite (uedges (uverts G, all_edges (uverts G)))", "by auto"], ["proof (state)\nthis:\n  finite_graph (Ugraph_Lemmas.complete (uverts G))\n\ngoal:\nNo subgoals!", "qed"], ["", "definition subgraphs :: \"ugraph \\<Rightarrow> ugraph set\" where\n\"subgraphs G = {G'. subgraph G' G}\""], ["", "definition nonempty_subgraphs :: \"ugraph \\<Rightarrow> ugraph set\" where\n\"nonempty_subgraphs G = {G'. uwellformed G' \\<and> subgraph G' G \\<and> nonempty_graph G'}\""], ["", "lemma subgraphs_finite:\n  assumes \"finite_graph G\"\n  shows \"finite (subgraphs G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (subgraphs G)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (subgraphs G)", "have \"subgraphs G = {(V', E'). V' \\<subseteq> uverts G \\<and> E' \\<subseteq> uedges G}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgraphs G =\n    {(V', E'). V' \\<subseteq> uverts G \\<and> E' \\<subseteq> uedges G}", "unfolding subgraphs_def subgraph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {G'.\n     uverts G' \\<subseteq> uverts G \\<and> uedges G' \\<subseteq> uedges G} =\n    {(V', E'). V' \\<subseteq> uverts G \\<and> E' \\<subseteq> uedges G}", "by force"], ["proof (state)\nthis:\n  subgraphs G =\n  {(V', E'). V' \\<subseteq> uverts G \\<and> E' \\<subseteq> uedges G}\n\ngoal (1 subgoal):\n 1. finite (subgraphs G)", "moreover"], ["proof (state)\nthis:\n  subgraphs G =\n  {(V', E'). V' \\<subseteq> uverts G \\<and> E' \\<subseteq> uedges G}\n\ngoal (1 subgoal):\n 1. finite (subgraphs G)", "have \"finite (uverts G)\" \"finite (uedges G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (uverts G) &&& finite (uedges G)", "using assms"], ["proof (prove)\nusing this:\n  finite_graph G\n\ngoal (1 subgoal):\n 1. finite (uverts G) &&& finite (uedges G)", "unfolding finite_graph_def"], ["proof (prove)\nusing this:\n  finite (uverts G) \\<and> finite (uedges G)\n\ngoal (1 subgoal):\n 1. finite (uverts G) &&& finite (uedges G)", "by auto"], ["proof (state)\nthis:\n  finite (uverts G)\n  finite (uedges G)\n\ngoal (1 subgoal):\n 1. finite (subgraphs G)", "ultimately"], ["proof (chain)\npicking this:\n  subgraphs G =\n  {(V', E'). V' \\<subseteq> uverts G \\<and> E' \\<subseteq> uedges G}\n  finite (uverts G)\n  finite (uedges G)", "show ?thesis"], ["proof (prove)\nusing this:\n  subgraphs G =\n  {(V', E'). V' \\<subseteq> uverts G \\<and> E' \\<subseteq> uedges G}\n  finite (uverts G)\n  finite (uedges G)\n\ngoal (1 subgoal):\n 1. finite (subgraphs G)", "by simp"], ["proof (state)\nthis:\n  finite (subgraphs G)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary nonempty_subgraphs_finite: \"finite_graph G \\<Longrightarrow> finite (nonempty_subgraphs G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_graph G \\<Longrightarrow> finite (nonempty_subgraphs G)", "using subgraphs_finite"], ["proof (prove)\nusing this:\n  finite_graph ?G \\<Longrightarrow> finite (subgraphs ?G)\n\ngoal (1 subgoal):\n 1. finite_graph G \\<Longrightarrow> finite (nonempty_subgraphs G)", "unfolding nonempty_subgraphs_def subgraphs_def"], ["proof (prove)\nusing this:\n  finite_graph ?G \\<Longrightarrow> finite {G'. subgraph G' ?G}\n\ngoal (1 subgoal):\n 1. finite_graph G \\<Longrightarrow>\n    finite\n     {G'. uwellformed G' \\<and> subgraph G' G \\<and> nonempty_graph G'}", "by auto"], ["", "subsection\\<open>Induced subgraphs\\<close>"], ["", "definition induced_subgraph :: \"uvert set \\<Rightarrow> ugraph \\<Rightarrow> ugraph\" where\n\"induced_subgraph V G = (V, uedges G \\<inter> all_edges V)\""], ["", "lemma induced_is_subgraph:\n  \"V \\<subseteq> uverts G \\<Longrightarrow> subgraph (induced_subgraph V G) G\"\n  \"V \\<subseteq> uverts G \\<Longrightarrow> subgraph (induced_subgraph V G) (complete V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (V \\<subseteq> uverts G \\<Longrightarrow>\n     subgraph (induced_subgraph V G) G) &&&\n    (V \\<subseteq> uverts G \\<Longrightarrow>\n     subgraph (induced_subgraph V G) (Ugraph_Lemmas.complete V))", "unfolding subgraph_def induced_subgraph_def complete_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (V \\<subseteq> uverts G \\<Longrightarrow>\n     uverts (V, uedges G \\<inter> all_edges V) \\<subseteq> uverts G \\<and>\n     uedges (V, uedges G \\<inter> all_edges V) \\<subseteq> uedges G) &&&\n    (V \\<subseteq> uverts G \\<Longrightarrow>\n     uverts (V, uedges G \\<inter> all_edges V)\n     \\<subseteq> uverts (V, all_edges V) \\<and>\n     uedges (V, uedges G \\<inter> all_edges V)\n     \\<subseteq> uedges (V, all_edges V))", "by simp+"], ["", "lemma induced_wellformed: \"uwellformed G \\<Longrightarrow> V \\<subseteq> uverts G \\<Longrightarrow> uwellformed (induced_subgraph V G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>uwellformed G; V \\<subseteq> uverts G\\<rbrakk>\n    \\<Longrightarrow> uwellformed (induced_subgraph V G)", "unfolding uwellformed_def induced_subgraph_def all_edges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>e\\<in>uedges G.\n                card e = 2 \\<and> (\\<forall>u\\<in>e. u \\<in> uverts G);\n     V \\<subseteq> uverts G\\<rbrakk>\n    \\<Longrightarrow> \\<forall>e\\<in>uedges\n(V, uedges G \\<inter>\n    mk_uedge ` {uv \\<in> V \\<times> V. fst uv \\<noteq> snd uv}).\n                         card e = 2 \\<and>\n                         (\\<forall>u\\<in>e.\n                             u \\<in> uverts\n(V, uedges G \\<inter>\n    mk_uedge ` {uv \\<in> V \\<times> V. fst uv \\<noteq> snd uv}))", "by force"], ["", "lemma subgraph_union_induced:\n  assumes \"uverts H\\<^sub>1 \\<subseteq> S\" and \"uverts H\\<^sub>2 \\<subseteq> T\"\n  assumes \"uwellformed H\\<^sub>1\" and \"uwellformed H\\<^sub>2\"\n  shows \"subgraph H\\<^sub>1 (induced_subgraph S G) \\<and> subgraph H\\<^sub>2 (induced_subgraph T G) \\<longleftrightarrow>\n         subgraph (uverts H\\<^sub>1 \\<union> uverts H\\<^sub>2, uedges H\\<^sub>1 \\<union> uedges H\\<^sub>2) (induced_subgraph (S \\<union> T) G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (subgraph H\\<^sub>1 (induced_subgraph S G) \\<and>\n     subgraph H\\<^sub>2 (induced_subgraph T G)) =\n    subgraph\n     (uverts H\\<^sub>1 \\<union> uverts H\\<^sub>2,\n      uedges H\\<^sub>1 \\<union> uedges H\\<^sub>2)\n     (induced_subgraph (S \\<union> T) G)", "unfolding induced_subgraph_def subgraph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((uverts H\\<^sub>1\n      \\<subseteq> uverts (S, uedges G \\<inter> all_edges S) \\<and>\n      uedges H\\<^sub>1\n      \\<subseteq> uedges (S, uedges G \\<inter> all_edges S)) \\<and>\n     uverts H\\<^sub>2\n     \\<subseteq> uverts (T, uedges G \\<inter> all_edges T) \\<and>\n     uedges H\\<^sub>2\n     \\<subseteq> uedges (T, uedges G \\<inter> all_edges T)) =\n    (uverts\n      (uverts H\\<^sub>1 \\<union> uverts H\\<^sub>2,\n       uedges H\\<^sub>1 \\<union> uedges H\\<^sub>2)\n     \\<subseteq> uverts\n                  (S \\<union> T,\n                   uedges G \\<inter> all_edges (S \\<union> T)) \\<and>\n     uedges\n      (uverts H\\<^sub>1 \\<union> uverts H\\<^sub>2,\n       uedges H\\<^sub>1 \\<union> uedges H\\<^sub>2)\n     \\<subseteq> uedges\n                  (S \\<union> T,\n                   uedges G \\<inter> all_edges (S \\<union> T)))", "apply auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges S;\n        uverts H\\<^sub>2 \\<subseteq> T;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> all_edges T;\n        x \\<in> uedges H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges (S \\<union> T)\n 2. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges S;\n        uverts H\\<^sub>2 \\<subseteq> T;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> all_edges T;\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges (S \\<union> T)\n 3. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> S\n 4. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges S\n 5. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T\n 6. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges T", "using all_edges_mono"], ["proof (prove)\nusing this:\n  ?vs \\<subseteq> ?ws \\<Longrightarrow>\n  all_edges ?vs \\<subseteq> all_edges ?ws\n\ngoal (6 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges S;\n        uverts H\\<^sub>2 \\<subseteq> T;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> all_edges T;\n        x \\<in> uedges H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges (S \\<union> T)\n 2. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges S;\n        uverts H\\<^sub>2 \\<subseteq> T;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> all_edges T;\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges (S \\<union> T)\n 3. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> S\n 4. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges S\n 5. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T\n 6. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges T", "apply blast"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges S;\n        uverts H\\<^sub>2 \\<subseteq> T;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> all_edges T;\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges (S \\<union> T)\n 2. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> S\n 3. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges S\n 4. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T\n 5. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges T", "using all_edges_mono"], ["proof (prove)\nusing this:\n  ?vs \\<subseteq> ?ws \\<Longrightarrow>\n  all_edges ?vs \\<subseteq> all_edges ?ws\n\ngoal (5 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges S;\n        uverts H\\<^sub>2 \\<subseteq> T;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> all_edges T;\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges (S \\<union> T)\n 2. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> S\n 3. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges S\n 4. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T\n 5. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges T", "apply blast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> S\n 2. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges S\n 3. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T\n 4. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges T", "using assms(1,2) wellformed_all_edges[OF assms(3)] wellformed_all_edges[OF assms(4)] all_edges_mono[OF assms(1)] all_edges_mono[OF assms(2)]"], ["proof (prove)\nusing this:\n  uverts H\\<^sub>1 \\<subseteq> S\n  uverts H\\<^sub>2 \\<subseteq> T\n  uedges H\\<^sub>1 \\<subseteq> all_edges (uverts H\\<^sub>1)\n  uedges H\\<^sub>2 \\<subseteq> all_edges (uverts H\\<^sub>2)\n  all_edges (uverts H\\<^sub>1) \\<subseteq> all_edges S\n  all_edges (uverts H\\<^sub>2) \\<subseteq> all_edges T\n\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> S\n 2. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>1\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges S\n 3. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uverts H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> T\n 4. \\<And>x.\n       \\<lbrakk>uverts H\\<^sub>1 \\<subseteq> S \\<union> T;\n        uverts H\\<^sub>2 \\<subseteq> S \\<union> T;\n        uedges H\\<^sub>1 \\<subseteq> uedges G;\n        uedges H\\<^sub>2 \\<subseteq> uedges G;\n        uedges H\\<^sub>1 \\<subseteq> all_edges (S \\<union> T);\n        uedges H\\<^sub>2 \\<subseteq> all_edges (S \\<union> T);\n        x \\<in> uedges H\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> x \\<in> all_edges T", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma (in edge_space) induced_subgraph_prob:\n  assumes \"uverts H \\<subseteq> V\" and \"uwellformed H\" and \"V \\<subseteq> S_verts\"\n  shows \"prob {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} = p ^ card (uedges H)\" (is \"prob ?A = _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n    p ^ card (uedges H)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prob\n     {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n    p ^ card (uedges H)", "have \"prob ?A = prob (cylinder S_edges (uedges H) {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n    prob (cylinder S_edges (uedges H) {})", "unfolding cylinder_def space_eq subgraph_def induced_subgraph_def edge_ugraph_def S_edges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     {es \\<in> Pow (all_edges S_verts).\n      uverts H\n      \\<subseteq> uverts\n                   (V, uedges\n                        (S_verts, es \\<inter> all_edges S_verts) \\<inter>\n                       all_edges V) \\<and>\n      uedges H\n      \\<subseteq> uedges\n                   (V, uedges\n                        (S_verts, es \\<inter> all_edges S_verts) \\<inter>\n                       all_edges V)} =\n    prob\n     {T \\<in> Pow (all_edges S_verts).\n      uedges H \\<subseteq> T \\<and> {} \\<inter> T = {}}", "by (rule arg_cong[OF Collect_cong]) (metis (no_types) assms(1,2) Pow_iff all_edges_mono fst_conv inf_absorb1 inf_bot_left le_inf_iff snd_conv wellformed_all_edges)"], ["proof (state)\nthis:\n  prob\n   {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n  prob (cylinder S_edges (uedges H) {})\n\ngoal (1 subgoal):\n 1. prob\n     {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n    p ^ card (uedges H)", "also"], ["proof (state)\nthis:\n  prob\n   {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n  prob (cylinder S_edges (uedges H) {})\n\ngoal (1 subgoal):\n 1. prob\n     {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n    p ^ card (uedges H)", "have \"\\<dots> = p ^ card (uedges H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob (cylinder S_edges (uedges H) {}) = p ^ card (uedges H)", "proof (rule cylinder_empty_prob)"], ["proof (state)\ngoal (1 subgoal):\n 1. uedges H \\<subseteq> S_edges", "have \"uedges H \\<subseteq> all_edges (uverts H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uedges H \\<subseteq> all_edges (uverts H)", "by (rule wellformed_all_edges[OF assms(2)])"], ["proof (state)\nthis:\n  uedges H \\<subseteq> all_edges (uverts H)\n\ngoal (1 subgoal):\n 1. uedges H \\<subseteq> S_edges", "also"], ["proof (state)\nthis:\n  uedges H \\<subseteq> all_edges (uverts H)\n\ngoal (1 subgoal):\n 1. uedges H \\<subseteq> S_edges", "have \"all_edges (uverts H) \\<subseteq> all_edges S_verts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. all_edges (uverts H) \\<subseteq> all_edges S_verts", "using assms"], ["proof (prove)\nusing this:\n  uverts H \\<subseteq> V\n  uwellformed H\n  V \\<subseteq> S_verts\n\ngoal (1 subgoal):\n 1. all_edges (uverts H) \\<subseteq> all_edges S_verts", "by (auto simp: all_edges_mono[OF subset_trans])"], ["proof (state)\nthis:\n  all_edges (uverts H) \\<subseteq> all_edges S_verts\n\ngoal (1 subgoal):\n 1. uedges H \\<subseteq> S_edges", "finally"], ["proof (chain)\npicking this:\n  uedges H \\<subseteq> all_edges S_verts", "show \"uedges H \\<subseteq> S_edges\""], ["proof (prove)\nusing this:\n  uedges H \\<subseteq> all_edges S_verts\n\ngoal (1 subgoal):\n 1. uedges H \\<subseteq> S_edges", "unfolding S_edges_def"], ["proof (prove)\nusing this:\n  uedges H \\<subseteq> all_edges S_verts\n\ngoal (1 subgoal):\n 1. uedges H \\<subseteq> all_edges S_verts", "."], ["proof (state)\nthis:\n  uedges H \\<subseteq> S_edges\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prob (cylinder S_edges (uedges H) {}) = p ^ card (uedges H)\n\ngoal (1 subgoal):\n 1. prob\n     {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n    p ^ card (uedges H)", "finally"], ["proof (chain)\npicking this:\n  prob\n   {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n  p ^ card (uedges H)", "show ?thesis"], ["proof (prove)\nusing this:\n  prob\n   {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n  p ^ card (uedges H)\n\ngoal (1 subgoal):\n 1. prob\n     {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n    p ^ card (uedges H)", "."], ["proof (state)\nthis:\n  prob\n   {es \\<in> space P. subgraph H (induced_subgraph V (edge_ugraph es))} =\n  p ^ card (uedges H)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Graph isomorphism\\<close>"], ["", "text\\<open>We define graph isomorphism slightly different than in the literature. The usual definition\nis that two graphs are isomorphic iff there exists a bijection between the vertex sets which\npreserves the adjacency. However, this complicates many proofs.\n\nInstead, we define the intuitive mapping operation on graphs. An isomorphism between two graphs\narises if there is a suitable mapping function from the first to the second graph. Later, we show\nthat this operation can be inverted.\\<close>"], ["", "fun map_ugraph :: \"(nat \\<Rightarrow> nat) \\<Rightarrow> ugraph \\<Rightarrow> ugraph\" where\n\"map_ugraph f (V, E) = (f ` V, (\\<lambda>e. f ` e) ` E)\""], ["", "definition isomorphism :: \"ugraph \\<Rightarrow> ugraph \\<Rightarrow> (nat \\<Rightarrow> nat) \\<Rightarrow> bool\" where\n\"isomorphism G\\<^sub>1 G\\<^sub>2 f \\<equiv> bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2) \\<and> G\\<^sub>2 = map_ugraph f G\\<^sub>1\""], ["", "abbreviation isomorphic :: \"ugraph \\<Rightarrow> ugraph \\<Rightarrow> bool\" (\"_ \\<simeq> _\") where\n\"G\\<^sub>1 \\<simeq> G\\<^sub>2 \\<equiv> uwellformed G\\<^sub>1 \\<and> uwellformed G\\<^sub>2 \\<and> (\\<exists>f. isomorphism G\\<^sub>1 G\\<^sub>2 f)\""], ["", "lemma map_ugraph_id: \"map_ugraph id = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_ugraph id = id", "unfolding fun_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. map_ugraph id x = id x", "by simp"], ["", "lemma map_ugraph_trans: \"map_ugraph (g \\<circ> f) = (map_ugraph g) \\<circ> (map_ugraph f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_ugraph (g \\<circ> f) = map_ugraph g \\<circ> map_ugraph f", "by (simp add: fun_eq_iff image_image)"], ["", "lemma map_ugraph_wellformed:\n  assumes \"uwellformed G\" and \"inj_on f (uverts G)\"\n  shows \"uwellformed (map_ugraph f G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed (map_ugraph f G)", "unfolding uwellformed_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>uedges (map_ugraph f G).\n       card e = 2 \\<and> (\\<forall>u\\<in>e. u \\<in> uverts (map_ugraph f G))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e. e \\<in> uedges (map_ugraph f G) \\<Longrightarrow> card e = 2\n 2. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "fix e'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e. e \\<in> uedges (map_ugraph f G) \\<Longrightarrow> card e = 2\n 2. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "assume \"e' \\<in> uedges (map_ugraph f G)\""], ["proof (state)\nthis:\n  e' \\<in> uedges (map_ugraph f G)\n\ngoal (2 subgoals):\n 1. \\<And>e. e \\<in> uedges (map_ugraph f G) \\<Longrightarrow> card e = 2\n 2. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "hence \"e' \\<in> (\\<lambda>e. f ` e) ` (uedges G)\""], ["proof (prove)\nusing this:\n  e' \\<in> uedges (map_ugraph f G)\n\ngoal (1 subgoal):\n 1. e' \\<in> (`) f ` uedges G", "by (metis map_ugraph.simps snd_conv surjective_pairing)"], ["proof (state)\nthis:\n  e' \\<in> (`) f ` uedges G\n\ngoal (2 subgoals):\n 1. \\<And>e. e \\<in> uedges (map_ugraph f G) \\<Longrightarrow> card e = 2\n 2. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "then"], ["proof (chain)\npicking this:\n  e' \\<in> (`) f ` uedges G", "obtain e where e: \"e' = f ` e\" \"e \\<in> uedges G\""], ["proof (prove)\nusing this:\n  e' \\<in> (`) f ` uedges G\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>e' = f ` e; e \\<in> uedges G\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  e' = f ` e\n  e \\<in> uedges G\n\ngoal (2 subgoals):\n 1. \\<And>e. e \\<in> uedges (map_ugraph f G) \\<Longrightarrow> card e = 2\n 2. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "hence \"card e = 2\" \"e \\<subseteq> uverts G\""], ["proof (prove)\nusing this:\n  e' = f ` e\n  e \\<in> uedges G\n\ngoal (1 subgoal):\n 1. card e = 2 &&& e \\<subseteq> uverts G", "using assms(1)"], ["proof (prove)\nusing this:\n  e' = f ` e\n  e \\<in> uedges G\n  uwellformed G\n\ngoal (1 subgoal):\n 1. card e = 2 &&& e \\<subseteq> uverts G", "unfolding uwellformed_def"], ["proof (prove)\nusing this:\n  e' = f ` e\n  e \\<in> uedges G\n  \\<forall>e\\<in>uedges G.\n     card e = 2 \\<and> (\\<forall>u\\<in>e. u \\<in> uverts G)\n\ngoal (1 subgoal):\n 1. card e = 2 &&& e \\<subseteq> uverts G", "by blast+"], ["proof (state)\nthis:\n  card e = 2\n  e \\<subseteq> uverts G\n\ngoal (2 subgoals):\n 1. \\<And>e. e \\<in> uedges (map_ugraph f G) \\<Longrightarrow> card e = 2\n 2. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "thus \"card e' = 2\""], ["proof (prove)\nusing this:\n  card e = 2\n  e \\<subseteq> uverts G\n\ngoal (1 subgoal):\n 1. card e' = 2", "using e(1)"], ["proof (prove)\nusing this:\n  card e = 2\n  e \\<subseteq> uverts G\n  e' = f ` e\n\ngoal (1 subgoal):\n 1. card e' = 2", "by (simp add: card_inj_subs[OF assms(2)])"], ["proof (state)\nthis:\n  card e' = 2\n\ngoal (1 subgoal):\n 1. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "fix u'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "assume \"u' \\<in> e'\""], ["proof (state)\nthis:\n  u' \\<in> e'\n\ngoal (1 subgoal):\n 1. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "hence \"u' \\<in> f ` e\""], ["proof (prove)\nusing this:\n  u' \\<in> e'\n\ngoal (1 subgoal):\n 1. u' \\<in> f ` e", "using e"], ["proof (prove)\nusing this:\n  u' \\<in> e'\n  e' = f ` e\n  e \\<in> uedges G\n\ngoal (1 subgoal):\n 1. u' \\<in> f ` e", "by force"], ["proof (state)\nthis:\n  u' \\<in> f ` e\n\ngoal (1 subgoal):\n 1. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "then"], ["proof (chain)\npicking this:\n  u' \\<in> f ` e", "obtain u where u: \"u' = f u\" \"u \\<in> e\""], ["proof (prove)\nusing this:\n  u' \\<in> f ` e\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u' = f u; u \\<in> e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u' = f u\n  u \\<in> e\n\ngoal (1 subgoal):\n 1. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "hence \"u \\<in> uverts G\""], ["proof (prove)\nusing this:\n  u' = f u\n  u \\<in> e\n\ngoal (1 subgoal):\n 1. u \\<in> uverts G", "using assms(1) e(2)"], ["proof (prove)\nusing this:\n  u' = f u\n  u \\<in> e\n  uwellformed G\n  e \\<in> uedges G\n\ngoal (1 subgoal):\n 1. u \\<in> uverts G", "unfolding uwellformed_def"], ["proof (prove)\nusing this:\n  u' = f u\n  u \\<in> e\n  \\<forall>e\\<in>uedges G.\n     card e = 2 \\<and> (\\<forall>u\\<in>e. u \\<in> uverts G)\n  e \\<in> uedges G\n\ngoal (1 subgoal):\n 1. u \\<in> uverts G", "by blast"], ["proof (state)\nthis:\n  u \\<in> uverts G\n\ngoal (1 subgoal):\n 1. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "hence \"u' \\<in> f ` uverts G\""], ["proof (prove)\nusing this:\n  u \\<in> uverts G\n\ngoal (1 subgoal):\n 1. u' \\<in> f ` uverts G", "using u(1)"], ["proof (prove)\nusing this:\n  u \\<in> uverts G\n  u' = f u\n\ngoal (1 subgoal):\n 1. u' \\<in> f ` uverts G", "by simp"], ["proof (state)\nthis:\n  u' \\<in> f ` uverts G\n\ngoal (1 subgoal):\n 1. \\<And>e u.\n       \\<lbrakk>e \\<in> uedges (map_ugraph f G); u \\<in> e\\<rbrakk>\n       \\<Longrightarrow> u \\<in> uverts (map_ugraph f G)", "thus \"u' \\<in> uverts (map_ugraph f G)\""], ["proof (prove)\nusing this:\n  u' \\<in> f ` uverts G\n\ngoal (1 subgoal):\n 1. u' \\<in> uverts (map_ugraph f G)", "by (metis map_ugraph.simps fst_conv surjective_pairing)"], ["proof (state)\nthis:\n  u' \\<in> uverts (map_ugraph f G)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma map_ugraph_finite: \"finite_graph G \\<Longrightarrow> finite_graph (map_ugraph f G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_graph G \\<Longrightarrow> finite_graph (map_ugraph f G)", "unfolding finite_graph_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (uverts G) \\<and> finite (uedges G) \\<Longrightarrow>\n    finite (uverts (map_ugraph f G)) \\<and> finite (uedges (map_ugraph f G))", "by (metis finite_imageI fst_conv map_ugraph.simps snd_conv surjective_pairing)"], ["", "lemma map_ugraph_preserves_sub:\n  assumes \"subgraph G\\<^sub>1 G\\<^sub>2\"\n  shows \"subgraph (map_ugraph f G\\<^sub>1) (map_ugraph f G\\<^sub>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgraph (map_ugraph f G\\<^sub>1) (map_ugraph f G\\<^sub>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. subgraph (map_ugraph f G\\<^sub>1) (map_ugraph f G\\<^sub>2)", "have \"f ` uverts G\\<^sub>1 \\<subseteq> f ` uverts G\\<^sub>2\" \"(\\<lambda>e. f ` e) ` uedges G\\<^sub>1 \\<subseteq> (\\<lambda>e. f ` e) ` uedges G\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` uverts G\\<^sub>1 \\<subseteq> f ` uverts G\\<^sub>2 &&&\n    (`) f ` uedges G\\<^sub>1 \\<subseteq> (`) f ` uedges G\\<^sub>2", "using assms(1)"], ["proof (prove)\nusing this:\n  subgraph G\\<^sub>1 G\\<^sub>2\n\ngoal (1 subgoal):\n 1. f ` uverts G\\<^sub>1 \\<subseteq> f ` uverts G\\<^sub>2 &&&\n    (`) f ` uedges G\\<^sub>1 \\<subseteq> (`) f ` uedges G\\<^sub>2", "unfolding subgraph_def"], ["proof (prove)\nusing this:\n  uverts G\\<^sub>1 \\<subseteq> uverts G\\<^sub>2 \\<and>\n  uedges G\\<^sub>1 \\<subseteq> uedges G\\<^sub>2\n\ngoal (1 subgoal):\n 1. f ` uverts G\\<^sub>1 \\<subseteq> f ` uverts G\\<^sub>2 &&&\n    (`) f ` uedges G\\<^sub>1 \\<subseteq> (`) f ` uedges G\\<^sub>2", "by auto"], ["proof (state)\nthis:\n  f ` uverts G\\<^sub>1 \\<subseteq> f ` uverts G\\<^sub>2\n  (`) f ` uedges G\\<^sub>1 \\<subseteq> (`) f ` uedges G\\<^sub>2\n\ngoal (1 subgoal):\n 1. subgraph (map_ugraph f G\\<^sub>1) (map_ugraph f G\\<^sub>2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  f ` uverts G\\<^sub>1 \\<subseteq> f ` uverts G\\<^sub>2\n  (`) f ` uedges G\\<^sub>1 \\<subseteq> (`) f ` uedges G\\<^sub>2\n\ngoal (1 subgoal):\n 1. subgraph (map_ugraph f G\\<^sub>1) (map_ugraph f G\\<^sub>2)", "unfolding subgraph_def"], ["proof (prove)\nusing this:\n  f ` uverts G\\<^sub>1 \\<subseteq> f ` uverts G\\<^sub>2\n  (`) f ` uedges G\\<^sub>1 \\<subseteq> (`) f ` uedges G\\<^sub>2\n\ngoal (1 subgoal):\n 1. uverts (map_ugraph f G\\<^sub>1)\n    \\<subseteq> uverts (map_ugraph f G\\<^sub>2) \\<and>\n    uedges (map_ugraph f G\\<^sub>1)\n    \\<subseteq> uedges (map_ugraph f G\\<^sub>2)", "by (metis map_ugraph.simps fst_conv snd_conv surjective_pairing)"], ["proof (state)\nthis:\n  subgraph (map_ugraph f G\\<^sub>1) (map_ugraph f G\\<^sub>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isomorphic_refl: \"uwellformed G \\<Longrightarrow> G \\<simeq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G \\<Longrightarrow> G \\<simeq> G", "unfolding isomorphism_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G \\<Longrightarrow>\n    uwellformed G \\<and>\n    uwellformed G \\<and>\n    (\\<exists>f. bij_betw f (uverts G) (uverts G) \\<and> G = map_ugraph f G)", "by (metis bij_betw_id id_def map_ugraph_id)"], ["", "lemma isomorphic_trans:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\" and \"G\\<^sub>2 \\<simeq> G\\<^sub>3\"\n  shows \"G\\<^sub>1 \\<simeq> G\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "from assms"], ["proof (chain)\npicking this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n  G\\<^sub>2 \\<simeq> G\\<^sub>3", "obtain f\\<^sub>1 f\\<^sub>2 where\n    bij: \"bij_betw f\\<^sub>1 (uverts G\\<^sub>1) (uverts G\\<^sub>2)\" \"bij_betw f\\<^sub>2 (uverts G\\<^sub>2) (uverts G\\<^sub>3)\" and\n    map: \"G\\<^sub>2 = map_ugraph f\\<^sub>1 G\\<^sub>1\" \"G\\<^sub>3 = map_ugraph f\\<^sub>2 G\\<^sub>2\""], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n  G\\<^sub>2 \\<simeq> G\\<^sub>3\n\ngoal (1 subgoal):\n 1. (\\<And>f\\<^sub>1 f\\<^sub>2.\n        \\<lbrakk>bij_betw f\\<^sub>1 (uverts G\\<^sub>1) (uverts G\\<^sub>2);\n         bij_betw f\\<^sub>2 (uverts G\\<^sub>2) (uverts G\\<^sub>3);\n         G\\<^sub>2 = map_ugraph f\\<^sub>1 G\\<^sub>1;\n         G\\<^sub>3 = map_ugraph f\\<^sub>2 G\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>1 \\<and>\n  uwellformed G\\<^sub>2 \\<and>\n  (\\<exists>f.\n      bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2) \\<and>\n      G\\<^sub>2 = map_ugraph f G\\<^sub>1)\n  uwellformed G\\<^sub>2 \\<and>\n  uwellformed G\\<^sub>3 \\<and>\n  (\\<exists>f.\n      bij_betw f (uverts G\\<^sub>2) (uverts G\\<^sub>3) \\<and>\n      G\\<^sub>3 = map_ugraph f G\\<^sub>2)\n\ngoal (1 subgoal):\n 1. (\\<And>f\\<^sub>1 f\\<^sub>2.\n        \\<lbrakk>bij_betw f\\<^sub>1 (uverts G\\<^sub>1) (uverts G\\<^sub>2);\n         bij_betw f\\<^sub>2 (uverts G\\<^sub>2) (uverts G\\<^sub>3);\n         G\\<^sub>2 = map_ugraph f\\<^sub>1 G\\<^sub>1;\n         G\\<^sub>3 = map_ugraph f\\<^sub>2 G\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bij_betw f\\<^sub>1 (uverts G\\<^sub>1) (uverts G\\<^sub>2)\n  bij_betw f\\<^sub>2 (uverts G\\<^sub>2) (uverts G\\<^sub>3)\n  G\\<^sub>2 = map_ugraph f\\<^sub>1 G\\<^sub>1\n  G\\<^sub>3 = map_ugraph f\\<^sub>2 G\\<^sub>2\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "let ?f = \"f\\<^sub>2 \\<circ> f\\<^sub>1\""], ["proof (state)\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "have \"bij_betw ?f (uverts G\\<^sub>1) (uverts G\\<^sub>3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (f\\<^sub>2 \\<circ> f\\<^sub>1) (uverts G\\<^sub>1)\n     (uverts G\\<^sub>3)", "using bij"], ["proof (prove)\nusing this:\n  bij_betw f\\<^sub>1 (uverts G\\<^sub>1) (uverts G\\<^sub>2)\n  bij_betw f\\<^sub>2 (uverts G\\<^sub>2) (uverts G\\<^sub>3)\n\ngoal (1 subgoal):\n 1. bij_betw (f\\<^sub>2 \\<circ> f\\<^sub>1) (uverts G\\<^sub>1)\n     (uverts G\\<^sub>3)", "by (simp add: bij_betw_comp_iff)"], ["proof (state)\nthis:\n  bij_betw (f\\<^sub>2 \\<circ> f\\<^sub>1) (uverts G\\<^sub>1)\n   (uverts G\\<^sub>3)\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "moreover"], ["proof (state)\nthis:\n  bij_betw (f\\<^sub>2 \\<circ> f\\<^sub>1) (uverts G\\<^sub>1)\n   (uverts G\\<^sub>3)\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "have \"G\\<^sub>3 = map_ugraph ?f G\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G\\<^sub>3 = map_ugraph (f\\<^sub>2 \\<circ> f\\<^sub>1) G\\<^sub>1", "using map"], ["proof (prove)\nusing this:\n  G\\<^sub>2 = map_ugraph f\\<^sub>1 G\\<^sub>1\n  G\\<^sub>3 = map_ugraph f\\<^sub>2 G\\<^sub>2\n\ngoal (1 subgoal):\n 1. G\\<^sub>3 = map_ugraph (f\\<^sub>2 \\<circ> f\\<^sub>1) G\\<^sub>1", "by (simp add: map_ugraph_trans)"], ["proof (state)\nthis:\n  G\\<^sub>3 = map_ugraph (f\\<^sub>2 \\<circ> f\\<^sub>1) G\\<^sub>1\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "moreover"], ["proof (state)\nthis:\n  G\\<^sub>3 = map_ugraph (f\\<^sub>2 \\<circ> f\\<^sub>1) G\\<^sub>1\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "have \"uwellformed G\\<^sub>1\" \"uwellformed G\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>1 &&& uwellformed G\\<^sub>3", "using assms"], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n  G\\<^sub>2 \\<simeq> G\\<^sub>3\n\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>1 &&& uwellformed G\\<^sub>3", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>1 \\<and>\n  uwellformed G\\<^sub>2 \\<and>\n  (\\<exists>f.\n      bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2) \\<and>\n      G\\<^sub>2 = map_ugraph f G\\<^sub>1)\n  uwellformed G\\<^sub>2 \\<and>\n  uwellformed G\\<^sub>3 \\<and>\n  (\\<exists>f.\n      bij_betw f (uverts G\\<^sub>2) (uverts G\\<^sub>3) \\<and>\n      G\\<^sub>3 = map_ugraph f G\\<^sub>2)\n\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>1 &&& uwellformed G\\<^sub>3", "by simp+"], ["proof (state)\nthis:\n  uwellformed G\\<^sub>1\n  uwellformed G\\<^sub>3\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw (f\\<^sub>2 \\<circ> f\\<^sub>1) (uverts G\\<^sub>1)\n   (uverts G\\<^sub>3)\n  G\\<^sub>3 = map_ugraph (f\\<^sub>2 \\<circ> f\\<^sub>1) G\\<^sub>1\n  uwellformed G\\<^sub>1\n  uwellformed G\\<^sub>3", "show \"G\\<^sub>1 \\<simeq> G\\<^sub>3\""], ["proof (prove)\nusing this:\n  bij_betw (f\\<^sub>2 \\<circ> f\\<^sub>1) (uverts G\\<^sub>1)\n   (uverts G\\<^sub>3)\n  G\\<^sub>3 = map_ugraph (f\\<^sub>2 \\<circ> f\\<^sub>1) G\\<^sub>1\n  uwellformed G\\<^sub>1\n  uwellformed G\\<^sub>3\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>3", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  bij_betw (f\\<^sub>2 \\<circ> f\\<^sub>1) (uverts G\\<^sub>1)\n   (uverts G\\<^sub>3)\n  G\\<^sub>3 = map_ugraph (f\\<^sub>2 \\<circ> f\\<^sub>1) G\\<^sub>1\n  uwellformed G\\<^sub>1\n  uwellformed G\\<^sub>3\n\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>1 \\<and>\n    uwellformed G\\<^sub>3 \\<and>\n    (\\<exists>f.\n        bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>3) \\<and>\n        G\\<^sub>3 = map_ugraph f G\\<^sub>1)", "by blast"], ["proof (state)\nthis:\n  G\\<^sub>1 \\<simeq> G\\<^sub>3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isomorphic_sym:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\"\n  shows \"G\\<^sub>2 \\<simeq> G\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G\\<^sub>2 \\<simeq> G\\<^sub>1", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "from assms"], ["proof (chain)\npicking this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2", "obtain f where \"isomorphism G\\<^sub>1 G\\<^sub>2 f\""], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        isomorphism G\\<^sub>1 G\\<^sub>2 f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  isomorphism G\\<^sub>1 G\\<^sub>2 f\n\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "hence bij: \"bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2)\" and map: \"G\\<^sub>2 = map_ugraph f G\\<^sub>1\""], ["proof (prove)\nusing this:\n  isomorphism G\\<^sub>1 G\\<^sub>2 f\n\ngoal (1 subgoal):\n 1. bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2) &&&\n    G\\<^sub>2 = map_ugraph f G\\<^sub>1", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2) \\<and>\n  G\\<^sub>2 = map_ugraph f G\\<^sub>1\n\ngoal (1 subgoal):\n 1. bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2) &&&\n    G\\<^sub>2 = map_ugraph f G\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2)\n  G\\<^sub>2 = map_ugraph f G\\<^sub>1\n\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "let ?f' = \"inv_into (uverts G\\<^sub>1) f\""], ["proof (state)\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "have bij': \"bij_betw ?f' (uverts G\\<^sub>2) (uverts G\\<^sub>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (inv_into (uverts G\\<^sub>1) f) (uverts G\\<^sub>2)\n     (uverts G\\<^sub>1)", "by (rule bij_betw_inv_into) fact"], ["proof (state)\nthis:\n  bij_betw (inv_into (uverts G\\<^sub>1) f) (uverts G\\<^sub>2)\n   (uverts G\\<^sub>1)\n\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "moreover"], ["proof (state)\nthis:\n  bij_betw (inv_into (uverts G\\<^sub>1) f) (uverts G\\<^sub>2)\n   (uverts G\\<^sub>1)\n\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "have \"uverts G\\<^sub>1 = ?f' ` uverts G\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uverts G\\<^sub>1 = inv_into (uverts G\\<^sub>1) f ` uverts G\\<^sub>2", "using bij'"], ["proof (prove)\nusing this:\n  bij_betw (inv_into (uverts G\\<^sub>1) f) (uverts G\\<^sub>2)\n   (uverts G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. uverts G\\<^sub>1 = inv_into (uverts G\\<^sub>1) f ` uverts G\\<^sub>2", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on (inv_into (uverts G\\<^sub>1) f) (uverts G\\<^sub>2) \\<and>\n  inv_into (uverts G\\<^sub>1) f ` uverts G\\<^sub>2 = uverts G\\<^sub>1\n\ngoal (1 subgoal):\n 1. uverts G\\<^sub>1 = inv_into (uverts G\\<^sub>1) f ` uverts G\\<^sub>2", "by force"], ["proof (state)\nthis:\n  uverts G\\<^sub>1 = inv_into (uverts G\\<^sub>1) f ` uverts G\\<^sub>2\n\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "moreover"], ["proof (state)\nthis:\n  uverts G\\<^sub>1 = inv_into (uverts G\\<^sub>1) f ` uverts G\\<^sub>2\n\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "have \"uedges G\\<^sub>1 = (\\<lambda>e. ?f' ` e) ` uedges G\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "have \"uedges G\\<^sub>1 = id ` uedges G\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 = id ` uedges G\\<^sub>1", "by simp"], ["proof (state)\nthis:\n  uedges G\\<^sub>1 = id ` uedges G\\<^sub>1\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "also"], ["proof (state)\nthis:\n  uedges G\\<^sub>1 = id ` uedges G\\<^sub>1\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "have \"\\<dots> = (\\<lambda>e. ?f' ` (f ` e)) ` uedges G\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id ` uedges G\\<^sub>1 =\n    (\\<lambda>e. inv_into (uverts G\\<^sub>1) f ` f ` e) ` uedges G\\<^sub>1", "proof (rule image_cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. uedges G\\<^sub>1 = uedges G\\<^sub>1\n 2. \\<And>x.\n       x \\<in> uedges G\\<^sub>1 \\<Longrightarrow>\n       id x = inv_into (uverts G\\<^sub>1) f ` f ` x", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. uedges G\\<^sub>1 = uedges G\\<^sub>1\n 2. \\<And>x.\n       x \\<in> uedges G\\<^sub>1 \\<Longrightarrow>\n       id x = inv_into (uverts G\\<^sub>1) f ` f ` x", "assume \"a \\<in> uedges G\\<^sub>1\""], ["proof (state)\nthis:\n  a \\<in> uedges G\\<^sub>1\n\ngoal (2 subgoals):\n 1. uedges G\\<^sub>1 = uedges G\\<^sub>1\n 2. \\<And>x.\n       x \\<in> uedges G\\<^sub>1 \\<Longrightarrow>\n       id x = inv_into (uverts G\\<^sub>1) f ` f ` x", "hence \"a \\<subseteq> uverts G\\<^sub>1\""], ["proof (prove)\nusing this:\n  a \\<in> uedges G\\<^sub>1\n\ngoal (1 subgoal):\n 1. a \\<subseteq> uverts G\\<^sub>1", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> uedges G\\<^sub>1\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n\ngoal (1 subgoal):\n 1. a \\<subseteq> uverts G\\<^sub>1", "unfolding isomorphism_def uwellformed_def"], ["proof (prove)\nusing this:\n  a \\<in> uedges G\\<^sub>1\n  (\\<forall>e\\<in>uedges G\\<^sub>1.\n      card e = 2 \\<and> (\\<forall>u\\<in>e. u \\<in> uverts G\\<^sub>1)) \\<and>\n  (\\<forall>e\\<in>uedges G\\<^sub>2.\n      card e = 2 \\<and> (\\<forall>u\\<in>e. u \\<in> uverts G\\<^sub>2)) \\<and>\n  (\\<exists>f.\n      bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2) \\<and>\n      G\\<^sub>2 = map_ugraph f G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. a \\<subseteq> uverts G\\<^sub>1", "by blast"], ["proof (state)\nthis:\n  a \\<subseteq> uverts G\\<^sub>1\n\ngoal (2 subgoals):\n 1. uedges G\\<^sub>1 = uedges G\\<^sub>1\n 2. \\<And>x.\n       x \\<in> uedges G\\<^sub>1 \\<Longrightarrow>\n       id x = inv_into (uverts G\\<^sub>1) f ` f ` x", "thus \"id a = inv_into (uverts G\\<^sub>1) f ` f ` a\""], ["proof (prove)\nusing this:\n  a \\<subseteq> uverts G\\<^sub>1\n\ngoal (1 subgoal):\n 1. id a = inv_into (uverts G\\<^sub>1) f ` f ` a", "by (metis (full_types) id_def bij bij_betw_imp_inj_on inv_into_image_cancel)"], ["proof (state)\nthis:\n  id a = inv_into (uverts G\\<^sub>1) f ` f ` a\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 = uedges G\\<^sub>1", "qed simp"], ["proof (state)\nthis:\n  id ` uedges G\\<^sub>1 =\n  (\\<lambda>e. inv_into (uverts G\\<^sub>1) f ` f ` e) ` uedges G\\<^sub>1\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "also"], ["proof (state)\nthis:\n  id ` uedges G\\<^sub>1 =\n  (\\<lambda>e. inv_into (uverts G\\<^sub>1) f ` f ` e) ` uedges G\\<^sub>1\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "have \"\\<dots> = (\\<lambda>e. ?f' ` e) ` ((\\<lambda>e. f ` e) ` uedges G\\<^sub>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>e. inv_into (uverts G\\<^sub>1) f ` f ` e) ` uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` (`) f ` uedges G\\<^sub>1", "by (rule image_image[symmetric])"], ["proof (state)\nthis:\n  (\\<lambda>e. inv_into (uverts G\\<^sub>1) f ` f ` e) ` uedges G\\<^sub>1 =\n  (`) (inv_into (uverts G\\<^sub>1) f) ` (`) f ` uedges G\\<^sub>1\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "also"], ["proof (state)\nthis:\n  (\\<lambda>e. inv_into (uverts G\\<^sub>1) f ` f ` e) ` uedges G\\<^sub>1 =\n  (`) (inv_into (uverts G\\<^sub>1) f) ` (`) f ` uedges G\\<^sub>1\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "have \"\\<dots> = (\\<lambda>e. ?f' ` e) ` uedges G\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) (inv_into (uverts G\\<^sub>1) f) ` (`) f ` uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "using bij map"], ["proof (prove)\nusing this:\n  bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2)\n  G\\<^sub>2 = map_ugraph f G\\<^sub>1\n\ngoal (1 subgoal):\n 1. (`) (inv_into (uverts G\\<^sub>1) f) ` (`) f ` uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "by (metis map_ugraph.simps prod.collapse snd_eqD)"], ["proof (state)\nthis:\n  (`) (inv_into (uverts G\\<^sub>1) f) ` (`) f ` uedges G\\<^sub>1 =\n  (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "finally"], ["proof (chain)\npicking this:\n  uedges G\\<^sub>1 = (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  uedges G\\<^sub>1 = (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 =\n    (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "."], ["proof (state)\nthis:\n  uedges G\\<^sub>1 = (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  uedges G\\<^sub>1 = (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2\n\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw (inv_into (uverts G\\<^sub>1) f) (uverts G\\<^sub>2)\n   (uverts G\\<^sub>1)\n  uverts G\\<^sub>1 = inv_into (uverts G\\<^sub>1) f ` uverts G\\<^sub>2\n  uedges G\\<^sub>1 = (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2", "have \"isomorphism G\\<^sub>2 G\\<^sub>1 ?f'\""], ["proof (prove)\nusing this:\n  bij_betw (inv_into (uverts G\\<^sub>1) f) (uverts G\\<^sub>2)\n   (uverts G\\<^sub>1)\n  uverts G\\<^sub>1 = inv_into (uverts G\\<^sub>1) f ` uverts G\\<^sub>2\n  uedges G\\<^sub>1 = (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2\n\ngoal (1 subgoal):\n 1. isomorphism G\\<^sub>2 G\\<^sub>1 (inv_into (uverts G\\<^sub>1) f)", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  bij_betw (inv_into (uverts G\\<^sub>1) f) (uverts G\\<^sub>2)\n   (uverts G\\<^sub>1)\n  uverts G\\<^sub>1 = inv_into (uverts G\\<^sub>1) f ` uverts G\\<^sub>2\n  uedges G\\<^sub>1 = (`) (inv_into (uverts G\\<^sub>1) f) ` uedges G\\<^sub>2\n\ngoal (1 subgoal):\n 1. bij_betw (inv_into (uverts G\\<^sub>1) f) (uverts G\\<^sub>2)\n     (uverts G\\<^sub>1) \\<and>\n    G\\<^sub>1 = map_ugraph (inv_into (uverts G\\<^sub>1) f) G\\<^sub>2", "by (metis map_ugraph.simps split_pairs)"], ["proof (state)\nthis:\n  isomorphism G\\<^sub>2 G\\<^sub>1 (inv_into (uverts G\\<^sub>1) f)\n\ngoal (3 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1\n 3. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "thus \"\\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f\""], ["proof (prove)\nusing this:\n  isomorphism G\\<^sub>2 G\\<^sub>1 (inv_into (uverts G\\<^sub>1) f)\n\ngoal (1 subgoal):\n 1. \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f", "by blast"], ["proof (state)\nthis:\n  \\<exists>f. isomorphism G\\<^sub>2 G\\<^sub>1 f\n\ngoal (2 subgoals):\n 1. uwellformed G\\<^sub>2\n 2. uwellformed G\\<^sub>1", "qed (auto simp: assms)"], ["", "lemma isomorphic_cards:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\"\n  shows\n    \"card (uverts G\\<^sub>1) = card (uverts G\\<^sub>2)\" (is \"?V\")\n    \"card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)\" (is \"?E\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (uverts G\\<^sub>1) = card (uverts G\\<^sub>2) &&&\n    card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. card (uverts G\\<^sub>1) = card (uverts G\\<^sub>2)\n 2. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "from assms"], ["proof (chain)\npicking this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2", "obtain f where\n    bij: \"bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2)\" and\n    map: \"G\\<^sub>2 = map_ugraph f G\\<^sub>1\""], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2);\n         G\\<^sub>2 = map_ugraph f G\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>1 \\<and>\n  uwellformed G\\<^sub>2 \\<and>\n  (\\<exists>f.\n      bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2) \\<and>\n      G\\<^sub>2 = map_ugraph f G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2);\n         G\\<^sub>2 = map_ugraph f G\\<^sub>1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bij_betw f (uverts G\\<^sub>1) (uverts G\\<^sub>2)\n  G\\<^sub>2 = map_ugraph f G\\<^sub>1\n\ngoal (2 subgoals):\n 1. card (uverts G\\<^sub>1) = card (uverts G\\<^sub>2)\n 2. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "from assms"], ["proof (chain)\npicking this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2", "have wellformed: \"uwellformed G\\<^sub>1\" \"uwellformed G\\<^sub>2\""], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>1 &&& uwellformed G\\<^sub>2", "by simp+"], ["proof (state)\nthis:\n  uwellformed G\\<^sub>1\n  uwellformed G\\<^sub>2\n\ngoal (2 subgoals):\n 1. card (uverts G\\<^sub>1) = card (uverts G\\<^sub>2)\n 2. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "show ?V"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (uverts G\\<^sub>1) = card (uverts G\\<^sub>2)", "by (rule bij_betw_same_card[OF bij])"], ["proof (state)\nthis:\n  card (uverts G\\<^sub>1) = card (uverts G\\<^sub>2)\n\ngoal (1 subgoal):\n 1. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "let ?g = \"\\<lambda>e. f ` e\""], ["proof (state)\ngoal (1 subgoal):\n 1. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "have \"bij_betw ?g (Pow (uverts G\\<^sub>1)) (Pow (uverts G\\<^sub>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((`) f) (Pow (uverts G\\<^sub>1)) (Pow (uverts G\\<^sub>2))", "by (rule bij_lift[OF bij])"], ["proof (state)\nthis:\n  bij_betw ((`) f) (Pow (uverts G\\<^sub>1)) (Pow (uverts G\\<^sub>2))\n\ngoal (1 subgoal):\n 1. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "moreover"], ["proof (state)\nthis:\n  bij_betw ((`) f) (Pow (uverts G\\<^sub>1)) (Pow (uverts G\\<^sub>2))\n\ngoal (1 subgoal):\n 1. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "have \"uedges G\\<^sub>1 \\<subseteq> Pow (uverts G\\<^sub>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 \\<subseteq> Pow (uverts G\\<^sub>1)", "using wellformed(1)"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>1\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 \\<subseteq> Pow (uverts G\\<^sub>1)", "unfolding uwellformed_def"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>uedges G\\<^sub>1.\n     card e = 2 \\<and> (\\<forall>u\\<in>e. u \\<in> uverts G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. uedges G\\<^sub>1 \\<subseteq> Pow (uverts G\\<^sub>1)", "by blast"], ["proof (state)\nthis:\n  uedges G\\<^sub>1 \\<subseteq> Pow (uverts G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw ((`) f) (Pow (uverts G\\<^sub>1)) (Pow (uverts G\\<^sub>2))\n  uedges G\\<^sub>1 \\<subseteq> Pow (uverts G\\<^sub>1)", "have \"card (?g ` uedges G\\<^sub>1) = card (uedges G\\<^sub>1)\""], ["proof (prove)\nusing this:\n  bij_betw ((`) f) (Pow (uverts G\\<^sub>1)) (Pow (uverts G\\<^sub>2))\n  uedges G\\<^sub>1 \\<subseteq> Pow (uverts G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card ((`) f ` uedges G\\<^sub>1) = card (uedges G\\<^sub>1)", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on ((`) f) (Pow (uverts G\\<^sub>1)) \\<and>\n  (`) f ` Pow (uverts G\\<^sub>1) = Pow (uverts G\\<^sub>2)\n  uedges G\\<^sub>1 \\<subseteq> Pow (uverts G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card ((`) f ` uedges G\\<^sub>1) = card (uedges G\\<^sub>1)", "by (metis card_inj_subs)"], ["proof (state)\nthis:\n  card ((`) f ` uedges G\\<^sub>1) = card (uedges G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "thus ?E"], ["proof (prove)\nusing this:\n  card ((`) f ` uedges G\\<^sub>1) = card (uedges G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)", "by (metis map map_ugraph.simps snd_conv surjective_pairing)"], ["proof (state)\nthis:\n  card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Isomorphic subgraphs\\<close>"], ["", "text\\<open>The somewhat sloppy term `isomorphic subgraph' denotes a subgraph which is isomorphic to a\nfixed other graph. For example, saying that a graph contains a triangle usually means that it\ncontains \\emph{any} triangle, not the specific triangle with the nodes $1$, $2$ and $3$. Hence, such\na graph would have a triangle as an isomorphic subgraph.\\<close>"], ["", "definition subgraph_isomorphic :: \"ugraph \\<Rightarrow> ugraph \\<Rightarrow> bool\" (\"_ \\<sqsubseteq> _\") where\n\"G' \\<sqsubseteq> G \\<equiv> uwellformed G \\<and> (\\<exists>G''. G' \\<simeq> G'' \\<and> subgraph G'' G)\""], ["", "lemma subgraph_is_subgraph_isomorphic: \"\\<lbrakk> uwellformed G'; uwellformed G; subgraph G' G \\<rbrakk> \\<Longrightarrow> G' \\<sqsubseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>uwellformed G'; uwellformed G; subgraph G' G\\<rbrakk>\n    \\<Longrightarrow> G' \\<sqsubseteq> G", "unfolding subgraph_isomorphic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>uwellformed G'; uwellformed G; subgraph G' G\\<rbrakk>\n    \\<Longrightarrow> uwellformed G \\<and>\n                      (\\<exists>G''. G' \\<simeq> G'' \\<and> subgraph G'' G)", "by (metis isomorphic_refl)"], ["", "lemma isomorphic_is_subgraph_isomorphic: \"G\\<^sub>1 \\<simeq> G\\<^sub>2 \\<Longrightarrow> G\\<^sub>1 \\<sqsubseteq> G\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>2 \\<Longrightarrow>\n    G\\<^sub>1 \\<sqsubseteq> G\\<^sub>2", "unfolding subgraph_isomorphic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>2 \\<Longrightarrow>\n    uwellformed G\\<^sub>2 \\<and>\n    (\\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>2)", "by (metis subgraph_refl)"], ["", "lemma subgraph_isomorphic_refl: \"uwellformed G \\<Longrightarrow> G \\<sqsubseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G \\<Longrightarrow> G \\<sqsubseteq> G", "unfolding subgraph_isomorphic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G \\<Longrightarrow>\n    uwellformed G \\<and>\n    (\\<exists>G''. G \\<simeq> G'' \\<and> subgraph G'' G)", "by (metis isomorphic_refl subgraph_refl)"], ["", "lemma subgraph_isomorphic_pre_iso_closed:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\" and \"G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\"\n  shows \"G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3", "unfolding subgraph_isomorphic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>3 \\<and>\n    (\\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. uwellformed G\\<^sub>3\n 2. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "show \"uwellformed G\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>3", "using assms"], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n  G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\n\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>3", "unfolding subgraph_isomorphic_def"], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n  uwellformed G\\<^sub>3 \\<and>\n  (\\<exists>G''. G\\<^sub>2 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3)\n\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>3", "by blast"], ["proof (state)\nthis:\n  uwellformed G\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "from assms(2)"], ["proof (chain)\npicking this:\n  G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3", "obtain G\\<^sub>2' where \"G\\<^sub>2 \\<simeq> G\\<^sub>2'\" \"subgraph G\\<^sub>2' G\\<^sub>3\""], ["proof (prove)\nusing this:\n  G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\n\ngoal (1 subgoal):\n 1. (\\<And>G\\<^sub>2'.\n        \\<lbrakk>G\\<^sub>2 \\<simeq> G\\<^sub>2';\n         subgraph G\\<^sub>2' G\\<^sub>3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding subgraph_isomorphic_def"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>3 \\<and>\n  (\\<exists>G''. G\\<^sub>2 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3)\n\ngoal (1 subgoal):\n 1. (\\<And>G\\<^sub>2'.\n        \\<lbrakk>G\\<^sub>2 \\<simeq> G\\<^sub>2';\n         subgraph G\\<^sub>2' G\\<^sub>3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  G\\<^sub>2 \\<simeq> G\\<^sub>2'\n  subgraph G\\<^sub>2' G\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "moreover"], ["proof (state)\nthis:\n  G\\<^sub>2 \\<simeq> G\\<^sub>2'\n  subgraph G\\<^sub>2' G\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "with assms(1)"], ["proof (chain)\npicking this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n  G\\<^sub>2 \\<simeq> G\\<^sub>2'\n  subgraph G\\<^sub>2' G\\<^sub>3", "have \"G\\<^sub>1 \\<simeq> G\\<^sub>2'\""], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2\n  G\\<^sub>2 \\<simeq> G\\<^sub>2'\n  subgraph G\\<^sub>2' G\\<^sub>3\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> G\\<^sub>2'", "by (metis isomorphic_trans)"], ["proof (state)\nthis:\n  G\\<^sub>1 \\<simeq> G\\<^sub>2'\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "ultimately"], ["proof (chain)\npicking this:\n  G\\<^sub>2 \\<simeq> G\\<^sub>2'\n  subgraph G\\<^sub>2' G\\<^sub>3\n  G\\<^sub>1 \\<simeq> G\\<^sub>2'", "show \"\\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3\""], ["proof (prove)\nusing this:\n  G\\<^sub>2 \\<simeq> G\\<^sub>2'\n  subgraph G\\<^sub>2' G\\<^sub>3\n  G\\<^sub>1 \\<simeq> G\\<^sub>2'\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "by blast"], ["proof (state)\nthis:\n  \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subgraph_isomorphic_pre_subgraph_closed:\n  assumes \"uwellformed G\\<^sub>1\" and \"subgraph G\\<^sub>1 G\\<^sub>2\" and \"G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\"\n  shows \"G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3", "unfolding subgraph_isomorphic_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>3 \\<and>\n    (\\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. uwellformed G\\<^sub>3\n 2. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "show \"uwellformed G\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>3", "using assms"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>1\n  subgraph G\\<^sub>1 G\\<^sub>2\n  G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\n\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>3", "unfolding subgraph_isomorphic_def"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>1\n  subgraph G\\<^sub>1 G\\<^sub>2\n  uwellformed G\\<^sub>3 \\<and>\n  (\\<exists>G''. G\\<^sub>2 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3)\n\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>3", "by blast"], ["proof (state)\nthis:\n  uwellformed G\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "from assms(3)"], ["proof (chain)\npicking this:\n  G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3", "obtain G\\<^sub>2' where \"G\\<^sub>2 \\<simeq> G\\<^sub>2'\" \"subgraph G\\<^sub>2' G\\<^sub>3\""], ["proof (prove)\nusing this:\n  G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\n\ngoal (1 subgoal):\n 1. (\\<And>G\\<^sub>2'.\n        \\<lbrakk>G\\<^sub>2 \\<simeq> G\\<^sub>2';\n         subgraph G\\<^sub>2' G\\<^sub>3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding subgraph_isomorphic_def"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>3 \\<and>\n  (\\<exists>G''. G\\<^sub>2 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3)\n\ngoal (1 subgoal):\n 1. (\\<And>G\\<^sub>2'.\n        \\<lbrakk>G\\<^sub>2 \\<simeq> G\\<^sub>2';\n         subgraph G\\<^sub>2' G\\<^sub>3\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  G\\<^sub>2 \\<simeq> G\\<^sub>2'\n  subgraph G\\<^sub>2' G\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "then"], ["proof (chain)\npicking this:\n  G\\<^sub>2 \\<simeq> G\\<^sub>2'\n  subgraph G\\<^sub>2' G\\<^sub>3", "obtain f where bij: \"bij_betw f (uverts G\\<^sub>2) (uverts G\\<^sub>2')\" \"G\\<^sub>2' = map_ugraph f G\\<^sub>2\""], ["proof (prove)\nusing this:\n  G\\<^sub>2 \\<simeq> G\\<^sub>2'\n  subgraph G\\<^sub>2' G\\<^sub>3\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f (uverts G\\<^sub>2) (uverts G\\<^sub>2');\n         G\\<^sub>2' = map_ugraph f G\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>2 \\<and>\n  uwellformed G\\<^sub>2' \\<and>\n  (\\<exists>f.\n      bij_betw f (uverts G\\<^sub>2) (uverts G\\<^sub>2') \\<and>\n      G\\<^sub>2' = map_ugraph f G\\<^sub>2)\n  subgraph G\\<^sub>2' G\\<^sub>3\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>bij_betw f (uverts G\\<^sub>2) (uverts G\\<^sub>2');\n         G\\<^sub>2' = map_ugraph f G\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bij_betw f (uverts G\\<^sub>2) (uverts G\\<^sub>2')\n  G\\<^sub>2' = map_ugraph f G\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "let ?G\\<^sub>1' = \"map_ugraph f G\\<^sub>1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "have \"bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)", "using bij(1) assms(2)"], ["proof (prove)\nusing this:\n  bij_betw f (uverts G\\<^sub>2) (uverts G\\<^sub>2')\n  subgraph G\\<^sub>1 G\\<^sub>2\n\ngoal (1 subgoal):\n 1. bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)", "unfolding subgraph_def"], ["proof (prove)\nusing this:\n  bij_betw f (uverts G\\<^sub>2) (uverts G\\<^sub>2')\n  uverts G\\<^sub>1 \\<subseteq> uverts G\\<^sub>2 \\<and>\n  uedges G\\<^sub>1 \\<subseteq> uedges G\\<^sub>2\n\ngoal (1 subgoal):\n 1. bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)", "by (auto intro: bij_betw_subset)"], ["proof (state)\nthis:\n  bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "moreover"], ["proof (state)\nthis:\n  bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "hence \"uwellformed ?G\\<^sub>1'\""], ["proof (prove)\nusing this:\n  bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. uwellformed (map_ugraph f G\\<^sub>1)", "using map_ugraph_wellformed[OF assms(1)]"], ["proof (prove)\nusing this:\n  bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)\n  inj_on ?f (uverts G\\<^sub>1) \\<Longrightarrow>\n  uwellformed (map_ugraph ?f G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. uwellformed (map_ugraph f G\\<^sub>1)", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on f (uverts G\\<^sub>1) \\<and>\n  f ` uverts G\\<^sub>1 = f ` uverts G\\<^sub>1\n  inj_on ?f (uverts G\\<^sub>1) \\<Longrightarrow>\n  uwellformed (map_ugraph ?f G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. uwellformed (map_ugraph f G\\<^sub>1)", ".."], ["proof (state)\nthis:\n  uwellformed (map_ugraph f G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)\n  uwellformed (map_ugraph f G\\<^sub>1)", "have \"G\\<^sub>1 \\<simeq> ?G\\<^sub>1'\""], ["proof (prove)\nusing this:\n  bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)\n  uwellformed (map_ugraph f G\\<^sub>1)\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> map_ugraph f G\\<^sub>1", "using assms(1)"], ["proof (prove)\nusing this:\n  bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)\n  uwellformed (map_ugraph f G\\<^sub>1)\n  uwellformed G\\<^sub>1\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<simeq> map_ugraph f G\\<^sub>1", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  bij_betw f (uverts G\\<^sub>1) (f ` uverts G\\<^sub>1)\n  uwellformed (map_ugraph f G\\<^sub>1)\n  uwellformed G\\<^sub>1\n\ngoal (1 subgoal):\n 1. uwellformed G\\<^sub>1 \\<and>\n    uwellformed (map_ugraph f G\\<^sub>1) \\<and>\n    (\\<exists>fa.\n        bij_betw fa (uverts G\\<^sub>1)\n         (uverts (map_ugraph f G\\<^sub>1)) \\<and>\n        map_ugraph f G\\<^sub>1 = map_ugraph fa G\\<^sub>1)", "by (metis map_ugraph.simps fst_conv surjective_pairing)"], ["proof (state)\nthis:\n  G\\<^sub>1 \\<simeq> map_ugraph f G\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "moreover"], ["proof (state)\nthis:\n  G\\<^sub>1 \\<simeq> map_ugraph f G\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "have \"subgraph ?G\\<^sub>1' G\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgraph (map_ugraph f G\\<^sub>1) G\\<^sub>3", "(* Yes, I will TOTALLY understand that step tomorrow. *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgraph (map_ugraph f G\\<^sub>1) G\\<^sub>3", "using subgraph_trans[OF map_ugraph_preserves_sub[OF assms(2)]] bij(2) \\<open>subgraph G\\<^sub>2' G\\<^sub>3\\<close>"], ["proof (prove)\nusing this:\n  subgraph (map_ugraph ?f1 G\\<^sub>2) ?G \\<Longrightarrow>\n  subgraph (map_ugraph ?f1 G\\<^sub>1) ?G\n  G\\<^sub>2' = map_ugraph f G\\<^sub>2\n  subgraph G\\<^sub>2' G\\<^sub>3\n\ngoal (1 subgoal):\n 1. subgraph (map_ugraph f G\\<^sub>1) G\\<^sub>3", "by simp"], ["proof (state)\nthis:\n  subgraph (map_ugraph f G\\<^sub>1) G\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "ultimately"], ["proof (chain)\npicking this:\n  G\\<^sub>1 \\<simeq> map_ugraph f G\\<^sub>1\n  subgraph (map_ugraph f G\\<^sub>1) G\\<^sub>3", "show \"\\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3\""], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> map_ugraph f G\\<^sub>1\n  subgraph (map_ugraph f G\\<^sub>1) G\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3", "by blast"], ["proof (state)\nthis:\n  \\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas subgraph_isomorphic_pre_closed = subgraph_isomorphic_pre_subgraph_closed subgraph_isomorphic_pre_iso_closed"], ["", "lemma subgraph_isomorphic_trans[trans]:\n  assumes \"G\\<^sub>1 \\<sqsubseteq> G\\<^sub>2\" and \"G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\"\n  shows \"G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3", "from assms(1)"], ["proof (chain)\npicking this:\n  G\\<^sub>1 \\<sqsubseteq> G\\<^sub>2", "obtain G where \"G\\<^sub>1 \\<simeq> G\" \"subgraph G G\\<^sub>2\""], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<sqsubseteq> G\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G\\<^sub>1 \\<simeq> G; subgraph G G\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding subgraph_isomorphic_def"], ["proof (prove)\nusing this:\n  uwellformed G\\<^sub>2 \\<and>\n  (\\<exists>G''. G\\<^sub>1 \\<simeq> G'' \\<and> subgraph G'' G\\<^sub>2)\n\ngoal (1 subgoal):\n 1. (\\<And>G.\n        \\<lbrakk>G\\<^sub>1 \\<simeq> G; subgraph G G\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  G\\<^sub>1 \\<simeq> G\n  subgraph G G\\<^sub>2\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3", "thus ?thesis"], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\n  subgraph G G\\<^sub>2\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3", "using assms(2)"], ["proof (prove)\nusing this:\n  G\\<^sub>1 \\<simeq> G\n  subgraph G G\\<^sub>2\n  G\\<^sub>2 \\<sqsubseteq> G\\<^sub>3\n\ngoal (1 subgoal):\n 1. G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3", "by (metis subgraph_isomorphic_pre_closed)"], ["proof (state)\nthis:\n  G\\<^sub>1 \\<sqsubseteq> G\\<^sub>3\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subgraph_isomorphic_post_iso_closed: \"\\<lbrakk> H \\<sqsubseteq> G; G \\<simeq> G' \\<rbrakk> \\<Longrightarrow> H \\<sqsubseteq> G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<sqsubseteq> G; G \\<simeq> G'\\<rbrakk>\n    \\<Longrightarrow> H \\<sqsubseteq> G'", "using isomorphic_is_subgraph_isomorphic subgraph_isomorphic_trans"], ["proof (prove)\nusing this:\n  ?G\\<^sub>1 \\<simeq> ?G\\<^sub>2 \\<Longrightarrow>\n  ?G\\<^sub>1 \\<sqsubseteq> ?G\\<^sub>2\n  \\<lbrakk>?G\\<^sub>1 \\<sqsubseteq> ?G\\<^sub>2;\n   ?G\\<^sub>2 \\<sqsubseteq> ?G\\<^sub>3\\<rbrakk>\n  \\<Longrightarrow> ?G\\<^sub>1 \\<sqsubseteq> ?G\\<^sub>3\n\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<sqsubseteq> G; G \\<simeq> G'\\<rbrakk>\n    \\<Longrightarrow> H \\<sqsubseteq> G'", "by blast"], ["", "lemmas subgraph_isomorphic_post_closed = subgraph_isomorphic_post_iso_closed"], ["", "lemmas subgraph_isomorphic_closed = subgraph_isomorphic_pre_closed subgraph_isomorphic_post_closed"], ["", "subsection\\<open>Density\\<close>"], ["", "text\\<open>The density of a graph is the quotient of the number of edges and the number of vertices of\na graph.\\<close>"], ["", "definition density :: \"ugraph \\<Rightarrow> real\" where\n\"density G = card (uedges G) / card (uverts G)\""], ["", "text\\<open>The maximum density of a graph is the density of its densest nonempty subgraph.\\<close>"], ["", "definition max_density :: \"ugraph \\<Rightarrow> real\" where\n\"max_density G = Lattices_Big.Max (density ` nonempty_subgraphs G)\""], ["", "text\\<open>We prove some obvious results about the maximum density, such as that there is a subgraph\nwhich has the maximum density and that the (maximum) density is preserved by isomorphisms. The\nproofs are a bit complicated by the fact that most facts about @{term Lattices_Big.Max} require\nnon-emptiness of the target set, but we need that anyway to get a value out of it.\\<close>"], ["", "lemma subgraph_has_max_density:\n  assumes \"finite_graph G\" and \"nonempty_graph G\" and \"uwellformed G\"\n  shows \"\\<exists>G'. density G' = max_density G \\<and> subgraph G' G \\<and> nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>G'.\n       Ugraph_Lemmas.density G' = max_density G \\<and>\n       subgraph G' G \\<and>\n       nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>G'.\n       Ugraph_Lemmas.density G' = max_density G \\<and>\n       subgraph G' G \\<and>\n       nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'", "have \"G \\<in> nonempty_subgraphs G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<in> nonempty_subgraphs G", "unfolding nonempty_subgraphs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<in> {G'.\n             uwellformed G' \\<and> subgraph G' G \\<and> nonempty_graph G'}", "using subgraph_refl assms"], ["proof (prove)\nusing this:\n  subgraph ?G ?G\n  finite_graph G\n  nonempty_graph G\n  uwellformed G\n\ngoal (1 subgoal):\n 1. G \\<in> {G'.\n             uwellformed G' \\<and> subgraph G' G \\<and> nonempty_graph G'}", "by simp"], ["proof (state)\nthis:\n  G \\<in> nonempty_subgraphs G\n\ngoal (1 subgoal):\n 1. \\<exists>G'.\n       Ugraph_Lemmas.density G' = max_density G \\<and>\n       subgraph G' G \\<and>\n       nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'", "hence \"density G \\<in> density ` nonempty_subgraphs G\""], ["proof (prove)\nusing this:\n  G \\<in> nonempty_subgraphs G\n\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G\n    \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G", "by simp"], ["proof (state)\nthis:\n  Ugraph_Lemmas.density G \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G\n\ngoal (1 subgoal):\n 1. \\<exists>G'.\n       Ugraph_Lemmas.density G' = max_density G \\<and>\n       subgraph G' G \\<and>\n       nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'", "hence \"(density ` nonempty_subgraphs G) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  Ugraph_Lemmas.density G \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G\n\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density ` nonempty_subgraphs G \\<noteq> {}", "by fast"], ["proof (state)\nthis:\n  Ugraph_Lemmas.density ` nonempty_subgraphs G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>G'.\n       Ugraph_Lemmas.density G' = max_density G \\<and>\n       subgraph G' G \\<and>\n       nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'", "hence \"max_density G \\<in> (density ` nonempty_subgraphs G)\""], ["proof (prove)\nusing this:\n  Ugraph_Lemmas.density ` nonempty_subgraphs G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. max_density G \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G", "unfolding max_density_def"], ["proof (prove)\nusing this:\n  Ugraph_Lemmas.density ` nonempty_subgraphs G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Max (Ugraph_Lemmas.density ` nonempty_subgraphs G)\n    \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G", "by (auto simp add: nonempty_subgraphs_finite[OF assms(1)] Max.closed)"], ["proof (state)\nthis:\n  max_density G \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G\n\ngoal (1 subgoal):\n 1. \\<exists>G'.\n       Ugraph_Lemmas.density G' = max_density G \\<and>\n       subgraph G' G \\<and>\n       nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'", "thus ?thesis"], ["proof (prove)\nusing this:\n  max_density G \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G\n\ngoal (1 subgoal):\n 1. \\<exists>G'.\n       Ugraph_Lemmas.density G' = max_density G \\<and>\n       subgraph G' G \\<and>\n       nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'", "unfolding nonempty_subgraphs_def"], ["proof (prove)\nusing this:\n  max_density G\n  \\<in> Ugraph_Lemmas.density `\n        {G'. uwellformed G' \\<and> subgraph G' G \\<and> nonempty_graph G'}\n\ngoal (1 subgoal):\n 1. \\<exists>G'.\n       Ugraph_Lemmas.density G' = max_density G \\<and>\n       subgraph G' G \\<and>\n       nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'", "using subgraph_finite[OF assms(1)]"], ["proof (prove)\nusing this:\n  max_density G\n  \\<in> Ugraph_Lemmas.density `\n        {G'. uwellformed G' \\<and> subgraph G' G \\<and> nonempty_graph G'}\n  subgraph ?G' G \\<Longrightarrow> finite_graph ?G'\n\ngoal (1 subgoal):\n 1. \\<exists>G'.\n       Ugraph_Lemmas.density G' = max_density G \\<and>\n       subgraph G' G \\<and>\n       nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'", "by force"], ["proof (state)\nthis:\n  \\<exists>G'.\n     Ugraph_Lemmas.density G' = max_density G \\<and>\n     subgraph G' G \\<and>\n     nonempty_graph G' \\<and> finite_graph G' \\<and> uwellformed G'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma max_density_is_max:\n  assumes \"finite_graph G\" and \"finite_graph G'\" and \"nonempty_graph G'\" and \"uwellformed G'\" and \"subgraph G' G\"\n  shows \"density G' \\<le> max_density G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G' \\<le> max_density G", "unfolding max_density_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G'\n    \\<le> Max (Ugraph_Lemmas.density ` nonempty_subgraphs G)", "proof (rule Max_ge)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (Ugraph_Lemmas.density ` nonempty_subgraphs G)\n 2. Ugraph_Lemmas.density G'\n    \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G", "show \"finite (density ` nonempty_subgraphs G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Ugraph_Lemmas.density ` nonempty_subgraphs G)", "using assms(1)"], ["proof (prove)\nusing this:\n  finite_graph G\n\ngoal (1 subgoal):\n 1. finite (Ugraph_Lemmas.density ` nonempty_subgraphs G)", "by (simp add: nonempty_subgraphs_finite)"], ["proof (state)\nthis:\n  finite (Ugraph_Lemmas.density ` nonempty_subgraphs G)\n\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G'\n    \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G'\n    \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G", "show \"density G' \\<in> density ` nonempty_subgraphs G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G'\n    \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G", "unfolding nonempty_subgraphs_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G'\n    \\<in> Ugraph_Lemmas.density `\n          {G'. uwellformed G' \\<and> subgraph G' G \\<and> nonempty_graph G'}", "using assms"], ["proof (prove)\nusing this:\n  finite_graph G\n  finite_graph G'\n  nonempty_graph G'\n  uwellformed G'\n  subgraph G' G\n\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G'\n    \\<in> Ugraph_Lemmas.density `\n          {G'. uwellformed G' \\<and> subgraph G' G \\<and> nonempty_graph G'}", "by blast"], ["proof (state)\nthis:\n  Ugraph_Lemmas.density G'\n  \\<in> Ugraph_Lemmas.density ` nonempty_subgraphs G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma max_density_gr_zero:\n  assumes \"finite_graph G\" and \"nonempty_graph G\" and \"uwellformed G\"\n  shows \"0 < max_density G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < max_density G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 < max_density G", "have \"0 < card (uverts G)\" \"0 < card (uedges G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < card (uverts G) &&& 0 < card (uedges G)", "using assms"], ["proof (prove)\nusing this:\n  finite_graph G\n  nonempty_graph G\n  uwellformed G\n\ngoal (1 subgoal):\n 1. 0 < card (uverts G) &&& 0 < card (uedges G)", "unfolding finite_graph_def nonempty_graph_def"], ["proof (prove)\nusing this:\n  finite (uverts G) \\<and> finite (uedges G)\n  uverts G \\<noteq> {} \\<and> uedges G \\<noteq> {}\n  uwellformed G\n\ngoal (1 subgoal):\n 1. 0 < card (uverts G) &&& 0 < card (uedges G)", "by auto"], ["proof (state)\nthis:\n  0 < card (uverts G)\n  0 < card (uedges G)\n\ngoal (1 subgoal):\n 1. 0 < max_density G", "hence \"0 < density G\""], ["proof (prove)\nusing this:\n  0 < card (uverts G)\n  0 < card (uedges G)\n\ngoal (1 subgoal):\n 1. 0 < Ugraph_Lemmas.density G", "unfolding density_def"], ["proof (prove)\nusing this:\n  0 < card (uverts G)\n  0 < card (uedges G)\n\ngoal (1 subgoal):\n 1. 0 < real (card (uedges G)) / real (card (uverts G))", "by simp"], ["proof (state)\nthis:\n  0 < Ugraph_Lemmas.density G\n\ngoal (1 subgoal):\n 1. 0 < max_density G", "also"], ["proof (state)\nthis:\n  0 < Ugraph_Lemmas.density G\n\ngoal (1 subgoal):\n 1. 0 < max_density G", "have \"density G \\<le> max_density G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G \\<le> max_density G", "using assms"], ["proof (prove)\nusing this:\n  finite_graph G\n  nonempty_graph G\n  uwellformed G\n\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G \\<le> max_density G", "by (simp add: max_density_is_max subgraph_refl)"], ["proof (state)\nthis:\n  Ugraph_Lemmas.density G \\<le> max_density G\n\ngoal (1 subgoal):\n 1. 0 < max_density G", "finally"], ["proof (chain)\npicking this:\n  0 < max_density G", "show ?thesis"], ["proof (prove)\nusing this:\n  0 < max_density G\n\ngoal (1 subgoal):\n 1. 0 < max_density G", "."], ["proof (state)\nthis:\n  0 < max_density G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isomorphic_density:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\"\n  shows \"density G\\<^sub>1 = density G\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G\\<^sub>1 = Ugraph_Lemmas.density G\\<^sub>2", "unfolding density_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (card (uedges G\\<^sub>1)) / real (card (uverts G\\<^sub>1)) =\n    real (card (uedges G\\<^sub>2)) / real (card (uverts G\\<^sub>2))", "using isomorphic_cards[OF assms]"], ["proof (prove)\nusing this:\n  card (uverts G\\<^sub>1) = card (uverts G\\<^sub>2)\n  card (uedges G\\<^sub>1) = card (uedges G\\<^sub>2)\n\ngoal (1 subgoal):\n 1. real (card (uedges G\\<^sub>1)) / real (card (uverts G\\<^sub>1)) =\n    real (card (uedges G\\<^sub>2)) / real (card (uverts G\\<^sub>2))", "by simp"], ["", "lemma isomorphic_max_density:\n  assumes \"G\\<^sub>1 \\<simeq> G\\<^sub>2\" and \"nonempty_graph G\\<^sub>1\" and \"nonempty_graph G\\<^sub>2\" and \"finite_graph G\\<^sub>1\" and \"finite_graph G\\<^sub>2\"\n  shows \"max_density G\\<^sub>1 = max_density G\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "proof -\n  \\<comment> \\<open>The proof strategy is not completely straightforward. We first show that if two graphs are\n       isomorphic, the maximum density of one graph is less or equal than the maximum density of\n       the other graph. The reason is that this proof is quite long and the desired result directly\n       follows from the symmetry of the isomorphism relation.\\footnote{Some famous mathematician\n       once said that if you prove that $a \\le b$ and $b \\le a$, you know \\emph{that} these\n       numbers are equal, but not \\emph{why}. Since many proofs in this work are mostly opaque to\n       me, I can live with that.}\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "fix A B"], ["proof (state)\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "assume A: \"nonempty_graph A\" \"finite_graph A\""], ["proof (state)\nthis:\n  nonempty_graph A\n  finite_graph A\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "assume iso: \"A \\<simeq> B\""], ["proof (state)\nthis:\n  A \\<simeq> B\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "then"], ["proof (chain)\npicking this:\n  A \\<simeq> B", "obtain f where f: \"B = map_ugraph f A\" \"bij_betw f (uverts A) (uverts B)\""], ["proof (prove)\nusing this:\n  A \\<simeq> B\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>B = map_ugraph f A;\n         bij_betw f (uverts A) (uverts B)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  uwellformed A \\<and>\n  uwellformed B \\<and>\n  (\\<exists>f. bij_betw f (uverts A) (uverts B) \\<and> B = map_ugraph f A)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>B = map_ugraph f A;\n         bij_betw f (uverts A) (uverts B)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  B = map_ugraph f A\n  bij_betw f (uverts A) (uverts B)\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "have wellformed: \"uwellformed A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uwellformed A", "using iso"], ["proof (prove)\nusing this:\n  A \\<simeq> B\n\ngoal (1 subgoal):\n 1. uwellformed A", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  uwellformed A \\<and>\n  uwellformed B \\<and>\n  (\\<exists>f. bij_betw f (uverts A) (uverts B) \\<and> B = map_ugraph f A)\n\ngoal (1 subgoal):\n 1. uwellformed A", "by simp\n    \\<comment> \\<open>We observe that the set of densities of the subgraphs does not change if we map the\n         subgraphs first.\\<close>"], ["proof (state)\nthis:\n  uwellformed A\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "have \"density ` nonempty_subgraphs A = density ` (map_ugraph f ` nonempty_subgraphs A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density ` nonempty_subgraphs A =\n    Ugraph_Lemmas.density ` map_ugraph f ` nonempty_subgraphs A", "proof (rule image_comp_cong)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> nonempty_subgraphs A \\<Longrightarrow>\n       Ugraph_Lemmas.density a = Ugraph_Lemmas.density (map_ugraph f a)", "fix G"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> nonempty_subgraphs A \\<Longrightarrow>\n       Ugraph_Lemmas.density a = Ugraph_Lemmas.density (map_ugraph f a)", "assume \"G \\<in> nonempty_subgraphs A\""], ["proof (state)\nthis:\n  G \\<in> nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> nonempty_subgraphs A \\<Longrightarrow>\n       Ugraph_Lemmas.density a = Ugraph_Lemmas.density (map_ugraph f a)", "hence \"uverts G \\<subseteq> uverts A\" \"uwellformed G\""], ["proof (prove)\nusing this:\n  G \\<in> nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. uverts G \\<subseteq> uverts A &&& uwellformed G", "unfolding nonempty_subgraphs_def subgraph_def"], ["proof (prove)\nusing this:\n  G \\<in> {G'.\n           uwellformed G' \\<and>\n           (uverts G' \\<subseteq> uverts A \\<and>\n            uedges G' \\<subseteq> uedges A) \\<and>\n           nonempty_graph G'}\n\ngoal (1 subgoal):\n 1. uverts G \\<subseteq> uverts A &&& uwellformed G", "by simp+"], ["proof (state)\nthis:\n  uverts G \\<subseteq> uverts A\n  uwellformed G\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> nonempty_subgraphs A \\<Longrightarrow>\n       Ugraph_Lemmas.density a = Ugraph_Lemmas.density (map_ugraph f a)", "hence \"inj_on f (uverts G)\""], ["proof (prove)\nusing this:\n  uverts G \\<subseteq> uverts A\n  uwellformed G\n\ngoal (1 subgoal):\n 1. inj_on f (uverts G)", "using f(2)"], ["proof (prove)\nusing this:\n  uverts G \\<subseteq> uverts A\n  uwellformed G\n  bij_betw f (uverts A) (uverts B)\n\ngoal (1 subgoal):\n 1. inj_on f (uverts G)", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  uverts G \\<subseteq> uverts A\n  uwellformed G\n  inj_on f (uverts A) \\<and> f ` uverts A = uverts B\n\ngoal (1 subgoal):\n 1. inj_on f (uverts G)", "by (metis subset_inj_on)"], ["proof (state)\nthis:\n  inj_on f (uverts G)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> nonempty_subgraphs A \\<Longrightarrow>\n       Ugraph_Lemmas.density a = Ugraph_Lemmas.density (map_ugraph f a)", "hence \"G \\<simeq> map_ugraph f G\""], ["proof (prove)\nusing this:\n  inj_on f (uverts G)\n\ngoal (1 subgoal):\n 1. G \\<simeq> map_ugraph f G", "unfolding isomorphism_def bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on f (uverts G)\n\ngoal (1 subgoal):\n 1. uwellformed G \\<and>\n    uwellformed (map_ugraph f G) \\<and>\n    (\\<exists>fa.\n        (inj_on fa (uverts G) \\<and>\n         fa ` uverts G = uverts (map_ugraph f G)) \\<and>\n        map_ugraph f G = map_ugraph fa G)", "by (metis map_ugraph.simps fst_conv surjective_pairing map_ugraph_wellformed \\<open>uwellformed G\\<close>)"], ["proof (state)\nthis:\n  G \\<simeq> map_ugraph f G\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> nonempty_subgraphs A \\<Longrightarrow>\n       Ugraph_Lemmas.density a = Ugraph_Lemmas.density (map_ugraph f a)", "thus \"density G = density (map_ugraph f G)\""], ["proof (prove)\nusing this:\n  G \\<simeq> map_ugraph f G\n\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density G = Ugraph_Lemmas.density (map_ugraph f G)", "by (fact isomorphic_density)"], ["proof (state)\nthis:\n  Ugraph_Lemmas.density G = Ugraph_Lemmas.density (map_ugraph f G)\n\ngoal:\nNo subgoals!", "qed\n    \\<comment> \\<open>Additionally, we show that the operations @{term nonempty_subgraphs} and @{term map_ugraph}\n         can be swapped without changing the densities. This is an obvious result, because\n         @{term map_ugraph} does not change the structure of a graph. Still, the proof is a bit\n         hairy, which is why we only show inclusion in one direction and use symmetry of isomorphism\n         later.\\<close>"], ["proof (state)\nthis:\n  Ugraph_Lemmas.density ` nonempty_subgraphs A =\n  Ugraph_Lemmas.density ` map_ugraph f ` nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "also"], ["proof (state)\nthis:\n  Ugraph_Lemmas.density ` nonempty_subgraphs A =\n  Ugraph_Lemmas.density ` map_ugraph f ` nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "have \"\\<dots> \\<subseteq> density ` nonempty_subgraphs (map_ugraph f A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density ` map_ugraph f ` nonempty_subgraphs A\n    \\<subseteq> Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A)", "proof (rule image_mono, rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "fix G''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "assume \"G'' \\<in> map_ugraph f ` nonempty_subgraphs A\""], ["proof (state)\nthis:\n  G'' \\<in> map_ugraph f ` nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "then"], ["proof (chain)\npicking this:\n  G'' \\<in> map_ugraph f ` nonempty_subgraphs A", "obtain G' where G_subst: \"G'' = map_ugraph f G'\" \"G' \\<in> nonempty_subgraphs A\""], ["proof (prove)\nusing this:\n  G'' \\<in> map_ugraph f ` nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. (\\<And>G'.\n        \\<lbrakk>G'' = map_ugraph f G';\n         G' \\<in> nonempty_subgraphs A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  G'' = map_ugraph f G'\n  G' \\<in> nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "hence G': \"subgraph G' A\" \"nonempty_graph G'\" \"uwellformed G'\""], ["proof (prove)\nusing this:\n  G'' = map_ugraph f G'\n  G' \\<in> nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. subgraph G' A &&& nonempty_graph G' &&& uwellformed G'", "unfolding nonempty_subgraphs_def"], ["proof (prove)\nusing this:\n  G'' = map_ugraph f G'\n  G' \\<in> {G'.\n            uwellformed G' \\<and> subgraph G' A \\<and> nonempty_graph G'}\n\ngoal (1 subgoal):\n 1. subgraph G' A &&& nonempty_graph G' &&& uwellformed G'", "by auto"], ["proof (state)\nthis:\n  subgraph G' A\n  nonempty_graph G'\n  uwellformed G'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "hence \"inj_on f (uverts G')\""], ["proof (prove)\nusing this:\n  subgraph G' A\n  nonempty_graph G'\n  uwellformed G'\n\ngoal (1 subgoal):\n 1. inj_on f (uverts G')", "using f"], ["proof (prove)\nusing this:\n  subgraph G' A\n  nonempty_graph G'\n  uwellformed G'\n  B = map_ugraph f A\n  bij_betw f (uverts A) (uverts B)\n\ngoal (1 subgoal):\n 1. inj_on f (uverts G')", "unfolding bij_betw_def subgraph_def"], ["proof (prove)\nusing this:\n  uverts G' \\<subseteq> uverts A \\<and> uedges G' \\<subseteq> uedges A\n  nonempty_graph G'\n  uwellformed G'\n  B = map_ugraph f A\n  inj_on f (uverts A) \\<and> f ` uverts A = uverts B\n\ngoal (1 subgoal):\n 1. inj_on f (uverts G')", "by (metis subset_inj_on)"], ["proof (state)\nthis:\n  inj_on f (uverts G')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "hence \"uwellformed G''\""], ["proof (prove)\nusing this:\n  inj_on f (uverts G')\n\ngoal (1 subgoal):\n 1. uwellformed G''", "using map_ugraph_wellformed G' G_subst"], ["proof (prove)\nusing this:\n  inj_on f (uverts G')\n  \\<lbrakk>uwellformed ?G; inj_on ?f (uverts ?G)\\<rbrakk>\n  \\<Longrightarrow> uwellformed (map_ugraph ?f ?G)\n  subgraph G' A\n  nonempty_graph G'\n  uwellformed G'\n  G'' = map_ugraph f G'\n  G' \\<in> nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. uwellformed G''", "by simp"], ["proof (state)\nthis:\n  uwellformed G''\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "moreover"], ["proof (state)\nthis:\n  uwellformed G''\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "have \"nonempty_graph G''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nonempty_graph G''", "using G' G_subst"], ["proof (prove)\nusing this:\n  subgraph G' A\n  nonempty_graph G'\n  uwellformed G'\n  G'' = map_ugraph f G'\n  G' \\<in> nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. nonempty_graph G''", "unfolding nonempty_graph_def"], ["proof (prove)\nusing this:\n  subgraph G' A\n  uverts G' \\<noteq> {} \\<and> uedges G' \\<noteq> {}\n  uwellformed G'\n  G'' = map_ugraph f G'\n  G' \\<in> nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. uverts G'' \\<noteq> {} \\<and> uedges G'' \\<noteq> {}", "by (metis map_ugraph.simps fst_conv snd_conv surjective_pairing empty_is_image)"], ["proof (state)\nthis:\n  nonempty_graph G''\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "moreover"], ["proof (state)\nthis:\n  nonempty_graph G''\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "have \"subgraph G'' (map_ugraph f A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgraph G'' (map_ugraph f A)", "using map_ugraph_preserves_sub G' G_subst"], ["proof (prove)\nusing this:\n  subgraph ?G\\<^sub>1 ?G\\<^sub>2 \\<Longrightarrow>\n  subgraph (map_ugraph ?f ?G\\<^sub>1) (map_ugraph ?f ?G\\<^sub>2)\n  subgraph G' A\n  nonempty_graph G'\n  uwellformed G'\n  G'' = map_ugraph f G'\n  G' \\<in> nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. subgraph G'' (map_ugraph f A)", "by simp"], ["proof (state)\nthis:\n  subgraph G'' (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> map_ugraph f ` nonempty_subgraphs A \\<Longrightarrow>\n       x \\<in> nonempty_subgraphs (map_ugraph f A)", "ultimately"], ["proof (chain)\npicking this:\n  uwellformed G''\n  nonempty_graph G''\n  subgraph G'' (map_ugraph f A)", "show \"G'' \\<in> nonempty_subgraphs (map_ugraph f A)\""], ["proof (prove)\nusing this:\n  uwellformed G''\n  nonempty_graph G''\n  subgraph G'' (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. G'' \\<in> nonempty_subgraphs (map_ugraph f A)", "unfolding nonempty_subgraphs_def"], ["proof (prove)\nusing this:\n  uwellformed G''\n  nonempty_graph G''\n  subgraph G'' (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. G''\n    \\<in> {G'.\n           uwellformed G' \\<and>\n           subgraph G' (map_ugraph f A) \\<and> nonempty_graph G'}", "by simp"], ["proof (state)\nthis:\n  G'' \\<in> nonempty_subgraphs (map_ugraph f A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Ugraph_Lemmas.density ` map_ugraph f ` nonempty_subgraphs A\n  \\<subseteq> Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "finally"], ["proof (chain)\npicking this:\n  Ugraph_Lemmas.density ` nonempty_subgraphs A\n  \\<subseteq> Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A)", "have \"density ` nonempty_subgraphs A \\<subseteq> density ` nonempty_subgraphs (map_ugraph f A)\""], ["proof (prove)\nusing this:\n  Ugraph_Lemmas.density ` nonempty_subgraphs A\n  \\<subseteq> Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density ` nonempty_subgraphs A\n    \\<subseteq> Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A)", "."], ["proof (state)\nthis:\n  Ugraph_Lemmas.density ` nonempty_subgraphs A\n  \\<subseteq> Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "hence \"max_density A \\<le> max_density (map_ugraph f A)\""], ["proof (prove)\nusing this:\n  Ugraph_Lemmas.density ` nonempty_subgraphs A\n  \\<subseteq> Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. max_density A \\<le> max_density (map_ugraph f A)", "unfolding max_density_def"], ["proof (prove)\nusing this:\n  Ugraph_Lemmas.density ` nonempty_subgraphs A\n  \\<subseteq> Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. Max (Ugraph_Lemmas.density ` nonempty_subgraphs A)\n    \\<le> Max (Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A))", "proof (rule Max_mono)"], ["proof (state)\ngoal (2 subgoals):\n 1. Ugraph_Lemmas.density ` nonempty_subgraphs A \\<noteq> {}\n 2. finite (Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A))", "have \"A \\<in> nonempty_subgraphs A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> nonempty_subgraphs A", "using A iso"], ["proof (prove)\nusing this:\n  nonempty_graph A\n  finite_graph A\n  A \\<simeq> B\n\ngoal (1 subgoal):\n 1. A \\<in> nonempty_subgraphs A", "unfolding nonempty_subgraphs_def"], ["proof (prove)\nusing this:\n  nonempty_graph A\n  finite_graph A\n  A \\<simeq> B\n\ngoal (1 subgoal):\n 1. A \\<in> {G'.\n             uwellformed G' \\<and> subgraph G' A \\<and> nonempty_graph G'}", "by (simp add: subgraph_refl)"], ["proof (state)\nthis:\n  A \\<in> nonempty_subgraphs A\n\ngoal (2 subgoals):\n 1. Ugraph_Lemmas.density ` nonempty_subgraphs A \\<noteq> {}\n 2. finite (Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A))", "thus \"density ` nonempty_subgraphs A \\<noteq> {}\""], ["proof (prove)\nusing this:\n  A \\<in> nonempty_subgraphs A\n\ngoal (1 subgoal):\n 1. Ugraph_Lemmas.density ` nonempty_subgraphs A \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  Ugraph_Lemmas.density ` nonempty_subgraphs A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. finite (Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A))", "have \"finite (nonempty_subgraphs (map_ugraph f A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (nonempty_subgraphs (map_ugraph f A))", "by (rule nonempty_subgraphs_finite[OF map_ugraph_finite[OF A(2)]])"], ["proof (state)\nthis:\n  finite (nonempty_subgraphs (map_ugraph f A))\n\ngoal (1 subgoal):\n 1. finite (Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A))", "thus \"finite (density ` nonempty_subgraphs (map_ugraph f A))\""], ["proof (prove)\nusing this:\n  finite (nonempty_subgraphs (map_ugraph f A))\n\ngoal (1 subgoal):\n 1. finite (Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A))", "by blast"], ["proof (state)\nthis:\n  finite (Ugraph_Lemmas.density ` nonempty_subgraphs (map_ugraph f A))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  max_density A \\<le> max_density (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "hence \"max_density A \\<le> max_density B\""], ["proof (prove)\nusing this:\n  max_density A \\<le> max_density (map_ugraph f A)\n\ngoal (1 subgoal):\n 1. max_density A \\<le> max_density B", "by (subst f)"], ["proof (state)\nthis:\n  max_density A \\<le> max_density B\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "}"], ["proof (state)\nthis:\n  \\<lbrakk>nonempty_graph ?A2; finite_graph ?A2; ?A2 \\<simeq> ?B2\\<rbrakk>\n  \\<Longrightarrow> max_density ?A2 \\<le> max_density ?B2\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "note le = this"], ["proof (state)\nthis:\n  \\<lbrakk>nonempty_graph ?A2; finite_graph ?A2; ?A2 \\<simeq> ?B2\\<rbrakk>\n  \\<Longrightarrow> max_density ?A2 \\<le> max_density ?B2\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "using le[OF assms(2) assms(4) assms(1)] le[OF assms(3) assms(5) isomorphic_sym[OF assms(1)]]"], ["proof (prove)\nusing this:\n  max_density G\\<^sub>1 \\<le> max_density G\\<^sub>2\n  max_density G\\<^sub>2 \\<le> max_density G\\<^sub>1\n\ngoal (1 subgoal):\n 1. max_density G\\<^sub>1 = max_density G\\<^sub>2", "by (fact antisym)"], ["proof (state)\nthis:\n  max_density G\\<^sub>1 = max_density G\\<^sub>2\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Fixed selectors\\<close>"], ["", "text\\<open>\\label{sec:selector}\nIn the proof of the main theorem in the lecture notes, the concept of a ``fixed copy'' of a graph is\nfundamental.\n\nLet $H$ be a fixed graph. A `fixed selector' is basically a function mapping a set with the same\nsize as the vertex set of $H$ to a new graph which is isomorphic to $H$ and its vertex set is the\nsame as the input set.\\footnote{We call such a selector \\emph{fixed} because its result is\ndeterministic.}\\<close>"], ["", "definition \"is_fixed_selector H f = (\\<forall>V. finite V \\<and> card (uverts H) = card V \\<longrightarrow> H \\<simeq> f V \\<and> uverts (f V) = V)\""], ["", "text\\<open>Obviously, there may be many possible fixed selectors for a given graph. First, we show\nthat there is always at least one. This is sufficient, because we can always obtain that one and\nuse its properties without knowing exactly which one we chose.\\<close>"], ["", "lemma ex_fixed_selector:\n  assumes \"uwellformed H\" and \"finite_graph H\"\n  obtains f where \"is_fixed_selector H f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof\n  \\<comment> \\<open>I guess this is the only place in the whole work where we make use of a nifty little HOL\n       feature called \\emph{SOME}, which is basically Hilbert's choice operator. The reason is that\n       any bijection between the the vertex set of @{term H} and the input set gives rise to a\n       fixed selector function. In the lecture notes, a specific bijection was defined, but this\n       is shorter and more elegant.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "let ?bij = \"\\<lambda>V. SOME g. bij_betw g (uverts H) V\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "let ?f = \"\\<lambda>V. map_ugraph (?bij V) H\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "fix V :: \"uvert set\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "assume \"finite V\" \"card (uverts H) = card V\""], ["proof (state)\nthis:\n  finite V\n  card (uverts H) = card V\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "moreover"], ["proof (state)\nthis:\n  finite V\n  card (uverts H) = card V\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "have \"finite (uverts H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (uverts H)", "using assms"], ["proof (prove)\nusing this:\n  uwellformed H\n  finite_graph H\n\ngoal (1 subgoal):\n 1. finite (uverts H)", "unfolding finite_graph_def"], ["proof (prove)\nusing this:\n  uwellformed H\n  finite (uverts H) \\<and> finite (uedges H)\n\ngoal (1 subgoal):\n 1. finite (uverts H)", "by simp"], ["proof (state)\nthis:\n  finite (uverts H)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "ultimately"], ["proof (chain)\npicking this:\n  finite V\n  card (uverts H) = card V\n  finite (uverts H)", "have \"bij_betw (?bij V) (uverts H) V\""], ["proof (prove)\nusing this:\n  finite V\n  card (uverts H) = card V\n  finite (uverts H)\n\ngoal (1 subgoal):\n 1. bij_betw (SOME g. bij_betw g (uverts H) V) (uverts H) V", "by (metis finite_same_card_bij someI_ex)"], ["proof (state)\nthis:\n  bij_betw (SOME g. bij_betw g (uverts H) V) (uverts H) V\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "moreover"], ["proof (state)\nthis:\n  bij_betw (SOME g. bij_betw g (uverts H) V) (uverts H) V\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "hence *: \"uverts (?f V) = V \\<and> uwellformed (?f V)\""], ["proof (prove)\nusing this:\n  bij_betw (SOME g. bij_betw g (uverts H) V) (uverts H) V\n\ngoal (1 subgoal):\n 1. uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H) = V \\<and>\n    uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H)", "using map_ugraph_wellformed[OF assms(1)]"], ["proof (prove)\nusing this:\n  bij_betw (SOME g. bij_betw g (uverts H) V) (uverts H) V\n  inj_on ?f (uverts H) \\<Longrightarrow> uwellformed (map_ugraph ?f H)\n\ngoal (1 subgoal):\n 1. uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H) = V \\<and>\n    uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H)", "by (metis bij_betw_def map_ugraph.simps fst_conv surjective_pairing)"], ["proof (state)\nthis:\n  uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H) = V \\<and>\n  uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "ultimately"], ["proof (chain)\npicking this:\n  bij_betw (SOME g. bij_betw g (uverts H) V) (uverts H) V\n  uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H) = V \\<and>\n  uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H)", "have **: \"H \\<simeq> ?f V\""], ["proof (prove)\nusing this:\n  bij_betw (SOME g. bij_betw g (uverts H) V) (uverts H) V\n  uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H) = V \\<and>\n  uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H)\n\ngoal (1 subgoal):\n 1. H \\<simeq> map_ugraph (SOME g. bij_betw g (uverts H) V) H", "unfolding isomorphism_def"], ["proof (prove)\nusing this:\n  bij_betw (SOME g. bij_betw g (uverts H) V) (uverts H) V\n  uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H) = V \\<and>\n  uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H)\n\ngoal (1 subgoal):\n 1. uwellformed H \\<and>\n    uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H) \\<and>\n    (\\<exists>f.\n        bij_betw f (uverts H)\n         (uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H)) \\<and>\n        map_ugraph (SOME g. bij_betw g (uverts H) V) H = map_ugraph f H)", "using assms(1)"], ["proof (prove)\nusing this:\n  bij_betw (SOME g. bij_betw g (uverts H) V) (uverts H) V\n  uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H) = V \\<and>\n  uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H)\n  uwellformed H\n\ngoal (1 subgoal):\n 1. uwellformed H \\<and>\n    uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H) \\<and>\n    (\\<exists>f.\n        bij_betw f (uverts H)\n         (uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H)) \\<and>\n        map_ugraph (SOME g. bij_betw g (uverts H) V) H = map_ugraph f H)", "by auto"], ["proof (state)\nthis:\n  H \\<simeq> map_ugraph (SOME g. bij_betw g (uverts H) V) H\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "note * **"], ["proof (state)\nthis:\n  uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H) = V \\<and>\n  uwellformed (map_ugraph (SOME g. bij_betw g (uverts H) V) H)\n  H \\<simeq> map_ugraph (SOME g. bij_betw g (uverts H) V) H\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "}"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?V3; card (uverts H) = card ?V3\\<rbrakk>\n  \\<Longrightarrow> uverts\n                     (map_ugraph (SOME g. bij_betw g (uverts H) ?V3) H) =\n                    ?V3 \\<and>\n                    uwellformed\n                     (map_ugraph (SOME g. bij_betw g (uverts H) ?V3) H)\n  \\<lbrakk>finite ?V3; card (uverts H) = card ?V3\\<rbrakk>\n  \\<Longrightarrow> H \\<simeq> map_ugraph\n                                (SOME g. bij_betw g (uverts H) ?V3) H\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        is_fixed_selector H f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    is_fixed_selector H ?f2", "thus \"is_fixed_selector H ?f\""], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?V3; card (uverts H) = card ?V3\\<rbrakk>\n  \\<Longrightarrow> uverts\n                     (map_ugraph (SOME g. bij_betw g (uverts H) ?V3) H) =\n                    ?V3 \\<and>\n                    uwellformed\n                     (map_ugraph (SOME g. bij_betw g (uverts H) ?V3) H)\n  \\<lbrakk>finite ?V3; card (uverts H) = card ?V3\\<rbrakk>\n  \\<Longrightarrow> H \\<simeq> map_ugraph\n                                (SOME g. bij_betw g (uverts H) ?V3) H\n\ngoal (1 subgoal):\n 1. is_fixed_selector H\n     (\\<lambda>V. map_ugraph (SOME g. bij_betw g (uverts H) V) H)", "unfolding is_fixed_selector_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?V3; card (uverts H) = card ?V3\\<rbrakk>\n  \\<Longrightarrow> uverts\n                     (map_ugraph (SOME g. bij_betw g (uverts H) ?V3) H) =\n                    ?V3 \\<and>\n                    uwellformed\n                     (map_ugraph (SOME g. bij_betw g (uverts H) ?V3) H)\n  \\<lbrakk>finite ?V3; card (uverts H) = card ?V3\\<rbrakk>\n  \\<Longrightarrow> H \\<simeq> map_ugraph\n                                (SOME g. bij_betw g (uverts H) ?V3) H\n\ngoal (1 subgoal):\n 1. \\<forall>V.\n       finite V \\<and> card (uverts H) = card V \\<longrightarrow>\n       H \\<simeq> map_ugraph (SOME g. bij_betw g (uverts H) V) H \\<and>\n       uverts (map_ugraph (SOME g. bij_betw g (uverts H) V) H) = V", "by blast"], ["proof (state)\nthis:\n  is_fixed_selector H\n   (\\<lambda>V. map_ugraph (SOME g. bij_betw g (uverts H) V) H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fixed_selector_induced_subgraph:\n  assumes \"is_fixed_selector H f\" and \"card (uverts H) = card V\" and \"finite V\"\n  assumes sub: \"subgraph (f V) (induced_subgraph V G)\" and V: \"V \\<subseteq> uverts G\" and G: \"uwellformed G\"\n  shows \"H \\<sqsubseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> G", "have post: \"H \\<simeq> f V\" \"uverts (f V) = V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<simeq> f V &&& uverts (f V) = V", "using assms"], ["proof (prove)\nusing this:\n  is_fixed_selector H f\n  card (uverts H) = card V\n  finite V\n  subgraph (f V) (induced_subgraph V G)\n  V \\<subseteq> uverts G\n  uwellformed G\n\ngoal (1 subgoal):\n 1. H \\<simeq> f V &&& uverts (f V) = V", "unfolding is_fixed_selector_def"], ["proof (prove)\nusing this:\n  \\<forall>V.\n     finite V \\<and> card (uverts H) = card V \\<longrightarrow>\n     H \\<simeq> f V \\<and> uverts (f V) = V\n  card (uverts H) = card V\n  finite V\n  subgraph (f V) (induced_subgraph V G)\n  V \\<subseteq> uverts G\n  uwellformed G\n\ngoal (1 subgoal):\n 1. H \\<simeq> f V &&& uverts (f V) = V", "by auto"], ["proof (state)\nthis:\n  H \\<simeq> f V\n  uverts (f V) = V\n\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> G", "have \"H \\<sqsubseteq> f V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> f V", "by (rule isomorphic_is_subgraph_isomorphic)\n       (simp add: post)"], ["proof (state)\nthis:\n  H \\<sqsubseteq> f V\n\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> G", "also"], ["proof (state)\nthis:\n  H \\<sqsubseteq> f V\n\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> G", "have \"f V \\<sqsubseteq> induced_subgraph V G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f V \\<sqsubseteq> induced_subgraph V G", "by (rule subgraph_is_subgraph_isomorphic)\n       (auto simp: induced_wellformed[OF G V] post sub)"], ["proof (state)\nthis:\n  f V \\<sqsubseteq> induced_subgraph V G\n\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> G", "also"], ["proof (state)\nthis:\n  f V \\<sqsubseteq> induced_subgraph V G\n\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> G", "have \"\\<dots> \\<sqsubseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. induced_subgraph V G \\<sqsubseteq> G", "by (rule subgraph_is_subgraph_isomorphic[OF induced_wellformed])\n       (auto simp: G V induced_is_subgraph(1)[OF V])"], ["proof (state)\nthis:\n  induced_subgraph V G \\<sqsubseteq> G\n\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> G", "finally"], ["proof (chain)\npicking this:\n  H \\<sqsubseteq> G", "show \"H \\<sqsubseteq> G\""], ["proof (prove)\nusing this:\n  H \\<sqsubseteq> G\n\ngoal (1 subgoal):\n 1. H \\<sqsubseteq> G", "."], ["proof (state)\nthis:\n  H \\<sqsubseteq> G\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}