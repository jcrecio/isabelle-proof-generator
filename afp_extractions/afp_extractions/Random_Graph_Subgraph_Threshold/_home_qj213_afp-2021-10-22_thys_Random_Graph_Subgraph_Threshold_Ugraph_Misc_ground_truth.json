{"file_name": "/home/qj213/afp-2021-10-22/thys/Random_Graph_Subgraph_Threshold/Ugraph_Misc.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Random_Graph_Subgraph_Threshold", "problem_names": ["lemma sum_square:\n  fixes a :: \"'i \\<Rightarrow> 'a :: {monoid_mult, semiring_0}\"\n  shows \"(\\<Sum>i \\<in> I. a i)^2 = (\\<Sum>i \\<in> I. \\<Sum>j \\<in> I. a i * a j)\"", "lemma sum_split:\n  \"finite I \\<Longrightarrow>\n  (\\<Sum>i \\<in> I. if p i then f i else g i) = (\\<Sum>i | i \\<in> I \\<and> p i. f i) + (\\<Sum>i | i \\<in> I \\<and> \\<not>p i. g i)\"", "lemma sum_split2:\n  assumes \"finite I\"\n  shows \"(\\<Sum>i | i \\<in> I \\<and> P i. if Q i then f i else g i) = (\\<Sum>i | i \\<in> I \\<and> P i \\<and> Q i. f i) + (\\<Sum>i | i \\<in> I \\<and> P i \\<and> \\<not>Q i. g i)\"", "lemma sum_upper:\n  fixes f :: \"'i \\<Rightarrow> 'a :: ordered_comm_monoid_add\"\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> 0 \\<le> f i\"\n  shows \"(\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I\"", "lemma sum_lower:\n  fixes f :: \"'i \\<Rightarrow> 'a :: ordered_comm_monoid_add\"\n  assumes \"finite I\" \"i \\<in> I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> 0 \\<le> f i\" \"x < f i\"\n  shows \"x < sum f I\"", "lemma sum_lower_or_eq:\n  fixes f :: \"'i \\<Rightarrow> 'a :: ordered_comm_monoid_add\"\n  assumes \"finite I\" \"i \\<in> I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> 0 \\<le> f i\" \"x \\<le> f i\"\n  shows \"x \\<le> sum f I\"", "lemma sum_left_div_distrib:\n  fixes f :: \"'i \\<Rightarrow> real\"\n  shows \"(\\<Sum>i \\<in> I. f i / x) = sum f I / x\"", "lemma powr_mono3:\n  fixes x::real\n  assumes \"0 < x\" \"x < 1\" \"b \\<le> a\"\n  shows \"x powr a \\<le> x powr b\"", "lemma card_union: \"finite A \\<Longrightarrow> finite B \\<Longrightarrow> card (A \\<union> B) = card A + card B - card (A \\<inter> B)\"", "lemma card_1_element:\n  assumes \"card E = 1\"\n  shows \"\\<exists>a. E = {a}\"", "lemma card_2_elements:\n  assumes \"card E = 2\"\n  shows \"\\<exists>a b. E = {a, b} \\<and> a \\<noteq> b\"", "lemma bij_lift:\n  assumes \"bij_betw f A B\"\n  shows \"bij_betw (\\<lambda>e. f ` e) (Pow A) (Pow B)\"", "lemma card_inj_subs: \"inj_on f A \\<Longrightarrow> B \\<subseteq> A \\<Longrightarrow> card (f ` B) = card B\"", "lemma image_comp_cong: \"(\\<And>a. a \\<in> A \\<Longrightarrow> f a = f (g a)) \\<Longrightarrow> f ` A = f ` (g ` A)\"", "lemma LIMSEQ_power_zero: \"f \\<longlonglongrightarrow> 0 \\<Longrightarrow> 0 < n  \\<Longrightarrow> (\\<lambda>x. f x ^ n :: real) \\<longlonglongrightarrow> 0\"", "lemma LIMSEQ_cong:\n    assumes \"f \\<longlonglongrightarrow> x\" \"\\<forall>\\<^sup>\\<infinity>n. f n = g n\"\n    shows \"g \\<longlonglongrightarrow> x\"", "lemma LIMSEQ_le_zero:\n    assumes \"g \\<longlonglongrightarrow> 0\" \"\\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n\" \"\\<forall>\\<^sup>\\<infinity>n. f n \\<le> g n\"\n    shows \"f \\<longlonglongrightarrow> 0\"", "lemma LIMSEQ_const_mult:\n    assumes \"f \\<longlonglongrightarrow> a\"\n    shows \"(\\<lambda>x. c * f x) \\<longlonglongrightarrow> c * a\"", "lemma LIMSEQ_const_div:\n    assumes \"f \\<longlonglongrightarrow> a\" \"c \\<noteq> 0\"\n    shows \"(\\<lambda>x. f x / c) \\<longlonglongrightarrow> a / c\"", "lemma quot_bounds:\n  fixes x :: \"'a :: linordered_field\"\n  assumes \"x \\<le> x'\" \"y' \\<le> y\" \"0 < y\" \"0 \\<le> x\" \"0 < y'\"\n  shows \"x / y \\<le> x' / y'\"", "lemma less_fun_bounds:\n  assumes \"f' \\<lless> g'\" \"\\<forall>\\<^sup>\\<infinity>n. f n \\<le> f' n\" \"\\<forall>\\<^sup>\\<infinity>n. g' n \\<le> g n\" \"\\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n\" \"\\<forall>\\<^sup>\\<infinity>n. 0 < g n\" \"\\<forall>\\<^sup>\\<infinity>n. 0 < g' n\"\n  shows \"f \\<lless> g\"", "lemma less_fun_const_quot:\n  assumes \"f \\<lless> g\" \"c \\<noteq> 0\"\n  shows \"(\\<lambda>n. b * f n) \\<lless> (\\<lambda>n. c * g n)\"", "lemma partition_set_of_intersecting_sets_by_card:\n  assumes \"finite A\"\n  shows \"{B. A \\<inter> B \\<noteq> {}} = (\\<Union>n \\<in> {1..card A}. {B. card (A \\<inter> B) = n})\"", "lemma card_set_of_intersecting_sets_by_card:\n  assumes \"A \\<subseteq> I\" \"finite I\" \"k \\<le> n\" \"n \\<le> card I\" \"k \\<le> card A\"\n  shows \"card {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} = (card A choose k) * ((card I - card A) choose (n - k))\"", "lemma card_dep_pair_set:\n  assumes \"finite A\" \"\\<And>a. a \\<subseteq> A \\<Longrightarrow> finite (f a)\"\n  shows \"card {(a, b). a \\<subseteq> A \\<and> card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} = (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)\" (is \"card ?S = ?C\")", "lemma prod_cancel_nat:\n  \\<comment> \\<open>Contributed by Manuel Eberl\\<close>\n  fixes f::\"'a \\<Rightarrow> nat\"\n  assumes \"B \\<subseteq> A\" and \"finite A\" and \"\\<forall>x\\<in>B. f x \\<noteq> 0\"\n  shows \"prod f A / prod f B = prod f (A - B)\" (is \"?A / ?B = ?C\")", "lemma prod_id_cancel_nat:\n  \\<comment> \\<open>Contributed by Manuel Eberl\\<close>\n  fixes A::\"nat set\"\n  assumes \"B \\<subseteq> A\" and \"finite A\" and \"0 \\<notin> B\"\n  shows \"\\<Prod>A / \\<Prod>B = \\<Prod>(A-B)\"", "lemma (in prob_space) integrable_squareD:\n  \\<comment> \\<open>Contributed by Johannes H?lzl\\<close>\n  fixes X :: \"_ \\<Rightarrow> real\"\n  assumes \"integrable M (\\<lambda>x. (X x)^2)\" \"X \\<in> borel_measurable M\"\n  shows \"integrable M X\""], "translations": [["", "lemma sum_square:\n  fixes a :: \"'i \\<Rightarrow> 'a :: {monoid_mult, semiring_0}\"\n  shows \"(\\<Sum>i \\<in> I. a i)^2 = (\\<Sum>i \\<in> I. \\<Sum>j \\<in> I. a i * a j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sum a I)\\<^sup>2 = (\\<Sum>i\\<in>I. \\<Sum>j\\<in>I. a i * a j)", "by (simp only: sum_product power2_eq_square)"], ["", "lemma sum_split:\n  \"finite I \\<Longrightarrow>\n  (\\<Sum>i \\<in> I. if p i then f i else g i) = (\\<Sum>i | i \\<in> I \\<and> p i. f i) + (\\<Sum>i | i \\<in> I \\<and> \\<not>p i. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I \\<Longrightarrow>\n    (\\<Sum>i\\<in>I. if p i then f i else g i) =\n    (\\<Sum>i | i \\<in> I \\<and> p i. f i) +\n    (\\<Sum>i | i \\<in> I \\<and> \\<not> p i. g i)", "by (simp add: sum.If_cases Int_def)"], ["", "lemma sum_split2:\n  assumes \"finite I\"\n  shows \"(\\<Sum>i | i \\<in> I \\<and> P i. if Q i then f i else g i) = (\\<Sum>i | i \\<in> I \\<and> P i \\<and> Q i. f i) + (\\<Sum>i | i \\<in> I \\<and> P i \\<and> \\<not>Q i. g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i | i \\<in> I \\<and> P i. if Q i then f i else g i) =\n    (\\<Sum>i | i \\<in> I \\<and> P i \\<and> Q i. f i) +\n    (\\<Sum>i | i \\<in> I \\<and> P i \\<and> \\<not> Q i. g i)", "proof (subst sum.If_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {i \\<in> I. P i}\n 2. sum f ({i \\<in> I. P i} \\<inter> Collect Q) +\n    sum g ({i \\<in> I. P i} \\<inter> - Collect Q) =\n    sum f {i \\<in> I. P i \\<and> Q i} +\n    sum g {i \\<in> I. P i \\<and> \\<not> Q i}", "show \"finite {i \\<in> I. P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i \\<in> I. P i}", "using assms"], ["proof (prove)\nusing this:\n  finite I\n\ngoal (1 subgoal):\n 1. finite {i \\<in> I. P i}", "by simp"], ["proof (state)\nthis:\n  finite {i \\<in> I. P i}\n\ngoal (1 subgoal):\n 1. sum f ({i \\<in> I. P i} \\<inter> Collect Q) +\n    sum g ({i \\<in> I. P i} \\<inter> - Collect Q) =\n    sum f {i \\<in> I. P i \\<and> Q i} +\n    sum g {i \\<in> I. P i \\<and> \\<not> Q i}", "have \"{i \\<in> I. P i} \\<inter> Collect Q = {i \\<in> I. P i \\<and> Q i}\" \"{i \\<in> I. P i} \\<inter> - Collect Q =  {i \\<in> I. P i \\<and> \\<not> Q i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i \\<in> I. P i} \\<inter> Collect Q = {i \\<in> I. P i \\<and> Q i} &&&\n    {i \\<in> I. P i} \\<inter> - Collect Q =\n    {i \\<in> I. P i \\<and> \\<not> Q i}", "by auto"], ["proof (state)\nthis:\n  {i \\<in> I. P i} \\<inter> Collect Q = {i \\<in> I. P i \\<and> Q i}\n  {i \\<in> I. P i} \\<inter> - Collect Q = {i \\<in> I. P i \\<and> \\<not> Q i}\n\ngoal (1 subgoal):\n 1. sum f ({i \\<in> I. P i} \\<inter> Collect Q) +\n    sum g ({i \\<in> I. P i} \\<inter> - Collect Q) =\n    sum f {i \\<in> I. P i \\<and> Q i} +\n    sum g {i \\<in> I. P i \\<and> \\<not> Q i}", "thus \"sum f ({i \\<in> I. P i} \\<inter> Collect Q) + sum g ({i \\<in> I. P i} \\<inter> - Collect Q) = sum f {i \\<in> I. P i \\<and> Q i} + sum g {i \\<in> I. P i \\<and> \\<not> Q i}\""], ["proof (prove)\nusing this:\n  {i \\<in> I. P i} \\<inter> Collect Q = {i \\<in> I. P i \\<and> Q i}\n  {i \\<in> I. P i} \\<inter> - Collect Q = {i \\<in> I. P i \\<and> \\<not> Q i}\n\ngoal (1 subgoal):\n 1. sum f ({i \\<in> I. P i} \\<inter> Collect Q) +\n    sum g ({i \\<in> I. P i} \\<inter> - Collect Q) =\n    sum f {i \\<in> I. P i \\<and> Q i} +\n    sum g {i \\<in> I. P i \\<and> \\<not> Q i}", "by presburger"], ["proof (state)\nthis:\n  sum f ({i \\<in> I. P i} \\<inter> Collect Q) +\n  sum g ({i \\<in> I. P i} \\<inter> - Collect Q) =\n  sum f {i \\<in> I. P i \\<and> Q i} +\n  sum g {i \\<in> I. P i \\<and> \\<not> Q i}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_upper:\n  fixes f :: \"'i \\<Rightarrow> 'a :: ordered_comm_monoid_add\"\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> 0 \\<le> f i\"\n  shows \"(\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I", "have \"sum f I = (\\<Sum>i \\<in> I. if P i then f i else f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f I = (\\<Sum>i\\<in>I. if P i then f i else f i)", "by simp"], ["proof (state)\nthis:\n  sum f I = (\\<Sum>i\\<in>I. if P i then f i else f i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I", "hence \"sum f I = (\\<Sum>i | i \\<in> I \\<and> P i. f i) + (\\<Sum>i | i \\<in> I \\<and> \\<not>P i. f i)\""], ["proof (prove)\nusing this:\n  sum f I = (\\<Sum>i\\<in>I. if P i then f i else f i)\n\ngoal (1 subgoal):\n 1. sum f I =\n    (\\<Sum>i | i \\<in> I \\<and> P i. f i) +\n    (\\<Sum>i | i \\<in> I \\<and> \\<not> P i. f i)", "by (simp only: sum_split[OF \\<open>finite I\\<close>])"], ["proof (state)\nthis:\n  sum f I =\n  (\\<Sum>i | i \\<in> I \\<and> P i. f i) +\n  (\\<Sum>i | i \\<in> I \\<and> \\<not> P i. f i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I", "moreover"], ["proof (state)\nthis:\n  sum f I =\n  (\\<Sum>i | i \\<in> I \\<and> P i. f i) +\n  (\\<Sum>i | i \\<in> I \\<and> \\<not> P i. f i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I", "have \"0 \\<le> (\\<Sum>i | i \\<in> I \\<and> \\<not>P i. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> (\\<Sum>i | i \\<in> I \\<and> \\<not> P i. f i)", "by (rule sum_nonneg) (simp add: assms)"], ["proof (state)\nthis:\n  (0::'a) \\<le> (\\<Sum>i | i \\<in> I \\<and> \\<not> P i. f i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I", "ultimately"], ["proof (chain)\npicking this:\n  sum f I =\n  (\\<Sum>i | i \\<in> I \\<and> P i. f i) +\n  (\\<Sum>i | i \\<in> I \\<and> \\<not> P i. f i)\n  (0::'a) \\<le> (\\<Sum>i | i \\<in> I \\<and> \\<not> P i. f i)", "show ?thesis"], ["proof (prove)\nusing this:\n  sum f I =\n  (\\<Sum>i | i \\<in> I \\<and> P i. f i) +\n  (\\<Sum>i | i \\<in> I \\<and> \\<not> P i. f i)\n  (0::'a) \\<le> (\\<Sum>i | i \\<in> I \\<and> \\<not> P i. f i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I", "by (metis (full_types) add.comm_neutral add_left_mono)"], ["proof (state)\nthis:\n  (\\<Sum>i | i \\<in> I \\<and> P i. f i) \\<le> sum f I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_lower:\n  fixes f :: \"'i \\<Rightarrow> 'a :: ordered_comm_monoid_add\"\n  assumes \"finite I\" \"i \\<in> I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> 0 \\<le> f i\" \"x < f i\"\n  shows \"x < sum f I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < sum f I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x < sum f I", "have \"x < f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x < f i", "by fact"], ["proof (state)\nthis:\n  x < f i\n\ngoal (1 subgoal):\n 1. x < sum f I", "also"], ["proof (state)\nthis:\n  x < f i\n\ngoal (1 subgoal):\n 1. x < sum f I", "have \"\\<dots> \\<le> sum f I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<le> sum f I", "using sum_mono2[OF \\<open>finite I\\<close>, of \"{i}\" f] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>{i} \\<subseteq> I;\n   \\<And>b. b \\<in> I - {i} \\<Longrightarrow> (0::'a) \\<le> f b\\<rbrakk>\n  \\<Longrightarrow> sum f {i} \\<le> sum f I\n  finite I\n  i \\<in> I\n  ?i \\<in> I \\<Longrightarrow> (0::'a) \\<le> f ?i\n  x < f i\n\ngoal (1 subgoal):\n 1. f i \\<le> sum f I", "by auto"], ["proof (state)\nthis:\n  f i \\<le> sum f I\n\ngoal (1 subgoal):\n 1. x < sum f I", "finally"], ["proof (chain)\npicking this:\n  x < sum f I", "show ?thesis"], ["proof (prove)\nusing this:\n  x < sum f I\n\ngoal (1 subgoal):\n 1. x < sum f I", "."], ["proof (state)\nthis:\n  x < sum f I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_lower_or_eq:\n  fixes f :: \"'i \\<Rightarrow> 'a :: ordered_comm_monoid_add\"\n  assumes \"finite I\" \"i \\<in> I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> 0 \\<le> f i\" \"x \\<le> f i\"\n  shows \"x \\<le> sum f I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> sum f I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> sum f I", "have \"x \\<le> f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> f i", "by fact"], ["proof (state)\nthis:\n  x \\<le> f i\n\ngoal (1 subgoal):\n 1. x \\<le> sum f I", "also"], ["proof (state)\nthis:\n  x \\<le> f i\n\ngoal (1 subgoal):\n 1. x \\<le> sum f I", "have \"\\<dots> \\<le> sum f I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<le> sum f I", "using sum_mono2[OF \\<open>finite I\\<close>, of \"{i}\" f] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>{i} \\<subseteq> I;\n   \\<And>b. b \\<in> I - {i} \\<Longrightarrow> (0::'a) \\<le> f b\\<rbrakk>\n  \\<Longrightarrow> sum f {i} \\<le> sum f I\n  finite I\n  i \\<in> I\n  ?i \\<in> I \\<Longrightarrow> (0::'a) \\<le> f ?i\n  x \\<le> f i\n\ngoal (1 subgoal):\n 1. f i \\<le> sum f I", "by auto"], ["proof (state)\nthis:\n  f i \\<le> sum f I\n\ngoal (1 subgoal):\n 1. x \\<le> sum f I", "finally"], ["proof (chain)\npicking this:\n  x \\<le> sum f I", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<le> sum f I\n\ngoal (1 subgoal):\n 1. x \\<le> sum f I", "."], ["proof (state)\nthis:\n  x \\<le> sum f I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_left_div_distrib:\n  fixes f :: \"'i \\<Rightarrow> real\"\n  shows \"(\\<Sum>i \\<in> I. f i / x) = sum f I / x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i / x) = sum f I / x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i / x) = sum f I / x", "have \"(\\<Sum>i \\<in> I. f i / x) = (\\<Sum>i \\<in> I. f i * (1 / x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i / x) = (\\<Sum>i\\<in>I. f i * (1 / x))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. f i / x) = (\\<Sum>i\\<in>I. f i * (1 / x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i / x) = sum f I / x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. f i / x) = (\\<Sum>i\\<in>I. f i * (1 / x))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i / x) = sum f I / x", "have \"\\<dots> = sum f I * (1 / x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i * (1 / x)) = sum f I * (1 / x)", "by (rule sum_distrib_right[symmetric])"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. f i * (1 / x)) = sum f I * (1 / x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i / x) = sum f I / x", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. f i * (1 / x)) = sum f I * (1 / x)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i / x) = sum f I / x", "have \"\\<dots> = sum f I / x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f I * (1 / x) = sum f I / x", "by simp"], ["proof (state)\nthis:\n  sum f I * (1 / x) = sum f I / x\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i / x) = sum f I / x", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>I. f i / x) = sum f I / x", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>I. f i / x) = sum f I / x\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>I. f i / x) = sum f I / x", "."], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>I. f i / x) = sum f I / x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma powr_mono3:\n  fixes x::real\n  assumes \"0 < x\" \"x < 1\" \"b \\<le> a\"\n  shows \"x powr a \\<le> x powr b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "have \"x powr a = 1 / x powr -a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x powr a = 1 / x powr - a", "by (simp add: powr_minus_divide)"], ["proof (state)\nthis:\n  x powr a = 1 / x powr - a\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "also"], ["proof (state)\nthis:\n  x powr a = 1 / x powr - a\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "have \"\\<dots> = (1 / x) powr -a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / x powr - a = (1 / x) powr - a", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  x < 1\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. 1 / x powr - a = (1 / x) powr - a", "by (simp add: powr_divide)"], ["proof (state)\nthis:\n  1 / x powr - a = (1 / x) powr - a\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "also"], ["proof (state)\nthis:\n  1 / x powr - a = (1 / x) powr - a\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "have \"\\<dots> \\<le> (1 / x) powr -b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 / x) powr - a \\<le> (1 / x) powr - b", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  x < 1\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. (1 / x) powr - a \\<le> (1 / x) powr - b", "by (simp add: powr_mono)"], ["proof (state)\nthis:\n  (1 / x) powr - a \\<le> (1 / x) powr - b\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "also"], ["proof (state)\nthis:\n  (1 / x) powr - a \\<le> (1 / x) powr - b\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "have \"\\<dots> = 1 / x powr -b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1 / x) powr - b = 1 / x powr - b", "using assms"], ["proof (prove)\nusing this:\n  0 < x\n  x < 1\n  b \\<le> a\n\ngoal (1 subgoal):\n 1. (1 / x) powr - b = 1 / x powr - b", "by (simp add: powr_divide)"], ["proof (state)\nthis:\n  (1 / x) powr - b = 1 / x powr - b\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "also"], ["proof (state)\nthis:\n  (1 / x) powr - b = 1 / x powr - b\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "have \"\\<dots> = x powr b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 / x powr - b = x powr b", "by (simp add: powr_minus_divide)"], ["proof (state)\nthis:\n  1 / x powr - b = x powr b\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "finally"], ["proof (chain)\npicking this:\n  x powr a \\<le> x powr b", "show ?thesis"], ["proof (prove)\nusing this:\n  x powr a \\<le> x powr b\n\ngoal (1 subgoal):\n 1. x powr a \\<le> x powr b", "."], ["proof (state)\nthis:\n  x powr a \\<le> x powr b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_union: \"finite A \\<Longrightarrow> finite B \\<Longrightarrow> card (A \\<union> B) = card A + card B - card (A \\<inter> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite B\\<rbrakk>\n    \\<Longrightarrow> card (A \\<union> B) =\n                      card A + card B - card (A \\<inter> B)", "by (metis card_Un_Int[symmetric] diff_add_inverse2)"], ["", "lemma card_1_element:\n  assumes \"card E = 1\"\n  shows \"\\<exists>a. E = {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "from assms"], ["proof (chain)\npicking this:\n  card E = 1", "obtain a where \"a \\<in> E\""], ["proof (prove)\nusing this:\n  card E = 1\n\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> E \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  a \\<in> E\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "let ?E' = \"E - {a}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "have \"finite ?E'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (E - {a})", "using assms card_ge_0_finite"], ["proof (prove)\nusing this:\n  card E = 1\n  0 < card ?A \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (E - {a})", "by force"], ["proof (state)\nthis:\n  finite (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "hence \"card (insert a ?E') = 1 + card ?E'\""], ["proof (prove)\nusing this:\n  finite (E - {a})\n\ngoal (1 subgoal):\n 1. card (insert a (E - {a})) = 1 + card (E - {a})", "using card.insert_remove"], ["proof (prove)\nusing this:\n  finite (E - {a})\n  finite ?A \\<Longrightarrow> card (insert ?x ?A) = Suc (card (?A - {?x}))\n\ngoal (1 subgoal):\n 1. card (insert a (E - {a})) = 1 + card (E - {a})", "by fastforce"], ["proof (state)\nthis:\n  card (insert a (E - {a})) = 1 + card (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "moreover"], ["proof (state)\nthis:\n  card (insert a (E - {a})) = 1 + card (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "have \"E = insert a ?E'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E = insert a (E - {a})", "using \\<open>a \\<in> E\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> E\n\ngoal (1 subgoal):\n 1. E = insert a (E - {a})", "by blast"], ["proof (state)\nthis:\n  E = insert a (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "ultimately"], ["proof (chain)\npicking this:\n  card (insert a (E - {a})) = 1 + card (E - {a})\n  E = insert a (E - {a})", "have \"card E = 1 + card ?E'\""], ["proof (prove)\nusing this:\n  card (insert a (E - {a})) = 1 + card (E - {a})\n  E = insert a (E - {a})\n\ngoal (1 subgoal):\n 1. card E = 1 + card (E - {a})", "by simp"], ["proof (state)\nthis:\n  card E = 1 + card (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "hence \"card ?E' = 0\""], ["proof (prove)\nusing this:\n  card E = 1 + card (E - {a})\n\ngoal (1 subgoal):\n 1. card (E - {a}) = 0", "using assms"], ["proof (prove)\nusing this:\n  card E = 1 + card (E - {a})\n  card E = 1\n\ngoal (1 subgoal):\n 1. card (E - {a}) = 0", "by simp"], ["proof (state)\nthis:\n  card (E - {a}) = 0\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "hence \"?E' = {}\""], ["proof (prove)\nusing this:\n  card (E - {a}) = 0\n\ngoal (1 subgoal):\n 1. E - {a} = {}", "using \\<open>finite ?E'\\<close>"], ["proof (prove)\nusing this:\n  card (E - {a}) = 0\n  finite (E - {a})\n\ngoal (1 subgoal):\n 1. E - {a} = {}", "by simp"], ["proof (state)\nthis:\n  E - {a} = {}\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "thus ?thesis"], ["proof (prove)\nusing this:\n  E - {a} = {}\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "using \\<open>a \\<in> E\\<close>"], ["proof (prove)\nusing this:\n  E - {a} = {}\n  a \\<in> E\n\ngoal (1 subgoal):\n 1. \\<exists>a. E = {a}", "by blast"], ["proof (state)\nthis:\n  \\<exists>a. E = {a}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_2_elements:\n  assumes \"card E = 2\"\n  shows \"\\<exists>a b. E = {a, b} \\<and> a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "from assms"], ["proof (chain)\npicking this:\n  card E = 2", "obtain a where \"a \\<in> E\""], ["proof (prove)\nusing this:\n  card E = 2\n\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> E \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  a \\<in> E\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "let ?E' = \"E - {a}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "have \"finite ?E'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (E - {a})", "using assms card_ge_0_finite"], ["proof (prove)\nusing this:\n  card E = 2\n  0 < card ?A \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite (E - {a})", "by force"], ["proof (state)\nthis:\n  finite (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "hence \"card (insert a ?E') = 1 + card ?E'\""], ["proof (prove)\nusing this:\n  finite (E - {a})\n\ngoal (1 subgoal):\n 1. card (insert a (E - {a})) = 1 + card (E - {a})", "using card.insert_remove"], ["proof (prove)\nusing this:\n  finite (E - {a})\n  finite ?A \\<Longrightarrow> card (insert ?x ?A) = Suc (card (?A - {?x}))\n\ngoal (1 subgoal):\n 1. card (insert a (E - {a})) = 1 + card (E - {a})", "by fastforce"], ["proof (state)\nthis:\n  card (insert a (E - {a})) = 1 + card (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "moreover"], ["proof (state)\nthis:\n  card (insert a (E - {a})) = 1 + card (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "have \"E = insert a ?E'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E = insert a (E - {a})", "using \\<open>a \\<in> E\\<close>"], ["proof (prove)\nusing this:\n  a \\<in> E\n\ngoal (1 subgoal):\n 1. E = insert a (E - {a})", "by blast"], ["proof (state)\nthis:\n  E = insert a (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "ultimately"], ["proof (chain)\npicking this:\n  card (insert a (E - {a})) = 1 + card (E - {a})\n  E = insert a (E - {a})", "have \"card E = 1 + card ?E'\""], ["proof (prove)\nusing this:\n  card (insert a (E - {a})) = 1 + card (E - {a})\n  E = insert a (E - {a})\n\ngoal (1 subgoal):\n 1. card E = 1 + card (E - {a})", "by simp"], ["proof (state)\nthis:\n  card E = 1 + card (E - {a})\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "hence \"card ?E' = 1\""], ["proof (prove)\nusing this:\n  card E = 1 + card (E - {a})\n\ngoal (1 subgoal):\n 1. card (E - {a}) = 1", "using assms"], ["proof (prove)\nusing this:\n  card E = 1 + card (E - {a})\n  card E = 2\n\ngoal (1 subgoal):\n 1. card (E - {a}) = 1", "by simp"], ["proof (state)\nthis:\n  card (E - {a}) = 1\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "then"], ["proof (chain)\npicking this:\n  card (E - {a}) = 1", "obtain b where \"?E' = {b}\""], ["proof (prove)\nusing this:\n  card (E - {a}) = 1\n\ngoal (1 subgoal):\n 1. (\\<And>b. E - {a} = {b} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using card_1_element"], ["proof (prove)\nusing this:\n  card (E - {a}) = 1\n  card ?E = 1 \\<Longrightarrow> \\<exists>a. ?E = {a}\n\ngoal (1 subgoal):\n 1. (\\<And>b. E - {a} = {b} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  E - {a} = {b}\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "hence \"E = {a, b}\""], ["proof (prove)\nusing this:\n  E - {a} = {b}\n\ngoal (1 subgoal):\n 1. E = {a, b}", "using \\<open>a \\<in> E\\<close>"], ["proof (prove)\nusing this:\n  E - {a} = {b}\n  a \\<in> E\n\ngoal (1 subgoal):\n 1. E = {a, b}", "by blast"], ["proof (state)\nthis:\n  E = {a, b}\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "moreover"], ["proof (state)\nthis:\n  E = {a, b}\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "have \"a \\<noteq> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b", "using \\<open>?E' = {b}\\<close>"], ["proof (prove)\nusing this:\n  E - {a} = {b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b", "by blast"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "ultimately"], ["proof (chain)\npicking this:\n  E = {a, b}\n  a \\<noteq> b", "show ?thesis"], ["proof (prove)\nusing this:\n  E = {a, b}\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b", "by blast"], ["proof (state)\nthis:\n  \\<exists>a b. E = {a, b} \\<and> a \\<noteq> b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bij_lift:\n  assumes \"bij_betw f A B\"\n  shows \"bij_betw (\\<lambda>e. f ` e) (Pow A) (Pow B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((`) f) (Pow A) (Pow B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw ((`) f) (Pow A) (Pow B)", "have f: \"inj_on f A\" \"f ` A = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f A &&& f ` A = B", "using assms"], ["proof (prove)\nusing this:\n  bij_betw f A B\n\ngoal (1 subgoal):\n 1. inj_on f A &&& f ` A = B", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on f A \\<and> f ` A = B\n\ngoal (1 subgoal):\n 1. inj_on f A &&& f ` A = B", "by simp_all"], ["proof (state)\nthis:\n  inj_on f A\n  f ` A = B\n\ngoal (1 subgoal):\n 1. bij_betw ((`) f) (Pow A) (Pow B)", "have \"inj_on (\\<lambda>e. f ` e) (Pow A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((`) f) (Pow A)", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>Pow A.\n       \\<forall>y\\<in>Pow A. f ` x = f ` y \\<longrightarrow> x = y", "by clarify (metis f(1) inv_into_image_cancel)"], ["proof (state)\nthis:\n  inj_on ((`) f) (Pow A)\n\ngoal (1 subgoal):\n 1. bij_betw ((`) f) (Pow A) (Pow B)", "moreover"], ["proof (state)\nthis:\n  inj_on ((`) f) (Pow A)\n\ngoal (1 subgoal):\n 1. bij_betw ((`) f) (Pow A) (Pow B)", "have \"(\\<lambda>e. f ` e) ` (Pow A) = (Pow B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (`) f ` Pow A = Pow B", "by (metis f(2) image_Pow_surj)"], ["proof (state)\nthis:\n  (`) f ` Pow A = Pow B\n\ngoal (1 subgoal):\n 1. bij_betw ((`) f) (Pow A) (Pow B)", "ultimately"], ["proof (chain)\npicking this:\n  inj_on ((`) f) (Pow A)\n  (`) f ` Pow A = Pow B", "show ?thesis"], ["proof (prove)\nusing this:\n  inj_on ((`) f) (Pow A)\n  (`) f ` Pow A = Pow B\n\ngoal (1 subgoal):\n 1. bij_betw ((`) f) (Pow A) (Pow B)", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on ((`) f) (Pow A)\n  (`) f ` Pow A = Pow B\n\ngoal (1 subgoal):\n 1. inj_on ((`) f) (Pow A) \\<and> (`) f ` Pow A = Pow B", "by simp"], ["proof (state)\nthis:\n  bij_betw ((`) f) (Pow A) (Pow B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_inj_subs: \"inj_on f A \\<Longrightarrow> B \\<subseteq> A \\<Longrightarrow> card (f ` B) = card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>inj_on f A; B \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> card (f ` B) = card B", "by (metis card_image subset_inj_on)"], ["", "lemma image_comp_cong: \"(\\<And>a. a \\<in> A \\<Longrightarrow> f a = f (g a)) \\<Longrightarrow> f ` A = f ` (g ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> A \\<Longrightarrow> f a = f (g a)) \\<Longrightarrow>\n    f ` A = f ` g ` A", "by auto"], ["", "abbreviation less_fun :: \"(nat \\<Rightarrow> real) \\<Rightarrow> (nat \\<Rightarrow> real) \\<Rightarrow> bool\" (infix \"\\<lless>\" 50) where\n\"f \\<lless> g \\<equiv> (\\<lambda>n. f n / g n) \\<longlonglongrightarrow> 0\""], ["", "context\n  fixes f :: \"nat \\<Rightarrow> real\"\nbegin"], ["", "lemma LIMSEQ_power_zero: \"f \\<longlonglongrightarrow> 0 \\<Longrightarrow> 0 < n  \\<Longrightarrow> (\\<lambda>x. f x ^ n :: real) \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<longlonglongrightarrow> 0; 0 < n\\<rbrakk>\n    \\<Longrightarrow> (\\<lambda>x. f x ^ n) \\<longlonglongrightarrow> 0", "by (metis power_eq_0_iff tendsto_power)"], ["", "lemma LIMSEQ_cong:\n    assumes \"f \\<longlonglongrightarrow> x\" \"\\<forall>\\<^sup>\\<infinity>n. f n = g n\"\n    shows \"g \\<longlonglongrightarrow> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<longlonglongrightarrow> x", "by (rule real_tendsto_sandwich[where f = f and h = f, OF eventually_mono[OF assms(2)] eventually_mono[OF assms(2)]]) (auto simp: assms(1))"], ["", "print_statement Lim_transform_eventually"], ["", "lemma LIMSEQ_le_zero:\n    assumes \"g \\<longlonglongrightarrow> 0\" \"\\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n\" \"\\<forall>\\<^sup>\\<infinity>n. f n \\<le> g n\"\n    shows \"f \\<longlonglongrightarrow> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<longlonglongrightarrow> 0", "by (rule real_tendsto_sandwich[OF assms(2) assms(3) tendsto_const assms(1)])"], ["", "lemma LIMSEQ_const_mult:\n    assumes \"f \\<longlonglongrightarrow> a\"\n    shows \"(\\<lambda>x. c * f x) \\<longlonglongrightarrow> c * a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. c * f x) \\<longlonglongrightarrow> c * a", "by (rule tendsto_mult[OF tendsto_const[where k = c] assms])"], ["", "lemma LIMSEQ_const_div:\n    assumes \"f \\<longlonglongrightarrow> a\" \"c \\<noteq> 0\"\n    shows \"(\\<lambda>x. f x / c) \\<longlonglongrightarrow> a / c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x / c) \\<longlonglongrightarrow> a / c", "using LIMSEQ_const_mult[where c = \"1/c\"] assms"], ["proof (prove)\nusing this:\n  f \\<longlonglongrightarrow> ?a \\<Longrightarrow>\n  (\\<lambda>x. 1 / c * f x) \\<longlonglongrightarrow> 1 / c * ?a\n  f \\<longlonglongrightarrow> a\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x / c) \\<longlonglongrightarrow> a / c", "by simp"], ["", "end"], ["", "lemma quot_bounds:\n  fixes x :: \"'a :: linordered_field\"\n  assumes \"x \\<le> x'\" \"y' \\<le> y\" \"0 < y\" \"0 \\<le> x\" \"0 < y'\"\n  shows \"x / y \\<le> x' / y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x / y \\<le> x' / y'", "proof (rule order_trans)"], ["proof (state)\ngoal (2 subgoals):\n 1. x / y \\<le> ?y\n 2. ?y \\<le> x' / y'", "have \"0 \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> y", "using assms"], ["proof (prove)\nusing this:\n  x \\<le> x'\n  y' \\<le> y\n  (0::'a) < y\n  (0::'a) \\<le> x\n  (0::'a) < y'\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> y", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> y\n\ngoal (2 subgoals):\n 1. x / y \\<le> ?y\n 2. ?y \\<le> x' / y'", "thus \"x / y \\<le> x' / y\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> y\n\ngoal (1 subgoal):\n 1. x / y \\<le> x' / y", "using assms"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> y\n  x \\<le> x'\n  y' \\<le> y\n  (0::'a) < y\n  (0::'a) \\<le> x\n  (0::'a) < y'\n\ngoal (1 subgoal):\n 1. x / y \\<le> x' / y", "by (simp add: divide_right_mono)"], ["proof (state)\nthis:\n  x / y \\<le> x' / y\n\ngoal (1 subgoal):\n 1. x' / y \\<le> x' / y'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x' / y \\<le> x' / y'", "have \"0 \\<le> x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> x'", "using assms"], ["proof (prove)\nusing this:\n  x \\<le> x'\n  y' \\<le> y\n  (0::'a) < y\n  (0::'a) \\<le> x\n  (0::'a) < y'\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> x'", "by simp"], ["proof (state)\nthis:\n  (0::'a) \\<le> x'\n\ngoal (1 subgoal):\n 1. x' / y \\<le> x' / y'", "moreover"], ["proof (state)\nthis:\n  (0::'a) \\<le> x'\n\ngoal (1 subgoal):\n 1. x' / y \\<le> x' / y'", "have \"0 < y * y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < y * y'", "using assms"], ["proof (prove)\nusing this:\n  x \\<le> x'\n  y' \\<le> y\n  (0::'a) < y\n  (0::'a) \\<le> x\n  (0::'a) < y'\n\ngoal (1 subgoal):\n 1. (0::'a) < y * y'", "by simp"], ["proof (state)\nthis:\n  (0::'a) < y * y'\n\ngoal (1 subgoal):\n 1. x' / y \\<le> x' / y'", "ultimately"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> x'\n  (0::'a) < y * y'", "show \"x' / y \\<le> x' / y'\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> x'\n  (0::'a) < y * y'\n\ngoal (1 subgoal):\n 1. x' / y \\<le> x' / y'", "using assms"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> x'\n  (0::'a) < y * y'\n  x \\<le> x'\n  y' \\<le> y\n  (0::'a) < y\n  (0::'a) \\<le> x\n  (0::'a) < y'\n\ngoal (1 subgoal):\n 1. x' / y \\<le> x' / y'", "by (simp add: divide_left_mono)"], ["proof (state)\nthis:\n  x' / y \\<le> x' / y'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma less_fun_bounds:\n  assumes \"f' \\<lless> g'\" \"\\<forall>\\<^sup>\\<infinity>n. f n \\<le> f' n\" \"\\<forall>\\<^sup>\\<infinity>n. g' n \\<le> g n\" \"\\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n\" \"\\<forall>\\<^sup>\\<infinity>n. 0 < g n\" \"\\<forall>\\<^sup>\\<infinity>n. 0 < g' n\"\n  shows \"f \\<lless> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<lless> g", "proof (rule real_tendsto_sandwich)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<forall>\\<^sup>\\<infinity>n. ?f n \\<le> f n / g n\n 2. \\<forall>\\<^sup>\\<infinity>n. f n / g n \\<le> ?h n\n 3. ?f \\<longlonglongrightarrow> 0\n 4. ?h \\<longlonglongrightarrow> 0", "show \"\\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n / g n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n / g n", "using assms(4,5)"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n\n  \\<forall>\\<^sup>\\<infinity>n. 0 < g n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n / g n", "by eventually_elim simp"], ["proof (state)\nthis:\n  \\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n / g n\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sup>\\<infinity>n. f n / g n \\<le> ?h n\n 2. (\\<lambda>n. 0) \\<longlonglongrightarrow> 0\n 3. ?h \\<longlonglongrightarrow> 0", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>\\<^sup>\\<infinity>n. f n / g n \\<le> ?h n\n 2. (\\<lambda>n. 0) \\<longlonglongrightarrow> 0\n 3. ?h \\<longlonglongrightarrow> 0", "show \"\\<forall>\\<^sup>\\<infinity>n. f n / g n \\<le> f' n / g' n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sup>\\<infinity>n. f n / g n \\<le> f' n / g' n", "using assms(2-)"], ["proof (prove)\nusing this:\n  \\<forall>\\<^sup>\\<infinity>n. f n \\<le> f' n\n  \\<forall>\\<^sup>\\<infinity>n. g' n \\<le> g n\n  \\<forall>\\<^sup>\\<infinity>n. 0 \\<le> f n\n  \\<forall>\\<^sup>\\<infinity>n. 0 < g n\n  \\<forall>\\<^sup>\\<infinity>n. 0 < g' n\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sup>\\<infinity>n. f n / g n \\<le> f' n / g' n", "by eventually_elim (simp only: quot_bounds)"], ["proof (state)\nthis:\n  \\<forall>\\<^sup>\\<infinity>n. f n / g n \\<le> f' n / g' n\n\ngoal (2 subgoals):\n 1. (\\<lambda>n. 0) \\<longlonglongrightarrow> 0\n 2. f' \\<lless> g'", "qed (auto intro: assms(1))"], ["", "lemma less_fun_const_quot:\n  assumes \"f \\<lless> g\" \"c \\<noteq> 0\"\n  shows \"(\\<lambda>n. b * f n) \\<lless> (\\<lambda>n. c * g n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. b * f n) \\<lless> (\\<lambda>n. c * g n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. b * f n) \\<lless> (\\<lambda>n. c * g n)", "have \"(\\<lambda>n. (b * (f n / g n)) / c) \\<longlonglongrightarrow> (b * 0) / c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. b * (f n / g n) / c) \\<longlonglongrightarrow> b * 0 / c", "using assms"], ["proof (prove)\nusing this:\n  f \\<lless> g\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. b * (f n / g n) / c) \\<longlonglongrightarrow> b * 0 / c", "by (rule LIMSEQ_const_div[OF LIMSEQ_const_mult])"], ["proof (state)\nthis:\n  (\\<lambda>n. b * (f n / g n) / c) \\<longlonglongrightarrow> b * 0 / c\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. b * f n) \\<lless> (\\<lambda>n. c * g n)", "hence \"(\\<lambda>n. (b * (f n / g n)) / c) \\<longlonglongrightarrow> 0\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. b * (f n / g n) / c) \\<longlonglongrightarrow> b * 0 / c\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. b * (f n / g n)) \\<lless> (\\<lambda>n. c)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>n. b * (f n / g n)) \\<lless> (\\<lambda>n. c)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. b * f n) \\<lless> (\\<lambda>n. c * g n)", "with eventually_sequentiallyI"], ["proof (chain)\npicking this:\n  (\\<And>x. ?c \\<le> x \\<Longrightarrow> ?P x) \\<Longrightarrow> evseq ?P\n  (\\<lambda>n. b * (f n / g n)) \\<lless> (\\<lambda>n. c)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>x. ?c \\<le> x \\<Longrightarrow> ?P x) \\<Longrightarrow> evseq ?P\n  (\\<lambda>n. b * (f n / g n)) \\<lless> (\\<lambda>n. c)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. b * f n) \\<lless> (\\<lambda>n. c * g n)", "by (fastforce intro: Lim_transform_eventually)"], ["proof (state)\nthis:\n  (\\<lambda>n. b * f n) \\<lless> (\\<lambda>n. c * g n)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma partition_set_of_intersecting_sets_by_card:\n  assumes \"finite A\"\n  shows \"{B. A \\<inter> B \\<noteq> {}} = (\\<Union>n \\<in> {1..card A}. {B. card (A \\<inter> B) = n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {B. A \\<inter> B \\<noteq> {}} =\n    (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})", "proof (rule set_eqI, rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {B. A \\<inter> B \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})\n 2. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..card A}.\n                   {B. card (A \\<inter> B) = n}) \\<Longrightarrow>\n       x \\<in> {B. A \\<inter> B \\<noteq> {}}", "fix B"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {B. A \\<inter> B \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})\n 2. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..card A}.\n                   {B. card (A \\<inter> B) = n}) \\<Longrightarrow>\n       x \\<in> {B. A \\<inter> B \\<noteq> {}}", "assume \"B \\<in> {B. A \\<inter> B \\<noteq> {}}\""], ["proof (state)\nthis:\n  B \\<in> {B. A \\<inter> B \\<noteq> {}}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {B. A \\<inter> B \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})\n 2. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..card A}.\n                   {B. card (A \\<inter> B) = n}) \\<Longrightarrow>\n       x \\<in> {B. A \\<inter> B \\<noteq> {}}", "hence \"0 < card (A \\<inter> B)\""], ["proof (prove)\nusing this:\n  B \\<in> {B. A \\<inter> B \\<noteq> {}}\n\ngoal (1 subgoal):\n 1. 0 < card (A \\<inter> B)", "using assms"], ["proof (prove)\nusing this:\n  B \\<in> {B. A \\<inter> B \\<noteq> {}}\n  finite A\n\ngoal (1 subgoal):\n 1. 0 < card (A \\<inter> B)", "by auto"], ["proof (state)\nthis:\n  0 < card (A \\<inter> B)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {B. A \\<inter> B \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})\n 2. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..card A}.\n                   {B. card (A \\<inter> B) = n}) \\<Longrightarrow>\n       x \\<in> {B. A \\<inter> B \\<noteq> {}}", "moreover"], ["proof (state)\nthis:\n  0 < card (A \\<inter> B)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {B. A \\<inter> B \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})\n 2. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..card A}.\n                   {B. card (A \\<inter> B) = n}) \\<Longrightarrow>\n       x \\<in> {B. A \\<inter> B \\<noteq> {}}", "have \"card (A \\<inter> B) \\<le> card A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (A \\<inter> B) \\<le> card A", "using assms"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. card (A \\<inter> B) \\<le> card A", "by (simp add: card_mono)"], ["proof (state)\nthis:\n  card (A \\<inter> B) \\<le> card A\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {B. A \\<inter> B \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})\n 2. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..card A}.\n                   {B. card (A \\<inter> B) = n}) \\<Longrightarrow>\n       x \\<in> {B. A \\<inter> B \\<noteq> {}}", "ultimately"], ["proof (chain)\npicking this:\n  0 < card (A \\<inter> B)\n  card (A \\<inter> B) \\<le> card A", "have \"card (A \\<inter> B) \\<in> {1..card A}\""], ["proof (prove)\nusing this:\n  0 < card (A \\<inter> B)\n  card (A \\<inter> B) \\<le> card A\n\ngoal (1 subgoal):\n 1. card (A \\<inter> B) \\<in> {1..card A}", "by simp"], ["proof (state)\nthis:\n  card (A \\<inter> B) \\<in> {1..card A}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {B. A \\<inter> B \\<noteq> {}} \\<Longrightarrow>\n       x \\<in> (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})\n 2. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..card A}.\n                   {B. card (A \\<inter> B) = n}) \\<Longrightarrow>\n       x \\<in> {B. A \\<inter> B \\<noteq> {}}", "thus \"B \\<in> (\\<Union>n \\<in> {1..card A}. {B. card (A \\<inter> B) = n})\""], ["proof (prove)\nusing this:\n  card (A \\<inter> B) \\<in> {1..card A}\n\ngoal (1 subgoal):\n 1. B \\<in> (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})", "by blast"], ["proof (state)\nthis:\n  B \\<in> (\\<Union>n\\<in>{1..card A}. {B. card (A \\<inter> B) = n})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>n\\<in>{1..card A}.\n                   {B. card (A \\<inter> B) = n}) \\<Longrightarrow>\n       x \\<in> {B. A \\<inter> B \\<noteq> {}}", "qed force"], ["", "lemma card_set_of_intersecting_sets_by_card:\n  assumes \"A \\<subseteq> I\" \"finite I\" \"k \\<le> n\" \"n \\<le> card I\" \"k \\<le> card A\"\n  shows \"card {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} = (card A choose k) * ((card I - card A) choose (n - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "note finite_A = finite_subset[OF assms(1,2)]"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "have \"card {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} = card ({K. K \\<subseteq> A \\<and> card K = k} \\<times> {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\" (is \"card ?lhs = card ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    card\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "proof (rule bij_betw_same_card[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw ?f\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}", "let ?f = \"\\<lambda>(K, B'). K \\<union> B'\""], ["proof (state)\ngoal (1 subgoal):\n 1. bij_betw ?f\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}", "have \"inj_on ?f ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>(x, y). x \\<union> y)\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "by (blast intro: inj_onI)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>(x, y). x \\<union> y)\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n\ngoal (1 subgoal):\n 1. bij_betw ?f\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}", "moreover"], ["proof (state)\nthis:\n  inj_on (\\<lambda>(x, y). x \\<union> y)\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n\ngoal (1 subgoal):\n 1. bij_betw ?f\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}", "have \"?f ` ?rhs = ?lhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y). x \\<union> y) `\n    ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n     {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n    {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}", "proof (rule set_eqI, rule iffI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'.\n                 B' \\<subseteq> I - A \\<and>\n                 card B' = n - k}) \\<Longrightarrow>\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and> card (A \\<inter> B) = k}\n 2. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "fix B"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'.\n                 B' \\<subseteq> I - A \\<and>\n                 card B' = n - k}) \\<Longrightarrow>\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and> card (A \\<inter> B) = k}\n 2. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "assume \"B \\<in> ?f ` ?rhs\""], ["proof (state)\nthis:\n  B \\<in> (\\<lambda>(x, y). x \\<union> y) `\n          ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n           {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'.\n                 B' \\<subseteq> I - A \\<and>\n                 card B' = n - k}) \\<Longrightarrow>\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and> card (A \\<inter> B) = k}\n 2. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "then"], ["proof (chain)\npicking this:\n  B \\<in> (\\<lambda>(x, y). x \\<union> y) `\n          ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n           {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "obtain K B' where K: \"K \\<subseteq> A\" \"card K = k\" \"B' \\<subseteq> I - A\" \"card B' = n - k\" \"K \\<union> B' = B\""], ["proof (prove)\nusing this:\n  B \\<in> (\\<lambda>(x, y). x \\<union> y) `\n          ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n           {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n\ngoal (1 subgoal):\n 1. (\\<And>K B'.\n        \\<lbrakk>K \\<subseteq> A; card K = k; B' \\<subseteq> I - A;\n         card B' = n - k; K \\<union> B' = B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  K \\<subseteq> A\n  card K = k\n  B' \\<subseteq> I - A\n  card B' = n - k\n  K \\<union> B' = B\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'.\n                 B' \\<subseteq> I - A \\<and>\n                 card B' = n - k}) \\<Longrightarrow>\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and> card (A \\<inter> B) = k}\n 2. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "show \"B \\<in> ?lhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> {B. B \\<subseteq> I \\<and>\n                card B = n \\<and> card (A \\<inter> B) = k}", "proof safe"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> I\n 2. card B = n\n 3. card (A \\<inter> B) = k", "fix x"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> I\n 2. card B = n\n 3. card (A \\<inter> B) = k", "assume \"x \\<in> B\""], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> I\n 2. card B = n\n 3. card (A \\<inter> B) = k", "thus \"x \\<in> I\""], ["proof (prove)\nusing this:\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. x \\<in> I", "using K \\<open>A \\<subseteq> I\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> B\n  K \\<subseteq> A\n  card K = k\n  B' \\<subseteq> I - A\n  card B' = n - k\n  K \\<union> B' = B\n  A \\<subseteq> I\n\ngoal (1 subgoal):\n 1. x \\<in> I", "by blast"], ["proof (state)\nthis:\n  x \\<in> I\n\ngoal (2 subgoals):\n 1. card B = n\n 2. card (A \\<inter> B) = k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. card B = n\n 2. card (A \\<inter> B) = k", "have \"card B = card K + card B' - card (K \\<inter> B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B = card K + card B' - card (K \\<inter> B')", "using K assms"], ["proof (prove)\nusing this:\n  K \\<subseteq> A\n  card K = k\n  B' \\<subseteq> I - A\n  card B' = n - k\n  K \\<union> B' = B\n  A \\<subseteq> I\n  finite I\n  k \\<le> n\n  n \\<le> card I\n  k \\<le> card A\n\ngoal (1 subgoal):\n 1. card B = card K + card B' - card (K \\<inter> B')", "by (metis card_union finite_A finite_subset finite_Diff)"], ["proof (state)\nthis:\n  card B = card K + card B' - card (K \\<inter> B')\n\ngoal (2 subgoals):\n 1. card B = n\n 2. card (A \\<inter> B) = k", "moreover"], ["proof (state)\nthis:\n  card B = card K + card B' - card (K \\<inter> B')\n\ngoal (2 subgoals):\n 1. card B = n\n 2. card (A \\<inter> B) = k", "have \"K \\<inter> B' = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K \\<inter> B' = {}", "using K assms"], ["proof (prove)\nusing this:\n  K \\<subseteq> A\n  card K = k\n  B' \\<subseteq> I - A\n  card B' = n - k\n  K \\<union> B' = B\n  A \\<subseteq> I\n  finite I\n  k \\<le> n\n  n \\<le> card I\n  k \\<le> card A\n\ngoal (1 subgoal):\n 1. K \\<inter> B' = {}", "by blast"], ["proof (state)\nthis:\n  K \\<inter> B' = {}\n\ngoal (2 subgoals):\n 1. card B = n\n 2. card (A \\<inter> B) = k", "ultimately"], ["proof (chain)\npicking this:\n  card B = card K + card B' - card (K \\<inter> B')\n  K \\<inter> B' = {}", "show \"card B = n\""], ["proof (prove)\nusing this:\n  card B = card K + card B' - card (K \\<inter> B')\n  K \\<inter> B' = {}\n\ngoal (1 subgoal):\n 1. card B = n", "using K assms"], ["proof (prove)\nusing this:\n  card B = card K + card B' - card (K \\<inter> B')\n  K \\<inter> B' = {}\n  K \\<subseteq> A\n  card K = k\n  B' \\<subseteq> I - A\n  card B' = n - k\n  K \\<union> B' = B\n  A \\<subseteq> I\n  finite I\n  k \\<le> n\n  n \\<le> card I\n  k \\<le> card A\n\ngoal (1 subgoal):\n 1. card B = n", "by simp"], ["proof (state)\nthis:\n  card B = n\n\ngoal (1 subgoal):\n 1. card (A \\<inter> B) = k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. card (A \\<inter> B) = k", "have \"A \\<inter> B = K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> B = K", "using K assms(1)"], ["proof (prove)\nusing this:\n  K \\<subseteq> A\n  card K = k\n  B' \\<subseteq> I - A\n  card B' = n - k\n  K \\<union> B' = B\n  A \\<subseteq> I\n\ngoal (1 subgoal):\n 1. A \\<inter> B = K", "by blast"], ["proof (state)\nthis:\n  A \\<inter> B = K\n\ngoal (1 subgoal):\n 1. card (A \\<inter> B) = k", "thus \"card (A \\<inter> B) = k\""], ["proof (prove)\nusing this:\n  A \\<inter> B = K\n\ngoal (1 subgoal):\n 1. card (A \\<inter> B) = k", "using K"], ["proof (prove)\nusing this:\n  A \\<inter> B = K\n  K \\<subseteq> A\n  card K = k\n  B' \\<subseteq> I - A\n  card B' = n - k\n  K \\<union> B' = B\n\ngoal (1 subgoal):\n 1. card (A \\<inter> B) = k", "by simp"], ["proof (state)\nthis:\n  card (A \\<inter> B) = k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<in> {B. B \\<subseteq> I \\<and>\n              card B = n \\<and> card (A \\<inter> B) = k}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "fix B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "assume \"B \\<in> ?lhs\""], ["proof (state)\nthis:\n  B \\<in> {B. B \\<subseteq> I \\<and>\n              card B = n \\<and> card (A \\<inter> B) = k}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "hence B: \"B \\<subseteq> I\" \"card B = n\" \"card (A \\<inter> B) = k\""], ["proof (prove)\nusing this:\n  B \\<in> {B. B \\<subseteq> I \\<and>\n              card B = n \\<and> card (A \\<inter> B) = k}\n\ngoal (1 subgoal):\n 1. B \\<subseteq> I &&& card B = n &&& card (A \\<inter> B) = k", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> I\n  card B = n\n  card (A \\<inter> B) = k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "let ?K = \"A \\<inter> B\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "let ?B' = \"B - A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "have \"?K \\<subseteq> A\" \"card ?K = k\" \"?B' \\<subseteq> I - A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> B \\<subseteq> A &&&\n    card (A \\<inter> B) = k &&& B - A \\<subseteq> I - A", "using B"], ["proof (prove)\nusing this:\n  B \\<subseteq> I\n  card B = n\n  card (A \\<inter> B) = k\n\ngoal (1 subgoal):\n 1. A \\<inter> B \\<subseteq> A &&&\n    card (A \\<inter> B) = k &&& B - A \\<subseteq> I - A", "by auto"], ["proof (state)\nthis:\n  A \\<inter> B \\<subseteq> A\n  card (A \\<inter> B) = k\n  B - A \\<subseteq> I - A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "moreover"], ["proof (state)\nthis:\n  A \\<inter> B \\<subseteq> A\n  card (A \\<inter> B) = k\n  B - A \\<subseteq> I - A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "have \"card ?B' = n - k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (B - A) = n - k", "using B finite_A assms(1)"], ["proof (prove)\nusing this:\n  B \\<subseteq> I\n  card B = n\n  card (A \\<inter> B) = k\n  finite A\n  A \\<subseteq> I\n\ngoal (1 subgoal):\n 1. card (B - A) = n - k", "by (metis Int_commute card_Diff_subset_Int finite_Un inf.left_idem le_iff_inf sup_absorb2)"], ["proof (state)\nthis:\n  card (B - A) = n - k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "ultimately"], ["proof (chain)\npicking this:\n  A \\<inter> B \\<subseteq> A\n  card (A \\<inter> B) = k\n  B - A \\<subseteq> I - A\n  card (B - A) = n - k", "have \"(?K, ?B') \\<in> ?rhs\""], ["proof (prove)\nusing this:\n  A \\<inter> B \\<subseteq> A\n  card (A \\<inter> B) = k\n  B - A \\<subseteq> I - A\n  card (B - A) = n - k\n\ngoal (1 subgoal):\n 1. (A \\<inter> B, B - A)\n    \\<in> {K. K \\<subseteq> A \\<and> card K = k} \\<times>\n          {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}", "by blast"], ["proof (state)\nthis:\n  (A \\<inter> B, B - A)\n  \\<in> {K. K \\<subseteq> A \\<and> card K = k} \\<times>\n        {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "moreover"], ["proof (state)\nthis:\n  (A \\<inter> B, B - A)\n  \\<in> {K. K \\<subseteq> A \\<and> card K = k} \\<times>\n        {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "have \"B = ?f (?K, ?B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B = (case (A \\<inter> B, B - A) of (x, xa) \\<Rightarrow> x \\<union> xa)", "by auto"], ["proof (state)\nthis:\n  B = (case (A \\<inter> B, B - A) of (x, xa) \\<Rightarrow> x \\<union> xa)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {B. B \\<subseteq> I \\<and>\n                   card B = n \\<and>\n                   card (A \\<inter> B) = k} \\<Longrightarrow>\n       x \\<in> (\\<lambda>(x, y). x \\<union> y) `\n               ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n                {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "ultimately"], ["proof (chain)\npicking this:\n  (A \\<inter> B, B - A)\n  \\<in> {K. K \\<subseteq> A \\<and> card K = k} \\<times>\n        {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}\n  B = (case (A \\<inter> B, B - A) of (x, xa) \\<Rightarrow> x \\<union> xa)", "show \"B \\<in> ?f ` ?rhs\""], ["proof (prove)\nusing this:\n  (A \\<inter> B, B - A)\n  \\<in> {K. K \\<subseteq> A \\<and> card K = k} \\<times>\n        {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}\n  B = (case (A \\<inter> B, B - A) of (x, xa) \\<Rightarrow> x \\<union> xa)\n\ngoal (1 subgoal):\n 1. B \\<in> (\\<lambda>(x, y). x \\<union> y) `\n            ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n             {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "by blast"], ["proof (state)\nthis:\n  B \\<in> (\\<lambda>(x, y). x \\<union> y) `\n          ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n           {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>(x, y). x \\<union> y) `\n  ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n   {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n  {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}\n\ngoal (1 subgoal):\n 1. bij_betw ?f\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}", "ultimately"], ["proof (chain)\npicking this:\n  inj_on (\\<lambda>(x, y). x \\<union> y)\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n  (\\<lambda>(x, y). x \\<union> y) `\n  ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n   {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n  {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}", "show \"bij_betw ?f ?rhs ?lhs\""], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>(x, y). x \\<union> y)\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n  (\\<lambda>(x, y). x \\<union> y) `\n  ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n   {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n  {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>(x, y). x \\<union> y)\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on (\\<lambda>(x, y). x \\<union> y)\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n  (\\<lambda>(x, y). x \\<union> y) `\n  ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n   {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n  {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}\n\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>(x, y). x \\<union> y)\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) \\<and>\n    (\\<lambda>(x, y). x \\<union> y) `\n    ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n     {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n    {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}", ".."], ["proof (state)\nthis:\n  bij_betw (\\<lambda>(x, y). x \\<union> y)\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n   {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n  card\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "also"], ["proof (state)\nthis:\n  card\n   {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n  card\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "have \"\\<dots> = (\\<Sum>K | K \\<subseteq> A \\<and> card K = k. card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n      {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n    (\\<Sum>K | K \\<subseteq> A \\<and> card K = k.\n       card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})", "proof (rule card_SigmaI, safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {K. K \\<subseteq> A \\<and> card K = k}\n 2. \\<And>K.\n       \\<lbrakk>K \\<subseteq> A; k = card K\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {B'.\n                           B' \\<subseteq> I - A \\<and> card B' = n - card K}", "show \"finite {K. K \\<subseteq> A \\<and> card K = k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {K. K \\<subseteq> A \\<and> card K = k}", "by (blast intro: finite_subset[where B = \"Pow A\"] finite_A)"], ["proof (state)\nthis:\n  finite {K. K \\<subseteq> A \\<and> card K = k}\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> A; k = card K\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {B'.\n                           B' \\<subseteq> I - A \\<and> card B' = n - card K}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> A; k = card K\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {B'.\n                           B' \\<subseteq> I - A \\<and> card B' = n - card K}", "fix K"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> A; k = card K\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {B'.\n                           B' \\<subseteq> I - A \\<and> card B' = n - card K}", "assume \"K \\<subseteq> A\""], ["proof (state)\nthis:\n  K \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>K.\n       \\<lbrakk>K \\<subseteq> A; k = card K\\<rbrakk>\n       \\<Longrightarrow> finite\n                          {B'.\n                           B' \\<subseteq> I - A \\<and> card B' = n - card K}", "thus \"finite {B'. B' \\<subseteq> I - A \\<and> card B' = n - card K}\""], ["proof (prove)\nusing this:\n  K \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite {B'. B' \\<subseteq> I - A \\<and> card B' = n - card K}", "using assms"], ["proof (prove)\nusing this:\n  K \\<subseteq> A\n  A \\<subseteq> I\n  finite I\n  k \\<le> n\n  n \\<le> card I\n  k \\<le> card A\n\ngoal (1 subgoal):\n 1. finite {B'. B' \\<subseteq> I - A \\<and> card B' = n - card K}", "by auto"], ["proof (state)\nthis:\n  finite {B'. B' \\<subseteq> I - A \\<and> card B' = n - card K}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n  (\\<Sum>K | K \\<subseteq> A \\<and> card K = k.\n     card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "also"], ["proof (state)\nthis:\n  card\n   ({K. K \\<subseteq> A \\<and> card K = k} \\<times>\n    {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n  (\\<Sum>K | K \\<subseteq> A \\<and> card K = k.\n     card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k})\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "have \"\\<dots> = card {K. K \\<subseteq> A \\<and> card K = k} * card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>K | K \\<subseteq> A \\<and> card K = k.\n       card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n    card {K. K \\<subseteq> A \\<and> card K = k} *\n    card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>K | K \\<subseteq> A \\<and> card K = k.\n     card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n  card {K. K \\<subseteq> A \\<and> card K = k} *\n  card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "also"], ["proof (state)\nthis:\n  (\\<Sum>K | K \\<subseteq> A \\<and> card K = k.\n     card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}) =\n  card {K. K \\<subseteq> A \\<and> card K = k} *\n  card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k}\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "have \"\\<dots> = (card A choose k) * (card (I - A) choose (n - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {K. K \\<subseteq> A \\<and> card K = k} *\n    card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k} =\n    (card A choose k) * (card (I - A) choose (n - k))", "by (simp only: n_subsets[OF finite_A] n_subsets[OF finite_Diff[OF assms(2)]])"], ["proof (state)\nthis:\n  card {K. K \\<subseteq> A \\<and> card K = k} *\n  card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k} =\n  (card A choose k) * (card (I - A) choose (n - k))\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "also"], ["proof (state)\nthis:\n  card {K. K \\<subseteq> A \\<and> card K = k} *\n  card {B'. B' \\<subseteq> I - A \\<and> card B' = n - k} =\n  (card A choose k) * (card (I - A) choose (n - k))\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "have \"\\<dots> = (card A choose k) * ((card I - card A) choose (n - k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (card A choose k) * (card (I - A) choose (n - k)) =\n    (card A choose k) * (card I - card A choose (n - k))", "by (simp only: card_Diff_subset[OF finite_A assms(1)])"], ["proof (state)\nthis:\n  (card A choose k) * (card (I - A) choose (n - k)) =\n  (card A choose k) * (card I - card A choose (n - k))\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "finally"], ["proof (chain)\npicking this:\n  card\n   {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n  (card A choose k) * (card I - card A choose (n - k))", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n  (card A choose k) * (card I - card A choose (n - k))\n\ngoal (1 subgoal):\n 1. card\n     {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n    (card A choose k) * (card I - card A choose (n - k))", "."], ["proof (state)\nthis:\n  card\n   {B. B \\<subseteq> I \\<and> card B = n \\<and> card (A \\<inter> B) = k} =\n  (card A choose k) * (card I - card A choose (n - k))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma card_dep_pair_set:\n  assumes \"finite A\" \"\\<And>a. a \\<subseteq> A \\<Longrightarrow> finite (f a)\"\n  shows \"card {(a, b). a \\<subseteq> A \\<and> card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} = (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)\" (is \"card ?S = ?C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {(a, b).\n      a \\<subseteq> A \\<and>\n      card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     {(a, b).\n      a \\<subseteq> A \\<and>\n      card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "have S: \"?S = Sigma {a. a \\<subseteq> A \\<and> card a = n} (\\<lambda>a. {b. b \\<subseteq> f a \\<and> card b = g a})\" (is \"_ = Sigma ?A ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(a, b).\n     a \\<subseteq> A \\<and>\n     card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n    (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n        {b. b \\<subseteq> f a \\<and> card b = g a})", "by auto"], ["proof (state)\nthis:\n  {(a, b).\n   a \\<subseteq> A \\<and>\n   card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n  (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n      {b. b \\<subseteq> f a \\<and> card b = g a})\n\ngoal (1 subgoal):\n 1. card\n     {(a, b).\n      a \\<subseteq> A \\<and>\n      card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "have \"card (Sigma ?A ?B) = (\\<Sum>a \\<in> {a. a \\<subseteq> A \\<and> card a = n}. card (?B a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n         {b. b \\<subseteq> f a \\<and> card b = g a}) =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n.\n       card {b. b \\<subseteq> f a \\<and> card b = g a})", "proof (rule card_SigmaI, safe)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {a. a \\<subseteq> A \\<and> card a = n}\n 2. \\<And>a.\n       \\<lbrakk>a \\<subseteq> A; n = card a\\<rbrakk>\n       \\<Longrightarrow> finite {b. b \\<subseteq> f a \\<and> card b = g a}", "show \"finite ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {a. a \\<subseteq> A \\<and> card a = n}", "by (rule finite_subset[OF _ finite_Collect_subsets[OF assms(1)]]) blast"], ["proof (state)\nthis:\n  finite {a. a \\<subseteq> A \\<and> card a = n}\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<subseteq> A; n = card a\\<rbrakk>\n       \\<Longrightarrow> finite {b. b \\<subseteq> f a \\<and> card b = g a}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<subseteq> A; n = card a\\<rbrakk>\n       \\<Longrightarrow> finite {b. b \\<subseteq> f a \\<and> card b = g a}", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<subseteq> A; n = card a\\<rbrakk>\n       \\<Longrightarrow> finite {b. b \\<subseteq> f a \\<and> card b = g a}", "assume \"a \\<subseteq> A\""], ["proof (state)\nthis:\n  a \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<subseteq> A; n = card a\\<rbrakk>\n       \\<Longrightarrow> finite {b. b \\<subseteq> f a \\<and> card b = g a}", "hence \"finite (f a)\""], ["proof (prove)\nusing this:\n  a \\<subseteq> A\n\ngoal (1 subgoal):\n 1. finite (f a)", "by (fact assms(2))"], ["proof (state)\nthis:\n  finite (f a)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<subseteq> A; n = card a\\<rbrakk>\n       \\<Longrightarrow> finite {b. b \\<subseteq> f a \\<and> card b = g a}", "thus \"finite (?B a)\""], ["proof (prove)\nusing this:\n  finite (f a)\n\ngoal (1 subgoal):\n 1. finite {b. b \\<subseteq> f a \\<and> card b = g a}", "by (rule finite_subset[rotated, OF finite_Collect_subsets]) blast"], ["proof (state)\nthis:\n  finite {b. b \\<subseteq> f a \\<and> card b = g a}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n       {b. b \\<subseteq> f a \\<and> card b = g a}) =\n  (\\<Sum>a | a \\<subseteq> A \\<and> card a = n.\n     card {b. b \\<subseteq> f a \\<and> card b = g a})\n\ngoal (1 subgoal):\n 1. card\n     {(a, b).\n      a \\<subseteq> A \\<and>\n      card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "also"], ["proof (state)\nthis:\n  card\n   (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n       {b. b \\<subseteq> f a \\<and> card b = g a}) =\n  (\\<Sum>a | a \\<subseteq> A \\<and> card a = n.\n     card {b. b \\<subseteq> f a \\<and> card b = g a})\n\ngoal (1 subgoal):\n 1. card\n     {(a, b).\n      a \\<subseteq> A \\<and>\n      card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "have \"\\<dots> = ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a | a \\<subseteq> A \\<and> card a = n.\n       card {b. b \\<subseteq> f a \\<and> card b = g a}) =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "proof (rule sum.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. {a. a \\<subseteq> A \\<and> card a = n} =\n    {a. a \\<subseteq> A \\<and> card a = n}\n 2. \\<And>x.\n       x \\<in> {a. a \\<subseteq> A \\<and> card a = n} \\<Longrightarrow>\n       card {b. b \\<subseteq> f x \\<and> card b = g x} =\n       card (f x) choose g x", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. {a. a \\<subseteq> A \\<and> card a = n} =\n    {a. a \\<subseteq> A \\<and> card a = n}\n 2. \\<And>x.\n       x \\<in> {a. a \\<subseteq> A \\<and> card a = n} \\<Longrightarrow>\n       card {b. b \\<subseteq> f x \\<and> card b = g x} =\n       card (f x) choose g x", "assume \"a \\<in> {a. a \\<subseteq> A \\<and> card a = n}\""], ["proof (state)\nthis:\n  a \\<in> {a. a \\<subseteq> A \\<and> card a = n}\n\ngoal (2 subgoals):\n 1. {a. a \\<subseteq> A \\<and> card a = n} =\n    {a. a \\<subseteq> A \\<and> card a = n}\n 2. \\<And>x.\n       x \\<in> {a. a \\<subseteq> A \\<and> card a = n} \\<Longrightarrow>\n       card {b. b \\<subseteq> f x \\<and> card b = g x} =\n       card (f x) choose g x", "hence \"finite (f a)\""], ["proof (prove)\nusing this:\n  a \\<in> {a. a \\<subseteq> A \\<and> card a = n}\n\ngoal (1 subgoal):\n 1. finite (f a)", "using assms(2)"], ["proof (prove)\nusing this:\n  a \\<in> {a. a \\<subseteq> A \\<and> card a = n}\n  ?a \\<subseteq> A \\<Longrightarrow> finite (f ?a)\n\ngoal (1 subgoal):\n 1. finite (f a)", "by blast"], ["proof (state)\nthis:\n  finite (f a)\n\ngoal (2 subgoals):\n 1. {a. a \\<subseteq> A \\<and> card a = n} =\n    {a. a \\<subseteq> A \\<and> card a = n}\n 2. \\<And>x.\n       x \\<in> {a. a \\<subseteq> A \\<and> card a = n} \\<Longrightarrow>\n       card {b. b \\<subseteq> f x \\<and> card b = g x} =\n       card (f x) choose g x", "thus \"card (?B a) = card (f a) choose g a\""], ["proof (prove)\nusing this:\n  finite (f a)\n\ngoal (1 subgoal):\n 1. card {b. b \\<subseteq> f a \\<and> card b = g a} = card (f a) choose g a", "by (fact n_subsets)"], ["proof (state)\nthis:\n  card {b. b \\<subseteq> f a \\<and> card b = g a} = card (f a) choose g a\n\ngoal (1 subgoal):\n 1. {a. a \\<subseteq> A \\<and> card a = n} =\n    {a. a \\<subseteq> A \\<and> card a = n}", "qed simp"], ["proof (state)\nthis:\n  (\\<Sum>a | a \\<subseteq> A \\<and> card a = n.\n     card {b. b \\<subseteq> f a \\<and> card b = g a}) =\n  (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)\n\ngoal (1 subgoal):\n 1. card\n     {(a, b).\n      a \\<subseteq> A \\<and>\n      card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "finally"], ["proof (chain)\npicking this:\n  card\n   (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n       {b. b \\<subseteq> f a \\<and> card b = g a}) =\n  (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "have \"card (Sigma ?A ?B) = ?C\""], ["proof (prove)\nusing this:\n  card\n   (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n       {b. b \\<subseteq> f a \\<and> card b = g a}) =\n  (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)\n\ngoal (1 subgoal):\n 1. card\n     (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n         {b. b \\<subseteq> f a \\<and> card b = g a}) =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "."], ["proof (state)\nthis:\n  card\n   (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n       {b. b \\<subseteq> f a \\<and> card b = g a}) =\n  (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)\n\ngoal (1 subgoal):\n 1. card\n     {(a, b).\n      a \\<subseteq> A \\<and>\n      card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  card\n   (SIGMA a:{a. a \\<subseteq> A \\<and> card a = n}.\n       {b. b \\<subseteq> f a \\<and> card b = g a}) =\n  (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)\n\ngoal (1 subgoal):\n 1. card\n     {(a, b).\n      a \\<subseteq> A \\<and>\n      card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n    (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)", "by (subst S)"], ["proof (state)\nthis:\n  card\n   {(a, b).\n    a \\<subseteq> A \\<and>\n    card a = n \\<and> b \\<subseteq> f a \\<and> card b = g a} =\n  (\\<Sum>a | a \\<subseteq> A \\<and> card a = n. card (f a) choose g a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_cancel_nat:\n  \\<comment> \\<open>Contributed by Manuel Eberl\\<close>\n  fixes f::\"'a \\<Rightarrow> nat\"\n  assumes \"B \\<subseteq> A\" and \"finite A\" and \"\\<forall>x\\<in>B. f x \\<noteq> 0\"\n  shows \"prod f A / prod f B = prod f (A - B)\" (is \"?A / ?B = ?C\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. real (prod f A) / real (prod f B) = real (prod f (A - B))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. real (prod f A) / real (prod f B) = real (prod f (A - B))", "from prod.subset_diff[OF assms(1,2)]"], ["proof (chain)\npicking this:\n  prod ?g A = prod ?g (A - B) * prod ?g B", "have \"?A = ?C * ?B\""], ["proof (prove)\nusing this:\n  prod ?g A = prod ?g (A - B) * prod ?g B\n\ngoal (1 subgoal):\n 1. real (prod f A) = real (prod f (A - B)) * real (prod f B)", "by auto"], ["proof (state)\nthis:\n  real (prod f A) = real (prod f (A - B)) * real (prod f B)\n\ngoal (1 subgoal):\n 1. real (prod f A) / real (prod f B) = real (prod f (A - B))", "moreover"], ["proof (state)\nthis:\n  real (prod f A) = real (prod f (A - B)) * real (prod f B)\n\ngoal (1 subgoal):\n 1. real (prod f A) / real (prod f B) = real (prod f (A - B))", "have \"?B \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (prod f B) \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  finite A\n  \\<forall>x\\<in>B. f x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. real (prod f B) \\<noteq> 0", "by (simp add: finite_subset)"], ["proof (state)\nthis:\n  real (prod f B) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. real (prod f A) / real (prod f B) = real (prod f (A - B))", "ultimately"], ["proof (chain)\npicking this:\n  real (prod f A) = real (prod f (A - B)) * real (prod f B)\n  real (prod f B) \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  real (prod f A) = real (prod f (A - B)) * real (prod f B)\n  real (prod f B) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. real (prod f A) / real (prod f B) = real (prod f (A - B))", "by simp"], ["proof (state)\nthis:\n  real (prod f A) / real (prod f B) = real (prod f (A - B))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prod_id_cancel_nat:\n  \\<comment> \\<open>Contributed by Manuel Eberl\\<close>\n  fixes A::\"nat set\"\n  assumes \"B \\<subseteq> A\" and \"finite A\" and \"0 \\<notin> B\"\n  shows \"\\<Prod>A / \\<Prod>B = \\<Prod>(A-B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real (\\<Prod>A) / real (\\<Prod>B) = real (\\<Prod>(A - B))", "using assms(1-2)"], ["proof (prove)\nusing this:\n  B \\<subseteq> A\n  finite A\n\ngoal (1 subgoal):\n 1. real (\\<Prod>A) / real (\\<Prod>B) = real (\\<Prod>(A - B))", "by (rule prod_cancel_nat) (metis assms(3))"], ["", "lemma (in prob_space) integrable_squareD:\n  \\<comment> \\<open>Contributed by Johannes H?lzl\\<close>\n  fixes X :: \"_ \\<Rightarrow> real\"\n  assumes \"integrable M (\\<lambda>x. (X x)^2)\" \"X \\<in> borel_measurable M\"\n  shows \"integrable M X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M X", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. integrable M X", "have \"integrable M (\\<lambda>x. max 1 ((X x)^2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. max 1 ((X x)\\<^sup>2))", "using assms"], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. (X x)\\<^sup>2)\n  random_variable borel X\n\ngoal (1 subgoal):\n 1. integrable M (\\<lambda>x. max 1 ((X x)\\<^sup>2))", "by auto"], ["proof (state)\nthis:\n  integrable M (\\<lambda>x. max 1 ((X x)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. integrable M X", "then"], ["proof (chain)\npicking this:\n  integrable M (\\<lambda>x. max 1 ((X x)\\<^sup>2))", "show \"integrable M X\""], ["proof (prove)\nusing this:\n  integrable M (\\<lambda>x. max 1 ((X x)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. integrable M X", "proof (rule Bochner_Integration.integrable_bound[OF _ _ always_eventually[OF allI]])"], ["proof (state)\ngoal (2 subgoals):\n 1. random_variable borel X\n 2. \\<And>x. norm (X x) \\<le> norm (max 1 ((X x)\\<^sup>2))", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. random_variable borel X\n 2. \\<And>x. norm (X x) \\<le> norm (max 1 ((X x)\\<^sup>2))", "show \"norm (X x) \\<le> norm (max 1 ((X x)^2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (X x) \\<le> norm (max 1 ((X x)\\<^sup>2))", "using abs_le_square_iff[of 1 \"X x\"] power_increasing[of 1 2 \"abs (X x)\"]"], ["proof (prove)\nusing this:\n  (\\<bar>1\\<bar> \\<le> \\<bar>X x\\<bar>) = (1\\<^sup>2 \\<le> (X x)\\<^sup>2)\n  \\<lbrakk>1 \\<le> 2; 1 \\<le> \\<bar>X x\\<bar>\\<rbrakk>\n  \\<Longrightarrow> \\<bar>X x\\<bar> ^ 1 \\<le> \\<bar>X x\\<bar>\\<^sup>2\n\ngoal (1 subgoal):\n 1. norm (X x) \\<le> norm (max 1 ((X x)\\<^sup>2))", "by (auto split: split_max)"], ["proof (state)\nthis:\n  norm (X x) \\<le> norm (max 1 ((X x)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. random_variable borel X", "qed fact"], ["proof (state)\nthis:\n  integrable M X\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}