{"file_name": "/home/qj213/afp-2021-10-22/thys/Affine_Arithmetic/Ex_Ineqs.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Affine_Arithmetic", "problem_names": ["lemma schwefel:\n  \"5.8806 / 10 ^ 10 + (x0 - (x1)\\<^sup>2)\\<^sup>2 + (x1 - 1)\\<^sup>2 + (x0 - (x2)\\<^sup>2)\\<^sup>2 + (x2 - 1)\\<^sup>2 =\n  interpret_floatarith schwefel [x0, x1, x2]\"", "lemma \"prove_pos_slp [] 30 schwefel 100000 [aforms_of_ivls [-10,-10,-10] [10,10,10]]\"", "lemma \"prove_pos_slp [] 20 delta6 10000 [aforms_of_ivls (replicate 6 4) (replicate 6 (FloatR 104045 (-14)))]\"", "lemma \"prove_pos_slp [] 20 caprasse 10000 [aforms_of_ivls (replicate 4 (1/2)) (replicate 4 (1/2))]\""], "translations": [["", "lemma schwefel:\n  \"5.8806 / 10 ^ 10 + (x0 - (x1)\\<^sup>2)\\<^sup>2 + (x1 - 1)\\<^sup>2 + (x0 - (x2)\\<^sup>2)\\<^sup>2 + (x2 - 1)\\<^sup>2 =\n  interpret_floatarith schwefel [x0, x1, x2]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 58806 / 10 ^ 4 / 10 ^ 10 + (x0 - x1\\<^sup>2)\\<^sup>2 +\n    (x1 - 1)\\<^sup>2 +\n    (x0 - x2\\<^sup>2)\\<^sup>2 +\n    (x2 - 1)\\<^sup>2 =\n    interpret_floatarith schwefel [x0, x1, x2]", "by (simp add: schwefel_def)"], ["", "lemma \"prove_pos_slp [] 30 schwefel 100000 [aforms_of_ivls [-10,-10,-10] [10,10,10]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_pos_slp [] 30 schwefel 100000\n     [aforms_of_ivls [- 10, - 10, - 10] [10, 10, 10]]", "unfolding schwefel_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_pos_slp [] 30\n     (R\\<^sub>e 58806 / R\\<^sub>e (10 ^ 4) / R\\<^sub>e (10 ^ 10) +\n      Power (Var 0 - Power (Var 1) 2) 2 +\n      Power (Var 1 - 1) 2 +\n      Power (Var 0 - Power (Var 2) 2) 2 +\n      Power (Var 2 - 1) 2)\n     100000 [aforms_of_ivls [- 10, - 10, - 10] [10, 10, 10]]", "by eval"], ["", "definition \"delta6 = (Var 0 * Var 3 * (-Var 0 + Var 1 + Var 2 - Var 3 + Var 4 + Var 5) +\n    Var 1 * Var 4 * ( Var 0 - Var 1 + Var 2 + Var 3 - Var 4 + Var 5) +\n    Var 2 * Var 5 * ( Var 0 + Var 1 - Var 2 + Var 3 + Var 4 - Var 5)\n   - Var 1 * Var 2 * Var 3\n   - Var 0 * Var 2 * Var 4\n   - Var 0 * Var 1 * Var 5\n   - Var 3 * Var 4 * Var 5)\""], ["", "schematic_goal delta6:\n  \"(x0 * x3 * (-x0 + x1 + x2 - x3 + x4 + x5) +\n    x1 * x4 * ( x0 - x1 + x2 + x3 - x4 + x5) +\n    x2 * x5 * ( x0 + x1 - x2 + x3 + x4 - x5)\n   - x1 * x2 * x3\n   - x0 * x2 * x4\n   - x0 * x1 * x5\n   - x3 * x4 * x5) = interpret_floatarith delta6 [x0, x1, x2, x3, x4, x5]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x0 * x3 * (- x0 + x1 + x2 - x3 + x4 + x5) +\n    x1 * x4 * (x0 - x1 + x2 + x3 - x4 + x5) +\n    x2 * x5 * (x0 + x1 - x2 + x3 + x4 - x5) -\n    x1 * x2 * x3 -\n    x0 * x2 * x4 -\n    x0 * x1 * x5 -\n    x3 * x4 * x5 =\n    interpret_floatarith delta6 [x0, x1, x2, x3, x4, x5]", "by (simp add: delta6_def)"], ["", "lemma \"prove_pos_slp [] 20 delta6 10000 [aforms_of_ivls (replicate 6 4) (replicate 6 (FloatR 104045 (-14)))]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_pos_slp [] 20 delta6 10000\n     [aforms_of_ivls (replicate 6 4) (replicate 6 (FloatR 104045 (- 14)))]", "unfolding delta6_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_pos_slp [] 20\n     (Var 0 * Var 3 * (- Var 0 + Var 1 + Var 2 - Var 3 + Var 4 + Var 5) +\n      Var 1 * Var 4 * (Var 0 - Var 1 + Var 2 + Var 3 - Var 4 + Var 5) +\n      Var 2 * Var 5 * (Var 0 + Var 1 - Var 2 + Var 3 + Var 4 - Var 5) -\n      Var 1 * Var 2 * Var 3 -\n      Var 0 * Var 2 * Var 4 -\n      Var 0 * Var 1 * Var 5 -\n      Var 3 * Var 4 * Var 5)\n     10000\n     [aforms_of_ivls (replicate 6 4) (replicate 6 (FloatR 104045 (- 14)))]", "by eval"], ["", "definition \"caprasse = (3.1801 + - Var 0 * (Var 2) ^\\<^sub>e 3 + 4 * Var 1 * (Var 2)^\\<^sub>e2 * Var 3 +\n    4 * Var 0 * Var 2 * (Var 3)^\\<^sub>e2 + 2 * Var 1 * (Var 3)^\\<^sub>e3 + 4 * Var 0 * Var 2 + 4 * (Var 2)^\\<^sub>e2 - 10 * Var 1 * Var 3 +\n    -10 * (Var 3)^\\<^sub>e2 + 2)\""], ["", "schematic_goal caprasse:\n  \"(3.1801 + - xs!0 * (xs!2) ^ 3 + 4 * xs!1 * (xs!2)\\<^sup>2 * xs!3 +\n    4 * xs!0 * xs!2 * (xs!3)\\<^sup>2 + 2 * xs!1 * (xs!3)^3 + 4 * xs!0 * xs!2 + 4 * (xs!2)\\<^sup>2 - 10 * xs!1 * xs!3 +\n    -10 * (xs!3)\\<^sup>2 + 2) = interpret_floatarith caprasse xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 31801 / 10 ^ 4 + - xs ! 0 * xs ! 2 ^ 3 +\n    4 * xs ! 1 * (xs ! 2)\\<^sup>2 * xs ! 3 +\n    4 * xs ! 0 * xs ! 2 * (xs ! 3)\\<^sup>2 +\n    2 * xs ! 1 * xs ! 3 ^ 3 +\n    4 * xs ! 0 * xs ! 2 +\n    4 * (xs ! 2)\\<^sup>2 -\n    10 * xs ! 1 * xs ! 3 +\n    - 10 * (xs ! 3)\\<^sup>2 +\n    2 =\n    interpret_floatarith caprasse xs", "by (simp add: caprasse_def)"], ["", "lemma \"prove_pos_slp [] 20 caprasse 10000 [aforms_of_ivls (replicate 4 (1/2)) (replicate 4 (1/2))]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_pos_slp [] 20 caprasse 10000\n     [aforms_of_ivls (replicate 4 (1 / 2)) (replicate 4 (1 / 2))]", "unfolding caprasse_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prove_pos_slp [] 20\n     (R\\<^sub>e 31801 / R\\<^sub>e (10 ^ 4) + - Var 0 * Power (Var 2) 3 +\n      R\\<^sub>e 4 * Var 1 * Power (Var 2) 2 * Var 3 +\n      R\\<^sub>e 4 * Var 0 * Var 2 * Power (Var 3) 2 +\n      R\\<^sub>e 2 * Var 1 * Power (Var 3) 3 +\n      R\\<^sub>e 4 * Var 0 * Var 2 +\n      R\\<^sub>e 4 * Power (Var 2) 2 -\n      R\\<^sub>e 10 * Var 1 * Var 3 +\n      - R\\<^sub>e 10 * Power (Var 3) 2 +\n      R\\<^sub>e 2)\n     10000 [aforms_of_ivls (replicate 4 (1 / 2)) (replicate 4 (1 / 2))]", "by eval"], ["", "definition \"magnetism =\n  0.25001 + (Var 0)^\\<^sub>e2 + 2 * (Var 1)^\\<^sub>e2 + 2 * (Var 2)^\\<^sub>e2 + 2 * (Var 3)^\\<^sub>e2 + 2 * (Var 4)^\\<^sub>e2 + 2 * (Var 5)^\\<^sub>e2 +\n    2 * (Var 6)^\\<^sub>e2 - Var 0\""], ["", "schematic_goal magnetism:\n  \"0.25001 + (xs!0)\\<^sup>2 + 2 * (xs!1)\\<^sup>2 + 2 * (xs!2)\\<^sup>2 + 2 * (xs!3)\\<^sup>2 + 2 * (xs!4)\\<^sup>2 + 2 * (xs!5)\\<^sup>2 +\n    2 * (xs!6)\\<^sup>2 - xs!0 = interpret_floatarith magnetism xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 25001 / 10 ^ 5 + (xs ! 0)\\<^sup>2 + 2 * (xs ! 1)\\<^sup>2 +\n    2 * (xs ! 2)\\<^sup>2 +\n    2 * (xs ! 3)\\<^sup>2 +\n    2 * (xs ! 4)\\<^sup>2 +\n    2 * (xs ! 5)\\<^sup>2 +\n    2 * (xs ! 6)\\<^sup>2 -\n    xs ! 0 =\n    interpret_floatarith magnetism xs", "by (simp add: magnetism_def)"], ["", "end"], ["", "end"]]}